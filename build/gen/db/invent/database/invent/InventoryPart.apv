-----------------------------------------------------------------------------
--
--  Logical unit: InventoryPart
--  Type:         Entity
--  Component:    INVENT
--
--  Template:     3.0
--  Built by:     IFS Developer Studio
--
--  NOTE! Do not edit!! This file is completely generated and will be
--        overwritten next time the corresponding model is saved.
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
-------------------- PUBLIC VIEW DEFINITIONS --------------------------------
-----------------------------------------------------------------------------

PROMPT Creating INVENTORY_PART_PUB view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_PUB]
CREATE OR REPLACE VIEW INVENTORY_PART_PUB AS
SELECT contract                       contract,
       part_no                        part_no,
       accounting_group               accounting_group,
       asset_class                    asset_class,
       note_id                        note_id,
       part_product_code              part_product_code,
       part_product_family            part_product_family,
       part_status                    part_status,
       planner_buyer                  planner_buyer,
       prime_commodity                prime_commodity,
       second_commodity               second_commodity,
       unit_meas                      unit_meas,
       catch_unit_meas                catch_unit_meas,
       abc_class                      abc_class,
       dim_quality                    dim_quality,
       durability_day                 durability_day,
       lead_time_code                 lead_time_code_db,
       manuf_leadtime                 manuf_leadtime,
       oe_alloc_assign_flag           oe_alloc_assign_flag_db,
       onhand_analysis_flag           onhand_analysis_flag_db,
       purch_leadtime                 purch_leadtime,
       earliest_ultd_supply_date      earliest_ultd_supply_date,
       supersedes                     supersedes,
       supply_code                    supply_code_db,
       type_code                      type_code_db,
       customs_stat_no                customs_stat_no,
       type_designation               type_designation,
       zero_cost_flag                 zero_cost_flag_db,
       avail_activity_status          avail_activity_status_db,
       eng_attribute                  eng_attribute,
       shortage_flag                  shortage_flag_db,
       forecast_consumption_flag      forecast_consumption_flag_db,
       stock_management               stock_management_db,
       count_variance                 count_variance,
       intrastat_conv_factor          intrastat_conv_factor,
       part_cost_group_id             part_cost_group_id,
       dop_connection                 dop_connection_db,
       inventory_valuation_method     inventory_valuation_method_db,
       negative_on_hand               negative_on_hand_db,
       technical_coordinator_id       technical_coordinator_id,
       invoice_consideration          invoice_consideration_db,
       actual_cost_activated          actual_cost_activated,
       Inv_Part_Lead_Time_Code_API.Decode(lead_time_code) lead_time_code,
       max_actual_cost_update         max_actual_cost_update,
       expected_leadtime              expected_leadtime,
       inventory_part_cost_level      inventory_part_cost_level_db,
       co_reserve_onh_analys_flag     co_reserve_onh_analys_flag_db,
       qty_calc_rounding              qty_calc_rounding,      
       min_durab_days_co_deliv        min_durab_days_co_deliv,
       min_durab_days_planning        min_durab_days_planning,
       storage_width_requirement      storage_width_requirement,
       storage_height_requirement     storage_height_requirement,
       storage_depth_requirement      storage_depth_requirement,
       storage_volume_requirement     storage_volume_requirement,
       storage_weight_requirement     storage_weight_requirement,
       min_storage_temperature        min_storage_temperature,
       max_storage_temperature        max_storage_temperature,
       min_storage_humidity           min_storage_humidity,
       max_storage_humidity           max_storage_humidity,
       standard_putaway_qty           standard_putaway_qty,
       excl_ship_pack_proposal        excl_ship_pack_proposal_db,
       rowkey                         objkey
FROM   inventory_part_tab
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_PUB
   IS 'LU=InventoryPart^PROMPT=Inventory Part Pub^MODULE=INVENT^SERVER_ONLY=TRUE^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_PUB', 'contract', 'FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'accounting_group', 'FLAGS=A-IUL^DATATYPE=STRING(5)^PROMPT=Accounting Group^REF=AccountingGroup/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'asset_class', 'FLAGS=AMIU-^DATATYPE=STRING(2)/UPPERCASE^PROMPT=Asset Class^REF=AssetClass/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'note_id', 'FLAGS=A-I--^DATATYPE=NUMBER(10)^PROMPT=Note id^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'part_product_code', 'FLAGS=A-IU-^DATATYPE=STRING(5)^PROMPT=Part Product Code^REF=InventoryProductCode/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'part_product_family', 'FLAGS=A-IU-^DATATYPE=STRING(5)^PROMPT=Part Product Family^REF=InventoryProductFamily/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'part_status', 'FLAGS=AMIU-^DATATYPE=STRING(1)/UPPERCASE^PROMPT=Part Status^REF=InventoryPartStatusPar/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'planner_buyer', 'FLAGS=AMIU-^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Planner Buyer^REF=InventoryPartPlanner/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'prime_commodity', 'FLAGS=A-IU-^DATATYPE=STRING(5)^PROMPT=Prime commodity^REF=CommodityGroup/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'second_commodity', 'FLAGS=A-IU-^DATATYPE=STRING(5)^PROMPT=Second commodity^REF=CommodityGroup/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'unit_meas', 'FLAGS=AMI--^DATATYPE=STRING(10)^PROMPT=Unit Meas^REF=IsoUnit/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'catch_unit_meas', 'FLAGS=A-IU-^DATATYPE=STRING(30)^PROMPT=Catch Unit Meas^REF=IsoUnit/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'abc_class', 'FLAGS=A-IU-^DATATYPE=STRING(1)^PROMPT=Abc Class^REF=AbcClass/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'dim_quality', 'FLAGS=A-IUL^DATATYPE=STRING(25)^PROMPT=Dim Quality^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'durability_day', 'FLAGS=A-IU-^DATATYPE=NUMBER(4)^PROMPT=Durability Day^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'lead_time_code_db', 'FLAGS=A----^DATATYPE=STRING(1)^PROMPT=Lead Time Code^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'manuf_leadtime', 'FLAGS=AMIU-^DATATYPE=NUMBER^PROMPT=Manuf Lead Time^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'oe_alloc_assign_flag_db', 'FLAGS=A----^DATATYPE=STRING(1)^PROMPT=Reserve When Order Entry^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'onhand_analysis_flag_db', 'FLAGS=A----^DATATYPE=STRING(1)^PROMPT=Onhand Analysis Flag^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'purch_leadtime', 'FLAGS=AMIU-^DATATYPE=NUMBER^PROMPT=Purch Lead Time^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'earliest_ultd_supply_date', 'FLAGS=A--U-^DATATYPE=DATE/DATE^PROMPT=Earliest Unlimited Supply Date^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'supersedes', 'FLAGS=A-IU-^DATATYPE=STRING(25)^PROMPT=Supersedes^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'supply_code_db', 'FLAGS=A----^DATATYPE=STRING(3)^PROMPT=Default Mtr Req Supply^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'type_code_db', 'FLAGS=A----^DATATYPE=STRING(2)^PROMPT=Part Type^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'customs_stat_no', 'FLAGS=A-IU-^DATATYPE=STRING(15)/UPPERCASE^PROMPT=Customs Statistics No^REF=CustomsStatisticsNumber/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'type_designation', 'FLAGS=A-IUL^DATATYPE=STRING(25)^PROMPT=Type Designation^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'zero_cost_flag_db', 'FLAGS=A----^DATATYPE=STRING(1)^PROMPT=Zero Cost^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'avail_activity_status_db', 'FLAGS=A----^DATATYPE=STRING(9)^PROMPT=Avail Activity Status^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'eng_attribute', 'FLAGS=A-IU-^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Eng Attribute^REF=CharacteristicTemplate/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'shortage_flag_db', 'FLAGS=A----^DATATYPE=STRING(1)^PROMPT=Shortage Notification^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'forecast_consumption_flag_db', 'FLAGS=A----^DATATYPE=STRING(30)^PROMPT=Forecast Consumption^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'stock_management_db', 'FLAGS=A----^DATATYPE=STRING(50)^PROMPT=Stock Management^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'count_variance', 'FLAGS=AM-U-^DATATYPE=NUMBER^PROMPT=Acc Count Diff^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'intrastat_conv_factor', 'FLAGS=A-IU-^DATATYPE=NUMBER^PROMPT=Intrastat Conv Factor^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'part_cost_group_id', 'FLAGS=A-IU-^DATATYPE=STRING(5)^PROMPT=Part Cost Group Id^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'dop_connection_db', 'FLAGS=A----^DATATYPE=STRING(200)^PROMPT=Dop Connection^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'inventory_valuation_method_db', 'FLAGS=A----^DATATYPE=STRING(50)^PROMPT=Inventory Valuation Method^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'negative_on_hand_db', 'FLAGS=A----^DATATYPE=STRING(50)^PROMPT=Negative On Hand^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'technical_coordinator_id', 'FLAGS=A-IU-^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Technical Coordinator Id^REF=TechnicalCoordinator/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'invoice_consideration_db', 'FLAGS=A----^DATATYPE=STRING(50)^PROMPT=Supplier Invoice Consideration^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'actual_cost_activated', 'FLAGS=A-IU-^DATATYPE=DATE/DATE^PROMPT=Periodic Weighted Average Activated^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'lead_time_code', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=InvPartLeadTimeCode^PROMPT=Lead Time Code^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'max_actual_cost_update', 'FLAGS=A-IU-^DATATYPE=NUMBER/PERCENTAGE^PROMPT=Max Periodic Weighted Average Update^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'expected_leadtime', 'FLAGS=AMIU-^DATATYPE=NUMBER^PROMPT=Expected Lead Time^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'inventory_part_cost_level_db', 'FLAGS=A----^DATATYPE=STRING(50)^PROMPT=Inventory Part Cost Level^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'co_reserve_onh_analys_flag_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Co Reserve Onh Analysis Flag^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'qty_calc_rounding', 'FLAGS=AMIU-^DATATYPE=NUMBER^PROMPT=Qty Calc Rounding^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'min_durab_days_co_deliv', 'FLAGS=AMIU-^DATATYPE=NUMBER^PROMPT=Min Durab Days Co Deliv^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'min_durab_days_planning', 'FLAGS=AMIU-^DATATYPE=NUMBER^PROMPT=Min Durab Days Planning^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'storage_width_requirement', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Storage Width Requirement^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'storage_height_requirement', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Storage Height Requirement^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'storage_depth_requirement', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Storage Depth Requirement^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'storage_volume_requirement', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Storage Volume Requirement^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'storage_weight_requirement', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Storage Weight Requirement^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'min_storage_temperature', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Min Storage Temperature^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'max_storage_temperature', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Max Storage Temperature^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'min_storage_humidity', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Min Storage Humidity^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'max_storage_humidity', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Max Storage Humidity^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'standard_putaway_qty', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Standard Putaway Qty^');
   Alter_Column_Comment('INVENTORY_PART_PUB', 'excl_ship_pack_proposal_db', 'FLAGS=A----^DATATYPE=STRING(5)^PROMPT=Exclude from Shipment Packing Proposal^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_PUB TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


-----------------------------------------------------------------------------
-------------------- BASE VIEW DEFINITION -----------------------------------
-----------------------------------------------------------------------------

PROMPT Creating INVENTORY_PART view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART]
CREATE OR REPLACE VIEW INVENTORY_PART AS
SELECT
      t0.*,
      t1.company
FROM (SELECT
       contract                       contract,
       part_no                        part_no,
       accounting_group               accounting_group,
       asset_class                    asset_class,
       country_of_origin              country_of_origin,
       hazard_code                    hazard_code,
       note_id                        note_id,
       Inventory_Part_Config_API.Get_Estimated_Material_Cost(contract, part_no, '*') estimated_material_cost,
       part_product_code              part_product_code,
       part_product_family            part_product_family,
       part_status                    part_status,
       planner_buyer                  planner_buyer,
       prime_commodity                prime_commodity,
       second_commodity               second_commodity,
       unit_meas                      unit_meas,
       catch_unit_meas                catch_unit_meas,
       description                    description,
       Description                    description_copy,
       Inventory_Part_API.Get_Description(contract, part_no) description_in_use,
       abc_class                      abc_class,
       abc_class_locked_until         abc_class_locked_until,
       count_variance                 count_variance,
       create_date                    create_date,
       Inventory_Part_Count_Type_API.Decode(cycle_code) cycle_code,
       cycle_code                     cycle_code_db,
       cycle_period                   cycle_period,
       dim_quality                    dim_quality,
       durability_day                 durability_day,
       expected_leadtime              expected_leadtime,
       last_activity_date             last_activity_date,
       Inv_Part_Lead_Time_Code_API.Decode(lead_time_code) lead_time_code,
       lead_time_code                 lead_time_code_db,
       manuf_leadtime                 manuf_leadtime,
       note_text                      note_text,
       Cust_Ord_Reservation_Type_API.Decode(oe_alloc_assign_flag) oe_alloc_assign_flag,
       oe_alloc_assign_flag           oe_alloc_assign_flag_db,
       Inventory_Part_Onh_Analys_API.Decode(onhand_analysis_flag) onhand_analysis_flag,
       onhand_analysis_flag           onhand_analysis_flag_db,
       purch_leadtime                 purch_leadtime,
       earliest_ultd_supply_date      earliest_ultd_supply_date,
       supersedes                     supersedes,
       Material_Requis_Supply_API.Decode(supply_code) supply_code,
       supply_code                    supply_code_db,
       Inventory_Part_Type_API.Decode(type_code) type_code,
       type_code                      type_code_db,
       customs_stat_no                customs_stat_no,
       type_designation               type_designation,
       Inventory_Part_Zero_Cost_API.Decode(zero_cost_flag) zero_cost_flag,
       zero_cost_flag                 zero_cost_flag_db,
       Inventory_Part_Avail_Stat_API.Decode(avail_activity_status) avail_activity_status,
       avail_activity_status          avail_activity_status_db,
       eng_attribute                  eng_attribute,
       Inventory_Part_Shortage_API.Decode(shortage_flag) shortage_flag,
       shortage_flag                  shortage_flag_db,
       Inv_Part_Forecast_Consum_API.Decode(forecast_consumption_flag) forecast_consumption_flag,
       forecast_consumption_flag      forecast_consumption_flag_db,
       Inventory_Part_Management_API.Decode(stock_management) stock_management,
       stock_management               stock_management_db,
       intrastat_conv_factor          intrastat_conv_factor,
       part_cost_group_id             part_cost_group_id,
       Dop_Connection_API.Decode(dop_connection) dop_connection,
       dop_connection                 dop_connection_db,
       std_name_id                    std_name_id,
       Inventory_Value_Method_API.Decode(inventory_valuation_method) inventory_valuation_method,
       inventory_valuation_method     inventory_valuation_method_db,
       Negative_On_Hand_API.Decode(negative_on_hand) negative_on_hand,
       negative_on_hand               negative_on_hand_db,
       technical_coordinator_id       technical_coordinator_id,
       Invoice_Consideration_API.Decode(invoice_consideration) invoice_consideration,
       invoice_consideration          invoice_consideration_db,
       actual_cost_activated          actual_cost_activated,
       max_actual_cost_update         max_actual_cost_update,
       cust_warranty_id               cust_warranty_id,
       sup_warranty_id                sup_warranty_id,
       region_of_origin               region_of_origin,
       Inventory_Part_Cost_Level_API.Decode(inventory_part_cost_level) inventory_part_cost_level,
       inventory_part_cost_level      inventory_part_cost_level_db,
       Ext_Service_Cost_Method_API.Decode(ext_service_cost_method) ext_service_cost_method,
       ext_service_cost_method        ext_service_cost_method_db,
       supply_chain_part_group        supply_chain_part_group,
       Capability_Check_Allocate_API.Decode(automatic_capability_check) automatic_capability_check,
       automatic_capability_check     automatic_capability_check_db,
       input_unit_meas_group_id       input_unit_meas_group_id,
       Dop_Netting_API.Decode(dop_netting) dop_netting,
       dop_netting                    dop_netting_db,
       Inventory_Part_Onh_Analys_API.Decode(co_reserve_onh_analys_flag) co_reserve_onh_analys_flag,
       co_reserve_onh_analys_flag     co_reserve_onh_analys_flag_db,
       qty_calc_rounding              qty_calc_rounding,
       Inv_Part_Lifecycle_Stage_API.Decode(lifecycle_stage) lifecycle_stage,
       lifecycle_stage                lifecycle_stage_db,
       life_stage_locked_until        life_stage_locked_until,
       Inv_Part_Frequency_Class_API.Decode(frequency_class) frequency_class,
       frequency_class                frequency_class_db,
       freq_class_locked_until        freq_class_locked_until,
       first_stat_issue_date          first_stat_issue_date,
       latest_stat_issue_date         latest_stat_issue_date,
       decline_date                   decline_date,
       expired_date                   expired_date,
       decline_issue_counter          decline_issue_counter,
       expired_issue_counter          expired_issue_counter,
       min_durab_days_co_deliv        min_durab_days_co_deliv,
       min_durab_days_planning        min_durab_days_planning,
       NULL                           auto_created_gtin,
       storage_width_requirement      storage_width_requirement,
       storage_height_requirement     storage_height_requirement,
       storage_depth_requirement      storage_depth_requirement,
       storage_volume_requirement     storage_volume_requirement,
       storage_weight_requirement     storage_weight_requirement,
       min_storage_temperature        min_storage_temperature,
       max_storage_temperature        max_storage_temperature,
       min_storage_humidity           min_storage_humidity,
       max_storage_humidity           max_storage_humidity,
       standard_putaway_qty           standard_putaway_qty,
       Putaway_Zone_Refill_Option_API.Decode(putaway_zone_refill_option) putaway_zone_refill_option,
       putaway_zone_refill_option     putaway_zone_refill_option_db,
       Fnd_Boolean_API.Decode(reset_config_std_cost) reset_config_std_cost,
       reset_config_std_cost          reset_config_std_cost_db,
       Fnd_Boolean_API.Decode(mandatory_expiration_date) mandatory_expiration_date,
       mandatory_expiration_date      mandatory_expiration_date_db,
       Fnd_Boolean_API.Decode(excl_ship_pack_proposal) excl_ship_pack_proposal,
       excl_ship_pack_proposal        excl_ship_pack_proposal_db,
       statistical_code               statistical_code,
       acquisition_origin             acquisition_origin,
       acquisition_reason_id          acquisition_reason_id,
       rowkey                         objkey,
       to_char(rowversion,'YYYYMMDDHH24MISS') objversion,
       rowid                          objid
FROM   inventory_part_tab 
WHERE  EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE inventory_part_tab.contract = site)) t0
LEFT OUTER JOIN site_tab t1
ON t0.contract = t1.contract
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^TABLE=INVENTORY_PART_TAB^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART', 'contract', 'FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site^ROW_LEVEL_SECURITY=site^');
   Alter_Column_Comment('INVENTORY_PART', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog^');
   Alter_Column_Comment('INVENTORY_PART', 'accounting_group', 'FLAGS=A-IUL^DATATYPE=STRING(5)^PROMPT=Accounting Group^REF=AccountingGroup^');
   Alter_Column_Comment('INVENTORY_PART', 'asset_class', 'FLAGS=AMIU-^DATATYPE=STRING(2)/UPPERCASE^PROMPT=Asset Class^REF=AssetClass^');
   Alter_Column_Comment('INVENTORY_PART', 'country_of_origin', 'FLAGS=A-IU-^DATATYPE=STRING(2)/UPPERCASE^PROMPT=Country of origin^REF=IsoCountry^');
   Alter_Column_Comment('INVENTORY_PART', 'hazard_code', 'FLAGS=A-IU-^DATATYPE=STRING(6)/UPPERCASE^PROMPT=Safety Code^REF=SafetyInstruction^');
   Alter_Column_Comment('INVENTORY_PART', 'note_id', 'FLAGS=A-I--^DATATYPE=NUMBER(10)^PROMPT=Note id^');
   Alter_Column_Comment('INVENTORY_PART', 'estimated_material_cost', 'FLAGS=A----^DATATYPE=NUMBER^PROMPT=Estimated Material Cost^COLUMN=Inventory_Part_Config_API.Get_Estimated_Material_Cost(contract, part_no, ''*'')^');
   Alter_Column_Comment('INVENTORY_PART', 'part_product_code', 'FLAGS=A-IU-^DATATYPE=STRING(5)^PROMPT=Part Product Code^REF=InventoryProductCode^');
   Alter_Column_Comment('INVENTORY_PART', 'part_product_family', 'FLAGS=A-IU-^DATATYPE=STRING(5)^PROMPT=Part Product Family^REF=InventoryProductFamily^');
   Alter_Column_Comment('INVENTORY_PART', 'part_status', 'FLAGS=AMIU-^DATATYPE=STRING(1)/UPPERCASE^PROMPT=Part Status^REF=InventoryPartStatusPar^');
   Alter_Column_Comment('INVENTORY_PART', 'planner_buyer', 'FLAGS=AMIU-^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Planner Buyer^REF=InventoryPartPlanner^');
   Alter_Column_Comment('INVENTORY_PART', 'prime_commodity', 'FLAGS=A-IU-^DATATYPE=STRING(5)^PROMPT=Prime commodity^REF=CommodityGroup^');
   Alter_Column_Comment('INVENTORY_PART', 'second_commodity', 'FLAGS=A-IU-^DATATYPE=STRING(5)^PROMPT=Second commodity^REF=CommodityGroup^');
   Alter_Column_Comment('INVENTORY_PART', 'unit_meas', 'FLAGS=AMI--^DATATYPE=STRING(10)^PROMPT=Unit Meas^REF=IsoUnit^');
   Alter_Column_Comment('INVENTORY_PART', 'catch_unit_meas', 'FLAGS=A-IU-^DATATYPE=STRING(30)^PROMPT=Catch Unit Meas^REF=IsoUnit^');
   Alter_Column_Comment('INVENTORY_PART', 'description', 'FLAGS=AMIU-^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART', 'description_copy', 'FLAGS=A----^DATATYPE=STRING(200)^PROMPT=Inventory Part Description^COLUMN=Description^');
   Alter_Column_Comment('INVENTORY_PART', 'description_in_use', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^COLUMN=Inventory_Part_API.Get_Description(contract, part_no)^');
   Alter_Column_Comment('INVENTORY_PART', 'abc_class', 'FLAGS=A-IU-^DATATYPE=STRING(1)^PROMPT=Abc Class^REF=AbcClass^');
   Alter_Column_Comment('INVENTORY_PART', 'abc_class_locked_until', 'FLAGS=A-IU-^DATATYPE=DATE/DATE^PROMPT=Abc Class Locked Until^');
   Alter_Column_Comment('INVENTORY_PART', 'count_variance', 'FLAGS=AM-U-^DATATYPE=NUMBER^PROMPT=Acc Count Diff^');
   Alter_Column_Comment('INVENTORY_PART', 'create_date', 'FLAGS=A----^DATATYPE=DATE/DATE^PROMPT=Create Date^');
   Alter_Column_Comment('INVENTORY_PART', 'cycle_code', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=InventoryPartCountType^PROMPT=Cyclic Counting^');
   Alter_Column_Comment('INVENTORY_PART', 'cycle_code_db', 'FLAGS=A----^DATATYPE=STRING(1)^PROMPT=Cyclic Counting^');
   Alter_Column_Comment('INVENTORY_PART', 'cycle_period', 'FLAGS=AMIU-^DATATYPE=NUMBER(3)^PROMPT=Cyclic Counting Interval^');
   Alter_Column_Comment('INVENTORY_PART', 'dim_quality', 'FLAGS=A-IUL^DATATYPE=STRING(25)^PROMPT=Dim Quality^');
   Alter_Column_Comment('INVENTORY_PART', 'durability_day', 'FLAGS=A-IU-^DATATYPE=NUMBER(4)^PROMPT=Durability Day^');
   Alter_Column_Comment('INVENTORY_PART', 'expected_leadtime', 'FLAGS=AMIU-^DATATYPE=NUMBER^PROMPT=Expected Lead Time^');
   Alter_Column_Comment('INVENTORY_PART', 'last_activity_date', 'FLAGS=A----^DATATYPE=DATE/DATE^PROMPT=Last Activity Date^');
   Alter_Column_Comment('INVENTORY_PART', 'lead_time_code', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=InvPartLeadTimeCode^PROMPT=Lead Time Code^');
   Alter_Column_Comment('INVENTORY_PART', 'lead_time_code_db', 'FLAGS=A----^DATATYPE=STRING(1)^PROMPT=Lead Time Code^');
   Alter_Column_Comment('INVENTORY_PART', 'manuf_leadtime', 'FLAGS=AMIU-^DATATYPE=NUMBER^PROMPT=Manuf Lead Time^');
   Alter_Column_Comment('INVENTORY_PART', 'note_text', 'FLAGS=A-IU-^DATATYPE=STRING(2000)^PROMPT=Note text^');
   Alter_Column_Comment('INVENTORY_PART', 'oe_alloc_assign_flag', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=CustOrdReservationType^PROMPT=Reserve When Order Entry^');
   Alter_Column_Comment('INVENTORY_PART', 'oe_alloc_assign_flag_db', 'FLAGS=A----^DATATYPE=STRING(1)^PROMPT=Reserve When Order Entry^');
   Alter_Column_Comment('INVENTORY_PART', 'onhand_analysis_flag', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=InventoryPartOnhAnalys^PROMPT=Onhand Analysis Flag^');
   Alter_Column_Comment('INVENTORY_PART', 'onhand_analysis_flag_db', 'FLAGS=A----^DATATYPE=STRING(1)^PROMPT=Onhand Analysis Flag^');
   Alter_Column_Comment('INVENTORY_PART', 'purch_leadtime', 'FLAGS=AMIU-^DATATYPE=NUMBER^PROMPT=Purch Lead Time^');
   Alter_Column_Comment('INVENTORY_PART', 'earliest_ultd_supply_date', 'FLAGS=A--U-^DATATYPE=DATE/DATE^PROMPT=Earliest Unlimited Supply Date^');
   Alter_Column_Comment('INVENTORY_PART', 'supersedes', 'FLAGS=A-IU-^DATATYPE=STRING(25)^PROMPT=Supersedes^');
   Alter_Column_Comment('INVENTORY_PART', 'supply_code', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=MaterialRequisSupply^PROMPT=Default Mtr Req Supply^');
   Alter_Column_Comment('INVENTORY_PART', 'supply_code_db', 'FLAGS=A----^DATATYPE=STRING(3)^PROMPT=Default Mtr Req Supply^');
   Alter_Column_Comment('INVENTORY_PART', 'type_code', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=InventoryPartType^PROMPT=Part Type^');
   Alter_Column_Comment('INVENTORY_PART', 'type_code_db', 'FLAGS=A----^DATATYPE=STRING(2)^PROMPT=Part Type^');
   Alter_Column_Comment('INVENTORY_PART', 'customs_stat_no', 'FLAGS=A-IU-^DATATYPE=STRING(15)/UPPERCASE^PROMPT=Customs Statistics No^REF=CustomsStatisticsNumber^');
   Alter_Column_Comment('INVENTORY_PART', 'type_designation', 'FLAGS=A-IUL^DATATYPE=STRING(25)^PROMPT=Type Designation^');
   Alter_Column_Comment('INVENTORY_PART', 'zero_cost_flag', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=InventoryPartZeroCost^PROMPT=Zero Cost^');
   Alter_Column_Comment('INVENTORY_PART', 'zero_cost_flag_db', 'FLAGS=A----^DATATYPE=STRING(1)^PROMPT=Zero Cost^');
   Alter_Column_Comment('INVENTORY_PART', 'avail_activity_status', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=InventoryPartAvailStat^PROMPT=Avail Activity Status^');
   Alter_Column_Comment('INVENTORY_PART', 'avail_activity_status_db', 'FLAGS=A----^DATATYPE=STRING(9)^PROMPT=Avail Activity Status^');
   Alter_Column_Comment('INVENTORY_PART', 'eng_attribute', 'FLAGS=A-IU-^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Eng Attribute^REF=CharacteristicTemplate^');
   Alter_Column_Comment('INVENTORY_PART', 'shortage_flag', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=InventoryPartShortage^PROMPT=Shortage Notification^');
   Alter_Column_Comment('INVENTORY_PART', 'shortage_flag_db', 'FLAGS=A----^DATATYPE=STRING(1)^PROMPT=Shortage Notification^');
   Alter_Column_Comment('INVENTORY_PART', 'forecast_consumption_flag', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=InvPartForecastConsum^PROMPT=Forecast Consumption^');
   Alter_Column_Comment('INVENTORY_PART', 'forecast_consumption_flag_db', 'FLAGS=A----^DATATYPE=STRING(30)^PROMPT=Forecast Consumption^');
   Alter_Column_Comment('INVENTORY_PART', 'stock_management', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=InventoryPartManagement^PROMPT=Stock Management^');
   Alter_Column_Comment('INVENTORY_PART', 'stock_management_db', 'FLAGS=A----^DATATYPE=STRING(50)^PROMPT=Stock Management^');
   Alter_Column_Comment('INVENTORY_PART', 'intrastat_conv_factor', 'FLAGS=A-IU-^DATATYPE=NUMBER^PROMPT=Intrastat Conv Factor^');
   Alter_Column_Comment('INVENTORY_PART', 'part_cost_group_id', 'FLAGS=A-IU-^DATATYPE=STRING(5)^PROMPT=Part Cost Group Id^');
   Alter_Column_Comment('INVENTORY_PART', 'dop_connection', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=DopConnection^PROMPT=Dop Connection^');
   Alter_Column_Comment('INVENTORY_PART', 'dop_connection_db', 'FLAGS=A----^DATATYPE=STRING(200)^PROMPT=Dop Connection^');
   Alter_Column_Comment('INVENTORY_PART', 'std_name_id', 'FLAGS=A-IU-^DATATYPE=NUMBER(10)^PROMPT=Std Name Id^REF=StandardNames^');
   Alter_Column_Comment('INVENTORY_PART', 'inventory_valuation_method', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=InventoryValueMethod^PROMPT=Inventory Valuation Method^');
   Alter_Column_Comment('INVENTORY_PART', 'inventory_valuation_method_db', 'FLAGS=A----^DATATYPE=STRING(50)^PROMPT=Inventory Valuation Method^');
   Alter_Column_Comment('INVENTORY_PART', 'negative_on_hand', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=NegativeOnHand^PROMPT=Negative On Hand^');
   Alter_Column_Comment('INVENTORY_PART', 'negative_on_hand_db', 'FLAGS=A----^DATATYPE=STRING(50)^PROMPT=Negative On Hand^');
   Alter_Column_Comment('INVENTORY_PART', 'technical_coordinator_id', 'FLAGS=A-IU-^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Technical Coordinator Id^REF=TechnicalCoordinator^');
   Alter_Column_Comment('INVENTORY_PART', 'invoice_consideration', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=InvoiceConsideration^PROMPT=Supplier Invoice Consideration^');
   Alter_Column_Comment('INVENTORY_PART', 'invoice_consideration_db', 'FLAGS=A----^DATATYPE=STRING(50)^PROMPT=Supplier Invoice Consideration^');
   Alter_Column_Comment('INVENTORY_PART', 'actual_cost_activated', 'FLAGS=A-IU-^DATATYPE=DATE/DATE^PROMPT=Periodic Weighted Average Activated^');
   Alter_Column_Comment('INVENTORY_PART', 'max_actual_cost_update', 'FLAGS=A-IU-^DATATYPE=NUMBER/PERCENTAGE^PROMPT=Max Periodic Weighted Average Update^');
   Alter_Column_Comment('INVENTORY_PART', 'cust_warranty_id', 'FLAGS=A-IU-^DATATYPE=NUMBER^PROMPT=Cust Warranty Id^REF=CustWarranty/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART', 'sup_warranty_id', 'FLAGS=A-IU-^DATATYPE=NUMBER^PROMPT=Sup Warranty Id^REF=SupWarranty/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART', 'region_of_origin', 'FLAGS=A-IU-^DATATYPE=STRING(10)/UPPERCASE^PROMPT=Region Of Origin^');
   Alter_Column_Comment('INVENTORY_PART', 'inventory_part_cost_level', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=InventoryPartCostLevel^PROMPT=Inventory Part Cost Level^');
   Alter_Column_Comment('INVENTORY_PART', 'inventory_part_cost_level_db', 'FLAGS=A----^DATATYPE=STRING(50)^PROMPT=Inventory Part Cost Level^');
   Alter_Column_Comment('INVENTORY_PART', 'ext_service_cost_method', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=ExtServiceCostMethod^PROMPT=Ext Service Cost Method^');
   Alter_Column_Comment('INVENTORY_PART', 'ext_service_cost_method_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Ext Service Cost Method^');
   Alter_Column_Comment('INVENTORY_PART', 'supply_chain_part_group', 'FLAGS=A-IU-^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Supply Chain Part Group^REF=SupplyChainPartGroup^');
   Alter_Column_Comment('INVENTORY_PART', 'automatic_capability_check', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=CapabilityCheckAllocate^PROMPT=Automatic Order Capability Check^');
   Alter_Column_Comment('INVENTORY_PART', 'automatic_capability_check_db', 'FLAGS=A----^DATATYPE=STRING(50)^PROMPT=Automatic Order Capability Check^');
   Alter_Column_Comment('INVENTORY_PART', 'input_unit_meas_group_id', 'FLAGS=A-IU-^DATATYPE=STRING(30)/UPPERCASE^PROMPT=Input Unit Meas Group Id^REF=InputUnitMeasGroup^');
   Alter_Column_Comment('INVENTORY_PART', 'dop_netting', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=DopNetting^PROMPT=Dop Netting^');
   Alter_Column_Comment('INVENTORY_PART', 'dop_netting_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Dop Netting^');
   Alter_Column_Comment('INVENTORY_PART', 'co_reserve_onh_analys_flag', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=InventoryPartOnhAnalys^PROMPT=Co Reserve Onh Analysis Flag^');
   Alter_Column_Comment('INVENTORY_PART', 'co_reserve_onh_analys_flag_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Co Reserve Onh Analysis Flag^');
   Alter_Column_Comment('INVENTORY_PART', 'qty_calc_rounding', 'FLAGS=AMIU-^DATATYPE=NUMBER^PROMPT=Qty Calc Rounding^');
   Alter_Column_Comment('INVENTORY_PART', 'lifecycle_stage', 'FLAGS=A-IU-^DATATYPE=STRING(200)^ENUMERATION=InvPartLifecycleStage^PROMPT=Lifecycle Stage^');
   Alter_Column_Comment('INVENTORY_PART', 'lifecycle_stage_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Lifecycle Stage^');
   Alter_Column_Comment('INVENTORY_PART', 'life_stage_locked_until', 'FLAGS=A-IU-^DATATYPE=DATE/DATE^PROMPT=Life Stage Locked Until^');
   Alter_Column_Comment('INVENTORY_PART', 'frequency_class', 'FLAGS=A-IU-^DATATYPE=STRING(200)^ENUMERATION=InvPartFrequencyClass^PROMPT=Frequency Class^');
   Alter_Column_Comment('INVENTORY_PART', 'frequency_class_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Frequency Class^');
   Alter_Column_Comment('INVENTORY_PART', 'freq_class_locked_until', 'FLAGS=A-IU-^DATATYPE=DATE/DATE^PROMPT=Freq Class Locked Until^');
   Alter_Column_Comment('INVENTORY_PART', 'first_stat_issue_date', 'FLAGS=A--U-^DATATYPE=DATE/DATE^PROMPT=First Stat Issue Date^');
   Alter_Column_Comment('INVENTORY_PART', 'latest_stat_issue_date', 'FLAGS=A--U-^DATATYPE=DATE/DATE^PROMPT=Latest Stat Issue Date^');
   Alter_Column_Comment('INVENTORY_PART', 'decline_date', 'FLAGS=A--U-^DATATYPE=DATE/DATE^PROMPT=Decline Date^');
   Alter_Column_Comment('INVENTORY_PART', 'expired_date', 'FLAGS=A--U-^DATATYPE=DATE/DATE^PROMPT=Expired Date^');
   Alter_Column_Comment('INVENTORY_PART', 'decline_issue_counter', 'FLAGS=A--U-^DATATYPE=NUMBER^PROMPT=Decline Issue Counter^');
   Alter_Column_Comment('INVENTORY_PART', 'expired_issue_counter', 'FLAGS=A--U-^DATATYPE=NUMBER^PROMPT=Expired Issue Counter^');
   Alter_Column_Comment('INVENTORY_PART', 'min_durab_days_co_deliv', 'FLAGS=AMIU-^DATATYPE=NUMBER^PROMPT=Min Durab Days Co Deliv^');
   Alter_Column_Comment('INVENTORY_PART', 'min_durab_days_planning', 'FLAGS=AMIU-^DATATYPE=NUMBER^PROMPT=Min Durab Days Planning^');
   Alter_Column_Comment('INVENTORY_PART', 'auto_created_gtin', 'FLAGS=A----^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Auto Created Gtin^');
   Alter_Column_Comment('INVENTORY_PART', 'storage_width_requirement', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Storage Width Requirement^');
   Alter_Column_Comment('INVENTORY_PART', 'storage_height_requirement', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Storage Height Requirement^');
   Alter_Column_Comment('INVENTORY_PART', 'storage_depth_requirement', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Storage Depth Requirement^');
   Alter_Column_Comment('INVENTORY_PART', 'storage_volume_requirement', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Storage Volume Requirement^');
   Alter_Column_Comment('INVENTORY_PART', 'storage_weight_requirement', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Storage Weight Requirement^');
   Alter_Column_Comment('INVENTORY_PART', 'min_storage_temperature', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Min Storage Temperature^');
   Alter_Column_Comment('INVENTORY_PART', 'max_storage_temperature', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Max Storage Temperature^');
   Alter_Column_Comment('INVENTORY_PART', 'min_storage_humidity', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Min Storage Humidity^');
   Alter_Column_Comment('INVENTORY_PART', 'max_storage_humidity', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Max Storage Humidity^');
   Alter_Column_Comment('INVENTORY_PART', 'standard_putaway_qty', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Standard Putaway Qty^');
   Alter_Column_Comment('INVENTORY_PART', 'putaway_zone_refill_option', 'FLAGS=A-IU-^DATATYPE=STRING(200)^ENUMERATION=PutawayZoneRefillOption^PROMPT=Putaway Zone Refill Option^');
   Alter_Column_Comment('INVENTORY_PART', 'putaway_zone_refill_option_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Putaway Zone Refill Option^');
   Alter_Column_Comment('INVENTORY_PART', 'reset_config_std_cost', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=FndBoolean^PROMPT=Reset Configuration Standard Cost from Supply Site^');
   Alter_Column_Comment('INVENTORY_PART', 'reset_config_std_cost_db', 'FLAGS=A----^DATATYPE=STRING(5)^PROMPT=Reset Configuration Standard Cost from Supply Site^');
   Alter_Column_Comment('INVENTORY_PART', 'mandatory_expiration_date', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=FndBoolean^PROMPT=Mandatory Expiration Date^');
   Alter_Column_Comment('INVENTORY_PART', 'mandatory_expiration_date_db', 'FLAGS=A----^DATATYPE=STRING(5)^PROMPT=Mandatory Expiration Date^');
   Alter_Column_Comment('INVENTORY_PART', 'excl_ship_pack_proposal', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=FndBoolean^PROMPT=Exclude from Shipment Packing Proposal^');
   Alter_Column_Comment('INVENTORY_PART', 'excl_ship_pack_proposal_db', 'FLAGS=A----^DATATYPE=STRING(5)^PROMPT=Exclude from Shipment Packing Proposal^');
   Alter_Column_Comment('INVENTORY_PART', 'statistical_code', 'FLAGS=A-IUL^DATATYPE=STRING(15)^PROMPT=Statistical Code^REF=StatisticalCode(company)^');
   Alter_Column_Comment('INVENTORY_PART', 'acquisition_origin', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Acquisition Origin^REF=AcquisitionOrigin(company)^');
   Alter_Column_Comment('INVENTORY_PART', 'acquisition_reason_id', 'FLAGS=A-IUL^DATATYPE=STRING(20)^PROMPT=Acquisition Reason Id^REF=AcquisitionReason(company)^');
   Alter_Column_Comment('INVENTORY_PART', 'company', 'FLAGS=A----^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Company^COLUMN=Site_API.Get_Company(contract)^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


-----------------------------------------------------------------------------
-------------------- PRIVATE VIEW DEFINITIONS -------------------------------
-----------------------------------------------------------------------------

PROMPT Creating INTORDER_PART_LOV view

-- [IFS COMPLETE BLOCK VIEW INTORDER_PART_LOV]
CREATE OR REPLACE VIEW INTORDER_PART_LOV AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       Material_Requis_Supply_API.Decode(ip.supply_code)             supply_code,
       ip.supply_code                                                supply_code_db,      
       pc.technical_drawing_no                                       technical_drawing_no,
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.contract = ua.site
AND    ip.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INTORDER_PART_LOV
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INTORDER_PART_LOV', 'supply_code', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=MaterialRequisSupply^PROMPT=Default Mtr Req Supply^');
   Alter_Column_Comment('INTORDER_PART_LOV', 'supply_code_db', 'FLAGS=A----^DATATYPE=STRING(3)^PROMPT=Default Mtr Req Supply^');
   Alter_Column_Comment('INTORDER_PART_LOV', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INTORDER_PART_LOV', 'contract', 'FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INTORDER_PART_LOV', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INTORDER_PART_LOV', 'technical_drawing_no', 'PROMPT=Technical Drawing No^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INTORDER_PART_LOV TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INTORDER_PART_LOV2 view

-- [IFS COMPLETE BLOCK VIEW INTORDER_PART_LOV2]
CREATE OR REPLACE VIEW INTORDER_PART_LOV2 AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       Material_Requis_Supply_API.Decode(ip.supply_code)             supply_code,
       ip.supply_code                                                supply_code_db,       
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua
WHERE  ip.contract = ua.site
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INTORDER_PART_LOV2
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INTORDER_PART_LOV2', 'supply_code', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=MaterialRequisSupply^PROMPT=Default Mtr Req Supply^');
   Alter_Column_Comment('INTORDER_PART_LOV2', 'supply_code_db', 'FLAGS=A----^DATATYPE=STRING(3)^PROMPT=Default Mtr Req Supply^');
   Alter_Column_Comment('INTORDER_PART_LOV2', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INTORDER_PART_LOV2', 'contract', 'FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INTORDER_PART_LOV2', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INTORDER_PART_LOV2 TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INTORDER_POSITION_PART_LOV view

-- [IFS COMPLETE BLOCK VIEW INTORDER_POSITION_PART_LOV]
CREATE OR REPLACE VIEW INTORDER_POSITION_PART_LOV AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       Material_Requis_Supply_API.Decode(ip.supply_code)             supply_code,
       ip.supply_code                                                supply_code_db,       
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.contract = ua.site
AND    ip.part_no  = pc.part_no
AND    pc.position_part='POSITION PART'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INTORDER_POSITION_PART_LOV
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INTORDER_POSITION_PART_LOV', 'supply_code', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=MaterialRequisSupply^PROMPT=Default Mtr Req Supply^');
   Alter_Column_Comment('INTORDER_POSITION_PART_LOV', 'supply_code_db', 'FLAGS=A----^DATATYPE=STRING(3)^PROMPT=Default Mtr Req Supply^');
   Alter_Column_Comment('INTORDER_POSITION_PART_LOV', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INTORDER_POSITION_PART_LOV', 'contract', 'FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INTORDER_POSITION_PART_LOV', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INTORDER_POSITION_PART_LOV TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_LOV view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_LOV]
CREATE OR REPLACE VIEW INVENTORY_PART_LOV AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       Inventory_Part_Type_API.Decode(ip.type_code)                  type_code,
       ip.type_code                                                  type_code_db,
       pc.lot_tracking_code                                          lot_tracking_code,
       pc.lot_quantity_rule                                          lot_quantity_rule,
       pc.serial_tracking_code                                       serial_tracking_code,
       pc.receipt_issue_serial_track_db                              receipt_issue_serial_track_db,
       pc.condition_code_usage                                       condition_code_usage,
       ip.unit_meas                                                  unit_meas,
       ip.catch_unit_meas                                            catch_unit_meas,
       ip.planner_buyer                                              planner_buyer,       
       ip.rowkey                                                     objkey,
       ip.rowid                                                      objid
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.contract      = ua.site
AND    ip.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_LOV
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_LOV', 'contract', 'FLAGS=PMI-L^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV', 'type_code_db', 'FLAGS=A----^DATATYPE=STRING(2)^PROMPT=Part Type^');
   Alter_Column_Comment('INVENTORY_PART_LOV', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_LOV', 'planner_buyer', 'FLAGS=AMIUL^PROMPT=Planner ID^DATATYPE=STRING(20)/UPPERCASE^REF=InventoryPartPlanner/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV', 'type_code', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=InventoryPartType^PROMPT=Part Type^');
   Alter_Column_Comment('INVENTORY_PART_LOV', 'lot_tracking_code', 'FLAGS=AMIU-^DATATYPE=STRING(200)^PROMPT=Lot/Batch Tracking^REF=PartLotTracking/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV', 'lot_quantity_rule', 'FLAGS=AMIU-^DATATYPE=STRING(200)^PROMPT=Lot Quantity Rule^REF=LotQuantityRule/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV', 'serial_tracking_code', 'FLAGS=AMIU-^DATATYPE=STRING(200)^PROMPT=Serial Tracking^REF=PartSerialTracking/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV', 'receipt_issue_serial_track_db', 'FLAGS=AMIU-^DATATYPE=STRING(200)^PROMPT=Receipt and Issue Serial Tracking^REF=FndBoolean/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV', 'condition_code_usage', 'FLAGS=AMIU-^DATATYPE=STRING(200)^PROMPT=Condition Code Usage^REF=ConditionCodeUsage/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV', 'unit_meas', 'FLAGS=AMI--^DATATYPE=STRING(10)^PROMPT=Unit Meas^REF=IsoUnit/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV', 'catch_unit_meas', 'FLAGS=A-IU-^DATATYPE=STRING(30)^PROMPT=Catch Unit Meas^REF=IsoUnit/NOCHECK^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_LOV TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_WO_LOV view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_WO_LOV]
CREATE OR REPLACE VIEW INVENTORY_PART_WO_LOV AS
SELECT ip.contract                                                               contract,
       ip.part_no                                                                part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)               part_description_in_use,
       ip.description                                                            inventory_part_description,
       ip.part_product_family                                                    part_product_family,
       Inventory_Product_Family_API.Get_Description(ip.part_product_family)      part_product_family_desc,
       ip.part_product_code                                                      part_product_code,
       Inventory_Product_Code_API.Get_Description(ip.part_product_code)          part_product_code_desc,
       ip.dim_quality                                                            dim_quality,
       ip.type_designation                                                       type_designation,       
       ip.rowkey                                                                 objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc, inventory_part_status_par_pub ips
WHERE  ip.contract = ua.site
AND    ip.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
AND    ip.part_status = ips.part_status
AND    ips.demand_flag_db = 'Y'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_WO_LOV
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_WO_LOV', 'part_no', 'FLAGS=KMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_WO_LOV', 'part_description_in_use', 'FLAGS=AMIUL^DATATYPE=STRING(200)^PROMPT=Part Description In Use^');
   Alter_Column_Comment('INVENTORY_PART_WO_LOV', 'inventory_part_description', 'FLAGS=AMIUL^DATATYPE=STRING(200)^PROMPT=Inventory Part Description^');
   Alter_Column_Comment('INVENTORY_PART_WO_LOV', 'part_product_family', 'FLAGS=A---L^DATATYPE=STRING(5)^PROMPT=Part Product Family^REF=InventoryProductFamily/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_WO_LOV', 'part_product_family_desc', 'FLAGS=A---L^DATATYPE=STRING(35)^PROMPT=Part Product Family Description^');
   Alter_Column_Comment('INVENTORY_PART_WO_LOV', 'part_product_code', 'FLAGS=A---L^DATATYPE=STRING(5)^PROMPT=Part Product Code^REF=InventoryProductCode/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_WO_LOV', 'part_product_code_desc', 'FLAGS=A---L^DATATYPE=STRING(35)^PROMPT=Part Product Code Description^');
   Alter_Column_Comment('INVENTORY_PART_WO_LOV', 'contract', 'FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_WO_LOV', 'dim_quality', 'FLAGS=A-IUL^DATATYPE=STRING(25)^PROMPT=Dim Quality^');
   Alter_Column_Comment('INVENTORY_PART_WO_LOV', 'type_designation', 'FLAGS=A-IUL^DATATYPE=STRING(25)^PROMPT=Type Designation^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_WO_LOV TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_LOV2 view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_LOV2]
CREATE OR REPLACE VIEW INVENTORY_PART_LOV2 AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       Inventory_Part_Type_API.Decode(ip.type_code)                  type_code,
       ip.type_code                                                  type_code_db,
       ip.unit_meas                                                  unit_meas,
       ip.planner_buyer                                              planner_buyer,
       ip.part_status                                                part_status,
       ip.part_product_family                                        part_product_family,
       ip.part_product_code                                          part_product_code,
       Inv_Part_Lead_Time_Code_API.Decode(ip.lead_time_code)         lead_time_code,
       Ip.lead_time_code                                             lead_time_code_db,      
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.contract = ua.site
AND    ip.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_LOV2
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_LOV2', 'unit_meas', 'FLAGS=AMI-L^DATATYPE=STRING(10)^PROMPT=Unit Meas^REF=IsoUnit/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV2', 'type_code_db', 'FLAGS=A----^DATATYPE=STRING(2)^PROMPT=Part Type^');
   Alter_Column_Comment('INVENTORY_PART_LOV2', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_LOV2', 'planner_buyer', 'FLAGS=AMIUL^PROMPT=Planner ID^DATATYPE=STRING(20)/UPPERCASE^REF=InventoryPartPlanner/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV2', 'part_product_family', 'FLAGS=A---L^DATATYPE=STRING(5)^PROMPT=Part Product Family^REF=InventoryProductFamily/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV2', 'part_product_code', 'FLAGS=A---L^DATATYPE=STRING(5)^PROMPT=Part Product Code^REF=InventoryProductCode/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV2', 'lead_time_code', 'FLAGS=A---L^DATATYPE=STRING(200)^ENUMERATION=InvPartLeadTimeCode^PROMPT=Lead Time Code^');
   Alter_Column_Comment('INVENTORY_PART_LOV2', 'lead_time_code_db', 'FLAGS=A---L^DATATYPE=STRING(1)^PROMPT=Lead Time Code^');
   Alter_Column_Comment('INVENTORY_PART_LOV2', 'contract', 'FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV2', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV2', 'type_code', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=InventoryPartType^PROMPT=Part Type^');
   Alter_Column_Comment('INVENTORY_PART_LOV2', 'part_status', 'FLAGS=AMIU-^DATATYPE=STRING(1)/UPPERCASE^PROMPT=Part Status^REF=InventoryPartStatusPar/NOCHECK^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_LOV2 TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_LOV3 view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_LOV3]
CREATE OR REPLACE VIEW INVENTORY_PART_LOV3 AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,      
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.type_code IN ('1', '2')
AND    ip.contract = ua.site
AND    ip.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_LOV3
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_LOV3', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_LOV3', 'contract', 'FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV3', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_LOV3 TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_LOV4 view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_LOV4]
CREATE OR REPLACE VIEW INVENTORY_PART_LOV4 AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       ip.contract                                                   show_contract,       
       ip.rowkey                                                     objkey,
       ip.rowid                                                      objid
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.type_code IN ('1', '2', '3', '4', '6')
AND    ip.contract = ua.site
AND    ip.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_LOV4
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_LOV4', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_LOV4', 'contract', 'FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV4', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV4', 'show_contract', 'FLAGS=A---L^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_LOV4 TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_LOV5 view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_LOV5]
CREATE OR REPLACE VIEW INVENTORY_PART_LOV5 AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       ip.contract                                                   show_contract,      
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.type_code IN ('1', '2', '4')
AND    ip.contract = ua.site
AND    ip.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_LOV5
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_LOV5', 'contract', 'REF=Site/NOCHECK^FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^');
   Alter_Column_Comment('INVENTORY_PART_LOV5', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_LOV5', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV5', 'show_contract', 'FLAGS=A---L^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_LOV5 TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_NO_RECIPE_LOV view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_NO_RECIPE_LOV]
CREATE OR REPLACE VIEW INVENTORY_PART_NO_RECIPE_LOV AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       Inventory_Part_Type_API.Decode(ip.type_code)                  type_code,      
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.type_code IN ('1', '3', '4', '6')
AND    ip.contract = ua.site
AND    ip.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_NO_RECIPE_LOV
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_NO_RECIPE_LOV', 'contract', 'REF=Site/NOCHECK^FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^');
   Alter_Column_Comment('INVENTORY_PART_NO_RECIPE_LOV', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_NO_RECIPE_LOV', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_NO_RECIPE_LOV', 'type_code', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=InventoryPartType^PROMPT=Part Type^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_NO_RECIPE_LOV TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_WEIGHT_VOL_LOV view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_WEIGHT_VOL_LOV]
CREATE OR REPLACE VIEW INVENTORY_PART_WEIGHT_VOL_LOV AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       Inventory_Part_Type_API.Decode(ip.type_code)                  type_code,
       ip.type_code                                                  type_code_db,      
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.unit_meas IN (SELECT unit_code FROM iso_unit WHERE base_unit IN ('kg','m3'))
AND    ip.contract = ua.site
AND    ip.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_WEIGHT_VOL_LOV
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_WEIGHT_VOL_LOV', 'type_code_db', 'FLAGS=A----^DATATYPE=STRING(2)^PROMPT=Part Type^');
   Alter_Column_Comment('INVENTORY_PART_WEIGHT_VOL_LOV', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_WEIGHT_VOL_LOV', 'contract', 'FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_WEIGHT_VOL_LOV', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_WEIGHT_VOL_LOV', 'type_code', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=InventoryPartType^PROMPT=Part Type^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_WEIGHT_VOL_LOV TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_PROD_LINE_LOV view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_PROD_LINE_LOV]
CREATE OR REPLACE VIEW INVENTORY_PART_PROD_LINE_LOV AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,       
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, inventory_part_planning_pub ip_plan, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.type_code IN ('1', '2')
AND    ip.contract = ip_plan.contract
AND    ip.part_no = ip_plan.part_no
AND    ip_plan.planning_method IN ('A','B','C','D','E','F','G','H','K','P','M','N')
AND    ip.contract = ua.site
AND    ip.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_PROD_LINE_LOV
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_PROD_LINE_LOV', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_PROD_LINE_LOV', 'contract', 'FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_PROD_LINE_LOV', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_PROD_LINE_LOV TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_BLOW_PHANT_LOV view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_BLOW_PHANT_LOV]
CREATE OR REPLACE VIEW INVENTORY_PART_BLOW_PHANT_LOV AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       Material_Requis_Supply_API.Decode(ip.supply_code)             supply_code,
       ip.supply_code                                                supply_code_db,      
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, inventory_part_planning_tab pp , user_allowed_site_pub ua, part_catalog_pub pc
WHERE  pp.planning_method IN ('K','P')
AND    pp.part_no  = ip.part_no
AND    pp.contract = ip.contract
AND    ip.contract = ua.site
AND    ip.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_BLOW_PHANT_LOV
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_BLOW_PHANT_LOV', 'contract', 'FLAGS=P----^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_BLOW_PHANT_LOV', 'part_no', 'FLAGS=P---L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_BLOW_PHANT_LOV', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_BLOW_PHANT_LOV', 'supply_code', 'FLAGS=A---L^DATATYPE=STRING(200)^ENUMERATION=MaterialRequisSupply^PROMPT=Default Mtr Req Supply^');
   Alter_Column_Comment('INVENTORY_PART_BLOW_PHANT_LOV', 'supply_code_db', 'FLAGS=A----^DATATYPE=STRING(3)^PROMPT=Default Mtr Req Supply^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_BLOW_PHANT_LOV TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INTORDER_PART_LOV_ALL view

-- [IFS COMPLETE BLOCK VIEW INTORDER_PART_LOV_ALL]
CREATE OR REPLACE VIEW INTORDER_PART_LOV_ALL AS
SELECT ip.part_no                                                    part_no,
       ip.contract                                                   contract,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       Material_Requis_Supply_API.Decode(ip.supply_code)             supply_code,       
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.contract = ua.site
AND    ip.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INTORDER_PART_LOV_ALL
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INTORDER_PART_LOV_ALL', 'part_no', 'FLAGS=P---L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INTORDER_PART_LOV_ALL', 'contract', 'FLAGS=P----^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INTORDER_PART_LOV_ALL', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INTORDER_PART_LOV_ALL', 'supply_code', 'FLAGS=A---L^DATATYPE=STRING(200)^ENUMERATION=MaterialRequisSupply^PROMPT=Default Mtr Req Supply^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INTORDER_PART_LOV_ALL TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_LOV12 view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_LOV12]
CREATE OR REPLACE VIEW INVENTORY_PART_LOV12 AS
SELECT ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       ip.contract                                                   contract,      
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.type_code IN ('1', '2', '3', '4', '6')
AND    ip.contract = ua.site
AND    ip.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_LOV12
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_LOV12', 'contract', 'FLAGS=A---L^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV12', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_LOV12', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_LOV12 TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_LOV13 view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_LOV13]
CREATE OR REPLACE VIEW INVENTORY_PART_LOV13 AS
SELECT ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       ip.contract                                                   contract,      
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.type_code IN ('1', '2', '4')
AND    ip.contract = ua.site
AND    ip.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_LOV13
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_LOV13', 'contract', 'FLAGS=A---L^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV13', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_LOV13', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_LOV13 TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_SPARE_PART_LOV view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_SPARE_PART_LOV]
CREATE OR REPLACE VIEW INVENTORY_PART_SPARE_PART_LOV AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,       
       ip.rowkey                                                    objkey
FROM   inventory_part_status_par_pub stat, inventory_part_planning_pub plan, INVENTORY_PART_TAB ip,
       part_catalog_tab partca, user_allowed_site_pub ua
WHERE  stat.part_status = ip.part_status
AND    stat.supply_flag_db = 'Y'
AND    stat.demand_flag_db = 'Y'
AND    ip.part_no  = plan.part_no
AND    ip.contract = plan.contract
AND    ip.part_no  = partca.part_no
AND    plan.order_requisition_db IN ('O', 'R', 'S')
AND    plan.planning_method IN ('A','D','E','F','G','K','M','P')
AND    ip.forecast_consumption_flag = 'FORECAST'
AND    ip.contract = ua.site
AND    partca.position_part = 'NOT POSITION PART'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_SPARE_PART_LOV
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_SPARE_PART_LOV', 'contract', 'FLAGS=PMI-L^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_SPARE_PART_LOV', 'part_no', 'FLAGS=K---L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_SPARE_PART_LOV', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_SPARE_PART_LOV TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_ALTERNATE view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_ALTERNATE]
CREATE OR REPLACE VIEW INVENTORY_PART_ALTERNATE AS
SELECT ip1.contract                                                   contract,
       ip1.part_no                                                    part_no,
       p.alternative_part_no                                          alternative_part_no,
       Part_Catalog_API.Get_Description(p.alternative_part_no)        description,
       Inventory_Part_In_Stock_API.Get_Inventory_Qty_Onhand(ip1.contract, p.alternative_part_no,NULL) qty_on_hand,
       p.note_text                                                    note_text,       
       ip1.rowid                                                      objid,
       ltrim(lpad(to_char(ip1.rowversion,'YYYYMMDDHH24MISS'),2000))   objversion,
       ip1.rowkey                                                     objkey
FROM   inventory_part_tab ip1, part_catalog_alternative_pub p, inventory_part_tab ip2, part_catalog_pub pc
WHERE  ip1.part_no = p.part_no
AND    p.alternative_part_no = ip2.part_no
AND    ip1.contract = ip2.contract
AND    ip1.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
AND    EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE ip1.contract = site)
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_ALTERNATE
   IS 'LU=InventoryPart^PROMPT=Inventory Part Config All^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_ALTERNATE', 'contract', 'FLAGS=P---L^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^ROW_LEVEL_SECURITY=site^');
   Alter_Column_Comment('INVENTORY_PART_ALTERNATE', 'part_no', 'FLAGS=P---L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_ALTERNATE', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_ALTERNATE', 'note_text', 'FLAGS=A---L^DATATYPE=STRING(2000)^PROMPT=Note text^');
   Alter_Column_Comment('INVENTORY_PART_ALTERNATE', 'alternative_part_no', 'FLAGS=K---L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Alternate Part No^');
   Alter_Column_Comment('INVENTORY_PART_ALTERNATE', 'qty_on_hand', 'FLAGS=A---L^DATATYPE=NUMBER^PROMPT=Quantity On Hand^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_ALTERNATE TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INTORDER_PART_ALTERNATE_LOV view

-- [IFS COMPLETE BLOCK VIEW INTORDER_PART_ALTERNATE_LOV]
CREATE OR REPLACE VIEW INTORDER_PART_ALTERNATE_LOV AS
SELECT ip.contract                                                     contract,
       ip.part_no                                                      part_no,
       pca.alternative_part_no                                         alternative_part_no,
       Inventory_Part_API.Get_Description(ip2.contract, ip2.part_no)   description,
       Material_Requis_Supply_API.Decode(ip2.supply_code)              supply_code,
       ip2.supply_code                                                 supply_code_db,       
       ip.rowkey                                                      objkey
FROM   INVENTORY_PART_TAB ip, part_catalog_alternative_pub pca, INVENTORY_PART_TAB ip2, part_catalog_pub pc
WHERE  ip.part_no  = pca.part_no
AND    ip2.part_no = pca.alternative_part_no
AND    ip.contract = ip2.contract
AND    ip.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
AND    EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE ip.contract = site)
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INTORDER_PART_ALTERNATE_LOV
   IS 'LU=InventoryPart^PROMPT=Inventory part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INTORDER_PART_ALTERNATE_LOV', 'contract', 'FLAGS=P----^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^ROW_LEVEL_SECURITY=site^');
   Alter_Column_Comment('INTORDER_PART_ALTERNATE_LOV', 'part_no', 'FLAGS=P----^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INTORDER_PART_ALTERNATE_LOV', 'alternative_part_no', 'DATATYPE=STRING(25)^FLAGS=K---L^PROMPT=Alternate Part No^');
   Alter_Column_Comment('INTORDER_PART_ALTERNATE_LOV', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INTORDER_PART_ALTERNATE_LOV', 'supply_code', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=MaterialRequisSupply^PROMPT=Default Mtr Req Supply^');
   Alter_Column_Comment('INTORDER_PART_ALTERNATE_LOV', 'supply_code_db', 'FLAGS=A----^DATATYPE=STRING(3)^PROMPT=Default Mtr Req Supply^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INTORDER_PART_ALTERNATE_LOV TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_LOV18 view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_LOV18]
CREATE OR REPLACE VIEW INVENTORY_PART_LOV18 AS
SELECT ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       ip.contract                                                   contract,      
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.type_code IN ('1', '2', '3', '4', '6')
AND    ip.contract = ua.site
AND    ip.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_LOV18
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_LOV18', 'contract', 'FLAGS=PMI-L^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV18', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_LOV18', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_LOV18 TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_QMAN_LOV view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_QMAN_LOV]
CREATE OR REPLACE VIEW INVENTORY_PART_QMAN_LOV AS
SELECT ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       ip.contract                                                   contract,
       Site_API.Get_Description(ip.contract)                         contract_desc,
       Inventory_Part_Type_API.Decode(ip.type_code)                  type_code,
       ip.type_code                                                  type_code_db,       
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.type_code IN ('1', '3', '4')
AND    ip.contract = ua.site
AND    ip.part_no  = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_QMAN_LOV
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_QMAN_LOV', 'contract', 'FLAGS=AMI-L^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_QMAN_LOV', 'type_code_db', 'FLAGS=A----^DATATYPE=STRING(2)^PROMPT=Part Type^');
   Alter_Column_Comment('INVENTORY_PART_QMAN_LOV', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_QMAN_LOV', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_QMAN_LOV', 'contract_desc', 'FLAGS=AMIUL^DATATYPE=STRING(20)^PROMPT=Site Description^');
   Alter_Column_Comment('INVENTORY_PART_QMAN_LOV', 'type_code', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=InventoryPartType^PROMPT=Part Type^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_QMAN_LOV TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_LOV20 view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_LOV20]
CREATE OR REPLACE VIEW INVENTORY_PART_LOV20 AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       SUBSTR(Inventory_Part_Type_API.Decode(ip.type_code),1,200)    type_code,
       ip.type_code                                                  type_code_db,       
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.contract = ua.site
AND    ip.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
AND    pc.configurable  = 'NOT CONFIGURED'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_LOV20
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_LOV20', 'part_no', 'FLAGS=KMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV20', 'type_code_db', 'FLAGS=A----^DATATYPE=STRING(2)^PROMPT=Part Type^');
   Alter_Column_Comment('INVENTORY_PART_LOV20', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_LOV20', 'contract', 'FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV20', 'type_code', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=InventoryPartType^PROMPT=Part Type^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_LOV20 TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_ALTERNATE_LOV2 view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_ALTERNATE_LOV2]
CREATE OR REPLACE VIEW INVENTORY_PART_ALTERNATE_LOV2 AS
SELECT ip1.contract                                                                              contract,
       ip1.part_no                                                                               part_no,
       pca.alternative_part_no                                                                   alternative_part_no,
       Inventory_Part_API.Get_Description(ip1.contract, pca.alternative_part_no)                 description,
       SUBSTR(Inventory_Part_API.Get_Type_Code(ip1.contract, pca.alternative_part_no),1,200)     supply_code,
       Inventory_Part_API.Get_Type_Code_Db(ip1.contract, pca.alternative_part_no)                supply_code_db,
       SUBSTR(Fnd_Boolean_API.Decode('TRUE'),1,200)                                              alternate_part       
FROM   INVENTORY_PART_TAB ip1, part_catalog_alternative_pub pca, INVENTORY_PART_TAB ip2, user_allowed_site_pub ua
WHERE  ip1.part_no  = pca.part_no
AND    ip1.contract = ua.site
AND    pca.alternative_part_no = ip2.part_no
AND    ip2.contract = ua.site
UNION
SELECT ip1.contract                                                                              contract,
       ip1.part_no                                                                               part_no,
       ip2.part_no                                                                               alternative_part_no,
       Inventory_Part_API.Get_Description(ip2.contract, ip2.part_no)                             description,
       SUBSTR(Inventory_Part_Type_API.Decode(ip2.type_code), 1, 200)                             supply_code,
       ip2.type_code                                                                             supply_code_db,
       SUBSTR(Fnd_Boolean_API.Decode('FALSE'), 1, 200)                                           alternate_part      
FROM   INVENTORY_PART_TAB ip1, INVENTORY_PART_TAB ip2, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip2.contract = ua.site
AND    ip1.contract = ua.site
AND    ip1.contract = ip2.contract
AND    ip2.part_no  = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
AND    ip1.part_no != ip2.part_no
AND    NOT EXISTS (SELECT 1
                   FROM part_catalog_alternative_pub pca
                   WHERE pca.alternative_part_no = ip2.part_no)
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_ALTERNATE_LOV2
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_ALTERNATE_LOV2', 'part_no', 'FLAGS=P----^PROMPT=PartNo^DATATYPE=STRING(25)/UPPERCASE^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_ALTERNATE_LOV2', 'alternative_part_no', 'DATATYPE=STRING(25)^PROMPT=Alternate Part^FLAGS=K---L^');
   Alter_Column_Comment('INVENTORY_PART_ALTERNATE_LOV2', 'supply_code', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=MaterialRequisSupply^PROMPT=Default Mtr Req Supply^');
   Alter_Column_Comment('INVENTORY_PART_ALTERNATE_LOV2', 'supply_code_db', 'FLAGS=A----^DATATYPE=STRING(3)^PROMPT=Default Mtr Req Supply^');
   Alter_Column_Comment('INVENTORY_PART_ALTERNATE_LOV2', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_ALTERNATE_LOV2', 'contract', 'FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_ALTERNATE_LOV2', 'alternate_part', 'FLAGS=AMI--^DATATYPE=STRING(200)/UPPERCASE^PROMPT=Defined as Alternate^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_ALTERNATE_LOV2 TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_CC_LOV view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_CC_LOV]
CREATE OR REPLACE VIEW INVENTORY_PART_CC_LOV AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       ip.prime_commodity                                            prime_commodity,
       ip.second_commodity                                           second_commodity,       
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua
WHERE  ip.contract = ua.site
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_CC_LOV
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_CC_LOV', 'contract', 'FLAGS=PMI-L^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_CC_LOV', 'prime_commodity', 'FLAGS=A-IUL^DATATYPE=STRING(5)^PROMPT=Prime commodity^REF=CommodityGroup/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_CC_LOV', 'second_commodity', 'FLAGS=A-IUL^DATATYPE=STRING(5)^PROMPT=Second commodity^REF=CommodityGroup/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_CC_LOV', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_CC_LOV', 'description', 'FLAGS=AMIU-^DATATYPE=STRING(200)^PROMPT=Description^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_CC_LOV TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_SO_CASCADE_LOV view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_SO_CASCADE_LOV]
CREATE OR REPLACE VIEW INVENTORY_PART_SO_CASCADE_LOV AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       Inventory_Part_Type_API.Decode(ip.type_code)                  type_code,
       ip.type_code                                                  type_code_db,       
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua
WHERE  ip.contract = ua.site
  AND (inventory_valuation_method = 'AV' OR inventory_part_cost_level = 'COST PER SERIAL')
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_SO_CASCADE_LOV
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_SO_CASCADE_LOV', 'type_code_db', 'FLAGS=A----^DATATYPE=STRING(2)^PROMPT=Part Type^');
   Alter_Column_Comment('INVENTORY_PART_SO_CASCADE_LOV', 'contract', 'FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_SO_CASCADE_LOV', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_SO_CASCADE_LOV', 'description', 'FLAGS=AMIU-^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_SO_CASCADE_LOV', 'type_code', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=InventoryPartType^PROMPT=Part Type^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_SO_CASCADE_LOV TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INTORDER_PART_LOV3 view

-- [IFS COMPLETE BLOCK VIEW INTORDER_PART_LOV3]
CREATE OR REPLACE VIEW INTORDER_PART_LOV3 AS
SELECT ip.part_no                                         part_no,
       ip.description                                     description,
       ip.contract                                        contract,
       Material_Requis_Supply_API.Decode(ip.supply_code)  supply_code,
       ip.supply_code                                     supply_code_db,       
       ip.rowkey                                         objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua
WHERE  ip.contract = ua.site
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INTORDER_PART_LOV3
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INTORDER_PART_LOV3', 'description', 'FLAGS=A-IUL^DATATYPE=STRING(35)^PROMPT=Description^');
   Alter_Column_Comment('INTORDER_PART_LOV3', 'contract', 'FLAGS=PMI-L^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INTORDER_PART_LOV3', 'supply_code', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=MaterialRequisSupply^PROMPT=Default Mtr Req Supply^');
   Alter_Column_Comment('INTORDER_PART_LOV3', 'supply_code_db', 'FLAGS=A----^DATATYPE=STRING(3)^PROMPT=Default Mtr Req Supply^');
   Alter_Column_Comment('INTORDER_PART_LOV3', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INTORDER_PART_LOV3 TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INTORDER_PART_LOV4 view

-- [IFS COMPLETE BLOCK VIEW INTORDER_PART_LOV4]
CREATE OR REPLACE VIEW INTORDER_PART_LOV4 AS
SELECT ip.contract                                        contract,
       ip.part_no                                         part_no,
       ip.description                                     description,
       ip.contract                                        show_contract,
       Material_Requis_Supply_API.Decode(ip.supply_code)  supply_code,
       ip.supply_code                                     supply_code_db,       
       ip.rowkey                                         objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua
WHERE  ip.contract = ua.site
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INTORDER_PART_LOV4
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INTORDER_PART_LOV4', 'description', 'FLAGS=A-IUL^DATATYPE=STRING(35)^PROMPT=Description^');
   Alter_Column_Comment('INTORDER_PART_LOV4', 'show_contract', 'FLAGS=AMIUL^REF=Site/NOCHECK^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^');
   Alter_Column_Comment('INTORDER_PART_LOV4', 'supply_code', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=MaterialRequisSupply^PROMPT=Default Mtr Req Supply^');
   Alter_Column_Comment('INTORDER_PART_LOV4', 'supply_code_db', 'FLAGS=A----^DATATYPE=STRING(3)^PROMPT=Default Mtr Req Supply^');
   Alter_Column_Comment('INTORDER_PART_LOV4', 'contract', 'FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INTORDER_PART_LOV4', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INTORDER_PART_LOV4 TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_LOV24 view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_LOV24]
CREATE OR REPLACE VIEW INVENTORY_PART_LOV24 AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       ip.contract                                                   show_contract,      
       Position_Part_API.Decode(position_part)                       position_part,
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.type_code IN ('1', '2', '4')
AND    ip.contract = ua.site
AND    ip.part_no  = pc.part_no
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_LOV24
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_LOV24', 'contract', 'REF=Site/NOCHECK^FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^');
   Alter_Column_Comment('INVENTORY_PART_LOV24', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_LOV24', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV24', 'show_contract', 'FLAGS=A---L^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^');
   Alter_Column_Comment('INVENTORY_PART_LOV24', 'position_part', 'FLAGS=AMI-L^DATATYPE=STRING(200)^PROMPT=Position Part^REF=PositionPart/NOCHECK^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_LOV24 TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_LOV25 view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_LOV25]
CREATE OR REPLACE VIEW INVENTORY_PART_LOV25 AS
SELECT ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       ip.contract                                                   contract,       
       Position_Part_API.Decode(position_part)                       position_part,
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.type_code IN ('1', '2', '4')
AND    ip.contract = ua.site
AND    ip.part_no  = pc.part_no
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_LOV25
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_LOV25', 'contract', 'FLAGS=A---L^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV25', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_LOV25', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV25', 'position_part', 'FLAGS=AMI-L^DATATYPE=STRING(200)^PROMPT=Position Part^REF=PositionPart/NOCHECK^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_LOV25 TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_LOV26 view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_LOV26]
CREATE OR REPLACE VIEW INVENTORY_PART_LOV26 AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       Inventory_Part_Type_API.Decode(ip.type_code)                  type_code,
       ip.type_code                                                  type_code_db,       
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.contract      = ua.site
AND    ip.part_no       = pc.part_no
AND    ip.type_code IN ('1', '2', '3', '4')
AND    pc.position_part = 'NOT POSITION PART'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_LOV26
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_LOV26', 'type_code_db', 'FLAGS=A----^DATATYPE=STRING(2)^PROMPT=Part Type^');
   Alter_Column_Comment('INVENTORY_PART_LOV26', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_LOV26', 'contract', 'FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV26', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV26', 'type_code', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=InventoryPartType^PROMPT=Part Type^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_LOV26 TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_LOV_MRP view

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   stmt_ CLOB;
   eol_  VARCHAR2(2) := chr(13)||chr(10);
BEGIN
      stmt_ := 'CREATE OR REPLACE VIEW INVENTORY_PART_LOV_MRP AS'||eol_;
      stmt_ := stmt_ || 'SELECT ip.contract                                                   contract,'||eol_;
      stmt_ := stmt_ || '       ip.part_no                                                    part_no,'||eol_;
      stmt_ := stmt_ || '       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,'||eol_;
      stmt_ := stmt_ || '       ip.dim_quality                                                dim_quality,'||eol_;
      stmt_ := stmt_ || '       Material_Requis_Supply_API.Decode(ip.supply_code)             supply_code,'||eol_;
      stmt_ := stmt_ || '       ip.supply_code                                                supply_code_db,'||eol_;
      stmt_ := stmt_ || '       ip.rowkey                                                     objkey'||eol_;
      stmt_ := stmt_ || 'FROM   inventory_part_tab ip, inventory_part_planning_tab ip_plan, user_allowed_site_pub ua, part_catalog_pub pc, inventory_part_status_par_pub ips'||eol_;
      stmt_ := stmt_ || 'WHERE  ip.contract = ua.site'||eol_;
      stmt_ := stmt_ || 'AND    ip.contract = ip_plan.contract'||eol_;
      stmt_ := stmt_ || 'AND    ip.part_no  = ip_plan.part_no'||eol_;
      stmt_ := stmt_ || 'AND    ip_plan.planning_method NOT IN (''O'',''T'',''K'')'||eol_;
      stmt_ := stmt_ || 'AND    ip.part_no       = pc.part_no'||eol_;
      stmt_ := stmt_ || 'AND    pc.position_part = ''NOT POSITION PART'''||eol_;
      stmt_ := stmt_ || 'AND    ip.part_status     = ips.part_status'||eol_;
      stmt_ := stmt_ || 'AND    ips.demand_flag_db = ''Y'''||eol_;
   $IF Component_Purch_SYS.INSTALLED $THEN
      stmt_ := stmt_ || 'UNION ALL'||eol_;
      stmt_ := stmt_ || 'SELECT contract                                                      contract,'||eol_;
      stmt_ := stmt_ || '       part_no                                                       part_no,'||eol_;
      stmt_ := stmt_ || '       part_description_in_use                                       description,'||eol_;
      stmt_ := stmt_ || '       NULL                                                          dim_quality,'||eol_;
      stmt_ := stmt_ || '       Material_Requis_Supply_API.Decode(''PO'')                       supply_code,'||eol_;
      stmt_ := stmt_ || '       ''PO''                                                          supply_code_db,'||eol_;
      stmt_ := stmt_ || '       objkey                                                        objkey'||eol_;
      stmt_ := stmt_ || 'FROM   PURCHASE_PART_LOV6'||eol_;
   $END
      stmt_ := stmt_ || 'WITH READ ONLY';
      
      -- ifs_assert_safe codegen
      EXECUTE IMMEDIATE stmt_;
      -- ifs_assert_safe codegen
      EXECUTE IMMEDIATE 'COMMENT ON TABLE INVENTORY_PART_LOV_MRP
         IS ''LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^''';
      -- ifs_assert_safe codegen
      EXECUTE IMMEDIATE 'COMMENT ON COLUMN INVENTORY_PART_LOV_MRP.contract
         IS ''FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^''';
      -- ifs_assert_safe codegen
      EXECUTE IMMEDIATE 'COMMENT ON COLUMN INVENTORY_PART_LOV_MRP.part_no
         IS ''FLAGS=KMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^''';
      -- ifs_assert_safe codegen
      EXECUTE IMMEDIATE 'COMMENT ON COLUMN INVENTORY_PART_LOV_MRP.description
         IS ''FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^''';
      -- ifs_assert_safe codegen
      EXECUTE IMMEDIATE 'COMMENT ON COLUMN INVENTORY_PART_LOV_MRP.dim_quality
         IS ''FLAGS=A---L^PROMPT=Dim/Quality^DATATYPE=STRING(25)^''';
      -- ifs_assert_safe codegen
      EXECUTE IMMEDIATE 'COMMENT ON COLUMN INVENTORY_PART_LOV_MRP.supply_code
         IS ''FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=MaterialRequisSupply^PROMPT=Default Mtr Req Supply^''';
      -- ifs_assert_safe codegen
      EXECUTE IMMEDIATE 'COMMENT ON COLUMN INVENTORY_PART_LOV_MRP.supply_code_db
         IS ''FLAGS=A----^DATATYPE=STRING(3)^PROMPT=Default Mtr Req Supply^''';
      EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_LOV_MRP TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Creating INVENTORY_PART_LOV_27 view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_LOV_27]
CREATE OR REPLACE VIEW INVENTORY_PART_LOV_27 AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       Inventory_Part_Type_API.Decode(ip.type_code)                  type_code,
       ip.type_code                                                  type_code_db
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua
WHERE  ip.contract      = ua.site
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_LOV_27
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_LOV_27', 'contract', 'FLAGS=PMI-L^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV_27', 'type_code_db', 'FLAGS=A----^DATATYPE=STRING(2)^PROMPT=Part Type^');
   Alter_Column_Comment('INVENTORY_PART_LOV_27', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_LOV_27', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV_27', 'type_code', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=InventoryPartType^PROMPT=Part Type^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_LOV_27 TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_LOV28 view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_LOV28]
CREATE OR REPLACE VIEW INVENTORY_PART_LOV28 AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,
       Inventory_Part_Type_API.Decode(ip.type_code)                  type_code,
       ip.type_code                                                  type_code_db,
       ip.create_date                                                created,
       ip.unit_meas                                                  unit_meas,
       ip.catch_unit_meas                                            catch_unit_meas,       
       ip.rowkey                                                    objkey
FROM   INVENTORY_PART_TAB ip, user_allowed_site_pub ua, part_catalog_pub pc
WHERE  ip.contract      = ua.site
AND    ip.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
ORDER BY ip.create_date DESC
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_LOV28
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_LOV28', 'contract', 'FLAGS=PMI-L^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV28', 'created', 'FLAGS=A---L^DATATYPE=DATE/DATE^PROMPT=Created^');
   Alter_Column_Comment('INVENTORY_PART_LOV28', 'type_code_db', 'FLAGS=A----^DATATYPE=STRING(2)^PROMPT=Part Type^');
   Alter_Column_Comment('INVENTORY_PART_LOV28', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   Alter_Column_Comment('INVENTORY_PART_LOV28', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV28', 'type_code', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=InventoryPartType^PROMPT=Part Type^');
   Alter_Column_Comment('INVENTORY_PART_LOV28', 'unit_meas', 'FLAGS=AMI--^DATATYPE=STRING(10)^PROMPT=Unit Meas^REF=IsoUnit/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV28', 'catch_unit_meas', 'FLAGS=A-IU-^DATATYPE=STRING(30)^PROMPT=Catch Unit Meas^REF=IsoUnit/NOCHECK^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_LOV28 TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating INVENTORY_PART_LOV29 view

-- [IFS COMPLETE BLOCK VIEW INVENTORY_PART_LOV29]
CREATE OR REPLACE VIEW INVENTORY_PART_LOV29 AS
SELECT ip.contract                                                   contract,
       ip.part_no                                                    part_no,
       Inventory_Part_API.Get_Description(ip.contract, ip.part_no)   description,      
       ip.rowkey                                                     objkey
FROM   inventory_part_tab ip, inventory_part_planning_tab ip_plan, user_allowed_site_pub ua, part_catalog_pub pc, inventory_part_status_par_pub ips
WHERE  ip.contract = ua.site
AND    ip.contract = ip_plan.contract
AND    ip.part_no  = ip_plan.part_no
AND    ip_plan.planning_method NOT IN ('O','T','K', 'P')
AND    ip.part_no       = pc.part_no
AND    pc.position_part = 'NOT POSITION PART'
AND    ip.part_status     = ips.part_status
AND    ips.onhand_flag_db = 'Y'
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE INVENTORY_PART_LOV29
   IS 'LU=InventoryPart^PROMPT=Inventory Part^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('INVENTORY_PART_LOV29', 'contract', 'FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV29', 'part_no', 'FLAGS=KMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('INVENTORY_PART_LOV29', 'description', 'FLAGS=A---L^DATATYPE=STRING(200)^PROMPT=Description^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON INVENTORY_PART_LOV29 TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating IND_INVENTORY_PART_INFO_LOBBY view

-- [IFS COMPLETE BLOCK VIEW IND_INVENTORY_PART_INFO_LOBBY]
CREATE OR REPLACE VIEW IND_INVENTORY_PART_INFO_LOBBY AS
SELECT contract                                       contract,
       part_no                                        part_no,
       part_no  || ' - ' || description_in_use        part,
       type_code                                      type_code,
       planner_buyer                                  planner_buyer,
       unit_meas                                      unit_meas
FROM   inventory_part
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE IND_INVENTORY_PART_INFO_LOBBY
   IS 'LU=InventoryPart^PROMPT=Inventory Part Info Lobby^MODULE=INVENT^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('IND_INVENTORY_PART_INFO_LOBBY', 'part', 'FLAGS=A----^DATATYPE=STRING(250)^PROMPT=Part^');
   Alter_Column_Comment('IND_INVENTORY_PART_INFO_LOBBY', 'contract', 'FLAGS=PMI--^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('IND_INVENTORY_PART_INFO_LOBBY', 'part_no', 'FLAGS=PMI-L^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Part No^REF=PartCatalog/NOCHECK^');
   Alter_Column_Comment('IND_INVENTORY_PART_INFO_LOBBY', 'type_code', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=InventoryPartType^PROMPT=Part Type^');
   Alter_Column_Comment('IND_INVENTORY_PART_INFO_LOBBY', 'planner_buyer', 'FLAGS=AMIU-^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Planner Buyer^REF=InventoryPartPlanner/NOCHECK^');
   Alter_Column_Comment('IND_INVENTORY_PART_INFO_LOBBY', 'unit_meas', 'FLAGS=AMI--^DATATYPE=STRING(10)^PROMPT=Unit Meas^REF=IsoUnit/NOCHECK^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON IND_INVENTORY_PART_INFO_LOBBY TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/

