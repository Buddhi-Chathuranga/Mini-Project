-----------------------------------------------------------------------------
--
--  Logical unit: InventoryPart
--  Type:         Entity
--  Component:    INVENT
--
--  Template:     3.0
--  Built by:     IFS Developer Studio
--
--  NOTE! Do not edit!! This file is completely generated and will be
--        overwritten next time the corresponding model is saved.
-----------------------------------------------------------------------------

PROMPT Creating Inventory_Part_API specification

-- [IFS COMPLETE BLOCK PACKAGE Inventory_Part_API]
CREATE OR REPLACE PACKAGE Inventory_Part_API IS


--@ObjectConnectionServices:DocReferenceObject,MediaLibrary
--@ObjectConnectionMethod:Get_Description
module_                   CONSTANT VARCHAR2(6)      := 'INVENT';
lu_name_                  CONSTANT VARCHAR2(30)     := 'InventoryPart';
lu_type_                  CONSTANT VARCHAR2(30)     := 'Entity';

-----------------------------------------------------------------------------
-------------------- PUBLIC DECLARATIONS ------------------------------------
-----------------------------------------------------------------------------

TYPE Public_Rec IS RECORD
  (contract                       INVENTORY_PART_TAB.contract%TYPE,
   part_no                        INVENTORY_PART_TAB.part_no%TYPE,
   "rowid"                        rowid,
   rowversion                     INVENTORY_PART_TAB.rowversion%TYPE,
   rowkey                         INVENTORY_PART_TAB.rowkey%TYPE,
   accounting_group               INVENTORY_PART_TAB.accounting_group%TYPE,
   asset_class                    INVENTORY_PART_TAB.asset_class%TYPE,
   country_of_origin              INVENTORY_PART_TAB.country_of_origin%TYPE,
   hazard_code                    INVENTORY_PART_TAB.hazard_code%TYPE,
   note_id                        INVENTORY_PART_TAB.note_id%TYPE,
   part_product_code              INVENTORY_PART_TAB.part_product_code%TYPE,
   part_product_family            INVENTORY_PART_TAB.part_product_family%TYPE,
   part_status                    INVENTORY_PART_TAB.part_status%TYPE,
   planner_buyer                  INVENTORY_PART_TAB.planner_buyer%TYPE,
   prime_commodity                INVENTORY_PART_TAB.prime_commodity%TYPE,
   second_commodity               INVENTORY_PART_TAB.second_commodity%TYPE,
   unit_meas                      INVENTORY_PART_TAB.unit_meas%TYPE,
   catch_unit_meas                INVENTORY_PART_TAB.catch_unit_meas%TYPE,
   abc_class                      INVENTORY_PART_TAB.abc_class%TYPE,
   abc_class_locked_until         INVENTORY_PART_TAB.abc_class_locked_until%TYPE,
   count_variance                 INVENTORY_PART_TAB.count_variance%TYPE,
   create_date                    INVENTORY_PART_TAB.create_date%TYPE,
   cycle_code                     INVENTORY_PART_TAB.cycle_code%TYPE,
   cycle_period                   INVENTORY_PART_TAB.cycle_period%TYPE,
   dim_quality                    INVENTORY_PART_TAB.dim_quality%TYPE,
   durability_day                 INVENTORY_PART_TAB.durability_day%TYPE,
   expected_leadtime              INVENTORY_PART_TAB.expected_leadtime%TYPE,
   lead_time_code                 INVENTORY_PART_TAB.lead_time_code%TYPE,
   manuf_leadtime                 INVENTORY_PART_TAB.manuf_leadtime%TYPE,
   oe_alloc_assign_flag           INVENTORY_PART_TAB.oe_alloc_assign_flag%TYPE,
   onhand_analysis_flag           INVENTORY_PART_TAB.onhand_analysis_flag%TYPE,
   purch_leadtime                 INVENTORY_PART_TAB.purch_leadtime%TYPE,
   earliest_ultd_supply_date      INVENTORY_PART_TAB.earliest_ultd_supply_date%TYPE,
   supersedes                     INVENTORY_PART_TAB.supersedes%TYPE,
   supply_code                    INVENTORY_PART_TAB.supply_code%TYPE,
   type_code                      INVENTORY_PART_TAB.type_code%TYPE,
   customs_stat_no                INVENTORY_PART_TAB.customs_stat_no%TYPE,
   type_designation               INVENTORY_PART_TAB.type_designation%TYPE,
   zero_cost_flag                 INVENTORY_PART_TAB.zero_cost_flag%TYPE,
   avail_activity_status          INVENTORY_PART_TAB.avail_activity_status%TYPE,
   eng_attribute                  INVENTORY_PART_TAB.eng_attribute%TYPE,
   shortage_flag                  INVENTORY_PART_TAB.shortage_flag%TYPE,
   forecast_consumption_flag      INVENTORY_PART_TAB.forecast_consumption_flag%TYPE,
   stock_management               INVENTORY_PART_TAB.stock_management%TYPE,
   intrastat_conv_factor          INVENTORY_PART_TAB.intrastat_conv_factor%TYPE,
   part_cost_group_id             INVENTORY_PART_TAB.part_cost_group_id%TYPE,
   dop_connection                 INVENTORY_PART_TAB.dop_connection%TYPE,
   std_name_id                    INVENTORY_PART_TAB.std_name_id%TYPE,
   inventory_valuation_method     INVENTORY_PART_TAB.inventory_valuation_method%TYPE,
   negative_on_hand               INVENTORY_PART_TAB.negative_on_hand%TYPE,
   technical_coordinator_id       INVENTORY_PART_TAB.technical_coordinator_id%TYPE,
   invoice_consideration          INVENTORY_PART_TAB.invoice_consideration%TYPE,
   actual_cost_activated          INVENTORY_PART_TAB.actual_cost_activated%TYPE,
   max_actual_cost_update         INVENTORY_PART_TAB.max_actual_cost_update%TYPE,
   cust_warranty_id               INVENTORY_PART_TAB.cust_warranty_id%TYPE,
   sup_warranty_id                INVENTORY_PART_TAB.sup_warranty_id%TYPE,
   region_of_origin               INVENTORY_PART_TAB.region_of_origin%TYPE,
   inventory_part_cost_level      INVENTORY_PART_TAB.inventory_part_cost_level%TYPE,
   ext_service_cost_method        INVENTORY_PART_TAB.ext_service_cost_method%TYPE,
   supply_chain_part_group        INVENTORY_PART_TAB.supply_chain_part_group%TYPE,
   automatic_capability_check     INVENTORY_PART_TAB.automatic_capability_check%TYPE,
   input_unit_meas_group_id       INVENTORY_PART_TAB.input_unit_meas_group_id%TYPE,
   dop_netting                    INVENTORY_PART_TAB.dop_netting%TYPE,
   co_reserve_onh_analys_flag     INVENTORY_PART_TAB.co_reserve_onh_analys_flag%TYPE,
   qty_calc_rounding              INVENTORY_PART_TAB.qty_calc_rounding%TYPE,
   lifecycle_stage                INVENTORY_PART_TAB.lifecycle_stage%TYPE,
   life_stage_locked_until        INVENTORY_PART_TAB.life_stage_locked_until%TYPE,
   frequency_class                INVENTORY_PART_TAB.frequency_class%TYPE,
   freq_class_locked_until        INVENTORY_PART_TAB.freq_class_locked_until%TYPE,
   first_stat_issue_date          INVENTORY_PART_TAB.first_stat_issue_date%TYPE,
   latest_stat_issue_date         INVENTORY_PART_TAB.latest_stat_issue_date%TYPE,
   decline_date                   INVENTORY_PART_TAB.decline_date%TYPE,
   expired_date                   INVENTORY_PART_TAB.expired_date%TYPE,
   decline_issue_counter          INVENTORY_PART_TAB.decline_issue_counter%TYPE,
   expired_issue_counter          INVENTORY_PART_TAB.expired_issue_counter%TYPE,
   min_durab_days_co_deliv        INVENTORY_PART_TAB.min_durab_days_co_deliv%TYPE,
   min_durab_days_planning        INVENTORY_PART_TAB.min_durab_days_planning%TYPE,
   storage_width_requirement      INVENTORY_PART_TAB.storage_width_requirement%TYPE,
   storage_height_requirement     INVENTORY_PART_TAB.storage_height_requirement%TYPE,
   storage_depth_requirement      INVENTORY_PART_TAB.storage_depth_requirement%TYPE,
   storage_volume_requirement     INVENTORY_PART_TAB.storage_volume_requirement%TYPE,
   storage_weight_requirement     INVENTORY_PART_TAB.storage_weight_requirement%TYPE,
   min_storage_temperature        INVENTORY_PART_TAB.min_storage_temperature%TYPE,
   max_storage_temperature        INVENTORY_PART_TAB.max_storage_temperature%TYPE,
   min_storage_humidity           INVENTORY_PART_TAB.min_storage_humidity%TYPE,
   max_storage_humidity           INVENTORY_PART_TAB.max_storage_humidity%TYPE,
   standard_putaway_qty           INVENTORY_PART_TAB.standard_putaway_qty%TYPE,
   reset_config_std_cost          INVENTORY_PART_TAB.reset_config_std_cost%TYPE,
   mandatory_expiration_date      INVENTORY_PART_TAB.mandatory_expiration_date%TYPE,
   excl_ship_pack_proposal        INVENTORY_PART_TAB.excl_ship_pack_proposal%TYPE,
   statistical_code               INVENTORY_PART_TAB.statistical_code%TYPE,
   acquisition_origin             INVENTORY_PART_TAB.acquisition_origin%TYPE,
   acquisition_reason_id          INVENTORY_PART_TAB.acquisition_reason_id%TYPE);

TYPE Get_Mrp_Part_Rec IS RECORD(
   part_no        inventory_part_tab.part_no%TYPE,
   planner_buyer  inventory_part_tab.planner_buyer%TYPE,
   mrp_order_code inventory_part_planning_tab.planning_method%TYPE,
   lead_time      NUMBER,
   supply_flag_db inventory_part_status_par_tab.supply_flag%TYPE,
   lead_time_code inventory_part_tab.lead_time_code%TYPE,
   unit_meas      inventory_part_tab.unit_meas%TYPE,
   type_code      inventory_part_tab.type_code%TYPE);

CURSOR Get_Mrp_Part_Cur(contract_ IN VARCHAR2) RETURN Get_Mrp_Part_Rec;

TYPE Reorder_Point_Parts IS RECORD(
   part_no        VARCHAR2(25),
   type_code      VARCHAR2(20),
   mrp_order_code VARCHAR2(1),
   lead_time_code VARCHAR2(20),
   manuf_leadtime NUMBER,
   purch_leadtime NUMBER);

CURSOR Get_Reorder_Point_Parts(contract_ IN VARCHAR2) RETURN Reorder_Point_Parts;


-----------------------------------------------------------------------------
-------------------- BASE METHODS -------------------------------------------
-----------------------------------------------------------------------------
-- Get_Key_By_Rowkey
--   Returns a table record with only keys (other attributes are NULL) based on a rowkey.
--
-- Exist
--   Checks if given pointer (e.g. primary key) to an instance of this
--   logical unit exists. If not an exception will be raised.
--
-- Exists
--   Same check as Exist, but returns a BOOLEAN value instead of exception.
--
-- Rowkey_Exist
--   Checks whether the rowkey exists
--   If not an exception will be raised.
--
-- Get_Accounting_Group
--   Fetches the AccountingGroup attribute for a record.
--
-- Get_Asset_Class
--   Fetches the AssetClass attribute for a record.
--
-- Get_Country_Of_Origin
--   Fetches the CountryOfOrigin attribute for a record.
--
-- Get_Hazard_Code
--   Fetches the HazardCode attribute for a record.
--
-- Get_Note_Id
--   Fetches the NoteId attribute for a record.
--
-- Get_Part_Product_Code
--   Fetches the PartProductCode attribute for a record.
--
-- Get_Part_Product_Family
--   Fetches the PartProductFamily attribute for a record.
--
-- Get_Part_Status
--   Fetches the PartStatus attribute for a record.
--
-- Get_Planner_Buyer
--   Fetches the PlannerBuyer attribute for a record.
--
-- Get_Prime_Commodity
--   Fetches the PrimeCommodity attribute for a record.
--
-- Get_Second_Commodity
--   Fetches the SecondCommodity attribute for a record.
--
-- Get_Unit_Meas
--   Fetches the UnitMeas attribute for a record.
--
-- Get_Catch_Unit_Meas
--   Fetches the CatchUnitMeas attribute for a record.
--
-- Get_Abc_Class
--   Fetches the AbcClass attribute for a record.
--
-- Get_Abc_Class_Locked_Until
--   Fetches the AbcClassLockedUntil attribute for a record.
--
-- Get_Count_Variance
--   Fetches the CountVariance attribute for a record.
--
-- Get_Create_Date
--   Fetches the CreateDate attribute for a record.
--
-- Get_Cycle_Code
--   Fetches the CycleCode attribute for a record.
--
-- Get_Cycle_Code_Db
--   Fetches the DB value of CycleCode attribute for a record.
--
-- Get_Cycle_Period
--   Fetches the CyclePeriod attribute for a record.
--
-- Get_Dim_Quality
--   Fetches the DimQuality attribute for a record.
--
-- Get_Durability_Day
--   Fetches the DurabilityDay attribute for a record.
--
-- Get_Expected_Leadtime
--   Fetches the ExpectedLeadtime attribute for a record.
--
-- Get_Lead_Time_Code
--   Fetches the LeadTimeCode attribute for a record.
--
-- Get_Lead_Time_Code_Db
--   Fetches the DB value of LeadTimeCode attribute for a record.
--
-- Get_Manuf_Leadtime
--   Fetches the ManufLeadtime attribute for a record.
--
-- Get_Oe_Alloc_Assign_Flag
--   Fetches the OeAllocAssignFlag attribute for a record.
--
-- Get_Oe_Alloc_Assign_Flag_Db
--   Fetches the DB value of OeAllocAssignFlag attribute for a record.
--
-- Get_Onhand_Analysis_Flag
--   Fetches the OnhandAnalysisFlag attribute for a record.
--
-- Get_Onhand_Analysis_Flag_Db
--   Fetches the DB value of OnhandAnalysisFlag attribute for a record.
--
-- Get_Purch_Leadtime
--   Fetches the PurchLeadtime attribute for a record.
--
-- Get_Earliest_Ultd_Supply_Date
--   Fetches the EarliestUltdSupplyDate attribute for a record.
--
-- Get_Supersedes
--   Fetches the Supersedes attribute for a record.
--
-- Get_Supply_Code
--   Fetches the SupplyCode attribute for a record.
--
-- Get_Supply_Code_Db
--   Fetches the DB value of SupplyCode attribute for a record.
--
-- Get_Type_Code
--   Fetches the TypeCode attribute for a record.
--
-- Get_Type_Code_Db
--   Fetches the DB value of TypeCode attribute for a record.
--
-- Get_Customs_Stat_No
--   Fetches the CustomsStatNo attribute for a record.
--
-- Get_Type_Designation
--   Fetches the TypeDesignation attribute for a record.
--
-- Get_Zero_Cost_Flag
--   Fetches the ZeroCostFlag attribute for a record.
--
-- Get_Zero_Cost_Flag_Db
--   Fetches the DB value of ZeroCostFlag attribute for a record.
--
-- Get_Avail_Activity_Status
--   Fetches the AvailActivityStatus attribute for a record.
--
-- Get_Avail_Activity_Status_Db
--   Fetches the DB value of AvailActivityStatus attribute for a record.
--
-- Get_Eng_Attribute
--   Fetches the EngAttribute attribute for a record.
--
-- Get_Shortage_Flag
--   Fetches the ShortageFlag attribute for a record.
--
-- Get_Shortage_Flag_Db
--   Fetches the DB value of ShortageFlag attribute for a record.
--
-- Get_Forecast_Consumption_Flag
--   Fetches the ForecastConsumptionFlag attribute for a record.
--
-- Get_Forecast_Consumption_Fl_Db
--   Fetches the DB value of ForecastConsumptionFlag attribute for a record.
--
-- Get_Stock_Management
--   Fetches the StockManagement attribute for a record.
--
-- Get_Stock_Management_Db
--   Fetches the DB value of StockManagement attribute for a record.
--
-- Get_Intrastat_Conv_Factor
--   Fetches the IntrastatConvFactor attribute for a record.
--
-- Get_Part_Cost_Group_Id
--   Fetches the PartCostGroupId attribute for a record.
--
-- Get_Dop_Connection
--   Fetches the DopConnection attribute for a record.
--
-- Get_Dop_Connection_Db
--   Fetches the DB value of DopConnection attribute for a record.
--
-- Get_Inventory_Valuation_Method
--   Fetches the InventoryValuationMethod attribute for a record.
--
-- Get_Inventory_Valuation_Met_Db
--   Fetches the DB value of InventoryValuationMethod attribute for a record.
--
-- Get_Negative_On_Hand
--   Fetches the NegativeOnHand attribute for a record.
--
-- Get_Negative_On_Hand_Db
--   Fetches the DB value of NegativeOnHand attribute for a record.
--
-- Get_Technical_Coordinator_Id
--   Fetches the TechnicalCoordinatorId attribute for a record.
--
-- Get_Invoice_Consideration
--   Fetches the InvoiceConsideration attribute for a record.
--
-- Get_Invoice_Consideration_Db
--   Fetches the DB value of InvoiceConsideration attribute for a record.
--
-- Get_Actual_Cost_Activated
--   Fetches the ActualCostActivated attribute for a record.
--
-- Get_Max_Actual_Cost_Update
--   Fetches the MaxActualCostUpdate attribute for a record.
--
-- Get_Cust_Warranty_Id
--   Fetches the CustWarrantyId attribute for a record.
--
-- Get_Sup_Warranty_Id
--   Fetches the SupWarrantyId attribute for a record.
--
-- Get_Region_Of_Origin
--   Fetches the RegionOfOrigin attribute for a record.
--
-- Get_Inventory_Part_Cost_Level
--   Fetches the InventoryPartCostLevel attribute for a record.
--
-- Get_Inventory_Part_Cost_Lev_Db
--   Fetches the DB value of InventoryPartCostLevel attribute for a record.
--
-- Get_Ext_Service_Cost_Method
--   Fetches the ExtServiceCostMethod attribute for a record.
--
-- Get_Ext_Service_Cost_Method_Db
--   Fetches the DB value of ExtServiceCostMethod attribute for a record.
--
-- Get_Supply_Chain_Part_Group
--   Fetches the SupplyChainPartGroup attribute for a record.
--
-- Get_Automatic_Capability_Check
--   Fetches the AutomaticCapabilityCheck attribute for a record.
--
-- Get_Automatic_Capability_Ch_Db
--   Fetches the DB value of AutomaticCapabilityCheck attribute for a record.
--
-- Get_Input_Unit_Meas_Group_Id
--   Fetches the InputUnitMeasGroupId attribute for a record.
--
-- Get_Dop_Netting
--   Fetches the DopNetting attribute for a record.
--
-- Get_Dop_Netting_Db
--   Fetches the DB value of DopNetting attribute for a record.
--
-- Get_Co_Reserve_Onh_Analys_Flag
--   Fetches the CoReserveOnhAnalysFlag attribute for a record.
--
-- Get_Co_Reserve_Onh_Analys_F_Db
--   Fetches the DB value of CoReserveOnhAnalysFlag attribute for a record.
--
-- Get_Qty_Calc_Rounding
--   Fetches the QtyCalcRounding attribute for a record.
--
-- Get_Lifecycle_Stage
--   Fetches the LifecycleStage attribute for a record.
--
-- Get_Lifecycle_Stage_Db
--   Fetches the DB value of LifecycleStage attribute for a record.
--
-- Get_Life_Stage_Locked_Until
--   Fetches the LifeStageLockedUntil attribute for a record.
--
-- Get_Frequency_Class
--   Fetches the FrequencyClass attribute for a record.
--
-- Get_Frequency_Class_Db
--   Fetches the DB value of FrequencyClass attribute for a record.
--
-- Get_Freq_Class_Locked_Until
--   Fetches the FreqClassLockedUntil attribute for a record.
--
-- Get_First_Stat_Issue_Date
--   Fetches the FirstStatIssueDate attribute for a record.
--
-- Get_Latest_Stat_Issue_Date
--   Fetches the LatestStatIssueDate attribute for a record.
--
-- Get_Decline_Date
--   Fetches the DeclineDate attribute for a record.
--
-- Get_Expired_Date
--   Fetches the ExpiredDate attribute for a record.
--
-- Get_Decline_Issue_Counter
--   Fetches the DeclineIssueCounter attribute for a record.
--
-- Get_Expired_Issue_Counter
--   Fetches the ExpiredIssueCounter attribute for a record.
--
-- Get_Min_Durab_Days_Co_Deliv
--   Fetches the MinDurabDaysCoDeliv attribute for a record.
--
-- Get_Min_Durab_Days_Planning
--   Fetches the MinDurabDaysPlanning attribute for a record.
--
-- Get_Standard_Putaway_Qty
--   Fetches the StandardPutawayQty attribute for a record.
--
-- Get_Reset_Config_Std_Cost
--   Fetches the ResetConfigStdCost attribute for a record.
--
-- Get_Reset_Config_Std_Cost_Db
--   Fetches the DB value of ResetConfigStdCost attribute for a record.
--
-- Get_Mandatory_Expiration_Date
--   Fetches the MandatoryExpirationDate attribute for a record.
--
-- Get_Mandatory_Expiration_Da_Db
--   Fetches the DB value of MandatoryExpirationDate attribute for a record.
--
-- Get_Excl_Ship_Pack_Proposal
--   Fetches the ExclShipPackProposal attribute for a record.
--
-- Get_Excl_Ship_Pack_Proposal_Db
--   Fetches the DB value of ExclShipPackProposal attribute for a record.
--
-- Get_Statistical_Code
--   Fetches the StatisticalCode attribute for a record.
--
-- Get_Acquisition_Origin
--   Fetches the AcquisitionOrigin attribute for a record.
--
-- Get_Acquisition_Reason_Id
--   Fetches the AcquisitionReasonId attribute for a record.
--
-- Get_By_Rowkey
--   Fetches a record containing the public attributes by rowkey inparameter.
--
-- Get
--   Fetches a record containing the public attributes.
--
-- Get_Objkey
--   Fetches the objkey attribute for a record.
--
-- Lock__
--   Client-support to lock a specific instance of the logical unit.
--
-- Remove__
--   Client-support interface to remove LU instances.
--   action_ = 'CHECK'
--   Check whether a specific LU-instance may be removed or not.
--   The procedure fetches the complete record by calling procedure
--   Get_Object_By_Id___. Then the check is made by calling procedure
-----------------------------------------------------------------------------

--@PoReadOnly(Get_Key_By_Rowkey)
FUNCTION Get_Key_By_Rowkey (
   rowkey_ IN VARCHAR2 ) RETURN inventory_part_tab%ROWTYPE;

--@PoReadOnly(Exist)
PROCEDURE Exist (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 );

--@PoReadOnly(Exists)
FUNCTION Exists (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN BOOLEAN;

--@PoReadOnly(Rowkey_Exist)
PROCEDURE Rowkey_Exist (
   rowkey_ IN VARCHAR2 );

--@PoReadOnly(Get_Accounting_Group)
FUNCTION Get_Accounting_Group (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Asset_Class)
FUNCTION Get_Asset_Class (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Country_Of_Origin)
FUNCTION Get_Country_Of_Origin (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Hazard_Code)
FUNCTION Get_Hazard_Code (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Note_Id)
FUNCTION Get_Note_Id (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Part_Product_Code)
FUNCTION Get_Part_Product_Code (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Part_Product_Family)
FUNCTION Get_Part_Product_Family (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Part_Status)
FUNCTION Get_Part_Status (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Planner_Buyer)
FUNCTION Get_Planner_Buyer (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Prime_Commodity)
FUNCTION Get_Prime_Commodity (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Second_Commodity)
FUNCTION Get_Second_Commodity (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Unit_Meas)
FUNCTION Get_Unit_Meas (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Catch_Unit_Meas)
FUNCTION Get_Catch_Unit_Meas (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Abc_Class)
FUNCTION Get_Abc_Class (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Abc_Class_Locked_Until)
FUNCTION Get_Abc_Class_Locked_Until (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_Count_Variance)
FUNCTION Get_Count_Variance (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Create_Date)
FUNCTION Get_Create_Date (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_Cycle_Code)
FUNCTION Get_Cycle_Code (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Cycle_Code_Db)
FUNCTION Get_Cycle_Code_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.cycle_code%TYPE;

--@PoReadOnly(Get_Cycle_Period)
FUNCTION Get_Cycle_Period (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Dim_Quality)
FUNCTION Get_Dim_Quality (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Durability_Day)
FUNCTION Get_Durability_Day (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Expected_Leadtime)
FUNCTION Get_Expected_Leadtime (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Lead_Time_Code)
FUNCTION Get_Lead_Time_Code (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Lead_Time_Code_Db)
FUNCTION Get_Lead_Time_Code_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.lead_time_code%TYPE;

--@PoReadOnly(Get_Manuf_Leadtime)
FUNCTION Get_Manuf_Leadtime (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Oe_Alloc_Assign_Flag)
FUNCTION Get_Oe_Alloc_Assign_Flag (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Oe_Alloc_Assign_Flag_Db)
FUNCTION Get_Oe_Alloc_Assign_Flag_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.oe_alloc_assign_flag%TYPE;

--@PoReadOnly(Get_Onhand_Analysis_Flag)
FUNCTION Get_Onhand_Analysis_Flag (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Onhand_Analysis_Flag_Db)
FUNCTION Get_Onhand_Analysis_Flag_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.onhand_analysis_flag%TYPE;

--@PoReadOnly(Get_Purch_Leadtime)
FUNCTION Get_Purch_Leadtime (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Earliest_Ultd_Supply_Date)
FUNCTION Get_Earliest_Ultd_Supply_Date (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_Supersedes)
FUNCTION Get_Supersedes (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Supply_Code)
FUNCTION Get_Supply_Code (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Supply_Code_Db)
FUNCTION Get_Supply_Code_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.supply_code%TYPE;

--@PoReadOnly(Get_Type_Code)
FUNCTION Get_Type_Code (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Type_Code_Db)
FUNCTION Get_Type_Code_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.type_code%TYPE;

--@PoReadOnly(Get_Customs_Stat_No)
FUNCTION Get_Customs_Stat_No (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Type_Designation)
FUNCTION Get_Type_Designation (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Zero_Cost_Flag)
FUNCTION Get_Zero_Cost_Flag (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Zero_Cost_Flag_Db)
FUNCTION Get_Zero_Cost_Flag_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.zero_cost_flag%TYPE;

--@PoReadOnly(Get_Avail_Activity_Status)
FUNCTION Get_Avail_Activity_Status (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Avail_Activity_Status_Db)
FUNCTION Get_Avail_Activity_Status_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.avail_activity_status%TYPE;

--@PoReadOnly(Get_Eng_Attribute)
FUNCTION Get_Eng_Attribute (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Shortage_Flag)
FUNCTION Get_Shortage_Flag (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Shortage_Flag_Db)
FUNCTION Get_Shortage_Flag_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.shortage_flag%TYPE;

--@PoReadOnly(Get_Forecast_Consumption_Flag)
FUNCTION Get_Forecast_Consumption_Flag (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Forecast_Consumption_Fl_Db)
FUNCTION Get_Forecast_Consumption_Fl_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.forecast_consumption_flag%TYPE;

--@PoReadOnly(Get_Stock_Management)
FUNCTION Get_Stock_Management (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Stock_Management_Db)
FUNCTION Get_Stock_Management_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.stock_management%TYPE;

--@PoReadOnly(Get_Intrastat_Conv_Factor)
FUNCTION Get_Intrastat_Conv_Factor (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Part_Cost_Group_Id)
FUNCTION Get_Part_Cost_Group_Id (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Dop_Connection)
FUNCTION Get_Dop_Connection (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Dop_Connection_Db)
FUNCTION Get_Dop_Connection_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.dop_connection%TYPE;

--@PoReadOnly(Get_Inventory_Valuation_Method)
FUNCTION Get_Inventory_Valuation_Method (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Inventory_Valuation_Met_Db)
FUNCTION Get_Inventory_Valuation_Met_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.inventory_valuation_method%TYPE;

--@PoReadOnly(Get_Negative_On_Hand)
FUNCTION Get_Negative_On_Hand (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Negative_On_Hand_Db)
FUNCTION Get_Negative_On_Hand_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.negative_on_hand%TYPE;

--@PoReadOnly(Get_Technical_Coordinator_Id)
FUNCTION Get_Technical_Coordinator_Id (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Invoice_Consideration)
FUNCTION Get_Invoice_Consideration (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Invoice_Consideration_Db)
FUNCTION Get_Invoice_Consideration_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.invoice_consideration%TYPE;

--@PoReadOnly(Get_Actual_Cost_Activated)
FUNCTION Get_Actual_Cost_Activated (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_Max_Actual_Cost_Update)
FUNCTION Get_Max_Actual_Cost_Update (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Cust_Warranty_Id)
FUNCTION Get_Cust_Warranty_Id (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Sup_Warranty_Id)
FUNCTION Get_Sup_Warranty_Id (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Region_Of_Origin)
FUNCTION Get_Region_Of_Origin (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Inventory_Part_Cost_Level)
FUNCTION Get_Inventory_Part_Cost_Level (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Inventory_Part_Cost_Lev_Db)
FUNCTION Get_Inventory_Part_Cost_Lev_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.inventory_part_cost_level%TYPE;

--@PoReadOnly(Get_Ext_Service_Cost_Method)
FUNCTION Get_Ext_Service_Cost_Method (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Ext_Service_Cost_Method_Db)
FUNCTION Get_Ext_Service_Cost_Method_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.ext_service_cost_method%TYPE;

--@PoReadOnly(Get_Supply_Chain_Part_Group)
FUNCTION Get_Supply_Chain_Part_Group (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Automatic_Capability_Check)
FUNCTION Get_Automatic_Capability_Check (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Automatic_Capability_Ch_Db)
FUNCTION Get_Automatic_Capability_Ch_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.automatic_capability_check%TYPE;

--@PoReadOnly(Get_Input_Unit_Meas_Group_Id)
FUNCTION Get_Input_Unit_Meas_Group_Id (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Dop_Netting)
FUNCTION Get_Dop_Netting (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Dop_Netting_Db)
FUNCTION Get_Dop_Netting_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.dop_netting%TYPE;

--@PoReadOnly(Get_Co_Reserve_Onh_Analys_Flag)
FUNCTION Get_Co_Reserve_Onh_Analys_Flag (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Co_Reserve_Onh_Analys_F_Db)
FUNCTION Get_Co_Reserve_Onh_Analys_F_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.co_reserve_onh_analys_flag%TYPE;

--@PoReadOnly(Get_Qty_Calc_Rounding)
FUNCTION Get_Qty_Calc_Rounding (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Lifecycle_Stage)
FUNCTION Get_Lifecycle_Stage (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Lifecycle_Stage_Db)
FUNCTION Get_Lifecycle_Stage_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.lifecycle_stage%TYPE;

--@PoReadOnly(Get_Life_Stage_Locked_Until)
FUNCTION Get_Life_Stage_Locked_Until (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_Frequency_Class)
FUNCTION Get_Frequency_Class (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Frequency_Class_Db)
FUNCTION Get_Frequency_Class_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.frequency_class%TYPE;

--@PoReadOnly(Get_Freq_Class_Locked_Until)
FUNCTION Get_Freq_Class_Locked_Until (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_First_Stat_Issue_Date)
FUNCTION Get_First_Stat_Issue_Date (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_Latest_Stat_Issue_Date)
FUNCTION Get_Latest_Stat_Issue_Date (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_Decline_Date)
FUNCTION Get_Decline_Date (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_Expired_Date)
FUNCTION Get_Expired_Date (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_Decline_Issue_Counter)
FUNCTION Get_Decline_Issue_Counter (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Expired_Issue_Counter)
FUNCTION Get_Expired_Issue_Counter (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Min_Durab_Days_Co_Deliv)
FUNCTION Get_Min_Durab_Days_Co_Deliv (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Min_Durab_Days_Planning)
FUNCTION Get_Min_Durab_Days_Planning (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Standard_Putaway_Qty)
FUNCTION Get_Standard_Putaway_Qty (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Reset_Config_Std_Cost)
FUNCTION Get_Reset_Config_Std_Cost (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Reset_Config_Std_Cost_Db)
FUNCTION Get_Reset_Config_Std_Cost_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.reset_config_std_cost%TYPE;

--@PoReadOnly(Get_Mandatory_Expiration_Date)
FUNCTION Get_Mandatory_Expiration_Date (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Mandatory_Expiration_Da_Db)
FUNCTION Get_Mandatory_Expiration_Da_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.mandatory_expiration_date%TYPE;

--@PoReadOnly(Get_Excl_Ship_Pack_Proposal)
FUNCTION Get_Excl_Ship_Pack_Proposal (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Excl_Ship_Pack_Proposal_Db)
FUNCTION Get_Excl_Ship_Pack_Proposal_Db (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN inventory_part_tab.excl_ship_pack_proposal%TYPE;

--@PoReadOnly(Get_Statistical_Code)
FUNCTION Get_Statistical_Code (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Acquisition_Origin)
FUNCTION Get_Acquisition_Origin (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Acquisition_Reason_Id)
FUNCTION Get_Acquisition_Reason_Id (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_By_Rowkey)
FUNCTION Get_By_Rowkey (
   rowkey_ IN VARCHAR2 ) RETURN Public_Rec;

--@PoReadOnly(Get)
FUNCTION Get (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN Public_Rec;

--@PoReadOnly(Get_Objkey)
FUNCTION Get_Objkey (
   contract_ IN VARCHAR2,
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Lock__)
PROCEDURE Lock__ (
   info_       OUT VARCHAR2,
   objid_      IN  VARCHAR2,
   objversion_ IN  VARCHAR2 );

PROCEDURE Remove__ (
   info_       OUT VARCHAR2,
   objid_      IN  VARCHAR2,
   objversion_ IN  VARCHAR2,
   action_     IN  VARCHAR2 );

-----------------------------------------------------------------------------
-------------------- LU SPECIFIC PUBLIC METHODS -----------------------------
-----------------------------------------------------------------------------
-- Get_Std_Name_Id
--   Fetches the StdNameId attribute for a record.
--
-- Get_Storage_Width_Requirement
--   Fetches the StorageWidthRequirement attribute for a record.
--
-- Get_Storage_Height_Requirement
--   Fetches the StorageHeightRequirement attribute for a record.
--
-- Get_Storage_Depth_Requirement
--   Fetches the StorageDepthRequirement attribute for a record.
--
-- Get_Storage_Volume_Requirement
--   Fetches the StorageVolumeRequirement attribute for a record.
--
-- Get_Storage_Weight_Requirement
--   Fetches the StorageWeightRequirement attribute for a record.
--
-- Get_Min_Storage_Temperature
--   Fetches the MinStorageTemperature attribute for a record.
--
-- Get_Max_Storage_Temperature
--   Fetches the MaxStorageTemperature attribute for a record.
--
-- Get_Min_Storage_Humidity
--   Fetches the MinStorageHumidity attribute for a record.
--
-- Get_Max_Storage_Humidity
--   Fetches the MaxStorageHumidity attribute for a record.
--
-- Get_Superseded_By
--
-- Get_Volume_Net
--
-- Get_Weight_Net
--
-- Check_Stored
--   To check whether a part is stored or not.
--
-- Count_Sites
--   Counts the number of sites where a part is registered.
--
-- Check_Exist_Anywhere
--   Check if a part exists on any site. Returns TRUE if the specified part
--   exists, otherwise FALSE.
--
-- Check_Exist
--   Check if the specified part exists.
--
-- Check_If_Purchased
--   Returns part_no if type_code indicates a purchasepart, else returns NULL.
--
-- Check_Any_Forecast_Part_Exist
--
-- Part_Exist
--   Returns 1 if the specified part exists, otherwise 0.
--
-- Document_Connected
--   Check if any document connected.
--
-- Get_Values_For_Accounting
--   Returns information needed for MpccomAccounting.
--   Db-value is returned for type_code!
--
-- Get_Inventory_Value_By_Method
--
-- Modify_Abc_Frequency_Lifecycle
--
-- Modify_Counted_Part
--   Updates counting data for a part.
--
-- Modify_Purch_Leadtime
--   Updates purchase lead time for a part.
--
-- Modify_Expected_Leadtime
--   Modifies the attribute ExpectedLeadtime for a part.
--
-- Modify_Part_Product_Code
--   Public method for modification of attribute part_product_code.
--
-- Modify_Part_Product_Family
--   Public method for modification of attribute part product family.
--
-- Recalc_Stockfactors
--
-- Get_Production_Flags
--   Returns attributes used in ShopOrderProp.
--   Db-values are returned where applicable!
--
-- New_Part
--   Creates a new inventory part.
--   Parameter abc_class_ in method New_Part is obsolete and should
--   be removed in the next core project.
--
-- Qty_To_Order
--
-- Check_If_Counting
--   Checks if part should be included in counting report.
--
-- Set_Avail_Activity_Status
--   Sets the attribute AvailActivityStatus.
--
-- Clear_Avail_Activity_Status
--   Clears the attribute AvailActivityStatus.
--
-- Get_Stop_Analysis_Date
--   The method uses the expected lead time for the inventory part and
--   also uses the Shop Calendar. It returns the date of the actual
--   workday that is the first workday beyond the lead time span based
--   on today's date
--
-- Check_If_Manufactured
--   Checks if a part is manufactured. Returns 1 if manufactured else 0.
--
-- Modify_Manuf_Leadtime
--   Modifying manufacturing leadtime.
--
-- Copy
--   Method creates new instance and copies all public attributes from
--   old part. The copying can be overridden by sending in specific values
--   via the attribute string.
--
-- Copy_Part_To_Site
--   Copy all the parts from From site with SecondCommodity equal to
--   FromSecondCommodity to To site that doesn't exist on the To site.
--
-- Get_Cumm_Leadtime
--
-- Get_Mrp_Order_Code
--
-- Get_No_Of_Purchase_Parts
--   This functions will return the number of purchase part for a specific
--   contract which is needed for calculations in the costing module.
--
-- Calc_Purch_Costs
--
-- Modify_Part_Cost_Group_Id
--   Modifies the PartCostGroupId for the specified part.
--
-- Get_No_Of_Parts
--   Counts all inventory parts on one site.
--
-- Get_Invent_Valuation_Method_Db
--   Fetches the database value of the inventory valuation method for the part.
--
-- Get_Invent_Part_Cost_Level_Db
--   Fetches the database value of the Inventory Part Cost Level for the part.
--
-- Get_Forecast_Consump_Flag_Db
--   This method will return the forecast consumption flag as a db value.
--
-- Get_Forecast_Trans_Start_Date
--   This method will return the latest Transaction_Start_Date
--   considering all forecast parts connected to inventory part.
--
-- Get_Forecast_Phase_In_Date
--   This method will return the latest Phase_In_Date
--   considering all forecast parts connected to inventory part.
--
-- Get_Forecast_Phase_Out_Date
--   This method will return the latest Phase_Out_Date
--   considering all forecast parts connected to inventory part.
--
-- Get_Forecast_Service_Level
--   This method will return the Serice level of a master flow part
--   considering all forecast parts connected to inventory part.
--
-- Get_Forecast_Fill_Rate
--   This method will return the Fill Rate of a master flow part
--   considering all forecast parts connected to inventory part.
--
-- Check_If_Alternate_Part
--   Check if alternate part exists for given part. Return 'TRUE' or 'FALSE'.
--
-- Check_Partca_Part_Exist
--   Check if the part exists on any site. If part exists, return 'TRUE'.
--   'FALSE' otherwise.
--
-- Check_Value_Method_Combination
--   This public method performs combination checks between Inventory Valuation
--   Method and Part Cost Level and Actual Costing and Serial Tracking and Lot
--   Batch Tracking and Zero Cost Allowed and Condition Code settings and
--   Configuration settings.
--
-- Check_Exist_On_User_Site
--   This method checks if the part exists in at least one user allowed site,
--   and if so, returns 'TRUE' ('FALSE' otherwise).
--
-- Check_Neg_Onhand_Part_Exist
--   This checks whether negative quantity on hand is allowed for a given part.
--
-- Customs_Stat_No_With_Uom_Exist
--
-- Copy_Connected_Objects
--   This method copies connected objects of a given part to another part.
--
-- Copy_Note_Texts
--   This method copies the note texts from a given part to another part.
--
-- Copy_Characteristics
--   This method copies characteristics of a given part to another part.
--
-- Check_Ownership_Transfer_Point
--   Validates the combination of Ownership Transfer Point and Supplier
--   Invoice Consideration.
--
-- Cascade_Update_On_SO_Close
--   Check if a Shop Order for a part should trigger a cascade update
--   of transactions when the SO is closed. A cascade should be initiated
--   when valuation method is Weighted Average or cost level is cost per
--
-- Get_Calc_Rounded_Qty
--   Calculates and returns the rounded inventory quantity.
--
-- Check_Partcat_Unit_Code_Change
--   Check unit of measure difference in part catalog and inventory
--
-- Get_Description
--
-- Handle_Partca_Desc_Change
--   Handles the updation of description in accordance with part catalog
--   description when centralized part catalog description is used.
--
-- Handle_Partca_Desc_Flag_Change
--   Handles the description according to Use_Partca_Desc_Invent flag
--   modification in site.
--
-- Get_Site_Converted_Qty
--
-- Get_Site_Converted_Qty
--
-- Get_Site_Converted_Qty
--
-- Get_User_Default_Converted_Qty
--   Converts a quantity from one sites inventory UoM to another sites inventory UoM.
--   The "to site" will either be the user default site or if the user default site
--   dont have the part it will use the first available site where this part exist.
--   Valid rounding_action_ values are 'ADD', 'REMOVE', 'SKIP' to decide if you want
--   to round the value up, down or skip the rounding. Use 'ADD' if is a demand quantity,
--   use 'REMOVE' if it is a supply quantity, use 'SKIP' when you dont want a rounding
--   like if you summarize several values and you only want to round the sum in the end.
--   unit_category can be INVENT(default) or CATCH depending on which UoM you would like to use.
--
-- Get_User_Default_Unit_Meas
--   Fetches the UoM for the Part on either the user default site or if the user default site
--   dont have the part it will use the first available site where this part exist.
--   unit_category can be INVENT(default) or CATCH depending on which UoM you would like to use.
--
-- Get_User_Default_Site
--   Fetches the Site for the Part on either the user default site or if the user default site
--   dont have the part it will use the first available site where this part exist.
--
-- Get_Enabled_Catch_Unit_Meas
--   Fetches the catch UoM for an inventory part that it catch unit enabled in
--   Part Catalog.
--
-- Check_Enable_Catch_Unit
--
-- Modify_Qty_Calc_Rounding
--   Modifies the attribute QtyCalcRounding.
--   Modifies the attribute QtyCalcRounding.
--
-- Modify_Eng_Attribute
--
-- Get_All_Notes
--   Return the Notes and Note Ids connected to a Inventory Part and related Part
--   Catalog Language.
--
-- Cascade_Trans_Cost_Update
--   Check if an inventory part is using Actual Cost.
--   Check if an inventory part is using Actual Cost.
--
-- Cascade_Trans_Cost_Update
--   Check if an inventory part is using Actual Cost.
--   Check if an inventory part is using Actual Cost.
--
-- Modify_Type_Code
--   Modifies the type code of the inventory part.
--
-- Modify_Invent_Part_Cost_Level
--   Modifies the inventory part cost level of the inventory part.
--
-- Modify_Invent_Valuation_Met
--   Modifies the inventory part valuation method.
--
-- Modify_Earliest_Ultd_Sply_Date
--   Modifies the attribute earliest unlimited supply date for a part.
--
-- Modify_Earliest_Ultd_Sply_Date
--   Modifies the attribute earliest unlimited supply date for a part.
--
-- Check_Disallow_As_Not_Consumed
--
-- Cascade_Update_On_SO_Close_Str
--   Check if a Shop Order for a part should trigger a cascade update of
--   transactions when the SO is closed. A cascade should be initiated
--   when valuation method is Weighted Average or cost level is cost per serial.
--   used by clients to show the inverted operative volume value
--   used by clients to show the inverted volume value
--
-- Add_Issue_For_Decline_Expired
--
-- Modify_Latest_Stat_Issue_Date
--
-- Get_Storage_Volume_Req_Oper_Cl
--
-- Get_Storage_Volume_Req_Client
--
-- Get_Storage_Width_Req_Source
--
-- Get_Storage_Height_Req_Source
--
-- Get_Storage_Depth_Req_Source
--
-- Get_Storage_Volume_Req_Source
--
-- Get_Storage_Weight_Req_Source
--
-- Get_Min_Storage_Temp_Source
--
-- Get_Max_Storage_Temp_Source
--
-- Get_Min_Storage_Humid_Source
--
-- Get_Max_Storage_Humid_Source
--
-- Check_Temperature_Range
--
-- Check_Humidity_Range
--
-- Unit_Meas_Different_On_Sites
--
-- Get_Putaway_Zone_Refill_Opt_Db
--
-- Get_Putaway_Refill_Option_Src
--
-- Get_Putaway_Zone_Refill_Option
--
-- Get_Ultd_Expected_Supply_Date
--
-- Get_Ultd_Manuf_Supply_Date
--
-- Get_Ultd_Purch_Supply_Date
--
-- Exist_With_Wildcard
--
-- Transf_Invent_Part_To_Eng_Rev
--   Transform the key ref from lu: InventoryPart to EngPartRevision.
--   Used for Object Connection LU Transformations
--   This method is used by DataCaptureInventUtil and DataCaptureMovePart
--
-- Create_Data_Capture_Lov
--
-- Get_Media_Id
--   This method returns the default Media ID for a specific Inventory Part
--   by which the media can be fetched from the Media Library
--
-- Check_Negative_On_Hand
--
-- Get_Latest_Order_Date
-----------------------------------------------------------------------------

--@PoReadOnly(Get_Std_Name_Id)
FUNCTION Get_Std_Name_Id (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Storage_Width_Requirement)
FUNCTION Get_Storage_Width_Requirement (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Storage_Height_Requirement)
FUNCTION Get_Storage_Height_Requirement (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Storage_Depth_Requirement)
FUNCTION Get_Storage_Depth_Requirement (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Storage_Volume_Requirement)
FUNCTION Get_Storage_Volume_Requirement (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Storage_Weight_Requirement)
FUNCTION Get_Storage_Weight_Requirement (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Min_Storage_Temperature)
FUNCTION Get_Min_Storage_Temperature (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Max_Storage_Temperature)
FUNCTION Get_Max_Storage_Temperature (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Min_Storage_Humidity)
FUNCTION Get_Min_Storage_Humidity (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Max_Storage_Humidity)
FUNCTION Get_Max_Storage_Humidity (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Superseded_By)
FUNCTION Get_Superseded_By (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Volume_Net)
FUNCTION Get_Volume_Net (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Weight_Net)
FUNCTION Get_Weight_Net (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Check_Stored)
FUNCTION Check_Stored (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN BOOLEAN;

--@PoReadOnly(Count_Sites)
FUNCTION Count_Sites (
   part_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Check_Exist_Anywhere)
FUNCTION Check_Exist_Anywhere (
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Check_Exist)
FUNCTION Check_Exist (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN BOOLEAN;

--@PoReadOnly(Check_If_Purchased)
FUNCTION Check_If_Purchased (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Check_Any_Forecast_Part_Exist)
FUNCTION Check_Any_Forecast_Part_Exist(
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Part_Exist)
FUNCTION Part_Exist (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Document_Connected)
FUNCTION Document_Connected (
    contract_ IN VARCHAR2,
    part_no_  IN VARCHAR2) RETURN BOOLEAN;

--@PoReadOnly(Get_Values_For_Accounting)
PROCEDURE Get_Values_For_Accounting (
   type_code_           OUT NOCOPY VARCHAR2,
   prime_commodity_     OUT NOCOPY VARCHAR2,
   second_commodity_    OUT NOCOPY VARCHAR2,
   asset_class_         OUT NOCOPY VARCHAR2,
   abc_class_           OUT NOCOPY VARCHAR2,
   engineering_group_   OUT NOCOPY VARCHAR2,
   planner_buyer_       OUT NOCOPY VARCHAR2,
   accounting_group_    OUT NOCOPY VARCHAR2,
   part_product_family_ OUT NOCOPY VARCHAR2,
   part_product_code_   OUT NOCOPY VARCHAR2,
   contract_            IN  VARCHAR2,
   part_no_             IN  VARCHAR2 );

--@PoReadOnly(Get_Inventory_Value_By_Method)
FUNCTION Get_Inventory_Value_By_Method (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

PROCEDURE Modify_Abc_Frequency_Lifecycle (
   contract_           IN VARCHAR2,
   part_no_            IN VARCHAR2,
   abc_class_          IN VARCHAR2,
   frequency_class_db_ IN VARCHAR2,
   lifecycle_stage_db_ IN VARCHAR2 );

PROCEDURE Modify_Counted_Part (
   contract_       IN VARCHAR2,
   part_no_        IN VARCHAR2,
   count_variance_ IN NUMBER );

PROCEDURE Modify_Purch_Leadtime (
   contract_       IN VARCHAR2,
   part_no_        IN VARCHAR2,
   purch_leadtime_ IN NUMBER );

PROCEDURE Modify_Expected_Leadtime (
   contract_          IN VARCHAR2,
   part_no_           IN VARCHAR2,
   expected_leadtime_ IN NUMBER );

PROCEDURE Modify_Part_Product_Code (
   contract_          IN VARCHAR2,
   part_no_           IN VARCHAR2,
   part_product_code_ IN VARCHAR2 );

PROCEDURE Modify_Part_Product_Family (
   contract_            IN VARCHAR2,
   part_no_             IN VARCHAR2,
   part_product_family_ IN VARCHAR2 );

PROCEDURE Recalc_Stockfactors (
   contract_         IN VARCHAR2,
   second_commodity_ IN VARCHAR2,
   periods_          IN NUMBER );

PROCEDURE Get_Production_Flags (
   lead_time_code_  OUT VARCHAR2,
   manuf_leadtime_  OUT NUMBER,
   purch_leadtime_  OUT NUMBER,
   planning_method_ OUT VARCHAR2,
   supply_code_     OUT VARCHAR2,
   type_code_       OUT VARCHAR2,
   unit_meas_       OUT VARCHAR2,
   contract_        IN  VARCHAR2,
   part_no_         IN  VARCHAR2 );

PROCEDURE New_Part (
   contract_                      IN VARCHAR2,
   part_no_                       IN VARCHAR2,
   accounting_group_              IN VARCHAR2,
   asset_class_                   IN VARCHAR2,
   country_of_origin_             IN VARCHAR2,
   hazard_code_                   IN VARCHAR2,
   part_product_code_             IN VARCHAR2,
   part_product_family_           IN VARCHAR2,
   part_status_                   IN VARCHAR2,
   planner_buyer_                 IN VARCHAR2,
   prime_commodity_               IN VARCHAR2,
   second_commodity_              IN VARCHAR2,
   unit_meas_                     IN VARCHAR2,
   description_                   IN VARCHAR2,
   abc_class_                     IN VARCHAR2,
   count_variance_                IN NUMBER,
   create_date_                   IN DATE,
   cycle_code_                    IN VARCHAR2,
   cycle_period_                  IN NUMBER,
   dim_quality_                   IN VARCHAR2,
   durability_day_                IN NUMBER,
   expected_leadtime_             IN NUMBER,
   inactive_obs_flag_             IN VARCHAR2,
   last_activity_date_            IN DATE,
   lead_time_code_                IN VARCHAR2,
   manuf_leadtime_                IN NUMBER,
   note_text_                     IN VARCHAR2,
   oe_alloc_assign_flag_          IN VARCHAR2,
   onhand_analysis_flag_          IN VARCHAR2,
   purch_leadtime_                IN NUMBER,
   supersedes_                    IN VARCHAR2,
   supply_code_                   IN VARCHAR2,
   type_code_                     IN VARCHAR2,
   customs_stat_no_               IN VARCHAR2,
   type_designation_              IN VARCHAR2,
   zero_cost_flag_                IN VARCHAR2,
   avail_activity_status_         IN VARCHAR2,
   eng_attribute_                 IN VARCHAR2,
   forecast_consumption_flag_     IN VARCHAR2 DEFAULT NULL,
   intrastat_conv_factor_         IN NUMBER DEFAULT NULL,
   invoice_consideration_         IN VARCHAR2 DEFAULT NULL,
   max_actual_cost_update_        IN NUMBER DEFAULT NULL,
   shortage_flag_                 IN VARCHAR2 DEFAULT NULL,
   inventory_part_cost_level_     IN VARCHAR2 DEFAULT NULL,
   std_name_id_                   IN NUMBER DEFAULT NULL,
   input_unit_meas_group_id_      IN VARCHAR2 DEFAULT NULL,
   dop_connection_                IN VARCHAR2 DEFAULT NULL,
   supply_chain_part_group_       IN VARCHAR2 DEFAULT NULL,
   ext_service_cost_method_       IN VARCHAR2 DEFAULT NULL,
   stock_management_              IN VARCHAR2 DEFAULT NULL,
   technical_coordinator_id_      IN VARCHAR2 DEFAULT NULL,
   sup_warranty_id_               IN NUMBER DEFAULT NULL,
   cust_warranty_id_              IN NUMBER DEFAULT NULL,
   estimated_material_cost_       IN NUMBER DEFAULT NULL,
   automatic_capability_check_    IN VARCHAR2 DEFAULT NULL,
   create_purchase_part_          IN VARCHAR2 DEFAULT 'TRUE',
   inventory_valuation_method_    IN VARCHAR2 DEFAULT NULL,
   negative_on_hand_              IN VARCHAR2 DEFAULT NULL,
   create_part_planning_          IN VARCHAR2 DEFAULT 'TRUE',
   catch_unit_meas_               IN VARCHAR2 DEFAULT NULL,
   part_cost_group_id_            IN VARCHAR2 DEFAULT NULL,
   qty_calc_rounding_             IN NUMBER DEFAULT NULL,
   min_durab_days_co_deliv_       IN NUMBER DEFAULT NULL,
   min_durab_days_planning_       IN NUMBER DEFAULT NULL,
   storage_width_requirement_     IN NUMBER DEFAULT NULL,
   storage_height_requirement_    IN NUMBER DEFAULT NULL,
   storage_depth_requirement_     IN NUMBER DEFAULT NULL,
   storage_volume_requirement_    IN NUMBER DEFAULT NULL,
   storage_weight_requirement_    IN NUMBER DEFAULT NULL,
   min_storage_temperature_       IN NUMBER DEFAULT NULL,
   max_storage_temperature_       IN NUMBER DEFAULT NULL,
   min_storage_humidity_          IN NUMBER DEFAULT NULL,
   max_storage_humidity_          IN NUMBER DEFAULT NULL,
   standard_putaway_qty_          IN NUMBER DEFAULT NULL,
   putaway_zone_refill_option_    IN VARCHAR2 DEFAULT NULL,
   dop_netting_db_                IN VARCHAR2 DEFAULT NULL,
   reset_config_std_cost_db_      IN VARCHAR2 DEFAULT NULL,
   co_reserve_onh_analys_flag_db_ IN VARCHAR2 DEFAULT NULL,
   mandatory_expiration_date_db_  IN VARCHAR2 DEFAULT NULL,
   region_of_origin_              IN VARCHAR2 DEFAULT NULL,
   statistical_code_              IN VARCHAR2 DEFAULT NULL,
   acquisition_origin_            IN NUMBER DEFAULT NULL,
   acquisition_reason_id_         IN VARCHAR2 DEFAULT NULL);

PROCEDURE Qty_To_Order (
   requisition_no_  IN OUT NOCOPY VARCHAR2,
   qty_ordered_     IN OUT NOCOPY NUMBER,
   disp_qty_onhand_ IN OUT NOCOPY NUMBER,
   contract_        IN     VARCHAR2,
   part_no_         IN     VARCHAR2,
   date_required_   IN     DATE,
   type_code_       IN     VARCHAR2,
   lu_req_exist_    IN     BOOLEAN,
   lu_shp_exist_    IN     BOOLEAN,
   create_req_      IN     NUMBER,
   authorize_code_  IN     VARCHAR2,
   order_point_qty_ IN     NUMBER );

--@PoReadOnly(Check_If_Counting)
FUNCTION Check_If_Counting (
   contract_         IN VARCHAR2,
   part_no_          IN VARCHAR2,
   second_commodity_ IN VARCHAR2,
   cycle_code_       IN VARCHAR2 ) RETURN VARCHAR2;

PROCEDURE Set_Avail_Activity_Status (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 );

PROCEDURE Clear_Avail_Activity_Status (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 );

--@PoReadOnly(Get_Stop_Analysis_Date)
FUNCTION Get_Stop_Analysis_Date (
   contract_                    IN VARCHAR2,
   part_no_                     IN VARCHAR2,
   site_date_                   IN DATE,
   dist_calendar_id_            IN VARCHAR2,
   manuf_calendar_id_           IN VARCHAR2,
   detect_supplies_not_allowed_ IN VARCHAR2,
   use_expected_leadtime_       IN VARCHAR2 DEFAULT Fnd_Boolean_API.db_true ) RETURN DATE;

--@PoReadOnly(Check_If_Manufactured)
FUNCTION Check_If_Manufactured (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

PROCEDURE Modify_Manuf_Leadtime (
   contract_       IN VARCHAR2,
   part_no_        IN VARCHAR2,
   manuf_leadtime_ IN NUMBER );

PROCEDURE Copy (
   new_contract_             IN VARCHAR2,
   new_part_no_              IN VARCHAR2,
   old_contract_             IN VARCHAR2,
   old_part_no_              IN VARCHAR2,
   attr_                     IN VARCHAR2 DEFAULT NULL,
   error_when_no_source_     IN VARCHAR2 DEFAULT 'TRUE',
   error_when_existing_copy_ IN VARCHAR2 DEFAULT 'TRUE',
   create_purchase_part_     IN VARCHAR2 DEFAULT 'TRUE' );

PROCEDURE Copy_Part_To_Site (
   from_contract_         IN VARCHAR2,
   from_second_commodity_ IN VARCHAR2,
   to_contract_           IN VARCHAR2 );

FUNCTION Get_Cumm_Leadtime (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Mrp_Order_Code)
FUNCTION Get_Mrp_Order_Code (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_No_Of_Purchase_Parts)
FUNCTION Get_No_Of_Purchase_Parts (
   contract_ IN VARCHAR2 ) RETURN NUMBER;

PROCEDURE Calc_Purch_Costs (
   contract_      IN VARCHAR2,
   cost_set_type_ IN VARCHAR2,
   begin_date_    IN DATE,
   end_date_      IN DATE );

PROCEDURE Modify_Part_Cost_Group_Id (
   contract_           IN VARCHAR2,
   part_no_            IN VARCHAR2,
   part_cost_group_id_ IN VARCHAR2 );

--@PoReadOnly(Get_No_Of_Parts)
FUNCTION Get_No_Of_Parts (
   contract_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Invent_Valuation_Method_Db)
FUNCTION Get_Invent_Valuation_Method_Db (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Invent_Part_Cost_Level_Db)
FUNCTION Get_Invent_Part_Cost_Level_Db (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Forecast_Consump_Flag_Db)
FUNCTION Get_Forecast_Consump_Flag_Db (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Forecast_Trans_Start_Date)
FUNCTION Get_Forecast_Trans_Start_Date (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_Forecast_Phase_In_Date)
FUNCTION Get_Forecast_Phase_In_Date (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_Forecast_Phase_Out_Date)
FUNCTION Get_Forecast_Phase_Out_Date (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_Forecast_Service_Level)
FUNCTION Get_Forecast_Service_Level (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Forecast_Fill_Rate)
FUNCTION Get_Forecast_Fill_Rate (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Check_If_Alternate_Part)
FUNCTION Check_If_Alternate_Part (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Check_Partca_Part_Exist)
FUNCTION Check_Partca_Part_Exist (
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

PROCEDURE Check_Value_Method_Combination (
   contract_                      IN VARCHAR2,
   part_no_                       IN VARCHAR2,
   configurable_db_               IN VARCHAR2,
   condition_code_usage_db_       IN VARCHAR2,
   lot_tracking_code_db_          IN VARCHAR2,
   serial_tracking_code_db_       IN VARCHAR2,
   receipt_issue_serial_track_db_ IN VARCHAR2 );

--@PoReadOnly(Check_Exist_On_User_Site)
FUNCTION Check_Exist_On_User_Site (
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Check_Neg_Onhand_Part_Exist)
FUNCTION Check_Neg_Onhand_Part_Exist (
   part_no_  IN VARCHAR2,
   contract_ IN VARCHAR2 DEFAULT NULL ) RETURN VARCHAR2;

--@PoReadOnly(Customs_Stat_No_With_Uom_Exist)
FUNCTION Customs_Stat_No_With_Uom_Exist (
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

PROCEDURE Copy_Connected_Objects (
   from_contract_            IN VARCHAR2,
   from_part_no_             IN VARCHAR2,
   to_contract_              IN VARCHAR2,
   to_part_no_               IN VARCHAR2,
   error_when_no_source_     IN VARCHAR2,
   error_when_existing_copy_ IN VARCHAR2 );

PROCEDURE Copy_Note_Texts (
   from_contract_            IN VARCHAR2,
   from_part_no_             IN VARCHAR2,
   to_contract_              IN VARCHAR2,
   to_part_no_               IN VARCHAR2,
   error_when_no_source_     IN VARCHAR2,
   error_when_existing_copy_ IN VARCHAR2 );

PROCEDURE Copy_Characteristics (
   from_contract_            IN VARCHAR2,
   from_part_no_             IN VARCHAR2,
   to_contract_              IN VARCHAR2,
   to_part_no_               IN VARCHAR2,
   error_when_no_source_     IN VARCHAR2,
   error_when_existing_copy_ IN VARCHAR2 );

PROCEDURE Check_Ownership_Transfer_Point (
   company_                     IN VARCHAR2,
   ownership_transfer_point_db_ IN VARCHAR2 );

--@PoReadOnly(Cascade_Update_On_SO_Close)
FUNCTION Cascade_Update_On_SO_Close (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN BOOLEAN;

--@PoReadOnly(Get_Calc_Rounded_Qty)
FUNCTION Get_Calc_Rounded_Qty (
   contract_         IN VARCHAR2,
   part_no_          IN VARCHAR2,
   original_qty_     IN NUMBER,
   action_           IN VARCHAR2 DEFAULT 'ADD',
   ignore_unit_type_ IN BOOLEAN  DEFAULT FALSE ) RETURN NUMBER;

PROCEDURE Check_Partcat_Unit_Code_Change (
   part_no_             IN VARCHAR2,
   old_unit_of_measure_ IN VARCHAR2,
   new_unit_of_measure_ IN VARCHAR2 );

--@PoReadOnly(Get_Description)
FUNCTION Get_Description (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

PROCEDURE Handle_Partca_Desc_Change (
   part_no_ IN VARCHAR2 );

PROCEDURE Handle_Partca_Desc_Flag_Change (
   contract_ IN VARCHAR2 );

--@PoReadOnly(Get_Site_Converted_Qty)
FUNCTION Get_Site_Converted_Qty (
   contract_        IN VARCHAR2,
   part_no_         IN VARCHAR2,
   quantity_        IN NUMBER,
   to_contract_     IN VARCHAR2,
   rounding_action_ IN VARCHAR2,
   unit_category_   IN VARCHAR2 DEFAULT 'INVENT',
   to_part_no_      IN VARCHAR2 DEFAULT NULL ) RETURN NUMBER;

FUNCTION Get_Site_Converted_Qty (
   part_no_         IN VARCHAR2,
   quantity_        IN NUMBER,
   unit_meas_       IN VARCHAR2,
   to_contract_     IN VARCHAR2,
   rounding_action_ IN VARCHAR2,
   unit_category_   IN VARCHAR2 DEFAULT 'INVENT' ) RETURN NUMBER;

FUNCTION Get_Site_Converted_Qty (
   contract_        IN VARCHAR2,
   part_no_         IN VARCHAR2,
   to_contract_     IN VARCHAR2,
   quantity_        IN NUMBER,
   rounding_action_ IN VARCHAR2,
   unit_category_   IN VARCHAR2 DEFAULT 'INVENT' ) RETURN NUMBER;

--@PoReadOnly(Get_User_Default_Converted_Qty)
FUNCTION Get_User_Default_Converted_Qty (
   contract_        IN VARCHAR2,
   part_no_         IN VARCHAR2,
   quantity_        IN NUMBER,
   rounding_action_ IN VARCHAR2,
   unit_category_   IN VARCHAR2 DEFAULT 'INVENT' ) RETURN NUMBER;

--@PoReadOnly(Get_User_Default_Unit_Meas)
FUNCTION Get_User_Default_Unit_Meas (
   part_no_       IN VARCHAR2,
   unit_category_ IN VARCHAR2 DEFAULT 'INVENT' ) RETURN VARCHAR2;

--@PoReadOnly(Get_User_Default_Site)
FUNCTION Get_User_Default_Site (
   part_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Enabled_Catch_Unit_Meas)
FUNCTION Get_Enabled_Catch_Unit_Meas (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

PROCEDURE Check_Enable_Catch_Unit (
   part_no_ IN VARCHAR2 );

PROCEDURE Modify_Qty_Calc_Rounding (
   contract_          IN VARCHAR2,
   part_no_           IN VARCHAR2,
   qty_calc_rounding_ IN NUMBER );

PROCEDURE Modify_Eng_Attribute (
   contract_          IN VARCHAR2,
   part_no_           IN VARCHAR2,
   eng_attribute_  IN VARCHAR2 );

PROCEDURE Get_All_Notes (
   partca_part_note_id_ OUT NUMBER,
   partca_part_notes_   OUT VARCHAR2,
   inv_part_note_id_    OUT NUMBER,
   inv_part_notes_      OUT VARCHAR2,
   contract_            IN  VARCHAR2,
   part_no_             IN  VARCHAR2,
   language_code_       IN  VARCHAR2,
   document_code_       IN  VARCHAR2 );

--@PoReadOnly(Cascade_Trans_Cost_Update)
FUNCTION Cascade_Trans_Cost_Update (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN BOOLEAN;

--@PoReadOnly(Cascade_Trans_Cost_Update)
FUNCTION Cascade_Trans_Cost_Update (
   invoice_consideration_db_      IN VARCHAR2,
   inventory_valuation_method_db_ IN VARCHAR2,
   inventory_part_cost_level_db_  IN VARCHAR2 ) RETURN BOOLEAN;

PROCEDURE Modify_Type_Code (
   contract_     IN VARCHAR2,
   part_no_      IN VARCHAR2,
   type_code_db_ IN VARCHAR2 );

PROCEDURE Modify_Invent_Part_Cost_Level (
   contract_                     IN VARCHAR2,
   part_no_                      IN VARCHAR2,
   inventory_part_cost_level_db_ IN VARCHAR2 );

PROCEDURE Modify_Invent_Valuation_Met (
   contract_                      IN VARCHAR2,
   part_no_                       IN VARCHAR2,
   inventory_valuation_method_db_ IN VARCHAR2 );

PROCEDURE Modify_Earliest_Ultd_Sply_Date (
   contract_             IN VARCHAR2,
   part_no_              IN VARCHAR2,
   planned_receipt_date_ IN DATE );

PROCEDURE Modify_Earliest_Ultd_Sply_Date (
   date_modified_        OUT BOOLEAN,
   contract_             IN  VARCHAR2,
   part_no_              IN  VARCHAR2,
   planned_receipt_date_ IN  DATE,
   backdate_allowed_db_  IN  VARCHAR2 );

PROCEDURE Check_Disallow_As_Not_Consumed (
   part_no_ IN VARCHAR2 );

--@PoReadOnly(Cascade_Update_On_SO_Close_Str)
FUNCTION Cascade_Update_On_SO_Close_Str (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

PROCEDURE Add_Issue_For_Decline_Expired (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 );

PROCEDURE Modify_Latest_Stat_Issue_Date (
   contract_               IN VARCHAR2,
   part_no_                IN VARCHAR2,
   latest_stat_issue_date_ IN DATE );

--@PoReadOnly(Get_Storage_Volume_Req_Oper_Cl)
FUNCTION Get_Storage_Volume_Req_Oper_Cl (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Storage_Volume_Req_Client)
FUNCTION Get_Storage_Volume_Req_Client (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Storage_Width_Req_Source)
FUNCTION Get_Storage_Width_Req_Source (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Storage_Height_Req_Source)
FUNCTION Get_Storage_Height_Req_Source (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Storage_Depth_Req_Source)
FUNCTION Get_Storage_Depth_Req_Source (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Storage_Volume_Req_Source)
FUNCTION Get_Storage_Volume_Req_Source (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Storage_Weight_Req_Source)
FUNCTION Get_Storage_Weight_Req_Source (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Min_Storage_Temp_Source)
FUNCTION Get_Min_Storage_Temp_Source (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Max_Storage_Temp_Source)
FUNCTION Get_Max_Storage_Temp_Source (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Min_Storage_Humid_Source)
FUNCTION Get_Min_Storage_Humid_Source (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Max_Storage_Humid_Source)
FUNCTION Get_Max_Storage_Humid_Source (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

PROCEDURE Check_Temperature_Range (
   part_no_  IN VARCHAR2,
   contract_ IN VARCHAR2 DEFAULT NULL );

PROCEDURE Check_Humidity_Range (
   part_no_  IN VARCHAR2,
   contract_ IN VARCHAR2 DEFAULT NULL );

--@PoReadOnly(Unit_Meas_Different_On_Sites)
FUNCTION Unit_Meas_Different_On_Sites (
  part_no_                  IN VARCHAR2,
  unit_meas_for_comparsion_ IN VARCHAR2 DEFAULT NULL) RETURN BOOLEAN;

--@PoReadOnly(Get_Putaway_Zone_Refill_Opt_Db)
FUNCTION Get_Putaway_Zone_Refill_Opt_Db (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Putaway_Refill_Option_Src)
FUNCTION Get_Putaway_Refill_Option_Src(
   contract_ IN VARCHAR2, 
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Putaway_Zone_Refill_Option)
FUNCTION Get_Putaway_Zone_Refill_Option (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Ultd_Expected_Supply_Date)
FUNCTION Get_Ultd_Expected_Supply_Date (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_Ultd_Manuf_Supply_Date)
FUNCTION Get_Ultd_Manuf_Supply_Date (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_Ultd_Purch_Supply_Date)
FUNCTION Get_Ultd_Purch_Supply_Date (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN DATE;

PROCEDURE Exist_With_Wildcard (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 );

FUNCTION Transf_Invent_Part_To_Eng_Rev (
   target_key_ref_   IN VARCHAR2,
   service_name_     IN VARCHAR2 ) RETURN VARCHAR2;

PROCEDURE Create_Data_Capture_Lov (
   contract_           IN VARCHAR2,
   capture_session_id_ IN NUMBER,
   type_code_          IN VARCHAR2 DEFAULT NULL,
   part_no_            IN VARCHAR2 DEFAULT NULL,
   lov_id_             IN NUMBER DEFAULT 1 );

--@PoReadOnly(Get_Media_Id)
FUNCTION Get_Media_Id (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2) RETURN ROWID;

PROCEDURE Check_Negative_On_Hand (
   neg_on_hand_allowed_db_          IN VARCHAR2,
   catch_unit_enabled_db_           IN VARCHAR2,
   receipt_issue_serial_track_db_   IN VARCHAR2,
   lot_tracking_code_db_            IN VARCHAR2 );

--@PoReadOnly(Get_Latest_Order_Date)
FUNCTION Get_Latest_Order_Date (
   contract_      IN VARCHAR2,
   part_no_       IN VARCHAR2,
   date_required_ IN DATE ) RETURN DATE;

-----------------------------------------------------------------------------
-------------------- LU SPECIFIC PRIVATE METHODS ----------------------------
-----------------------------------------------------------------------------
-- New__
--   Client-support interface to create LU instances.
--   action_ = 'PREPARE'
--   Default values and handle of information to client.
--   The default values are set in procedure Prepare_Insert___.
--   action_ = 'CHECK'
--   Check all attributes before creating new object and handle of
--   information to client. The attribute list is unpacked, checked
--   and prepared (defaults) in procedures Unpack___ and Check_Insert___.
--   action_ = 'DO'
--   Creation of new instances of the logical unit and handle of
--   information to client. The attribute list is unpacked, checked
--   and prepared (defaults) in procedures Unpack___ and Check_Insert___
--   before calling procedure Insert___.
--
-- Modify__
--   Client-support interface to modify attributes for LU instances.
--   action_ = 'CHECK'
--   Check all attributes before modifying an existing object and
--   handle of information to client. The attribute list is unpacked,
--   checked and prepared(defaults) in procedures Unpack___ and Check_Update___.
--   action_ = 'DO'
--   Modification of an existing instance of the logical unit. The
--   procedure unpacks the attributes, checks all values before
--   procedure Update___ is called.
--
-- Recalc_Stockfactors_Impl__
--   Private method for RecalcStockfactors. This made private for calling
--   as a Deferred_Call.
--
-- Copy_Part_To_Site_Impl__
--   The implementation of CopyPartToSite all the parts from From site to
--   To site that doesn't exist on the To site.
--
-- Pack_And_Post_Message__
--   Creates connect message for HSE transfer.
--
-- Get_Objid__
--   This function will return Objid of a Inventory Part record given
--   contract and part number.
--
-- Get_Ultd_Expect_Supply_Date__
--
-- Get_Ultd_Manuf_Supply_Date__
--
-- Get_Ultd_Purch_Supply_Date__
-----------------------------------------------------------------------------

PROCEDURE New__ (
   info_       OUT    VARCHAR2,
   objid_      OUT    VARCHAR2,
   objversion_ OUT    VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Modify__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Recalc_Stockfactors_Impl__ (
   attrib_ IN VARCHAR2 );

PROCEDURE Copy_Part_To_Site_Impl__ (
   attr_ IN VARCHAR2 );

PROCEDURE Pack_And_Post_Message__ (
   action_   IN VARCHAR2,
   part_no_  IN VARCHAR2,
   contract_ IN VARCHAR2 DEFAULT NULL );

--@PoReadOnly(Get_Objid__)
FUNCTION Get_Objid__ (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Ultd_Expect_Supply_Date__)
FUNCTION Get_Ultd_Expect_Supply_Date__ (
   contract_          IN VARCHAR2,
   part_no_           IN VARCHAR2,
   lead_time_code_db_ IN VARCHAR2,
   dist_calendar_id_  IN VARCHAR2,
   manuf_calendar_id_ IN VARCHAR2,
   site_date_         IN DATE ) RETURN DATE;

--@PoReadOnly(Get_Ultd_Manuf_Supply_Date__)
FUNCTION Get_Ultd_Manuf_Supply_Date__ (
   contract_          IN VARCHAR2,
   part_no_           IN VARCHAR2,
   manuf_calendar_id_ IN VARCHAR2,
   site_date_         IN DATE ) RETURN DATE;

--@PoReadOnly(Get_Ultd_Purch_Supply_Date__)
FUNCTION Get_Ultd_Purch_Supply_Date__ (
   contract_          IN VARCHAR2,
   part_no_           IN VARCHAR2,
   dist_calendar_id_  IN VARCHAR2,
   site_date_         IN DATE ) RETURN DATE;

-----------------------------------------------------------------------------
-------------------- FOUNDATION1 METHODS ------------------------------------
-----------------------------------------------------------------------------
-- Init
--   Framework method that initializes this package.
--
-- Post_Installation_Object
--   Create views that are dependent on other components
-----------------------------------------------------------------------------

--@PoReadOnly(Init)
PROCEDURE Init;

PROCEDURE Post_Installation_View;

END Inventory_Part_API;
-- [END IFS COMPLETE BLOCK]
/
SHOW ERROR


