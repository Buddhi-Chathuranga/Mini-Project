-----------------------------------------------------------------------------
--
--  Logical unit: CustomerInfoAddress
--  Component:    ENTERP
--
--  Template:     3.0
--  Built by:     IFS Developer Studio (unit-test)
--
--  NOTE! Do not edit!! This file is completely generated and will be
--        overwritten next time the corresponding model is saved.
-----------------------------------------------------------------------------


layer Base;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

COLUMN Customer_Id IS
   Flags      = 'PMI--'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Customer Id'
   Ref        = 'CustomerInfo/CASCADE';
COLUMN Address_Id IS
   Flags      = 'KMI-L'
   Datatype   = 'STRING(50)/UPPERCASE'
   Prompt     = 'Address ID';
COLUMN Name IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(100)'
   Prompt     = 'Name';
COLUMN Address IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(2000)'
   Prompt     = 'Address';
COLUMN Ean_Location IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(100)'
   Prompt     = 'Ean Location';
COLUMN Valid_From IS
   Flags      = 'A-IUL'
   Datatype   = 'DATE/DATE'
   Prompt     = 'Valid From';
COLUMN Valid_To IS
   Flags      = 'A-IUL'
   Datatype   = 'DATE/DATE'
   Prompt     = 'Valid To';
COLUMN Party IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(20)'
   Prompt     = 'Party';
COLUMN Address_Lov IS
   Flags      = 'A---L'
   Datatype   = 'STRING(2000)'
   Prompt     = 'Address'
   Column     = 'REPLACE(REPLACE(address,CHR(13),''''),CHR(10),'' '')';
COLUMN Default_Domain IS
   Flags      = 'AMIU-'
   Datatype   = 'BOOLEAN("TRUE","FALSE")'
   Prompt     = 'Default Domain';
COLUMN Country IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Lookup     = 'IsoCountry'
   Prompt     = 'Country'
   Ref        = 'IsoCountry';
COLUMN Country_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(2)'
   Prompt     = 'Country';
COLUMN Party_Type IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'PartyType'
   Prompt     = 'Party Type';
COLUMN Party_Type_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Party Type';
COLUMN Secondary_Contact IS
   Flags      = 'A-IUL'
   Datatype   = 'STRING(35)'
   Prompt     = 'Secondary Contact';
COLUMN Primary_Contact IS
   Flags      = 'A-IUL'
   Datatype   = 'STRING(35)'
   Prompt     = 'Primary Contact';
COLUMN Address1 IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(35)'
   Prompt     = 'Address1';
COLUMN Address2 IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(35)'
   Prompt     = 'Address2';
COLUMN Address3 IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(100)'
   Prompt     = 'Address3';
COLUMN Address4 IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(100)'
   Prompt     = 'Address4';
COLUMN Address5 IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(100)'
   Prompt     = 'Address5';
COLUMN Address6 IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(100)'
   Prompt     = 'Address6';
COLUMN Zip_Code IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(35)/UPPERCASE'
   Prompt     = 'Zip Code';
COLUMN City IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(35)'
   Prompt     = 'City';
COLUMN County IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(35)'
   Prompt     = 'County';
COLUMN State IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(35)'
   Prompt     = 'State';
COLUMN In_City IS
   Flags      = 'AMIUL'
   Datatype   = 'STRING(5)'
   Prompt     = 'In City';
COLUMN Jurisdiction_Code IS
   Flags      = 'A-IUL'
   Datatype   = 'STRING(20)'
   Prompt     = 'Jurisdiction Code';
COLUMN Comm_Id IS
   Flags      = 'A-IU-'
   Datatype   = 'NUMBER'
   Prompt     = 'Comm Id'
   Ref        = 'CommMethod(party_type,customer_id)';
COLUMN Output_Media IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'OutputMediaType'
   Prompt     = 'Output Media';
COLUMN Output_Media_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Output Media';
COLUMN End_Customer_Id IS
   Flags      = 'A-IUL'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'End Customer Id'
   Ref        = 'CustomerInfo';
COLUMN End_Cust_Addr_Id IS
   Flags      = 'A-IUL'
   Datatype   = 'STRING(50)/UPPERCASE'
   Prompt     = 'End Cust Addr Id'
   Ref        = 'CustomerInfoAddress(end_customer_id)';
COLUMN Customer_Branch IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Customer Branch';

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------


-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

@RmcomAccessCheck CustomerInfo(customer_id)
@DbViewRowLevelSecurity NotRequired
VIEW Customer_Info_Address IS
   Prompt     = 'Customer Info Address'
   Table      = 'CUSTOMER_INFO_ADDRESS_TAB'
SELECT
       customer_id                    customer_id,
       address_id                     address_id,
       name                           name,
       address                        address,
       ean_location                   ean_location,
       valid_from                     valid_from,
       valid_to                       valid_to,
       party                          party,
       REPLACE(REPLACE(address,CHR(13),''),CHR(10),' ') address_lov,
       default_domain                 default_domain,
       Iso_Country_API.Decode(country) country,
       country                        country_db,
       Party_Type_API.Decode(party_type) party_type,
       party_type                     party_type_db,
       secondary_contact              secondary_contact,
       primary_contact                primary_contact,
       address1                       address1,
       address2                       address2,
       address3                       address3,
       address4                       address4,
       address5                       address5,
       address6                       address6,
       zip_code                       zip_code,
       city                           city,
       county                         county,
       state                          state,
       in_city                        in_city,
       jurisdiction_code              jurisdiction_code,
       comm_id                        comm_id,
       Output_Media_Type_API.Decode(output_media) output_media,
       output_media                   output_media_db,
       end_customer_id                end_customer_id,
       end_cust_addr_id               end_cust_addr_id,
       customer_branch                customer_branch,
       rowkey                         objkey,
       to_char(rowversion,'YYYYMMDDHH24MISS') objversion,
       rowid                          objid
FROM   customer_info_address_tab;
