-----------------------------------------------------------------------------
--
--  Logical unit: BcRepairLine
--  Type:         EntityWithState
--  Component:    BCRCO
--
--  Template:     3.0
--  Built by:     IFS Developer Studio
--
--  NOTE! Do not edit!! This file is completely generated and will be
--        overwritten next time the corresponding model is saved.
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
-------------------- FOUNDATION1 PRE-PROCESSING -----------------------------
-----------------------------------------------------------------------------

PROMPT Creating Bc_Repair_Line_API context

-- [IFS COMPLETE BLOCK BEGINEND]
BEGIN
   Database_SYS.Create_Context('BcRepairLine_CTX', 'DOMAIN_SYS', NULL, 'GLOBALLY', TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Creating Bc_Repair_Line_API specification

-- [IFS COMPLETE BLOCK PACKAGE Bc_Repair_Line_API]
CREATE OR REPLACE PACKAGE Bc_Repair_Line_API IS

module_                   CONSTANT VARCHAR2(6)      := 'BCRCO';
lu_name_                  CONSTANT VARCHAR2(30)     := 'BcRepairLine';
lu_type_                  CONSTANT VARCHAR2(30)     := 'EntityWithState';
  
DB_CANCELLED              CONSTANT VARCHAR2(9)      := 'Cancelled';
DB_NEW                    CONSTANT VARCHAR2(3)      := 'New';
DB_PROCESSED              CONSTANT VARCHAR2(9)      := 'Processed';
DB_RECEIVED               CONSTANT VARCHAR2(8)      := 'Received';
DB_REPAIR_COMPLETED       CONSTANT VARCHAR2(15)     := 'RepairCompleted';
DB_REPAIR_STARTED         CONSTANT VARCHAR2(13)     := 'RepairStarted';
DB_SHIPPED                CONSTANT VARCHAR2(7)      := 'Shipped';

-----------------------------------------------------------------------------
-------------------- PUBLIC DECLARATIONS ------------------------------------
-----------------------------------------------------------------------------

TYPE Public_Rec IS RECORD
  (rco_no                         BC_REPAIR_LINE_TAB.rco_no%TYPE,
   repair_line_no                 BC_REPAIR_LINE_TAB.repair_line_no%TYPE,
   "rowid"                        rowid,
   rowversion                     BC_REPAIR_LINE_TAB.rowversion%TYPE,
   rowkey                         BC_REPAIR_LINE_TAB.rowkey%TYPE,
   rowstate                       BC_REPAIR_LINE_TAB.rowstate%TYPE,
   date_entered                   BC_REPAIR_LINE_TAB.date_entered%TYPE,
   repair_site                    BC_REPAIR_LINE_TAB.repair_site%TYPE,
   part_number                    BC_REPAIR_LINE_TAB.part_number%TYPE,
   quantity                       BC_REPAIR_LINE_TAB.quantity%TYPE,
   quantity_received              BC_REPAIR_LINE_TAB.quantity_received%TYPE,
   condition_code                 BC_REPAIR_LINE_TAB.condition_code%TYPE,
   serial_no                      BC_REPAIR_LINE_TAB.serial_no%TYPE,
   ownership_code                 BC_REPAIR_LINE_TAB.ownership_code%TYPE,
   owner_id                       BC_REPAIR_LINE_TAB.owner_id%TYPE,
   repair_line_action             BC_REPAIR_LINE_TAB.repair_line_action%TYPE,
   repair_type                    BC_REPAIR_LINE_TAB.repair_type%TYPE,
   customer_fault_code            BC_REPAIR_LINE_TAB.customer_fault_code%TYPE,
   note_text                      BC_REPAIR_LINE_TAB.note_text%TYPE,
   note_id                        BC_REPAIR_LINE_TAB.note_id%TYPE,
   billable_or_warranty           BC_REPAIR_LINE_TAB.billable_or_warranty%TYPE,
   manufacturer_warranty          BC_REPAIR_LINE_TAB.manufacturer_warranty%TYPE,
   repair_warranty                BC_REPAIR_LINE_TAB.repair_warranty%TYPE,
   warranty_validated             BC_REPAIR_LINE_TAB.warranty_validated%TYPE,
   processing_fee                 BC_REPAIR_LINE_TAB.processing_fee%TYPE,
   required_start                 BC_REPAIR_LINE_TAB.required_start%TYPE);


-----------------------------------------------------------------------------
-------------------- BASE METHODS -------------------------------------------
-----------------------------------------------------------------------------
-- Get_Key_By_Rowkey
--   Returns a table record with only keys (other attributes are NULL) based on a rowkey.
--
-- Exist
--   Checks if given pointer (e.g. primary key) to an instance of this
--   logical unit exists. If not an exception will be raised.
--
-- Exists
--   Same check as Exist, but returns a BOOLEAN value instead of exception.
--
-- Rowkey_Exist
--   Checks whether the rowkey exists
--   If not an exception will be raised.
--
-- Get_Date_Entered
--   Fetches the DateEntered attribute for a record.
--
-- Get_Repair_Site
--   Fetches the RepairSite attribute for a record.
--
-- Get_Part_Number
--   Fetches the PartNumber attribute for a record.
--
-- Get_Quantity
--   Fetches the Quantity attribute for a record.
--
-- Get_Quantity_Received
--   Fetches the QuantityReceived attribute for a record.
--
-- Get_Condition_Code
--   Fetches the ConditionCode attribute for a record.
--
-- Get_Serial_No
--   Fetches the SerialNo attribute for a record.
--
-- Get_Ownership_Code
--   Fetches the OwnershipCode attribute for a record.
--
-- Get_Ownership_Code_Db
--   Fetches the DB value of OwnershipCode attribute for a record.
--
-- Get_Owner_Id
--   Fetches the OwnerId attribute for a record.
--
-- Get_Repair_Line_Action
--   Fetches the RepairLineAction attribute for a record.
--
-- Get_Repair_Type
--   Fetches the RepairType attribute for a record.
--
-- Get_Customer_Fault_Code
--   Fetches the CustomerFaultCode attribute for a record.
--
-- Get_Note_Text
--   Fetches the NoteText attribute for a record.
--
-- Get_Note_Id
--   Fetches the NoteId attribute for a record.
--
-- Get_Billable_Or_Warranty
--   Fetches the BillableOrWarranty attribute for a record.
--
-- Get_Billable_Or_Warranty_Db
--   Fetches the DB value of BillableOrWarranty attribute for a record.
--
-- Get_Manufacturer_Warranty
--   Fetches the ManufacturerWarranty attribute for a record.
--
-- Get_Manufacturer_Warranty_Db
--   Fetches the DB value of ManufacturerWarranty attribute for a record.
--
-- Get_Repair_Warranty
--   Fetches the RepairWarranty attribute for a record.
--
-- Get_Repair_Warranty_Db
--   Fetches the DB value of RepairWarranty attribute for a record.
--
-- Get_Warranty_Validated
--   Fetches the WarrantyValidated attribute for a record.
--
-- Get_Warranty_Validated_Db
--   Fetches the DB value of WarrantyValidated attribute for a record.
--
-- Get_Processing_Fee
--   Fetches the ProcessingFee attribute for a record.
--
-- Get_Required_Start
--   Fetches the RequiredStart attribute for a record.
--
-- Get_State
--   Fetches the State attribute for a record.
--
-- Get_Objstate
--   Fetches the Objstate attribute for a record.
--
-- Get_Objevents
--   Fetches the Objevents attribute for a record.
--
-- Get_By_Rowkey
--   Fetches a record containing the public attributes by rowkey inparameter.
--
-- Get
--   Fetches a record containing the public attributes.
--
-- Get_Objkey
--   Fetches the objkey attribute for a record.
--
-- Lock__
--   Client-support to lock a specific instance of the logical unit.
--
-- New__
--   Client-support interface to create LU instances.
--   action_ = 'PREPARE'
--   Default values and handle of information to client.
--   The default values are set in procedure Prepare_Insert___.
--   action_ = 'CHECK'
--   Check all attributes before creating new object and handle of
--   information to client. The attribute list is unpacked, checked
--   and prepared (defaults) in procedures Unpack___ and Check_Insert___.
--   action_ = 'DO'
--   Creation of new instances of the logical unit and handle of
--   information to client. The attribute list is unpacked, checked
--   and prepared (defaults) in procedures Unpack___ and Check_Insert___
--   before calling procedure Insert___.
--
-- Modify__
--   Client-support interface to modify attributes for LU instances.
--   action_ = 'CHECK'
--   Check all attributes before modifying an existing object and
--   handle of information to client. The attribute list is unpacked,
--   checked and prepared(defaults) in procedures Unpack___ and Check_Update___.
--   action_ = 'DO'
--   Modification of an existing instance of the logical unit. The
--   procedure unpacks the attributes, checks all values before
--   procedure Update___ is called.
--
-- Remove__
--   Client-support interface to remove LU instances.
--   action_ = 'CHECK'
--   Check whether a specific LU-instance may be removed or not.
--   The procedure fetches the complete record by calling procedure
--   Get_Object_By_Id___. Then the check is made by calling procedure
-----------------------------------------------------------------------------

--@PoReadOnly(Get_Key_By_Rowkey)
FUNCTION Get_Key_By_Rowkey (
   rowkey_ IN VARCHAR2 ) RETURN bc_repair_line_tab%ROWTYPE;

--@PoReadOnly(Exist)
PROCEDURE Exist (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER );

--@PoReadOnly(Exists)
FUNCTION Exists (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN BOOLEAN;

--@PoReadOnly(Rowkey_Exist)
PROCEDURE Rowkey_Exist (
   rowkey_ IN VARCHAR2 );

--@PoReadOnly(Get_Date_Entered)
FUNCTION Get_Date_Entered (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN DATE;

--@PoReadOnly(Get_Repair_Site)
FUNCTION Get_Repair_Site (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Get_Part_Number)
FUNCTION Get_Part_Number (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Get_Quantity)
FUNCTION Get_Quantity (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN NUMBER;

--@PoReadOnly(Get_Quantity_Received)
FUNCTION Get_Quantity_Received (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN NUMBER;

--@PoReadOnly(Get_Condition_Code)
FUNCTION Get_Condition_Code (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Get_Serial_No)
FUNCTION Get_Serial_No (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Get_Ownership_Code)
FUNCTION Get_Ownership_Code (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Get_Ownership_Code_Db)
FUNCTION Get_Ownership_Code_Db (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN bc_repair_line_tab.ownership_code%TYPE;

--@PoReadOnly(Get_Owner_Id)
FUNCTION Get_Owner_Id (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Get_Repair_Line_Action)
FUNCTION Get_Repair_Line_Action (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Get_Repair_Type)
FUNCTION Get_Repair_Type (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Get_Customer_Fault_Code)
FUNCTION Get_Customer_Fault_Code (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Get_Note_Text)
FUNCTION Get_Note_Text (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Get_Note_Id)
FUNCTION Get_Note_Id (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Get_Billable_Or_Warranty)
FUNCTION Get_Billable_Or_Warranty (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Get_Billable_Or_Warranty_Db)
FUNCTION Get_Billable_Or_Warranty_Db (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN bc_repair_line_tab.billable_or_warranty%TYPE;

--@PoReadOnly(Get_Manufacturer_Warranty)
FUNCTION Get_Manufacturer_Warranty (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Get_Manufacturer_Warranty_Db)
FUNCTION Get_Manufacturer_Warranty_Db (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN bc_repair_line_tab.manufacturer_warranty%TYPE;

--@PoReadOnly(Get_Repair_Warranty)
FUNCTION Get_Repair_Warranty (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Get_Repair_Warranty_Db)
FUNCTION Get_Repair_Warranty_Db (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN bc_repair_line_tab.repair_warranty%TYPE;

--@PoReadOnly(Get_Warranty_Validated)
FUNCTION Get_Warranty_Validated (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Get_Warranty_Validated_Db)
FUNCTION Get_Warranty_Validated_Db (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN bc_repair_line_tab.warranty_validated%TYPE;

--@PoReadOnly(Get_Processing_Fee)
FUNCTION Get_Processing_Fee (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN NUMBER;

--@PoReadOnly(Get_Required_Start)
FUNCTION Get_Required_Start (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN DATE;

--@PoReadOnly(Get_State)
FUNCTION Get_State (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Get_Objstate)
FUNCTION Get_Objstate (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Get_Objevents)
FUNCTION Get_Objevents (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Get_By_Rowkey)
FUNCTION Get_By_Rowkey (
   rowkey_ IN VARCHAR2 ) RETURN Public_Rec;

--@PoReadOnly(Get)
FUNCTION Get (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN Public_Rec;

--@PoReadOnly(Get_Objkey)
FUNCTION Get_Objkey (
   rco_no_ IN NUMBER,
   repair_line_no_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Lock__)
PROCEDURE Lock__ (
   info_       OUT VARCHAR2,
   objid_      IN  VARCHAR2,
   objversion_ IN  VARCHAR2 );

PROCEDURE New__ (
   info_       OUT    VARCHAR2,
   objid_      OUT    VARCHAR2,
   objversion_ OUT    VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Modify__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Remove__ (
   info_       OUT VARCHAR2,
   objid_      IN  VARCHAR2,
   objversion_ IN  VARCHAR2,
   action_     IN  VARCHAR2 );

-----------------------------------------------------------------------------
-------------------- FINITE STATE MACHINE -----------------------------------
-----------------------------------------------------------------------------
-- Finite_State_Init_
--   Runs the initial start event for a basedOn child entity.
--
-- Finite_State_Decode__
--   Returns the client equivalent for any database representation of
--   a state name = objstate.
--
-- Finite_State_Encode__
--   Returns the database equivalent for any client representation of
--   a state name = state.
--
-- Enumerate_States__
--   Returns a list of all possible finite states in client terminology.
--
-- Enumerate_States_Db__
--   Returns a list of all possible finite states in database terminology.
--
-- Finite_State_Events__
--   Returns a list of allowed events for a given state
--   NOTE! Regardless of conditions if not otherwize encoded
--
-- Enumerate_Events__
--   Returns a list of all possible events.
--
-- Cancel__
--   Executes the Cancel event logic as defined in the state machine.
--
-- Process__
--   Executes the Process event logic as defined in the state machine.
--
-- Receive__
--   Executes the Receive event logic as defined in the state machine.
--
-- Repair_Complete__
--   Executes the RepairComplete event logic as defined in the state machine.
--
-- Repair_Start__
--   Executes the RepairStart event logic as defined in the state machine.
--
-- Ship__
--   Executes the Ship event logic as defined in the state machine.
-----------------------------------------------------------------------------

PROCEDURE Finite_State_Init_ (
   rec_  IN OUT NOCOPY bc_repair_line_tab%ROWTYPE,
   attr_ IN OUT NOCOPY VARCHAR2 );

--@PoReadOnly(Finite_State_Decode__)
FUNCTION Finite_State_Decode__ (
   db_state_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Finite_State_Encode__)
FUNCTION Finite_State_Encode__ (
   client_state_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Enumerate_States__)
PROCEDURE Enumerate_States__ (
   client_values_ OUT VARCHAR2 );

--@PoReadOnly(Enumerate_States_Db__)
PROCEDURE Enumerate_States_Db__ (
   db_values_ OUT VARCHAR2 );

--@PoReadOnly(Finite_State_Events__)
FUNCTION Finite_State_Events__ (
   db_state_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Enumerate_Events__)
PROCEDURE Enumerate_Events__ (
   db_events_ OUT VARCHAR2 );

PROCEDURE Cancel__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Process__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Receive__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Repair_Complete__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Repair_Start__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Ship__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

-----------------------------------------------------------------------------
-------------------- LU CUST NEW METHODS ------------------------------------
-----------------------------------------------------------------------------
-- Get_Repair_Line_Id__
--
-- Get_Default_Site__
--
-- Cancel_Line__
--
-- Change_To_Shipped__
-----------------------------------------------------------------------------

FUNCTION Get_Repair_Line_Id__ (
   repair_center_order_     IN     bc_repair_line_tab.rco_no%TYPE)   RETURN   NUMBER;

FUNCTION Get_Default_Site__ (
   repair_center_order_     IN    bc_repair_center_order_tab.rco_no%TYPE) RETURN bc_repair_line_tab.REPAIR_SITE%TYPE;

PROCEDURE Cancel_Line__ (
   rco_no_  IN OUT NOCOPY bc_repair_center_order_tab.rco_no%TYPE );

PROCEDURE Change_To_Shipped__ (
   rco_no_  bc_repair_center_order.rco_no%TYPE);

-----------------------------------------------------------------------------
-------------------- FOUNDATION1 METHODS ------------------------------------
-----------------------------------------------------------------------------
-- Language_Refreshed
--   Framework method that updates translations to a new language.
--
-- Init
--   Framework method that initializes this package.
-----------------------------------------------------------------------------

--@PoReadOnly(Language_Refreshed)
PROCEDURE Language_Refreshed;

--@PoReadOnly(Init)
PROCEDURE Init;

END Bc_Repair_Line_API;
-- [END IFS COMPLETE BLOCK]
/
SHOW ERROR


