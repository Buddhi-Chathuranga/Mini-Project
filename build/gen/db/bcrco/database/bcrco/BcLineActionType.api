-----------------------------------------------------------------------------
--
--  Logical unit: BcLineActionType
--  Type:         Enumeration
--  Component:    BCRCO
--
--  Template:     3.0
--  Built by:     IFS Developer Studio
--
--  NOTE! Do not edit!! This file is completely generated and will be
--        overwritten next time the corresponding model is saved.
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
-------------------- FOUNDATION1 PRE-PROCESSING -----------------------------
-----------------------------------------------------------------------------

PROMPT Creating Bc_Line_Action_Type_API context

-- [IFS COMPLETE BLOCK BEGINEND]
BEGIN
   Database_SYS.Create_Context('BcLineActionType_CTX', 'DOMAIN_SYS', NULL, 'GLOBALLY', TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Creating Bc_Line_Action_Type_API specification

-- [IFS COMPLETE BLOCK PACKAGE Bc_Line_Action_Type_API]
CREATE OR REPLACE PACKAGE Bc_Line_Action_Type_API IS

module_                   CONSTANT VARCHAR2(6)      := 'BCRCO';
lu_name_                  CONSTANT VARCHAR2(30)     := 'BcLineActionType';
lu_type_                  CONSTANT VARCHAR2(30)     := 'Enumeration';

-----------------------------------------------------------------------------
-------------------- PUBLIC DECLARATIONS ------------------------------------
-----------------------------------------------------------------------------

DB_ON_HOLD                     CONSTANT VARCHAR2(7) := 'ON_HOLD';

DB_RELEASED                    CONSTANT VARCHAR2(8) := 'RELEASED';


-----------------------------------------------------------------------------
-------------------- BASE METHODS -------------------------------------------
-----------------------------------------------------------------------------
-- Exist
--   Checks if given client value exists. If not an exception will be raised.
--
-- Exist_List
--   Checks if all items in given list of client values exists. If not an exception will be raised.
--
-- Exist_Db
--   Checks if given database value exists. If not an exception will be raised.
--
-- Exist_List_Db
--   Checks if all items in given list of database values exists. If not an exception will be raised.
--
-- Exists
--   Checks if given client value exists and returns TRUE or FALSE.
--
-- Exists_List
--   Checks if all items in given list of client values exists and returns TRUE or FALSE.
--
-- Exists_Db
--   Checks if given database value exists and returns TRUE or FALSE.
--
-- Exists_List_Db
--   Checks if all items in given list of database values exists and returns TRUE or FALSE.
--
-- Enumerate
--   Returns a list of all client values.
--
-- Enumerate_Db
--   Returns a list of all database values.
--
-- Enumerate_Client_And_Db
--   Returns a list of all client and database values.
--
-- Encode
--   Converts a client value to the corresponding database value.
--
-- Encode_List
--   Converts a list of client values to corresponding list of database values.
--
-- Decode
--   Converts a database value to the corresponding client value.
--
-- Decode_List
--   Converts a list of database values to a corresponding list of client values.
--
-- Get_Client_Value
--   Returns the client value based on its index in the full list.
--
-- Get_Db_Value
--   Returns the database value based on its index in the full list.
--
-- Identifier_To_Db_Value
--   Converts a identifier to the corresponding database value.
--
-- Db_Value_To_Identifier
--   Converts a database value to the corresponding identifier.
-----------------------------------------------------------------------------

--@PoReadOnly(Exist)
PROCEDURE Exist (
   client_value_ IN VARCHAR2 );

--@PoReadOnly(Exist_List)
PROCEDURE Exist_List (
   client_list_ IN VARCHAR2 );

--@PoReadOnly(Exist_Db)
PROCEDURE Exist_Db (
   db_value_ IN VARCHAR2 );

--@PoReadOnly(Exist_List_Db)
PROCEDURE Exist_List_Db (
   db_list_ IN VARCHAR2 );

--@PoReadOnly(Exists)
FUNCTION Exists (
   client_value_ IN VARCHAR2 ) RETURN BOOLEAN;

--@PoReadOnly(Exists_List)
FUNCTION Exists_List (
   client_list_ IN VARCHAR2 ) RETURN BOOLEAN;

--@PoReadOnly(Exists_Db)
FUNCTION Exists_Db (
   db_value_ IN VARCHAR2 ) RETURN BOOLEAN;

--@PoReadOnly(Exists_List_Db)
FUNCTION Exists_List_Db (
   db_list_ IN VARCHAR2 ) RETURN BOOLEAN;

--@PoReadOnly(Enumerate)
PROCEDURE Enumerate (
   client_values_ OUT VARCHAR2);

--@PoReadOnly(Enumerate_Db)
PROCEDURE Enumerate_Db (
   db_values_ OUT VARCHAR2);

--@PoReadOnly(Enumerate_Client_And_Db)
PROCEDURE Enumerate_Client_And_Db (
   client_values_ OUT VARCHAR2,
   db_values_     OUT VARCHAR2);

--@PoReadOnly(Encode)
FUNCTION Encode (
   client_value_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Encode_List)
FUNCTION Encode_List (
   client_list_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Decode)
FUNCTION Decode (
   db_value_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Decode_List)
FUNCTION Decode_List (
   db_list_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Client_Value)
FUNCTION Get_Client_Value (
   index_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Get_Db_Value)
FUNCTION Get_Db_Value (
   index_ IN NUMBER ) RETURN VARCHAR2;

--@PoReadOnly(Identifier_To_Db_Value)
FUNCTION Identifier_To_Db_Value (
   identifier_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Db_Value_To_Identifier)
FUNCTION Db_Value_To_Identifier (
   db_value_ IN VARCHAR2 ) RETURN VARCHAR2;

-----------------------------------------------------------------------------
-------------------- FOUNDATION1 METHODS ------------------------------------
-----------------------------------------------------------------------------
-- Language_Refreshed
--   Framework method that updates translations to a new language.
--
-- Init
--   Framework method that initializes this package.
-----------------------------------------------------------------------------

--@PoReadOnly(Language_Refreshed)
PROCEDURE Language_Refreshed;

--@PoReadOnly(Init)
PROCEDURE Init;

END Bc_Line_Action_Type_API;
-- [END IFS COMPLETE BLOCK]
/
SHOW ERROR


