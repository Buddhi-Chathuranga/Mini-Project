projection BcRcoHandling;
component  BCRCO;
layer      Base;
description "";




enumeration BcLineActionType {
   enumerationtype = Standard;
   exec = "Bc_Line_Action_Type_API";
   value = "ON_HOLD" {
      identifier = "OnHold";
      label = "On Hold";
   }
   value = "RELEASED" {
      identifier = "Released";
      label = "Released";
   }
}

enumeration PutawayZoneRefillOption {
   enumerationtype = Standard;
   exec = "Putaway_Zone_Refill_Option_API";
   value = "NO_REFILL" {
      identifier = "NoRefill";
      label = "No Refill";
   }
   value = "FROM_PUTAWAY_ZONES" {
      identifier = "FromPutawayZones";
      label = "From Putaway Zones";
   }
   value = "FROM_ALL_LOCATIONS" {
      identifier = "FromAllLocations";
      label = "From All Stock Locations";
   }
}

enumeration InvPartFrequencyClass {
   enumerationtype = Standard;
   exec = "Inv_Part_Frequency_Class_API";
   value = "VERY SLOW MOVER" {
      identifier = "VerySlowMover";
      label = "Very Slow Mover";
   }
   value = "SLOW MOVER" {
      identifier = "SlowMover";
      label = "Slow Mover";
   }
   value = "MEDIUM MOVER" {
      identifier = "MediumMover";
      label = "Medium Mover";
   }
   value = "FAST MOVER" {
      identifier = "FastMover";
      label = "Fast Mover";
   }
}

enumeration InvPartLifecycleStage {
   enumerationtype = Standard;
   exec = "Inv_Part_Lifecycle_Stage_API";
   value = "DEVELOPMENT" {
      identifier = "Development";
      label = "Development";
   }
   value = "INTRODUCTION" {
      identifier = "Introduction";
      label = "Introduction";
   }
   value = "MATURE" {
      identifier = "Mature";
      label = "Mature";
   }
   value = "DECLINE" {
      identifier = "Decline";
      label = "Decline";
   }
   value = "EXPIRED" {
      identifier = "Expired";
      label = "Expired";
   }
}

enumeration DopNetting {
   enumerationtype = Standard;
   exec = "Dop_Netting_API";
   value = "NETT" {
      identifier = "Netting";
      label = "Netting";
   }
   value = "NONET" {
      identifier = "NoNetting";
      label = "No Netting";
   }
   value = "AUTONETT" {
      identifier = "AutoNetting";
      label = "Auto Netting";
   }
}

enumeration CapabilityCheckAllocate {
   enumerationtype = Standard;
   exec = "Capability_Check_Allocate_API";
   value = "RESERVE AND ALLOCATE" {
      identifier = "ReserveAndAllocate";
      label = "Reserve and Allocate";
   }
   value = "ALLOCATE ONLY" {
      identifier = "AllocateOnly";
      label = "Allocate only";
   }
   value = "NEITHER RESERVE NOR ALLOCATE" {
      identifier = "NeitherReserveNorAlloc";
      label = "Neither Reserve nor Allocate";
   }
   value = "NO AUTOMATIC CAPABILITY CHECK" {
      identifier = "NoAutomatCapabilityCheck";
      label = "No Automatic Capability Check";
   }
   subset Subset1 = "RESERVE AND ALLOCATE", "ALLOCATE ONLY", "NEITHER RESERVE NOR ALLOCATE";
   subset Subset2 = "ALLOCATE ONLY", "NEITHER RESERVE NOR ALLOCATE";
}

enumeration CapabilityCheckAllocate.Subset1 {
   enumerationtype = Standard;
   exec = "Capability_Check_Allocate_API";
   value = "RESERVE AND ALLOCATE" {
      identifier = "ReserveAndAllocate";
      label = "Reserve and Allocate";
   }
   value = "ALLOCATE ONLY" {
      identifier = "AllocateOnly";
      label = "Allocate only";
   }
   value = "NEITHER RESERVE NOR ALLOCATE" {
      identifier = "NeitherReserveNorAlloc";
      label = "Neither Reserve nor Allocate";
   }
}

enumeration CapabilityCheckAllocate.Subset2 {
   enumerationtype = Standard;
   exec = "Capability_Check_Allocate_API";
   value = "ALLOCATE ONLY" {
      identifier = "AllocateOnly";
      label = "Allocate only";
   }
   value = "NEITHER RESERVE NOR ALLOCATE" {
      identifier = "NeitherReserveNorAlloc";
      label = "Neither Reserve nor Allocate";
   }
}

enumeration ExtServiceCostMethod {
   enumerationtype = Standard;
   exec = "Ext_Service_Cost_Method_API";
   value = "INCLUDE SERVICE COST" {
      identifier = "IncludeServiceCost";
      label = "Include Service Cost";
   }
   value = "EXCLUDE SERVICE COST" {
      identifier = "ExcludeServiceCost";
      label = "Exclude Service Cost";
   }
}

enumeration InventoryPartCostLevel {
   enumerationtype = Standard;
   exec = "Inventory_Part_Cost_Level_API";
   value = "COST PER PART" {
      identifier = "CostPerPart";
      label = "Cost Per Part";
   }
   value = "COST PER CONFIGURATION" {
      identifier = "CostPerConfiguration";
      label = "Cost Per Configuration";
   }
   value = "COST PER CONDITION" {
      identifier = "CostPerCondition";
      label = "Cost Per Condition";
   }
   value = "COST PER LOT BATCH" {
      identifier = "CostPerLotBatch";
      label = "Cost Per Lot Batch";
   }
   value = "COST PER SERIAL" {
      identifier = "CostPerSerial";
      label = "Cost Per Serial";
   }
}

enumeration InvoiceConsideration {
   enumerationtype = Standard;
   exec = "Invoice_Consideration_API";
   value = "IGNORE INVOICE PRICE" {
      identifier = "IgnoreInvoicePrice";
      label = "Ignore Invoice Price";
   }
   value = "PERIODIC WEIGHTED AVERAGE" {
      identifier = "PeriodicWeightedAverage";
      label = "Periodic Weighted Average";
   }
   value = "TRANSACTION BASED" {
      identifier = "TransactionBased";
      label = "Transaction Based";
   }
}

enumeration NegativeOnHand {
   enumerationtype = Standard;
   exec = "Negative_On_Hand_API";
   value = "NEG ONHAND OK" {
      identifier = "NegativeOnHandAllowed";
      label = "Negative On Hand Allowed";
   }
   value = "NEG ONHAND NOT OK" {
      identifier = "NegativOnHandNotAllowed";
      label = "Negative On Hand Not Allowed";
   }
}

enumeration InventoryValueMethod {
   enumerationtype = Standard;
   exec = "Inventory_Value_Method_API";
   value = "AV" {
      identifier = "WeightedAverage";
      label = "Weighted Average";
   }
   value = "ST" {
      identifier = "StandardCost";
      label = "Standard Cost";
   }
   value = "FIFO" {
      identifier = "FirstInFirstOut";
      label = "First In First Out";
   }
   value = "LIFO" {
      identifier = "LastInFirstOut";
      label = "Last In First Out";
   }
}

enumeration DopConnection {
   enumerationtype = Standard;
   exec = "Dop_Connection_API";
   value = "AUT" {
      identifier = "AutomaticDOP";
      label = "Automatic DOP";
   }
   value = "MAN" {
      identifier = "ManualDOP";
      label = "Manual DOP";
   }
   value = "REL" {
      identifier = "ReleaseDOP";
      label = "Release DOP";
   }
}

enumeration InventoryPartManagement {
   enumerationtype = Standard;
   exec = "Inventory_Part_Management_API";
   value = "VENDOR MANAGED INVENTORY" {
      identifier = "VendorManagedInventory";
      label = "Vendor Managed Inventory";
   }
   value = "SYSTEM MANAGED INVENTORY" {
      identifier = "SystemManagedInventory";
      label = "System Managed Inventory";
   }
}

enumeration InvPartForecastConsum {
   enumerationtype = Standard;
   exec = "Inv_Part_Forecast_Consum_API";
   value = "FORECAST" {
      identifier = "OnlineConsumption";
      label = "Online Consumption";
   }
   value = "NOFORECAST" {
      identifier = "NoOnlineConsumption";
      label = "No Online Consumption";
   }
}

enumeration InventoryPartShortage {
   enumerationtype = Standard;
   exec = "Inventory_Part_Shortage_API";
   value = "Y" {
      identifier = "ShortageNotation";
      label = "Shortage Notation";
   }
   value = "N" {
      identifier = "NoShortageNotation";
      label = "No Shortage Notation";
   }
}

enumeration InventoryPartAvailStat {
   enumerationtype = Standard;
   exec = "Inventory_Part_Avail_Stat_API";
   value = "CHANGED" {
      identifier = "Changed";
      label = "Changed";
   }
   value = "UNCHANGED" {
      identifier = "Unchanged";
      label = "Unchanged";
   }
}

enumeration InventoryPartZeroCost {
   enumerationtype = Standard;
   exec = "Inventory_Part_Zero_Cost_API";
   value = "Y" {
      identifier = "ZeroCostAllowed";
      label = "Zero Cost Allowed";
   }
   value = "N" {
      identifier = "ZeroCostForbidden";
      label = "Zero Cost Forbidden";
   }
   value = "O" {
      identifier = "ZeroCostOnly";
      label = "Zero Cost Only";
   }
}

enumeration InventoryPartType {
   enumerationtype = Standard;
   exec = "Inventory_Part_Type_API";
   value = "1" {
      identifier = "Manufactured";
      label = "Manufactured";
   }
   value = "2" {
      identifier = "ManufacturedRecipe";
      label = "Manufactured Recipe";
   }
   value = "3" {
      identifier = "PurchasedRaw";
      label = "Purchased (raw)";
   }
   value = "4" {
      identifier = "Purchased";
      label = "Purchased";
   }
   value = "6" {
      identifier = "Expense";
      label = "Expense";
   }
}

enumeration MaterialRequisSupply {
   enumerationtype = Standard;
   exec = "Material_Requis_Supply_API";
   value = "IO" {
      identifier = "InventoryOrder";
      label = "Inventory Order";
   }
   value = "PO" {
      identifier = "PurchaseOrder";
      label = "Purchase Order";
   }
   value = "PI" {
      identifier = "ProjectInventory";
      label = "Project Inventory";
   }
   subset Subset1 = "IO", "PO";
}

enumeration MaterialRequisSupply.Subset1 {
   enumerationtype = Standard;
   exec = "Material_Requis_Supply_API";
   value = "IO" {
      identifier = "InventoryOrder";
      label = "Inventory Order";
   }
   value = "PO" {
      identifier = "PurchaseOrder";
      label = "Purchase Order";
   }
}

enumeration InventoryPartOnhAnalys {
   enumerationtype = Standard;
   exec = "Inventory_Part_Onh_Analys_API";
   value = "Y" {
      identifier = "MakeAvailabilityCheck";
      label = "Make Availability Check";
   }
   value = "N" {
      identifier = "NoAvailabilityCheck";
      label = "No Availability Check";
   }
}

enumeration CustOrdReservationType {
   enumerationtype = Standard;
   exec = "Cust_Ord_Reservation_Type_API";
   value = "Y" {
      identifier = "PriorityReservation";
      label = "Priority reservation";
   }
   value = "N" {
      identifier = "NormalReservation";
      label = "Normal reservation";
   }
}

enumeration InvPartLeadTimeCode {
   enumerationtype = Standard;
   exec = "Inv_Part_Lead_Time_Code_API";
   value = "M" {
      identifier = "Manufactured";
      label = "Manufactured";
   }
   value = "P" {
      identifier = "Purchased";
      label = "Purchased";
   }
}

enumeration InventoryPartCountType {
   enumerationtype = Standard;
   exec = "Inventory_Part_Count_Type_API";
   value = "Y" {
      identifier = "CyclicCounting";
      label = "Cyclic Counting";
   }
   value = "N" {
      identifier = "NotCyclicCounting";
      label = "Not Cyclic Counting";
   }
}

enumeration ConditionCodeType {
   enumerationtype = Standard;
   exec = "Condition_Code_Type_API";
   value = "DEF_COND_CODE" {
      identifier = "DefaultConditionCode";
      label = "Default Condition Code";
   }
   value = "NOT_DEF_COND_CODE" {
      identifier = "NotDefaultConditionCode";
      label = "Not Default Condition Code";
   }
}

enumeration FndUserType {
   enumerationtype = Standard;
   exec = "Fnd_User_Type_API";
   value = "SYSTEM_USER" {
      identifier = "SystemUser";
      label = "System User";
   }
   value = "SERVICE_USER" {
      identifier = "ServiceUser";
      label = "Service User";
   }
   value = "END_USER" {
      identifier = "EndUser";
      label = "End User";
   }
   subset UsersSubset = "SERVICE_USER", "END_USER";
}

enumeration FndUserType.UsersSubset {
   enumerationtype = Standard;
   exec = "Fnd_User_Type_API";
   value = "SERVICE_USER" {
      identifier = "ServiceUser";
      label = "Service User";
   }
   value = "END_USER" {
      identifier = "EndUser";
      label = "End User";
   }
}

enumeration CustomerOrderBlockType {
   enumerationtype = Standard;
   exec = "Customer_Order_Block_Type_API";
   value = "CREDIT_BLOCKED" {
      identifier = "CreditBlocked";
      label = "Credit";
   }
   value = "ADV_PAY_BLOCKED" {
      identifier = "AdvPayBlocked";
      label = "Adv/Prepay";
   }
   value = "MANUAL_BLOCKED" {
      identifier = "ManualBlocked";
      label = "Manual";
   }
   value = "NOT_BLOCKED" {
      identifier = "NotBlocked";
      label = "None";
   }
}

enumeration TaxPayingParty {
   enumerationtype = Standard;
   exec = "Tax_Paying_Party_API";
   value = "NO_TAX" {
      identifier = "NoTax";
      label = "No Tax";
   }
   value = "CUSTOMER" {
      identifier = "Customer";
      label = "Customer";
   }
   value = "COMPANY" {
      identifier = "Company";
      label = "Company";
   }
}

enumeration DeliveryNoteOptions {
   enumerationtype = Standard;
   exec = "Delivery_Note_Options_API";
   value = "SHIPMENT_CUSTOMER_ORDER" {
      identifier = "ShipmentCustomerOrder";
      label = "Shipment and Customer Order";
   }
   value = "SHIPMENT" {
      identifier = "Shipment";
      label = "Shipment";
   }
   value = "CUSTOMER_ORDER" {
      identifier = "CustomerOrder";
      label = "Customer Order";
   }
   value = "NONE" {
      identifier = "None";
      label = "None";
   }
}

enumeration PickInventoryType {
   enumerationtype = Standard;
   exec = "Pick_Inventory_Type_API";
   value = "SHIPINV" {
      identifier = "ShipmentInventory";
      label = "Shipment inventory";
   }
   value = "ORDINV" {
      identifier = "OrdinaryInventory";
      label = "Ordinary inventory";
   }
}

enumeration ShipmentCreation {
   enumerationtype = Standard;
   exec = "Shipment_Creation_API";
   value = "NO_AUTOMATIC" {
      identifier = "NoAutomatic";
      label = "Not Automatic";
   }
   value = "ORDER_RELEASE" {
      identifier = "OrderRelease";
      label = "At Order Release";
   }
   value = "PICK_LIST_CREATION" {
      identifier = "PickListCreation";
      label = "At Pick List Creation";
   }
   value = "REPORT_RETURN" {
      identifier = "ReportReturn";
      label = "At Report Return";
   }
   subset ShipmentOrder = "NO_AUTOMATIC", "ORDER_RELEASE";
   subset CustomerOrder = "NO_AUTOMATIC", "ORDER_RELEASE", "PICK_LIST_CREATION";
   subset ReceiptReturn = "NO_AUTOMATIC", "REPORT_RETURN";
}

enumeration ShipmentCreation.ShipmentOrder {
   enumerationtype = Standard;
   exec = "Shipment_Creation_API";
   value = "NO_AUTOMATIC" {
      identifier = "NoAutomatic";
      label = "Not Automatic";
   }
   value = "ORDER_RELEASE" {
      identifier = "OrderRelease";
      label = "At Order Release";
   }
}

enumeration ShipmentCreation.CustomerOrder {
   enumerationtype = Standard;
   exec = "Shipment_Creation_API";
   value = "NO_AUTOMATIC" {
      identifier = "NoAutomatic";
      label = "Not Automatic";
   }
   value = "ORDER_RELEASE" {
      identifier = "OrderRelease";
      label = "At Order Release";
   }
   value = "PICK_LIST_CREATION" {
      identifier = "PickListCreation";
      label = "At Pick List Creation";
   }
}

enumeration ShipmentCreation.ReceiptReturn {
   enumerationtype = Standard;
   exec = "Shipment_Creation_API";
   value = "NO_AUTOMATIC" {
      identifier = "NoAutomatic";
      label = "Not Automatic";
   }
   value = "REPORT_RETURN" {
      identifier = "ReportReturn";
      label = "At Report Return";
   }
}

enumeration CustomerBackorderOption {
   enumerationtype = Standard;
   exec = "Customer_Backorder_Option_API";
   value = "NO PARTIAL DELIVERIES ALLOWED" {
      identifier = "NoPartialDeliveriesAllow";
      label = "No Partial Deliveries Allowed";
   }
   value = "INCOMPLETE LINES NOT ALLOWED" {
      identifier = "IncompleteLinesNotAllow";
      label = "Incomplete Lines Not Allowed";
   }
   value = "INCOMPLETE PACKAGES NOT ALLOWED" {
      identifier = "IncompletePkgsNotAllowed";
      label = "Incomplete Packages Not Allowed";
   }
   value = "ALLOW INCOMPLETE LINES AND PACKAGES" {
      identifier = "AllowIncompleteLinesPkgs";
      label = "Allow Incomplete Lines and Packages";
   }
}

enumeration IntrastatExempt {
   enumerationtype = Standard;
   exec = "Intrastat_Exempt_API";
   value = "INCLUDE" {
      identifier = "Include";
      label = "Include";
   }
   value = "EXEMPT" {
      identifier = "Exempt";
      label = "Exempt";
   }
}

enumeration ScheduleAgreementOrder {
   enumerationtype = Standard;
   exec = "Schedule_Agreement_Order_API";
   value = "SCHEDULE" {
      identifier = "SchedulingOrder";
      label = "Scheduling Order";
   }
   value = "NOT SCHEDULE" {
      identifier = "NotSchedulingOrder";
      label = "Not Scheduling Order";
   }
}

enumeration ServiceManagementConnect {
   enumerationtype = Standard;
   exec = "Service_Management_Connect_API";
   value = "CONNECTED" {
      identifier = "Connected";
      label = "Connected";
   }
   value = "NOT CONNECTED" {
      identifier = "NotConnected";
      label = "Not Connected";
   }
}

enumeration StagedBillingType {
   enumerationtype = Standard;
   exec = "Staged_Billing_Type_API";
   value = "STAGED BILLING" {
      identifier = "StagedBilling";
      label = "Staged billing";
   }
   value = "NOT STAGED BILLING" {
      identifier = "NotStagedBilling";
      label = "Not staged billing";
   }
}

enumeration OrderDeliveryType {
   enumerationtype = Standard;
   exec = "Order_Delivery_Type_API";
   value = "TRANSIT" {
      identifier = "TransitDelivery";
      label = "Transit delivery";
   }
   value = "DIRECT" {
      identifier = "DirectDelivery";
      label = "Direct delivery";
   }
   value = "INTTRANSIT" {
      identifier = "InternalTransitDelivery";
      label = "Internal transit delivery";
   }
   value = "INTDIRECT" {
      identifier = "InternalDirectDelivery";
      label = "Internal direct delivery";
   }
   value = "INTER-SITE" {
      identifier = "InterSiteDelivery";
      label = "Inter site delivery";
   }
}

enumeration PrintPickList {
   enumerationtype = Standard;
   exec = "Print_Pick_List_API";
   value = "Y" {
      identifier = "PrintPicklist";
      label = "Print picklist";
   }
   value = "N" {
      identifier = "NoPicklist";
      label = "No picklist";
   }
}

enumeration PrintPackList {
   enumerationtype = Standard;
   exec = "Print_Pack_List_API";
   value = "Y" {
      identifier = "PrintDeliveryNote";
      label = "Print delivery note";
   }
   value = "N" {
      identifier = "NoDeliveryNote";
      label = "No delivery note";
   }
}

enumeration PrintOrderConfirmation {
   enumerationtype = Standard;
   exec = "Print_Order_Confirmation_API";
   value = "Y" {
      identifier = "PrintOrderConf";
      label = "Print order conf";
   }
   value = "N" {
      identifier = "NoOrderConf";
      label = "No order conf";
   }
}

enumeration OrderConfirmationPrinted {
   enumerationtype = Standard;
   exec = "Order_Confirmation_Printed_API";
   value = "Y" {
      identifier = "Printed";
      label = "Printed";
   }
   value = "N" {
      identifier = "NotPrinted";
      label = "Not printed";
   }
}

enumeration GenYesNo {
   enumerationtype = Standard;
   exec = "Gen_Yes_No_API";
   value = "Y" {
      identifier = "Yes";
      label = "Yes";
   }
   value = "N" {
      identifier = "No";
      label = "No";
   }
}

enumeration OutputMediaType {
   enumerationtype = Standard;
   exec = "Output_Media_Type_API";
   value = "1" {
      identifier = "Printout";
      label = "Printout";
   }
   value = "2" {
      identifier = "Email";
      label = "E-Mail";
   }
   value = "3" {
      identifier = "MailToFax";
      label = "Mail To Fax";
   }
   value = "4" {
      identifier = "Xml";
      label = "Xml";
   }
}

enumeration CustomerCategory {
   enumerationtype = Standard;
   exec = "Customer_Category_API";
   value = "CUSTOMER" {
      identifier = "Customer";
      label = "Customer";
   }
   value = "PROSPECT" {
      identifier = "Prospect";
      label = "Prospect";
   }
   value = "END_CUSTOMER" {
      identifier = "EndCustomer";
      label = "End Customer";
   }
   subset Prospect = "CUSTOMER", "PROSPECT";
   subset EndCustomer = "CUSTOMER", "END_CUSTOMER";
}

enumeration CustomerCategory.Prospect {
   enumerationtype = Standard;
   exec = "Customer_Category_API";
   value = "CUSTOMER" {
      identifier = "Customer";
      label = "Customer";
   }
   value = "PROSPECT" {
      identifier = "Prospect";
      label = "Prospect";
   }
}

enumeration CustomerCategory.EndCustomer {
   enumerationtype = Standard;
   exec = "Customer_Category_API";
   value = "CUSTOMER" {
      identifier = "Customer";
      label = "Customer";
   }
   value = "END_CUSTOMER" {
      identifier = "EndCustomer";
      label = "End Customer";
   }
}

enumeration IdentifierRefValidation {
   enumerationtype = Standard;
   exec = "Identifier_Ref_Validation_API";
   value = "NONE" {
      identifier = "None";
      label = "None";
   }
   value = "KATAKANA" {
      identifier = "Katakana";
      label = "Katakana";
   }
}

enumeration PartyType {
   enumerationtype = Standard;
   exec = "Party_Type_API";
   value = "COMPANY" {
      identifier = "Company";
      label = "Company";
   }
   value = "CUSTOMER" {
      identifier = "Customer";
      label = "Customer";
   }
   value = "SUPPLIER" {
      identifier = "Supplier";
      label = "Supplier";
   }
   value = "PERSON" {
      identifier = "Person";
      label = "Person";
   }
   value = "MANUFACTURER" {
      identifier = "Manufacturer";
      label = "Manufacturer";
   }
   value = "OWNER" {
      identifier = "Owner";
      label = "Owner";
   }
   value = "FORWARDER" {
      identifier = "ForwardingAgent";
      label = "Forwarding Agent";
   }
   value = "EMPLOYEE" {
      identifier = "Employee";
      label = "Employee";
   }
}

enumeration FndBoolean {
   enumerationtype = Standard;
   exec = "Fnd_Boolean_API";
   value = "FALSE" {
      identifier = "False";
      label = "False";
   }
   value = "TRUE" {
      identifier = "True";
      label = "True";
   }
}

enumeration BCBillOrWar {
   enumerationtype = Standard;
   exec = "B_C_Bill_Or_War_API";
   value = "BILLABLE" {
      identifier = "Billable";
      label = "Billable";
   }
   value = "WARRANTY" {
      identifier = "Warranty";
      label = "Warranty";
   }
}

enumeration BcOwnershipCode {
   enumerationtype = Standard;
   exec = "Bc_Ownership_Code_API";
   value = "CUSTOMER_OWNED" {
      identifier = "CustomerOwned";
      label = "Customer Owned";
   }
   value = "COMPANY_OWNED" {
      identifier = "CompanyOwned";
      label = "Company Owned";
   }
}
entity BcRepairCenterOrder {
   crud = Create,Read,Update,Delete;
   from = "BC_REPAIR_CENTER_ORDER";
   exec = "Bc_Repair_Center_Order_API";
   basetable = "BC_REPAIR_CENTER_ORDER_TAB";
   keys = RcoNo {
      where = "rco_no = :RcoNo";
   }
   statemachine {
      event Cancel {
         label = "Cancel";
         enabled = [Objstate in ("Planned", "Released")];
      }
      event Release {
         label = "Release";
         enabled = [Objstate = "Planned"];
      }
      event Start {
         label = "Start";
         enabled = [Objstate = "Released"];
      }
      event Complete {
         label = "Complete";
         enabled = [Objstate = "Started"];
      }
      event Close {
         label = "Close";
         enabled = [Objstate = "Completed"];
      }
      event Reopen {
         label = "Reopen";
         enabled = [Objstate = "Closed"];
      }
   }
   attribute Objstate Enumeration(BcRepairCenterOrderState) {
      fetch     = "objstate";
      label     = "State";
      maxlength = 50;
      editable  = [false];
      insertable = [false];
      updatable  = [false];
   }
   attribute Objgrants Text {
      fetch     = "NULL";
      label     = "Granted access";
      maxlength = 2000;
      editable  = [false];
      insertable = [false];
      updatable  = [false];
   }
   attribute RcoNo Number {
      fetch      = "rco_no";
      dbcolumn = "rco_no";
      label      = "Rco No";
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      implementationtype = "NUMBER";
   }
   attribute CustomerId Text {
      fetch      = "customer_id";
      dbcolumn = "customer_id";
      label      = "Customer Id";
      maxlength  = 20;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute CustomerOrderNo Text {
      fetch      = "customer_order_no";
      dbcolumn = "customer_order_no";
      label      = "Customer Order No";
      maxlength  = 12;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(12)";
   }
   attribute DocAddressId Text {
      fetch      = "doc_address_id";
      dbcolumn = "doc_address_id";
      label      = "Doc Address Id";
      maxlength  = 50;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(50)";
   }
   attribute DeliveryAddressId Text {
      fetch      = "delivery_address_id";
      dbcolumn = "delivery_address_id";
      label      = "Delivery Address Id";
      maxlength  = 50;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(50)";
   }
   attribute Contract Text {
      fetch      = "contract";
      dbcolumn = "contract";
      label      = "Contract";
      maxlength  = 5;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(5)";
   }
   attribute Currency Text {
      fetch      = "currency";
      dbcolumn = "currency";
      label      = "Currency";
      maxlength  = 3;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(3)";
   }
   attribute DateCreated Date {
      fetch      = "date_created";
      dbcolumn = "date_created";
      label      = "Date Created";
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      implementationtype = "DATE";
   }
   attribute ReportedBy Text {
      fetch      = "reported_by";
      dbcolumn = "reported_by";
      label      = "Reported By";
      maxlength  = 30;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(30)";
   }
   function DefaultCopy Entity(BcRepairCenterOrder) {
      parameter CopyValues Structure(BcRepairCenterOrderCopyValues);
   }
}

enumeration BcRepairCenterOrderState {
   enumerationtype = EntityState;
   exec = "Bc_Repair_Center_Order_API";
   value = "Planned" {
      identifier = "Planned";
      label = "Planned";
   }
   value = "Cancelled" {
      identifier = "Cancelled";
      label = "Cancelled";
   }
   value = "Released" {
      identifier = "Released";
      label = "Released";
   }
   value = "Started" {
      identifier = "Started";
      label = "Started";
   }
   value = "Completed" {
      identifier = "Completed";
      label = "Completed";
   }
   value = "Closed" {
      identifier = "Closed";
      label = "Closed";
   }
}

structure BcRepairCenterOrderCopyValues$ {
   attribute ModifiedSource Entity(BcRepairCenterOrder) {
      implementationtype = "VARCHAR2";
   }
}

entity BcRepairLine {
   crud = Create,Read,Update,Delete;
   from = "BC_REPAIR_LINE";
   exec = "Bc_Repair_Line_API";
   basetable = "BC_REPAIR_LINE_TAB";
   keys = RcoNo,RepairLineNo {
      where = "rco_no = :RcoNo AND repair_line_no = :RepairLineNo";
   }
   statemachine {
      event Cancel {
         label = "Cancel";
         enabled = [Objstate in ("New", "Received", "Processed", "RepairStarted")];
      }
      event Receive {
         label = "Receive";
         enabled = [Objstate = "New"];
      }
      event Process {
         label = "Process";
         enabled = [Objstate = "Received"];
      }
      event RepairStart {
         label = "Repair Start";
         enabled = [Objstate = "Processed"];
      }
      event RepairComplete {
         label = "Repair Complete";
         enabled = [Objstate = "RepairStarted"];
      }
      event Ship {
         label = "Ship";
         enabled = [Objstate = "RepairCompleted"];
      }
   }
   attribute Objstate Enumeration(BcRepairLineState) {
      fetch     = "objstate";
      label     = "State";
      maxlength = 50;
      editable  = [false];
      insertable = [false];
      updatable  = [false];
   }
   attribute Objgrants Text {
      fetch     = "NULL";
      label     = "Granted access";
      maxlength = 2000;
      editable  = [false];
      insertable = [false];
      updatable  = [false];
   }
   attribute RcoNo Number {
      fetch      = "rco_no";
      dbcolumn = "rco_no";
      label      = "Rco No";
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      implementationtype = "NUMBER";
   }
   attribute RepairLineNo Number {
      fetch      = "repair_line_no";
      dbcolumn = "repair_line_no";
      label      = "Repair Line No";
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      implementationtype = "NUMBER";
   }
   attribute DateEntered Date {
      fetch      = "date_entered";
      dbcolumn = "date_entered";
      label      = "Date Entered";
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      implementationtype = "DATE";
   }
   attribute RepairSite Text {
      fetch      = "repair_site";
      dbcolumn = "repair_site";
      label      = "Repair Site";
      maxlength  = 5;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(5)";
   }
   attribute PartNumber Text {
      fetch      = "part_number";
      dbcolumn = "part_number";
      label      = "Part Number";
      maxlength  = 25;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(25)";
   }
   attribute Quantity Number {
      fetch      = "quantity";
      dbcolumn = "quantity";
      label      = "Quantity";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute QuantityReceived Number {
      fetch      = "quantity_received";
      dbcolumn = "quantity_received";
      label      = "Quantity Received";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute ConditionCode Text {
      fetch      = "condition_code";
      dbcolumn = "condition_code";
      label      = "Condition Code";
      maxlength  = 10;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(10)";
   }
   attribute SerialNo Text {
      fetch      = "serial_no";
      dbcolumn = "serial_no";
      label      = "Serial No";
      maxlength  = 50;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(50)";
   }
   attribute OwnershipCode Enumeration(BcOwnershipCode) {
      fetch      = "ownership_code_db";
      dbcolumn = "ownership_code";
      label      = "Ownership Code";
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute OwnerId Text {
      fetch      = "owner_id";
      dbcolumn = "owner_id";
      label      = "Owner Id";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute RepairLineAction Text {
      fetch      = "repair_line_action";
      dbcolumn = "repair_line_action";
      label      = "Repair Line Action";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute RepairType Text {
      fetch      = "repair_type";
      dbcolumn = "repair_type";
      label      = "Repair Type";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute CustomerFaultCode Text {
      fetch      = "customer_fault_code";
      dbcolumn = "customer_fault_code";
      label      = "Customer Fault Code";
      maxlength  = 20;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      implementationtype = "VARCHAR2(20)";
   }
   attribute NoteText Text {
      fetch      = "note_text";
      dbcolumn = "note_text";
      label      = "Note Text";
      maxlength  = 2000;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(2000)";
   }
   attribute NoteId Text {
      fetch      = "note_id";
      dbcolumn = "note_id";
      label      = "Note Id";
      maxlength  = 10;
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      implementationtype = "VARCHAR2(10)";
   }
   attribute BillableOrWarranty Enumeration(BCBillOrWar) {
      fetch      = "billable_or_warranty_db";
      dbcolumn = "billable_or_warranty";
      label      = "Billable Or Warranty";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute ManufacturerWarranty Boolean("TRUE", "FALSE") {
      fetch      = "manufacturer_warranty_db";
      dbcolumn = "manufacturer_warranty";
      isfndboolean = [true];
      label      = "Manufacturer Warranty";
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      implementationtype = "VARCHAR2(20)";
   }
   attribute RepairWarranty Boolean("TRUE", "FALSE") {
      fetch      = "repair_warranty_db";
      dbcolumn = "repair_warranty";
      isfndboolean = [true];
      label      = "Repair Warranty";
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      implementationtype = "VARCHAR2(20)";
   }
   attribute WarrantyValidated Boolean("TRUE", "FALSE") {
      fetch      = "warranty_validated_db";
      dbcolumn = "warranty_validated";
      isfndboolean = [true];
      label      = "Warranty Validated";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute ProcessingFee Number {
      fetch      = "processing_fee";
      dbcolumn = "processing_fee";
      label      = "Processing Fee";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute RequiredStart Date {
      fetch      = "required_start";
      dbcolumn = "required_start";
      label      = "Required Start";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "DATE";
   }
   function DefaultCopy Entity(BcRepairLine) {
      parameter CopyValues Structure(BcRepairLineCopyValues);
   }
}

enumeration BcRepairLineState {
   enumerationtype = EntityState;
   exec = "Bc_Repair_Line_API";
   value = "New" {
      identifier = "New";
      label = "New";
   }
   value = "Received" {
      identifier = "Received";
      label = "Received";
   }
   value = "Cancelled" {
      identifier = "Cancelled";
      label = "Cancelled";
   }
   value = "Processed" {
      identifier = "Processed";
      label = "Processed";
   }
   value = "RepairStarted" {
      identifier = "RepairStarted";
      label = "Repair Started";
   }
   value = "RepairCompleted" {
      identifier = "RepairCompleted";
      label = "Repair Completed";
   }
   value = "Shipped" {
      identifier = "Shipped";
      label = "Shipped";
   }
}

structure BcRepairLineCopyValues$ {
   attribute ModifiedSource Entity(BcRepairLine) {
      implementationtype = "VARCHAR2";
   }
}


entityset Reference_BcRepairLine for BcRepairLine;
entity BcLogInfo {
   crud = Create,Read,Update,Delete;
   from = "BC_LOG_INFO";
   exec = "Bc_Log_Info_API";
   basetable = "BC_LOG_INFO_TAB";
   keys = RcoNo,LogInfoId {
      where = "rco_no = :RcoNo AND log_info_id = :LogInfoId";
   }
   attribute Objgrants Text {
      fetch     = "NULL";
      label     = "Granted access";
      maxlength = 2000;
      editable  = [false];
      insertable = [false];
      updatable  = [false];
   }
   attribute RcoNo Number {
      fetch      = "rco_no";
      dbcolumn = "rco_no";
      label      = "Rco No";
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      implementationtype = "NUMBER";
   }
   attribute LogInfoId Number {
      fetch      = "log_info_id";
      dbcolumn = "log_info_id";
      label      = "Log Info Id";
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      implementationtype = "NUMBER";
   }
   attribute RcoLine Number {
      fetch      = "rco_line";
      dbcolumn = "rco_line";
      label      = "Rco Line";
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      implementationtype = "NUMBER";
   }
   attribute DateCreated Date {
      fetch      = "date_created";
      dbcolumn = "date_created";
      label      = "Date Created";
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      implementationtype = "DATE";
   }
   attribute ReportedBy Text {
      fetch      = "reported_by";
      dbcolumn = "reported_by";
      label      = "Reported By";
      maxlength  = 30;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(30)";
   }
   attribute PartNumber Text {
      fetch      = "part_number";
      dbcolumn = "part_number";
      label      = "Part Number";
      maxlength  = 25;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(25)";
   }
   attribute Contract Text {
      fetch      = "contract";
      dbcolumn = "contract";
      label      = "Contract";
      maxlength  = 5;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(5)";
   }
   attribute Notes Text {
      fetch      = "notes";
      dbcolumn = "notes";
      label      = "Notes";
      maxlength  = 2000;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(2000)";
   }
   attribute EnterBy Text {
      fetch      = "enter_by";
      dbcolumn = "enter_by";
      label      = "Enter By";
      maxlength  = 6;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(6)";
   }
   function DefaultCopy Entity(BcLogInfo) {
      parameter CopyValues Structure(BcLogInfoCopyValues);
   }
}

structure BcLogInfoCopyValues$ {
   attribute ModifiedSource Entity(BcLogInfo) {
      implementationtype = "VARCHAR2";
   }
}


entityset Reference_BcLogInfo for BcLogInfo;
entity CustomerInfo {
   crud = Read;
   from = "CUSTOMER_INFO";
   exec = "Customer_Info_API";
   basetable = "CUSTOMER_INFO_TAB";
   keys = CustomerId {
      where = "customer_id = :CustomerId";
   }
   attribute Objgrants Text {
      fetch     = "NULL";
      label     = "Granted access";
      maxlength = 2000;
      editable  = [false];
      insertable = [false];
      updatable  = [false];
   }
   attribute CustomerId Text {
      fetch      = "customer_id";
      dbcolumn = "customer_id";
      label      = "Customer ID";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute Name Text {
      fetch      = "name";
      dbcolumn = "name";
      label      = "Name";
      maxlength  = 100;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(100)";
   }
   attribute CreationDate Date {
      fetch      = "creation_date";
      dbcolumn = "creation_date";
      label      = "Creation Date";
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      implementationtype = "DATE";
   }
   attribute AssociationNo Text {
      fetch      = "association_no";
      dbcolumn = "association_no";
      label      = "Association No";
      maxlength  = 50;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(50)";
   }
   attribute Party Text {
      fetch      = "party";
      dbcolumn = "party";
      label      = "Party";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute DefaultDomain Boolean("TRUE","FALSE") {
      fetch      = "decode(default_domain,'TRUE','TRUE','FALSE','FALSE',default_domain)";
      dbcolumn = "default_domain";
      label      = "Default Domain";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2";
   }
   attribute DefaultLanguage Lookup(IsoLanguage) {
      fetch      = "default_language_db";
      dbcolumn = "default_language";
      label      = "Default Language";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(2)";
   }
   attribute Country Lookup(IsoCountry) {
      fetch      = "country_db";
      dbcolumn = "country";
      label      = "Country";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(2)";
   }
   attribute PartyType Enumeration(PartyType) {
      fetch      = "party_type_db";
      dbcolumn = "party_type";
      label      = "Party Type";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute CorporateForm Text {
      fetch      = "corporate_form";
      dbcolumn = "corporate_form";
      label      = "Form of Business";
      maxlength  = 8;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(8)";
   }
   attribute IdentifierReference Text {
      fetch      = "identifier_reference";
      dbcolumn = "identifier_reference";
      label      = "Identifier Reference";
      maxlength  = 100;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(100)";
   }
   attribute IdentifierRefValidation Enumeration(IdentifierRefValidation) {
      fetch      = "identifier_ref_validation_db";
      dbcolumn = "identifier_ref_validation";
      label      = "Identifier Ref Validation";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute PictureId Number {
      fetch      = "picture_id";
      dbcolumn = "picture_id";
      label      = "Picture Id";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute OneTime Boolean("TRUE", "FALSE") {
      fetch      = "one_time_db";
      dbcolumn = "one_time";
      isfndboolean = [true];
      label      = "One-Time Customer";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute CustomerCategory Enumeration(CustomerCategory) {
      fetch      = "customer_category_db";
      dbcolumn = "customer_category";
      label      = "Customer Category";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute B2bCustomer Boolean("TRUE", "FALSE") {
      fetch      = "b2b_customer_db";
      dbcolumn = "b2b_customer";
      isfndboolean = [true];
      label      = "B2b Customer";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute CustomerTaxUsageType Text {
      fetch      = "customer_tax_usage_type";
      dbcolumn = "customer_tax_usage_type";
      label      = "Customer Tax Usage Type";
      maxlength  = 5;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(5)";
   }
   attribute BusinessClassification Text {
      fetch      = "business_classification";
      dbcolumn = "business_classification";
      label      = "Business Classification";
      maxlength  = 10;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(10)";
   }
   attribute DateOfRegistration Date {
      fetch      = "date_of_registration";
      dbcolumn = "date_of_registration";
      label      = "Date of Registration";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "DATE";
   }
}



entityset Reference_CustomerInfo for CustomerInfo;
entity CustomerInfoAddress {
   crud = Read;
   from = "CUSTOMER_INFO_ADDRESS";
   exec = "Customer_Info_Address_API";
   basetable = "CUSTOMER_INFO_ADDRESS_TAB";
   keys = CustomerId,AddressId {
      where = "customer_id = :CustomerId AND address_id = :AddressId";
   }
   attribute Objgrants Text {
      fetch     = "NULL";
      label     = "Granted access";
      maxlength = 2000;
      editable  = [false];
      insertable = [false];
      updatable  = [false];
   }
   attribute CustomerId Text {
      fetch      = "customer_id";
      dbcolumn = "customer_id";
      label      = "Customer Id";
      maxlength  = 20;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute AddressId Text {
      fetch      = "address_id";
      dbcolumn = "address_id";
      label      = "Address ID";
      maxlength  = 50;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(50)";
   }
   attribute Name Text {
      fetch      = "name";
      dbcolumn = "name";
      label      = "Name";
      maxlength  = 100;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(100)";
   }
   attribute Address Text {
      fetch      = "address";
      dbcolumn = "address";
      label      = "Address";
      maxlength  = 2000;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(2000)";
   }
   attribute EanLocation Text {
      fetch      = "ean_location";
      dbcolumn = "ean_location";
      label      = "Ean Location";
      maxlength  = 100;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(100)";
   }
   attribute ValidFrom Date {
      fetch      = "valid_from";
      dbcolumn = "valid_from";
      label      = "Valid From";
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "DATE";
   }
   attribute ValidTo Date {
      fetch      = "valid_to";
      dbcolumn = "valid_to";
      label      = "Valid To";
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "DATE";
   }
   attribute Party Text {
      fetch      = "party";
      dbcolumn = "party";
      label      = "Party";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute AddressLov Text {
      fetch      = "address_lov";
      dbcolumn = "address_lov";
      label      = "Address";
      maxlength  = 2000;
      insertable  = [false];
      updatable   = [false];
      editable   = [false];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(2000)";
      defaultcopyapplicable = [false];
   }
   attribute DefaultDomain Boolean("TRUE","FALSE") {
      fetch      = "decode(default_domain,'TRUE','TRUE','FALSE','FALSE',default_domain)";
      dbcolumn = "default_domain";
      label      = "Default Domain";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2";
   }
   attribute Country Lookup(IsoCountry) {
      fetch      = "country_db";
      dbcolumn = "country";
      label      = "Country";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(2)";
   }
   attribute PartyType Enumeration(PartyType) {
      fetch      = "party_type_db";
      dbcolumn = "party_type";
      label      = "Party Type";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute SecondaryContact Text {
      fetch      = "secondary_contact";
      dbcolumn = "secondary_contact";
      label      = "Secondary Contact";
      maxlength  = 35;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(35)";
   }
   attribute PrimaryContact Text {
      fetch      = "primary_contact";
      dbcolumn = "primary_contact";
      label      = "Primary Contact";
      maxlength  = 35;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(35)";
   }
   attribute Address1 Text {
      fetch      = "address1";
      dbcolumn = "address1";
      label      = "Address1";
      maxlength  = 35;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(35)";
   }
   attribute Address2 Text {
      fetch      = "address2";
      dbcolumn = "address2";
      label      = "Address2";
      maxlength  = 35;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(35)";
   }
   attribute Address3 Text {
      fetch      = "address3";
      dbcolumn = "address3";
      label      = "Address3";
      maxlength  = 100;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(100)";
   }
   attribute Address4 Text {
      fetch      = "address4";
      dbcolumn = "address4";
      label      = "Address4";
      maxlength  = 100;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(100)";
   }
   attribute Address5 Text {
      fetch      = "address5";
      dbcolumn = "address5";
      label      = "Address5";
      maxlength  = 100;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(100)";
   }
   attribute Address6 Text {
      fetch      = "address6";
      dbcolumn = "address6";
      label      = "Address6";
      maxlength  = 100;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(100)";
   }
   attribute ZipCode Text {
      fetch      = "zip_code";
      dbcolumn = "zip_code";
      label      = "Zip Code";
      maxlength  = 35;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(35)";
   }
   attribute City Text {
      fetch      = "city";
      dbcolumn = "city";
      label      = "City";
      maxlength  = 35;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(35)";
   }
   attribute County Text {
      fetch      = "county";
      dbcolumn = "county";
      label      = "County";
      maxlength  = 35;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(35)";
   }
   attribute State Text {
      fetch      = "state";
      dbcolumn = "state";
      label      = "State";
      maxlength  = 35;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(35)";
   }
   attribute InCity Text {
      fetch      = "in_city";
      dbcolumn = "in_city";
      label      = "In City";
      maxlength  = 5;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(5)";
   }
   attribute JurisdictionCode Text {
      fetch      = "jurisdiction_code";
      dbcolumn = "jurisdiction_code";
      label      = "Jurisdiction Code";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute CommId Number {
      fetch      = "comm_id";
      dbcolumn = "comm_id";
      label      = "Comm Id";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute OutputMedia Enumeration(OutputMediaType) {
      fetch      = "output_media_db";
      dbcolumn = "output_media";
      label      = "Output Media";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute EndCustomerId Text {
      fetch      = "end_customer_id";
      dbcolumn = "end_customer_id";
      label      = "End Customer Id";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute EndCustAddrId Text {
      fetch      = "end_cust_addr_id";
      dbcolumn = "end_cust_addr_id";
      label      = "End Cust Addr Id";
      maxlength  = 50;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(50)";
   }
   attribute CustomerBranch Text {
      fetch      = "customer_branch";
      dbcolumn = "customer_branch";
      label      = "Customer Branch";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
}



entityset Reference_CustomerInfoAddress for CustomerInfoAddress;
entity IsoCurrency {
   crud = Read;
   from = "ISO_CURRENCY";
   exec = "Iso_Currency_API";
   basetable = "ISO_CURRENCY_TAB";
   keys = CurrencyCode {
      where = "currency_code = :CurrencyCode";
   }
   attribute Objgrants Text {
      fetch     = "NULL";
      label     = "Granted access";
      maxlength = 2000;
      editable  = [false];
      insertable = [false];
      updatable  = [false];
   }
   attribute CurrencyCode Text {
      fetch      = "currency_code";
      dbcolumn = "currency_code";
      label      = "Currency Code";
      maxlength  = 3;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(3)";
   }
   attribute Description Text {
      fetch      = "description";
      dbcolumn = "description";
      label      = "Description";
      maxlength  = 739;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(739)";
   }
   attribute CurrencyNumber Number {
      fetch      = "currency_number";
      dbcolumn = "currency_number";
      label      = "Currency Number";
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "NUMBER";
   }
   attribute UsedInAppl Text {
      fetch      = "used_in_appl";
      dbcolumn = "used_in_appl";
      label      = "Used In Appl";
      maxlength  = 5;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(5)";
   }
   attribute DefaultCountry Text {
      fetch      = "default_country";
      dbcolumn = "default_country";
      label      = "Default Country";
      maxlength  = 2;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(2)";
   }
   attribute SystemAdded Text {
      fetch      = "system_added";
      dbcolumn = "system_added";
      label      = "System Added";
      maxlength  = 1;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(1)";
   }
}


enumeration Lookup_IsoCurrency {
   enumerationtype = Lookup;
   exec = "Iso_Currency_API";
}


entityset Lookup_IsoCurrency for Lookup_IsoCurrency;

query Lookup_IsoCurrency {
   from = "ISO_CURRENCY";
   keys = Id {
      where = "currency_code = :Id";
   }
   attribute Objgrants Text {
      fetch     = "NULL";
      label     = "Granted access";
      maxlength = 2000;
      editable  = [false];
   }
   attribute Id Text {
      fetch     = "currency_code";
      required  = [false];
      editable  = [false];
   }
   attribute Description Text {
      fetch     = "description";
      required  = [false];
      editable  = [false];
   }
}

entityset Reference_IsoCurrency for IsoCurrency;
entity Site {
   crud = Read;
   from = "SITE";
   exec = "Site_API";
   basetable = "SITE_TAB";
   keys = Contract {
      where = "contract = :Contract";
   }
   attribute Objgrants Text {
      fetch     = "NULL";
      label     = "Granted access";
      maxlength = 2000;
      editable  = [false];
      insertable = [false];
      updatable  = [false];
   }
   attribute Contract Text {
      fetch      = "contract";
      dbcolumn = "contract";
      label      = "Site";
      maxlength  = 5;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(5)";
   }
   attribute Company Text {
      fetch      = "company";
      dbcolumn = "company";
      label      = "Company";
      maxlength  = 20;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute DeliveryAddress Text {
      fetch      = "delivery_address";
      dbcolumn = "delivery_address";
      label      = "Address ID";
      maxlength  = 50;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(50)";
   }
   attribute Description Text {
      fetch      = "description";
      dbcolumn = "description";
      label      = "Site Description";
      maxlength  = 20;
      insertable  = [false];
      updatable   = [false];
      editable   = [false];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(20)";
      defaultcopyapplicable = [false];
   }
   attribute DistCalendarId Text {
      fetch      = "dist_calendar_id";
      dbcolumn = "dist_calendar_id";
      label      = "Distribution Calendar";
      maxlength  = 10;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(10)";
   }
   attribute ManufCalendarId Text {
      fetch      = "manuf_calendar_id";
      dbcolumn = "manuf_calendar_id";
      label      = "Manufacturing Calendar";
      maxlength  = 10;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(10)";
   }
   attribute Offset Number {
      fetch      = "offset";
      dbcolumn = "offset";
      label      = "Offset";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "NUMBER";
   }
   attribute DataCaptureMenuId Text {
      fetch      = "data_capture_menu_id";
      dbcolumn = "data_capture_menu_id";
      label      = "Data Collection Menu ID";
      maxlength  = 50;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(50)";
   }
}



entityset Reference_Site for Site;
entity CustomerOrder {
   crud = Read;
   from = "CUSTOMER_ORDER";
   exec = "Customer_Order_API";
   basetable = "CUSTOMER_ORDER_TAB";
   keys = OrderNo {
      where = "order_no = :OrderNo";
   }
   statemachine {
      event SetCancelled {
         label = "Set Cancelled";
         enabled = [Objstate in ("Planned", "Blocked", "Released")];
      }
      event SetLineCancelled {
         label = "Set Line Cancelled";
         enabled = [Objstate in ("Planned", "Blocked", "Released", "Reserved", "Picked", "PartiallyDelivered")];
      }
      event SetLineQtyAssigned {
         label = "Set Line Qty Assigned";
         enabled = [Objstate in ("Planned", "Blocked", "Delivered", "Invoiced", "Released", "Reserved", "Picked", "PartiallyDelivered")];
      }
      event SetReleased {
         label = "Set Released";
         enabled = [Objstate = "Planned"];
      }
      event SetLineQtyInvoiced {
         label = "Set Line Qty Invoiced";
         enabled = [Objstate in ("Planned", "Blocked", "Delivered", "Released", "Reserved", "Picked", "PartiallyDelivered")];
      }
      event SetBlocked {
         label = "Set Blocked";
         enabled = [Objstate in ("Planned", "Released", "Reserved", "Picked", "PartiallyDelivered")];
      }
      event ReleaseBlocked {
         label = "Release Blocked";
         enabled = [Objstate = "Blocked"];
      }
      event SetLineQtyConfirmeddiff {
         label = "Set Line Qty Confirmeddiff";
         enabled = [Objstate in ("Blocked", "Delivered", "PartiallyDelivered")];
      }
      event SetLineQtyShipdiff {
         label = "Set Line Qty Shipdiff";
         enabled = [Objstate in ("Blocked", "Delivered", "Invoiced", "Released", "Reserved", "Picked", "PartiallyDelivered")];
      }
      event SetLineUninvoiced {
         label = "Set Line Uninvoiced";
         enabled = [Objstate in ("Blocked", "Delivered", "Invoiced", "Released", "Reserved", "Picked", "PartiallyDelivered")];
      }
      event SetLineQtyPicked {
         label = "Set Line Qty Picked";
         enabled = [Objstate in ("Blocked", "Delivered", "Invoiced", "Reserved", "Picked", "PartiallyDelivered")];
      }
      event SetLineQtyShipped {
         label = "Set Line Qty Shipped";
         enabled = [Objstate in ("Blocked", "Delivered", "Invoiced", "Released", "Reserved", "Picked", "PartiallyDelivered")];
      }
      event NewOrderLineAdded {
         label = "New Order Line Added";
         enabled = [Objstate in ("Delivered", "Invoiced")];
      }
      event UndoLineDelivery {
         label = "Undo Line Delivery";
         enabled = [Objstate in ("Delivered", "Invoiced", "PartiallyDelivered")];
      }
      event SetRentLineCompleted {
         label = "Set Rent Line Completed";
         enabled = [Objstate in ("Delivered", "PartiallyDelivered")];
      }
      event SetRentLineReopened {
         label = "Set Rent Line Reopened";
         enabled = [Objstate in ("Delivered", "Invoiced", "PartiallyDelivered")];
      }
      event NewOrChangedCharge {
         label = "New Or Changed Charge";
         enabled = [Objstate = "Invoiced"];
      }
   }
   attribute Objstate Enumeration(CustomerOrderState) {
      fetch     = "objstate";
      label     = "State";
      maxlength = 50;
      editable  = [false];
      insertable = [false];
      updatable  = [false];
   }
   attribute Objgrants Text {
      fetch     = "NULL";
      label     = "Granted access";
      maxlength = 2000;
      editable  = [false];
      insertable = [false];
      updatable  = [false];
   }
   attribute OrderNo Text {
      fetch      = "order_no";
      dbcolumn = "order_no";
      label      = "Order No";
      maxlength  = 12;
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(12)";
   }
   attribute AuthorizeCode Text {
      fetch      = "authorize_code";
      dbcolumn = "authorize_code";
      label      = "Authorize Code";
      maxlength  = 20;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute BillAddrNo Text {
      fetch      = "bill_addr_no";
      dbcolumn = "bill_addr_no";
      label      = "Bill Addr No";
      maxlength  = 50;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(50)";
   }
   attribute Contract Text {
      fetch      = "contract";
      dbcolumn = "contract";
      label      = "Site";
      maxlength  = 5;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(5)";
   }
   attribute Company Text {
      fetch      = "company";
      dbcolumn = "company";
      label      = "Company";
      maxlength  = 20;
      insertable  = [false];
      updatable   = [false];
      editable   = [false];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
      defaultcopyapplicable = [false];
   }
   attribute CountryCode Text {
      fetch      = "country_code";
      dbcolumn = "country_code";
      label      = "Country Code";
      maxlength  = 2;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(2)";
   }
   attribute CurrencyCode Text {
      fetch      = "currency_code";
      dbcolumn = "currency_code";
      label      = "Currency Code";
      maxlength  = 3;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      format  = uppercase;
      implementationtype = "VARCHAR2(3)";
   }
   attribute CustomerNo Text {
      fetch      = "customer_no";
      dbcolumn = "customer_no";
      label      = "Customer No";
      maxlength  = 20;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute CustomerNoPay Text {
      fetch      = "customer_no_pay";
      dbcolumn = "customer_no_pay";
      label      = "Customer No Pay";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute CustomerNoPayAddrNo Text {
      fetch      = "customer_no_pay_addr_no";
      dbcolumn = "customer_no_pay_addr_no";
      label      = "Customer No Pay Addr No";
      maxlength  = 50;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(50)";
   }
   attribute CustomerNoPayReference Text {
      fetch      = "customer_no_pay_ref";
      dbcolumn = "customer_no_pay_ref";
      label      = "Customer No Pay Reference";
      maxlength  = 30;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(30)";
   }
   attribute DeliveryTerms Text {
      fetch      = "delivery_terms";
      dbcolumn = "delivery_terms";
      label      = "Delivery Terms";
      maxlength  = 5;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(5)";
   }
   attribute DistrictCode Text {
      fetch      = "district_code";
      dbcolumn = "district_code";
      label      = "District Code";
      maxlength  = 10;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(10)";
   }
   attribute LanguageCode Text {
      fetch      = "language_code";
      dbcolumn = "language_code";
      label      = "Language Code";
      maxlength  = 2;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(2)";
   }
   attribute MarketCode Text {
      fetch      = "market_code";
      dbcolumn = "market_code";
      label      = "Market Code";
      maxlength  = 10;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(10)";
   }
   attribute NoteId Number {
      fetch      = "note_id";
      dbcolumn = "note_id";
      label      = "Note ID";
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      implementationtype = "NUMBER";
   }
   attribute OrderCode Text {
      fetch      = "order_code";
      dbcolumn = "order_code";
      label      = "Order Code";
      maxlength  = 3;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      format  = uppercase;
      implementationtype = "VARCHAR2(3)";
   }
   attribute OrderId Text {
      fetch      = "order_id";
      dbcolumn = "order_id";
      label      = "Order Type";
      maxlength  = 3;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      format  = uppercase;
      implementationtype = "VARCHAR2(3)";
   }
   attribute PayTermId Text {
      fetch      = "pay_term_id";
      dbcolumn = "pay_term_id";
      label      = "Payment Terms";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute PreAccountingId Number {
      fetch      = "pre_accounting_id";
      dbcolumn = "pre_accounting_id";
      label      = "Pre Accounting ID";
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      implementationtype = "NUMBER";
   }
   attribute PrintControlCode Text {
      fetch      = "print_control_code";
      dbcolumn = "print_control_code";
      label      = "Print Control Code";
      maxlength  = 10;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(10)";
   }
   attribute RegionCode Text {
      fetch      = "region_code";
      dbcolumn = "region_code";
      label      = "Region Code";
      maxlength  = 10;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(10)";
   }
   attribute SalesmanCode Text {
      fetch      = "salesman_code";
      dbcolumn = "salesman_code";
      label      = "Salesperson Code";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute ShipAddrNo Text {
      fetch      = "ship_addr_no";
      dbcolumn = "ship_addr_no";
      label      = "Ship Addr No";
      maxlength  = 50;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(50)";
   }
   attribute ShipViaCode Text {
      fetch      = "ship_via_code";
      dbcolumn = "ship_via_code";
      label      = "Ship Via Code";
      maxlength  = 3;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(3)";
   }
   attribute AddrFlag Enumeration(GenYesNo) {
      fetch      = "addr_flag_db";
      dbcolumn = "addr_flag";
      label      = "Addr Flag";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(1)";
   }
   attribute GrpDiscCalcFlag Enumeration(GenYesNo) {
      fetch      = "grp_disc_calc_flag_db";
      dbcolumn = "grp_disc_calc_flag";
      label      = "Grp Disc Calc Flag";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(1)";
   }
   attribute CustomerPoNo Text {
      fetch      = "customer_po_no";
      dbcolumn = "customer_po_no";
      label      = "Customer PO No";
      maxlength  = 50;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(50)";
   }
   attribute CustRef Text {
      fetch      = "cust_ref";
      dbcolumn = "cust_ref";
      label      = "Cust ref";
      maxlength  = 100;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(100)";
   }
   attribute DateEntered Timestamp {
      fetch      = "date_entered";
      dbcolumn = "date_entered";
      label      = "Date Entered";
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      implementationtype = "DATE";
   }
   attribute DeliveryLeadtime Number(3) {
      fetch      = "delivery_leadtime";
      dbcolumn = "delivery_leadtime";
      label      = "External Transport Lead Time";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER(3)";
   }
   attribute LabelNote Text {
      fetch      = "label_note";
      dbcolumn = "label_note";
      label      = "Label Note";
      maxlength  = 50;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(50)";
   }
   attribute NoteText Text {
      fetch      = "note_text";
      dbcolumn = "note_text";
      label      = "Note";
      maxlength  = 2000;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(2000)";
   }
   attribute OrderConf Enumeration(OrderConfirmationPrinted) {
      fetch      = "order_conf_db";
      dbcolumn = "order_conf";
      label      = "Order Conf";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(1)";
   }
   attribute OrderConfFlag Enumeration(PrintOrderConfirmation) {
      fetch      = "order_conf_flag_db";
      dbcolumn = "order_conf_flag";
      label      = "Order Conf Flag";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(1)";
   }
   attribute PackListFlag Enumeration(PrintPackList) {
      fetch      = "pack_list_flag_db";
      dbcolumn = "pack_list_flag";
      label      = "Pack List Flag";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(1)";
   }
   attribute PickListFlag Enumeration(PrintPickList) {
      fetch      = "pick_list_flag_db";
      dbcolumn = "pick_list_flag";
      label      = "Pick List";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(1)";
   }
   attribute TaxLiability Text {
      fetch      = "tax_liability";
      dbcolumn = "tax_liability";
      label      = "Tax Liability";
      maxlength  = 20;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute DeliveryCountryCode Text {
      fetch      = "delivery_country_code";
      dbcolumn = "delivery_country_code";
      label      = "Delivery Country Code";
      maxlength  = 2;
      insertable  = [false];
      updatable   = [false];
      editable   = [false];
      format  = uppercase;
      implementationtype = "VARCHAR2(2)";
      defaultcopyapplicable = [false];
   }
   attribute WantedDeliveryDate Timestamp {
      fetch      = "wanted_delivery_date";
      dbcolumn = "wanted_delivery_date";
      label      = "Wanted Delivery Date";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "DATE";
   }
   attribute InternalPoNo Text {
      fetch      = "internal_po_no";
      dbcolumn = "internal_po_no";
      label      = "Internal PO No";
      maxlength  = 12;
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      format  = uppercase;
      implementationtype = "VARCHAR2(12)";
   }
   attribute RouteId Text {
      fetch      = "route_id";
      dbcolumn = "route_id";
      label      = "Route ID";
      maxlength  = 12;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(12)";
   }
   attribute AgreementId Text {
      fetch      = "agreement_id";
      dbcolumn = "agreement_id";
      label      = "Agreement ID";
      maxlength  = 10;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(10)";
   }
   attribute ForwardAgentId Text {
      fetch      = "forward_agent_id";
      dbcolumn = "forward_agent_id";
      label      = "Forward Agent ID";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute InternalDeliveryType Enumeration(OrderDeliveryType) {
      fetch      = "internal_delivery_type_db";
      dbcolumn = "internal_delivery_type";
      label      = "Internal Delivery Type";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(10)";
   }
   attribute ExternalRef Text {
      fetch      = "external_ref";
      dbcolumn = "external_ref";
      label      = "External Ref";
      maxlength  = 25;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(25)";
   }
   attribute ProjectId Text {
      fetch      = "project_id";
      dbcolumn = "project_id";
      label      = "Project id";
      maxlength  = 10;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(10)";
   }
   attribute StagedBilling Enumeration(StagedBillingType) {
      fetch      = "staged_billing_db";
      dbcolumn = "staged_billing";
      label      = "Staged Billing";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute SmConnection Enumeration(ServiceManagementConnect) {
      fetch      = "sm_connection_db";
      dbcolumn = "sm_connection";
      label      = "SM Connection";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute SchedulingConnection Enumeration(ScheduleAgreementOrder) {
      fetch      = "scheduling_connection_db";
      dbcolumn = "scheduling_connection";
      label      = "Scheduling Connection";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute Priority Number {
      fetch      = "priority";
      dbcolumn = "priority";
      label      = "Priority";
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "NUMBER";
   }
   attribute IntrastatExempt Enumeration(IntrastatExempt) {
      fetch      = "intrastat_exempt_db";
      dbcolumn = "intrastat_exempt";
      label      = "Intrastat Exempt";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute AdditionalDiscount Number {
      fetch      = "additional_discount";
      dbcolumn = "additional_discount";
      label      = "Additional Discount";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute PayTermBaseDate Date {
      fetch      = "pay_term_base_date";
      dbcolumn = "pay_term_base_date";
      label      = "Pay Term Base Date";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "DATE";
   }
   attribute SummarizedSourceLines Enumeration(GenYesNo) {
      fetch      = "summarized_source_lines_db";
      dbcolumn = "summarized_source_lines";
      label      = "Summarized Source Lines";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute CaseId Number {
      fetch      = "case_id";
      dbcolumn = "case_id";
      label      = "Case Id";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute TaskId Number {
      fetch      = "task_id";
      dbcolumn = "task_id";
      label      = "ID";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute ConfirmDeliveries Boolean("TRUE", "FALSE") {
      fetch      = "confirm_deliveries_db";
      dbcolumn = "confirm_deliveries";
      isfndboolean = [true];
      label      = "Confirm Deliveries";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute CheckSalesGrpDelivConf Boolean("TRUE", "FALSE") {
      fetch      = "check_sales_grp_deliv_conf_db";
      dbcolumn = "check_sales_grp_deliv_conf";
      isfndboolean = [true];
      label      = "Check Sales Group Setting";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute DelayCogsToDelivConf Boolean("TRUE", "FALSE") {
      fetch      = "delay_cogs_to_deliv_conf_db";
      dbcolumn = "delay_cogs_to_deliv_conf";
      isfndboolean = [true];
      label      = "Delay Cost of Sold Goods to Delivery Confirmation";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute CancelReason Text {
      fetch      = "cancel_reason";
      dbcolumn = "cancel_reason";
      label      = "Cancellation Reason";
      maxlength  = 10;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(10)";
   }
   attribute JinsuiInvoice Boolean("TRUE", "FALSE") {
      fetch      = "jinsui_invoice_db";
      dbcolumn = "jinsui_invoice";
      isfndboolean = [true];
      label      = "Jinsui Invoice";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute BlockedReason Text {
      fetch      = "blocked_reason";
      dbcolumn = "blocked_reason";
      label      = "Blocked Reason";
      maxlength  = 100;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(100)";
   }
   attribute BlockedFromState Text {
      fetch      = "blocked_from_state";
      dbcolumn = "blocked_from_state";
      label      = "Blocked From State";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute SalesContractNo Text {
      fetch      = "sales_contract_no";
      dbcolumn = "sales_contract_no";
      label      = "Sales Contract No";
      maxlength  = 15;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(15)";
   }
   attribute ContractRevSeq Number {
      fetch      = "contract_rev_seq";
      dbcolumn = "contract_rev_seq";
      label      = "Contract Rev Seq";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute ContractLineNo Number {
      fetch      = "contract_line_no";
      dbcolumn = "contract_line_no";
      label      = "Contract Line No";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute ContractItemNo Number {
      fetch      = "contract_item_no";
      dbcolumn = "contract_item_no";
      label      = "Contract Item No";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute DefaultCharges Boolean {
      fetch      = "decode(default_charges,1,'TRUE',0,'FALSE',default_charges)";
      dbcolumn = "default_charges";
      label      = "Default Charges";
      insertable  = [false];
      updatable   = [false];
      editable   = [false];
      implementationtype = "VARCHAR2";
      defaultcopyapplicable = [false];
   }
   attribute ReleasedFromCreditCheck Boolean("TRUE", "FALSE") {
      fetch      = "released_from_credit_check_db";
      dbcolumn = "released_from_credit_check";
      isfndboolean = [true];
      label      = "Released From Credit Check";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute ProposedPrepaymentAmount Number {
      fetch      = "proposed_prepayment_amount";
      dbcolumn = "proposed_prepayment_amount";
      label      = "Required Prepayment Amount";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "NUMBER";
   }
   attribute PrepaymentApproved Boolean("TRUE", "FALSE") {
      fetch      = "prepayment_approved_db";
      dbcolumn = "prepayment_approved";
      isfndboolean = [true];
      label      = "Prepayment Approved";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(5)";
   }
   attribute BackorderOption Enumeration(CustomerBackorderOption) {
      fetch      = "backorder_option_db";
      dbcolumn = "backorder_option";
      label      = "Backorder Option";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(40)";
   }
   attribute ExpectedPrepaymentDate Date {
      fetch      = "expected_prepayment_date";
      dbcolumn = "expected_prepayment_date";
      label      = "Expected Prepayment Date";
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "DATE";
   }
   attribute ShipmentCreation Enumeration(ShipmentCreation.CustomerOrder) {
      fetch      = "shipment_creation_db";
      dbcolumn = "shipment_creation";
      label      = "Shipment Creation";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute UsePreShipDelNote Boolean("TRUE", "FALSE") {
      fetch      = "use_pre_ship_del_note_db";
      dbcolumn = "use_pre_ship_del_note";
      isfndboolean = [true];
      label      = "Use Pre Ship Del Note";
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      implementationtype = "VARCHAR2(20)";
   }
   attribute PickInventoryType Enumeration(PickInventoryType) {
      fetch      = "pick_inventory_type_db";
      dbcolumn = "pick_inventory_type";
      label      = "Pick Inventory Type";
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      implementationtype = "VARCHAR2(7)";
   }
   attribute TaxIdNo Text {
      fetch      = "tax_id_no";
      dbcolumn = "tax_id_no";
      label      = "Tax Id No";
      maxlength  = 50;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(50)";
   }
   attribute TaxIdValidatedDate Date {
      fetch      = "tax_id_validated_date";
      dbcolumn = "tax_id_validated_date";
      label      = "Tax ID Validated Date";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "DATE";
   }
   attribute ClassificationStandard Text {
      fetch      = "classification_standard";
      dbcolumn = "classification_standard";
      label      = "Classification Standard";
      maxlength  = 25;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(25)";
   }
   attribute MsgSequenceNo Number {
      fetch      = "msg_sequence_no";
      dbcolumn = "msg_sequence_no";
      label      = "Msg Sequence No";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute MsgVersionNo Number {
      fetch      = "msg_version_no";
      dbcolumn = "msg_version_no";
      label      = "Msg Version No";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute CurrencyRateType Text {
      fetch      = "currency_rate_type";
      dbcolumn = "currency_rate_type";
      label      = "Currency Rate Type";
      maxlength  = 10;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(10)";
   }
   attribute DelTermsLocation Text {
      fetch      = "del_terms_location";
      dbcolumn = "del_terms_location";
      label      = "Del Terms Location";
      maxlength  = 100;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(100)";
   }
   attribute InternalRef Text {
      fetch      = "internal_ref";
      dbcolumn = "internal_ref";
      label      = "Internal Ref";
      maxlength  = 30;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(30)";
   }
   attribute InternalPoLabelNote Text {
      fetch      = "internal_po_label_note";
      dbcolumn = "internal_po_label_note";
      label      = "Internal PO Label Note";
      maxlength  = 50;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(50)";
   }
   attribute SupplyCountry Lookup(IsoCountry) {
      fetch      = "supply_country_db";
      dbcolumn = "supply_country";
      label      = "Supply Country";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(2)";
   }
   attribute RebateCustomer Text {
      fetch      = "rebate_customer";
      dbcolumn = "rebate_customer";
      label      = "Rebate Customer";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute FreightMapId Text {
      fetch      = "freight_map_id";
      dbcolumn = "freight_map_id";
      label      = "Freight Map ID";
      maxlength  = 15;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(15)";
   }
   attribute ZoneId Text {
      fetch      = "zone_id";
      dbcolumn = "zone_id";
      label      = "Zone Id";
      maxlength  = 15;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(15)";
   }
   attribute FreightPriceListNo Text {
      fetch      = "freight_price_list_no";
      dbcolumn = "freight_price_list_no";
      label      = "Freight Price List No";
      maxlength  = 10;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(10)";
   }
   attribute SummarizedFreightCharges Enumeration(GenYesNo) {
      fetch      = "summarized_freight_charges_db";
      dbcolumn = "summarized_freight_charges";
      label      = "Summarized Freight Charges";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute ApplyFixDelivFreight Boolean("TRUE", "FALSE") {
      fetch      = "apply_fix_deliv_freight_db";
      dbcolumn = "apply_fix_deliv_freight";
      isfndboolean = [true];
      label      = "Apply Fixed Delivery Freight";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute FixDelivFreight Number {
      fetch      = "fix_deliv_freight";
      dbcolumn = "fix_deliv_freight";
      label      = "Fixed Delivery Freight Amt";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute PrintDeliveredLines Enumeration(DeliveryNoteOptions) {
      fetch      = "print_delivered_lines_db";
      dbcolumn = "print_delivered_lines";
      label      = "Print Delivered Lines";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(23)";
   }
   attribute UpdatePriceEffectiveDate Boolean {
      fetch      = "decode(update_price_effective_date,1,'TRUE',0,'FALSE',update_price_effective_date)";
      dbcolumn = "update_price_effective_date";
      label      = "Update Price Effective Date";
      insertable  = [false];
      updatable   = [false];
      editable   = [false];
      implementationtype = "VARCHAR2";
      defaultcopyapplicable = [false];
   }
   attribute CustCalendarId Text {
      fetch      = "cust_calendar_id";
      dbcolumn = "cust_calendar_id";
      label      = "Cust Calendar Id";
      maxlength  = 10;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(10)";
   }
   attribute ExtTransportCalendarId Text {
      fetch      = "ext_transport_calendar_id";
      dbcolumn = "ext_transport_calendar_id";
      label      = "External Transport Calendar ID";
      maxlength  = 10;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(10)";
   }
   attribute UsePriceInclTax Boolean("TRUE", "FALSE") {
      fetch      = "use_price_incl_tax_db";
      dbcolumn = "use_price_incl_tax";
      isfndboolean = [true];
      label      = "Use Price Incl Tax";
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      implementationtype = "VARCHAR2(20)";
   }
   attribute CustomsValueCurrency Text {
      fetch      = "customs_value_currency";
      dbcolumn = "customs_value_currency";
      label      = "Customs Value Currency";
      maxlength  = 3;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(3)";
   }
   attribute BusinessOpportunityNo Text {
      fetch      = "business_opportunity_no";
      dbcolumn = "business_opportunity_no";
      label      = "Business Opportunity No";
      maxlength  = 12;
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      format  = uppercase;
      implementationtype = "VARCHAR2(12)";
   }
   attribute PickingLeadtime Number {
      fetch      = "picking_leadtime";
      dbcolumn = "picking_leadtime";
      label      = "Picking Lead Time";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute ShipmentType Text {
      fetch      = "shipment_type";
      dbcolumn = "shipment_type";
      label      = "Shipment Type";
      maxlength  = 3;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(3)";
   }
   attribute VendorNo Text {
      fetch      = "vendor_no";
      dbcolumn = "vendor_no";
      label      = "Vendor No";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute DisconnectExpLicense Text {
      fetch      = "disconnect_exp_license";
      dbcolumn = "disconnect_exp_license";
      label      = "Disconnect Exp License";
      maxlength  = 5;
      insertable  = [false];
      updatable   = [false];
      editable   = [false];
      implementationtype = "VARCHAR2(5)";
      defaultcopyapplicable = [false];
   }
   attribute ReplicateChanges Text {
      fetch      = "replicate_changes";
      dbcolumn = "replicate_changes";
      label      = "Replicate Changes";
      maxlength  = 5;
      insertable  = [false];
      updatable   = [false];
      editable   = [false];
      implementationtype = "VARCHAR2(5)";
      defaultcopyapplicable = [false];
   }
   attribute ChangeRequest Text {
      fetch      = "change_request";
      dbcolumn = "change_request";
      label      = "Change Request";
      maxlength  = 5;
      insertable  = [false];
      updatable   = [false];
      editable   = [false];
      implementationtype = "VARCHAR2(5)";
      defaultcopyapplicable = [false];
   }
   attribute QuotationNo Text {
      fetch      = "quotation_no";
      dbcolumn = "quotation_no";
      label      = "Quotation No";
      maxlength  = 12;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(12)";
   }
   attribute FreeOfChgTaxPayParty Enumeration(TaxPayingParty) {
      fetch      = "free_of_chg_tax_pay_party_db";
      dbcolumn = "free_of_chg_tax_pay_party";
      label      = "Free Of Chg Tax Pay Party";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute BlockedType Enumeration(CustomerOrderBlockType) {
      fetch      = "blocked_type_db";
      dbcolumn = "blocked_type";
      label      = "Blocked Type";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute B2bOrder Boolean("TRUE", "FALSE") {
      fetch      = "b2b_order_db";
      dbcolumn = "b2b_order";
      isfndboolean = [true];
      label      = "B2b Order";
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      implementationtype = "VARCHAR2(20)";
   }
   attribute MainRepresentativeId Text {
      fetch      = "main_representative_id";
      dbcolumn = "main_representative_id";
      label      = "Main Representative ID";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute LimitSalesToAssortments Boolean("TRUE", "FALSE") {
      fetch      = "limit_sales_to_assortments_db";
      dbcolumn = "limit_sales_to_assortments";
      isfndboolean = [true];
      label      = "Limit Sales To Assortments";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute FinalConsumer Boolean("TRUE", "FALSE") {
      fetch      = "final_consumer_db";
      dbcolumn = "final_consumer";
      isfndboolean = [true];
      label      = "Final Consumer";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute CustomerTaxUsageType Text {
      fetch      = "customer_tax_usage_type";
      dbcolumn = "customer_tax_usage_type";
      label      = "Customer Tax Usage Type";
      maxlength  = 5;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(5)";
   }
   attribute InvoiceReasonId Text {
      fetch      = "invoice_reason_id";
      dbcolumn = "invoice_reason_id";
      label      = "Invoice Reason ID";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute DeliveryReasonId Text {
      fetch      = "delivery_reason_id";
      dbcolumn = "delivery_reason_id";
      label      = "Delivery Reason ID";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute ComponentA Text {
      fetch      = "component_a";
      dbcolumn = "component_a";
      label      = "Component A";
      maxlength  = 50;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(50)";
   }
   attribute ServiceCode Text {
      fetch      = "service_code";
      dbcolumn = "service_code";
      label      = "Service Code";
      maxlength  = 100;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(100)";
   }
   attribute DiscPriceRound Boolean("TRUE", "FALSE") {
      fetch      = "disc_price_round_db";
      dbcolumn = "disc_price_round";
      isfndboolean = [true];
      label      = "Disc Price Round";
      required   = [true];
      insertable  = [false];
      updatable   = [false];
      editable   = [false];
      implementationtype = "VARCHAR2(20)";
      defaultcopyapplicable = [false];
   }
   attribute BusinessTransactionId Text {
      fetch      = "business_transaction_id";
      dbcolumn = "business_transaction_id";
      label      = "Business Transaction Id";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute InvoicedClosedDate Date {
      fetch      = "invoiced_closed_date";
      dbcolumn = "invoiced_closed_date";
      label      = "Invoiced Closed Date";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "DATE";
   }
}

enumeration CustomerOrderState {
   enumerationtype = EntityState;
   exec = "Customer_Order_API";
   value = "Planned" {
      identifier = "Planned";
      label = "Planned";
   }
   value = "Blocked" {
      identifier = "Blocked";
      label = "Blocked";
   }
   value = "Delivered" {
      identifier = "Delivered";
      label = "Delivered";
   }
   value = "Invoiced" {
      identifier = "Invoiced";
      label = "Invoiced Closed";
   }
   value = "Released" {
      identifier = "Released";
      label = "Released";
   }
   value = "Reserved" {
      identifier = "Reserved";
      label = "Reserved";
   }
   value = "Picked" {
      identifier = "Picked";
      label = "Picked";
   }
   value = "PartiallyDelivered" {
      identifier = "PartiallyDelivered";
      label = "Partially Delivered";
   }
   value = "Cancelled" {
      identifier = "Cancelled";
      label = "Cancelled";
   }
}



entityset Reference_CustomerOrder for CustomerOrder;
entity FndUser {
   crud = Read;
   from = "FND_USER";
   exec = "Fnd_User_API";
   basetable = "FND_USER_TAB";
   keys = Identity {
      where = "identity = :Identity";
   }
   attribute Objgrants Text {
      fetch     = "NULL";
      label     = "Granted access";
      maxlength = 2000;
      editable  = [false];
      insertable = [false];
      updatable  = [false];
   }
   attribute Identity Text {
      fetch      = "identity";
      dbcolumn = "identity";
      label      = "Identity";
      maxlength  = 30;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(30)";
   }
   attribute Description Text {
      fetch      = "description";
      dbcolumn = "description";
      label      = "Description";
      maxlength  = 2000;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(2000)";
   }
   attribute OracleUser Text {
      fetch      = "oracle_user";
      dbcolumn = "oracle_user";
      label      = "Oracle User";
      maxlength  = 30;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(30)";
   }
   attribute WebUser Text {
      fetch      = "web_user";
      dbcolumn = "web_user";
      label      = "Directory Id";
      maxlength  = 2000;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(2000)";
   }
   attribute UserType Enumeration(FndUserType) {
      fetch      = "user_type_db";
      dbcolumn = "user_type";
      label      = "User Type";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute Active Text {
      fetch      = "active";
      dbcolumn = "active";
      label      = "Active";
      maxlength  = 5;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(5)";
   }
   attribute Created Date {
      fetch      = "created";
      dbcolumn = "created";
      label      = "Created";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "DATE";
   }
   attribute LastModified Date {
      fetch      = "last_modified";
      dbcolumn = "last_modified";
      label      = "Last Modified";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "DATE";
   }
   attribute ValidFrom Date {
      fetch      = "valid_from";
      dbcolumn = "valid_from";
      label      = "Valid From";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "DATE";
   }
   attribute ValidTo Date {
      fetch      = "valid_to";
      dbcolumn = "valid_to";
      label      = "Valid To";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "DATE";
   }
   attribute DefaultIdp Text {
      fetch      = "default_idp";
      dbcolumn = "default_idp";
      label      = "Default Idp";
      maxlength  = 5;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(5)";
   }
   attribute FromScim Text {
      fetch      = "from_scim";
      dbcolumn = "from_scim";
      label      = "From Scim";
      maxlength  = 5;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(5)";
   }
}



entityset Reference_FndUser for FndUser;
entity BcRepairType {
   crud = Read;
   from = "BC_REPAIR_TYPE";
   exec = "Bc_Repair_Type_API";
   basetable = "BC_REPAIR_TYPE_TAB";
   keys = RepairType {
      where = "repair_type = :RepairType";
   }
   attribute Objgrants Text {
      fetch     = "NULL";
      label     = "Granted access";
      maxlength = 2000;
      editable  = [false];
      insertable = [false];
      updatable  = [false];
   }
   attribute RepairType Text {
      fetch      = "repair_type";
      dbcolumn = "repair_type";
      label      = "Repair Type";
      maxlength  = 20;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute Description Text {
      fetch      = "description";
      dbcolumn = "description";
      label      = "Description";
      maxlength  = 60;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(60)";
   }
}



entityset Reference_BcRepairType for BcRepairType;
entity ConditionCode {
   crud = Read;
   from = "CONDITION_CODE";
   exec = "Condition_Code_API";
   basetable = "CONDITION_CODE_TAB";
   keys = ConditionCode {
      where = "condition_code = :ConditionCode";
   }
   attribute Objgrants Text {
      fetch     = "NULL";
      label     = "Granted access";
      maxlength = 2000;
      editable  = [false];
      insertable = [false];
      updatable  = [false];
   }
   attribute ConditionCode Text {
      fetch      = "condition_code";
      dbcolumn = "condition_code";
      label      = "Condition Code";
      maxlength  = 10;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(10)";
   }
   attribute Description Text {
      fetch      = "description";
      dbcolumn = "description";
      label      = "Condition Code Description";
      maxlength  = 35;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(35)";
   }
   attribute NoteText Text {
      fetch      = "note_text";
      dbcolumn = "note_text";
      label      = "Note Text";
      maxlength  = 2000;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(2000)";
   }
   attribute ConditionCodeType Enumeration(ConditionCodeType) {
      fetch      = "condition_code_type_db";
      dbcolumn = "condition_code_type";
      label      = "Condition Code Type";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute DefaultAvailControlId Text {
      fetch      = "default_avail_control_id";
      dbcolumn = "default_avail_control_id";
      label      = "Default Avail Control Id";
      maxlength  = 25;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(25)";
   }
   attribute ResetRepairValue Boolean("TRUE", "FALSE") {
      fetch      = "reset_repair_value_db";
      dbcolumn = "reset_repair_value";
      isfndboolean = [true];
      label      = "Reset Repair Value";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute ResetOverhaulValue Boolean("TRUE", "FALSE") {
      fetch      = "reset_overhaul_value_db";
      dbcolumn = "reset_overhaul_value";
      isfndboolean = [true];
      label      = "Reset Overhaul Value";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
}



entityset Reference_ConditionCode for ConditionCode;
entity InventoryPart {
   crud = Read;
   from = "INVENTORY_PART";
   exec = "Inventory_Part_API";
   basetable = "INVENTORY_PART_TAB";
   keys = Contract,PartNo {
      where = "contract = :Contract AND part_no = :PartNo";
   }
   attribute Objgrants Text {
      fetch     = "NULL";
      label     = "Granted access";
      maxlength = 2000;
      editable  = [false];
      insertable = [false];
      updatable  = [false];
   }
   attribute Contract Text {
      fetch      = "contract";
      dbcolumn = "contract";
      label      = "Site";
      maxlength  = 5;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      format  = uppercase;
      implementationtype = "VARCHAR2(5)";
   }
   attribute PartNo Text {
      fetch      = "part_no";
      dbcolumn = "part_no";
      label      = "Part No";
      maxlength  = 25;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(25)";
   }
   attribute AccountingGroup Text {
      fetch      = "accounting_group";
      dbcolumn = "accounting_group";
      label      = "Accounting Group";
      maxlength  = 5;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(5)";
   }
   attribute AssetClass Text {
      fetch      = "asset_class";
      dbcolumn = "asset_class";
      label      = "Asset Class";
      maxlength  = 2;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(2)";
   }
   attribute CountryOfOrigin Text {
      fetch      = "country_of_origin";
      dbcolumn = "country_of_origin";
      label      = "Country of origin";
      maxlength  = 2;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(3)";
   }
   attribute HazardCode Text {
      fetch      = "hazard_code";
      dbcolumn = "hazard_code";
      label      = "Safety Code";
      maxlength  = 6;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(6)";
   }
   attribute NoteId Number(10) {
      fetch      = "note_id";
      dbcolumn = "note_id";
      label      = "Note id";
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      implementationtype = "NUMBER(10)";
   }
   attribute EstimatedMaterialCost Number {
      fetch      = "estimated_material_cost";
      dbcolumn = "estimated_material_cost";
      label      = "Estimated Material Cost";
      insertable  = [false];
      updatable   = [false];
      editable   = [false];
      implementationtype = "NUMBER";
      defaultcopyapplicable = [false];
   }
   attribute PartProductCode Text {
      fetch      = "part_product_code";
      dbcolumn = "part_product_code";
      label      = "Part Product Code";
      maxlength  = 5;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(5)";
   }
   attribute PartProductFamily Text {
      fetch      = "part_product_family";
      dbcolumn = "part_product_family";
      label      = "Part Product Family";
      maxlength  = 5;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(5)";
   }
   attribute PartStatus Text {
      fetch      = "part_status";
      dbcolumn = "part_status";
      label      = "Part Status";
      maxlength  = 1;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(1)";
   }
   attribute PlannerBuyer Text {
      fetch      = "planner_buyer";
      dbcolumn = "planner_buyer";
      label      = "Planner Buyer";
      maxlength  = 20;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute PrimeCommodity Text {
      fetch      = "prime_commodity";
      dbcolumn = "prime_commodity";
      label      = "Prime commodity";
      maxlength  = 5;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(5)";
   }
   attribute SecondCommodity Text {
      fetch      = "second_commodity";
      dbcolumn = "second_commodity";
      label      = "Second commodity";
      maxlength  = 5;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(5)";
   }
   attribute UnitMeas Text {
      fetch      = "unit_meas";
      dbcolumn = "unit_meas";
      label      = "Unit Meas";
      maxlength  = 10;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      implementationtype = "VARCHAR2(10)";
   }
   attribute CatchUnitMeas Text {
      fetch      = "catch_unit_meas";
      dbcolumn = "catch_unit_meas";
      label      = "Catch Unit Meas";
      maxlength  = 30;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(30)";
   }
   attribute Description Text {
      fetch      = "description";
      dbcolumn = "description";
      label      = "Description";
      maxlength  = 200;
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(200)";
   }
   attribute DescriptionCopy Text {
      fetch      = "description_copy";
      dbcolumn = "description_copy";
      label      = "Inventory Part Description";
      maxlength  = 200;
      insertable  = [false];
      updatable   = [false];
      editable   = [false];
      implementationtype = "VARCHAR2(200)";
      defaultcopyapplicable = [false];
   }
   attribute DescriptionInUse Text {
      fetch      = "description_in_use";
      dbcolumn = "description_in_use";
      label      = "Description";
      maxlength  = 200;
      insertable  = [false];
      updatable   = [false];
      editable   = [false];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(200)";
      defaultcopyapplicable = [false];
   }
   attribute AbcClass Text {
      fetch      = "abc_class";
      dbcolumn = "abc_class";
      label      = "Abc Class";
      maxlength  = 1;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(1)";
   }
   attribute AbcClassLockedUntil Date {
      fetch      = "abc_class_locked_until";
      dbcolumn = "abc_class_locked_until";
      label      = "Abc Class Locked Until";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "DATE";
   }
   attribute CountVariance Number {
      fetch      = "count_variance";
      dbcolumn = "count_variance";
      label      = "Acc Count Diff";
      required   = [true];
      insertable  = [false];
      updatable   = [true];
      editable   = [ETag != null];
      implementationtype = "NUMBER";
      defaultcopyapplicable = [false];
   }
   attribute CreateDate Date {
      fetch      = "create_date";
      dbcolumn = "create_date";
      label      = "Create Date";
      insertable  = [false];
      updatable   = [false];
      editable   = [false];
      implementationtype = "DATE";
      defaultcopyapplicable = [false];
   }
   attribute CycleCode Enumeration(InventoryPartCountType) {
      fetch      = "cycle_code_db";
      dbcolumn = "cycle_code";
      label      = "Cyclic Counting";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(1)";
   }
   attribute CyclePeriod Number(3) {
      fetch      = "cycle_period";
      dbcolumn = "cycle_period";
      label      = "Cyclic Counting Interval";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER(3)";
   }
   attribute DimQuality Text {
      fetch      = "dim_quality";
      dbcolumn = "dim_quality";
      label      = "Dim Quality";
      maxlength  = 25;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(25)";
   }
   attribute DurabilityDay Number(4) {
      fetch      = "durability_day";
      dbcolumn = "durability_day";
      label      = "Durability Day";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER(4)";
   }
   attribute ExpectedLeadtime Number {
      fetch      = "expected_leadtime";
      dbcolumn = "expected_leadtime";
      label      = "Expected Lead Time";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute LastActivityDate Date {
      fetch      = "last_activity_date";
      dbcolumn = "last_activity_date";
      label      = "Last Activity Date";
      insertable  = [false];
      updatable   = [false];
      editable   = [false];
      implementationtype = "DATE";
      defaultcopyapplicable = [false];
   }
   attribute LeadTimeCode Enumeration(InvPartLeadTimeCode) {
      fetch      = "lead_time_code_db";
      dbcolumn = "lead_time_code";
      label      = "Lead Time Code";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(1)";
   }
   attribute ManufLeadtime Number {
      fetch      = "manuf_leadtime";
      dbcolumn = "manuf_leadtime";
      label      = "Manuf Lead Time";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute NoteText Text {
      fetch      = "note_text";
      dbcolumn = "note_text";
      label      = "Note text";
      maxlength  = 2000;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(2000)";
   }
   attribute OeAllocAssignFlag Enumeration(CustOrdReservationType) {
      fetch      = "oe_alloc_assign_flag_db";
      dbcolumn = "oe_alloc_assign_flag";
      label      = "Reserve When Order Entry";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(1)";
   }
   attribute OnhandAnalysisFlag Enumeration(InventoryPartOnhAnalys) {
      fetch      = "onhand_analysis_flag_db";
      dbcolumn = "onhand_analysis_flag";
      label      = "Onhand Analysis Flag";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(1)";
   }
   attribute PurchLeadtime Number {
      fetch      = "purch_leadtime";
      dbcolumn = "purch_leadtime";
      label      = "Purch Lead Time";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute EarliestUltdSupplyDate Date {
      fetch      = "earliest_ultd_supply_date";
      dbcolumn = "earliest_ultd_supply_date";
      label      = "Earliest Unlimited Supply Date";
      insertable  = [false];
      updatable   = [true];
      editable   = [ETag != null];
      implementationtype = "DATE";
      defaultcopyapplicable = [false];
   }
   attribute Supersedes Text {
      fetch      = "supersedes";
      dbcolumn = "supersedes";
      label      = "Supersedes";
      maxlength  = 25;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(25)";
   }
   attribute SupplyCode Enumeration(MaterialRequisSupply.Subset1) {
      fetch      = "supply_code_db";
      dbcolumn = "supply_code";
      label      = "Default Mtr Req Supply";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(3)";
   }
   attribute TypeCode Enumeration(InventoryPartType) {
      fetch      = "type_code_db";
      dbcolumn = "type_code";
      label      = "Part Type";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(2)";
   }
   attribute CustomsStatNo Text {
      fetch      = "customs_stat_no";
      dbcolumn = "customs_stat_no";
      label      = "Customs Statistics No";
      maxlength  = 15;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(15)";
   }
   attribute TypeDesignation Text {
      fetch      = "type_designation";
      dbcolumn = "type_designation";
      label      = "Type Designation";
      maxlength  = 25;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(25)";
   }
   attribute ZeroCostFlag Enumeration(InventoryPartZeroCost) {
      fetch      = "zero_cost_flag_db";
      dbcolumn = "zero_cost_flag";
      label      = "Zero Cost";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(1)";
   }
   attribute AvailActivityStatus Enumeration(InventoryPartAvailStat) {
      fetch      = "avail_activity_status_db";
      dbcolumn = "avail_activity_status";
      label      = "Avail Activity Status";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(9)";
   }
   attribute EngAttribute Text {
      fetch      = "eng_attribute";
      dbcolumn = "eng_attribute";
      label      = "Eng Attribute";
      maxlength  = 5;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(5)";
   }
   attribute ShortageFlag Enumeration(InventoryPartShortage) {
      fetch      = "shortage_flag_db";
      dbcolumn = "shortage_flag";
      label      = "Shortage Notification";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(1)";
   }
   attribute ForecastConsumptionFlag Enumeration(InvPartForecastConsum) {
      fetch      = "forecast_consumption_flag_db";
      dbcolumn = "forecast_consumption_flag";
      label      = "Forecast Consumption";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(30)";
   }
   attribute StockManagement Enumeration(InventoryPartManagement) {
      fetch      = "stock_management_db";
      dbcolumn = "stock_management";
      label      = "Stock Management";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(50)";
   }
   attribute IntrastatConvFactor Number {
      fetch      = "intrastat_conv_factor";
      dbcolumn = "intrastat_conv_factor";
      label      = "Intrastat Conv Factor";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute PartCostGroupId Text {
      fetch      = "part_cost_group_id";
      dbcolumn = "part_cost_group_id";
      label      = "Part Cost Group Id";
      maxlength  = 5;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(5)";
   }
   attribute DopConnection Enumeration(DopConnection) {
      fetch      = "dop_connection_db";
      dbcolumn = "dop_connection";
      label      = "Dop Connection";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(200)";
   }
   attribute StdNameId Number(10) {
      fetch      = "std_name_id";
      dbcolumn = "std_name_id";
      label      = "Std Name Id";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER(10)";
   }
   attribute InventoryValuationMethod Enumeration(InventoryValueMethod) {
      fetch      = "inventory_valuation_method_db";
      dbcolumn = "inventory_valuation_method";
      label      = "Inventory Valuation Method";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(50)";
   }
   attribute NegativeOnHand Enumeration(NegativeOnHand) {
      fetch      = "negative_on_hand_db";
      dbcolumn = "negative_on_hand";
      label      = "Negative On Hand";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(50)";
   }
   attribute TechnicalCoordinatorId Text {
      fetch      = "technical_coordinator_id";
      dbcolumn = "technical_coordinator_id";
      label      = "Technical Coordinator Id";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute InvoiceConsideration Enumeration(InvoiceConsideration) {
      fetch      = "invoice_consideration_db";
      dbcolumn = "invoice_consideration";
      label      = "Supplier Invoice Consideration";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(50)";
   }
   attribute ActualCostActivated Date {
      fetch      = "actual_cost_activated";
      dbcolumn = "actual_cost_activated";
      label      = "Periodic Weighted Average Activated";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "DATE";
   }
   attribute MaxActualCostUpdate Number {
      fetch      = "max_actual_cost_update";
      dbcolumn = "max_actual_cost_update";
      label      = "Max Periodic Weighted Average Update";
      insertable  = [true];
      updatable   = [true];
      format  = percentage;
      implementationtype = "NUMBER";
   }
   attribute CustWarrantyId Number {
      fetch      = "cust_warranty_id";
      dbcolumn = "cust_warranty_id";
      label      = "Cust Warranty Id";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute SupWarrantyId Number {
      fetch      = "sup_warranty_id";
      dbcolumn = "sup_warranty_id";
      label      = "Sup Warranty Id";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute RegionOfOrigin Text {
      fetch      = "region_of_origin";
      dbcolumn = "region_of_origin";
      label      = "Region Of Origin";
      maxlength  = 10;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(10)";
   }
   attribute InventoryPartCostLevel Enumeration(InventoryPartCostLevel) {
      fetch      = "inventory_part_cost_level_db";
      dbcolumn = "inventory_part_cost_level";
      label      = "Inventory Part Cost Level";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(50)";
   }
   attribute ExtServiceCostMethod Enumeration(ExtServiceCostMethod) {
      fetch      = "ext_service_cost_method_db";
      dbcolumn = "ext_service_cost_method";
      label      = "Ext Service Cost Method";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute SupplyChainPartGroup Text {
      fetch      = "supply_chain_part_group";
      dbcolumn = "supply_chain_part_group";
      label      = "Supply Chain Part Group";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute AutomaticCapabilityCheck Enumeration(CapabilityCheckAllocate) {
      fetch      = "automatic_capability_check_db";
      dbcolumn = "automatic_capability_check";
      label      = "Automatic Order Capability Check";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(50)";
   }
   attribute InputUnitMeasGroupId Text {
      fetch      = "input_unit_meas_group_id";
      dbcolumn = "input_unit_meas_group_id";
      label      = "Input Unit Meas Group Id";
      maxlength  = 30;
      insertable  = [true];
      updatable   = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(30)";
   }
   attribute DopNetting Enumeration(DopNetting) {
      fetch      = "dop_netting_db";
      dbcolumn = "dop_netting";
      label      = "Dop Netting";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute CoReserveOnhAnalysFlag Enumeration(InventoryPartOnhAnalys) {
      fetch      = "co_reserve_onh_analys_flag_db";
      dbcolumn = "co_reserve_onh_analys_flag";
      label      = "Co Reserve Onh Analysis Flag";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute QtyCalcRounding Number {
      fetch      = "qty_calc_rounding";
      dbcolumn = "qty_calc_rounding";
      label      = "Qty Calc Rounding";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute LifecycleStage Enumeration(InvPartLifecycleStage) {
      fetch      = "lifecycle_stage_db";
      dbcolumn = "lifecycle_stage";
      label      = "Lifecycle Stage";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute LifeStageLockedUntil Date {
      fetch      = "life_stage_locked_until";
      dbcolumn = "life_stage_locked_until";
      label      = "Life Stage Locked Until";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "DATE";
   }
   attribute FrequencyClass Enumeration(InvPartFrequencyClass) {
      fetch      = "frequency_class_db";
      dbcolumn = "frequency_class";
      label      = "Frequency Class";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute FreqClassLockedUntil Date {
      fetch      = "freq_class_locked_until";
      dbcolumn = "freq_class_locked_until";
      label      = "Freq Class Locked Until";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "DATE";
   }
   attribute FirstStatIssueDate Date {
      fetch      = "first_stat_issue_date";
      dbcolumn = "first_stat_issue_date";
      label      = "First Stat Issue Date";
      insertable  = [false];
      updatable   = [true];
      editable   = [ETag != null];
      implementationtype = "DATE";
      defaultcopyapplicable = [false];
   }
   attribute LatestStatIssueDate Date {
      fetch      = "latest_stat_issue_date";
      dbcolumn = "latest_stat_issue_date";
      label      = "Latest Stat Issue Date";
      insertable  = [false];
      updatable   = [true];
      editable   = [ETag != null];
      implementationtype = "DATE";
      defaultcopyapplicable = [false];
   }
   attribute DeclineDate Date {
      fetch      = "decline_date";
      dbcolumn = "decline_date";
      label      = "Decline Date";
      insertable  = [false];
      updatable   = [true];
      editable   = [ETag != null];
      implementationtype = "DATE";
      defaultcopyapplicable = [false];
   }
   attribute ExpiredDate Date {
      fetch      = "expired_date";
      dbcolumn = "expired_date";
      label      = "Expired Date";
      insertable  = [false];
      updatable   = [true];
      editable   = [ETag != null];
      implementationtype = "DATE";
      defaultcopyapplicable = [false];
   }
   attribute DeclineIssueCounter Number {
      fetch      = "decline_issue_counter";
      dbcolumn = "decline_issue_counter";
      label      = "Decline Issue Counter";
      insertable  = [false];
      updatable   = [true];
      editable   = [ETag != null];
      implementationtype = "NUMBER";
      defaultcopyapplicable = [false];
   }
   attribute ExpiredIssueCounter Number {
      fetch      = "expired_issue_counter";
      dbcolumn = "expired_issue_counter";
      label      = "Expired Issue Counter";
      insertable  = [false];
      updatable   = [true];
      editable   = [ETag != null];
      implementationtype = "NUMBER";
      defaultcopyapplicable = [false];
   }
   attribute MinDurabDaysCoDeliv Number {
      fetch      = "min_durab_days_co_deliv";
      dbcolumn = "min_durab_days_co_deliv";
      label      = "Min Durab Days Co Deliv";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute MinDurabDaysPlanning Number {
      fetch      = "min_durab_days_planning";
      dbcolumn = "min_durab_days_planning";
      label      = "Min Durab Days Planning";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER";
   }
   attribute AutoCreatedGtin Text {
      fetch      = "auto_created_gtin";
      dbcolumn = "auto_created_gtin";
      label      = "Auto Created Gtin";
      maxlength  = 5;
      insertable  = [false];
      updatable   = [false];
      editable   = [false];
      format  = uppercase;
      implementationtype = "VARCHAR2(5)";
      defaultcopyapplicable = [false];
   }
   attribute StorageWidthRequirement Number {
      fetch      = "storage_width_requirement";
      dbcolumn = "storage_width_requirement";
      label      = "Storage Width Requirement";
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "NUMBER";
   }
   attribute StorageHeightRequirement Number {
      fetch      = "storage_height_requirement";
      dbcolumn = "storage_height_requirement";
      label      = "Storage Height Requirement";
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "NUMBER";
   }
   attribute StorageDepthRequirement Number {
      fetch      = "storage_depth_requirement";
      dbcolumn = "storage_depth_requirement";
      label      = "Storage Depth Requirement";
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "NUMBER";
   }
   attribute StorageVolumeRequirement Number {
      fetch      = "storage_volume_requirement";
      dbcolumn = "storage_volume_requirement";
      label      = "Storage Volume Requirement";
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "NUMBER";
   }
   attribute StorageWeightRequirement Number {
      fetch      = "storage_weight_requirement";
      dbcolumn = "storage_weight_requirement";
      label      = "Storage Weight Requirement";
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "NUMBER";
   }
   attribute MinStorageTemperature Number {
      fetch      = "min_storage_temperature";
      dbcolumn = "min_storage_temperature";
      label      = "Min Storage Temperature";
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "NUMBER";
   }
   attribute MaxStorageTemperature Number {
      fetch      = "max_storage_temperature";
      dbcolumn = "max_storage_temperature";
      label      = "Max Storage Temperature";
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "NUMBER";
   }
   attribute MinStorageHumidity Number {
      fetch      = "min_storage_humidity";
      dbcolumn = "min_storage_humidity";
      label      = "Min Storage Humidity";
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "NUMBER";
   }
   attribute MaxStorageHumidity Number {
      fetch      = "max_storage_humidity";
      dbcolumn = "max_storage_humidity";
      label      = "Max Storage Humidity";
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "NUMBER";
   }
   attribute StandardPutawayQty Number {
      fetch      = "standard_putaway_qty";
      dbcolumn = "standard_putaway_qty";
      label      = "Standard Putaway Qty";
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "NUMBER";
   }
   attribute PutawayZoneRefillOption Enumeration(PutawayZoneRefillOption) {
      fetch      = "putaway_zone_refill_option_db";
      dbcolumn = "putaway_zone_refill_option";
      label      = "Putaway Zone Refill Option";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute ResetConfigStdCost Boolean("TRUE", "FALSE") {
      fetch      = "reset_config_std_cost_db";
      dbcolumn = "reset_config_std_cost";
      isfndboolean = [true];
      label      = "Reset Configuration Standard Cost from Supply Site";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(5)";
   }
   attribute MandatoryExpirationDate Boolean("TRUE", "FALSE") {
      fetch      = "mandatory_expiration_date_db";
      dbcolumn = "mandatory_expiration_date";
      isfndboolean = [true];
      label      = "Mandatory Expiration Date";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(5)";
   }
   attribute ExclShipPackProposal Boolean("TRUE", "FALSE") {
      fetch      = "excl_ship_pack_proposal_db";
      dbcolumn = "excl_ship_pack_proposal";
      isfndboolean = [true];
      label      = "Exclude from Shipment Packing Proposal";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(5)";
   }
   attribute Company Text {
      fetch      = "company";
      dbcolumn = "company";
      label      = "Company";
      maxlength  = 20;
      insertable  = [false];
      updatable   = [false];
      editable   = [false];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
      defaultcopyapplicable = [false];
   }
   attribute StatisticalCode Text {
      fetch      = "statistical_code";
      dbcolumn = "statistical_code";
      label      = "Statistical Code";
      maxlength  = 15;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(15)";
   }
   attribute AcquisitionOrigin Number {
      fetch      = "acquisition_origin";
      dbcolumn = "acquisition_origin";
      label      = "Acquisition Origin";
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "NUMBER";
   }
   attribute AcquisitionReasonId Text {
      fetch      = "acquisition_reason_id";
      dbcolumn = "acquisition_reason_id";
      label      = "Acquisition Reason Id";
      maxlength  = 20;
      insertable  = [true];
      updatable   = [true];
      lovcolumn        = [true];
      implementationtype = "VARCHAR2(20)";
   }
}



entityset Reference_InventoryPart for InventoryPart;
entity BcRepairLineAction {
   crud = Read;
   from = "BC_REPAIR_LINE_ACTION";
   exec = "Bc_Repair_Line_Action_API";
   basetable = "BC_REPAIR_LINE_ACTION_TAB";
   keys = RepairLineAction {
      where = "repair_line_action = :RepairLineAction";
   }
   attribute Objgrants Text {
      fetch     = "NULL";
      label     = "Granted access";
      maxlength = 2000;
      editable  = [false];
      insertable = [false];
      updatable  = [false];
   }
   attribute RepairLineAction Text {
      fetch      = "repair_line_action";
      dbcolumn = "repair_line_action";
      label      = "Repair Line Action";
      maxlength  = 20;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      format  = uppercase;
      implementationtype = "VARCHAR2(20)";
   }
   attribute Contract Text {
      fetch      = "contract";
      dbcolumn = "contract";
      label      = "Contract";
      maxlength  = 5;
      required   = [true];
      insertable  = [true];
      updatable   = [false];
      editable   = [ETag = null];
      lovcolumn        = [true];
      format  = uppercase;
      implementationtype = "VARCHAR2(5)";
   }
   attribute RepairLineActionDesc Text {
      fetch      = "repair_line_action_desc";
      dbcolumn = "repair_line_action_desc";
      label      = "Repair Line Action Desc";
      maxlength  = 60;
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(60)";
   }
   attribute ActionType Enumeration(BcLineActionType) {
      fetch      = "action_type_db";
      dbcolumn = "action_type";
      label      = "Action Type";
      required   = [true];
      insertable  = [true];
      updatable   = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute DaysBeforeOverdue Number(3) {
      fetch      = "days_before_overdue";
      dbcolumn = "days_before_overdue";
      label      = "Days Before Overdue";
      insertable  = [true];
      updatable   = [true];
      implementationtype = "NUMBER(3)";
   }
}



entityset Reference_BcRepairLineAction for BcRepairLineAction;

entityset Lookup_IsoUnit for Lookup_IsoUnit;

query Lookup_IsoUnit {
   from = "ISO_UNIT";
   keys = Id {
      where = "unit_code = :Id";
   }
   attribute Objgrants Text {
      fetch     = "NULL";
      label     = "Granted access";
      maxlength = 2000;
      editable  = [false];
   }
   attribute Id Text {
      fetch     = "unit_code";
      required  = [false];
      editable  = [false];
   }
   attribute Description Text {
      fetch     = "description";
      required  = [false];
      editable  = [false];
   }
}
enumeration Lookup_IsoLanguage {
   enumerationtype = Lookup;
   exec = "Iso_Language_API";
}

enumeration Lookup_IsoCountry {
   enumerationtype = Lookup;
   exec = "Iso_Country_API";
}


entityset Lookup_IsoCountry for Lookup_IsoCountry;

query Lookup_IsoCountry {
   from = "ISO_COUNTRY";
   keys = Id {
      where = "country_code = :Id";
   }
   attribute Objgrants Text {
      fetch     = "NULL";
      label     = "Granted access";
      maxlength = 2000;
      editable  = [false];
   }
   attribute Id Text {
      fetch     = "country_code";
      required  = [false];
      editable  = [false];
   }
   attribute Description Text {
      fetch     = "description";
      required  = [false];
      editable  = [false];
   }
}
