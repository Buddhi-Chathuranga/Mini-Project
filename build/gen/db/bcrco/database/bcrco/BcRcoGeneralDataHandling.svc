-----------------------------------------------------------------------------
--
--  Logical unit: BcRcoGeneralDataHandling
--  Type:         Entity
--  Component:    BCRCO
--
--  Template:     3.0
--  Built by:     IFS Developer Studio
--
--  NOTE! Do not edit!! This file is completely generated and will be
--        overwritten next time the corresponding model is saved.
-----------------------------------------------------------------------------


--Storing resulting json metadata in database splitted by indivudual objects
-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   projection_ VARCHAR2(250) := 'BcRcoGeneralDataHandling';
   header_     Model_Design_SYS.Fnd_Model_Design_Rec;
   json_       VARCHAR2(32767);
BEGIN
   header_ := Model_Design_SYS.Prepare_Design_Data_Load('projection', projection_, Model_Design_SYS.SERVER_METADATA,
      'Initial Mini Project Develop');
   json_ := '{"projection": {"Name": "BcRcoGeneralDataHandling","Metadata": {"Version": "[#[generate:version]#]","Description": "Initial Mini Project Develop","Category": ["Users"]},"Container": {"EntitySets": [{"Name": "Reference_Site","EntityType": "Site"},{"Name": "BcRepairTypeSet","EntityType": "BcRepairType"},{"Name": "BcRepairLineActionSet","EntityType": "BcRepairLineAction"}[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entityset_Metadata:{"Projection": "BcRcoGeneralDataHandling","Lu": ["Site","BcRepairType","BcRepairLineAction"]}]#]],"Singletons": [],"Actions": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Action_Metadata:{"Projection":"BcRcoGeneralDataHandling"}]#]],"Functions": []},"Enumerations": [{"Name": "BcLineActionType","Values": [{"Identifier": "OnHold","DbValue": "ON_HOLD"},{"Identifier": "Released","DbValue": "RELEASED"}]}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Enumeration_Metadata:{"Projection": "BcRcoGeneralDataHandling","Lu": ["Site","BcRepairType","BcRepairLineAction"]}]#]],"Structures": [{"Name": "BcRepairTypeCopyValues","PLSQLRecordName": "BC_RCO_GENERAL_DATA_HANDLING_SVC.COPY_VALUES_REC","Attributes": [{"Name": "ModifiedSource","DataType": "Entity","SubType": "BcRepairType","Collection": false,"Nullable": true,"AttrName": "MODIFIED_SOURCE","Execute": {"SQL": {"ImplementationType": "VARCHAR2"}}}]},{"Name": "BcRepairLineActionCopyValues","PLSQLRecordName": "BC_RCO_GENERAL_DATA_HANDLING_SVC.COPY_VALUES_REC","Attributes": [{"Name": "ModifiedSource","DataType": "Entity","SubType": "BcRepairLineAction","Collection": false,"Nullable": true,"AttrName": "MODIFIED_SOURCE","Execute": {"SQL": {"ImplementationType": "VARCHAR2"}}}]},{"Name": "StreamInfoRec","PLSQLRecordName": "BC_RCO_GENERAL_DATA_HANDLING_SVC.STREAM_INFO_REC","Attributes": [{"Name": "FileName","DataType": "Text"},{"Name": "MimeType","DataType": "Text"}]},{"Name": "EntityDec","PLSQLRecordName": "BC_RCO_GENERAL_DATA_HANDLING_SVC.ENTITY_DEC","Attributes": [{"Name": "ETag","DataType": "Text"},{"Name": "Info","DataType": "Text"},{"Name": "Attr","DataType": "Text"}]}[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Structure_Metadata:{"Projection": "BcRcoGeneralDataHandling","Lu": ["Site","BcRepairType","BcRepairLineAction"]}]#]],"Entities": [{"Name": "BcRepairType","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoGeneralDataHandling","Lu":"BcRepairType","View"';
   json_ := json_ || ':"BC_REPAIR_TYPE"}]#]"}},"Keys": ["RepairType"],"KeysWhere": "(repair_type = :RepairType)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairType''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''REPAIR_TYPE=''||repair_type||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "RepairType","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": false,"AttrName": "REPAIR_TYPE","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_type","ImplementationType": "VARCHAR2","Alias": "repair_type"}}},{"Name": "Description","DataType": "Text","Collection": false,"Size": 60,"Nullable": false,"Updatable": true,"AttrName": "DESCRIPTION","Keygeneration": "User","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoGeneralDataHandling","Lu":"BcRepairType","Type":"Entity","Name":"BcRepairType","View":"BC_REPAIR_TYPE"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairType''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''REPAIR_TYPE=''||repair_type||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoGeneralDataHandling","Entity":"BcRepairType","Lu":"BcRepairType","View":"BC_REPAIR_TYPE"}]#]],"CRUD": [{"Name": "Default","DataType": "Entity","SubType": "BcRepairType","Collection": false,"CollectionBound": true,';
   json_ := json_ || '"Parameters": [],"Execute": {"SQL": {"From": "TABLE(Bc_Rco_General_Data_Handling_SVC.CRUD_Default(:Attr, bc_repair_type## => ''''))","Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"}]}}},{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcRepairType","Collection": false,"CollectionBound": true,"Parameters": [{"Name": "CopyValues","DataType": "Structure","SubType": "BcRepairTypeCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Return_$ := Bc_Rco_General_Data_Handling_SVC.CRUD_Default_Copy(:CopyValues, bc_repair_type## => '''');","END;"],"Bind": [{"Kind": "Parameter","Name": "CopyValues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_GENERAL_DATA_HANDLING_SVC.COPY_VALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_GENERAL_DATA_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}},{"Name": "Create","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_General_Data_Handling_SVC.CRUD_Create(:Attr, :Action$, bc_repair_type## => '''');","END;"],"Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Update","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_General_Data_Handling_SVC.CRUD_Update(:ETag, :RepairType, :Attr, :Action$, bc_repair_type## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RepairType","ImplementationType": "VARCHAR2"},{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Delete","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_General_Data_Handling_SVC.CRUD_Delete(:ETag, :RepairType, :Action$, bc_repair_type## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RepairType","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}}],"';
   json_ := json_ || 'Actions": [],"Functions": [{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcRepairType","Collection": false,"CrudOperation": true,"Parameters": [{"Name": "CopyValues","DataType": "Structure","SubType": "BcRepairTypeCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Return_$ := Bc_Rco_General_Data_Handling_SVC.CRUD_Default_Copy(:ETag, :RepairType, :CopyValues, bc_repair_type## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RepairType","ImplementationType": "VARCHAR2"},{"Kind": "Parameter","Name": "CopyValues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_GENERAL_DATA_HANDLING_SVC.COPY_VALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_GENERAL_DATA_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}}]},{"Name": "BcRepairLineAction","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoGeneralDataHandling","Lu":"BcRepairLineAction","View":"BC_REPAIR_LINE_ACTION"}]#]"}},"Keys": ["RepairLineAction"],"KeysWhere": "(repair_line_action = :RepairLineAction)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairLineAction''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''REPAIR_LINE_ACTION=''||repair_line_action||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "RepairLineAction","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": false,"AttrName": "REPAIR_LINE_ACTION","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_line_action","ImplementationType": "VARCHAR2","Alias": "repair_line_action"}}},{"Name": "Contra';
   json_ := json_ || 'ct","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": false,"AttrName": "CONTRACT","Keygeneration": "User","Execute": {"SQL": {"Select": "contract","ImplementationType": "VARCHAR2","Alias": "contract"}}},{"Name": "RepairLineActionDesc","DataType": "Text","Collection": false,"Size": 60,"Nullable": true,"Updatable": true,"AttrName": "REPAIR_LINE_ACTION_DESC","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_line_action_desc","ImplementationType": "VARCHAR2","Alias": "repair_line_action_desc"}}},{"Name": "ActionType","DataType": "Enumeration","SubType": "BcLineActionType","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "ACTION_TYPE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "action_type_db","OrderBy": "action_type","ImplementationType": "VARCHAR2","Alias": "action_type"}}},{"Name": "DaysBeforeOverdue","DataType": "Number","Collection": false,"Precision": "3","Nullable": true,"Updatable": true,"AttrName": "DAYS_BEFORE_OVERDUE","Keygeneration": "User","Execute": {"SQL": {"Select": "days_before_overdue","ImplementationType": "NUMBER","Alias": "days_before_overdue"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoGeneralDataHandling","Lu":"BcRepairLineAction","Type":"Entity","Name":"BcRepairLineAction","View":"BC_REPAIR_LINE_ACTION"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairLineAction''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''REPAIR_LINE_ACTION=''||repair_line_action||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [{"Name": "ContractRef","Collection": false,"Target": "Site","Keys": [{"ThisAttribute": "Contract","TargetAttribute": "Contract"}],"ParentAttributes": ["Contract"],"ChildAttributes": ["Contract"],"Where": "(:parent.contract = :child.contract)"}[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoGeneralDataHandling","Entity":"BcRepairLineAction","Lu":"BcRepairLineAction","View":"BC_REPAIR_LINE_ACTION"}]#]],"CRUD": [{"Name": "Default","DataType": "Entity","SubType": "BcRepairLineAction","Collection": false,"CollectionBound": true,"Parameters": [],"Execute": {"SQL": {"F';
   json_ := json_ || 'rom": "TABLE(Bc_Rco_General_Data_Handling_SVC.CRUD_Default(:Attr, bc_repair_line_action## => ''''))","Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"}]}}},{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcRepairLineAction","Collection": false,"CollectionBound": true,"Parameters": [{"Name": "CopyValues","DataType": "Structure","SubType": "BcRepairLineActionCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Return_$ := Bc_Rco_General_Data_Handling_SVC.CRUD_Default_Copy(:CopyValues, bc_repair_line_action## => '''');","END;"],"Bind": [{"Kind": "Parameter","Name": "CopyValues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_GENERAL_DATA_HANDLING_SVC.COPY_VALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_GENERAL_DATA_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}},{"Name": "Create","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_General_Data_Handling_SVC.CRUD_Create(:Attr, :Action$, bc_repair_line_action## => '''');","END;"],"Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Update","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_General_Data_Handling_SVC.CRUD_Update(:ETag, :RepairLineAction, :Attr, :Action$, bc_repair_line_action## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RepairLineAction","ImplementationType": "VARCHAR2"},{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Delete","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_General_Data_Handling_SVC.CRUD_Delete(:ETag, :RepairLineAction, :Action$, bc_repair_line_action## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RepairLineAction","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","Impleme';
   json_ := json_ || 'ntationType": "VARCHAR2"}]}}}],"Actions": [],"Functions": [{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcRepairLineAction","Collection": false,"CrudOperation": true,"Parameters": [{"Name": "CopyValues","DataType": "Structure","SubType": "BcRepairLineActionCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Return_$ := Bc_Rco_General_Data_Handling_SVC.CRUD_Default_Copy(:ETag, :RepairLineAction, :CopyValues, bc_repair_line_action## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RepairLineAction","ImplementationType": "VARCHAR2"},{"Kind": "Parameter","Name": "CopyValues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_GENERAL_DATA_HANDLING_SVC.COPY_VALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_GENERAL_DATA_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}}]},{"Name": "Site","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoGeneralDataHandling","Lu":"Site","View":"SITE"}]#]"}},"Keys": ["Contract"],"KeysWhere": "(contract = :Contract)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Site''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CONTRACT=''||contract||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "Contract","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": false,"AttrName": "CONTRACT","Keygeneration": "User","Execute": {"SQL": {"Select": "contract","ImplementationType": "VARCHAR2","Alias": "contract"}}},{"Name": "Company","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable';
   json_ := json_ || '": false,"AttrName": "COMPANY","Keygeneration": "User","Execute": {"SQL": {"Select": "company","ImplementationType": "VARCHAR2","Alias": "company"}}},{"Name": "DeliveryAddress","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "DELIVERY_ADDRESS","Keygeneration": "User","Execute": {"SQL": {"Select": "delivery_address","ImplementationType": "VARCHAR2","Alias": "delivery_address"}}},{"Name": "Description","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DESCRIPTION","Keygeneration": "Server","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}},{"Name": "DistCalendarId","DataType": "Text","Collection": false,"Size": 10,"Nullable": false,"Updatable": true,"AttrName": "DIST_CALENDAR_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "dist_calendar_id","ImplementationType": "VARCHAR2","Alias": "dist_calendar_id"}}},{"Name": "ManufCalendarId","DataType": "Text","Collection": false,"Size": 10,"Nullable": false,"Updatable": true,"AttrName": "MANUF_CALENDAR_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "manuf_calendar_id","ImplementationType": "VARCHAR2","Alias": "manuf_calendar_id"}}},{"Name": "Offset","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "OFFSET","Keygeneration": "User","Execute": {"SQL": {"Select": "offset","ImplementationType": "NUMBER","Alias": "offset"}}},{"Name": "DataCaptureMenuId","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "DATA_CAPTURE_MENU_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "data_capture_menu_id","ImplementationType": "VARCHAR2","Alias": "data_capture_menu_id"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoGeneralDataHandling","Lu":"Site","Type":"Entity","Name":"Site","View":"SITE"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Site''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CONTRACT=''||contract||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_En';
   json_ := json_ || 'tity_Nav_Metadata:{"Projection":"BcRcoGeneralDataHandling","Entity":"Site","Lu":"Site","View":"SITE"}]#]],"CRUD": [],"Actions": [],"Functions": []}[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Type_Metadata:{"Projection": "BcRcoGeneralDataHandling","Lu": ["Site","BcRepairType","BcRepairLineAction"]}]#]]}}';
   Model_Design_SYS.Add_Model_Design_Template(header_, json_);
   COMMIT;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   projection_ VARCHAR2(250) := 'BcRcoGeneralDataHandling';
   header_     Model_Design_SYS.Fnd_Model_Design_Rec;
   json_       VARCHAR2(32767);
BEGIN
   header_ := Model_Design_SYS.Prepare_Design_Data_Load('projection', projection_, Model_Design_SYS.CLIENT_METADATA, '');
   json_ := '{"name": "BcRcoGeneralDataHandling","service": "BcRcoGeneralDataHandling.svc","version": "-718206071","contains": {"Reference_Site": {"name": "Reference_Site","entity": "Site","array": true,"defaultfilter": false},"BcRepairTypeSet": {"name": "BcRepairTypeSet","entity": "BcRepairType","array": true,"defaultfilter": false},"BcRepairLineActionSet": {"name": "BcRepairLineActionSet","entity": "BcRepairLineAction","array": true,"defaultfilter": false}[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entityset_Metadata:{"Projection": "BcRcoGeneralDataHandling","Lu": ["Site","BcRepairType","BcRepairLineAction"]}]#]},"enumerations": {"BcLineActionType": {"name": "BcLineActionType","values": ["OnHold","Released"],"labels": [{"value": "OnHold","label": "[#[translateEnum:Bc_Line_Action_Type_API.Decode(''ON_HOLD''):On Hold]#]"},{"value": "Released","label": "[#[translateEnum:Bc_Line_Action_Type_API.Decode(''RELEASED''):Released]#]"}]}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Enumeration_Metadata:{"Projection": "BcRcoGeneralDataHandling","Lu": ["Site","BcRepairType","BcRepairLineAction"]}]#]},"entities": {"BcRepairType": {"name": "BcRepairType","hasETag": true,"hasKeys": true,"CRUD": "Create,Read,Update,Delete","luname": "BcRepairType","ludependencies": ["BcRepairType"],"keys": ["RepairType"],"attributes": {"Objgrants": {"datatype": "Text","size": 2000,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"RepairType": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"Description": {"datatype": "Text","size": 60,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Attribute_Metadata:{"Projection": "BcRcoGeneralDataHandling","Lu": "BcRepairType","View": "BC_REPAIR_TYPE"}]#]},"references": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Nav_Metadata:{"Projection":"BcRcoGeneralDataHandling","Lu":"BcRepairType"}]#]},"arrays": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Array_Metadata:{"Projection":"BcRcoGeneralDataHandling","Entity":"BcRepairType","Lu":"BcRepairType"}]#]},"actions": {},"functions": {},"defaultcopyapplicable": t';
   json_ := json_ || 'rue},"BcRepairLineAction": {"name": "BcRepairLineAction","hasETag": true,"hasKeys": true,"CRUD": "Create,Read,Update,Delete","luname": "BcRepairLineAction","ludependencies": ["BcRepairLineAction"],"keys": ["RepairLineAction"],"attributes": {"Objgrants": {"datatype": "Text","size": 2000,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"RepairLineAction": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"Contract": {"datatype": "Text","size": 5,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"RepairLineActionDesc": {"datatype": "Text","size": 60,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ActionType": {"datatype": "Enumeration","size": 20,"subtype": "BcLineActionType","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DaysBeforeOverdue": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Attribute_Metadata:{"Projection": "BcRcoGeneralDataHandling","Lu": "BcRepairLineAction","View": "BC_REPAIR_LINE_ACTION"}]#]},"references": {"ContractRef": {"target": "Site","datasource": "BcRcoGeneralDataHandling.svc/Reference_Site?$filter=Contract eq $[Contract]","mapping": {"Contract": "Contract"}}[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Nav_Metadata:{"Projection":"BcRcoGeneralDataHandling","Lu":"BcRepairLineAction"}]#]},"arrays": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Array_Metadata:{"Projection":"BcRcoGeneralDataHandling","Entity":"BcRepairLineAction","Lu":"BcRepairLineAction"}]#]},"actions": {},"functions": {},"defaultcopyapplicable": true},"Site": {"name": "Site","hasETag": true,"hasKeys": true,"CRUD": "Read","luname": "Site","ludependencies": ["Site"],"keys": ["Contract"],"attributes": {"Objgrants": {"datatype": "Text","size": 2000,"keygeneration": "Server","required": fa';
   json_ := json_ || 'lse,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"Contract": {"datatype": "Text","size": 5,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"Company": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"DeliveryAddress": {"datatype": "Text","size": 50,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Description": {"datatype": "Text","size": 20,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"DistCalendarId": {"datatype": "Text","size": 10,"format": "uppercase","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ManufCalendarId": {"datatype": "Text","size": 10,"format": "uppercase","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Offset": {"datatype": "Number","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DataCaptureMenuId": {"datatype": "Text","size": 50,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Attribute_Metadata:{"Projection": "BcRcoGeneralDataHandling","Lu": "Site","View": "SITE"}]#]},"references": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Nav_Metadata:{"Projection":"BcRcoGeneralDataHandling","Lu":"Site"}]#]},"arrays": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Array_Metadata:{"Projection":"BcRcoGeneralDataHandling","Entity":"Site","Lu":"Site"}]#]},"actions": {},"functions": {}}[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Type_Metadata:{"Projection": "BcRcoGeneralDataHandling","Lu": ["Site","BcRepairType","BcRepairLineAction"]}]#]},"structures": {"BcRepairTypeCopyValues": {"name": "BcRepairTypeCopyValues","attributes": {"Modified';
   json_ := json_ || 'Source": {"datatype": "Entity","subtype": "BcRepairType","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}},"references": {},"arrays": {}},"BcRepairLineActionCopyValues": {"name": "BcRepairLineActionCopyValues","attributes": {"ModifiedSource": {"datatype": "Entity","subtype": "BcRepairLineAction","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}},"references": {},"arrays": {}}},"actions": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Action_Metadata:{"Projection": "BcRcoGeneralDataHandling"}]#]},"functions": {},"attachmentservices": {[#[callback:Object_Connection_Metadata_SYS.Enum_Entity_Services_:BcRepairLineAction,BcRepairType,Site]#]}}';
   Model_Design_SYS.Add_Model_Design_Template(header_, json_);
   COMMIT;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   projection_ VARCHAR2(250) := 'BcRcoGeneralDataHandling';
   header_     Model_Design_SYS.Fnd_Model_Api_Doc_Rec;
   json_       VARCHAR2(32767);
BEGIN
   header_ := Model_Design_SYS.Prepare_Doc_Load('projection', projection_, Model_Design_SYS.SERVER_METADATA, 'Initial Mini Project Develop');
   json_ := '{"projection": {"Name": "BcRcoGeneralDataHandling","Metadata": {"Version": "[#[generate:version]#]","Description": "Initial Mini Project Develop","Category": ["Users"]},"Container": {"EntitySets": [{"Name": "Reference_Site","EntityType": "Site"},{"Name": "BcRepairTypeSet","EntityType": "BcRepairType"},{"Name": "BcRepairLineActionSet","EntityType": "BcRepairLineAction"}],"Singletons": [],"Actions": [],"Functions": []},"Enumerations": [{"Name": "BcLineActionType","Values": [{"Identifier": "OnHold","DbValue": "ON_HOLD"},{"Identifier": "Released","DbValue": "RELEASED"}]}],"Structures": [{"Name": "BcRepairTypeCopyValues","PLSQLRecordName": "BC_RCO_GENERAL_DATA_HANDLING_SVC.COPY_VALUES_REC","Attributes": [{"Name": "ModifiedSource","DataType": "Entity","SubType": "BcRepairType","Collection": false,"Nullable": true,"AttrName": "MODIFIED_SOURCE","Execute": {"SQL": {"ImplementationType": "VARCHAR2"}}}]},{"Name": "BcRepairLineActionCopyValues","PLSQLRecordName": "BC_RCO_GENERAL_DATA_HANDLING_SVC.COPY_VALUES_REC","Attributes": [{"Name": "ModifiedSource","DataType": "Entity","SubType": "BcRepairLineAction","Collection": false,"Nullable": true,"AttrName": "MODIFIED_SOURCE","Execute": {"SQL": {"ImplementationType": "VARCHAR2"}}}]},{"Name": "StreamInfoRec","PLSQLRecordName": "BC_RCO_GENERAL_DATA_HANDLING_SVC.STREAM_INFO_REC","Attributes": [{"Name": "FileName","DataType": "Text"},{"Name": "MimeType","DataType": "Text"}]},{"Name": "EntityDec","PLSQLRecordName": "BC_RCO_GENERAL_DATA_HANDLING_SVC.ENTITY_DEC","Attributes": [{"Name": "ETag","DataType": "Text"},{"Name": "Info","DataType": "Text"},{"Name": "Attr","DataType": "Text"}]}],"Entities": [{"Name": "BcRepairType","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoGeneralDataHandling","Lu":"BcRepairType","View":"BC_REPAIR_TYPE"}]#]"}},"Keys": ["RepairType"],"KeysWhere": "(repair_type = :RepairType)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairType''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Ex';
   json_ := json_ || 'ecute": {"SQL": {"Select": "''REPAIR_TYPE=''||repair_type||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "RepairType","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": false,"AttrName": "REPAIR_TYPE","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_type","ImplementationType": "VARCHAR2","Alias": "repair_type"}},"format": "uppercase"},{"Name": "Description","DataType": "Text","Collection": false,"Size": 60,"Nullable": false,"Updatable": true,"AttrName": "DESCRIPTION","Keygeneration": "User","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoGeneralDataHandling","Lu":"BcRepairType","Type":"Entity","Name":"BcRepairType","View":"BC_REPAIR_TYPE"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairType''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''REPAIR_TYPE=''||repair_type||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoGeneralDataHandling","Entity":"BcRepairType","Lu":"BcRepairType","View":"BC_REPAIR_TYPE"}]#]],"CRUD": [{"Name": "Default","DataType": "Entity","SubType": "BcRepairType","Collection": false,"CollectionBound": true,"Parameters": [],"Execute": {"SQL": {"From": "TABLE(Bc_Rco_General_Data_Handling_SVC.CRUD_Default(:Attr, bc_repair_type## => ''''))","Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"}]}}},{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcRepairType","Collection": false,"CollectionBound": true,"Parameters": [{"Name": "CopyValues","DataType": "Structure","SubType": "BcRepairTypeCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Return_$ := Bc_Rco_General_Data_Handling_SVC.CRU';
   json_ := json_ || 'D_Default_Copy(:CopyValues, bc_repair_type## => '''');","END;"],"Bind": [{"Kind": "Parameter","Name": "CopyValues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_GENERAL_DATA_HANDLING_SVC.COPY_VALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_GENERAL_DATA_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}},{"Name": "Create","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_General_Data_Handling_SVC.CRUD_Create(:Attr, :Action$, bc_repair_type## => '''');","END;"],"Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Update","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_General_Data_Handling_SVC.CRUD_Update(:ETag, :RepairType, :Attr, :Action$, bc_repair_type## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RepairType","ImplementationType": "VARCHAR2"},{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Delete","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_General_Data_Handling_SVC.CRUD_Delete(:ETag, :RepairType, :Action$, bc_repair_type## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RepairType","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}}],"Actions": [],"Functions": [{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcRepairType","Collection": false,"CrudOperation": true,"Parameters": [{"Name": "CopyValues","DataType": "Structure","SubType": "BcRepairTypeCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Return_$ := Bc_Rco_General_Data_Handling_SVC.CRUD_Default_Copy(:ETag, :RepairType, :CopyValues, bc_repair_type## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RepairType","Implem';
   json_ := json_ || 'entationType": "VARCHAR2"},{"Kind": "Parameter","Name": "CopyValues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_GENERAL_DATA_HANDLING_SVC.COPY_VALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_GENERAL_DATA_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}}]},{"Name": "BcRepairLineAction","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoGeneralDataHandling","Lu":"BcRepairLineAction","View":"BC_REPAIR_LINE_ACTION"}]#]"}},"Keys": ["RepairLineAction"],"KeysWhere": "(repair_line_action = :RepairLineAction)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairLineAction''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''REPAIR_LINE_ACTION=''||repair_line_action||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "RepairLineAction","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": false,"AttrName": "REPAIR_LINE_ACTION","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_line_action","ImplementationType": "VARCHAR2","Alias": "repair_line_action"}},"format": "uppercase"},{"Name": "Contract","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": false,"AttrName": "CONTRACT","Keygeneration": "User","Execute": {"SQL": {"Select": "contract","ImplementationType": "VARCHAR2","Alias": "contract"}},"format": "uppercase"},{"Name": "RepairLineActionDesc","DataType": "Text","Collection": false,"Size": 60,"Nullable": true,"Updatable": true,"AttrName": "REPAIR_LINE_ACTION_DESC","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_line_action_desc","ImplementationType": "VARCHAR2","Alias": "repair_line_actio';
   json_ := json_ || 'n_desc"}}},{"Name": "ActionType","DataType": "Enumeration","SubType": "BcLineActionType","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "ACTION_TYPE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "action_type_db","OrderBy": "action_type","ImplementationType": "VARCHAR2","Alias": "action_type"}}},{"Name": "DaysBeforeOverdue","DataType": "Number","Collection": false,"Precision": "3","Nullable": true,"Updatable": true,"AttrName": "DAYS_BEFORE_OVERDUE","Keygeneration": "User","Execute": {"SQL": {"Select": "days_before_overdue","ImplementationType": "NUMBER","Alias": "days_before_overdue"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoGeneralDataHandling","Lu":"BcRepairLineAction","Type":"Entity","Name":"BcRepairLineAction","View":"BC_REPAIR_LINE_ACTION"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairLineAction''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''REPAIR_LINE_ACTION=''||repair_line_action||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [{"Name": "ContractRef","Collection": false,"Target": "Site","Keys": [{"ThisAttribute": "Contract","TargetAttribute": "Contract"}],"ParentAttributes": ["Contract"],"ChildAttributes": ["Contract"],"Where": "(:parent.contract = :child.contract)"}[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoGeneralDataHandling","Entity":"BcRepairLineAction","Lu":"BcRepairLineAction","View":"BC_REPAIR_LINE_ACTION"}]#]],"CRUD": [{"Name": "Default","DataType": "Entity","SubType": "BcRepairLineAction","Collection": false,"CollectionBound": true,"Parameters": [],"Execute": {"SQL": {"From": "TABLE(Bc_Rco_General_Data_Handling_SVC.CRUD_Default(:Attr, bc_repair_line_action## => ''''))","Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"}]}}},{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcRepairLineAction","Collection": false,"CollectionBound": true,"Parameters": [{"Name": "CopyValues","DataType": "Structure","SubType": "BcRepairLineActionCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Return_$ := Bc_Rco_Gener';
   json_ := json_ || 'al_Data_Handling_SVC.CRUD_Default_Copy(:CopyValues, bc_repair_line_action## => '''');","END;"],"Bind": [{"Kind": "Parameter","Name": "CopyValues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_GENERAL_DATA_HANDLING_SVC.COPY_VALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_GENERAL_DATA_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}},{"Name": "Create","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_General_Data_Handling_SVC.CRUD_Create(:Attr, :Action$, bc_repair_line_action## => '''');","END;"],"Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Update","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_General_Data_Handling_SVC.CRUD_Update(:ETag, :RepairLineAction, :Attr, :Action$, bc_repair_line_action## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RepairLineAction","ImplementationType": "VARCHAR2"},{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Delete","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_General_Data_Handling_SVC.CRUD_Delete(:ETag, :RepairLineAction, :Action$, bc_repair_line_action## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RepairLineAction","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}}],"Actions": [],"Functions": [{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcRepairLineAction","Collection": false,"CrudOperation": true,"Parameters": [{"Name": "CopyValues","DataType": "Structure","SubType": "BcRepairLineActionCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Return_$ := Bc_Rco_General_Data_Handling_SVC.CRUD_Default_Copy(:ETag, :RepairLineAction, :CopyValues, bc_repair_line_action## => '''');","END;"],"Bind": [{"Kind": "ETa';
   json_ := json_ || 'g","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RepairLineAction","ImplementationType": "VARCHAR2"},{"Kind": "Parameter","Name": "CopyValues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_GENERAL_DATA_HANDLING_SVC.COPY_VALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_GENERAL_DATA_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}}]},{"Name": "Site","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoGeneralDataHandling","Lu":"Site","View":"SITE"}]#]"}},"Keys": ["Contract"],"KeysWhere": "(contract = :Contract)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Site''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CONTRACT=''||contract||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "Contract","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": false,"AttrName": "CONTRACT","Keygeneration": "User","Execute": {"SQL": {"Select": "contract","ImplementationType": "VARCHAR2","Alias": "contract"}},"format": "uppercase"},{"Name": "Company","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": false,"AttrName": "COMPANY","Keygeneration": "User","Execute": {"SQL": {"Select": "company","ImplementationType": "VARCHAR2","Alias": "company"}},"format": "uppercase"},{"Name": "DeliveryAddress","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "DELIVERY_ADDRESS","Keygeneration": "User","Execute": {"SQL": {"Select": "delivery_address","ImplementationType": "VARCHAR2","Alias": "delivery_address"}},"format": "uppercase"},{"Name": "Description","DataType"';
   json_ := json_ || ': "Text","Collection": false,"Size": 20,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DESCRIPTION","Keygeneration": "Server","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}},{"Name": "DistCalendarId","DataType": "Text","Collection": false,"Size": 10,"Nullable": false,"Updatable": true,"AttrName": "DIST_CALENDAR_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "dist_calendar_id","ImplementationType": "VARCHAR2","Alias": "dist_calendar_id"}},"format": "uppercase"},{"Name": "ManufCalendarId","DataType": "Text","Collection": false,"Size": 10,"Nullable": false,"Updatable": true,"AttrName": "MANUF_CALENDAR_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "manuf_calendar_id","ImplementationType": "VARCHAR2","Alias": "manuf_calendar_id"}},"format": "uppercase"},{"Name": "Offset","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "OFFSET","Keygeneration": "User","Execute": {"SQL": {"Select": "offset","ImplementationType": "NUMBER","Alias": "offset"}}},{"Name": "DataCaptureMenuId","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "DATA_CAPTURE_MENU_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "data_capture_menu_id","ImplementationType": "VARCHAR2","Alias": "data_capture_menu_id"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoGeneralDataHandling","Lu":"Site","Type":"Entity","Name":"Site","View":"SITE"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Site''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CONTRACT=''||contract||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoGeneralDataHandling","Entity":"Site","Lu":"Site","View":"SITE"}]#]],"CRUD": [],"Actions": [],"Functions": []}]}}';
   Model_Design_SYS.Add_Model_Api_Doc_Template(header_, json_);
   COMMIT;
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Creating Bc_Rco_General_Data_Handling_SVC specification

-- [IFS COMPLETE BLOCK PACKAGE Bc_Rco_General_Data_Handling_SVC]
CREATE OR REPLACE PACKAGE Bc_Rco_General_Data_Handling_SVC IS

module_  CONSTANT VARCHAR2(25)  := 'BCRCO';
lu_name_ CONSTANT VARCHAR2(250) := 'BcRcoGeneralDataHandling';
lu_type_ CONSTANT VARCHAR2(25)  := 'Projection';

-----------------------------------------------------------------------------
---------------------------- PUBLIC DECLARATIONS ----------------------------
-----------------------------------------------------------------------------

TYPE Entity_Dec IS RECORD (
   etag                           VARCHAR2(100),
   info                           VARCHAR2(4000),
   attr                           VARCHAR2(32000));

TYPE Entity_Small_Dec IS RECORD (
   etag                           VARCHAR2(100),
   info                           VARCHAR2(4000),
   attr                           VARCHAR2(4000));

TYPE Entity_Small_Drr      IS TABLE OF Entity_Small_Dec;

TYPE Entity_Drr      IS TABLE OF Entity_Dec;

TYPE Objid_Arr       IS TABLE OF VARCHAR2(100);

TYPE Empty_Art       IS TABLE OF VARCHAR2(1);

TYPE Boolean_Arr     IS TABLE OF BOOLEAN;

TYPE Boolean_Art     IS TABLE OF VARCHAR2(5);

TYPE Number_Arr      IS TABLE OF NUMBER;

TYPE Text_Arr        IS TABLE OF VARCHAR2(4000);

TYPE Stream_Data_Rec IS RECORD (
   file_name                           VARCHAR2(100),
   mime_type                           VARCHAR2(100),
   stream_data                         BLOB);

TYPE Stream_Data_Arr IS TABLE OF Stream_Data_Rec;

TYPE Stream_Info_Rec IS RECORD (
   file_name                           VARCHAR2(100),
   mime_type                           VARCHAR2(100));

TYPE Stream_Text_Data_Rec IS RECORD (
   file_name                           VARCHAR2(100),
   mime_type                           VARCHAR2(100),
   stream_data                         CLOB);

TYPE Copy_Values_Rec IS RECORD (
   modified_source                VARCHAR2(32000));


-----------------------------------------------------------------------------
------------------------- METADATA PROVIDER METHODS -------------------------
-----------------------------------------------------------------------------

FUNCTION Verify_Metadata_Sql_Content_ (
   metadata_version_ IN VARCHAR2 ) RETURN VARCHAR2;

PROCEDURE Verify_Metadata_Plsql_Content_ (
   metadata_version_ IN VARCHAR2 );

FUNCTION Get_Metadata_Content_ (
   context_ IN VARCHAR2 DEFAULT NULL ) RETURN CLOB;

FUNCTION Get_Metadata_Version_ (
   context_ IN VARCHAR2 DEFAULT NULL ) RETURN VARCHAR2;

FUNCTION Get_Metadata_Category_ (
   context_ IN VARCHAR2 DEFAULT NULL ) RETURN VARCHAR2;

FUNCTION Get_Metadata_Service_Group_ (
   context_ IN VARCHAR2 DEFAULT NULL ) RETURN VARCHAR2;

-----------------------------------------------------------------------------
------------------------------- GLOBAL METHODS ------------------------------
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
------------------------- METHODS FOR BC REPAIR TYPE ------------------------
-----------------------------------------------------------------------------


--@PoReadOnly(CRUD_Default)
FUNCTION CRUD_Default(attr_ IN VARCHAR2 DEFAULT NULL, bc_repair_type## IN VARCHAR2) RETURN Entity_Small_Drr PIPELINED;

--@PoReadOnly(CRUD_Default_Copy)
FUNCTION CRUD_Default_Copy(values_ IN Copy_Values_Rec, bc_repair_type## IN VARCHAR2) RETURN Entity_Dec;

FUNCTION CRUD_Default_Copy(etag_ IN VARCHAR2, repair_type_ IN VARCHAR2, values_ IN Copy_Values_Rec, bc_repair_type## IN VARCHAR2) RETURN Entity_Dec;

--@PoReadOnly(CRUD_Create)
FUNCTION CRUD_Create(attr_ IN VARCHAR2, action_ IN VARCHAR2, bc_repair_type## IN VARCHAR2) RETURN Entity_Dec;

--@PoReadOnly(CRUD_Update)
FUNCTION CRUD_Update(etag_ IN VARCHAR2, repair_type_ IN VARCHAR2, attr_ IN VARCHAR2, action$_ IN VARCHAR2, bc_repair_type## IN VARCHAR2) RETURN Entity_Dec;

--@PoReadOnly(CRUD_Delete)
FUNCTION CRUD_Delete(etag_ IN VARCHAR2, repair_type_ IN VARCHAR2, action$_ IN VARCHAR2, bc_repair_type## IN VARCHAR2) RETURN Entity_Dec;

-----------------------------------------------------------------------------
--------------------- METHODS FOR BC REPAIR LINE ACTION ---------------------
-----------------------------------------------------------------------------


--@PoReadOnly(CRUD_Default)
FUNCTION CRUD_Default(attr_ IN VARCHAR2 DEFAULT NULL, bc_repair_line_action## IN VARCHAR2) RETURN Entity_Small_Drr PIPELINED;

--@PoReadOnly(CRUD_Default_Copy)
FUNCTION CRUD_Default_Copy(values_ IN Copy_Values_Rec, bc_repair_line_action## IN VARCHAR2) RETURN Entity_Dec;

FUNCTION CRUD_Default_Copy(etag_ IN VARCHAR2, repair_line_action_ IN VARCHAR2, values_ IN Copy_Values_Rec, bc_repair_line_action## IN VARCHAR2) RETURN Entity_Dec;

--@PoReadOnly(CRUD_Create)
FUNCTION CRUD_Create(attr_ IN VARCHAR2, action_ IN VARCHAR2, bc_repair_line_action## IN VARCHAR2) RETURN Entity_Dec;

--@PoReadOnly(CRUD_Update)
FUNCTION CRUD_Update(etag_ IN VARCHAR2, repair_line_action_ IN VARCHAR2, attr_ IN VARCHAR2, action$_ IN VARCHAR2, bc_repair_line_action## IN VARCHAR2) RETURN Entity_Dec;

--@PoReadOnly(CRUD_Delete)
FUNCTION CRUD_Delete(etag_ IN VARCHAR2, repair_line_action_ IN VARCHAR2, action$_ IN VARCHAR2, bc_repair_line_action## IN VARCHAR2) RETURN Entity_Dec;

-----------------------------------------------------------------------------
------------------------------ METHODS FOR SITE -----------------------------
-----------------------------------------------------------------------------


END Bc_Rco_General_Data_Handling_SVC;
-- [END IFS COMPLETE BLOCK]
/
SHOW ERROR

PROMPT Creating Bc_Rco_General_Data_Handling_SVC implementation

-- [IFS COMPLETE BLOCK PACKAGEBODY Bc_Rco_General_Data_Handling_SVC]
CREATE OR REPLACE PACKAGE BODY Bc_Rco_General_Data_Handling_SVC IS

-----------------------------------------------------------------------------
---------------------------- PRIVATE DECLARATIONS ---------------------------
-----------------------------------------------------------------------------

TYPE Bc_Repair_Type_Rec IS RECORD (
   objid                          VARCHAR2(4000),
   objversion                     VARCHAR2(4000),
   objinfo                        VARCHAR2(4000),
   objgrants                      VARCHAR2(2000),
   repair_type                    VARCHAR2(20),
   description                    VARCHAR2(60));

TYPE Bc_Repair_Type_Default_Copy_Rec IS RECORD (
   objgrants                      VARCHAR2(2000),
   repair_type                    VARCHAR2(20),
   description                    VARCHAR2(60));

TYPE Bc_Repair_Type_Key IS RECORD (
   repair_type                    VARCHAR2(20));

TYPE Bc_Repair_Line_Action_Rec IS RECORD (
   objid                          VARCHAR2(4000),
   objversion                     VARCHAR2(4000),
   objinfo                        VARCHAR2(4000),
   objgrants                      VARCHAR2(2000),
   repair_line_action             VARCHAR2(20),
   contract                       VARCHAR2(5),
   repair_line_action_desc        VARCHAR2(60),
   action_type                    VARCHAR2(100),
   days_before_overdue            NUMBER);

TYPE Bc_Repair_Line_Action_Default_Copy_Rec IS RECORD (
   objgrants                      VARCHAR2(2000),
   repair_line_action             VARCHAR2(20),
   contract                       VARCHAR2(5),
   repair_line_action_desc        VARCHAR2(60),
   action_type                    VARCHAR2(100),
   days_before_overdue            NUMBER);

TYPE Bc_Repair_Line_Action_Key IS RECORD (
   repair_line_action             VARCHAR2(20));

TYPE Site_Rec IS RECORD (
   objid                          VARCHAR2(4000),
   objversion                     VARCHAR2(4000),
   objinfo                        VARCHAR2(4000),
   objgrants                      VARCHAR2(2000),
   contract                       VARCHAR2(5),
   company                        VARCHAR2(20),
   delivery_address               VARCHAR2(50),
   description                    VARCHAR2(20),
   dist_calendar_id               VARCHAR2(10),
   manuf_calendar_id              VARCHAR2(10),
   offset                         NUMBER,
   data_capture_menu_id           VARCHAR2(50));

TYPE Site_Default_Copy_Rec IS RECORD (
   objgrants                      VARCHAR2(2000),
   contract                       VARCHAR2(5),
   company                        VARCHAR2(20),
   delivery_address               VARCHAR2(50),
   description                    VARCHAR2(20),
   dist_calendar_id               VARCHAR2(10),
   manuf_calendar_id              VARCHAR2(10),
   offset                         NUMBER,
   data_capture_menu_id           VARCHAR2(50));

TYPE Site_Key IS RECORD (
   contract                       VARCHAR2(5));


-----------------------------------------------------------------------------
------------------------- METADATA PROVIDER METHODS -------------------------
-----------------------------------------------------------------------------

FUNCTION Verify_Metadata_Sql_Content_ (
   metadata_version_ IN VARCHAR2 ) RETURN VARCHAR2
IS
BEGIN
   Verify_Metadata_Plsql_Content_(metadata_version_);
   RETURN 'OK';
END Verify_Metadata_Sql_Content_;


PROCEDURE Verify_Metadata_Plsql_Content_ (
   metadata_version_ IN VARCHAR2 )
IS
BEGIN
   IF (metadata_version_ != Get_Metadata_Version_) THEN
      Raise_Application_Error(-20187, 'OLDMETA: Metadata mismatch, reload with Bc_Rco_General_Data_Handling_SVC.Get_Metadata_Content_ and execute again.');
   END IF;
END Verify_Metadata_Plsql_Content_;


FUNCTION Get_Metadata_Content_ (
   context_ IN VARCHAR2 DEFAULT NULL ) RETURN CLOB
IS
BEGIN
   IF (context_ IS NULL) THEN
      RETURN Model_Design_SYS.Get_Data_Content_(Model_Design_SYS.SERVER_METADATA, 'projection', 'BcRcoGeneralDataHandling', language_ => Fnd_Session_API.Get_Language);
   ELSE
      RETURN Model_Design_SYS.Get_Data_Content_(Model_Design_SYS.SERVER_METADATA, 'projection', 'BcRcoGeneralDataHandling', language_ => Fnd_Session_API.Get_Language, scope_id_ => context_);
   END IF;
END Get_Metadata_Content_;


FUNCTION Get_Metadata_Category_ (
   context_ IN VARCHAR2 DEFAULT NULL ) RETURN VARCHAR2
IS
   projection_category_  VARCHAR2(100);
BEGIN
   projection_category_ := 'Users';
   RETURN projection_category_;
END Get_Metadata_Category_;


FUNCTION Get_Metadata_Service_Group_ (
   context_ IN VARCHAR2 DEFAULT NULL ) RETURN VARCHAR2
IS
   projection_service_group_  VARCHAR2(100);
BEGIN
   projection_service_group_ := 'Default';
   RETURN projection_service_group_;
END Get_Metadata_Service_Group_;


FUNCTION Get_Metadata_Version_ (
   context_ IN VARCHAR2 DEFAULT NULL ) RETURN VARCHAR2
IS
BEGIN
   RETURN Model_Design_SYS.Get_Data_Version_(Model_Design_SYS.SERVER_METADATA, 'projection', 'BcRcoGeneralDataHandling');
END Get_Metadata_Version_;


-----------------------------------------------------------------------------
--------------------- IMPLEMENTATION METHOD DECLARATIONS --------------------
-----------------------------------------------------------------------------

FUNCTION Get_Objid_From_Etag___ (
   etag_ IN VARCHAR2 ) RETURN VARCHAR2;

FUNCTION Get_Objversion_From_Etag___ (
   etag_ IN VARCHAR2 ) RETURN VARCHAR2;

FUNCTION Get_Etag___ (
   objid_      IN VARCHAR2,
   objversion_ IN VARCHAR2 ) RETURN VARCHAR2;

FUNCTION Combine_Value_Unit___ (
   value_ IN VARCHAR2,
   unit_  IN VARCHAR2 ) RETURN VARCHAR2;

FUNCTION To_Boolean_Arr____ (
   arr_ IN Text_Arr ) RETURN Boolean_Arr;

PROCEDURE Add_To_Attr_From_Rec___ (
   rec_  IN     Bc_Repair_Type_Rec,
   attr_ IN OUT NOCOPY VARCHAR2 );

PROCEDURE Add_To_Attr_From_Rec___ (
   rec_  IN     Bc_Repair_Line_Action_Rec,
   attr_ IN OUT NOCOPY VARCHAR2 );

PROCEDURE Add_To_Rec_From_Attr___ (
   attr_ IN     VARCHAR2,
   rec_  IN OUT NOCOPY Bc_Repair_Type_Rec );

PROCEDURE Add_To_Rec_From_Attr___ (
   attr_ IN     VARCHAR2,
   rec_  IN OUT NOCOPY Bc_Repair_Line_Action_Rec );

PROCEDURE Add_Keys_To_Rec_From_Attr___ (
   attr_ IN  VARCHAR2,
   rec_ IN OUT NOCOPY Bc_Repair_Type_Rec );

PROCEDURE Add_Keys_To_Rec_From_Attr___ (
   attr_ IN  VARCHAR2,
   rec_ IN OUT NOCOPY Bc_Repair_Line_Action_Rec );

FUNCTION Add_To_Rec_From_Default_Copy_Rec___(
   default_copy_rec_ IN     Bc_Repair_Type_Default_Copy_Rec) RETURN Bc_Repair_Type_Rec;

FUNCTION Add_To_Rec_From_Default_Copy_Rec___(
   default_copy_rec_ IN     Bc_Repair_Line_Action_Default_Copy_Rec) RETURN Bc_Repair_Line_Action_Rec;

FUNCTION Get_Record_By_Objid___ (
   objid_ IN VARCHAR2,
   bc_repair_type## IN VARCHAR2 ) RETURN Bc_Repair_Type_Rec;

FUNCTION Get_Record_By_Objid___ (
   objid_ IN VARCHAR2,
   bc_repair_line_action## IN VARCHAR2 ) RETURN Bc_Repair_Line_Action_Rec;

PROCEDURE Get_Objid_Objversion___ (
   objid_         OUT VARCHAR2,
   objversion_    OUT VARCHAR2,
   key_        IN     Bc_Repair_Type_Key );

PROCEDURE Get_Objid_Objversion___ (
   objid_         OUT VARCHAR2,
   objversion_    OUT VARCHAR2,
   key_        IN     Bc_Repair_Line_Action_Key );

PROCEDURE CRUD_Default___ (
   key_  IN     Bc_Repair_Type_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2 );

PROCEDURE CRUD_Default___ (
   rec_  IN OUT NOCOPY Bc_Repair_Type_Rec );

PROCEDURE CRUD_Default___ (
   key_  IN     Bc_Repair_Line_Action_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2 );

PROCEDURE CRUD_Default___ (
   rec_  IN OUT NOCOPY Bc_Repair_Line_Action_Rec );

PROCEDURE CRUD_Default_Copy___ (
   objid_  IN  VARCHAR2,
   key_    IN  Bc_Repair_Type_Key,
   values_ IN  Copy_Values_Rec,
   attr_   OUT VARCHAR2,
   info_   OUT VARCHAR2 );

PROCEDURE CRUD_Default_Copy___ (
   rec_  IN OUT NOCOPY Bc_Repair_Type_Rec );

PROCEDURE CRUD_Default_Copy___ (
   objid_  IN  VARCHAR2,
   key_    IN  Bc_Repair_Line_Action_Key,
   values_ IN  Copy_Values_Rec,
   attr_   OUT VARCHAR2,
   info_   OUT VARCHAR2 );

PROCEDURE CRUD_Default_Copy___ (
   rec_  IN OUT NOCOPY Bc_Repair_Line_Action_Rec );

PROCEDURE CRUD_Create___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Repair_Type_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE CRUD_Create___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Repair_Line_Action_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE CRUD_Update___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Repair_Type_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE CRUD_Update___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Repair_Line_Action_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE CRUD_Delete___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Type_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE CRUD_Delete___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Line_Action_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

-----------------------------------------------------------------------------
-------------------- PRIVATE METHODS FOR BC REPAIR TYPE ---------------------
-----------------------------------------------------------------------------

FUNCTION CRUD_Default(attr_ IN VARCHAR2 DEFAULT NULL, bc_repair_type## IN VARCHAR2 ) RETURN Entity_Small_Drr PIPELINED
IS
   ret_ Entity_Small_Dec;
   key_ Bc_Repair_Type_Key;
BEGIN
   Log_SYS.Init_Method('Bc_Rco_General_Data_Handling_SVC', 'CRUD_Default');
   ret_.attr := attr_;
   CRUD_Default___(key_, ret_.attr, ret_.info);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000) := Client_SYS.Get_All_Info;
         objid_     VARCHAR2(4000) := Get_Objid_From_Etag___(ret_.etag);
         attr_cf_   VARCHAR2(4000) := attr_;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Repair_Type_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, attr_cf_, '', 'PREPARE', 'P');
         ret_.attr := ret_.attr || attr_cf_;
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   PIPE ROW (ret_);
END CRUD_Default;



--@IgnoreMissingSysinit
FUNCTION CRUD_Default_Copy(values_ IN Copy_Values_Rec, bc_repair_type## IN VARCHAR2 ) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Type_Key;
   objid_  VARCHAR2(10) := NULL;
BEGIN
   Log_SYS.Init_Method('Bc_Rco_General_Data_Handling_SVC', 'CRUD_Default_Copy');
   CRUD_Default_Copy___(objid_, key_, values_, ret_.attr, ret_.info);
   RETURN ret_;
END CRUD_Default_Copy;


--@IgnoreMissingSysinit
FUNCTION CRUD_Default_Copy(etag_ IN VARCHAR2, repair_type_ IN VARCHAR2, values_ IN Copy_Values_Rec, bc_repair_type## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Type_Key;
   objid_  VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
BEGIN
   Log_SYS.Init_Method('Bc_Rco_General_Data_Handling_SVC', 'CRUD_Default_Copy');
   key_.repair_type := repair_type_;
   CRUD_Default_Copy___(objid_, key_, values_, ret_.attr, ret_.info);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000) := Client_SYS.Get_All_Info;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Repair_Type_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, ret_.attr, '', 'COPY', 'D');
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   RETURN ret_;
END CRUD_Default_Copy;


FUNCTION CRUD_Create(attr_ IN VARCHAR2, action_ IN VARCHAR2, bc_repair_type## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Type_Key;
BEGIN
   General_SYS.Init_Projection_Method(Bc_Rco_General_Data_Handling_SVC.lu_name_, 'Bc_Rco_General_Data_Handling_SVC', 'CRUD_Create');
   Log_SYS.Init_Method('Bc_Rco_General_Data_Handling_SVC', 'CRUD_Create');
   ret_.attr := attr_;
   CRUD_Create___(ret_.etag, key_, ret_.attr, ret_.info, action_);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000)  := Client_SYS.Get_All_Info;
         objid_     VARCHAR2(4000)  := Get_Objid_From_Etag___(ret_.etag);
         attr_cf_   VARCHAR2(32000) := attr_;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Repair_Type_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, attr_cf_, '', action_, 'C');
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   Client_SYS.Set_Item_Value('REPAIR_TYPE', key_.repair_type, ret_.attr);
   return ret_;
END CRUD_Create;


FUNCTION CRUD_Update(etag_ IN VARCHAR2, repair_type_ IN VARCHAR2, attr_ IN VARCHAR2, action$_ IN VARCHAR2, bc_repair_type## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Type_Key;
BEGIN
   General_SYS.Init_Projection_Method(Bc_Rco_General_Data_Handling_SVC.lu_name_, 'Bc_Rco_General_Data_Handling_SVC', 'CRUD_Update');
   Log_SYS.Init_Method('Bc_Rco_General_Data_Handling_SVC', 'CRUD_Update');
   ret_.etag := etag_;
   ret_.attr := attr_;
   key_.repair_type := repair_type_;
   CRUD_Update___(ret_.etag, key_, ret_.attr, ret_.info, action$_);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000)  := Client_SYS.Get_All_Info;
         objid_     VARCHAR2(4000)  := Get_Objid_From_Etag___(ret_.etag);
         attr_cf_   VARCHAR2(32000) := attr_;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Repair_Type_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, attr_cf_, '', action$_, 'U');
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   Client_SYS.Set_Item_Value('REPAIR_TYPE', key_.repair_type, ret_.attr);
   return ret_;
END CRUD_Update;


FUNCTION CRUD_Delete(etag_ IN VARCHAR2, repair_type_ IN VARCHAR2, action$_ IN VARCHAR2, bc_repair_type## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Type_Key;
BEGIN
   General_SYS.Init_Projection_Method(Bc_Rco_General_Data_Handling_SVC.lu_name_, 'Bc_Rco_General_Data_Handling_SVC', 'CRUD_Delete');
   Log_SYS.Init_Method('Bc_Rco_General_Data_Handling_SVC', 'CRUD_Delete');
   ret_.etag := etag_;
   key_.repair_type := repair_type_;
   CRUD_Delete___(ret_.etag, key_, ret_.info, action$_);
   return ret_;
END CRUD_Delete;


PROCEDURE Add_To_Attr_From_Rec___ (
   rec_  IN     Bc_Repair_Type_Rec,
   attr_ IN OUT NOCOPY VARCHAR2 )
IS
BEGIN
   IF (rec_.objgrants IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('OBJGRANTS', rec_.objgrants, attr_);
   END IF;
   IF (rec_.repair_type IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('REPAIR_TYPE', rec_.repair_type, attr_);
   END IF;
   IF (rec_.description IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('DESCRIPTION', rec_.description, attr_);
   END IF;
END Add_To_Attr_From_Rec___;


PROCEDURE Add_To_Rec_From_Attr___ (
   attr_ IN     VARCHAR2,
   rec_  IN OUT NOCOPY Bc_Repair_Type_Rec )
IS
BEGIN
   IF (Client_SYS.Item_Exist('OBJGRANTS', attr_)) THEN
      rec_.objgrants := Client_SYS.Get_Item_Value('OBJGRANTS', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('REPAIR_TYPE', attr_)) THEN
      rec_.repair_type := Client_SYS.Get_Item_Value('REPAIR_TYPE', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('DESCRIPTION', attr_)) THEN
      rec_.description := Client_SYS.Get_Item_Value('DESCRIPTION', attr_);
   END IF;
END Add_To_Rec_From_Attr___;


PROCEDURE Add_Keys_To_Rec_From_Attr___ (
   attr_ IN  VARCHAR2,
   rec_ IN OUT NOCOPY Bc_Repair_Type_Rec )
IS
BEGIN
   IF (Client_SYS.Item_Exist('REPAIR_TYPE', attr_)) THEN
      rec_.repair_type := Client_SYS.Get_Item_Value('REPAIR_TYPE', attr_);
   END IF;
END Add_Keys_To_Rec_From_Attr___;


FUNCTION Add_To_Rec_From_Default_Copy_Rec___(
   default_copy_rec_ IN     Bc_Repair_Type_Default_Copy_Rec) RETURN Bc_Repair_Type_Rec
IS
   rec_ Bc_Repair_Type_Rec;
BEGIN
   rec_.objgrants := default_copy_rec_.objgrants;
   rec_.repair_type := default_copy_rec_.repair_type;
   rec_.description := default_copy_rec_.description;
   RETURN rec_;
END Add_To_Rec_From_Default_Copy_Rec___;


FUNCTION Get_Record_By_Objid___ (
   objid_ IN VARCHAR2,
   bc_repair_type## IN VARCHAR2 ) RETURN Bc_Repair_Type_Rec
IS
   default_copy_rec_ Bc_Repair_Type_Default_Copy_Rec;
   rec_ Bc_Repair_Type_Rec;
BEGIN
   SELECT
      NULL objgrants,
      repair_type repair_type,
      description description   INTO default_copy_rec_
   FROM BC_REPAIR_TYPE
   WHERE
    objid = objid_;

   rec_ := Add_To_Rec_From_Default_Copy_Rec___(default_copy_rec_);
   RETURN rec_;
EXCEPTION
   WHEN NO_DATA_FOUND THEN
      Error_SYS.Record_Not_Exist(lu_name_);
END Get_Record_By_Objid___;


PROCEDURE Get_Objid_Objversion___ (
   objid_         OUT VARCHAR2,
   objversion_    OUT VARCHAR2,
   key_        IN     Bc_Repair_Type_Key )
IS
BEGIN
   SELECT objid, objversion
      INTO  objid_, objversion_
      FROM  BC_REPAIR_TYPE
      WHERE repair_type = key_.repair_type;
EXCEPTION
   WHEN NO_DATA_FOUND THEN
      Error_SYS.Odp_Record_Not_Exist(Bc_Repair_Type_API.lu_name_);
END Get_Objid_Objversion___;


PROCEDURE CRUD_Default___ (
   key_  IN     Bc_Repair_Type_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2 )
IS
   rec_        Bc_Repair_Type_Rec;
   objid_      VARCHAR2(2000);
   objversion_ VARCHAR2(2000);
BEGIN
   Bc_Repair_Type_API.New__(info_, objid_, objversion_, attr_, 'PREPARE');
   Add_To_Rec_From_Attr___(attr_, rec_);
   CRUD_Default___(rec_);
   Add_To_Attr_From_Rec___(rec_, attr_);
END CRUD_Default___;


PROCEDURE CRUD_Default___ (
   rec_  IN OUT NOCOPY Bc_Repair_Type_Rec )
IS
BEGIN
   NULL;
END CRUD_Default___;


PROCEDURE CRUD_Default_Copy___ (
   rec_  IN OUT NOCOPY Bc_Repair_Type_Rec )
IS
BEGIN
   NULL;
END CRUD_Default_Copy___;


PROCEDURE CRUD_Create___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Repair_Type_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_      VARCHAR2(2000);
   objversion_ VARCHAR2(2000);
BEGIN
   Bc_Repair_Type_API.New__(info_, objid_, objversion_, attr_, action_);
   IF (action_ = 'DO') THEN
   etag_ := Get_Etag___(objid_, objversion_);
   SELECT repair_type
      INTO key_.repair_type
      FROM BC_REPAIR_TYPE
      WHERE objid = objid_;
   END IF;
END CRUD_Create___;


PROCEDURE CRUD_Update___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Repair_Type_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*' ) THEN
      objid_ := objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Bc_Repair_Type_API.Modify__(info_, objid_, objversion_, attr_, action_);
   etag_ := Get_Etag___(objid_, objversion_);
END CRUD_Update___;


PROCEDURE CRUD_Delete___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Type_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*' ) THEN
      objid_ := objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Bc_Repair_Type_API.Remove__(info_, objid_, objversion_, action_);
   etag_ := NULL;
END CRUD_Delete___;

-----------------------------------------------------------------------------
-------------------- PRIVATE METHODS FOR BC REPAIR LINE ACTION --------------
-----------------------------------------------------------------------------

FUNCTION CRUD_Default(attr_ IN VARCHAR2 DEFAULT NULL, bc_repair_line_action## IN VARCHAR2 ) RETURN Entity_Small_Drr PIPELINED
IS
   ret_ Entity_Small_Dec;
   key_ Bc_Repair_Line_Action_Key;
BEGIN
   Log_SYS.Init_Method('Bc_Rco_General_Data_Handling_SVC', 'CRUD_Default');
   ret_.attr := attr_;
   CRUD_Default___(key_, ret_.attr, ret_.info);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000) := Client_SYS.Get_All_Info;
         objid_     VARCHAR2(4000) := Get_Objid_From_Etag___(ret_.etag);
         attr_cf_   VARCHAR2(4000) := attr_;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Repair_Line_Action_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, attr_cf_, '', 'PREPARE', 'P');
         ret_.attr := ret_.attr || attr_cf_;
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   PIPE ROW (ret_);
END CRUD_Default;



--@IgnoreMissingSysinit
FUNCTION CRUD_Default_Copy(values_ IN Copy_Values_Rec, bc_repair_line_action## IN VARCHAR2 ) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Line_Action_Key;
   objid_  VARCHAR2(10) := NULL;
BEGIN
   Log_SYS.Init_Method('Bc_Rco_General_Data_Handling_SVC', 'CRUD_Default_Copy');
   CRUD_Default_Copy___(objid_, key_, values_, ret_.attr, ret_.info);
   RETURN ret_;
END CRUD_Default_Copy;


--@IgnoreMissingSysinit
FUNCTION CRUD_Default_Copy(etag_ IN VARCHAR2, repair_line_action_ IN VARCHAR2, values_ IN Copy_Values_Rec, bc_repair_line_action## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Line_Action_Key;
   objid_  VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
BEGIN
   Log_SYS.Init_Method('Bc_Rco_General_Data_Handling_SVC', 'CRUD_Default_Copy');
   key_.repair_line_action := repair_line_action_;
   CRUD_Default_Copy___(objid_, key_, values_, ret_.attr, ret_.info);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000) := Client_SYS.Get_All_Info;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Repair_Line_Action_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, ret_.attr, '', 'COPY', 'D');
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   RETURN ret_;
END CRUD_Default_Copy;


FUNCTION CRUD_Create(attr_ IN VARCHAR2, action_ IN VARCHAR2, bc_repair_line_action## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Line_Action_Key;
BEGIN
   General_SYS.Init_Projection_Method(Bc_Rco_General_Data_Handling_SVC.lu_name_, 'Bc_Rco_General_Data_Handling_SVC', 'CRUD_Create');
   Log_SYS.Init_Method('Bc_Rco_General_Data_Handling_SVC', 'CRUD_Create');
   ret_.attr := attr_;
   CRUD_Create___(ret_.etag, key_, ret_.attr, ret_.info, action_);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000)  := Client_SYS.Get_All_Info;
         objid_     VARCHAR2(4000)  := Get_Objid_From_Etag___(ret_.etag);
         attr_cf_   VARCHAR2(32000) := attr_;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Repair_Line_Action_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, attr_cf_, '', action_, 'C');
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   Client_SYS.Set_Item_Value('REPAIR_LINE_ACTION', key_.repair_line_action, ret_.attr);
   return ret_;
END CRUD_Create;


FUNCTION CRUD_Update(etag_ IN VARCHAR2, repair_line_action_ IN VARCHAR2, attr_ IN VARCHAR2, action$_ IN VARCHAR2, bc_repair_line_action## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Line_Action_Key;
BEGIN
   General_SYS.Init_Projection_Method(Bc_Rco_General_Data_Handling_SVC.lu_name_, 'Bc_Rco_General_Data_Handling_SVC', 'CRUD_Update');
   Log_SYS.Init_Method('Bc_Rco_General_Data_Handling_SVC', 'CRUD_Update');
   ret_.etag := etag_;
   ret_.attr := attr_;
   key_.repair_line_action := repair_line_action_;
   CRUD_Update___(ret_.etag, key_, ret_.attr, ret_.info, action$_);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000)  := Client_SYS.Get_All_Info;
         objid_     VARCHAR2(4000)  := Get_Objid_From_Etag___(ret_.etag);
         attr_cf_   VARCHAR2(32000) := attr_;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Repair_Line_Action_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, attr_cf_, '', action$_, 'U');
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   Client_SYS.Set_Item_Value('REPAIR_LINE_ACTION', key_.repair_line_action, ret_.attr);
   return ret_;
END CRUD_Update;


FUNCTION CRUD_Delete(etag_ IN VARCHAR2, repair_line_action_ IN VARCHAR2, action$_ IN VARCHAR2, bc_repair_line_action## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Line_Action_Key;
BEGIN
   General_SYS.Init_Projection_Method(Bc_Rco_General_Data_Handling_SVC.lu_name_, 'Bc_Rco_General_Data_Handling_SVC', 'CRUD_Delete');
   Log_SYS.Init_Method('Bc_Rco_General_Data_Handling_SVC', 'CRUD_Delete');
   ret_.etag := etag_;
   key_.repair_line_action := repair_line_action_;
   CRUD_Delete___(ret_.etag, key_, ret_.info, action$_);
   return ret_;
END CRUD_Delete;


PROCEDURE Add_To_Attr_From_Rec___ (
   rec_  IN     Bc_Repair_Line_Action_Rec,
   attr_ IN OUT NOCOPY VARCHAR2 )
IS
BEGIN
   IF (rec_.objgrants IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('OBJGRANTS', rec_.objgrants, attr_);
   END IF;
   IF (rec_.repair_line_action IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('REPAIR_LINE_ACTION', rec_.repair_line_action, attr_);
   END IF;
   IF (rec_.contract IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('CONTRACT', rec_.contract, attr_);
   END IF;
   IF (rec_.repair_line_action_desc IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('REPAIR_LINE_ACTION_DESC', rec_.repair_line_action_desc, attr_);
   END IF;
   IF (rec_.action_type IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('ACTION_TYPE_DB', rec_.action_type, attr_);
   END IF;
   IF (rec_.days_before_overdue IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('DAYS_BEFORE_OVERDUE', rec_.days_before_overdue, attr_);
   END IF;
END Add_To_Attr_From_Rec___;


PROCEDURE Add_To_Rec_From_Attr___ (
   attr_ IN     VARCHAR2,
   rec_  IN OUT NOCOPY Bc_Repair_Line_Action_Rec )
IS
BEGIN
   IF (Client_SYS.Item_Exist('OBJGRANTS', attr_)) THEN
      rec_.objgrants := Client_SYS.Get_Item_Value('OBJGRANTS', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('REPAIR_LINE_ACTION', attr_)) THEN
      rec_.repair_line_action := Client_SYS.Get_Item_Value('REPAIR_LINE_ACTION', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('CONTRACT', attr_)) THEN
      rec_.contract := Client_SYS.Get_Item_Value('CONTRACT', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('REPAIR_LINE_ACTION_DESC', attr_)) THEN
      rec_.repair_line_action_desc := Client_SYS.Get_Item_Value('REPAIR_LINE_ACTION_DESC', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('ACTION_TYPE_DB', attr_)) THEN
      rec_.action_type := Client_SYS.Get_Item_Value('ACTION_TYPE_DB', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('DAYS_BEFORE_OVERDUE', attr_)) THEN
      rec_.days_before_overdue := Client_SYS.Get_Item_Value('DAYS_BEFORE_OVERDUE', attr_);
   END IF;
END Add_To_Rec_From_Attr___;


PROCEDURE Add_Keys_To_Rec_From_Attr___ (
   attr_ IN  VARCHAR2,
   rec_ IN OUT NOCOPY Bc_Repair_Line_Action_Rec )
IS
BEGIN
   IF (Client_SYS.Item_Exist('REPAIR_LINE_ACTION', attr_)) THEN
      rec_.repair_line_action := Client_SYS.Get_Item_Value('REPAIR_LINE_ACTION', attr_);
   END IF;
END Add_Keys_To_Rec_From_Attr___;


FUNCTION Add_To_Rec_From_Default_Copy_Rec___(
   default_copy_rec_ IN     Bc_Repair_Line_Action_Default_Copy_Rec) RETURN Bc_Repair_Line_Action_Rec
IS
   rec_ Bc_Repair_Line_Action_Rec;
BEGIN
   rec_.objgrants := default_copy_rec_.objgrants;
   rec_.repair_line_action := default_copy_rec_.repair_line_action;
   rec_.contract := default_copy_rec_.contract;
   rec_.repair_line_action_desc := default_copy_rec_.repair_line_action_desc;
   rec_.action_type := default_copy_rec_.action_type;
   rec_.days_before_overdue := default_copy_rec_.days_before_overdue;
   RETURN rec_;
END Add_To_Rec_From_Default_Copy_Rec___;


FUNCTION Get_Record_By_Objid___ (
   objid_ IN VARCHAR2,
   bc_repair_line_action## IN VARCHAR2 ) RETURN Bc_Repair_Line_Action_Rec
IS
   default_copy_rec_ Bc_Repair_Line_Action_Default_Copy_Rec;
   rec_ Bc_Repair_Line_Action_Rec;
BEGIN
   SELECT
      NULL objgrants,
      repair_line_action repair_line_action,
      contract contract,
      repair_line_action_desc repair_line_action_desc,
      action_type_db action_type,
      days_before_overdue days_before_overdue   INTO default_copy_rec_
   FROM BC_REPAIR_LINE_ACTION
   WHERE
    objid = objid_;

   rec_ := Add_To_Rec_From_Default_Copy_Rec___(default_copy_rec_);
   RETURN rec_;
EXCEPTION
   WHEN NO_DATA_FOUND THEN
      Error_SYS.Record_Not_Exist(lu_name_);
END Get_Record_By_Objid___;


PROCEDURE Get_Objid_Objversion___ (
   objid_         OUT VARCHAR2,
   objversion_    OUT VARCHAR2,
   key_        IN     Bc_Repair_Line_Action_Key )
IS
BEGIN
   SELECT objid, objversion
      INTO  objid_, objversion_
      FROM  BC_REPAIR_LINE_ACTION
      WHERE repair_line_action = key_.repair_line_action;
EXCEPTION
   WHEN NO_DATA_FOUND THEN
      Error_SYS.Odp_Record_Not_Exist(Bc_Repair_Line_Action_API.lu_name_);
END Get_Objid_Objversion___;


PROCEDURE CRUD_Default___ (
   key_  IN     Bc_Repair_Line_Action_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2 )
IS
   rec_        Bc_Repair_Line_Action_Rec;
   objid_      VARCHAR2(2000);
   objversion_ VARCHAR2(2000);
BEGIN
   Bc_Repair_Line_Action_API.New__(info_, objid_, objversion_, attr_, 'PREPARE');
   IF (Client_SYS.Item_Exist('ACTION_TYPE', attr_)) THEN
      IF (NOT Client_SYS.Item_Exist('ACTION_TYPE_DB', attr_)) THEN
         Client_SYS.Add_To_Attr('ACTION_TYPE_DB', Bc_Line_Action_Type_API.Encode(Client_SYS.Get_Item_Value('ACTION_TYPE', attr_)), attr_);
      END IF;
      attr_ := Client_SYS.Remove_Attr('ACTION_TYPE', attr_);
   END IF;
   Add_To_Rec_From_Attr___(attr_, rec_);
   CRUD_Default___(rec_);
   Add_To_Attr_From_Rec___(rec_, attr_);
END CRUD_Default___;


PROCEDURE CRUD_Default___ (
   rec_  IN OUT NOCOPY Bc_Repair_Line_Action_Rec )
IS
BEGIN
   NULL;
END CRUD_Default___;


PROCEDURE CRUD_Default_Copy___ (
   rec_  IN OUT NOCOPY Bc_Repair_Line_Action_Rec )
IS
BEGIN
   NULL;
END CRUD_Default_Copy___;


PROCEDURE CRUD_Create___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Repair_Line_Action_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_      VARCHAR2(2000);
   objversion_ VARCHAR2(2000);
BEGIN
   Bc_Repair_Line_Action_API.New__(info_, objid_, objversion_, attr_, action_);
   IF (action_ = 'DO') THEN
   etag_ := Get_Etag___(objid_, objversion_);
   SELECT repair_line_action
      INTO key_.repair_line_action
      FROM BC_REPAIR_LINE_ACTION
      WHERE objid = objid_;
   END IF;
END CRUD_Create___;


PROCEDURE CRUD_Update___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Repair_Line_Action_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*' ) THEN
      objid_ := objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Bc_Repair_Line_Action_API.Modify__(info_, objid_, objversion_, attr_, action_);
   etag_ := Get_Etag___(objid_, objversion_);
END CRUD_Update___;


PROCEDURE CRUD_Delete___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Line_Action_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*' ) THEN
      objid_ := objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Bc_Repair_Line_Action_API.Remove__(info_, objid_, objversion_, action_);
   etag_ := NULL;
END CRUD_Delete___;

-----------------------------------------------------------------------------
-------------------- HELPER METHODS -----------------------------------------
-----------------------------------------------------------------------------

FUNCTION Get_Objid_From_Etag___ (
   etag_ IN VARCHAR2 ) RETURN VARCHAR2
IS
   delim_pos_ INTEGER := instr(etag_, ':');
BEGIN
   RETURN substr(etag_, 4, delim_pos_-4);
END Get_Objid_From_Etag___;


FUNCTION Get_Objversion_From_Etag___ (
   etag_ IN VARCHAR2 ) RETURN VARCHAR2
IS
   delim_pos_ INTEGER := instr(etag_, ':');
BEGIN
   RETURN substr(etag_, delim_pos_+1, length(etag_)-delim_pos_-1);
END Get_Objversion_From_Etag___;


FUNCTION Get_Etag___ (
   objid_      IN VARCHAR2,
   objversion_ IN VARCHAR2 ) RETURN VARCHAR2
IS
BEGIN
   RETURN 'W/"'||objid_||':'||objversion_||'"';
END Get_Etag___;


FUNCTION Combine_Value_Unit___ (
   value_ IN VARCHAR2,
   unit_  IN VARCHAR2 ) RETURN VARCHAR2
IS
BEGIN
   IF (value_ IS NULL) THEN
      RETURN NULL;
   ELSE
      RETURN value_||'|'||unit_;
   END IF;
END Combine_Value_Unit___;

-----------------------------------------------------------------------------
-------------------- CONVERSION METHODS -------------------------------------
-----------------------------------------------------------------------------

FUNCTION To_Boolean_Arr____ (
   arr_ IN Text_Arr ) RETURN Boolean_Arr
IS
   ret_ Boolean_Arr := Boolean_Arr();
BEGIN
   IF (arr_.count > 0) THEN
      FOR i IN arr_.first .. arr_.last LOOP
      ret_.extend;
      ret_(ret_.last) := Fndcg_Projection_Svc_Util_API.To_Boolean(arr_(i));
      END LOOP;
   END IF;
   RETURN ret_;
END To_Boolean_Arr____;

-----------------------------------------------------------------------------
-------------------- TOP ----------------------------------------------------
-----------------------------------------------------------------------------

--@IgnoreMissingSysinit
PROCEDURE CRUD_Default_Copy___ (
   objid_  IN  VARCHAR2,
   key_    IN  Bc_Repair_Type_Key,
   values_ IN  Copy_Values_Rec,
   attr_   OUT VARCHAR2,
   info_   OUT VARCHAR2 )
IS
   
   PROCEDURE Base (
      objid_  IN     VARCHAR2,
      key_    IN     Bc_Repair_Type_Key,
      values_ IN     Copy_Values_Rec,
      attr_      OUT VARCHAR2,
      info_      OUT VARCHAR2 )
   IS
      rec_            Bc_Repair_Type_Rec;
      default_dec_    Entity_Small_Dec;
   BEGIN
      IF objid_ IS NOT NULL THEN
         rec_ := Get_Record_By_Objid___(objid_, bc_repair_type## => '');
      END IF;
      Add_To_Rec_From_Attr___(values_.modified_source, rec_);
      SELECT * INTO default_dec_ FROM TABLE(Bc_Rco_General_Data_Handling_SVC.CRUD_Default('', bc_repair_type## => ''));
      Client_SYS.Merge_Info(default_dec_.info);
      Add_Keys_To_Rec_From_Attr___(default_dec_.attr, rec_);
      attr_ := default_dec_.attr;
      CRUD_Default_Copy___(rec_);
      Add_To_Attr_From_Rec___(rec_, attr_);
      info_ := Client_SYS.Get_All_Info();
   END Base;

   PROCEDURE Cust_Projection_BcRcoGeneralDataHandling (
      objid_  IN  VARCHAR2,
      key_    IN  Bc_Repair_Type_Key,
      values_ IN  Copy_Values_Rec,
      attr_   OUT VARCHAR2,
      info_   OUT VARCHAR2 )
   IS
   BEGIN
      
      Base(objid_, key_, values_, attr_, info_);
      
      Client_SYS.Set_Item_Value('REPAIR_TYPE'  , '',   attr_);
   END Cust_Projection_BcRcoGeneralDataHandling;

BEGIN
   Cust_Projection_BcRcoGeneralDataHandling(objid_, key_, values_, attr_, info_);
END CRUD_Default_Copy___;


--@IgnoreMissingSysinit
PROCEDURE CRUD_Default_Copy___ (
   objid_  IN  VARCHAR2,
   key_    IN  Bc_Repair_Line_Action_Key,
   values_ IN  Copy_Values_Rec,
   attr_   OUT VARCHAR2,
   info_   OUT VARCHAR2 )
IS
   
   PROCEDURE Base (
      objid_  IN     VARCHAR2,
      key_    IN     Bc_Repair_Line_Action_Key,
      values_ IN     Copy_Values_Rec,
      attr_      OUT VARCHAR2,
      info_      OUT VARCHAR2 )
   IS
      rec_            Bc_Repair_Line_Action_Rec;
      default_dec_    Entity_Small_Dec;
   BEGIN
      IF objid_ IS NOT NULL THEN
         rec_ := Get_Record_By_Objid___(objid_, bc_repair_line_action## => '');
      END IF;
      Add_To_Rec_From_Attr___(values_.modified_source, rec_);
      SELECT * INTO default_dec_ FROM TABLE(Bc_Rco_General_Data_Handling_SVC.CRUD_Default('', bc_repair_line_action## => ''));
      Client_SYS.Merge_Info(default_dec_.info);
      Add_Keys_To_Rec_From_Attr___(default_dec_.attr, rec_);
      attr_ := default_dec_.attr;
      CRUD_Default_Copy___(rec_);
      Add_To_Attr_From_Rec___(rec_, attr_);
      info_ := Client_SYS.Get_All_Info();
   END Base;

   PROCEDURE Cust_Projection_BcRcoGeneralDataHandling (
      objid_  IN  VARCHAR2,
      key_    IN  Bc_Repair_Line_Action_Key,
      values_ IN  Copy_Values_Rec,
      attr_   OUT VARCHAR2,
      info_   OUT VARCHAR2 )
   IS
   BEGIN
      
      Base(objid_, key_, values_, attr_, info_);
      
      Client_SYS.Set_Item_Value('REPAIR_LINE_ACTION'  , '',   attr_);
   END Cust_Projection_BcRcoGeneralDataHandling;

BEGIN
   Cust_Projection_BcRcoGeneralDataHandling(objid_, key_, values_, attr_, info_);
END CRUD_Default_Copy___;

END Bc_Rco_General_Data_Handling_SVC;
-- [END IFS COMPLETE BLOCK]
/
SHOW ERROR

GRANT EXECUTE ON Bc_Rco_General_Data_Handling_SVC TO IFSSYS
/

-- [IFS COMPLETE BLOCK BEGINEND]
DECLARE
   projection_ VARCHAR2(250) := 'BcRcoGeneralDataHandling';
BEGIN
   Fnd_Projection_API.Create_Or_Replace(projection_, description_ => 'Initial Mini Project Develop', categories_ => 'Users', component_ => 'BCRCO', layer_  => 'Cust', plsql_package_ => 'BC_RCO_GENERAL_DATA_HANDLING_SVC', api_class_ => '', deprecated_ => 'FALSE');
   Fnd_Proj_Entity_API.Create_Or_Replace(projection_, 'BcRepairType', 'CRUD', 'BC_REPAIR_TYPE', 'BcRepairType', 'Main', 'FALSE');
   Fnd_Proj_Entity_API.Create_Or_Replace(projection_, 'BcRepairLineAction', 'CRUD', 'BC_REPAIR_LINE_ACTION', 'BcRepairLineAction', 'Main', 'FALSE');
   Fnd_Proj_Entity_API.Create_Or_Replace(projection_, 'Site', 'R', 'SITE', 'Site', 'Main', 'FALSE');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'Reference_Site', 'Entity', 'Site');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'BcRepairTypeSet', 'Entity', 'BcRepairType');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'BcRepairLineActionSet', 'Entity', 'BcRepairLineAction');
   Fnd_Proj_Large_Attr_Supp_Api.Set_Lob_Max_Size_Modifiable(projection_, false);

   COMMIT;
END;
-- [END IFS COMPLETE BLOCK]
/
