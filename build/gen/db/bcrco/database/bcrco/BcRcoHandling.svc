-----------------------------------------------------------------------------
--
--  Logical unit: BcRcoHandling
--  Type:         Entity
--  Component:    BCRCO
--
--  Template:     3.0
--  Built by:     IFS Developer Studio
--
--  NOTE! Do not edit!! This file is completely generated and will be
--        overwritten next time the corresponding model is saved.
-----------------------------------------------------------------------------


--Storing resulting json metadata in database splitted by indivudual objects
-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   projection_ VARCHAR2(250) := 'BcRcoHandling';
   header_     Model_Design_SYS.Fnd_Model_Design_Rec;
   clob_       CLOB := to_clob(' ');
BEGIN
   header_ := Model_Design_SYS.Prepare_Design_Data_Load('projection', projection_, Model_Design_SYS.SERVER_METADATA,
      'Put some useful description here ...');
   Dbms_Lob.trim(clob_, 0);
   Dbms_Lob.Writeappend(clob_, 2448, '{"projection": {"Name": "BcRcoHandling","Metadata": {"Version": "[#[generate:version]#]","Description": "Put some useful description here ...","Category": ["Users"]},"Container": {"EntitySets": [{"Name": "Reference_BcRepairLine","EntityType": "BcRepairLine"},{"Name": "Reference_BcLogInfo","EntityType": "BcLogInfo"},{"Name": "Reference_CustomerInfo","EntityType": "CustomerInfo"},{"Name": "Reference_CustomerInfoAddress","EntityType": "CustomerInfoAddress"},{"Name": "Lookup_IsoCurrency_EntitySet","EntityType": "Lookup_IsoCurrency_EntityType"},{"Name": "Reference_IsoCurrency","EntityType": "IsoCurrency"},{"Name": "Reference_Site","EntityType": "Site"},{"Name": "Reference_CustomerOrder","EntityType": "CustomerOrder"},{"Name": "Reference_FndUser","EntityType": "FndUser"},{"Name": "Reference_BcRepairType","EntityType": "BcRepairType"},{"Name": "Reference_ConditionCode","EntityType": "ConditionCode"},{"Name": "Reference_InventoryPart","EntityType": "InventoryPart"},{"Name": "Reference_BcRepairLineAction","EntityType": "BcRepairLineAction"},{"Name": "Lookup_IsoUnit_EntitySet","EntityType": "Lookup_IsoUnit_EntityType"},{"Name": "Lookup_IsoCountry_EntitySet","EntityType": "Lookup_IsoCountry_EntityType"},{"Name": "BcRepairCenterOrderSet","EntityType": "BcRepairCenterOrder"},{"Name": "BcRepairLineSet","EntityType": "BcRepairLine"},{"Name": "BcLogInfoSet","EntityType": "BcLogInfo"}[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entityset_Metadata:{"Projection": "BcRcoHandling","Lu": ["Site","CustomerOrder","Lookup_IsoCountry","CustomerInfoAddress","ConditionCode","IsoCurrency","BcRepairCenterOrder","FndUser","BcRepairType","BcRepairLine","Lookup_IsoUnit","BcLogInfo","BcRepairLineAction","CustomerInfo","InventoryPart","Lookup_IsoCurrency"]}]#]],"Singletons": [],"Actions": [{"Name": "CreateNewCustOrder","Parameters": [{"Name": "CustomerId","DataType": "Text","Collection": false,"Nullable": true},{"Name": "RcoNo","DataType": "Number","Collection": false,"Nullable": true},{"Name": "Contract","DataType": "Text","Collection": false,"Nullable": true},{"Name": "Currency","DataType": "Text","Collection": false,"Nullable": true},{"Name": "DeliveryAddressId","DataType": "Text","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Do_Create_New_Cust_Order(:CustomerId, :RcoNo, :Contract, :Currency, :DeliveryAddressId, unbound## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Empty_Arr","Bind": [');
   Dbms_Lob.Writeappend(clob_, 2442, '{"Kind": "Parameter","Name": "CustomerId","ImplementationType": "VARCHAR2"},{"Kind": "Parameter","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Parameter","Name": "Contract","ImplementationType": "VARCHAR2"},{"Kind": "Parameter","Name": "Currency","ImplementationType": "VARCHAR2"},{"Kind": "Parameter","Name": "DeliveryAddressId","ImplementationType": "VARCHAR2"}]}}},{"Name": "RefreshPage","DataType": "Text","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Do_Refresh_Page(unbound## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Text_Arr","Bind": []}}}[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Action_Metadata:{"Projection":"BcRcoHandling"}]#]],"Functions": [{"Name": "GetDefInfologPart","DataType": "Text","Collection": false,"Parameters": [{"Name": "RcoLine","DataType": "Number","Collection": false,"Nullable": true},{"Name": "RcoNo","DataType": "Number","Collection": false,"Nullable": true}],"Execute": {"SQL": {"From": "TABLE(Bc_Rco_Handling_SVC.Rd_Get_Def_Infolog_Part(:RcoLine, :RcoNo, unbound## => ''''))","Bind": [{"Kind": "Parameter","Name": "RcoLine","ImplementationType": "NUMBER"},{"Kind": "Parameter","Name": "RcoNo","ImplementationType": "NUMBER"}]}}},{"Name": "GetDefInfologPartSite","DataType": "Text","Collection": false,"Parameters": [{"Name": "RcoLine","DataType": "Number","Collection": false,"Nullable": true},{"Name": "RcoNo","DataType": "Number","Collection": false,"Nullable": true}],"Execute": {"SQL": {"From": "TABLE(Bc_Rco_Handling_SVC.Rd_Get_Def_Infolog_Part_Site(:RcoLine, :RcoNo, unbound## => ''''))","Bind": [{"Kind": "Parameter","Name": "RcoLine","ImplementationType": "NUMBER"},{"Kind": "Parameter","Name": "RcoNo","ImplementationType": "NUMBER"}]}}},{"Name": "GetDefaultAddress","DataType": "Text","Collection": false,"Parameters": [{"Name": "CustomerId","DataType": "Text","Collection": false,"Nullable": true},{"Name": "AddressType","DataType": "Text","Collection": false,"Nullable": true}],"Execute": {"SQL": {"From": "TABLE(Bc_Rco_Handling_SVC.Rd_Get_Default_Address(:CustomerId, :AddressType, unbound## => ''''))","Bind": [{"Kind": "Parameter","Name": "CustomerId","ImplementationType": "VARCHAR2"},{"Kind": "Parameter","Name": "AddressType","ImplementationType": "VARCHAR2"}]}}},{"Name": "GetOwnerId","DataType": "Text","Collection": false,"Parameters": [{"Name": "RcoNo","DataType": "Number","Collection": false,"Nullable": true}],"Execute": {');
   Dbms_Lob.Writeappend(clob_, 2448, '"SQL": {"From": "TABLE(Bc_Rco_Handling_SVC.Rd_Get_Owner_Id(:RcoNo, unbound## => ''''))","Bind": [{"Kind": "Parameter","Name": "RcoNo","ImplementationType": "NUMBER"}]}}}]},"Enumerations": [{"Name": "BcLineActionType","Values": [{"Identifier": "OnHold","DbValue": "ON_HOLD"},{"Identifier": "Released","DbValue": "RELEASED"}]},{"Name": "PutawayZoneRefillOption","Values": [{"Identifier": "NoRefill","DbValue": "NO_REFILL"},{"Identifier": "FromPutawayZones","DbValue": "FROM_PUTAWAY_ZONES"},{"Identifier": "FromAllLocations","DbValue": "FROM_ALL_LOCATIONS"}]},{"Name": "InvPartFrequencyClass","Values": [{"Identifier": "VerySlowMover","DbValue": "VERY SLOW MOVER"},{"Identifier": "SlowMover","DbValue": "SLOW MOVER"},{"Identifier": "MediumMover","DbValue": "MEDIUM MOVER"},{"Identifier": "FastMover","DbValue": "FAST MOVER"}]},{"Name": "InvPartLifecycleStage","Values": [{"Identifier": "Development","DbValue": "DEVELOPMENT"},{"Identifier": "Introduction","DbValue": "INTRODUCTION"},{"Identifier": "Mature","DbValue": "MATURE"},{"Identifier": "Decline","DbValue": "DECLINE"},{"Identifier": "Expired","DbValue": "EXPIRED"}]},{"Name": "DopNetting","Values": [{"Identifier": "Netting","DbValue": "NETT"},{"Identifier": "NoNetting","DbValue": "NONET"},{"Identifier": "AutoNetting","DbValue": "AUTONETT"}]},{"Name": "CapabilityCheckAllocate","Values": [{"Identifier": "ReserveAndAllocate","DbValue": "RESERVE AND ALLOCATE"},{"Identifier": "AllocateOnly","DbValue": "ALLOCATE ONLY"},{"Identifier": "NeitherReserveNorAlloc","DbValue": "NEITHER RESERVE NOR ALLOCATE"},{"Identifier": "NoAutomatCapabilityCheck","DbValue": "NO AUTOMATIC CAPABILITY CHECK"}]},{"Name": "CapabilityCheckAllocateSubset1","Values": [{"Identifier": "ReserveAndAllocate","DbValue": "RESERVE AND ALLOCATE"},{"Identifier": "AllocateOnly","DbValue": "ALLOCATE ONLY"},{"Identifier": "NeitherReserveNorAlloc","DbValue": "NEITHER RESERVE NOR ALLOCATE"}]},{"Name": "CapabilityCheckAllocateSubset2","Values": [{"Identifier": "AllocateOnly","DbValue": "ALLOCATE ONLY"},{"Identifier": "NeitherReserveNorAlloc","DbValue": "NEITHER RESERVE NOR ALLOCATE"}]},{"Name": "ExtServiceCostMethod","Values": [{"Identifier": "IncludeServiceCost","DbValue": "INCLUDE SERVICE COST"},{"Identifier": "ExcludeServiceCost","DbValue": "EXCLUDE SERVICE COST"}]},{"Name": "InventoryPartCostLevel","Values": [{"Identifier": "CostPerPart","DbValue": "COST PER PART"},{"Identifier": "CostPerConfiguration","DbValue": "COS');
   Dbms_Lob.Writeappend(clob_, 2450, 'T PER CONFIGURATION"},{"Identifier": "CostPerCondition","DbValue": "COST PER CONDITION"},{"Identifier": "CostPerLotBatch","DbValue": "COST PER LOT BATCH"},{"Identifier": "CostPerSerial","DbValue": "COST PER SERIAL"}]},{"Name": "InvoiceConsideration","Values": [{"Identifier": "IgnoreInvoicePrice","DbValue": "IGNORE INVOICE PRICE"},{"Identifier": "PeriodicWeightedAverage","DbValue": "PERIODIC WEIGHTED AVERAGE"},{"Identifier": "TransactionBased","DbValue": "TRANSACTION BASED"}]},{"Name": "NegativeOnHand","Values": [{"Identifier": "NegativeOnHandAllowed","DbValue": "NEG ONHAND OK"},{"Identifier": "NegativOnHandNotAllowed","DbValue": "NEG ONHAND NOT OK"}]},{"Name": "InventoryValueMethod","Values": [{"Identifier": "WeightedAverage","DbValue": "AV"},{"Identifier": "StandardCost","DbValue": "ST"},{"Identifier": "FirstInFirstOut","DbValue": "FIFO"},{"Identifier": "LastInFirstOut","DbValue": "LIFO"}]},{"Name": "DopConnection","Values": [{"Identifier": "AutomaticDOP","DbValue": "AUT"},{"Identifier": "ManualDOP","DbValue": "MAN"},{"Identifier": "ReleaseDOP","DbValue": "REL"}]},{"Name": "InventoryPartManagement","Values": [{"Identifier": "VendorManagedInventory","DbValue": "VENDOR MANAGED INVENTORY"},{"Identifier": "SystemManagedInventory","DbValue": "SYSTEM MANAGED INVENTORY"}]},{"Name": "InvPartForecastConsum","Values": [{"Identifier": "OnlineConsumption","DbValue": "FORECAST"},{"Identifier": "NoOnlineConsumption","DbValue": "NOFORECAST"}]},{"Name": "InventoryPartShortage","Values": [{"Identifier": "ShortageNotation","DbValue": "Y"},{"Identifier": "NoShortageNotation","DbValue": "N"}]},{"Name": "InventoryPartAvailStat","Values": [{"Identifier": "Changed","DbValue": "CHANGED"},{"Identifier": "Unchanged","DbValue": "UNCHANGED"}]},{"Name": "InventoryPartZeroCost","Values": [{"Identifier": "ZeroCostAllowed","DbValue": "Y"},{"Identifier": "ZeroCostForbidden","DbValue": "N"},{"Identifier": "ZeroCostOnly","DbValue": "O"}]},{"Name": "InventoryPartType","Values": [{"Identifier": "Manufactured","DbValue": "1"},{"Identifier": "ManufacturedRecipe","DbValue": "2"},{"Identifier": "PurchasedRaw","DbValue": "3"},{"Identifier": "Purchased","DbValue": "4"},{"Identifier": "Expense","DbValue": "6"}]},{"Name": "MaterialRequisSupply","Values": [{"Identifier": "InventoryOrder","DbValue": "IO"},{"Identifier": "PurchaseOrder","DbValue": "PO"},{"Identifier": "ProjectInventory","DbValue": "PI"}]},{"Name": "MaterialRequisSupplySubset1","Values":');
   Dbms_Lob.Writeappend(clob_, 2450, ' [{"Identifier": "InventoryOrder","DbValue": "IO"},{"Identifier": "PurchaseOrder","DbValue": "PO"}]},{"Name": "InventoryPartOnhAnalys","Values": [{"Identifier": "MakeAvailabilityCheck","DbValue": "Y"},{"Identifier": "NoAvailabilityCheck","DbValue": "N"}]},{"Name": "CustOrdReservationType","Values": [{"Identifier": "PriorityReservation","DbValue": "Y"},{"Identifier": "NormalReservation","DbValue": "N"}]},{"Name": "InvPartLeadTimeCode","Values": [{"Identifier": "Manufactured","DbValue": "M"},{"Identifier": "Purchased","DbValue": "P"}]},{"Name": "InventoryPartCountType","Values": [{"Identifier": "CyclicCounting","DbValue": "Y"},{"Identifier": "NotCyclicCounting","DbValue": "N"}]},{"Name": "ConditionCodeType","Values": [{"Identifier": "DefaultConditionCode","DbValue": "DEF_COND_CODE"},{"Identifier": "NotDefaultConditionCode","DbValue": "NOT_DEF_COND_CODE"}]},{"Name": "FndUserType","Values": [{"Identifier": "SystemUser","DbValue": "SYSTEM_USER"},{"Identifier": "ServiceUser","DbValue": "SERVICE_USER"},{"Identifier": "EndUser","DbValue": "END_USER"}]},{"Name": "FndUserTypeUsersSubset","Values": [{"Identifier": "ServiceUser","DbValue": "SERVICE_USER"},{"Identifier": "EndUser","DbValue": "END_USER"}]},{"Name": "CustomerOrderBlockType","Values": [{"Identifier": "CreditBlocked","DbValue": "CREDIT_BLOCKED"},{"Identifier": "AdvPayBlocked","DbValue": "ADV_PAY_BLOCKED"},{"Identifier": "ManualBlocked","DbValue": "MANUAL_BLOCKED"},{"Identifier": "NotBlocked","DbValue": "NOT_BLOCKED"}]},{"Name": "TaxPayingParty","Values": [{"Identifier": "NoTax","DbValue": "NO_TAX"},{"Identifier": "Customer","DbValue": "CUSTOMER"},{"Identifier": "Company","DbValue": "COMPANY"}]},{"Name": "DeliveryNoteOptions","Values": [{"Identifier": "ShipmentCustomerOrder","DbValue": "SHIPMENT_CUSTOMER_ORDER"},{"Identifier": "Shipment","DbValue": "SHIPMENT"},{"Identifier": "CustomerOrder","DbValue": "CUSTOMER_ORDER"},{"Identifier": "None","DbValue": "NONE"}]},{"Name": "PickInventoryType","Values": [{"Identifier": "ShipmentInventory","DbValue": "SHIPINV"},{"Identifier": "OrdinaryInventory","DbValue": "ORDINV"}]},{"Name": "ShipmentCreation","Values": [{"Identifier": "NoAutomatic","DbValue": "NO_AUTOMATIC"},{"Identifier": "OrderRelease","DbValue": "ORDER_RELEASE"},{"Identifier": "PickListCreation","DbValue": "PICK_LIST_CREATION"},{"Identifier": "ReportReturn","DbValue": "REPORT_RETURN"}]},{"Name": "ShipmentCreationShipmentOrder","Values": [{"Identifier": "NoA');
   Dbms_Lob.Writeappend(clob_, 2450, 'utomatic","DbValue": "NO_AUTOMATIC"},{"Identifier": "OrderRelease","DbValue": "ORDER_RELEASE"}]},{"Name": "ShipmentCreationCustomerOrder","Values": [{"Identifier": "NoAutomatic","DbValue": "NO_AUTOMATIC"},{"Identifier": "OrderRelease","DbValue": "ORDER_RELEASE"},{"Identifier": "PickListCreation","DbValue": "PICK_LIST_CREATION"}]},{"Name": "ShipmentCreationReceiptReturn","Values": [{"Identifier": "NoAutomatic","DbValue": "NO_AUTOMATIC"},{"Identifier": "ReportReturn","DbValue": "REPORT_RETURN"}]},{"Name": "CustomerBackorderOption","Values": [{"Identifier": "NoPartialDeliveriesAllow","DbValue": "NO PARTIAL DELIVERIES ALLOWED"},{"Identifier": "IncompleteLinesNotAllow","DbValue": "INCOMPLETE LINES NOT ALLOWED"},{"Identifier": "IncompletePkgsNotAllowed","DbValue": "INCOMPLETE PACKAGES NOT ALLOWED"},{"Identifier": "AllowIncompleteLinesPkgs","DbValue": "ALLOW INCOMPLETE LINES AND PACKAGES"}]},{"Name": "IntrastatExempt","Values": [{"Identifier": "Include","DbValue": "INCLUDE"},{"Identifier": "Exempt","DbValue": "EXEMPT"}]},{"Name": "ScheduleAgreementOrder","Values": [{"Identifier": "SchedulingOrder","DbValue": "SCHEDULE"},{"Identifier": "NotSchedulingOrder","DbValue": "NOT SCHEDULE"}]},{"Name": "ServiceManagementConnect","Values": [{"Identifier": "Connected","DbValue": "CONNECTED"},{"Identifier": "NotConnected","DbValue": "NOT CONNECTED"}]},{"Name": "StagedBillingType","Values": [{"Identifier": "StagedBilling","DbValue": "STAGED BILLING"},{"Identifier": "NotStagedBilling","DbValue": "NOT STAGED BILLING"}]},{"Name": "OrderDeliveryType","Values": [{"Identifier": "TransitDelivery","DbValue": "TRANSIT"},{"Identifier": "DirectDelivery","DbValue": "DIRECT"},{"Identifier": "InternalTransitDelivery","DbValue": "INTTRANSIT"},{"Identifier": "InternalDirectDelivery","DbValue": "INTDIRECT"},{"Identifier": "InterSiteDelivery","DbValue": "INTER-SITE"}]},{"Name": "PrintPickList","Values": [{"Identifier": "PrintPicklist","DbValue": "Y"},{"Identifier": "NoPicklist","DbValue": "N"}]},{"Name": "PrintPackList","Values": [{"Identifier": "PrintDeliveryNote","DbValue": "Y"},{"Identifier": "NoDeliveryNote","DbValue": "N"}]},{"Name": "PrintOrderConfirmation","Values": [{"Identifier": "PrintOrderConf","DbValue": "Y"},{"Identifier": "NoOrderConf","DbValue": "N"}]},{"Name": "OrderConfirmationPrinted","Values": [{"Identifier": "Printed","DbValue": "Y"},{"Identifier": "NotPrinted","DbValue": "N"}]},{"Name": "GenYesNo","Values": [{"Identifier": "');
   Dbms_Lob.Writeappend(clob_, 2450, 'Yes","DbValue": "Y"},{"Identifier": "No","DbValue": "N"}]},{"Name": "OutputMediaType","Values": [{"Identifier": "Printout","DbValue": "1"},{"Identifier": "Email","DbValue": "2"},{"Identifier": "MailToFax","DbValue": "3"},{"Identifier": "Xml","DbValue": "4"}]},{"Name": "CustomerCategory","Values": [{"Identifier": "Customer","DbValue": "CUSTOMER"},{"Identifier": "Prospect","DbValue": "PROSPECT"},{"Identifier": "EndCustomer","DbValue": "END_CUSTOMER"}]},{"Name": "CustomerCategoryProspect","Values": [{"Identifier": "Customer","DbValue": "CUSTOMER"},{"Identifier": "Prospect","DbValue": "PROSPECT"}]},{"Name": "CustomerCategoryEndCustomer","Values": [{"Identifier": "Customer","DbValue": "CUSTOMER"},{"Identifier": "EndCustomer","DbValue": "END_CUSTOMER"}]},{"Name": "IdentifierRefValidation","Values": [{"Identifier": "None","DbValue": "NONE"},{"Identifier": "Katakana","DbValue": "KATAKANA"}]},{"Name": "PartyType","Values": [{"Identifier": "Company","DbValue": "COMPANY"},{"Identifier": "Customer","DbValue": "CUSTOMER"},{"Identifier": "Supplier","DbValue": "SUPPLIER"},{"Identifier": "Person","DbValue": "PERSON"},{"Identifier": "Manufacturer","DbValue": "MANUFACTURER"},{"Identifier": "Owner","DbValue": "OWNER"},{"Identifier": "ForwardingAgent","DbValue": "FORWARDER"},{"Identifier": "Employee","DbValue": "EMPLOYEE"}]},{"Name": "FndBoolean","Values": [{"Identifier": "False","DbValue": "FALSE"},{"Identifier": "True","DbValue": "TRUE"}]},{"Name": "BCBillOrWar","Values": [{"Identifier": "Billable","DbValue": "BILLABLE"},{"Identifier": "Warranty","DbValue": "WARRANTY"}]},{"Name": "BcOwnershipCode","Values": [{"Identifier": "CustomerOwned","DbValue": "CUSTOMER_OWNED"},{"Identifier": "CompanyOwned","DbValue": "COMPANY_OWNED"}]},{"Name": "BcRepairCenterOrderState","Values": [{"Identifier": "Planned","DbValue": "Planned"},{"Identifier": "Cancelled","DbValue": "Cancelled"},{"Identifier": "Released","DbValue": "Released"},{"Identifier": "Started","DbValue": "Started"},{"Identifier": "Completed","DbValue": "Completed"},{"Identifier": "Closed","DbValue": "Closed"}]},{"Name": "BcRepairLineState","Values": [{"Identifier": "New","DbValue": "New"},{"Identifier": "Received","DbValue": "Received"},{"Identifier": "Cancelled","DbValue": "Cancelled"},{"Identifier": "Processed","DbValue": "Processed"},{"Identifier": "RepairStarted","DbValue": "RepairStarted"},{"Identifier": "RepairCompleted","DbValue": "RepairCompleted"},{"Identifier": "Shipp');
   Dbms_Lob.Writeappend(clob_, 2450, 'ed","DbValue": "Shipped"}]}[#[jsoncallback:Lookup_Enum_Metadata_SYS.Server_Enumeration_Metadata:Iso_Currency_API]#],{"Name": "CustomerOrderState","Values": [{"Identifier": "Planned","DbValue": "Planned"},{"Identifier": "Blocked","DbValue": "Blocked"},{"Identifier": "Delivered","DbValue": "Delivered"},{"Identifier": "Invoiced","DbValue": "Invoiced"},{"Identifier": "Released","DbValue": "Released"},{"Identifier": "Reserved","DbValue": "Reserved"},{"Identifier": "Picked","DbValue": "Picked"},{"Identifier": "PartiallyDelivered","DbValue": "PartiallyDelivered"},{"Identifier": "Cancelled","DbValue": "Cancelled"}]}[#[jsoncallback:Lookup_Enum_Metadata_SYS.Server_Enumeration_Metadata:Iso_Language_API]#][#[jsoncallback:Lookup_Enum_Metadata_SYS.Server_Enumeration_Metadata:Iso_Country_API]#][#[jsoncallback:Custom_Object_Proxy_SYS.Server_Enumeration_Metadata:{"Projection": "BcRcoHandling","Lu": ["Site","CustomerOrder","Lookup_IsoCountry","CustomerInfoAddress","ConditionCode","IsoCurrency","BcRepairCenterOrder","FndUser","BcRepairType","BcRepairLine","Lookup_IsoUnit","BcLogInfo","BcRepairLineAction","CustomerInfo","InventoryPart","Lookup_IsoCurrency"]}]#]],"Structures": [{"Name": "BcRepairCenterOrderCopyValues","PLSQLRecordName": "BC_RCO_HANDLING_SVC.COPY_VALUES_REC","Attributes": [{"Name": "ModifiedSource","DataType": "Entity","SubType": "BcRepairCenterOrder","Collection": false,"Nullable": true,"AttrName": "MODIFIED_SOURCE","Execute": {"SQL": {"ImplementationType": "VARCHAR2"}}}]},{"Name": "BcRepairLineCopyValues","PLSQLRecordName": "BC_RCO_HANDLING_SVC.COPY_VALUES_REC","Attributes": [{"Name": "ModifiedSource","DataType": "Entity","SubType": "BcRepairLine","Collection": false,"Nullable": true,"AttrName": "MODIFIED_SOURCE","Execute": {"SQL": {"ImplementationType": "VARCHAR2"}}}]},{"Name": "BcLogInfoCopyValues","PLSQLRecordName": "BC_RCO_HANDLING_SVC.COPY_VALUES_REC","Attributes": [{"Name": "ModifiedSource","DataType": "Entity","SubType": "BcLogInfo","Collection": false,"Nullable": true,"AttrName": "MODIFIED_SOURCE","Execute": {"SQL": {"ImplementationType": "VARCHAR2"}}}]},{"Name": "StreamInfoRec","PLSQLRecordName": "BC_RCO_HANDLING_SVC.STREAM_INFO_REC","Attributes": [{"Name": "FileName","DataType": "Text"},{"Name": "MimeType","DataType": "Text"}]},{"Name": "EntityDec","PLSQLRecordName": "BC_RCO_HANDLING_SVC.ENTITY_DEC","Attributes": [{"Name": "ETag","DataType": "Text"},{"Name": "Info","DataType": "Text"},{"Name": "Attr"');
   Dbms_Lob.Writeappend(clob_, 2438, ',"DataType": "Text"}]}[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Structure_Metadata:{"Projection": "BcRcoHandling","Lu": ["Site","CustomerOrder","Lookup_IsoCountry","CustomerInfoAddress","ConditionCode","IsoCurrency","BcRepairCenterOrder","FndUser","BcRepairType","BcRepairLine","Lookup_IsoUnit","BcLogInfo","BcRepairLineAction","CustomerInfo","InventoryPart","Lookup_IsoCurrency"]}]#]],"Entities": [{"Name": "BcRepairCenterOrder","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairCenterOrder","View":"BC_REPAIR_CENTER_ORDER"}]#]"}},"Keys": ["RcoNo"],"KeysWhere": "(rco_no = :RcoNo)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairCenterOrder''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''RCO_NO=''||rco_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objstate","DataType": "Enumeration","SubType": "BcRepairCenterOrderState","Collection": false,"Size": 50,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJSTATE","Keygeneration": "Server","Execute": {"SQL": {"Select": "objstate","OrderBy": "state","ImplementationType": "VARCHAR2","Alias": "objstate"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "RcoNo","DataType": "Number","Collection": false,"Nullable": true,"Updatable": false,"AttrName": "RCO_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "rco_no","ImplementationType": "NUMBER","Alias": "rco_no"}}},{"Name": "CustomerId","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "CUSTOMER_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_id","ImplementationType": "VARCHAR2","Alias": "customer_id"}}},{"Name": "CustomerOrderNo","DataType');
   Dbms_Lob.Writeappend(clob_, 2444, '": "Text","Collection": false,"Size": 12,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMER_ORDER_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_order_no","ImplementationType": "VARCHAR2","Alias": "customer_order_no"}}},{"Name": "DocAddressId","DataType": "Text","Collection": false,"Size": 50,"Nullable": false,"Updatable": true,"AttrName": "DOC_ADDRESS_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "doc_address_id","ImplementationType": "VARCHAR2","Alias": "doc_address_id"}}},{"Name": "DeliveryAddressId","DataType": "Text","Collection": false,"Size": 50,"Nullable": false,"Updatable": true,"AttrName": "DELIVERY_ADDRESS_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "delivery_address_id","ImplementationType": "VARCHAR2","Alias": "delivery_address_id"}}},{"Name": "Contract","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": true,"AttrName": "CONTRACT","Keygeneration": "User","Execute": {"SQL": {"Select": "contract","ImplementationType": "VARCHAR2","Alias": "contract"}}},{"Name": "Currency","DataType": "Text","Collection": false,"Size": 3,"Nullable": false,"Updatable": true,"AttrName": "CURRENCY","Keygeneration": "User","Execute": {"SQL": {"Select": "currency","ImplementationType": "VARCHAR2","Alias": "currency"}}},{"Name": "DateCreated","DataType": "Date","Collection": false,"Nullable": false,"Updatable": false,"AttrName": "DATE_CREATED","Keygeneration": "User","Execute": {"SQL": {"Select": "date_created","ImplementationType": "DATE","Alias": "date_created"}}},{"Name": "ReportedBy","DataType": "Text","Collection": false,"Size": 30,"Nullable": false,"Updatable": false,"AttrName": "REPORTED_BY","Keygeneration": "User","Execute": {"SQL": {"Select": "reported_by","ImplementationType": "VARCHAR2","Alias": "reported_by"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairCenterOrder","Type":"Entity","Name":"BcRepairCenterOrder","View":"BC_REPAIR_CENTER_ORDER"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairCenterOrder''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''RCO_NO=''||rco_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}');
   Dbms_Lob.Writeappend(clob_, 2450, '}],"Navigation": [{"Name": "RepairLineArray","Collection": true,"Target": "BcRepairLine","Keys": [{"ThisAttribute": "RcoNo","TargetAttribute": "RcoNo"}],"ParentAttributes": ["RcoNo"],"ChildAttributes": ["RcoNo"],"Where": "(:parent.rco_no = :child.rco_no)"},{"Name": "InfoLogArray","Collection": true,"Target": "BcLogInfo","Keys": [{"ThisAttribute": "RcoNo","TargetAttribute": "RcoNo"}],"ParentAttributes": ["RcoNo"],"ChildAttributes": ["RcoNo"],"Where": "(:parent.rco_no = :child.rco_no)"},{"Name": "CustomerRef","Collection": false,"Target": "CustomerInfo","Keys": [{"ThisAttribute": "CustomerId","TargetAttribute": "CustomerId"}],"ParentAttributes": ["CustomerId"],"ChildAttributes": ["CustomerId"],"Where": "(:parent.customer_id = :child.customer_id)"},{"Name": "DocAddressRef","Collection": false,"Target": "CustomerInfoAddress","Keys": [{"ThisAttribute": "CustomerId","TargetAttribute": "CustomerId"},{"ThisAttribute": "DocAddressId","TargetAttribute": "AddressId"}],"ParentAttributes": ["CustomerId","DocAddressId"],"ChildAttributes": ["CustomerId","AddressId"],"Where": "(:parent.customer_id = :child.customer_id AND :parent.doc_address_id = :child.address_id)"},{"Name": "DelAddressRef","Collection": false,"Target": "CustomerInfoAddress","Keys": [{"ThisAttribute": "CustomerId","TargetAttribute": "CustomerId"},{"ThisAttribute": "DeliveryAddressId","TargetAttribute": "AddressId"}],"ParentAttributes": ["CustomerId","DeliveryAddressId"],"ChildAttributes": ["CustomerId","AddressId"],"Where": "(:parent.customer_id = :child.customer_id AND :parent.delivery_address_id = :child.address_id)"},{"Name": "CurrencyRef","Collection": false,"Target": "IsoCurrency","Keys": [{"ThisAttribute": "Currency","TargetAttribute": "CurrencyCode"}],"ParentAttributes": ["Currency"],"ChildAttributes": ["CurrencyCode"],"Where": "(:parent.currency = :child.currency_code)"},{"Name": "ContractRef","Collection": false,"Target": "Site","Keys": [{"ThisAttribute": "Contract","TargetAttribute": "Contract"}],"ParentAttributes": ["Contract"],"ChildAttributes": ["Contract"],"Where": "(:parent.contract = :child.contract)"},{"Name": "CustomerOrderRef","Collection": false,"Target": "CustomerOrder","Keys": [{"ThisAttribute": "CustomerOrderNo","TargetAttribute": "OrderNo"}],"ParentAttributes": ["CustomerOrderNo"],"ChildAttributes": ["OrderNo"],"Where": "(:parent.customer_order_no = :child.order_no)"},{"Name": "FndUserRef","Collection": false,"Target": "FndUser","K');
   Dbms_Lob.Writeappend(clob_, 2442, 'eys": [{"ThisAttribute": "ReportedBy","TargetAttribute": "Identity"}],"ParentAttributes": ["ReportedBy"],"ChildAttributes": ["Identity"],"Where": "(:parent.reported_by = :child.identity)"}[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"BcRepairCenterOrder","Lu":"BcRepairCenterOrder","View":"BC_REPAIR_CENTER_ORDER"}]#]],"CRUD": [{"Name": "Default","DataType": "Entity","SubType": "BcRepairCenterOrder","Collection": false,"CollectionBound": true,"Parameters": [],"Execute": {"SQL": {"From": "TABLE(Bc_Rco_Handling_SVC.CRUD_Default(:Attr, bc_repair_center_order## => ''''))","Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"}]}}},{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcRepairCenterOrder","Collection": false,"CollectionBound": true,"Parameters": [{"Name": "CopyValues","DataType": "Structure","SubType": "BcRepairCenterOrderCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Return_$ := Bc_Rco_Handling_SVC.CRUD_Default_Copy(:CopyValues, bc_repair_center_order## => '''');","END;"],"Bind": [{"Kind": "Parameter","Name": "CopyValues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.COPY_VALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}},{"Name": "Create","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_Handling_SVC.CRUD_Create(:Attr, :Action$, bc_repair_center_order## => '''');","END;"],"Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Update","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_Handling_SVC.CRUD_Update(:ETag, :RcoNo, :Attr, :Action$, bc_repair_center_order## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Delete","DataType": "Str');
   Dbms_Lob.Writeappend(clob_, 2440, 'ucture","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_Handling_SVC.CRUD_Delete(:ETag, :RcoNo, :Action$, bc_repair_center_order## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}}],"Actions": [{"Name": "Cancel","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Cancel(:ETag, :RcoNo, :Action$, bc_repair_center_order## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Release","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Release(:ETag, :RcoNo, :Action$, bc_repair_center_order## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Start","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Start(:ETag, :RcoNo, :Action$, bc_repair_center_order## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Complete","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Complete(:ETag, :RcoNo, :Action$, bc_repair_center_order## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Close","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Exe');
   Dbms_Lob.Writeappend(clob_, 2436, 'cute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Close(:ETag, :RcoNo, :Action$, bc_repair_center_order## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Reopen","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Reopen(:ETag, :RcoNo, :Action$, bc_repair_center_order## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}}],"Functions": [{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcRepairCenterOrder","Collection": false,"CrudOperation": true,"Parameters": [{"Name": "CopyValues","DataType": "Structure","SubType": "BcRepairCenterOrderCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Return_$ := Bc_Rco_Handling_SVC.CRUD_Default_Copy(:ETag, :RcoNo, :CopyValues, bc_repair_center_order## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Parameter","Name": "CopyValues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.COPY_VALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}}]},{"Name": "BcRepairLine","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairLine","View":"BC_REPAIR_LINE"}]#]"}},"Keys": ["RcoNo","RepairLineNo"],"KeysWhere": "(rco_no = :RcoNo AND repair_line_no = :RepairLineNo)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairLine''","ImplementationType": "VARCHAR2","Alias": "luna');
   Dbms_Lob.Writeappend(clob_, 2442, 'me"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''RCO_NO=''||rco_no||''^''||''REPAIR_LINE_NO=''||repair_line_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objstate","DataType": "Enumeration","SubType": "BcRepairLineState","Collection": false,"Size": 50,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJSTATE","Keygeneration": "Server","Execute": {"SQL": {"Select": "objstate","OrderBy": "state","ImplementationType": "VARCHAR2","Alias": "objstate"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "RcoNo","DataType": "Number","Collection": false,"Nullable": false,"Updatable": false,"AttrName": "RCO_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "rco_no","ImplementationType": "NUMBER","Alias": "rco_no"}}},{"Name": "RepairLineNo","DataType": "Number","Collection": false,"Nullable": true,"Updatable": false,"AttrName": "REPAIR_LINE_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_line_no","ImplementationType": "NUMBER","Alias": "repair_line_no"}}},{"Name": "DateEntered","DataType": "Date","Collection": false,"Nullable": false,"Updatable": false,"AttrName": "DATE_ENTERED","Keygeneration": "User","Execute": {"SQL": {"Select": "date_entered","ImplementationType": "DATE","Alias": "date_entered"}}},{"Name": "RepairSite","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": true,"AttrName": "REPAIR_SITE","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_site","ImplementationType": "VARCHAR2","Alias": "repair_site"}}},{"Name": "PartNumber","DataType": "Text","Collection": false,"Size": 25,"Nullable": false,"Updatable": true,"AttrName": "PART_NUMBER","Keygeneration": "User","Execute": {"SQL": {"Select": "part_number","ImplementationType": "VARCHAR2","Alias": "part_number"}}},{"Name": "Quantity","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "QUANTITY","Keygeneration": "User","Execute": {"SQL": {"Select": "quantity","ImplementationType": "NUMBER","Alias": "quantity"}}},{"Name": "QuantityReceived","DataType": "Number","Collection": false,"Nullable": false,"Updata');
   Dbms_Lob.Writeappend(clob_, 2450, 'ble": true,"AttrName": "QUANTITY_RECEIVED","Keygeneration": "User","Execute": {"SQL": {"Select": "quantity_received","ImplementationType": "NUMBER","Alias": "quantity_received"}}},{"Name": "ConditionCode","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "CONDITION_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "condition_code","ImplementationType": "VARCHAR2","Alias": "condition_code"}}},{"Name": "SerialNo","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "SERIAL_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "serial_no","ImplementationType": "VARCHAR2","Alias": "serial_no"}}},{"Name": "OwnershipCode","DataType": "Enumeration","SubType": "BcOwnershipCode","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "OWNERSHIP_CODE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "ownership_code_db","OrderBy": "ownership_code","ImplementationType": "VARCHAR2","Alias": "ownership_code"}}},{"Name": "OwnerId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": false,"AttrName": "OWNER_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "owner_id","ImplementationType": "VARCHAR2","Alias": "owner_id"}}},{"Name": "RepairLineAction","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "REPAIR_LINE_ACTION","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_line_action","ImplementationType": "VARCHAR2","Alias": "repair_line_action"}}},{"Name": "RepairType","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "REPAIR_TYPE","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_type","ImplementationType": "VARCHAR2","Alias": "repair_type"}}},{"Name": "CustomerFaultCode","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": false,"AttrName": "CUSTOMER_FAULT_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_fault_code","ImplementationType": "VARCHAR2","Alias": "customer_fault_code"}}},{"Name": "NoteText","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Updatable": true,"AttrName": "NOTE_TEXT","Keygeneration": "User","Execute": {"SQL": {"Select": "note_text","ImplementationType": "VARCHAR2","Alias": "note_text"}}},{"Name": "NoteId","DataType": "Text","Collection": false,"Siz');
   Dbms_Lob.Writeappend(clob_, 2448, 'e": 10,"Nullable": true,"Updatable": false,"AttrName": "NOTE_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "note_id","ImplementationType": "VARCHAR2","Alias": "note_id"}}},{"Name": "BillableOrWarranty","DataType": "Enumeration","SubType": "BCBillOrWar","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "BILLABLE_OR_WARRANTY_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "billable_or_warranty_db","OrderBy": "billable_or_warranty","ImplementationType": "VARCHAR2","Alias": "billable_or_warranty"}}},{"Name": "ManufacturerWarranty","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": true,"Updatable": false,"AttrName": "MANUFACTURER_WARRANTY_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "manufacturer_warranty_db","ImplementationType": "VARCHAR2","Alias": "manufacturer_warranty"}}},{"Name": "RepairWarranty","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": true,"Updatable": false,"AttrName": "REPAIR_WARRANTY_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_warranty_db","ImplementationType": "VARCHAR2","Alias": "repair_warranty"}}},{"Name": "WarrantyValidated","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": true,"Updatable": true,"AttrName": "WARRANTY_VALIDATED_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "warranty_validated_db","ImplementationType": "VARCHAR2","Alias": "warranty_validated"}}},{"Name": "ProcessingFee","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "PROCESSING_FEE","Keygeneration": "User","Execute": {"SQL": {"Select": "processing_fee","ImplementationType": "NUMBER","Alias": "processing_fee"}}},{"Name": "RequiredStart","DataType": "Date","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "REQUIRED_START","Keygeneration": "User","Execute": {"SQL": {"Select": "required_start","ImplementationType": "DATE","Alias": "required_start"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairLine","Type":"Entity","Name":"BcRepairLine","View":"BC_REPAIR_LINE"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairLine''","Implementati');
   Dbms_Lob.Writeappend(clob_, 2442, 'onType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''RCO_NO=''||rco_no||''^''||''REPAIR_LINE_NO=''||repair_line_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [{"Name": "CustomerRef","Collection": false,"Target": "CustomerInfo","Keys": [{"ThisAttribute": "OwnerId","TargetAttribute": "CustomerId"}],"ParentAttributes": ["OwnerId"],"ChildAttributes": ["CustomerId"],"Where": "(:parent.owner_id = :child.customer_id)"},{"Name": "RepairTypeRef","Collection": false,"Target": "BcRepairType","Keys": [{"ThisAttribute": "RepairType","TargetAttribute": "RepairType"}],"ParentAttributes": ["RepairType"],"ChildAttributes": ["RepairType"],"Where": "(:parent.repair_type = :child.repair_type)"},{"Name": "ConditionCodeRef","Collection": false,"Target": "ConditionCode","Keys": [{"ThisAttribute": "ConditionCode","TargetAttribute": "ConditionCode"}],"ParentAttributes": ["ConditionCode"],"ChildAttributes": ["ConditionCode"],"Where": "(:parent.condition_code = :child.condition_code)"},{"Name": "InventoryPartRef","Collection": false,"Target": "InventoryPart","Keys": [{"ThisAttribute": "RepairSite","TargetAttribute": "Contract"},{"ThisAttribute": "PartNumber","TargetAttribute": "PartNo"}],"ParentAttributes": ["RepairSite","PartNumber"],"ChildAttributes": ["Contract","PartNo"],"Where": "(:parent.repair_site = :child.contract AND :parent.part_number = :child.part_no)"},{"Name": "LineActionRef","Collection": false,"Target": "BcRepairLineAction","Keys": [{"ThisAttribute": "RepairLineAction","TargetAttribute": "RepairLineAction"}],"ParentAttributes": ["RepairLineAction"],"ChildAttributes": ["RepairLineAction"],"Where": "(:parent.repair_line_action = :child.repair_line_action)"},{"Name": "SiteRef","Collection": false,"Target": "Site","Keys": [{"ThisAttribute": "RepairSite","TargetAttribute": "Contract"}],"ParentAttributes": ["RepairSite"],"ChildAttributes": ["Contract"],"Where": "(:parent.repair_site = :child.contract)"},{"Name": "RepairLineActionRef","Collection": false,"Target": "BcRepairLine","Keys": [{"ThisAttribute": "RepairLineAction","TargetAttribute": "RepairLineAction"}],"ParentAttributes": ["RepairLineAction"],"ChildAttributes": ["RepairLineAction"],"Where": "(:parent.repair_line_action = :child.repair_line_action)"}[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Project');
   Dbms_Lob.Writeappend(clob_, 2440, 'ion":"BcRcoHandling","Entity":"BcRepairLine","Lu":"BcRepairLine","View":"BC_REPAIR_LINE"}]#]],"CRUD": [{"Name": "Default","DataType": "Entity","SubType": "BcRepairLine","Collection": false,"CollectionBound": true,"Parameters": [],"Execute": {"SQL": {"From": "TABLE(Bc_Rco_Handling_SVC.CRUD_Default(:Attr, bc_repair_line## => ''''))","Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"}]}}},{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcRepairLine","Collection": false,"CollectionBound": true,"Parameters": [{"Name": "CopyValues","DataType": "Structure","SubType": "BcRepairLineCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Return_$ := Bc_Rco_Handling_SVC.CRUD_Default_Copy(:CopyValues, bc_repair_line## => '''');","END;"],"Bind": [{"Kind": "Parameter","Name": "CopyValues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.COPY_VALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}},{"Name": "Create","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_Handling_SVC.CRUD_Create(:Attr, :Action$, bc_repair_line## => '''');","END;"],"Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Update","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_Handling_SVC.CRUD_Update(:ETag, :RcoNo, :RepairLineNo, :Attr, :Action$, bc_repair_line## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "RepairLineNo","ImplementationType": "NUMBER"},{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Delete","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_Handling_SVC.CRUD_Delete(:ETag, :RcoNo, :RepairLineNo, :Action$, bc_repair_line## => '''');","END;"],"Bind": [{"Kind');
   Dbms_Lob.Writeappend(clob_, 2442, '": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "RepairLineNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}}],"Actions": [{"Name": "Cancel","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Cancel(:ETag, :RcoNo, :RepairLineNo, :Action$, bc_repair_line## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "RepairLineNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Receive","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Receive(:ETag, :RcoNo, :RepairLineNo, :Action$, bc_repair_line## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "RepairLineNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Process","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Process(:ETag, :RcoNo, :RepairLineNo, :Action$, bc_repair_line## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "RepairLineNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "RepairStart","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Repair_Start(:ETag, :RcoNo, :RepairLineNo, :Action$, bc_repair_line## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "RepairLineNo","Implement');
   Dbms_Lob.Writeappend(clob_, 2444, 'ationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "RepairComplete","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Repair_Complete(:ETag, :RcoNo, :RepairLineNo, :Action$, bc_repair_line## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "RepairLineNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Ship","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Ship(:ETag, :RcoNo, :RepairLineNo, :Action$, bc_repair_line## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "RepairLineNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}}],"Functions": [{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcRepairLine","Collection": false,"CrudOperation": true,"Parameters": [{"Name": "CopyValues","DataType": "Structure","SubType": "BcRepairLineCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Return_$ := Bc_Rco_Handling_SVC.CRUD_Default_Copy(:ETag, :RcoNo, :RepairLineNo, :CopyValues, bc_repair_line## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "RepairLineNo","ImplementationType": "NUMBER"},{"Kind": "Parameter","Name": "CopyValues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.COPY_VALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}}]},{"Name": "BcLogInfo","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"BcLogInfo","View":"BC_LOG_INFO"}]#]"}},"Keys": ["RcoNo","LogInfoId"],"KeysWhere": "(rco_no = :RcoNo AND log_info_id = :LogInfoId');
   Dbms_Lob.Writeappend(clob_, 2434, ')","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcLogInfo''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''LOG_INFO_ID=''||log_info_id||''^''||''RCO_NO=''||rco_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "RcoNo","DataType": "Number","Collection": false,"Nullable": false,"Updatable": false,"AttrName": "RCO_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "rco_no","ImplementationType": "NUMBER","Alias": "rco_no"}}},{"Name": "LogInfoId","DataType": "Number","Collection": false,"Nullable": true,"Updatable": false,"AttrName": "LOG_INFO_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "log_info_id","ImplementationType": "NUMBER","Alias": "log_info_id"}}},{"Name": "RcoLine","DataType": "Number","Collection": false,"Nullable": false,"Updatable": false,"AttrName": "RCO_LINE","Keygeneration": "User","Execute": {"SQL": {"Select": "rco_line","ImplementationType": "NUMBER","Alias": "rco_line"}}},{"Name": "DateCreated","DataType": "Date","Collection": false,"Nullable": false,"Updatable": false,"AttrName": "DATE_CREATED","Keygeneration": "User","Execute": {"SQL": {"Select": "date_created","ImplementationType": "DATE","Alias": "date_created"}}},{"Name": "ReportedBy","DataType": "Text","Collection": false,"Size": 30,"Nullable": false,"Updatable": false,"AttrName": "REPORTED_BY","Keygeneration": "User","Execute": {"SQL": {"Select": "reported_by","ImplementationType": "VARCHAR2","Alias": "reported_by"}}},{"Name": "PartNumber","DataType": "Text","Collection": false,"Size": 25,"Nullable": false,"Updatable": false,"AttrName": "PART_NUMBER","Keygeneration": "User","Execute": {"SQL": {"Select": "part_number","ImplementationType": "VARCHAR2","Alias": "part_number"}}},{"Name": "Contract","DataType":');
   Dbms_Lob.Writeappend(clob_, 2440, ' "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": true,"AttrName": "CONTRACT","Keygeneration": "User","Execute": {"SQL": {"Select": "contract","ImplementationType": "VARCHAR2","Alias": "contract"}}},{"Name": "Notes","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Updatable": true,"AttrName": "NOTES","Keygeneration": "User","Execute": {"SQL": {"Select": "notes","ImplementationType": "VARCHAR2","Alias": "notes"}}},{"Name": "EnterBy","DataType": "Text","Collection": false,"Size": 6,"Nullable": true,"Updatable": true,"AttrName": "ENTER_BY","Keygeneration": "User","Execute": {"SQL": {"Select": "enter_by","ImplementationType": "VARCHAR2","Alias": "enter_by"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"BcLogInfo","Type":"Entity","Name":"BcLogInfo","View":"BC_LOG_INFO"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcLogInfo''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''LOG_INFO_ID=''||log_info_id||''^''||''RCO_NO=''||rco_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [{"Name": "ReportedByRef","Collection": false,"Target": "FndUser","Keys": [{"ThisAttribute": "ReportedBy","TargetAttribute": "Identity"}],"ParentAttributes": ["ReportedBy"],"ChildAttributes": ["Identity"],"Where": "(:parent.reported_by = :child.identity)"},{"Name": "PartRef","Collection": false,"Target": "InventoryPart","Keys": [{"ThisAttribute": "Contract","TargetAttribute": "Contract"},{"ThisAttribute": "PartNumber","TargetAttribute": "PartNo"}],"ParentAttributes": ["Contract","PartNumber"],"ChildAttributes": ["Contract","PartNo"],"Where": "(:parent.contract = :child.contract AND :parent.part_number = :child.part_no)"},{"Name": "RCOLineRef","Collection": false,"Target": "BcRepairLine","Keys": [{"ThisAttribute": "RcoNo","TargetAttribute": "RcoNo"},{"ThisAttribute": "RcoLine","TargetAttribute": "RepairLineNo"}],"ParentAttributes": ["RcoNo","RcoLine"],"ChildAttributes": ["RcoNo","RepairLineNo"],"Where": "(:parent.rco_no = :child.rco_no AND :parent.rco_line = :child.repair_line_no)"}[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"B');
   Dbms_Lob.Writeappend(clob_, 2440, 'cLogInfo","Lu":"BcLogInfo","View":"BC_LOG_INFO"}]#]],"CRUD": [{"Name": "Default","DataType": "Entity","SubType": "BcLogInfo","Collection": false,"CollectionBound": true,"Parameters": [],"Execute": {"SQL": {"From": "TABLE(Bc_Rco_Handling_SVC.CRUD_Default(:Attr, bc_log_info## => ''''))","Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"}]}}},{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcLogInfo","Collection": false,"CollectionBound": true,"Parameters": [{"Name": "CopyValues","DataType": "Structure","SubType": "BcLogInfoCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Return_$ := Bc_Rco_Handling_SVC.CRUD_Default_Copy(:CopyValues, bc_log_info## => '''');","END;"],"Bind": [{"Kind": "Parameter","Name": "CopyValues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.COPY_VALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}},{"Name": "Create","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_Handling_SVC.CRUD_Create(:Attr, :Action$, bc_log_info## => '''');","END;"],"Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Update","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_Handling_SVC.CRUD_Update(:ETag, :RcoNo, :LogInfoId, :Attr, :Action$, bc_log_info## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "LogInfoId","ImplementationType": "NUMBER"},{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Delete","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_Handling_SVC.CRUD_Delete(:ETag, :RcoNo, :LogInfoId, :Action$, bc_log_info## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attri');
   Dbms_Lob.Writeappend(clob_, 2436, 'bute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "LogInfoId","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}}],"Actions": [],"Functions": [{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcLogInfo","Collection": false,"CrudOperation": true,"Parameters": [{"Name": "CopyValues","DataType": "Structure","SubType": "BcLogInfoCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Return_$ := Bc_Rco_Handling_SVC.CRUD_Default_Copy(:ETag, :RcoNo, :LogInfoId, :CopyValues, bc_log_info## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "LogInfoId","ImplementationType": "NUMBER"},{"Kind": "Parameter","Name": "CopyValues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.COPY_VALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}}]},{"Name": "CustomerInfo","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"CustomerInfo","View":"CUSTOMER_INFO"}]#]"}},"Keys": ["CustomerId"],"KeysWhere": "(customer_id = :CustomerId)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''CustomerInfo''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CUSTOMER_ID=''||customer_id||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "CustomerId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": false,"AttrName": "CUSTOMER_ID","Keygeneratio');
   Dbms_Lob.Writeappend(clob_, 2442, 'n": "User","Execute": {"SQL": {"Select": "customer_id","ImplementationType": "VARCHAR2","Alias": "customer_id"}}},{"Name": "Name","DataType": "Text","Collection": false,"Size": 100,"Nullable": false,"Updatable": true,"AttrName": "NAME","Keygeneration": "User","Execute": {"SQL": {"Select": "name","ImplementationType": "VARCHAR2","Alias": "name"}}},{"Name": "CreationDate","DataType": "Date","Collection": false,"Nullable": false,"Updatable": false,"AttrName": "CREATION_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "creation_date","ImplementationType": "DATE","Alias": "creation_date"}}},{"Name": "AssociationNo","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "ASSOCIATION_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "association_no","ImplementationType": "VARCHAR2","Alias": "association_no"}}},{"Name": "Party","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "PARTY","Keygeneration": "User","Execute": {"SQL": {"Select": "party","ImplementationType": "VARCHAR2","Alias": "party"}}},{"Name": "DefaultDomain","DataType": "Boolean","Collection": false,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "DEFAULT_DOMAIN","Keygeneration": "User","Execute": {"SQL": {"Select": "decode(default_domain,''TRUE'',''TRUE'',''FALSE'',''FALSE'',default_domain)","ImplementationType": "VARCHAR2","Alias": "default_domain"}}},{"Name": "DefaultLanguage","DataType": "Enumeration","SubType": "Lookup_IsoLanguage","Collection": false,"Size": 2,"Nullable": true,"Updatable": true,"AttrName": "DEFAULT_LANGUAGE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "default_language_db","OrderBy": "default_language","ImplementationType": "VARCHAR2","Alias": "default_language"}}},{"Name": "Country","DataType": "Enumeration","SubType": "Lookup_IsoCountry","Collection": false,"Size": 2,"Nullable": true,"Updatable": true,"AttrName": "COUNTRY_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "country_db","OrderBy": "country","ImplementationType": "VARCHAR2","Alias": "country"}}},{"Name": "PartyType","DataType": "Enumeration","SubType": "PartyType","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "PARTY_TYPE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "party_type_db","OrderBy": "party_type","ImplementationType": "VARCHAR2","Alias": "part');
   Dbms_Lob.Writeappend(clob_, 2450, 'y_type"}}},{"Name": "CorporateForm","DataType": "Text","Collection": false,"Size": 8,"Nullable": true,"Updatable": true,"AttrName": "CORPORATE_FORM","Keygeneration": "User","Execute": {"SQL": {"Select": "corporate_form","ImplementationType": "VARCHAR2","Alias": "corporate_form"}}},{"Name": "IdentifierReference","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "IDENTIFIER_REFERENCE","Keygeneration": "User","Execute": {"SQL": {"Select": "identifier_reference","ImplementationType": "VARCHAR2","Alias": "identifier_reference"}}},{"Name": "IdentifierRefValidation","DataType": "Enumeration","SubType": "IdentifierRefValidation","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "IDENTIFIER_REF_VALIDATION_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "identifier_ref_validation_db","OrderBy": "identifier_ref_validation","ImplementationType": "VARCHAR2","Alias": "identifier_ref_validation"}}},{"Name": "PictureId","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "PICTURE_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "picture_id","ImplementationType": "NUMBER","Alias": "picture_id"}}},{"Name": "OneTime","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "ONE_TIME_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "one_time_db","ImplementationType": "VARCHAR2","Alias": "one_time"}}},{"Name": "CustomerCategory","DataType": "Enumeration","SubType": "CustomerCategory","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "CUSTOMER_CATEGORY_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_category_db","OrderBy": "customer_category","ImplementationType": "VARCHAR2","Alias": "customer_category"}}},{"Name": "B2bCustomer","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "B2B_CUSTOMER_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "b2b_customer_db","ImplementationType": "VARCHAR2","Alias": "b2b_customer"}}},{"Name": "CustomerTaxUsageType","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMER_TAX_USAGE_TYPE","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_tax_usage_type","Implementat');
   Dbms_Lob.Writeappend(clob_, 2428, 'ionType": "VARCHAR2","Alias": "customer_tax_usage_type"}}},{"Name": "BusinessClassification","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "BUSINESS_CLASSIFICATION","Keygeneration": "User","Execute": {"SQL": {"Select": "business_classification","ImplementationType": "VARCHAR2","Alias": "business_classification"}}},{"Name": "DateOfRegistration","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "DATE_OF_REGISTRATION","Keygeneration": "User","Execute": {"SQL": {"Select": "date_of_registration","ImplementationType": "DATE","Alias": "date_of_registration"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"CustomerInfo","Type":"Entity","Name":"CustomerInfo","View":"CUSTOMER_INFO"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''CustomerInfo''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CUSTOMER_ID=''||customer_id||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"CustomerInfo","Lu":"CustomerInfo","View":"CUSTOMER_INFO"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "CustomerInfoAddress","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"CustomerInfoAddress","View":"CUSTOMER_INFO_ADDRESS"}]#]"}},"Keys": ["CustomerId","AddressId"],"KeysWhere": "(customer_id = :CustomerId AND address_id = :AddressId)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''CustomerInfoAddress''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ADDRESS_ID=''||address_id||''^''||''CUSTOMER_ID=''||customer_id||''^''","Implement');
   Dbms_Lob.Writeappend(clob_, 2450, 'ationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "CustomerId","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": false,"AttrName": "CUSTOMER_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_id","ImplementationType": "VARCHAR2","Alias": "customer_id"}}},{"Name": "AddressId","DataType": "Text","Collection": false,"Size": 50,"Nullable": false,"Updatable": false,"AttrName": "ADDRESS_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "address_id","ImplementationType": "VARCHAR2","Alias": "address_id"}}},{"Name": "Name","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "NAME","Keygeneration": "User","Execute": {"SQL": {"Select": "name","ImplementationType": "VARCHAR2","Alias": "name"}}},{"Name": "Address","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Updatable": true,"AttrName": "ADDRESS","Keygeneration": "User","Execute": {"SQL": {"Select": "address","ImplementationType": "VARCHAR2","Alias": "address"}}},{"Name": "EanLocation","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "EAN_LOCATION","Keygeneration": "User","Execute": {"SQL": {"Select": "ean_location","ImplementationType": "VARCHAR2","Alias": "ean_location"}}},{"Name": "ValidFrom","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "VALID_FROM","Keygeneration": "User","Execute": {"SQL": {"Select": "valid_from","ImplementationType": "DATE","Alias": "valid_from"}}},{"Name": "ValidTo","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "VALID_TO","Keygeneration": "User","Execute": {"SQL": {"Select": "valid_to","ImplementationType": "DATE","Alias": "valid_to"}}},{"Name": "Party","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "PARTY","Keygeneration": "User","Execute": {"SQL": {"Select": "party","ImplementationType": "VARCHAR2","Alias": "party"}}},{"Name": "AddressLov","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "ADDRESS_LOV",');
   Dbms_Lob.Writeappend(clob_, 2442, '"Keygeneration": "Server","Execute": {"SQL": {"Select": "address_lov","ImplementationType": "VARCHAR2","Alias": "address_lov"}}},{"Name": "DefaultDomain","DataType": "Boolean","Collection": false,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "DEFAULT_DOMAIN","Keygeneration": "User","Execute": {"SQL": {"Select": "decode(default_domain,''TRUE'',''TRUE'',''FALSE'',''FALSE'',default_domain)","ImplementationType": "VARCHAR2","Alias": "default_domain"}}},{"Name": "Country","DataType": "Enumeration","SubType": "Lookup_IsoCountry","Collection": false,"Size": 2,"Nullable": false,"Updatable": true,"AttrName": "COUNTRY_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "country_db","OrderBy": "country","ImplementationType": "VARCHAR2","Alias": "country"}}},{"Name": "PartyType","DataType": "Enumeration","SubType": "PartyType","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "PARTY_TYPE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "party_type_db","OrderBy": "party_type","ImplementationType": "VARCHAR2","Alias": "party_type"}}},{"Name": "SecondaryContact","DataType": "Text","Collection": false,"Size": 35,"Nullable": true,"Updatable": true,"AttrName": "SECONDARY_CONTACT","Keygeneration": "User","Execute": {"SQL": {"Select": "secondary_contact","ImplementationType": "VARCHAR2","Alias": "secondary_contact"}}},{"Name": "PrimaryContact","DataType": "Text","Collection": false,"Size": 35,"Nullable": true,"Updatable": true,"AttrName": "PRIMARY_CONTACT","Keygeneration": "User","Execute": {"SQL": {"Select": "primary_contact","ImplementationType": "VARCHAR2","Alias": "primary_contact"}}},{"Name": "Address1","DataType": "Text","Collection": false,"Size": 35,"Nullable": true,"Updatable": true,"AttrName": "ADDRESS1","Keygeneration": "User","Execute": {"SQL": {"Select": "address1","ImplementationType": "VARCHAR2","Alias": "address1"}}},{"Name": "Address2","DataType": "Text","Collection": false,"Size": 35,"Nullable": true,"Updatable": true,"AttrName": "ADDRESS2","Keygeneration": "User","Execute": {"SQL": {"Select": "address2","ImplementationType": "VARCHAR2","Alias": "address2"}}},{"Name": "Address3","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "ADDRESS3","Keygeneration": "User","Execute": {"SQL": {"Select": "address3","ImplementationType": "VARCHAR2","Alias": "address3"}}},{"Name": "Address4');
   Dbms_Lob.Writeappend(clob_, 2450, '","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "ADDRESS4","Keygeneration": "User","Execute": {"SQL": {"Select": "address4","ImplementationType": "VARCHAR2","Alias": "address4"}}},{"Name": "Address5","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "ADDRESS5","Keygeneration": "User","Execute": {"SQL": {"Select": "address5","ImplementationType": "VARCHAR2","Alias": "address5"}}},{"Name": "Address6","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "ADDRESS6","Keygeneration": "User","Execute": {"SQL": {"Select": "address6","ImplementationType": "VARCHAR2","Alias": "address6"}}},{"Name": "ZipCode","DataType": "Text","Collection": false,"Size": 35,"Nullable": true,"Updatable": true,"AttrName": "ZIP_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "zip_code","ImplementationType": "VARCHAR2","Alias": "zip_code"}}},{"Name": "City","DataType": "Text","Collection": false,"Size": 35,"Nullable": true,"Updatable": true,"AttrName": "CITY","Keygeneration": "User","Execute": {"SQL": {"Select": "city","ImplementationType": "VARCHAR2","Alias": "city"}}},{"Name": "County","DataType": "Text","Collection": false,"Size": 35,"Nullable": true,"Updatable": true,"AttrName": "COUNTY","Keygeneration": "User","Execute": {"SQL": {"Select": "county","ImplementationType": "VARCHAR2","Alias": "county"}}},{"Name": "State","DataType": "Text","Collection": false,"Size": 35,"Nullable": true,"Updatable": true,"AttrName": "STATE","Keygeneration": "User","Execute": {"SQL": {"Select": "state","ImplementationType": "VARCHAR2","Alias": "state"}}},{"Name": "InCity","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": true,"AttrName": "IN_CITY","Keygeneration": "User","Execute": {"SQL": {"Select": "in_city","ImplementationType": "VARCHAR2","Alias": "in_city"}}},{"Name": "JurisdictionCode","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "JURISDICTION_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "jurisdiction_code","ImplementationType": "VARCHAR2","Alias": "jurisdiction_code"}}},{"Name": "CommId","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "COMM_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "comm_id","ImplementationType": "NUMBER","Alias": "comm_id"}}');
   Dbms_Lob.Writeappend(clob_, 2440, '},{"Name": "OutputMedia","DataType": "Enumeration","SubType": "OutputMediaType","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "OUTPUT_MEDIA_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "output_media_db","OrderBy": "output_media","ImplementationType": "VARCHAR2","Alias": "output_media"}}},{"Name": "EndCustomerId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "END_CUSTOMER_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "end_customer_id","ImplementationType": "VARCHAR2","Alias": "end_customer_id"}}},{"Name": "EndCustAddrId","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "END_CUST_ADDR_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "end_cust_addr_id","ImplementationType": "VARCHAR2","Alias": "end_cust_addr_id"}}},{"Name": "CustomerBranch","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMER_BRANCH","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_branch","ImplementationType": "VARCHAR2","Alias": "customer_branch"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"CustomerInfoAddress","Type":"Entity","Name":"CustomerInfoAddress","View":"CUSTOMER_INFO_ADDRESS"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''CustomerInfoAddress''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ADDRESS_ID=''||address_id||''^''||''CUSTOMER_ID=''||customer_id||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"CustomerInfoAddress","Lu":"CustomerInfoAddress","View":"CUSTOMER_INFO_ADDRESS"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "IsoCurrency","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"IsoCurrency","View":"ISO_CURRENCY"}]#]"}},"Keys": ["CurrencyCode"],"KeysWhere": "(currency_code = :CurrencyCode)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 1');
   Dbms_Lob.Writeappend(clob_, 2438, '28,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''IsoCurrency''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CURRENCY_CODE=''||currency_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "CurrencyCode","DataType": "Text","Collection": false,"Size": 3,"Nullable": false,"Updatable": false,"AttrName": "CURRENCY_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "currency_code","ImplementationType": "VARCHAR2","Alias": "currency_code"}}},{"Name": "Description","DataType": "Text","Collection": false,"Size": 739,"Nullable": false,"Updatable": true,"AttrName": "DESCRIPTION","Keygeneration": "User","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}},{"Name": "CurrencyNumber","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "CURRENCY_NUMBER","Keygeneration": "User","Execute": {"SQL": {"Select": "currency_number","ImplementationType": "NUMBER","Alias": "currency_number"}}},{"Name": "UsedInAppl","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": true,"AttrName": "USED_IN_APPL","Keygeneration": "User","Execute": {"SQL": {"Select": "used_in_appl","ImplementationType": "VARCHAR2","Alias": "used_in_appl"}}},{"Name": "DefaultCountry","DataType": "Text","Collection": false,"Size": 2,"Nullable": true,"Updatable": true,"AttrName": "DEFAULT_COUNTRY","Keygeneration": "User","Execute": {"SQL": {"Select": "default_country","ImplementationType": "VARCHAR2","Alias": "default_country"}}},{"Name": "SystemAdded","DataType": "Text","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "SYSTEM_ADDED","Keygeneration": "User","Execute": {"SQL": {"Select": "system_added","ImplementationType": "VARCHAR2","Alias": "system_added"}}}[#[jsoncallback:Custom_Object_P');
   Dbms_Lob.Writeappend(clob_, 2432, 'roxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"IsoCurrency","Type":"Entity","Name":"IsoCurrency","View":"ISO_CURRENCY"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''IsoCurrency''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CURRENCY_CODE=''||currency_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"IsoCurrency","Lu":"IsoCurrency","View":"ISO_CURRENCY"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "Site","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"Site","View":"SITE"}]#]"}},"Keys": ["Contract"],"KeysWhere": "(contract = :Contract)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Site''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CONTRACT=''||contract||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "Contract","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": false,"AttrName": "CONTRACT","Keygeneration": "User","Execute": {"SQL": {"Select": "contract","ImplementationType": "VARCHAR2","Alias": "contract"}}},{"Name": "Company","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": false,"AttrName": "COMPANY","Keygeneration": "User","Execute": {"SQL": {"Select": "company","ImplementationType": "VARCHAR2","Alias": "company"}}},{"Name": "Deliver');
   Dbms_Lob.Writeappend(clob_, 2444, 'yAddress","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "DELIVERY_ADDRESS","Keygeneration": "User","Execute": {"SQL": {"Select": "delivery_address","ImplementationType": "VARCHAR2","Alias": "delivery_address"}}},{"Name": "Description","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DESCRIPTION","Keygeneration": "Server","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}},{"Name": "DistCalendarId","DataType": "Text","Collection": false,"Size": 10,"Nullable": false,"Updatable": true,"AttrName": "DIST_CALENDAR_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "dist_calendar_id","ImplementationType": "VARCHAR2","Alias": "dist_calendar_id"}}},{"Name": "ManufCalendarId","DataType": "Text","Collection": false,"Size": 10,"Nullable": false,"Updatable": true,"AttrName": "MANUF_CALENDAR_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "manuf_calendar_id","ImplementationType": "VARCHAR2","Alias": "manuf_calendar_id"}}},{"Name": "Offset","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "OFFSET","Keygeneration": "User","Execute": {"SQL": {"Select": "offset","ImplementationType": "NUMBER","Alias": "offset"}}},{"Name": "DataCaptureMenuId","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "DATA_CAPTURE_MENU_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "data_capture_menu_id","ImplementationType": "VARCHAR2","Alias": "data_capture_menu_id"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"Site","Type":"Entity","Name":"Site","View":"SITE"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Site''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CONTRACT=''||contract||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"Site","Lu":"Site","View":"SITE"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "CustomerOrder","SupportWarnings');
   Dbms_Lob.Writeappend(clob_, 2438, '": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"CustomerOrder","View":"CUSTOMER_ORDER"}]#]"}},"Keys": ["OrderNo"],"KeysWhere": "(order_no = :OrderNo)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''CustomerOrder''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ORDER_NO=''||order_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objstate","DataType": "Enumeration","SubType": "CustomerOrderState","Collection": false,"Size": 50,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJSTATE","Keygeneration": "Server","Execute": {"SQL": {"Select": "objstate","OrderBy": "state","ImplementationType": "VARCHAR2","Alias": "objstate"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "OrderNo","DataType": "Text","Collection": false,"Size": 12,"Nullable": true,"Updatable": false,"AttrName": "ORDER_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "order_no","ImplementationType": "VARCHAR2","Alias": "order_no"}}},{"Name": "AuthorizeCode","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "AUTHORIZE_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "authorize_code","ImplementationType": "VARCHAR2","Alias": "authorize_code"}}},{"Name": "BillAddrNo","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "BILL_ADDR_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "bill_addr_no","ImplementationType": "VARCHAR2","Alias": "bill_addr_no"}}},{"Name": "Contract","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": false,"AttrName": "CONTRACT","Keygeneration": "User","Execute": {"SQL": {"Select": "contract","Implementation');
   Dbms_Lob.Writeappend(clob_, 2450, 'Type": "VARCHAR2","Alias": "contract"}}},{"Name": "Company","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "COMPANY","Keygeneration": "Server","Execute": {"SQL": {"Select": "company","ImplementationType": "VARCHAR2","Alias": "company"}}},{"Name": "CountryCode","DataType": "Text","Collection": false,"Size": 2,"Nullable": true,"Updatable": true,"AttrName": "COUNTRY_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "country_code","ImplementationType": "VARCHAR2","Alias": "country_code"}}},{"Name": "CurrencyCode","DataType": "Text","Collection": false,"Size": 3,"Nullable": false,"Updatable": false,"AttrName": "CURRENCY_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "currency_code","ImplementationType": "VARCHAR2","Alias": "currency_code"}}},{"Name": "CustomerNo","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": false,"AttrName": "CUSTOMER_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_no","ImplementationType": "VARCHAR2","Alias": "customer_no"}}},{"Name": "CustomerNoPay","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMER_NO_PAY","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_no_pay","ImplementationType": "VARCHAR2","Alias": "customer_no_pay"}}},{"Name": "CustomerNoPayAddrNo","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMER_NO_PAY_ADDR_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_no_pay_addr_no","ImplementationType": "VARCHAR2","Alias": "customer_no_pay_addr_no"}}},{"Name": "CustomerNoPayReference","DataType": "Text","Collection": false,"Size": 30,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMER_NO_PAY_REF","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_no_pay_ref","ImplementationType": "VARCHAR2","Alias": "customer_no_pay_reference"}}},{"Name": "DeliveryTerms","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": true,"AttrName": "DELIVERY_TERMS","Keygeneration": "User","Execute": {"SQL": {"Select": "delivery_terms","ImplementationType": "VARCHAR2","Alias": "delivery_terms"}}},{"Name": "DistrictCode","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "DISTRICT_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "d');
   Dbms_Lob.Writeappend(clob_, 2450, 'istrict_code","ImplementationType": "VARCHAR2","Alias": "district_code"}}},{"Name": "LanguageCode","DataType": "Text","Collection": false,"Size": 2,"Nullable": false,"Updatable": true,"AttrName": "LANGUAGE_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "language_code","ImplementationType": "VARCHAR2","Alias": "language_code"}}},{"Name": "MarketCode","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "MARKET_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "market_code","ImplementationType": "VARCHAR2","Alias": "market_code"}}},{"Name": "NoteId","DataType": "Number","Collection": false,"Nullable": true,"Updatable": false,"AttrName": "NOTE_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "note_id","ImplementationType": "NUMBER","Alias": "note_id"}}},{"Name": "OrderCode","DataType": "Text","Collection": false,"Size": 3,"Nullable": false,"Updatable": false,"AttrName": "ORDER_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "order_code","ImplementationType": "VARCHAR2","Alias": "order_code"}}},{"Name": "OrderId","DataType": "Text","Collection": false,"Size": 3,"Nullable": false,"Updatable": false,"AttrName": "ORDER_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "order_id","ImplementationType": "VARCHAR2","Alias": "order_id"}}},{"Name": "PayTermId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "PAY_TERM_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "pay_term_id","ImplementationType": "VARCHAR2","Alias": "pay_term_id"}}},{"Name": "PreAccountingId","DataType": "Number","Collection": false,"Nullable": true,"Updatable": false,"AttrName": "PRE_ACCOUNTING_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "pre_accounting_id","ImplementationType": "NUMBER","Alias": "pre_accounting_id"}}},{"Name": "PrintControlCode","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "PRINT_CONTROL_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "print_control_code","ImplementationType": "VARCHAR2","Alias": "print_control_code"}}},{"Name": "RegionCode","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "REGION_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "region_code","ImplementationType": "VARCHAR2","Alias": "region_code"}}},{"Name": "SalesmanCode","Dat');
   Dbms_Lob.Writeappend(clob_, 2450, 'aType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "SALESMAN_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "salesman_code","ImplementationType": "VARCHAR2","Alias": "salesman_code"}}},{"Name": "ShipAddrNo","DataType": "Text","Collection": false,"Size": 50,"Nullable": false,"Updatable": true,"AttrName": "SHIP_ADDR_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "ship_addr_no","ImplementationType": "VARCHAR2","Alias": "ship_addr_no"}}},{"Name": "ShipViaCode","DataType": "Text","Collection": false,"Size": 3,"Nullable": true,"Updatable": true,"AttrName": "SHIP_VIA_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "ship_via_code","ImplementationType": "VARCHAR2","Alias": "ship_via_code"}}},{"Name": "AddrFlag","DataType": "Enumeration","SubType": "GenYesNo","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "ADDR_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "addr_flag_db","OrderBy": "addr_flag","ImplementationType": "VARCHAR2","Alias": "addr_flag"}}},{"Name": "GrpDiscCalcFlag","DataType": "Enumeration","SubType": "GenYesNo","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "GRP_DISC_CALC_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "grp_disc_calc_flag_db","OrderBy": "grp_disc_calc_flag","ImplementationType": "VARCHAR2","Alias": "grp_disc_calc_flag"}}},{"Name": "CustomerPoNo","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMER_PO_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_po_no","ImplementationType": "VARCHAR2","Alias": "customer_po_no"}}},{"Name": "CustRef","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "CUST_REF","Keygeneration": "User","Execute": {"SQL": {"Select": "cust_ref","ImplementationType": "VARCHAR2","Alias": "cust_ref"}}},{"Name": "DateEntered","DataType": "Timestamp","Collection": false,"Nullable": true,"Updatable": false,"AttrName": "DATE_ENTERED","Keygeneration": "User","Execute": {"SQL": {"Select": "date_entered","ImplementationType": "DATE","Alias": "date_entered"}}},{"Name": "DeliveryLeadtime","DataType": "Number","Collection": false,"Precision": "3","Nullable": false,"Updatable": true,"AttrName": "DELIVERY_LEADTIME","Keygeneration": "User","Execute": {"SQL": {"Select": "delivery_leadtime","Implementatio');
   Dbms_Lob.Writeappend(clob_, 2450, 'nType": "NUMBER","Alias": "delivery_leadtime"}}},{"Name": "LabelNote","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "LABEL_NOTE","Keygeneration": "User","Execute": {"SQL": {"Select": "label_note","ImplementationType": "VARCHAR2","Alias": "label_note"}}},{"Name": "NoteText","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Updatable": true,"AttrName": "NOTE_TEXT","Keygeneration": "User","Execute": {"SQL": {"Select": "note_text","ImplementationType": "VARCHAR2","Alias": "note_text"}}},{"Name": "OrderConf","DataType": "Enumeration","SubType": "OrderConfirmationPrinted","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "ORDER_CONF_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "order_conf_db","OrderBy": "order_conf","ImplementationType": "VARCHAR2","Alias": "order_conf"}}},{"Name": "OrderConfFlag","DataType": "Enumeration","SubType": "PrintOrderConfirmation","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "ORDER_CONF_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "order_conf_flag_db","OrderBy": "order_conf_flag","ImplementationType": "VARCHAR2","Alias": "order_conf_flag"}}},{"Name": "PackListFlag","DataType": "Enumeration","SubType": "PrintPackList","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "PACK_LIST_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "pack_list_flag_db","OrderBy": "pack_list_flag","ImplementationType": "VARCHAR2","Alias": "pack_list_flag"}}},{"Name": "PickListFlag","DataType": "Enumeration","SubType": "PrintPickList","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "PICK_LIST_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "pick_list_flag_db","OrderBy": "pick_list_flag","ImplementationType": "VARCHAR2","Alias": "pick_list_flag"}}},{"Name": "TaxLiability","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "TAX_LIABILITY","Keygeneration": "User","Execute": {"SQL": {"Select": "tax_liability","ImplementationType": "VARCHAR2","Alias": "tax_liability"}}},{"Name": "DeliveryCountryCode","DataType": "Text","Collection": false,"Size": 2,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DELIVERY_COUNTRY_CODE","Keygeneration": "Server","Execute": {"SQL": {"Select": "delivery_country_code","Impleme');
   Dbms_Lob.Writeappend(clob_, 2450, 'ntationType": "VARCHAR2","Alias": "delivery_country_code"}}},{"Name": "WantedDeliveryDate","DataType": "Timestamp","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "WANTED_DELIVERY_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "wanted_delivery_date","ImplementationType": "DATE","Alias": "wanted_delivery_date"}}},{"Name": "InternalPoNo","DataType": "Text","Collection": false,"Size": 12,"Nullable": true,"Updatable": false,"AttrName": "INTERNAL_PO_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "internal_po_no","ImplementationType": "VARCHAR2","Alias": "internal_po_no"}}},{"Name": "RouteId","DataType": "Text","Collection": false,"Size": 12,"Nullable": true,"Updatable": true,"AttrName": "ROUTE_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "route_id","ImplementationType": "VARCHAR2","Alias": "route_id"}}},{"Name": "AgreementId","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "AGREEMENT_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "agreement_id","ImplementationType": "VARCHAR2","Alias": "agreement_id"}}},{"Name": "ForwardAgentId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "FORWARD_AGENT_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "forward_agent_id","ImplementationType": "VARCHAR2","Alias": "forward_agent_id"}}},{"Name": "InternalDeliveryType","DataType": "Enumeration","SubType": "OrderDeliveryType","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "INTERNAL_DELIVERY_TYPE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "internal_delivery_type_db","OrderBy": "internal_delivery_type","ImplementationType": "VARCHAR2","Alias": "internal_delivery_type"}}},{"Name": "ExternalRef","DataType": "Text","Collection": false,"Size": 25,"Nullable": true,"Updatable": true,"AttrName": "EXTERNAL_REF","Keygeneration": "User","Execute": {"SQL": {"Select": "external_ref","ImplementationType": "VARCHAR2","Alias": "external_ref"}}},{"Name": "ProjectId","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "PROJECT_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "project_id","ImplementationType": "VARCHAR2","Alias": "project_id"}}},{"Name": "StagedBilling","DataType": "Enumeration","SubType": "StagedBillingType","Collection": false,"Size": 20,"Nullable": false,"Updat');
   Dbms_Lob.Writeappend(clob_, 2450, 'able": true,"AttrName": "STAGED_BILLING_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "staged_billing_db","OrderBy": "staged_billing","ImplementationType": "VARCHAR2","Alias": "staged_billing"}}},{"Name": "SmConnection","DataType": "Enumeration","SubType": "ServiceManagementConnect","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "SM_CONNECTION_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "sm_connection_db","OrderBy": "sm_connection","ImplementationType": "VARCHAR2","Alias": "sm_connection"}}},{"Name": "SchedulingConnection","DataType": "Enumeration","SubType": "ScheduleAgreementOrder","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "SCHEDULING_CONNECTION_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "scheduling_connection_db","OrderBy": "scheduling_connection","ImplementationType": "VARCHAR2","Alias": "scheduling_connection"}}},{"Name": "Priority","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "PRIORITY","Keygeneration": "User","Execute": {"SQL": {"Select": "priority","ImplementationType": "NUMBER","Alias": "priority"}}},{"Name": "IntrastatExempt","DataType": "Enumeration","SubType": "IntrastatExempt","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "INTRASTAT_EXEMPT_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "intrastat_exempt_db","OrderBy": "intrastat_exempt","ImplementationType": "VARCHAR2","Alias": "intrastat_exempt"}}},{"Name": "AdditionalDiscount","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "ADDITIONAL_DISCOUNT","Keygeneration": "User","Execute": {"SQL": {"Select": "additional_discount","ImplementationType": "NUMBER","Alias": "additional_discount"}}},{"Name": "PayTermBaseDate","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "PAY_TERM_BASE_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "pay_term_base_date","ImplementationType": "DATE","Alias": "pay_term_base_date"}}},{"Name": "SummarizedSourceLines","DataType": "Enumeration","SubType": "GenYesNo","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "SUMMARIZED_SOURCE_LINES_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "summarized_source_lines_db","OrderBy": "summarized_source_lines","ImplementationType": "VARCHAR2","Alias": "summarized_sour');
   Dbms_Lob.Writeappend(clob_, 2450, 'ce_lines"}}},{"Name": "CaseId","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "CASE_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "case_id","ImplementationType": "NUMBER","Alias": "case_id"}}},{"Name": "TaskId","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "TASK_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "task_id","ImplementationType": "NUMBER","Alias": "task_id"}}},{"Name": "ConfirmDeliveries","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "CONFIRM_DELIVERIES_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "confirm_deliveries_db","ImplementationType": "VARCHAR2","Alias": "confirm_deliveries"}}},{"Name": "CheckSalesGrpDelivConf","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "CHECK_SALES_GRP_DELIV_CONF_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "check_sales_grp_deliv_conf_db","ImplementationType": "VARCHAR2","Alias": "check_sales_grp_deliv_conf"}}},{"Name": "DelayCogsToDelivConf","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "DELAY_COGS_TO_DELIV_CONF_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "delay_cogs_to_deliv_conf_db","ImplementationType": "VARCHAR2","Alias": "delay_cogs_to_deliv_conf"}}},{"Name": "CancelReason","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "CANCEL_REASON","Keygeneration": "User","Execute": {"SQL": {"Select": "cancel_reason","ImplementationType": "VARCHAR2","Alias": "cancel_reason"}}},{"Name": "JinsuiInvoice","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "JINSUI_INVOICE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "jinsui_invoice_db","ImplementationType": "VARCHAR2","Alias": "jinsui_invoice"}}},{"Name": "BlockedReason","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "BLOCKED_REASON","Keygeneration": "User","Execute": {"SQL": {"Select": "blocked_reason","ImplementationType": "VARCHAR2","Alias": "blocked_reason"}}},{"Name": "BlockedFromState","DataTyp');
   Dbms_Lob.Writeappend(clob_, 2446, 'e": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "BLOCKED_FROM_STATE","Keygeneration": "User","Execute": {"SQL": {"Select": "blocked_from_state","ImplementationType": "VARCHAR2","Alias": "blocked_from_state"}}},{"Name": "SalesContractNo","DataType": "Text","Collection": false,"Size": 15,"Nullable": true,"Updatable": true,"AttrName": "SALES_CONTRACT_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "sales_contract_no","ImplementationType": "VARCHAR2","Alias": "sales_contract_no"}}},{"Name": "ContractRevSeq","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "CONTRACT_REV_SEQ","Keygeneration": "User","Execute": {"SQL": {"Select": "contract_rev_seq","ImplementationType": "NUMBER","Alias": "contract_rev_seq"}}},{"Name": "ContractLineNo","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "CONTRACT_LINE_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "contract_line_no","ImplementationType": "NUMBER","Alias": "contract_line_no"}}},{"Name": "ContractItemNo","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "CONTRACT_ITEM_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "contract_item_no","ImplementationType": "NUMBER","Alias": "contract_item_no"}}},{"Name": "DefaultCharges","DataType": "Boolean","Collection": false,"TrueValue": "1","FalseValue": "0","Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DEFAULT_CHARGES","Keygeneration": "Server","Execute": {"SQL": {"Select": "decode(default_charges,1,''TRUE'',0,''FALSE'',default_charges)","ImplementationType": "VARCHAR2","Alias": "default_charges"}}},{"Name": "ReleasedFromCreditCheck","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "RELEASED_FROM_CREDIT_CHECK_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "released_from_credit_check_db","ImplementationType": "VARCHAR2","Alias": "released_from_credit_check"}}},{"Name": "ProposedPrepaymentAmount","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "PROPOSED_PREPAYMENT_AMOUNT","Keygeneration": "User","Execute": {"SQL": {"Select": "proposed_prepayment_amount","ImplementationType": "NUMBER","Alias": "proposed_prepayment_amount"}}},{"Name": "PrepaymentApproved","DataType": "Boolean","Collect');
   Dbms_Lob.Writeappend(clob_, 2450, 'ion": false,"Size": 5,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "PREPAYMENT_APPROVED_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "prepayment_approved_db","ImplementationType": "VARCHAR2","Alias": "prepayment_approved"}}},{"Name": "BackorderOption","DataType": "Enumeration","SubType": "CustomerBackorderOption","Collection": false,"Size": 40,"Nullable": false,"Updatable": true,"AttrName": "BACKORDER_OPTION_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "backorder_option_db","OrderBy": "backorder_option","ImplementationType": "VARCHAR2","Alias": "backorder_option"}}},{"Name": "ExpectedPrepaymentDate","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "EXPECTED_PREPAYMENT_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "expected_prepayment_date","ImplementationType": "DATE","Alias": "expected_prepayment_date"}}},{"Name": "ShipmentCreation","DataType": "Enumeration","SubType": "ShipmentCreationCustomerOrder","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "SHIPMENT_CREATION_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "shipment_creation_db","OrderBy": "shipment_creation","ImplementationType": "VARCHAR2","Alias": "shipment_creation"}}},{"Name": "UsePreShipDelNote","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": false,"AttrName": "USE_PRE_SHIP_DEL_NOTE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "use_pre_ship_del_note_db","ImplementationType": "VARCHAR2","Alias": "use_pre_ship_del_note"}}},{"Name": "PickInventoryType","DataType": "Enumeration","SubType": "PickInventoryType","Collection": false,"Size": 7,"Nullable": false,"Updatable": false,"AttrName": "PICK_INVENTORY_TYPE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "pick_inventory_type_db","OrderBy": "pick_inventory_type","ImplementationType": "VARCHAR2","Alias": "pick_inventory_type"}}},{"Name": "TaxIdNo","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "TAX_ID_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "tax_id_no","ImplementationType": "VARCHAR2","Alias": "tax_id_no"}}},{"Name": "TaxIdValidatedDate","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "TAX_ID_VALIDATED_DATE","Keygeneration": "User","Exe');
   Dbms_Lob.Writeappend(clob_, 2450, 'cute": {"SQL": {"Select": "tax_id_validated_date","ImplementationType": "DATE","Alias": "tax_id_validated_date"}}},{"Name": "ClassificationStandard","DataType": "Text","Collection": false,"Size": 25,"Nullable": true,"Updatable": true,"AttrName": "CLASSIFICATION_STANDARD","Keygeneration": "User","Execute": {"SQL": {"Select": "classification_standard","ImplementationType": "VARCHAR2","Alias": "classification_standard"}}},{"Name": "MsgSequenceNo","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "MSG_SEQUENCE_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "msg_sequence_no","ImplementationType": "NUMBER","Alias": "msg_sequence_no"}}},{"Name": "MsgVersionNo","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "MSG_VERSION_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "msg_version_no","ImplementationType": "NUMBER","Alias": "msg_version_no"}}},{"Name": "CurrencyRateType","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "CURRENCY_RATE_TYPE","Keygeneration": "User","Execute": {"SQL": {"Select": "currency_rate_type","ImplementationType": "VARCHAR2","Alias": "currency_rate_type"}}},{"Name": "DelTermsLocation","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "DEL_TERMS_LOCATION","Keygeneration": "User","Execute": {"SQL": {"Select": "del_terms_location","ImplementationType": "VARCHAR2","Alias": "del_terms_location"}}},{"Name": "InternalRef","DataType": "Text","Collection": false,"Size": 30,"Nullable": true,"Updatable": true,"AttrName": "INTERNAL_REF","Keygeneration": "User","Execute": {"SQL": {"Select": "internal_ref","ImplementationType": "VARCHAR2","Alias": "internal_ref"}}},{"Name": "InternalPoLabelNote","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "INTERNAL_PO_LABEL_NOTE","Keygeneration": "User","Execute": {"SQL": {"Select": "internal_po_label_note","ImplementationType": "VARCHAR2","Alias": "internal_po_label_note"}}},{"Name": "SupplyCountry","DataType": "Enumeration","SubType": "Lookup_IsoCountry","Collection": false,"Size": 2,"Nullable": false,"Updatable": true,"AttrName": "SUPPLY_COUNTRY_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "supply_country_db","OrderBy": "supply_country","ImplementationType": "VARCHAR2","Alias": "supply_country"}}},{"Name": "RebateCu');
   Dbms_Lob.Writeappend(clob_, 2450, 'stomer","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "REBATE_CUSTOMER","Keygeneration": "User","Execute": {"SQL": {"Select": "rebate_customer","ImplementationType": "VARCHAR2","Alias": "rebate_customer"}}},{"Name": "FreightMapId","DataType": "Text","Collection": false,"Size": 15,"Nullable": true,"Updatable": true,"AttrName": "FREIGHT_MAP_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "freight_map_id","ImplementationType": "VARCHAR2","Alias": "freight_map_id"}}},{"Name": "ZoneId","DataType": "Text","Collection": false,"Size": 15,"Nullable": true,"Updatable": true,"AttrName": "ZONE_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "zone_id","ImplementationType": "VARCHAR2","Alias": "zone_id"}}},{"Name": "FreightPriceListNo","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "FREIGHT_PRICE_LIST_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "freight_price_list_no","ImplementationType": "VARCHAR2","Alias": "freight_price_list_no"}}},{"Name": "SummarizedFreightCharges","DataType": "Enumeration","SubType": "GenYesNo","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "SUMMARIZED_FREIGHT_CHARGES_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "summarized_freight_charges_db","OrderBy": "summarized_freight_charges","ImplementationType": "VARCHAR2","Alias": "summarized_freight_charges"}}},{"Name": "ApplyFixDelivFreight","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "APPLY_FIX_DELIV_FREIGHT_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "apply_fix_deliv_freight_db","ImplementationType": "VARCHAR2","Alias": "apply_fix_deliv_freight"}}},{"Name": "FixDelivFreight","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "FIX_DELIV_FREIGHT","Keygeneration": "User","Execute": {"SQL": {"Select": "fix_deliv_freight","ImplementationType": "NUMBER","Alias": "fix_deliv_freight"}}},{"Name": "PrintDeliveredLines","DataType": "Enumeration","SubType": "DeliveryNoteOptions","Collection": false,"Size": 23,"Nullable": false,"Updatable": true,"AttrName": "PRINT_DELIVERED_LINES_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "print_delivered_lines_db","OrderBy": "print_delivered_lines","ImplementationType": "VARCHAR2","Alias": ');
   Dbms_Lob.Writeappend(clob_, 2446, '"print_delivered_lines"}}},{"Name": "UpdatePriceEffectiveDate","DataType": "Boolean","Collection": false,"TrueValue": "1","FalseValue": "0","Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "UPDATE_PRICE_EFFECTIVE_DATE","Keygeneration": "Server","Execute": {"SQL": {"Select": "decode(update_price_effective_date,1,''TRUE'',0,''FALSE'',update_price_effective_date)","ImplementationType": "VARCHAR2","Alias": "update_price_effective_date"}}},{"Name": "CustCalendarId","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "CUST_CALENDAR_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "cust_calendar_id","ImplementationType": "VARCHAR2","Alias": "cust_calendar_id"}}},{"Name": "ExtTransportCalendarId","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "EXT_TRANSPORT_CALENDAR_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "ext_transport_calendar_id","ImplementationType": "VARCHAR2","Alias": "ext_transport_calendar_id"}}},{"Name": "UsePriceInclTax","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": false,"AttrName": "USE_PRICE_INCL_TAX_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "use_price_incl_tax_db","ImplementationType": "VARCHAR2","Alias": "use_price_incl_tax"}}},{"Name": "CustomsValueCurrency","DataType": "Text","Collection": false,"Size": 3,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMS_VALUE_CURRENCY","Keygeneration": "User","Execute": {"SQL": {"Select": "customs_value_currency","ImplementationType": "VARCHAR2","Alias": "customs_value_currency"}}},{"Name": "BusinessOpportunityNo","DataType": "Text","Collection": false,"Size": 12,"Nullable": true,"Updatable": false,"AttrName": "BUSINESS_OPPORTUNITY_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "business_opportunity_no","ImplementationType": "VARCHAR2","Alias": "business_opportunity_no"}}},{"Name": "PickingLeadtime","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "PICKING_LEADTIME","Keygeneration": "User","Execute": {"SQL": {"Select": "picking_leadtime","ImplementationType": "NUMBER","Alias": "picking_leadtime"}}},{"Name": "ShipmentType","DataType": "Text","Collection": false,"Size": 3,"Nullable": false,"Updatable": true,"AttrName": "SHIPMENT_TYPE","Keygeneration": "User","Execute": {"SQL": ');
   Dbms_Lob.Writeappend(clob_, 2450, '{"Select": "shipment_type","ImplementationType": "VARCHAR2","Alias": "shipment_type"}}},{"Name": "VendorNo","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "VENDOR_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "vendor_no","ImplementationType": "VARCHAR2","Alias": "vendor_no"}}},{"Name": "DisconnectExpLicense","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DISCONNECT_EXP_LICENSE","Keygeneration": "Server","Execute": {"SQL": {"Select": "disconnect_exp_license","ImplementationType": "VARCHAR2","Alias": "disconnect_exp_license"}}},{"Name": "ReplicateChanges","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "REPLICATE_CHANGES","Keygeneration": "Server","Execute": {"SQL": {"Select": "replicate_changes","ImplementationType": "VARCHAR2","Alias": "replicate_changes"}}},{"Name": "ChangeRequest","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "CHANGE_REQUEST","Keygeneration": "Server","Execute": {"SQL": {"Select": "change_request","ImplementationType": "VARCHAR2","Alias": "change_request"}}},{"Name": "QuotationNo","DataType": "Text","Collection": false,"Size": 12,"Nullable": true,"Updatable": true,"AttrName": "QUOTATION_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "quotation_no","ImplementationType": "VARCHAR2","Alias": "quotation_no"}}},{"Name": "FreeOfChgTaxPayParty","DataType": "Enumeration","SubType": "TaxPayingParty","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "FREE_OF_CHG_TAX_PAY_PARTY_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "free_of_chg_tax_pay_party_db","OrderBy": "free_of_chg_tax_pay_party","ImplementationType": "VARCHAR2","Alias": "free_of_chg_tax_pay_party"}}},{"Name": "BlockedType","DataType": "Enumeration","SubType": "CustomerOrderBlockType","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "BLOCKED_TYPE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "blocked_type_db","OrderBy": "blocked_type","ImplementationType": "VARCHAR2","Alias": "blocked_type"}}},{"Name": "B2bOrder","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": false,"AttrName": "B2B_ORDER_DB","Keygener');
   Dbms_Lob.Writeappend(clob_, 2450, 'ation": "User","Execute": {"SQL": {"Select": "b2b_order_db","ImplementationType": "VARCHAR2","Alias": "b2b_order"}}},{"Name": "MainRepresentativeId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "MAIN_REPRESENTATIVE_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "main_representative_id","ImplementationType": "VARCHAR2","Alias": "main_representative_id"}}},{"Name": "LimitSalesToAssortments","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "LIMIT_SALES_TO_ASSORTMENTS_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "limit_sales_to_assortments_db","ImplementationType": "VARCHAR2","Alias": "limit_sales_to_assortments"}}},{"Name": "FinalConsumer","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "FINAL_CONSUMER_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "final_consumer_db","ImplementationType": "VARCHAR2","Alias": "final_consumer"}}},{"Name": "CustomerTaxUsageType","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMER_TAX_USAGE_TYPE","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_tax_usage_type","ImplementationType": "VARCHAR2","Alias": "customer_tax_usage_type"}}},{"Name": "InvoiceReasonId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "INVOICE_REASON_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "invoice_reason_id","ImplementationType": "VARCHAR2","Alias": "invoice_reason_id"}}},{"Name": "DeliveryReasonId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "DELIVERY_REASON_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "delivery_reason_id","ImplementationType": "VARCHAR2","Alias": "delivery_reason_id"}}},{"Name": "ComponentA","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "COMPONENT_A","Keygeneration": "User","Execute": {"SQL": {"Select": "component_a","ImplementationType": "VARCHAR2","Alias": "component_a"}}},{"Name": "ServiceCode","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "SERVICE_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "service_co');
   Dbms_Lob.Writeappend(clob_, 2437, 'de","ImplementationType": "VARCHAR2","Alias": "service_code"}}},{"Name": "DiscPriceRound","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Insertable": false,"Updatable": false,"AttrName": "DISC_PRICE_ROUND_DB","Keygeneration": "Server","Execute": {"SQL": {"Select": "disc_price_round_db","ImplementationType": "VARCHAR2","Alias": "disc_price_round"}}},{"Name": "BusinessTransactionId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "BUSINESS_TRANSACTION_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "business_transaction_id","ImplementationType": "VARCHAR2","Alias": "business_transaction_id"}}},{"Name": "InvoicedClosedDate","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "INVOICED_CLOSED_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "invoiced_closed_date","ImplementationType": "DATE","Alias": "invoiced_closed_date"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"CustomerOrder","Type":"Entity","Name":"CustomerOrder","View":"CUSTOMER_ORDER"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''CustomerOrder''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ORDER_NO=''||order_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"CustomerOrder","Lu":"CustomerOrder","View":"CUSTOMER_ORDER"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "FndUser","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"FndUser","View":"FND_USER"}]#]"}},"Keys": ["Identity"],"KeysWhere": "(identity = :Identity)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''FndU');
   Dbms_Lob.Writeappend(clob_, 2445, 'ser''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''IDENTITY=''||identity||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "Identity","DataType": "Text","Collection": false,"Size": 30,"Nullable": false,"Updatable": false,"AttrName": "IDENTITY","Keygeneration": "User","Execute": {"SQL": {"Select": "identity","ImplementationType": "VARCHAR2","Alias": "identity"}}},{"Name": "Description","DataType": "Text","Collection": false,"Size": 2000,"Nullable": false,"Updatable": true,"AttrName": "DESCRIPTION","Keygeneration": "User","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}},{"Name": "OracleUser","DataType": "Text","Collection": false,"Size": 30,"Nullable": true,"Updatable": true,"AttrName": "ORACLE_USER","Keygeneration": "User","Execute": {"SQL": {"Select": "oracle_user","ImplementationType": "VARCHAR2","Alias": "oracle_user"}}},{"Name": "WebUser","DataType": "Text","Collection": false,"Size": 2000,"Nullable": false,"Updatable": true,"AttrName": "WEB_USER","Keygeneration": "User","Execute": {"SQL": {"Select": "web_user","ImplementationType": "VARCHAR2","Alias": "web_user"}}},{"Name": "UserType","DataType": "Enumeration","SubType": "FndUserType","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "USER_TYPE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "user_type_db","OrderBy": "user_type","ImplementationType": "VARCHAR2","Alias": "user_type"}}},{"Name": "Active","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": true,"AttrName": "ACTIVE","Keygeneration": "User","Execute": {"SQL": {"Select": "active","ImplementationType": "VARCHAR2","Alias": "active"}}},{"Name": "Created","DataType": "Date","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "CREATED","Keygeneration": "User","Execute": {"SQL": {"Select": "created","ImplementationType": "DATE","Alias": "created"}}},{"Name": "LastModified","DataType": "Date","Collection": false,"Nullable": false,"Updatable": true,"');
   Dbms_Lob.Writeappend(clob_, 2438, 'AttrName": "LAST_MODIFIED","Keygeneration": "User","Execute": {"SQL": {"Select": "last_modified","ImplementationType": "DATE","Alias": "last_modified"}}},{"Name": "ValidFrom","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "VALID_FROM","Keygeneration": "User","Execute": {"SQL": {"Select": "valid_from","ImplementationType": "DATE","Alias": "valid_from"}}},{"Name": "ValidTo","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "VALID_TO","Keygeneration": "User","Execute": {"SQL": {"Select": "valid_to","ImplementationType": "DATE","Alias": "valid_to"}}},{"Name": "DefaultIdp","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "DEFAULT_IDP","Keygeneration": "User","Execute": {"SQL": {"Select": "default_idp","ImplementationType": "VARCHAR2","Alias": "default_idp"}}},{"Name": "FromScim","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "FROM_SCIM","Keygeneration": "User","Execute": {"SQL": {"Select": "from_scim","ImplementationType": "VARCHAR2","Alias": "from_scim"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"FndUser","Type":"Entity","Name":"FndUser","View":"FND_USER"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''FndUser''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''IDENTITY=''||identity||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"FndUser","Lu":"FndUser","View":"FND_USER"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "BcRepairType","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairType","View":"BC_REPAIR_TYPE"}]#]"}},"Keys": ["RepairType"],"KeysWhere": "(repair_type = :RepairType)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name":');
   Dbms_Lob.Writeappend(clob_, 2437, ' "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairType''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''REPAIR_TYPE=''||repair_type||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "RepairType","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": false,"AttrName": "REPAIR_TYPE","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_type","ImplementationType": "VARCHAR2","Alias": "repair_type"}}},{"Name": "Description","DataType": "Text","Collection": false,"Size": 60,"Nullable": false,"Updatable": true,"AttrName": "DESCRIPTION","Keygeneration": "User","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairType","Type":"Entity","Name":"BcRepairType","View":"BC_REPAIR_TYPE"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairType''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''REPAIR_TYPE=''||repair_type||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"BcRepairType","Lu":"BcRepairType","View":"BC_REPAIR_TYPE"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "ConditionCode","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"ConditionCode","View":"CONDITION_CODE"}]#]"}},"Keys": ["ConditionCode"],"KeysWhere": "(condition_code = :ConditionCode)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "');
   Dbms_Lob.Writeappend(clob_, 2438, '''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''ConditionCode''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CONDITION_CODE=''||condition_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "ConditionCode","DataType": "Text","Collection": false,"Size": 10,"Nullable": false,"Updatable": false,"AttrName": "CONDITION_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "condition_code","ImplementationType": "VARCHAR2","Alias": "condition_code"}}},{"Name": "Description","DataType": "Text","Collection": false,"Size": 35,"Nullable": false,"Updatable": true,"AttrName": "DESCRIPTION","Keygeneration": "User","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}},{"Name": "NoteText","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Updatable": true,"AttrName": "NOTE_TEXT","Keygeneration": "User","Execute": {"SQL": {"Select": "note_text","ImplementationType": "VARCHAR2","Alias": "note_text"}}},{"Name": "ConditionCodeType","DataType": "Enumeration","SubType": "ConditionCodeType","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "CONDITION_CODE_TYPE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "condition_code_type_db","OrderBy": "condition_code_type","ImplementationType": "VARCHAR2","Alias": "condition_code_type"}}},{"Name": "DefaultAvailControlId","DataType": "Text","Collection": false,"Size": 25,"Nullable": true,"Updatable": true,"AttrName": "DEFAULT_AVAIL_CONTROL_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "default_avail_control_id","ImplementationType": "VARCHAR2","Alias": "default_avail_control_id"}}},{"Name": "ResetRepairValue","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "RESET_REPAIR_VALUE_DB","Keygenerati');
   Dbms_Lob.Writeappend(clob_, 2428, 'on": "User","Execute": {"SQL": {"Select": "reset_repair_value_db","ImplementationType": "VARCHAR2","Alias": "reset_repair_value"}}},{"Name": "ResetOverhaulValue","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "RESET_OVERHAUL_VALUE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "reset_overhaul_value_db","ImplementationType": "VARCHAR2","Alias": "reset_overhaul_value"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"ConditionCode","Type":"Entity","Name":"ConditionCode","View":"CONDITION_CODE"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''ConditionCode''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CONDITION_CODE=''||condition_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"ConditionCode","Lu":"ConditionCode","View":"CONDITION_CODE"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "InventoryPart","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"InventoryPart","View":"INVENTORY_PART"}]#]"}},"Keys": ["Contract","PartNo"],"KeysWhere": "(contract = :Contract AND part_no = :PartNo)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''InventoryPart''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CONTRACT=''||contract||''^''||''PART_NO=''||part_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygenerat');
   Dbms_Lob.Writeappend(clob_, 2450, 'ion": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "Contract","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": false,"AttrName": "CONTRACT","Keygeneration": "User","Execute": {"SQL": {"Select": "contract","ImplementationType": "VARCHAR2","Alias": "contract"}}},{"Name": "PartNo","DataType": "Text","Collection": false,"Size": 25,"Nullable": false,"Updatable": false,"AttrName": "PART_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "part_no","ImplementationType": "VARCHAR2","Alias": "part_no"}}},{"Name": "AccountingGroup","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "ACCOUNTING_GROUP","Keygeneration": "User","Execute": {"SQL": {"Select": "accounting_group","ImplementationType": "VARCHAR2","Alias": "accounting_group"}}},{"Name": "AssetClass","DataType": "Text","Collection": false,"Size": 2,"Nullable": false,"Updatable": true,"AttrName": "ASSET_CLASS","Keygeneration": "User","Execute": {"SQL": {"Select": "asset_class","ImplementationType": "VARCHAR2","Alias": "asset_class"}}},{"Name": "CountryOfOrigin","DataType": "Text","Collection": false,"Size": 2,"Nullable": true,"Updatable": true,"AttrName": "COUNTRY_OF_ORIGIN","Keygeneration": "User","Execute": {"SQL": {"Select": "country_of_origin","ImplementationType": "VARCHAR2","Alias": "country_of_origin"}}},{"Name": "HazardCode","DataType": "Text","Collection": false,"Size": 6,"Nullable": true,"Updatable": true,"AttrName": "HAZARD_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "hazard_code","ImplementationType": "VARCHAR2","Alias": "hazard_code"}}},{"Name": "NoteId","DataType": "Number","Collection": false,"Precision": "10","Nullable": true,"Updatable": false,"AttrName": "NOTE_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "note_id","ImplementationType": "NUMBER","Alias": "note_id"}}},{"Name": "EstimatedMaterialCost","DataType": "Number","Collection": false,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "ESTIMATED_MATERIAL_COST","Keygeneration": "Server","Execute": {"SQL": {"Select": "estimated_material_cost","ImplementationType": "NUMBER","Alias": "estimated_material_cost"}}},{"Name": "PartProductCode","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "PART_PRODUCT_CODE","Keygeneration": "User","Execute": {"SQL": {"Select');
   Dbms_Lob.Writeappend(clob_, 2450, '": "part_product_code","ImplementationType": "VARCHAR2","Alias": "part_product_code"}}},{"Name": "PartProductFamily","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "PART_PRODUCT_FAMILY","Keygeneration": "User","Execute": {"SQL": {"Select": "part_product_family","ImplementationType": "VARCHAR2","Alias": "part_product_family"}}},{"Name": "PartStatus","DataType": "Text","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "PART_STATUS","Keygeneration": "User","Execute": {"SQL": {"Select": "part_status","ImplementationType": "VARCHAR2","Alias": "part_status"}}},{"Name": "PlannerBuyer","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "PLANNER_BUYER","Keygeneration": "User","Execute": {"SQL": {"Select": "planner_buyer","ImplementationType": "VARCHAR2","Alias": "planner_buyer"}}},{"Name": "PrimeCommodity","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "PRIME_COMMODITY","Keygeneration": "User","Execute": {"SQL": {"Select": "prime_commodity","ImplementationType": "VARCHAR2","Alias": "prime_commodity"}}},{"Name": "SecondCommodity","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "SECOND_COMMODITY","Keygeneration": "User","Execute": {"SQL": {"Select": "second_commodity","ImplementationType": "VARCHAR2","Alias": "second_commodity"}}},{"Name": "UnitMeas","DataType": "Text","Collection": false,"Size": 10,"Nullable": false,"Updatable": false,"AttrName": "UNIT_MEAS","Keygeneration": "User","Execute": {"SQL": {"Select": "unit_meas","ImplementationType": "VARCHAR2","Alias": "unit_meas"}}},{"Name": "CatchUnitMeas","DataType": "Text","Collection": false,"Size": 30,"Nullable": true,"Updatable": true,"AttrName": "CATCH_UNIT_MEAS","Keygeneration": "User","Execute": {"SQL": {"Select": "catch_unit_meas","ImplementationType": "VARCHAR2","Alias": "catch_unit_meas"}}},{"Name": "Description","DataType": "Text","Collection": false,"Size": 200,"Nullable": false,"Updatable": true,"AttrName": "DESCRIPTION","Keygeneration": "User","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}},{"Name": "DescriptionCopy","DataType": "Text","Collection": false,"Size": 200,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DESCRIPTION_COPY","Keygeneration": "Server","Execu');
   Dbms_Lob.Writeappend(clob_, 2450, 'te": {"SQL": {"Select": "description_copy","ImplementationType": "VARCHAR2","Alias": "description_copy"}}},{"Name": "DescriptionInUse","DataType": "Text","Collection": false,"Size": 200,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DESCRIPTION_IN_USE","Keygeneration": "Server","Execute": {"SQL": {"Select": "description_in_use","ImplementationType": "VARCHAR2","Alias": "description_in_use"}}},{"Name": "AbcClass","DataType": "Text","Collection": false,"Size": 1,"Nullable": true,"Updatable": true,"AttrName": "ABC_CLASS","Keygeneration": "User","Execute": {"SQL": {"Select": "abc_class","ImplementationType": "VARCHAR2","Alias": "abc_class"}}},{"Name": "AbcClassLockedUntil","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "ABC_CLASS_LOCKED_UNTIL","Keygeneration": "User","Execute": {"SQL": {"Select": "abc_class_locked_until","ImplementationType": "DATE","Alias": "abc_class_locked_until"}}},{"Name": "CountVariance","DataType": "Number","Collection": false,"Nullable": false,"Insertable": false,"Updatable": true,"AttrName": "COUNT_VARIANCE","Keygeneration": "User","Execute": {"SQL": {"Select": "count_variance","ImplementationType": "NUMBER","Alias": "count_variance"}}},{"Name": "CreateDate","DataType": "Date","Collection": false,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "CREATE_DATE","Keygeneration": "Server","Execute": {"SQL": {"Select": "create_date","ImplementationType": "DATE","Alias": "create_date"}}},{"Name": "CycleCode","DataType": "Enumeration","SubType": "InventoryPartCountType","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "CYCLE_CODE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "cycle_code_db","OrderBy": "cycle_code","ImplementationType": "VARCHAR2","Alias": "cycle_code"}}},{"Name": "CyclePeriod","DataType": "Number","Collection": false,"Precision": "3","Nullable": false,"Updatable": true,"AttrName": "CYCLE_PERIOD","Keygeneration": "User","Execute": {"SQL": {"Select": "cycle_period","ImplementationType": "NUMBER","Alias": "cycle_period"}}},{"Name": "DimQuality","DataType": "Text","Collection": false,"Size": 25,"Nullable": true,"Updatable": true,"AttrName": "DIM_QUALITY","Keygeneration": "User","Execute": {"SQL": {"Select": "dim_quality","ImplementationType": "VARCHAR2","Alias": "dim_quality"}}},{"Name": "DurabilityDay","DataType": "Number","Collection": false,"Precision": "4","');
   Dbms_Lob.Writeappend(clob_, 2450, 'Nullable": true,"Updatable": true,"AttrName": "DURABILITY_DAY","Keygeneration": "User","Execute": {"SQL": {"Select": "durability_day","ImplementationType": "NUMBER","Alias": "durability_day"}}},{"Name": "ExpectedLeadtime","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "EXPECTED_LEADTIME","Keygeneration": "User","Execute": {"SQL": {"Select": "expected_leadtime","ImplementationType": "NUMBER","Alias": "expected_leadtime"}}},{"Name": "LastActivityDate","DataType": "Date","Collection": false,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "LAST_ACTIVITY_DATE","Keygeneration": "Server","Execute": {"SQL": {"Select": "last_activity_date","ImplementationType": "DATE","Alias": "last_activity_date"}}},{"Name": "LeadTimeCode","DataType": "Enumeration","SubType": "InvPartLeadTimeCode","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "LEAD_TIME_CODE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "lead_time_code_db","OrderBy": "lead_time_code","ImplementationType": "VARCHAR2","Alias": "lead_time_code"}}},{"Name": "ManufLeadtime","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "MANUF_LEADTIME","Keygeneration": "User","Execute": {"SQL": {"Select": "manuf_leadtime","ImplementationType": "NUMBER","Alias": "manuf_leadtime"}}},{"Name": "NoteText","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Updatable": true,"AttrName": "NOTE_TEXT","Keygeneration": "User","Execute": {"SQL": {"Select": "note_text","ImplementationType": "VARCHAR2","Alias": "note_text"}}},{"Name": "OeAllocAssignFlag","DataType": "Enumeration","SubType": "CustOrdReservationType","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "OE_ALLOC_ASSIGN_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "oe_alloc_assign_flag_db","OrderBy": "oe_alloc_assign_flag","ImplementationType": "VARCHAR2","Alias": "oe_alloc_assign_flag"}}},{"Name": "OnhandAnalysisFlag","DataType": "Enumeration","SubType": "InventoryPartOnhAnalys","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "ONHAND_ANALYSIS_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "onhand_analysis_flag_db","OrderBy": "onhand_analysis_flag","ImplementationType": "VARCHAR2","Alias": "onhand_analysis_flag"}}},{"Name": "PurchLeadtime","DataType": "Number","Collection": false,"Null');
   Dbms_Lob.Writeappend(clob_, 2450, 'able": false,"Updatable": true,"AttrName": "PURCH_LEADTIME","Keygeneration": "User","Execute": {"SQL": {"Select": "purch_leadtime","ImplementationType": "NUMBER","Alias": "purch_leadtime"}}},{"Name": "EarliestUltdSupplyDate","DataType": "Date","Collection": false,"Nullable": true,"Insertable": false,"Updatable": true,"AttrName": "EARLIEST_ULTD_SUPPLY_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "earliest_ultd_supply_date","ImplementationType": "DATE","Alias": "earliest_ultd_supply_date"}}},{"Name": "Supersedes","DataType": "Text","Collection": false,"Size": 25,"Nullable": true,"Updatable": true,"AttrName": "SUPERSEDES","Keygeneration": "User","Execute": {"SQL": {"Select": "supersedes","ImplementationType": "VARCHAR2","Alias": "supersedes"}}},{"Name": "SupplyCode","DataType": "Enumeration","SubType": "MaterialRequisSupplySubset1","Collection": false,"Size": 3,"Nullable": false,"Updatable": true,"AttrName": "SUPPLY_CODE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "supply_code_db","OrderBy": "supply_code","ImplementationType": "VARCHAR2","Alias": "supply_code"}}},{"Name": "TypeCode","DataType": "Enumeration","SubType": "InventoryPartType","Collection": false,"Size": 2,"Nullable": false,"Updatable": true,"AttrName": "TYPE_CODE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "type_code_db","OrderBy": "type_code","ImplementationType": "VARCHAR2","Alias": "type_code"}}},{"Name": "CustomsStatNo","DataType": "Text","Collection": false,"Size": 15,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMS_STAT_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "customs_stat_no","ImplementationType": "VARCHAR2","Alias": "customs_stat_no"}}},{"Name": "TypeDesignation","DataType": "Text","Collection": false,"Size": 25,"Nullable": true,"Updatable": true,"AttrName": "TYPE_DESIGNATION","Keygeneration": "User","Execute": {"SQL": {"Select": "type_designation","ImplementationType": "VARCHAR2","Alias": "type_designation"}}},{"Name": "ZeroCostFlag","DataType": "Enumeration","SubType": "InventoryPartZeroCost","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "ZERO_COST_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "zero_cost_flag_db","OrderBy": "zero_cost_flag","ImplementationType": "VARCHAR2","Alias": "zero_cost_flag"}}},{"Name": "AvailActivityStatus","DataType": "Enumeration","SubType": "InventoryPartAvailStat","Collection": false,"Size": 9,');
   Dbms_Lob.Writeappend(clob_, 2450, '"Nullable": false,"Updatable": true,"AttrName": "AVAIL_ACTIVITY_STATUS_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "avail_activity_status_db","OrderBy": "avail_activity_status","ImplementationType": "VARCHAR2","Alias": "avail_activity_status"}}},{"Name": "EngAttribute","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "ENG_ATTRIBUTE","Keygeneration": "User","Execute": {"SQL": {"Select": "eng_attribute","ImplementationType": "VARCHAR2","Alias": "eng_attribute"}}},{"Name": "ShortageFlag","DataType": "Enumeration","SubType": "InventoryPartShortage","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "SHORTAGE_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "shortage_flag_db","OrderBy": "shortage_flag","ImplementationType": "VARCHAR2","Alias": "shortage_flag"}}},{"Name": "ForecastConsumptionFlag","DataType": "Enumeration","SubType": "InvPartForecastConsum","Collection": false,"Size": 30,"Nullable": false,"Updatable": true,"AttrName": "FORECAST_CONSUMPTION_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "forecast_consumption_flag_db","OrderBy": "forecast_consumption_flag","ImplementationType": "VARCHAR2","Alias": "forecast_consumption_flag"}}},{"Name": "StockManagement","DataType": "Enumeration","SubType": "InventoryPartManagement","Collection": false,"Size": 50,"Nullable": false,"Updatable": true,"AttrName": "STOCK_MANAGEMENT_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "stock_management_db","OrderBy": "stock_management","ImplementationType": "VARCHAR2","Alias": "stock_management"}}},{"Name": "IntrastatConvFactor","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "INTRASTAT_CONV_FACTOR","Keygeneration": "User","Execute": {"SQL": {"Select": "intrastat_conv_factor","ImplementationType": "NUMBER","Alias": "intrastat_conv_factor"}}},{"Name": "PartCostGroupId","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "PART_COST_GROUP_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "part_cost_group_id","ImplementationType": "VARCHAR2","Alias": "part_cost_group_id"}}},{"Name": "DopConnection","DataType": "Enumeration","SubType": "DopConnection","Collection": false,"Size": 200,"Nullable": false,"Updatable": true,"AttrName": "DOP_CONNECTION_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "dop_connec');
   Dbms_Lob.Writeappend(clob_, 2450, 'tion_db","OrderBy": "dop_connection","ImplementationType": "VARCHAR2","Alias": "dop_connection"}}},{"Name": "StdNameId","DataType": "Number","Collection": false,"Precision": "10","Nullable": true,"Updatable": true,"AttrName": "STD_NAME_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "std_name_id","ImplementationType": "NUMBER","Alias": "std_name_id"}}},{"Name": "InventoryValuationMethod","DataType": "Enumeration","SubType": "InventoryValueMethod","Collection": false,"Size": 50,"Nullable": false,"Updatable": true,"AttrName": "INVENTORY_VALUATION_METHOD_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "inventory_valuation_method_db","OrderBy": "inventory_valuation_method","ImplementationType": "VARCHAR2","Alias": "inventory_valuation_method"}}},{"Name": "NegativeOnHand","DataType": "Enumeration","SubType": "NegativeOnHand","Collection": false,"Size": 50,"Nullable": false,"Updatable": true,"AttrName": "NEGATIVE_ON_HAND_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "negative_on_hand_db","OrderBy": "negative_on_hand","ImplementationType": "VARCHAR2","Alias": "negative_on_hand"}}},{"Name": "TechnicalCoordinatorId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "TECHNICAL_COORDINATOR_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "technical_coordinator_id","ImplementationType": "VARCHAR2","Alias": "technical_coordinator_id"}}},{"Name": "InvoiceConsideration","DataType": "Enumeration","SubType": "InvoiceConsideration","Collection": false,"Size": 50,"Nullable": false,"Updatable": true,"AttrName": "INVOICE_CONSIDERATION_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "invoice_consideration_db","OrderBy": "invoice_consideration","ImplementationType": "VARCHAR2","Alias": "invoice_consideration"}}},{"Name": "ActualCostActivated","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "ACTUAL_COST_ACTIVATED","Keygeneration": "User","Execute": {"SQL": {"Select": "actual_cost_activated","ImplementationType": "DATE","Alias": "actual_cost_activated"}}},{"Name": "MaxActualCostUpdate","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "MAX_ACTUAL_COST_UPDATE","Keygeneration": "User","Execute": {"SQL": {"Select": "max_actual_cost_update","ImplementationType": "NUMBER","Alias": "max_actual_cost_update"}}},{"Name": "CustWarrantyId","DataType": "Number","Collection');
   Dbms_Lob.Writeappend(clob_, 2450, '": false,"Nullable": true,"Updatable": true,"AttrName": "CUST_WARRANTY_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "cust_warranty_id","ImplementationType": "NUMBER","Alias": "cust_warranty_id"}}},{"Name": "SupWarrantyId","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "SUP_WARRANTY_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "sup_warranty_id","ImplementationType": "NUMBER","Alias": "sup_warranty_id"}}},{"Name": "RegionOfOrigin","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "REGION_OF_ORIGIN","Keygeneration": "User","Execute": {"SQL": {"Select": "region_of_origin","ImplementationType": "VARCHAR2","Alias": "region_of_origin"}}},{"Name": "InventoryPartCostLevel","DataType": "Enumeration","SubType": "InventoryPartCostLevel","Collection": false,"Size": 50,"Nullable": false,"Updatable": true,"AttrName": "INVENTORY_PART_COST_LEVEL_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "inventory_part_cost_level_db","OrderBy": "inventory_part_cost_level","ImplementationType": "VARCHAR2","Alias": "inventory_part_cost_level"}}},{"Name": "ExtServiceCostMethod","DataType": "Enumeration","SubType": "ExtServiceCostMethod","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "EXT_SERVICE_COST_METHOD_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "ext_service_cost_method_db","OrderBy": "ext_service_cost_method","ImplementationType": "VARCHAR2","Alias": "ext_service_cost_method"}}},{"Name": "SupplyChainPartGroup","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "SUPPLY_CHAIN_PART_GROUP","Keygeneration": "User","Execute": {"SQL": {"Select": "supply_chain_part_group","ImplementationType": "VARCHAR2","Alias": "supply_chain_part_group"}}},{"Name": "AutomaticCapabilityCheck","DataType": "Enumeration","SubType": "CapabilityCheckAllocate","Collection": false,"Size": 50,"Nullable": false,"Updatable": true,"AttrName": "AUTOMATIC_CAPABILITY_CHECK_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "automatic_capability_check_db","OrderBy": "automatic_capability_check","ImplementationType": "VARCHAR2","Alias": "automatic_capability_check"}}},{"Name": "InputUnitMeasGroupId","DataType": "Text","Collection": false,"Size": 30,"Nullable": true,"Updatable": true,"AttrName": "INPUT_UNIT_MEAS_GROUP_ID","Keygeneration": "User","Execut');
   Dbms_Lob.Writeappend(clob_, 2450, 'e": {"SQL": {"Select": "input_unit_meas_group_id","ImplementationType": "VARCHAR2","Alias": "input_unit_meas_group_id"}}},{"Name": "DopNetting","DataType": "Enumeration","SubType": "DopNetting","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "DOP_NETTING_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "dop_netting_db","OrderBy": "dop_netting","ImplementationType": "VARCHAR2","Alias": "dop_netting"}}},{"Name": "CoReserveOnhAnalysFlag","DataType": "Enumeration","SubType": "InventoryPartOnhAnalys","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "CO_RESERVE_ONH_ANALYS_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "co_reserve_onh_analys_flag_db","OrderBy": "co_reserve_onh_analys_flag","ImplementationType": "VARCHAR2","Alias": "co_reserve_onh_analys_flag"}}},{"Name": "QtyCalcRounding","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "QTY_CALC_ROUNDING","Keygeneration": "User","Execute": {"SQL": {"Select": "qty_calc_rounding","ImplementationType": "NUMBER","Alias": "qty_calc_rounding"}}},{"Name": "LifecycleStage","DataType": "Enumeration","SubType": "InvPartLifecycleStage","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "LIFECYCLE_STAGE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "lifecycle_stage_db","OrderBy": "lifecycle_stage","ImplementationType": "VARCHAR2","Alias": "lifecycle_stage"}}},{"Name": "LifeStageLockedUntil","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "LIFE_STAGE_LOCKED_UNTIL","Keygeneration": "User","Execute": {"SQL": {"Select": "life_stage_locked_until","ImplementationType": "DATE","Alias": "life_stage_locked_until"}}},{"Name": "FrequencyClass","DataType": "Enumeration","SubType": "InvPartFrequencyClass","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "FREQUENCY_CLASS_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "frequency_class_db","OrderBy": "frequency_class","ImplementationType": "VARCHAR2","Alias": "frequency_class"}}},{"Name": "FreqClassLockedUntil","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "FREQ_CLASS_LOCKED_UNTIL","Keygeneration": "User","Execute": {"SQL": {"Select": "freq_class_locked_until","ImplementationType": "DATE","Alias": "freq_class_locked_until"}}},{"Name": "FirstStatIssueDate","DataTy');
   Dbms_Lob.Writeappend(clob_, 2450, 'pe": "Date","Collection": false,"Nullable": true,"Insertable": false,"Updatable": true,"AttrName": "FIRST_STAT_ISSUE_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "first_stat_issue_date","ImplementationType": "DATE","Alias": "first_stat_issue_date"}}},{"Name": "LatestStatIssueDate","DataType": "Date","Collection": false,"Nullable": true,"Insertable": false,"Updatable": true,"AttrName": "LATEST_STAT_ISSUE_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "latest_stat_issue_date","ImplementationType": "DATE","Alias": "latest_stat_issue_date"}}},{"Name": "DeclineDate","DataType": "Date","Collection": false,"Nullable": true,"Insertable": false,"Updatable": true,"AttrName": "DECLINE_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "decline_date","ImplementationType": "DATE","Alias": "decline_date"}}},{"Name": "ExpiredDate","DataType": "Date","Collection": false,"Nullable": true,"Insertable": false,"Updatable": true,"AttrName": "EXPIRED_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "expired_date","ImplementationType": "DATE","Alias": "expired_date"}}},{"Name": "DeclineIssueCounter","DataType": "Number","Collection": false,"Nullable": true,"Insertable": false,"Updatable": true,"AttrName": "DECLINE_ISSUE_COUNTER","Keygeneration": "User","Execute": {"SQL": {"Select": "decline_issue_counter","ImplementationType": "NUMBER","Alias": "decline_issue_counter"}}},{"Name": "ExpiredIssueCounter","DataType": "Number","Collection": false,"Nullable": true,"Insertable": false,"Updatable": true,"AttrName": "EXPIRED_ISSUE_COUNTER","Keygeneration": "User","Execute": {"SQL": {"Select": "expired_issue_counter","ImplementationType": "NUMBER","Alias": "expired_issue_counter"}}},{"Name": "MinDurabDaysCoDeliv","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "MIN_DURAB_DAYS_CO_DELIV","Keygeneration": "User","Execute": {"SQL": {"Select": "min_durab_days_co_deliv","ImplementationType": "NUMBER","Alias": "min_durab_days_co_deliv"}}},{"Name": "MinDurabDaysPlanning","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "MIN_DURAB_DAYS_PLANNING","Keygeneration": "User","Execute": {"SQL": {"Select": "min_durab_days_planning","ImplementationType": "NUMBER","Alias": "min_durab_days_planning"}}},{"Name": "AutoCreatedGtin","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Insertable": false,"Updatable": false,');
   Dbms_Lob.Writeappend(clob_, 2450, '"AttrName": "AUTO_CREATED_GTIN","Keygeneration": "Server","Execute": {"SQL": {"Select": "auto_created_gtin","ImplementationType": "VARCHAR2","Alias": "auto_created_gtin"}}},{"Name": "StorageWidthRequirement","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "STORAGE_WIDTH_REQUIREMENT","Keygeneration": "User","Execute": {"SQL": {"Select": "storage_width_requirement","ImplementationType": "NUMBER","Alias": "storage_width_requirement"}}},{"Name": "StorageHeightRequirement","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "STORAGE_HEIGHT_REQUIREMENT","Keygeneration": "User","Execute": {"SQL": {"Select": "storage_height_requirement","ImplementationType": "NUMBER","Alias": "storage_height_requirement"}}},{"Name": "StorageDepthRequirement","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "STORAGE_DEPTH_REQUIREMENT","Keygeneration": "User","Execute": {"SQL": {"Select": "storage_depth_requirement","ImplementationType": "NUMBER","Alias": "storage_depth_requirement"}}},{"Name": "StorageVolumeRequirement","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "STORAGE_VOLUME_REQUIREMENT","Keygeneration": "User","Execute": {"SQL": {"Select": "storage_volume_requirement","ImplementationType": "NUMBER","Alias": "storage_volume_requirement"}}},{"Name": "StorageWeightRequirement","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "STORAGE_WEIGHT_REQUIREMENT","Keygeneration": "User","Execute": {"SQL": {"Select": "storage_weight_requirement","ImplementationType": "NUMBER","Alias": "storage_weight_requirement"}}},{"Name": "MinStorageTemperature","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "MIN_STORAGE_TEMPERATURE","Keygeneration": "User","Execute": {"SQL": {"Select": "min_storage_temperature","ImplementationType": "NUMBER","Alias": "min_storage_temperature"}}},{"Name": "MaxStorageTemperature","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "MAX_STORAGE_TEMPERATURE","Keygeneration": "User","Execute": {"SQL": {"Select": "max_storage_temperature","ImplementationType": "NUMBER","Alias": "max_storage_temperature"}}},{"Name": "MinStorageHumidity","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "MIN_STORAGE_HUMIDITY","Keygenerati');
   Dbms_Lob.Writeappend(clob_, 2450, 'on": "User","Execute": {"SQL": {"Select": "min_storage_humidity","ImplementationType": "NUMBER","Alias": "min_storage_humidity"}}},{"Name": "MaxStorageHumidity","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "MAX_STORAGE_HUMIDITY","Keygeneration": "User","Execute": {"SQL": {"Select": "max_storage_humidity","ImplementationType": "NUMBER","Alias": "max_storage_humidity"}}},{"Name": "StandardPutawayQty","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "STANDARD_PUTAWAY_QTY","Keygeneration": "User","Execute": {"SQL": {"Select": "standard_putaway_qty","ImplementationType": "NUMBER","Alias": "standard_putaway_qty"}}},{"Name": "PutawayZoneRefillOption","DataType": "Enumeration","SubType": "PutawayZoneRefillOption","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "PUTAWAY_ZONE_REFILL_OPTION_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "putaway_zone_refill_option_db","OrderBy": "putaway_zone_refill_option","ImplementationType": "VARCHAR2","Alias": "putaway_zone_refill_option"}}},{"Name": "ResetConfigStdCost","DataType": "Boolean","Collection": false,"Size": 5,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "RESET_CONFIG_STD_COST_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "reset_config_std_cost_db","ImplementationType": "VARCHAR2","Alias": "reset_config_std_cost"}}},{"Name": "MandatoryExpirationDate","DataType": "Boolean","Collection": false,"Size": 5,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "MANDATORY_EXPIRATION_DATE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "mandatory_expiration_date_db","ImplementationType": "VARCHAR2","Alias": "mandatory_expiration_date"}}},{"Name": "ExclShipPackProposal","DataType": "Boolean","Collection": false,"Size": 5,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "EXCL_SHIP_PACK_PROPOSAL_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "excl_ship_pack_proposal_db","ImplementationType": "VARCHAR2","Alias": "excl_ship_pack_proposal"}}},{"Name": "Company","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "COMPANY","Keygeneration": "Server","Execute": {"SQL": {"Select": "company","ImplementationType": "VARCHAR2","Alias": "company"}}},{"N');
   Dbms_Lob.Writeappend(clob_, 2432, 'ame": "StatisticalCode","DataType": "Text","Collection": false,"Size": 15,"Nullable": true,"Updatable": true,"AttrName": "STATISTICAL_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "statistical_code","ImplementationType": "VARCHAR2","Alias": "statistical_code"}}},{"Name": "AcquisitionOrigin","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "ACQUISITION_ORIGIN","Keygeneration": "User","Execute": {"SQL": {"Select": "acquisition_origin","ImplementationType": "NUMBER","Alias": "acquisition_origin"}}},{"Name": "AcquisitionReasonId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "ACQUISITION_REASON_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "acquisition_reason_id","ImplementationType": "VARCHAR2","Alias": "acquisition_reason_id"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"InventoryPart","Type":"Entity","Name":"InventoryPart","View":"INVENTORY_PART"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''InventoryPart''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CONTRACT=''||contract||''^''||''PART_NO=''||part_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"InventoryPart","Lu":"InventoryPart","View":"INVENTORY_PART"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "BcRepairLineAction","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairLineAction","View":"BC_REPAIR_LINE_ACTION"}]#]"}},"Keys": ["RepairLineAction"],"KeysWhere": "(repair_line_action = :RepairLineAction)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairLineAction''","ImplementationType": "VARCHAR2","Alias": "');
   Dbms_Lob.Writeappend(clob_, 2444, 'luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''REPAIR_LINE_ACTION=''||repair_line_action||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "RepairLineAction","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": false,"AttrName": "REPAIR_LINE_ACTION","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_line_action","ImplementationType": "VARCHAR2","Alias": "repair_line_action"}}},{"Name": "Contract","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": false,"AttrName": "CONTRACT","Keygeneration": "User","Execute": {"SQL": {"Select": "contract","ImplementationType": "VARCHAR2","Alias": "contract"}}},{"Name": "RepairLineActionDesc","DataType": "Text","Collection": false,"Size": 60,"Nullable": true,"Updatable": true,"AttrName": "REPAIR_LINE_ACTION_DESC","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_line_action_desc","ImplementationType": "VARCHAR2","Alias": "repair_line_action_desc"}}},{"Name": "ActionType","DataType": "Enumeration","SubType": "BcLineActionType","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "ACTION_TYPE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "action_type_db","OrderBy": "action_type","ImplementationType": "VARCHAR2","Alias": "action_type"}}},{"Name": "DaysBeforeOverdue","DataType": "Number","Collection": false,"Precision": "3","Nullable": true,"Updatable": true,"AttrName": "DAYS_BEFORE_OVERDUE","Keygeneration": "User","Execute": {"SQL": {"Select": "days_before_overdue","ImplementationType": "NUMBER","Alias": "days_before_overdue"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairLineAction","Type":"Entity","Name":"BcRepairLineAction","View":"BC_REPAIR_LINE_ACTION"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairLineAction''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collect');
   Dbms_Lob.Writeappend(clob_, 2436, 'ion": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''REPAIR_LINE_ACTION=''||repair_line_action||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"BcRepairLineAction","Lu":"BcRepairLineAction","View":"BC_REPAIR_LINE_ACTION"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "Lookup_IsoCurrency_EntityType","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":null,"View":"ISO_CURRENCY"}]#]"}},"Keys": ["Id"],"KeysWhere": "(currency_code = :Id)","Attributes": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Lookup_IsoCurrency''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ID=''||currency_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "User","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "Id","DataType": "Text","Collection": false,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "ID","Keygeneration": "UserOrServer","Execute": {"SQL": {"Select": "currency_code","ImplementationType": "VARCHAR2","Alias": "id"}}},{"Name": "Description","DataType": "Text","Collection": false,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DESCRIPTION","Keygeneration": "UserOrServer","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":null,"Type":"Query","Name":"Lookup_IsoCurrency","View":"ISO_CURRENCY"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Lookup_IsoCurrency''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ID=''||currency');
   Dbms_Lob.Writeappend(clob_, 2436, '_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"Lookup_IsoCurrency","Lu":null,"View":"ISO_CURRENCY"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "Lookup_IsoUnit_EntityType","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":null,"View":"ISO_UNIT"}]#]"}},"Keys": ["Id"],"KeysWhere": "(unit_code = :Id)","Attributes": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Lookup_IsoUnit''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ID=''||unit_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "User","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "Id","DataType": "Text","Collection": false,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "ID","Keygeneration": "UserOrServer","Execute": {"SQL": {"Select": "unit_code","ImplementationType": "VARCHAR2","Alias": "id"}}},{"Name": "Description","DataType": "Text","Collection": false,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DESCRIPTION","Keygeneration": "UserOrServer","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":null,"Type":"Query","Name":"Lookup_IsoUnit","View":"ISO_UNIT"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Lookup_IsoUnit''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ID=''||unit_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandl');
   Dbms_Lob.Writeappend(clob_, 2438, 'ing","Entity":"Lookup_IsoUnit","Lu":null,"View":"ISO_UNIT"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "Lookup_IsoCountry_EntityType","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":null,"View":"ISO_COUNTRY"}]#]"}},"Keys": ["Id"],"KeysWhere": "(country_code = :Id)","Attributes": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Lookup_IsoCountry''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ID=''||country_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "User","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "Id","DataType": "Text","Collection": false,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "ID","Keygeneration": "UserOrServer","Execute": {"SQL": {"Select": "country_code","ImplementationType": "VARCHAR2","Alias": "id"}}},{"Name": "Description","DataType": "Text","Collection": false,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DESCRIPTION","Keygeneration": "UserOrServer","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":null,"Type":"Query","Name":"Lookup_IsoCountry","View":"ISO_COUNTRY"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Lookup_IsoCountry''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ID=''||country_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"Lookup_IsoCountry","Lu":null,"View":"ISO_COUNTRY"}]#]],"CRUD": [],"Actions": [],"Functions": []}[#[jsoncallback:Custom_Object_Proxy_Sys.Ser');
   Dbms_Lob.Writeappend(clob_, 329, 'ver_Entity_Type_Metadata:{"Projection": "BcRcoHandling","Lu": ["Site","CustomerOrder","Lookup_IsoCountry","CustomerInfoAddress","ConditionCode","IsoCurrency","BcRepairCenterOrder","FndUser","BcRepairType","BcRepairLine","Lookup_IsoUnit","BcLogInfo","BcRepairLineAction","CustomerInfo","InventoryPart","Lookup_IsoCurrency"]}]#]]}}');
   Model_Design_SYS.Add_Model_Design_Template(header_, clob_);
   COMMIT;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   projection_ VARCHAR2(250) := 'BcRcoHandling';
   header_     Model_Design_SYS.Fnd_Model_Design_Rec;
   clob_       CLOB := to_clob(' ');
BEGIN
   header_ := Model_Design_SYS.Prepare_Design_Data_Load('projection', projection_, Model_Design_SYS.CLIENT_METADATA, '');
   Dbms_Lob.trim(clob_, 0);
   Dbms_Lob.Writeappend(clob_, 2450, '{"name": "BcRcoHandling","service": "BcRcoHandling.svc","version": "313969064","contains": {"Reference_BcRepairLine": {"name": "Reference_BcRepairLine","entity": "BcRepairLine","array": true,"defaultfilter": false},"Reference_BcLogInfo": {"name": "Reference_BcLogInfo","entity": "BcLogInfo","array": true,"defaultfilter": false},"Reference_CustomerInfo": {"name": "Reference_CustomerInfo","entity": "CustomerInfo","array": true,"defaultfilter": false},"Reference_CustomerInfoAddress": {"name": "Reference_CustomerInfoAddress","entity": "CustomerInfoAddress","array": true,"defaultfilter": false},"Lookup_IsoCurrency": {"name": "Lookup_IsoCurrency","entity": "Lookup_IsoCurrency","array": true,"defaultfilter": false},"Reference_IsoCurrency": {"name": "Reference_IsoCurrency","entity": "IsoCurrency","array": true,"defaultfilter": false},"Reference_Site": {"name": "Reference_Site","entity": "Site","array": true,"defaultfilter": false},"Reference_CustomerOrder": {"name": "Reference_CustomerOrder","entity": "CustomerOrder","array": true,"defaultfilter": false},"Reference_FndUser": {"name": "Reference_FndUser","entity": "FndUser","array": true,"defaultfilter": false},"Reference_BcRepairType": {"name": "Reference_BcRepairType","entity": "BcRepairType","array": true,"defaultfilter": false},"Reference_ConditionCode": {"name": "Reference_ConditionCode","entity": "ConditionCode","array": true,"defaultfilter": false},"Reference_InventoryPart": {"name": "Reference_InventoryPart","entity": "InventoryPart","array": true,"defaultfilter": false},"Reference_BcRepairLineAction": {"name": "Reference_BcRepairLineAction","entity": "BcRepairLineAction","array": true,"defaultfilter": false},"Lookup_IsoUnit": {"name": "Lookup_IsoUnit","entity": "Lookup_IsoUnit","array": true,"defaultfilter": false},"Lookup_IsoCountry": {"name": "Lookup_IsoCountry","entity": "Lookup_IsoCountry","array": true,"defaultfilter": false},"BcRepairCenterOrderSet": {"name": "BcRepairCenterOrderSet","entity": "BcRepairCenterOrder","array": true,"defaultfilter": false},"BcRepairLineSet": {"name": "BcRepairLineSet","entity": "BcRepairLine","array": true,"defaultfilter": false},"BcLogInfoSet": {"name": "BcLogInfoSet","entity": "BcLogInfo","array": true,"defaultfilter": false}[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entityset_Metadata:{"Projection": "BcRcoHandling","Lu": ["Site","CustomerOrder","Lookup_IsoCountry","CustomerInfoAddress","ConditionCode","IsoCurrency",');
   Dbms_Lob.Writeappend(clob_, 2422, '"BcRepairCenterOrder","FndUser","BcRepairType","BcRepairLine","Lookup_IsoUnit","BcLogInfo","BcRepairLineAction","CustomerInfo","InventoryPart","Lookup_IsoCurrency"]}]#]},"enumerations": {"BcLineActionType": {"name": "BcLineActionType","values": ["OnHold","Released"],"labels": [{"value": "OnHold","label": "[#[translateEnum:Bc_Line_Action_Type_API.Decode(''ON_HOLD''):On Hold]#]"},{"value": "Released","label": "[#[translateEnum:Bc_Line_Action_Type_API.Decode(''RELEASED''):Released]#]"}]},"PutawayZoneRefillOption": {"name": "PutawayZoneRefillOption","values": ["NoRefill","FromPutawayZones","FromAllLocations"],"labels": [{"value": "NoRefill","label": "[#[translateEnum:Putaway_Zone_Refill_Option_API.Decode(''NO_REFILL''):No Refill]#]"},{"value": "FromPutawayZones","label": "[#[translateEnum:Putaway_Zone_Refill_Option_API.Decode(''FROM_PUTAWAY_ZONES''):From Putaway Zones]#]"},{"value": "FromAllLocations","label": "[#[translateEnum:Putaway_Zone_Refill_Option_API.Decode(''FROM_ALL_LOCATIONS''):From All Stock Locations]#]"}]},"InvPartFrequencyClass": {"name": "InvPartFrequencyClass","values": ["VerySlowMover","SlowMover","MediumMover","FastMover"],"labels": [{"value": "VerySlowMover","label": "[#[translateEnum:Inv_Part_Frequency_Class_API.Decode(''VERY SLOW MOVER''):Very Slow Mover]#]"},{"value": "SlowMover","label": "[#[translateEnum:Inv_Part_Frequency_Class_API.Decode(''SLOW MOVER''):Slow Mover]#]"},{"value": "MediumMover","label": "[#[translateEnum:Inv_Part_Frequency_Class_API.Decode(''MEDIUM MOVER''):Medium Mover]#]"},{"value": "FastMover","label": "[#[translateEnum:Inv_Part_Frequency_Class_API.Decode(''FAST MOVER''):Fast Mover]#]"}]},"InvPartLifecycleStage": {"name": "InvPartLifecycleStage","values": ["Development","Introduction","Mature","Decline","Expired"],"labels": [{"value": "Development","label": "[#[translateEnum:Inv_Part_Lifecycle_Stage_API.Decode(''DEVELOPMENT''):Development]#]"},{"value": "Introduction","label": "[#[translateEnum:Inv_Part_Lifecycle_Stage_API.Decode(''INTRODUCTION''):Introduction]#]"},{"value": "Mature","label": "[#[translateEnum:Inv_Part_Lifecycle_Stage_API.Decode(''MATURE''):Mature]#]"},{"value": "Decline","label": "[#[translateEnum:Inv_Part_Lifecycle_Stage_API.Decode(''DECLINE''):Decline]#]"},{"value": "Expired","label": "[#[translateEnum:Inv_Part_Lifecycle_Stage_API.Decode(''EXPIRED''):Expired]#]"}]},"DopNetting": {"name": "DopNetting","values": ["Netting","NoNetting","AutoNetting"]');
   Dbms_Lob.Writeappend(clob_, 2426, ',"labels": [{"value": "Netting","label": "[#[translateEnum:Dop_Netting_API.Decode(''NETT''):Netting]#]"},{"value": "NoNetting","label": "[#[translateEnum:Dop_Netting_API.Decode(''NONET''):No Netting]#]"},{"value": "AutoNetting","label": "[#[translateEnum:Dop_Netting_API.Decode(''AUTONETT''):Auto Netting]#]"}]},"CapabilityCheckAllocate": {"name": "CapabilityCheckAllocate","values": ["ReserveAndAllocate","AllocateOnly","NeitherReserveNorAlloc","NoAutomatCapabilityCheck"],"subsets": {"CapabilityCheckAllocate.Subset1": ["ReserveAndAllocate","AllocateOnly","NeitherReserveNorAlloc"],"CapabilityCheckAllocate.Subset2": ["AllocateOnly","NeitherReserveNorAlloc"]},"labels": [{"value": "ReserveAndAllocate","label": "[#[translateEnum:Capability_Check_Allocate_API.Decode(''RESERVE AND ALLOCATE''):Reserve and Allocate]#]"},{"value": "AllocateOnly","label": "[#[translateEnum:Capability_Check_Allocate_API.Decode(''ALLOCATE ONLY''):Allocate only]#]"},{"value": "NeitherReserveNorAlloc","label": "[#[translateEnum:Capability_Check_Allocate_API.Decode(''NEITHER RESERVE NOR ALLOCATE''):Neither Reserve nor Allocate]#]"},{"value": "NoAutomatCapabilityCheck","label": "[#[translateEnum:Capability_Check_Allocate_API.Decode(''NO AUTOMATIC CAPABILITY CHECK''):No Automatic Capability Check]#]"}]},"CapabilityCheckAllocateSubset1": {"name": "CapabilityCheckAllocate.Subset1","values": ["ReserveAndAllocate","AllocateOnly","NeitherReserveNorAlloc"],"labels": [{"value": "ReserveAndAllocate","label": "[#[translateEnum:Capability_Check_Allocate_API.Decode(''RESERVE AND ALLOCATE''):Reserve and Allocate]#]"},{"value": "AllocateOnly","label": "[#[translateEnum:Capability_Check_Allocate_API.Decode(''ALLOCATE ONLY''):Allocate only]#]"},{"value": "NeitherReserveNorAlloc","label": "[#[translateEnum:Capability_Check_Allocate_API.Decode(''NEITHER RESERVE NOR ALLOCATE''):Neither Reserve nor Allocate]#]"}]},"CapabilityCheckAllocateSubset2": {"name": "CapabilityCheckAllocate.Subset2","values": ["AllocateOnly","NeitherReserveNorAlloc"],"labels": [{"value": "AllocateOnly","label": "[#[translateEnum:Capability_Check_Allocate_API.Decode(''ALLOCATE ONLY''):Allocate only]#]"},{"value": "NeitherReserveNorAlloc","label": "[#[translateEnum:Capability_Check_Allocate_API.Decode(''NEITHER RESERVE NOR ALLOCATE''):Neither Reserve nor Allocate]#]"}]},"ExtServiceCostMethod": {"name": "ExtServiceCostMethod","values": ["IncludeServiceCost","ExcludeServiceCost"],"labels": [{"');
   Dbms_Lob.Writeappend(clob_, 2424, 'value": "IncludeServiceCost","label": "[#[translateEnum:Ext_Service_Cost_Method_API.Decode(''INCLUDE SERVICE COST''):Include Service Cost]#]"},{"value": "ExcludeServiceCost","label": "[#[translateEnum:Ext_Service_Cost_Method_API.Decode(''EXCLUDE SERVICE COST''):Exclude Service Cost]#]"}]},"InventoryPartCostLevel": {"name": "InventoryPartCostLevel","values": ["CostPerPart","CostPerConfiguration","CostPerCondition","CostPerLotBatch","CostPerSerial"],"labels": [{"value": "CostPerPart","label": "[#[translateEnum:Inventory_Part_Cost_Level_API.Decode(''COST PER PART''):Cost Per Part]#]"},{"value": "CostPerConfiguration","label": "[#[translateEnum:Inventory_Part_Cost_Level_API.Decode(''COST PER CONFIGURATION''):Cost Per Configuration]#]"},{"value": "CostPerCondition","label": "[#[translateEnum:Inventory_Part_Cost_Level_API.Decode(''COST PER CONDITION''):Cost Per Condition]#]"},{"value": "CostPerLotBatch","label": "[#[translateEnum:Inventory_Part_Cost_Level_API.Decode(''COST PER LOT BATCH''):Cost Per Lot Batch]#]"},{"value": "CostPerSerial","label": "[#[translateEnum:Inventory_Part_Cost_Level_API.Decode(''COST PER SERIAL''):Cost Per Serial]#]"}]},"InvoiceConsideration": {"name": "InvoiceConsideration","values": ["IgnoreInvoicePrice","PeriodicWeightedAverage","TransactionBased"],"labels": [{"value": "IgnoreInvoicePrice","label": "[#[translateEnum:Invoice_Consideration_API.Decode(''IGNORE INVOICE PRICE''):Ignore Invoice Price]#]"},{"value": "PeriodicWeightedAverage","label": "[#[translateEnum:Invoice_Consideration_API.Decode(''PERIODIC WEIGHTED AVERAGE''):Periodic Weighted Average]#]"},{"value": "TransactionBased","label": "[#[translateEnum:Invoice_Consideration_API.Decode(''TRANSACTION BASED''):Transaction Based]#]"}]},"NegativeOnHand": {"name": "NegativeOnHand","values": ["NegativeOnHandAllowed","NegativOnHandNotAllowed"],"labels": [{"value": "NegativeOnHandAllowed","label": "[#[translateEnum:Negative_On_Hand_API.Decode(''NEG ONHAND OK''):Negative On Hand Allowed]#]"},{"value": "NegativOnHandNotAllowed","label": "[#[translateEnum:Negative_On_Hand_API.Decode(''NEG ONHAND NOT OK''):Negative On Hand Not Allowed]#]"}]},"InventoryValueMethod": {"name": "InventoryValueMethod","values": ["WeightedAverage","StandardCost","FirstInFirstOut","LastInFirstOut"],"labels": [{"value": "WeightedAverage","label": "[#[translateEnum:Inventory_Value_Method_API.Decode(''AV''):Weighted Average]#]"},{"value": "StandardCost","label": "[#[t');
   Dbms_Lob.Writeappend(clob_, 2422, 'ranslateEnum:Inventory_Value_Method_API.Decode(''ST''):Standard Cost]#]"},{"value": "FirstInFirstOut","label": "[#[translateEnum:Inventory_Value_Method_API.Decode(''FIFO''):First In First Out]#]"},{"value": "LastInFirstOut","label": "[#[translateEnum:Inventory_Value_Method_API.Decode(''LIFO''):Last In First Out]#]"}]},"DopConnection": {"name": "DopConnection","values": ["AutomaticDOP","ManualDOP","ReleaseDOP"],"labels": [{"value": "AutomaticDOP","label": "[#[translateEnum:Dop_Connection_API.Decode(''AUT''):Automatic DOP]#]"},{"value": "ManualDOP","label": "[#[translateEnum:Dop_Connection_API.Decode(''MAN''):Manual DOP]#]"},{"value": "ReleaseDOP","label": "[#[translateEnum:Dop_Connection_API.Decode(''REL''):Release DOP]#]"}]},"InventoryPartManagement": {"name": "InventoryPartManagement","values": ["VendorManagedInventory","SystemManagedInventory"],"labels": [{"value": "VendorManagedInventory","label": "[#[translateEnum:Inventory_Part_Management_API.Decode(''VENDOR MANAGED INVENTORY''):Vendor Managed Inventory]#]"},{"value": "SystemManagedInventory","label": "[#[translateEnum:Inventory_Part_Management_API.Decode(''SYSTEM MANAGED INVENTORY''):System Managed Inventory]#]"}]},"InvPartForecastConsum": {"name": "InvPartForecastConsum","values": ["OnlineConsumption","NoOnlineConsumption"],"labels": [{"value": "OnlineConsumption","label": "[#[translateEnum:Inv_Part_Forecast_Consum_API.Decode(''FORECAST''):Online Consumption]#]"},{"value": "NoOnlineConsumption","label": "[#[translateEnum:Inv_Part_Forecast_Consum_API.Decode(''NOFORECAST''):No Online Consumption]#]"}]},"InventoryPartShortage": {"name": "InventoryPartShortage","values": ["ShortageNotation","NoShortageNotation"],"labels": [{"value": "ShortageNotation","label": "[#[translateEnum:Inventory_Part_Shortage_API.Decode(''Y''):Shortage Notation]#]"},{"value": "NoShortageNotation","label": "[#[translateEnum:Inventory_Part_Shortage_API.Decode(''N''):No Shortage Notation]#]"}]},"InventoryPartAvailStat": {"name": "InventoryPartAvailStat","values": ["Changed","Unchanged"],"labels": [{"value": "Changed","label": "[#[translateEnum:Inventory_Part_Avail_Stat_API.Decode(''CHANGED''):Changed]#]"},{"value": "Unchanged","label": "[#[translateEnum:Inventory_Part_Avail_Stat_API.Decode(''UNCHANGED''):Unchanged]#]"}]},"InventoryPartZeroCost": {"name": "InventoryPartZeroCost","values": ["ZeroCostAllowed","ZeroCostForbidden","ZeroCostOnly"],"labels": [{"value": "ZeroCostAllowed","');
   Dbms_Lob.Writeappend(clob_, 2420, 'label": "[#[translateEnum:Inventory_Part_Zero_Cost_API.Decode(''Y''):Zero Cost Allowed]#]"},{"value": "ZeroCostForbidden","label": "[#[translateEnum:Inventory_Part_Zero_Cost_API.Decode(''N''):Zero Cost Forbidden]#]"},{"value": "ZeroCostOnly","label": "[#[translateEnum:Inventory_Part_Zero_Cost_API.Decode(''O''):Zero Cost Only]#]"}]},"InventoryPartType": {"name": "InventoryPartType","values": ["Manufactured","ManufacturedRecipe","PurchasedRaw","Purchased","Expense"],"labels": [{"value": "Manufactured","label": "[#[translateEnum:Inventory_Part_Type_API.Decode(''1''):Manufactured]#]"},{"value": "ManufacturedRecipe","label": "[#[translateEnum:Inventory_Part_Type_API.Decode(''2''):Manufactured Recipe]#]"},{"value": "PurchasedRaw","label": "[#[translateEnum:Inventory_Part_Type_API.Decode(''3''):Purchased (raw)]#]"},{"value": "Purchased","label": "[#[translateEnum:Inventory_Part_Type_API.Decode(''4''):Purchased]#]"},{"value": "Expense","label": "[#[translateEnum:Inventory_Part_Type_API.Decode(''6''):Expense]#]"}]},"MaterialRequisSupply": {"name": "MaterialRequisSupply","values": ["InventoryOrder","PurchaseOrder","ProjectInventory"],"subsets": {"MaterialRequisSupply.Subset1": ["InventoryOrder","PurchaseOrder"]},"labels": [{"value": "InventoryOrder","label": "[#[translateEnum:Material_Requis_Supply_API.Decode(''IO''):Inventory Order]#]"},{"value": "PurchaseOrder","label": "[#[translateEnum:Material_Requis_Supply_API.Decode(''PO''):Purchase Order]#]"},{"value": "ProjectInventory","label": "[#[translateEnum:Material_Requis_Supply_API.Decode(''PI''):Project Inventory]#]"}]},"MaterialRequisSupplySubset1": {"name": "MaterialRequisSupply.Subset1","values": ["InventoryOrder","PurchaseOrder"],"labels": [{"value": "InventoryOrder","label": "[#[translateEnum:Material_Requis_Supply_API.Decode(''IO''):Inventory Order]#]"},{"value": "PurchaseOrder","label": "[#[translateEnum:Material_Requis_Supply_API.Decode(''PO''):Purchase Order]#]"}]},"InventoryPartOnhAnalys": {"name": "InventoryPartOnhAnalys","values": ["MakeAvailabilityCheck","NoAvailabilityCheck"],"labels": [{"value": "MakeAvailabilityCheck","label": "[#[translateEnum:Inventory_Part_Onh_Analys_API.Decode(''Y''):Make Availability Check]#]"},{"value": "NoAvailabilityCheck","label": "[#[translateEnum:Inventory_Part_Onh_Analys_API.Decode(''N''):No Availability Check]#]"}]},"CustOrdReservationType": {"name": "CustOrdReservationType","values": ["PriorityReservation","NormalReserv');
   Dbms_Lob.Writeappend(clob_, 2422, 'ation"],"labels": [{"value": "PriorityReservation","label": "[#[translateEnum:Cust_Ord_Reservation_Type_API.Decode(''Y''):Priority reservation]#]"},{"value": "NormalReservation","label": "[#[translateEnum:Cust_Ord_Reservation_Type_API.Decode(''N''):Normal reservation]#]"}]},"InvPartLeadTimeCode": {"name": "InvPartLeadTimeCode","values": ["Manufactured","Purchased"],"labels": [{"value": "Manufactured","label": "[#[translateEnum:Inv_Part_Lead_Time_Code_API.Decode(''M''):Manufactured]#]"},{"value": "Purchased","label": "[#[translateEnum:Inv_Part_Lead_Time_Code_API.Decode(''P''):Purchased]#]"}]},"InventoryPartCountType": {"name": "InventoryPartCountType","values": ["CyclicCounting","NotCyclicCounting"],"labels": [{"value": "CyclicCounting","label": "[#[translateEnum:Inventory_Part_Count_Type_API.Decode(''Y''):Cyclic Counting]#]"},{"value": "NotCyclicCounting","label": "[#[translateEnum:Inventory_Part_Count_Type_API.Decode(''N''):Not Cyclic Counting]#]"}]},"ConditionCodeType": {"name": "ConditionCodeType","values": ["DefaultConditionCode","NotDefaultConditionCode"],"labels": [{"value": "DefaultConditionCode","label": "[#[translateEnum:Condition_Code_Type_API.Decode(''DEF_COND_CODE''):Default Condition Code]#]"},{"value": "NotDefaultConditionCode","label": "[#[translateEnum:Condition_Code_Type_API.Decode(''NOT_DEF_COND_CODE''):Not Default Condition Code]#]"}]},"FndUserType": {"name": "FndUserType","values": ["SystemUser","ServiceUser","EndUser"],"subsets": {"FndUserType.UsersSubset": ["ServiceUser","EndUser"]},"labels": [{"value": "SystemUser","label": "[#[translateEnum:Fnd_User_Type_API.Decode(''SYSTEM_USER''):System User]#]"},{"value": "ServiceUser","label": "[#[translateEnum:Fnd_User_Type_API.Decode(''SERVICE_USER''):Service User]#]"},{"value": "EndUser","label": "[#[translateEnum:Fnd_User_Type_API.Decode(''END_USER''):End User]#]"}]},"FndUserTypeUsersSubset": {"name": "FndUserType.UsersSubset","values": ["ServiceUser","EndUser"],"labels": [{"value": "ServiceUser","label": "[#[translateEnum:Fnd_User_Type_API.Decode(''SERVICE_USER''):Service User]#]"},{"value": "EndUser","label": "[#[translateEnum:Fnd_User_Type_API.Decode(''END_USER''):End User]#]"}]},"CustomerOrderBlockType": {"name": "CustomerOrderBlockType","values": ["CreditBlocked","AdvPayBlocked","ManualBlocked","NotBlocked"],"labels": [{"value": "CreditBlocked","label": "[#[translateEnum:Customer_Order_Block_Type_API.Decode(''CREDIT_BLOCKED''):Credit]#]"');
   Dbms_Lob.Writeappend(clob_, 2421, '},{"value": "AdvPayBlocked","label": "[#[translateEnum:Customer_Order_Block_Type_API.Decode(''ADV_PAY_BLOCKED''):Adv/Prepay]#]"},{"value": "ManualBlocked","label": "[#[translateEnum:Customer_Order_Block_Type_API.Decode(''MANUAL_BLOCKED''):Manual]#]"},{"value": "NotBlocked","label": "[#[translateEnum:Customer_Order_Block_Type_API.Decode(''NOT_BLOCKED''):None]#]"}]},"TaxPayingParty": {"name": "TaxPayingParty","values": ["NoTax","Customer","Company"],"labels": [{"value": "NoTax","label": "[#[translateEnum:Tax_Paying_Party_API.Decode(''NO_TAX''):No Tax]#]"},{"value": "Customer","label": "[#[translateEnum:Tax_Paying_Party_API.Decode(''CUSTOMER''):Customer]#]"},{"value": "Company","label": "[#[translateEnum:Tax_Paying_Party_API.Decode(''COMPANY''):Company]#]"}]},"DeliveryNoteOptions": {"name": "DeliveryNoteOptions","values": ["ShipmentCustomerOrder","Shipment","CustomerOrder","None"],"labels": [{"value": "ShipmentCustomerOrder","label": "[#[translateEnum:Delivery_Note_Options_API.Decode(''SHIPMENT_CUSTOMER_ORDER''):Shipment and Customer Order]#]"},{"value": "Shipment","label": "[#[translateEnum:Delivery_Note_Options_API.Decode(''SHIPMENT''):Shipment]#]"},{"value": "CustomerOrder","label": "[#[translateEnum:Delivery_Note_Options_API.Decode(''CUSTOMER_ORDER''):Customer Order]#]"},{"value": "None","label": "[#[translateEnum:Delivery_Note_Options_API.Decode(''NONE''):None]#]"}]},"PickInventoryType": {"name": "PickInventoryType","values": ["ShipmentInventory","OrdinaryInventory"],"labels": [{"value": "ShipmentInventory","label": "[#[translateEnum:Pick_Inventory_Type_API.Decode(''SHIPINV''):Shipment inventory]#]"},{"value": "OrdinaryInventory","label": "[#[translateEnum:Pick_Inventory_Type_API.Decode(''ORDINV''):Ordinary inventory]#]"}]},"ShipmentCreation": {"name": "ShipmentCreation","values": ["NoAutomatic","OrderRelease","PickListCreation","ReportReturn"],"subsets": {"ShipmentCreation.ShipmentOrder": ["NoAutomatic","OrderRelease"],"ShipmentCreation.CustomerOrder": ["NoAutomatic","OrderRelease","PickListCreation"],"ShipmentCreation.ReceiptReturn": ["NoAutomatic","ReportReturn"]},"labels": [{"value": "NoAutomatic","label": "[#[translateEnum:Shipment_Creation_API.Decode(''NO_AUTOMATIC''):Not Automatic]#]"},{"value": "OrderRelease","label": "[#[translateEnum:Shipment_Creation_API.Decode(''ORDER_RELEASE''):At Order Release]#]"},{"value": "PickListCreation","label": "[#[translateEnum:Shipment_Creation_API.Decode(''PICK_LI');
   Dbms_Lob.Writeappend(clob_, 2425, 'ST_CREATION''):At Pick List Creation]#]"},{"value": "ReportReturn","label": "[#[translateEnum:Shipment_Creation_API.Decode(''REPORT_RETURN''):At Report Return]#]"}]},"ShipmentCreationShipmentOrder": {"name": "ShipmentCreation.ShipmentOrder","values": ["NoAutomatic","OrderRelease"],"labels": [{"value": "NoAutomatic","label": "[#[translateEnum:Shipment_Creation_API.Decode(''NO_AUTOMATIC''):Not Automatic]#]"},{"value": "OrderRelease","label": "[#[translateEnum:Shipment_Creation_API.Decode(''ORDER_RELEASE''):At Order Release]#]"}]},"ShipmentCreationCustomerOrder": {"name": "ShipmentCreation.CustomerOrder","values": ["NoAutomatic","OrderRelease","PickListCreation"],"labels": [{"value": "NoAutomatic","label": "[#[translateEnum:Shipment_Creation_API.Decode(''NO_AUTOMATIC''):Not Automatic]#]"},{"value": "OrderRelease","label": "[#[translateEnum:Shipment_Creation_API.Decode(''ORDER_RELEASE''):At Order Release]#]"},{"value": "PickListCreation","label": "[#[translateEnum:Shipment_Creation_API.Decode(''PICK_LIST_CREATION''):At Pick List Creation]#]"}]},"ShipmentCreationReceiptReturn": {"name": "ShipmentCreation.ReceiptReturn","values": ["NoAutomatic","ReportReturn"],"labels": [{"value": "NoAutomatic","label": "[#[translateEnum:Shipment_Creation_API.Decode(''NO_AUTOMATIC''):Not Automatic]#]"},{"value": "ReportReturn","label": "[#[translateEnum:Shipment_Creation_API.Decode(''REPORT_RETURN''):At Report Return]#]"}]},"CustomerBackorderOption": {"name": "CustomerBackorderOption","values": ["NoPartialDeliveriesAllow","IncompleteLinesNotAllow","IncompletePkgsNotAllowed","AllowIncompleteLinesPkgs"],"labels": [{"value": "NoPartialDeliveriesAllow","label": "[#[translateEnum:Customer_Backorder_Option_API.Decode(''NO PARTIAL DELIVERIES ALLOWED''):No Partial Deliveries Allowed]#]"},{"value": "IncompleteLinesNotAllow","label": "[#[translateEnum:Customer_Backorder_Option_API.Decode(''INCOMPLETE LINES NOT ALLOWED''):Incomplete Lines Not Allowed]#]"},{"value": "IncompletePkgsNotAllowed","label": "[#[translateEnum:Customer_Backorder_Option_API.Decode(''INCOMPLETE PACKAGES NOT ALLOWED''):Incomplete Packages Not Allowed]#]"},{"value": "AllowIncompleteLinesPkgs","label": "[#[translateEnum:Customer_Backorder_Option_API.Decode(''ALLOW INCOMPLETE LINES AND PACKAGES''):Allow Incomplete Lines and Packages]#]"}]},"IntrastatExempt": {"name": "IntrastatExempt","values": ["Include","Exempt"],"labels": [{"value": "Include","label": "[#[translateEnum');
   Dbms_Lob.Writeappend(clob_, 2420, ':Intrastat_Exempt_API.Decode(''INCLUDE''):Include]#]"},{"value": "Exempt","label": "[#[translateEnum:Intrastat_Exempt_API.Decode(''EXEMPT''):Exempt]#]"}]},"ScheduleAgreementOrder": {"name": "ScheduleAgreementOrder","values": ["SchedulingOrder","NotSchedulingOrder"],"labels": [{"value": "SchedulingOrder","label": "[#[translateEnum:Schedule_Agreement_Order_API.Decode(''SCHEDULE''):Scheduling Order]#]"},{"value": "NotSchedulingOrder","label": "[#[translateEnum:Schedule_Agreement_Order_API.Decode(''NOT SCHEDULE''):Not Scheduling Order]#]"}]},"ServiceManagementConnect": {"name": "ServiceManagementConnect","values": ["Connected","NotConnected"],"labels": [{"value": "Connected","label": "[#[translateEnum:Service_Management_Connect_API.Decode(''CONNECTED''):Connected]#]"},{"value": "NotConnected","label": "[#[translateEnum:Service_Management_Connect_API.Decode(''NOT CONNECTED''):Not Connected]#]"}]},"StagedBillingType": {"name": "StagedBillingType","values": ["StagedBilling","NotStagedBilling"],"labels": [{"value": "StagedBilling","label": "[#[translateEnum:Staged_Billing_Type_API.Decode(''STAGED BILLING''):Staged billing]#]"},{"value": "NotStagedBilling","label": "[#[translateEnum:Staged_Billing_Type_API.Decode(''NOT STAGED BILLING''):Not staged billing]#]"}]},"OrderDeliveryType": {"name": "OrderDeliveryType","values": ["TransitDelivery","DirectDelivery","InternalTransitDelivery","InternalDirectDelivery","InterSiteDelivery"],"labels": [{"value": "TransitDelivery","label": "[#[translateEnum:Order_Delivery_Type_API.Decode(''TRANSIT''):Transit delivery]#]"},{"value": "DirectDelivery","label": "[#[translateEnum:Order_Delivery_Type_API.Decode(''DIRECT''):Direct delivery]#]"},{"value": "InternalTransitDelivery","label": "[#[translateEnum:Order_Delivery_Type_API.Decode(''INTTRANSIT''):Internal transit delivery]#]"},{"value": "InternalDirectDelivery","label": "[#[translateEnum:Order_Delivery_Type_API.Decode(''INTDIRECT''):Internal direct delivery]#]"},{"value": "InterSiteDelivery","label": "[#[translateEnum:Order_Delivery_Type_API.Decode(''INTER-SITE''):Inter site delivery]#]"}]},"PrintPickList": {"name": "PrintPickList","values": ["PrintPicklist","NoPicklist"],"labels": [{"value": "PrintPicklist","label": "[#[translateEnum:Print_Pick_List_API.Decode(''Y''):Print picklist]#]"},{"value": "NoPicklist","label": "[#[translateEnum:Print_Pick_List_API.Decode(''N''):No picklist]#]"}]},"PrintPackList": {"name": "PrintPackList","v');
   Dbms_Lob.Writeappend(clob_, 2418, 'alues": ["PrintDeliveryNote","NoDeliveryNote"],"labels": [{"value": "PrintDeliveryNote","label": "[#[translateEnum:Print_Pack_List_API.Decode(''Y''):Print delivery note]#]"},{"value": "NoDeliveryNote","label": "[#[translateEnum:Print_Pack_List_API.Decode(''N''):No delivery note]#]"}]},"PrintOrderConfirmation": {"name": "PrintOrderConfirmation","values": ["PrintOrderConf","NoOrderConf"],"labels": [{"value": "PrintOrderConf","label": "[#[translateEnum:Print_Order_Confirmation_API.Decode(''Y''):Print order conf]#]"},{"value": "NoOrderConf","label": "[#[translateEnum:Print_Order_Confirmation_API.Decode(''N''):No order conf]#]"}]},"OrderConfirmationPrinted": {"name": "OrderConfirmationPrinted","values": ["Printed","NotPrinted"],"labels": [{"value": "Printed","label": "[#[translateEnum:Order_Confirmation_Printed_API.Decode(''Y''):Printed]#]"},{"value": "NotPrinted","label": "[#[translateEnum:Order_Confirmation_Printed_API.Decode(''N''):Not printed]#]"}]},"GenYesNo": {"name": "GenYesNo","values": ["Yes","No"],"labels": [{"value": "Yes","label": "[#[translateEnum:Gen_Yes_No_API.Decode(''Y''):Yes]#]"},{"value": "No","label": "[#[translateEnum:Gen_Yes_No_API.Decode(''N''):No]#]"}]},"OutputMediaType": {"name": "OutputMediaType","values": ["Printout","Email","MailToFax","Xml"],"labels": [{"value": "Printout","label": "[#[translateEnum:Output_Media_Type_API.Decode(''1''):Printout]#]"},{"value": "Email","label": "[#[translateEnum:Output_Media_Type_API.Decode(''2''):E-Mail]#]"},{"value": "MailToFax","label": "[#[translateEnum:Output_Media_Type_API.Decode(''3''):Mail To Fax]#]"},{"value": "Xml","label": "[#[translateEnum:Output_Media_Type_API.Decode(''4''):Xml]#]"}]},"CustomerCategory": {"name": "CustomerCategory","values": ["Customer","Prospect","EndCustomer"],"subsets": {"CustomerCategory.Prospect": ["Customer","Prospect"],"CustomerCategory.EndCustomer": ["Customer","EndCustomer"]},"labels": [{"value": "Customer","label": "[#[translateEnum:Customer_Category_API.Decode(''CUSTOMER''):Customer]#]"},{"value": "Prospect","label": "[#[translateEnum:Customer_Category_API.Decode(''PROSPECT''):Prospect]#]"},{"value": "EndCustomer","label": "[#[translateEnum:Customer_Category_API.Decode(''END_CUSTOMER''):End Customer]#]"}]},"CustomerCategoryProspect": {"name": "CustomerCategory.Prospect","values": ["Customer","Prospect"],"labels": [{"value": "Customer","label": "[#[translateEnum:Customer_Category_API.Decode(''CUSTOMER''):Customer]');
   Dbms_Lob.Writeappend(clob_, 2415, '#]"},{"value": "Prospect","label": "[#[translateEnum:Customer_Category_API.Decode(''PROSPECT''):Prospect]#]"}]},"CustomerCategoryEndCustomer": {"name": "CustomerCategory.EndCustomer","values": ["Customer","EndCustomer"],"labels": [{"value": "Customer","label": "[#[translateEnum:Customer_Category_API.Decode(''CUSTOMER''):Customer]#]"},{"value": "EndCustomer","label": "[#[translateEnum:Customer_Category_API.Decode(''END_CUSTOMER''):End Customer]#]"}]},"IdentifierRefValidation": {"name": "IdentifierRefValidation","values": ["None","Katakana"],"labels": [{"value": "None","label": "[#[translateEnum:Identifier_Ref_Validation_API.Decode(''NONE''):None]#]"},{"value": "Katakana","label": "[#[translateEnum:Identifier_Ref_Validation_API.Decode(''KATAKANA''):Katakana]#]"}]},"PartyType": {"name": "PartyType","values": ["Company","Customer","Supplier","Person","Manufacturer","Owner","ForwardingAgent","Employee"],"labels": [{"value": "Company","label": "[#[translateEnum:Party_Type_API.Decode(''COMPANY''):Company]#]"},{"value": "Customer","label": "[#[translateEnum:Party_Type_API.Decode(''CUSTOMER''):Customer]#]"},{"value": "Supplier","label": "[#[translateEnum:Party_Type_API.Decode(''SUPPLIER''):Supplier]#]"},{"value": "Person","label": "[#[translateEnum:Party_Type_API.Decode(''PERSON''):Person]#]"},{"value": "Manufacturer","label": "[#[translateEnum:Party_Type_API.Decode(''MANUFACTURER''):Manufacturer]#]"},{"value": "Owner","label": "[#[translateEnum:Party_Type_API.Decode(''OWNER''):Owner]#]"},{"value": "ForwardingAgent","label": "[#[translateEnum:Party_Type_API.Decode(''FORWARDER''):Forwarding Agent]#]"},{"value": "Employee","label": "[#[translateEnum:Party_Type_API.Decode(''EMPLOYEE''):Employee]#]"}]},"FndBoolean": {"name": "FndBoolean","values": ["False","True"],"labels": [{"value": "False","label": "[#[translateEnum:Fnd_Boolean_API.Decode(''FALSE''):False]#]"},{"value": "True","label": "[#[translateEnum:Fnd_Boolean_API.Decode(''TRUE''):True]#]"}]},"BCBillOrWar": {"name": "BCBillOrWar","values": ["Billable","Warranty"],"labels": [{"value": "Billable","label": "[#[translateEnum:B_C_Bill_Or_War_API.Decode(''BILLABLE''):Billable]#]"},{"value": "Warranty","label": "[#[translateEnum:B_C_Bill_Or_War_API.Decode(''WARRANTY''):Warranty]#]"}]},"BcOwnershipCode": {"name": "BcOwnershipCode","values": ["CustomerOwned","CompanyOwned"],"labels": [{"value": "CustomerOwned","label": "[#[translateEnum:Bc_Ownership_Code_API.Decode(''CUS');
   Dbms_Lob.Writeappend(clob_, 2419, 'TOMER_OWNED''):Customer Owned]#]"},{"value": "CompanyOwned","label": "[#[translateEnum:Bc_Ownership_Code_API.Decode(''COMPANY_OWNED''):Company Owned]#]"}]},"BcRepairCenterOrderState": {"name": "BcRepairCenterOrderState","values": ["Planned","Cancelled","Released","Started","Completed","Closed"],"labels": [{"value": "Planned","label": "[#[translateEnum:Bc_Repair_Center_Order_API.Finite_State_Decode__(''Planned''):Planned]#]"},{"value": "Cancelled","label": "[#[translateEnum:Bc_Repair_Center_Order_API.Finite_State_Decode__(''Cancelled''):Cancelled]#]"},{"value": "Released","label": "[#[translateEnum:Bc_Repair_Center_Order_API.Finite_State_Decode__(''Released''):Released]#]"},{"value": "Started","label": "[#[translateEnum:Bc_Repair_Center_Order_API.Finite_State_Decode__(''Started''):Started]#]"},{"value": "Completed","label": "[#[translateEnum:Bc_Repair_Center_Order_API.Finite_State_Decode__(''Completed''):Completed]#]"},{"value": "Closed","label": "[#[translateEnum:Bc_Repair_Center_Order_API.Finite_State_Decode__(''Closed''):Closed]#]"}]},"BcRepairLineState": {"name": "BcRepairLineState","values": ["New","Received","Cancelled","Processed","RepairStarted","RepairCompleted","Shipped"],"labels": [{"value": "New","label": "[#[translateEnum:Bc_Repair_Line_API.Finite_State_Decode__(''New''):New]#]"},{"value": "Received","label": "[#[translateEnum:Bc_Repair_Line_API.Finite_State_Decode__(''Received''):Received]#]"},{"value": "Cancelled","label": "[#[translateEnum:Bc_Repair_Line_API.Finite_State_Decode__(''Cancelled''):Cancelled]#]"},{"value": "Processed","label": "[#[translateEnum:Bc_Repair_Line_API.Finite_State_Decode__(''Processed''):Processed]#]"},{"value": "RepairStarted","label": "[#[translateEnum:Bc_Repair_Line_API.Finite_State_Decode__(''RepairStarted''):Repair Started]#]"},{"value": "RepairCompleted","label": "[#[translateEnum:Bc_Repair_Line_API.Finite_State_Decode__(''RepairCompleted''):Repair Completed]#]"},{"value": "Shipped","label": "[#[translateEnum:Bc_Repair_Line_API.Finite_State_Decode__(''Shipped''):Shipped]#]"}]},"Lookup_IsoCurrency": [#[callback:Lookup_Enum_Metadata_SYS.Client_Enumeration_Metadata:Iso_Currency_API]#],"CustomerOrderState": {"name": "CustomerOrderState","values": ["Planned","Blocked","Delivered","Invoiced","Released","Reserved","Picked","PartiallyDelivered","Cancelled"],"labels": [{"value": "Planned","label": "[#[translateEnum:Customer_Order_API.Finite_State_Decode__(''Planned''):Pl');
   Dbms_Lob.Writeappend(clob_, 2434, 'anned]#]"},{"value": "Blocked","label": "[#[translateEnum:Customer_Order_API.Finite_State_Decode__(''Blocked''):Blocked]#]"},{"value": "Delivered","label": "[#[translateEnum:Customer_Order_API.Finite_State_Decode__(''Delivered''):Delivered]#]"},{"value": "Invoiced","label": "[#[translateEnum:Customer_Order_API.Finite_State_Decode__(''Invoiced''):Invoiced Closed]#]"},{"value": "Released","label": "[#[translateEnum:Customer_Order_API.Finite_State_Decode__(''Released''):Released]#]"},{"value": "Reserved","label": "[#[translateEnum:Customer_Order_API.Finite_State_Decode__(''Reserved''):Reserved]#]"},{"value": "Picked","label": "[#[translateEnum:Customer_Order_API.Finite_State_Decode__(''Picked''):Picked]#]"},{"value": "PartiallyDelivered","label": "[#[translateEnum:Customer_Order_API.Finite_State_Decode__(''PartiallyDelivered''):Partially Delivered]#]"},{"value": "Cancelled","label": "[#[translateEnum:Customer_Order_API.Finite_State_Decode__(''Cancelled''):Cancelled]#]"}]},"Lookup_IsoLanguage": [#[callback:Lookup_Enum_Metadata_SYS.Client_Enumeration_Metadata:Iso_Language_API]#],"Lookup_IsoCountry": [#[callback:Lookup_Enum_Metadata_SYS.Client_Enumeration_Metadata:Iso_Country_API]#][#[jsoncallback:Custom_Object_Proxy_SYS.Client_Enumeration_Metadata:{"Projection": "BcRcoHandling","Lu": ["Site","CustomerOrder","Lookup_IsoCountry","CustomerInfoAddress","ConditionCode","IsoCurrency","BcRepairCenterOrder","FndUser","BcRepairType","BcRepairLine","Lookup_IsoUnit","BcLogInfo","BcRepairLineAction","CustomerInfo","InventoryPart","Lookup_IsoCurrency"]}]#]},"entities": {"BcRepairCenterOrder": {"name": "BcRepairCenterOrder","hasETag": true,"hasKeys": true,"CRUD": "Create,Read,Update,Delete","luname": "BcRepairCenterOrder","ludependencies": ["BcRepairCenterOrder","BcBcRepairLine"],"keys": ["RcoNo"],"attributes": {"Objstate": {"datatype": "Enumeration","size": 50,"subtype": "BcRepairCenterOrderState","keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"Objgrants": {"datatype": "Text","size": 2000,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"RcoNo": {"datatype": "Number","keygeneration": "User","required": false,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"CustomerId');
   Dbms_Lob.Writeappend(clob_, 2450, '": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CustomerOrderNo": {"datatype": "Text","size": 12,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DocAddressId": {"datatype": "Text","size": 50,"format": "uppercase","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DeliveryAddressId": {"datatype": "Text","size": 50,"format": "uppercase","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Contract": {"datatype": "Text","size": 5,"format": "uppercase","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Currency": {"datatype": "Text","size": 3,"format": "uppercase","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DateCreated": {"datatype": "Date","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"ReportedBy": {"datatype": "Text","size": 30,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Attribute_Metadata:{"Projection": "BcRcoHandling","Lu": "BcRepairCenterOrder","View": "BC_REPAIR_CENTER_ORDER"}]#]},"references": {"CustomerRef": {"target": "CustomerInfo","datasource": "BcRcoHandling.svc/Reference_CustomerInfo?$filter=CustomerId eq $[CustomerId]","mapping": {"CustomerId": "CustomerId"}},"DocAddressRef": {"target": "CustomerInfoAddress","datasource": "BcRcoHandling.svc/Reference_CustomerInfoAddress?$filter=CustomerId eq $[CustomerId] and AddressId eq $[DocAddressId]","mapping": {"CustomerId": "CustomerId","DocAddressId": "AddressId"}},"DelAddressRef": {"target": "CustomerInfoAddress","datasource": "BcRcoHandling.svc/Reference_CustomerInfoAddress?$filter=CustomerId eq $[CustomerId] and AddressId eq $[DeliveryAddressId]","mapping": {"Cus');
   Dbms_Lob.Writeappend(clob_, 2450, 'tomerId": "CustomerId","DeliveryAddressId": "AddressId"}},"CurrencyRef": {"target": "IsoCurrency","datasource": "BcRcoHandling.svc/Reference_IsoCurrency?$filter=CurrencyCode eq $[Currency]","mapping": {"Currency": "CurrencyCode"}},"ContractRef": {"target": "Site","datasource": "BcRcoHandling.svc/Reference_Site?$filter=Contract eq $[Contract]","mapping": {"Contract": "Contract"}},"CustomerOrderRef": {"target": "CustomerOrder","datasource": "BcRcoHandling.svc/Reference_CustomerOrder?$filter=OrderNo eq $[CustomerOrderNo]","mapping": {"CustomerOrderNo": "OrderNo"}},"FndUserRef": {"target": "FndUser","datasource": "BcRcoHandling.svc/Reference_FndUser?$filter=Identity eq $[ReportedBy]","mapping": {"ReportedBy": "Identity"}}[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairCenterOrder"}]#]},"arrays": {"RepairLineArray": {"target": "BcRepairLine","datasource": null,"mapping": {"RcoNo": "RcoNo"}},"InfoLogArray": {"target": "BcLogInfo","datasource": null,"mapping": {"RcoNo": "RcoNo"}}[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Array_Metadata:{"Projection":"BcRcoHandling","Entity":"BcRepairCenterOrder","Lu":"BcRepairCenterOrder"}]#]},"actions": {"Cancel": {"name": "Cancel","ludependencies": [],"StateTransition": true},"Release": {"name": "Release","ludependencies": [],"StateTransition": true},"Start": {"name": "Start","ludependencies": [],"StateTransition": true},"Complete": {"name": "Complete","ludependencies": [],"StateTransition": true},"Close": {"name": "Close","ludependencies": [],"StateTransition": true},"Reopen": {"name": "Reopen","ludependencies": [],"StateTransition": true}},"functions": {},"defaultcopyapplicable": true},"BcRepairLine": {"name": "BcRepairLine","hasETag": true,"hasKeys": true,"CRUD": "Create,Read,Update,Delete","luname": "BcRepairLine","ludependencies": ["BcRepairLine","BcRepairCenterOrder"],"keys": ["RcoNo","RepairLineNo"],"attributes": {"Objstate": {"datatype": "Enumeration","size": 50,"subtype": "BcRepairLineState","keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"Objgrants": {"datatype": "Text","size": 2000,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"RcoNo": {"datatype": "Number","keygeneration": "User","required": true,"editable": {"=');
   Dbms_Lob.Writeappend(clob_, 2450, '=": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"RepairLineNo": {"datatype": "Number","keygeneration": "User","required": false,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"DateEntered": {"datatype": "Date","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"RepairSite": {"datatype": "Text","size": 5,"format": "uppercase","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"PartNumber": {"datatype": "Text","size": 25,"format": "uppercase","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Quantity": {"datatype": "Number","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"QuantityReceived": {"datatype": "Number","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ConditionCode": {"datatype": "Text","size": 10,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"SerialNo": {"datatype": "Text","size": 50,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"OwnershipCode": {"datatype": "Enumeration","size": 20,"subtype": "BcOwnershipCode","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"OwnerId": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": false,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"RepairLineAction": {"datatype": "Text","size": 20,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"RepairType": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true');
   Dbms_Lob.Writeappend(clob_, 2450, ',"unbound": false,"multiselect": false},"CustomerFaultCode": {"datatype": "Text","size": 20,"keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"NoteText": {"datatype": "Text","size": 2000,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"NoteId": {"datatype": "Text","size": 10,"keygeneration": "User","required": false,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"BillableOrWarranty": {"datatype": "Enumeration","size": 20,"subtype": "BCBillOrWar","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ManufacturerWarranty": {"datatype": "Boolean","size": 20,"keygeneration": "User","required": false,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"RepairWarranty": {"datatype": "Boolean","size": 20,"keygeneration": "User","required": false,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"WarrantyValidated": {"datatype": "Boolean","size": 20,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ProcessingFee": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"RequiredStart": {"datatype": "Date","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Attribute_Metadata:{"Projection": "BcRcoHandling","Lu": "BcRepairLine","View": "BC_REPAIR_LINE"}]#]},"references": {"CustomerRef": {"target": "CustomerInfo","datasource": "BcRcoHandling.svc/Reference_CustomerInfo?$filter=CustomerId eq $[OwnerId]","mapping": {"OwnerId": "CustomerId"}},"RepairTypeRef": {"target": "BcRepairType","datasource": "BcRcoHandling.svc/Reference_BcRepairType?$filter=RepairType eq $[RepairType]","mapping": {"RepairType": "RepairType"}},"ConditionCodeRef": {"target": "ConditionCode","datasource": "BcRcoHandling.svc/Reference_');
   Dbms_Lob.Writeappend(clob_, 2450, 'ConditionCode?$filter=ConditionCode eq $[ConditionCode]","mapping": {"ConditionCode": "ConditionCode"}},"InventoryPartRef": {"target": "InventoryPart","datasource": "BcRcoHandling.svc/Reference_InventoryPart?$filter=Contract eq $[RepairSite] and PartNo eq $[PartNumber]","mapping": {"RepairSite": "Contract","PartNumber": "PartNo"}},"LineActionRef": {"target": "BcRepairLineAction","datasource": "BcRcoHandling.svc/Reference_BcRepairLineAction?$filter=RepairLineAction eq $[RepairLineAction]","mapping": {"RepairLineAction": "RepairLineAction"}},"SiteRef": {"target": "Site","datasource": "BcRcoHandling.svc/Reference_Site?$filter=Contract eq $[RepairSite]","mapping": {"RepairSite": "Contract"}},"RepairLineActionRef": {"target": "BcRepairLine","datasource": "BcRcoHandling.svc/Reference_BcRepairLine?$filter=RepairLineAction eq $[RepairLineAction]","mapping": {"RepairLineAction": "RepairLineAction"}}[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairLine"}]#]},"arrays": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Array_Metadata:{"Projection":"BcRcoHandling","Entity":"BcRepairLine","Lu":"BcRepairLine"}]#]},"actions": {"Cancel": {"name": "Cancel","ludependencies": [],"StateTransition": true},"Receive": {"name": "Receive","ludependencies": [],"StateTransition": true},"Process": {"name": "Process","ludependencies": [],"StateTransition": true},"RepairStart": {"name": "RepairStart","ludependencies": [],"StateTransition": true},"RepairComplete": {"name": "RepairComplete","ludependencies": [],"StateTransition": true},"Ship": {"name": "Ship","ludependencies": [],"StateTransition": true}},"functions": {},"defaultcopyapplicable": true},"BcLogInfo": {"name": "BcLogInfo","hasETag": true,"hasKeys": true,"CRUD": "Create,Read,Update,Delete","luname": "BcLogInfo","ludependencies": ["BcLogInfo"],"keys": ["RcoNo","LogInfoId"],"attributes": {"Objgrants": {"datatype": "Text","size": 2000,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"RcoNo": {"datatype": "Number","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"LogInfoId": {"datatype": "Number","keygeneration": "User","required": false,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"ins');
   Dbms_Lob.Writeappend(clob_, 2450, 'ertable": true,"unbound": false,"multiselect": false},"RcoLine": {"datatype": "Number","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"DateCreated": {"datatype": "Date","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"ReportedBy": {"datatype": "Text","size": 30,"keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"PartNumber": {"datatype": "Text","size": 25,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"Contract": {"datatype": "Text","size": 5,"format": "uppercase","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Notes": {"datatype": "Text","size": 2000,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"EnterBy": {"datatype": "Text","size": 6,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Attribute_Metadata:{"Projection": "BcRcoHandling","Lu": "BcLogInfo","View": "BC_LOG_INFO"}]#]},"references": {"ReportedByRef": {"target": "FndUser","datasource": "BcRcoHandling.svc/Reference_FndUser?$filter=Identity eq $[ReportedBy]","mapping": {"ReportedBy": "Identity"}},"PartRef": {"target": "InventoryPart","datasource": "BcRcoHandling.svc/Reference_InventoryPart?$filter=Contract eq $[Contract] and PartNo eq $[PartNumber]","mapping": {"Contract": "Contract","PartNumber": "PartNo"}},"RCOLineRef": {"target": "BcRepairLine","datasource": "BcRcoHandling.svc/Reference_BcRepairLine?$filter=RcoNo eq $[RcoNo] and RepairLineNo eq $[RcoLine]","mapping": {"RcoNo": "RcoNo","RcoLine": "RepairLineNo"}}[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Lu":"BcLogInfo"}]#]},"arrays": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Array_Metadata:{"Projection":"BcRcoHandling","Entity":"BcLogInfo');
   Dbms_Lob.Writeappend(clob_, 2450, '","Lu":"BcLogInfo"}]#]},"actions": {},"functions": {},"defaultcopyapplicable": true},"CustomerInfo": {"name": "CustomerInfo","hasETag": true,"hasKeys": true,"CRUD": "Read","luname": "CustomerInfo","ludependencies": ["CustomerInfo"],"keys": ["CustomerId"],"attributes": {"Objgrants": {"datatype": "Text","size": 2000,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"CustomerId": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": false,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"Name": {"datatype": "Text","size": 100,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CreationDate": {"datatype": "Date","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"AssociationNo": {"datatype": "Text","size": 50,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Party": {"datatype": "Text","size": 20,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DefaultDomain": {"datatype": "Boolean","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DefaultLanguage": {"datatype": "Enumeration","size": 2,"subtype": "Lookup_IsoLanguage","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Country": {"datatype": "Enumeration","size": 2,"subtype": "Lookup_IsoCountry","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"PartyType": {"datatype": "Enumeration","size": 20,"subtype": "PartyType","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CorporateForm": {"datatype": "Text","size": 8,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"IdentifierReference"');
   Dbms_Lob.Writeappend(clob_, 2450, ': {"datatype": "Text","size": 100,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"IdentifierRefValidation": {"datatype": "Enumeration","size": 20,"subtype": "IdentifierRefValidation","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"PictureId": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"OneTime": {"datatype": "Boolean","size": 20,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CustomerCategory": {"datatype": "Enumeration","size": 20,"subtype": "CustomerCategory","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"B2bCustomer": {"datatype": "Boolean","size": 20,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CustomerTaxUsageType": {"datatype": "Text","size": 5,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"BusinessClassification": {"datatype": "Text","size": 10,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DateOfRegistration": {"datatype": "Date","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Attribute_Metadata:{"Projection": "BcRcoHandling","Lu": "CustomerInfo","View": "CUSTOMER_INFO"}]#]},"references": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Lu":"CustomerInfo"}]#]},"arrays": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Array_Metadata:{"Projection":"BcRcoHandling","Entity":"CustomerInfo","Lu":"CustomerInfo"}]#]},"actions": {},"functions": {}},"CustomerInfoAddress": {"name": "CustomerInfoAddress","hasETag": true,"hasKeys": true,"CRUD": "Read","luname": "CustomerInfoAddress","ludependencies": ["CustomerInfoAddress"],"keys": ["CustomerId","AddressId"],"attributes": {"Objgrants": ');
   Dbms_Lob.Writeappend(clob_, 2450, '{"datatype": "Text","size": 2000,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"CustomerId": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"AddressId": {"datatype": "Text","size": 50,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"Name": {"datatype": "Text","size": 100,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Address": {"datatype": "Text","size": 2000,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"EanLocation": {"datatype": "Text","size": 100,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ValidFrom": {"datatype": "Date","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ValidTo": {"datatype": "Date","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Party": {"datatype": "Text","size": 20,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"AddressLov": {"datatype": "Text","size": 2000,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"DefaultDomain": {"datatype": "Boolean","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Country": {"datatype": "Enumeration","size": 2,"subtype": "Lookup_IsoCountry","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"PartyType": {"datatype": "Enumeration","size": 20,"subtype": "PartyType","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"mu');
   Dbms_Lob.Writeappend(clob_, 2450, 'ltiselect": false},"SecondaryContact": {"datatype": "Text","size": 35,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"PrimaryContact": {"datatype": "Text","size": 35,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Address1": {"datatype": "Text","size": 35,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Address2": {"datatype": "Text","size": 35,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Address3": {"datatype": "Text","size": 100,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Address4": {"datatype": "Text","size": 100,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Address5": {"datatype": "Text","size": 100,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Address6": {"datatype": "Text","size": 100,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ZipCode": {"datatype": "Text","size": 35,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"City": {"datatype": "Text","size": 35,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"County": {"datatype": "Text","size": 35,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"State": {"datatype": "Text","size": 35,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"InCity": {"datatype": "Text","size": 5,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"JurisdictionCode": {"datatype": "Text","size": 20,"keygeneration": "User","required": fals');
   Dbms_Lob.Writeappend(clob_, 2450, 'e,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CommId": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"OutputMedia": {"datatype": "Enumeration","size": 20,"subtype": "OutputMediaType","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"EndCustomerId": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"EndCustAddrId": {"datatype": "Text","size": 50,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CustomerBranch": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Attribute_Metadata:{"Projection": "BcRcoHandling","Lu": "CustomerInfoAddress","View": "CUSTOMER_INFO_ADDRESS"}]#]},"references": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Lu":"CustomerInfoAddress"}]#]},"arrays": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Array_Metadata:{"Projection":"BcRcoHandling","Entity":"CustomerInfoAddress","Lu":"CustomerInfoAddress"}]#]},"actions": {},"functions": {}},"IsoCurrency": {"name": "IsoCurrency","hasETag": true,"hasKeys": true,"CRUD": "Read","luname": "IsoCurrency","ludependencies": ["IsoCurrency"],"keys": ["CurrencyCode"],"attributes": {"Objgrants": {"datatype": "Text","size": 2000,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"CurrencyCode": {"datatype": "Text","size": 3,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"Description": {"datatype": "Text","size": 739,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CurrencyNumber": {"datatype": "Number","keygeneration": "Us');
   Dbms_Lob.Writeappend(clob_, 2450, 'er","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"UsedInAppl": {"datatype": "Text","size": 5,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DefaultCountry": {"datatype": "Text","size": 2,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"SystemAdded": {"datatype": "Text","size": 1,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Attribute_Metadata:{"Projection": "BcRcoHandling","Lu": "IsoCurrency","View": "ISO_CURRENCY"}]#]},"references": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Lu":"IsoCurrency"}]#]},"arrays": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Array_Metadata:{"Projection":"BcRcoHandling","Entity":"IsoCurrency","Lu":"IsoCurrency"}]#]},"actions": {},"functions": {}},"Site": {"name": "Site","hasETag": true,"hasKeys": true,"CRUD": "Read","luname": "Site","ludependencies": ["Site"],"keys": ["Contract"],"attributes": {"Objgrants": {"datatype": "Text","size": 2000,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"Contract": {"datatype": "Text","size": 5,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"Company": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"DeliveryAddress": {"datatype": "Text","size": 50,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Description": {"datatype": "Text","size": 20,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"DistCalendarId": {"datatype": "Text","size": 10,"format": "uppercase","keygeneration": "User","required": true');
   Dbms_Lob.Writeappend(clob_, 2450, ',"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ManufCalendarId": {"datatype": "Text","size": 10,"format": "uppercase","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Offset": {"datatype": "Number","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DataCaptureMenuId": {"datatype": "Text","size": 50,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Attribute_Metadata:{"Projection": "BcRcoHandling","Lu": "Site","View": "SITE"}]#]},"references": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Lu":"Site"}]#]},"arrays": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Array_Metadata:{"Projection":"BcRcoHandling","Entity":"Site","Lu":"Site"}]#]},"actions": {},"functions": {}},"CustomerOrder": {"name": "CustomerOrder","hasETag": true,"hasKeys": true,"CRUD": "Read","luname": "CustomerOrder","ludependencies": ["CustomerOrder"],"keys": ["OrderNo"],"attributes": {"Objstate": {"datatype": "Enumeration","size": 50,"subtype": "CustomerOrderState","keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"Objgrants": {"datatype": "Text","size": 2000,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"OrderNo": {"datatype": "Text","size": 12,"format": "uppercase","keygeneration": "User","required": false,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"AuthorizeCode": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"BillAddrNo": {"datatype": "Text","size": 50,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Contract": {"datatype": "Text","size": 5,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]}');
   Dbms_Lob.Writeappend(clob_, 2450, ',"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"Company": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"CountryCode": {"datatype": "Text","size": 2,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CurrencyCode": {"datatype": "Text","size": 3,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"CustomerNo": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"CustomerNoPay": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CustomerNoPayAddrNo": {"datatype": "Text","size": 50,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CustomerNoPayReference": {"datatype": "Text","size": 30,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DeliveryTerms": {"datatype": "Text","size": 5,"format": "uppercase","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DistrictCode": {"datatype": "Text","size": 10,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"LanguageCode": {"datatype": "Text","size": 2,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"MarketCode": {"datatype": "Text","size": 10,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"NoteId": {"datatype": "Number","keygeneration": "User","required": false,"editable": {"==": [{"var": "record.etag"},nul');
   Dbms_Lob.Writeappend(clob_, 2450, 'l]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"OrderCode": {"datatype": "Text","size": 3,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"OrderId": {"datatype": "Text","size": 3,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"PayTermId": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"PreAccountingId": {"datatype": "Number","keygeneration": "User","required": false,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"PrintControlCode": {"datatype": "Text","size": 10,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"RegionCode": {"datatype": "Text","size": 10,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"SalesmanCode": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ShipAddrNo": {"datatype": "Text","size": 50,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ShipViaCode": {"datatype": "Text","size": 3,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"AddrFlag": {"datatype": "Enumeration","size": 1,"subtype": "GenYesNo","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"GrpDiscCalcFlag": {"datatype": "Enumeration","size": 1,"subtype": "GenYesNo","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CustomerPoNo": {"datatype": "Text","size": 50,"keygeneration": "User","required":');
   Dbms_Lob.Writeappend(clob_, 2450, ' false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CustRef": {"datatype": "Text","size": 100,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DateEntered": {"datatype": "Timestamp","keygeneration": "User","required": false,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"DeliveryLeadtime": {"datatype": "Number","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"LabelNote": {"datatype": "Text","size": 50,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"NoteText": {"datatype": "Text","size": 2000,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"OrderConf": {"datatype": "Enumeration","size": 1,"subtype": "OrderConfirmationPrinted","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"OrderConfFlag": {"datatype": "Enumeration","size": 1,"subtype": "PrintOrderConfirmation","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"PackListFlag": {"datatype": "Enumeration","size": 1,"subtype": "PrintPackList","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"PickListFlag": {"datatype": "Enumeration","size": 1,"subtype": "PrintPickList","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"TaxLiability": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DeliveryCountryCode": {"datatype": "Text","size": 2,"format": "uppercase","keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"WantedDeliveryDate": {"datatype": "Timestamp","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable":');
   Dbms_Lob.Writeappend(clob_, 2450, ' true,"unbound": false,"multiselect": false},"InternalPoNo": {"datatype": "Text","size": 12,"format": "uppercase","keygeneration": "User","required": false,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"RouteId": {"datatype": "Text","size": 12,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"AgreementId": {"datatype": "Text","size": 10,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ForwardAgentId": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"InternalDeliveryType": {"datatype": "Enumeration","size": 10,"subtype": "OrderDeliveryType","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ExternalRef": {"datatype": "Text","size": 25,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ProjectId": {"datatype": "Text","size": 10,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"StagedBilling": {"datatype": "Enumeration","size": 20,"subtype": "StagedBillingType","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"SmConnection": {"datatype": "Enumeration","size": 20,"subtype": "ServiceManagementConnect","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"SchedulingConnection": {"datatype": "Enumeration","size": 20,"subtype": "ScheduleAgreementOrder","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Priority": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"IntrastatExempt": {"datatype": "Enumeration","size": 20,"subtype": "IntrastatExempt","keygeneration": "User","required": tr');
   Dbms_Lob.Writeappend(clob_, 2450, 'ue,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"AdditionalDiscount": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"PayTermBaseDate": {"datatype": "Date","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"SummarizedSourceLines": {"datatype": "Enumeration","size": 20,"subtype": "GenYesNo","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CaseId": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"TaskId": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ConfirmDeliveries": {"datatype": "Boolean","size": 20,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CheckSalesGrpDelivConf": {"datatype": "Boolean","size": 20,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DelayCogsToDelivConf": {"datatype": "Boolean","size": 20,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CancelReason": {"datatype": "Text","size": 10,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"JinsuiInvoice": {"datatype": "Boolean","size": 20,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"BlockedReason": {"datatype": "Text","size": 100,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"BlockedFromState": {"datatype": "Text","size": 20,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"SalesContractNo": {"datatype": "Text","size": 15,"keygeneration": "User","required": false,');
   Dbms_Lob.Writeappend(clob_, 2450, '"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ContractRevSeq": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ContractLineNo": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ContractItemNo": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DefaultCharges": {"datatype": "Boolean","keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"ReleasedFromCreditCheck": {"datatype": "Boolean","size": 20,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ProposedPrepaymentAmount": {"datatype": "Number","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"PrepaymentApproved": {"datatype": "Boolean","size": 5,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"BackorderOption": {"datatype": "Enumeration","size": 40,"subtype": "CustomerBackorderOption","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ExpectedPrepaymentDate": {"datatype": "Date","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ShipmentCreation": {"datatype": "Enumeration","size": 20,"subtype": "ShipmentCreationCustomerOrder","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"UsePreShipDelNote": {"datatype": "Boolean","size": 20,"keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"PickInventoryType": {"datatype": "Enumeration","size": 7,"subtype": "PickInventoryType","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": tru');
   Dbms_Lob.Writeappend(clob_, 2450, 'e,"unbound": false,"multiselect": false},"TaxIdNo": {"datatype": "Text","size": 50,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"TaxIdValidatedDate": {"datatype": "Date","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ClassificationStandard": {"datatype": "Text","size": 25,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"MsgSequenceNo": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"MsgVersionNo": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CurrencyRateType": {"datatype": "Text","size": 10,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DelTermsLocation": {"datatype": "Text","size": 100,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"InternalRef": {"datatype": "Text","size": 30,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"InternalPoLabelNote": {"datatype": "Text","size": 50,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"SupplyCountry": {"datatype": "Enumeration","size": 2,"subtype": "Lookup_IsoCountry","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"RebateCustomer": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"FreightMapId": {"datatype": "Text","size": 15,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ZoneId": {"datatype": "Text","size": 15,"format": "uppercase","keygeneration": "User","required": f');
   Dbms_Lob.Writeappend(clob_, 2450, 'alse,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"FreightPriceListNo": {"datatype": "Text","size": 10,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"SummarizedFreightCharges": {"datatype": "Enumeration","size": 20,"subtype": "GenYesNo","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ApplyFixDelivFreight": {"datatype": "Boolean","size": 20,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"FixDelivFreight": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"PrintDeliveredLines": {"datatype": "Enumeration","size": 23,"subtype": "DeliveryNoteOptions","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"UpdatePriceEffectiveDate": {"datatype": "Boolean","keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"CustCalendarId": {"datatype": "Text","size": 10,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ExtTransportCalendarId": {"datatype": "Text","size": 10,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"UsePriceInclTax": {"datatype": "Boolean","size": 20,"keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"CustomsValueCurrency": {"datatype": "Text","size": 3,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"BusinessOpportunityNo": {"datatype": "Text","size": 12,"format": "uppercase","keygeneration": "User","required": false,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"PickingLeadtime": {"datatype": "Number","keygeneration"');
   Dbms_Lob.Writeappend(clob_, 2450, ': "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ShipmentType": {"datatype": "Text","size": 3,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"VendorNo": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DisconnectExpLicense": {"datatype": "Text","size": 5,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"ReplicateChanges": {"datatype": "Text","size": 5,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"ChangeRequest": {"datatype": "Text","size": 5,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"QuotationNo": {"datatype": "Text","size": 12,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"FreeOfChgTaxPayParty": {"datatype": "Enumeration","size": 20,"subtype": "TaxPayingParty","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"BlockedType": {"datatype": "Enumeration","size": 20,"subtype": "CustomerOrderBlockType","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"B2bOrder": {"datatype": "Boolean","size": 20,"keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"MainRepresentativeId": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"LimitSalesToAssortments": {"datatype": "Boolean","size": 20,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"FinalConsumer": {"datatype": "Boolean","size": 20,"keygeneration": "User","required": true,"editable": true,"updatable": true,"ins');
   Dbms_Lob.Writeappend(clob_, 2450, 'ertable": true,"unbound": false,"multiselect": false},"CustomerTaxUsageType": {"datatype": "Text","size": 5,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"InvoiceReasonId": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DeliveryReasonId": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ComponentA": {"datatype": "Text","size": 50,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ServiceCode": {"datatype": "Text","size": 100,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DiscPriceRound": {"datatype": "Boolean","size": 20,"keygeneration": "Server","required": true,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"BusinessTransactionId": {"datatype": "Text","size": 20,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"InvoicedClosedDate": {"datatype": "Date","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Attribute_Metadata:{"Projection": "BcRcoHandling","Lu": "CustomerOrder","View": "CUSTOMER_ORDER"}]#]},"references": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Lu":"CustomerOrder"}]#]},"arrays": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Array_Metadata:{"Projection":"BcRcoHandling","Entity":"CustomerOrder","Lu":"CustomerOrder"}]#]},"actions": {"SetCancelled": {"name": "SetCancelled","ludependencies": [],"StateTransition": true},"SetLineCancelled": {"name": "SetLineCancelled","ludependencies": [],"StateTransition": true},"SetLineQtyAssigned": {"name": "SetLineQtyAssigned","ludependencies": [],"StateTransition": true},"SetReleased": {"name": "SetReleased","ludependencies": [],"StateTra');
   Dbms_Lob.Writeappend(clob_, 2450, 'nsition": true},"SetLineQtyInvoiced": {"name": "SetLineQtyInvoiced","ludependencies": [],"StateTransition": true},"SetBlocked": {"name": "SetBlocked","ludependencies": [],"StateTransition": true},"ReleaseBlocked": {"name": "ReleaseBlocked","ludependencies": [],"StateTransition": true},"SetLineQtyConfirmeddiff": {"name": "SetLineQtyConfirmeddiff","ludependencies": [],"StateTransition": true},"SetLineQtyShipdiff": {"name": "SetLineQtyShipdiff","ludependencies": [],"StateTransition": true},"SetLineUninvoiced": {"name": "SetLineUninvoiced","ludependencies": [],"StateTransition": true},"SetLineQtyPicked": {"name": "SetLineQtyPicked","ludependencies": [],"StateTransition": true},"SetLineQtyShipped": {"name": "SetLineQtyShipped","ludependencies": [],"StateTransition": true},"NewOrderLineAdded": {"name": "NewOrderLineAdded","ludependencies": [],"StateTransition": true},"UndoLineDelivery": {"name": "UndoLineDelivery","ludependencies": [],"StateTransition": true},"SetRentLineCompleted": {"name": "SetRentLineCompleted","ludependencies": [],"StateTransition": true},"SetRentLineReopened": {"name": "SetRentLineReopened","ludependencies": [],"StateTransition": true},"NewOrChangedCharge": {"name": "NewOrChangedCharge","ludependencies": [],"StateTransition": true}},"functions": {}},"FndUser": {"name": "FndUser","hasETag": true,"hasKeys": true,"CRUD": "Read","luname": "FndUser","ludependencies": ["FndUser"],"keys": ["Identity"],"attributes": {"Objgrants": {"datatype": "Text","size": 2000,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"Identity": {"datatype": "Text","size": 30,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"Description": {"datatype": "Text","size": 2000,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"OracleUser": {"datatype": "Text","size": 30,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"WebUser": {"datatype": "Text","size": 2000,"format": "uppercase","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false');
   Dbms_Lob.Writeappend(clob_, 2450, '},"UserType": {"datatype": "Enumeration","size": 20,"subtype": "FndUserType","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Active": {"datatype": "Text","size": 5,"format": "uppercase","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Created": {"datatype": "Date","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"LastModified": {"datatype": "Date","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ValidFrom": {"datatype": "Date","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ValidTo": {"datatype": "Date","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DefaultIdp": {"datatype": "Text","size": 5,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"FromScim": {"datatype": "Text","size": 5,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Attribute_Metadata:{"Projection": "BcRcoHandling","Lu": "FndUser","View": "FND_USER"}]#]},"references": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Lu":"FndUser"}]#]},"arrays": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Array_Metadata:{"Projection":"BcRcoHandling","Entity":"FndUser","Lu":"FndUser"}]#]},"actions": {},"functions": {}},"BcRepairType": {"name": "BcRepairType","hasETag": true,"hasKeys": true,"CRUD": "Read","luname": "BcRepairType","ludependencies": ["BcRepairType"],"keys": ["RepairType"],"attributes": {"Objgrants": {"datatype": "Text","size": 2000,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"RepairType": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null');
   Dbms_Lob.Writeappend(clob_, 2450, ']},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"Description": {"datatype": "Text","size": 60,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Attribute_Metadata:{"Projection": "BcRcoHandling","Lu": "BcRepairType","View": "BC_REPAIR_TYPE"}]#]},"references": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairType"}]#]},"arrays": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Array_Metadata:{"Projection":"BcRcoHandling","Entity":"BcRepairType","Lu":"BcRepairType"}]#]},"actions": {},"functions": {}},"ConditionCode": {"name": "ConditionCode","hasETag": true,"hasKeys": true,"CRUD": "Read","luname": "ConditionCode","ludependencies": ["ConditionCode"],"keys": ["ConditionCode"],"attributes": {"Objgrants": {"datatype": "Text","size": 2000,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"ConditionCode": {"datatype": "Text","size": 10,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"Description": {"datatype": "Text","size": 35,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"NoteText": {"datatype": "Text","size": 2000,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ConditionCodeType": {"datatype": "Enumeration","size": 20,"subtype": "ConditionCodeType","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DefaultAvailControlId": {"datatype": "Text","size": 25,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ResetRepairValue": {"datatype": "Boolean","size": 20,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ResetOverhaulValue": {"datatype": "Boolean","size": 20,"keygeneration": "User","required": true,"editable": true,"');
   Dbms_Lob.Writeappend(clob_, 2450, 'updatable": true,"insertable": true,"unbound": false,"multiselect": false}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Attribute_Metadata:{"Projection": "BcRcoHandling","Lu": "ConditionCode","View": "CONDITION_CODE"}]#]},"references": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Lu":"ConditionCode"}]#]},"arrays": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Array_Metadata:{"Projection":"BcRcoHandling","Entity":"ConditionCode","Lu":"ConditionCode"}]#]},"actions": {},"functions": {}},"InventoryPart": {"name": "InventoryPart","hasETag": true,"hasKeys": true,"CRUD": "Read","luname": "InventoryPart","ludependencies": ["InventoryPart"],"keys": ["Contract","PartNo"],"attributes": {"Objgrants": {"datatype": "Text","size": 2000,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"Contract": {"datatype": "Text","size": 5,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"PartNo": {"datatype": "Text","size": 25,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"AccountingGroup": {"datatype": "Text","size": 5,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"AssetClass": {"datatype": "Text","size": 2,"format": "uppercase","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CountryOfOrigin": {"datatype": "Text","size": 2,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"HazardCode": {"datatype": "Text","size": 6,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"NoteId": {"datatype": "Number","keygeneration": "User","required": false,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"EstimatedMaterialCost": {"datatype": "Number","keygeneratio');
   Dbms_Lob.Writeappend(clob_, 2450, 'n": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"PartProductCode": {"datatype": "Text","size": 5,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"PartProductFamily": {"datatype": "Text","size": 5,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"PartStatus": {"datatype": "Text","size": 1,"format": "uppercase","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"PlannerBuyer": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"PrimeCommodity": {"datatype": "Text","size": 5,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"SecondCommodity": {"datatype": "Text","size": 5,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"UnitMeas": {"datatype": "Text","size": 10,"keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"CatchUnitMeas": {"datatype": "Text","size": 30,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Description": {"datatype": "Text","size": 200,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DescriptionCopy": {"datatype": "Text","size": 200,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"DescriptionInUse": {"datatype": "Text","size": 200,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"AbcClass": {"datatype": "Text","size": 1,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"AbcClassLockedUntil": {"datatype": "Date","keyg');
   Dbms_Lob.Writeappend(clob_, 2450, 'eneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CountVariance": {"datatype": "Number","keygeneration": "User","required": true,"editable": {"!=": [{"var": "record.etag"},null]},"updatable": true,"insertable": false,"unbound": false,"multiselect": false},"CreateDate": {"datatype": "Date","keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"CycleCode": {"datatype": "Enumeration","size": 1,"subtype": "InventoryPartCountType","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CyclePeriod": {"datatype": "Number","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DimQuality": {"datatype": "Text","size": 25,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DurabilityDay": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ExpectedLeadtime": {"datatype": "Number","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"LastActivityDate": {"datatype": "Date","keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"LeadTimeCode": {"datatype": "Enumeration","size": 1,"subtype": "InvPartLeadTimeCode","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ManufLeadtime": {"datatype": "Number","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"NoteText": {"datatype": "Text","size": 2000,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"OeAllocAssignFlag": {"datatype": "Enumeration","size": 1,"subtype": "CustOrdReservationType","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"OnhandAnalysisFlag": {"datatype": "E');
   Dbms_Lob.Writeappend(clob_, 2450, 'numeration","size": 1,"subtype": "InventoryPartOnhAnalys","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"PurchLeadtime": {"datatype": "Number","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"EarliestUltdSupplyDate": {"datatype": "Date","keygeneration": "User","required": false,"editable": {"!=": [{"var": "record.etag"},null]},"updatable": true,"insertable": false,"unbound": false,"multiselect": false},"Supersedes": {"datatype": "Text","size": 25,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"SupplyCode": {"datatype": "Enumeration","size": 3,"subtype": "MaterialRequisSupplySubset1","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"TypeCode": {"datatype": "Enumeration","size": 2,"subtype": "InventoryPartType","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CustomsStatNo": {"datatype": "Text","size": 15,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"TypeDesignation": {"datatype": "Text","size": 25,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ZeroCostFlag": {"datatype": "Enumeration","size": 1,"subtype": "InventoryPartZeroCost","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"AvailActivityStatus": {"datatype": "Enumeration","size": 9,"subtype": "InventoryPartAvailStat","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"EngAttribute": {"datatype": "Text","size": 5,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ShortageFlag": {"datatype": "Enumeration","size": 1,"subtype": "InventoryPartShortage","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"mult');
   Dbms_Lob.Writeappend(clob_, 2450, 'iselect": false},"ForecastConsumptionFlag": {"datatype": "Enumeration","size": 30,"subtype": "InvPartForecastConsum","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"StockManagement": {"datatype": "Enumeration","size": 50,"subtype": "InventoryPartManagement","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"IntrastatConvFactor": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"PartCostGroupId": {"datatype": "Text","size": 5,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DopConnection": {"datatype": "Enumeration","size": 200,"subtype": "DopConnection","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"StdNameId": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"InventoryValuationMethod": {"datatype": "Enumeration","size": 50,"subtype": "InventoryValueMethod","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"NegativeOnHand": {"datatype": "Enumeration","size": 50,"subtype": "NegativeOnHand","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"TechnicalCoordinatorId": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"InvoiceConsideration": {"datatype": "Enumeration","size": 50,"subtype": "InvoiceConsideration","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ActualCostActivated": {"datatype": "Date","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"MaxActualCostUpdate": {"datatype": "Number","format": "percentage","keygeneration": "User","required": false,"editable": true,"updatable": true,"');
   Dbms_Lob.Writeappend(clob_, 2450, 'insertable": true,"unbound": false,"multiselect": false},"CustWarrantyId": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"SupWarrantyId": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"RegionOfOrigin": {"datatype": "Text","size": 10,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"InventoryPartCostLevel": {"datatype": "Enumeration","size": 50,"subtype": "InventoryPartCostLevel","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ExtServiceCostMethod": {"datatype": "Enumeration","size": 20,"subtype": "ExtServiceCostMethod","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"SupplyChainPartGroup": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"AutomaticCapabilityCheck": {"datatype": "Enumeration","size": 50,"subtype": "CapabilityCheckAllocate","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"InputUnitMeasGroupId": {"datatype": "Text","size": 30,"format": "uppercase","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DopNetting": {"datatype": "Enumeration","size": 20,"subtype": "DopNetting","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"CoReserveOnhAnalysFlag": {"datatype": "Enumeration","size": 20,"subtype": "InventoryPartOnhAnalys","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"QtyCalcRounding": {"datatype": "Number","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"LifecycleStage": {"datatype": "Enumeration","size": 20,"subtype": "InvPartLifecycleStage","ke');
   Dbms_Lob.Writeappend(clob_, 2450, 'ygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"LifeStageLockedUntil": {"datatype": "Date","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"FrequencyClass": {"datatype": "Enumeration","size": 20,"subtype": "InvPartFrequencyClass","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"FreqClassLockedUntil": {"datatype": "Date","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"FirstStatIssueDate": {"datatype": "Date","keygeneration": "User","required": false,"editable": {"!=": [{"var": "record.etag"},null]},"updatable": true,"insertable": false,"unbound": false,"multiselect": false},"LatestStatIssueDate": {"datatype": "Date","keygeneration": "User","required": false,"editable": {"!=": [{"var": "record.etag"},null]},"updatable": true,"insertable": false,"unbound": false,"multiselect": false},"DeclineDate": {"datatype": "Date","keygeneration": "User","required": false,"editable": {"!=": [{"var": "record.etag"},null]},"updatable": true,"insertable": false,"unbound": false,"multiselect": false},"ExpiredDate": {"datatype": "Date","keygeneration": "User","required": false,"editable": {"!=": [{"var": "record.etag"},null]},"updatable": true,"insertable": false,"unbound": false,"multiselect": false},"DeclineIssueCounter": {"datatype": "Number","keygeneration": "User","required": false,"editable": {"!=": [{"var": "record.etag"},null]},"updatable": true,"insertable": false,"unbound": false,"multiselect": false},"ExpiredIssueCounter": {"datatype": "Number","keygeneration": "User","required": false,"editable": {"!=": [{"var": "record.etag"},null]},"updatable": true,"insertable": false,"unbound": false,"multiselect": false},"MinDurabDaysCoDeliv": {"datatype": "Number","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"MinDurabDaysPlanning": {"datatype": "Number","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"AutoCreatedGtin": {"datatype": "Text","size": 5,"format": "uppercase","keygeneration": "Server","required": false,"');
   Dbms_Lob.Writeappend(clob_, 2450, 'editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"StorageWidthRequirement": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"StorageHeightRequirement": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"StorageDepthRequirement": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"StorageVolumeRequirement": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"StorageWeightRequirement": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"MinStorageTemperature": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"MaxStorageTemperature": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"MinStorageHumidity": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"MaxStorageHumidity": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"StandardPutawayQty": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"PutawayZoneRefillOption": {"datatype": "Enumeration","size": 20,"subtype": "PutawayZoneRefillOption","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ResetConfigStdCost": {"datatype": "Boolean","size": 5,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"MandatoryExpirationDate": {"datatype": "Boolean","size": 5,"keygeneration": "User","required": true,"edi');
   Dbms_Lob.Writeappend(clob_, 2450, 'table": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ExclShipPackProposal": {"datatype": "Boolean","size": 5,"keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Company": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"StatisticalCode": {"datatype": "Text","size": 15,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"AcquisitionOrigin": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"AcquisitionReasonId": {"datatype": "Text","size": 20,"keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Attribute_Metadata:{"Projection": "BcRcoHandling","Lu": "InventoryPart","View": "INVENTORY_PART"}]#]},"references": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Lu":"InventoryPart"}]#]},"arrays": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Array_Metadata:{"Projection":"BcRcoHandling","Entity":"InventoryPart","Lu":"InventoryPart"}]#]},"actions": {},"functions": {}},"BcRepairLineAction": {"name": "BcRepairLineAction","hasETag": true,"hasKeys": true,"CRUD": "Read","luname": "BcRepairLineAction","ludependencies": ["BcRepairLineAction"],"keys": ["RepairLineAction"],"attributes": {"Objgrants": {"datatype": "Text","size": 2000,"keygeneration": "Server","required": false,"editable": false,"updatable": false,"insertable": false,"unbound": false,"multiselect": false},"RepairLineAction": {"datatype": "Text","size": 20,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"Contract": {"datatype": "Text","size": 5,"format": "uppercase","keygeneration": "User","required": true,"editable": {"==": [{"var": "record.etag"},null]},"updatable": false,"insertable": true,"unbound": false,"multiselect": false},"RepairLineActionDesc": {"datatype": "Text","size": 60,"keygen');
   Dbms_Lob.Writeappend(clob_, 2450, 'eration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"ActionType": {"datatype": "Enumeration","size": 20,"subtype": "BcLineActionType","keygeneration": "User","required": true,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"DaysBeforeOverdue": {"datatype": "Number","keygeneration": "User","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Attribute_Metadata:{"Projection": "BcRcoHandling","Lu": "BcRepairLineAction","View": "BC_REPAIR_LINE_ACTION"}]#]},"references": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairLineAction"}]#]},"arrays": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Array_Metadata:{"Projection":"BcRcoHandling","Entity":"BcRepairLineAction","Lu":"BcRepairLineAction"}]#]},"actions": {},"functions": {}},"Lookup_IsoCurrency": {"name": "Lookup_IsoCurrency","hasETag": false,"hasKeys": true,"luname": "Lookup_IsoCurrency","ludependencies": ["Lookup_IsoCurrency"],"keys": ["Id"],"attributes": {"Objgrants": {"datatype": "Text","size": 2000,"keygeneration": "Server","required": false,"editable": false,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Id": {"datatype": "Text","keygeneration": "Server","required": false,"editable": false,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Description": {"datatype": "Text","keygeneration": "Server","required": false,"editable": false,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Attribute_Metadata:{"Projection": "BcRcoHandling","Lu": null,"View": "ISO_CURRENCY"}]#]},"references": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Lu":null}]#]},"arrays": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Array_Metadata:{"Projection":"BcRcoHandling","Entity":"Lookup_IsoCurrency","Lu":null}]#]},"actions": {},"functions": {}},"Lookup_IsoUnit": {"name": "Lookup_IsoUnit","hasETag": false,"hasKeys": true,"luname": "Lookup_IsoUnit","ludependencies": ["Lookup_IsoUnit"],"keys": ["Id"],"attributes": {"Objgrants": {"datatype": "Text","size": 2000,"keygeneration": "Server","required": false,"edita');
   Dbms_Lob.Writeappend(clob_, 2450, 'ble": false,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Id": {"datatype": "Text","keygeneration": "Server","required": false,"editable": false,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Description": {"datatype": "Text","keygeneration": "Server","required": false,"editable": false,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Attribute_Metadata:{"Projection": "BcRcoHandling","Lu": null,"View": "ISO_UNIT"}]#]},"references": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Lu":null}]#]},"arrays": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Array_Metadata:{"Projection":"BcRcoHandling","Entity":"Lookup_IsoUnit","Lu":null}]#]},"actions": {},"functions": {}},"Lookup_IsoCountry": {"name": "Lookup_IsoCountry","hasETag": false,"hasKeys": true,"luname": "Lookup_IsoCountry","ludependencies": ["Lookup_IsoCountry"],"keys": ["Id"],"attributes": {"Objgrants": {"datatype": "Text","size": 2000,"keygeneration": "Server","required": false,"editable": false,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Id": {"datatype": "Text","keygeneration": "Server","required": false,"editable": false,"updatable": true,"insertable": true,"unbound": false,"multiselect": false},"Description": {"datatype": "Text","keygeneration": "Server","required": false,"editable": false,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}[#[jsoncallback:Custom_Object_Proxy_SYS.Client_Attribute_Metadata:{"Projection": "BcRcoHandling","Lu": null,"View": "ISO_COUNTRY"}]#]},"references": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Lu":null}]#]},"arrays": {[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Array_Metadata:{"Projection":"BcRcoHandling","Entity":"Lookup_IsoCountry","Lu":null}]#]},"actions": {},"functions": {}}[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Entity_Type_Metadata:{"Projection": "BcRcoHandling","Lu": ["Site","CustomerOrder","Lookup_IsoCountry","CustomerInfoAddress","ConditionCode","IsoCurrency","BcRepairCenterOrder","FndUser","BcRepairType","BcRepairLine","Lookup_IsoUnit","BcLogInfo","BcRepairLineAction","CustomerInfo","InventoryPart","Lookup_IsoCurrency"]}]#]},"structures": {"BcRepairCenterOrderCopyValues": {"name": "BcRepai');
   Dbms_Lob.Writeappend(clob_, 2450, 'rCenterOrderCopyValues","attributes": {"ModifiedSource": {"datatype": "Entity","subtype": "BcRepairCenterOrder","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}},"references": {},"arrays": {}},"BcRepairLineCopyValues": {"name": "BcRepairLineCopyValues","attributes": {"ModifiedSource": {"datatype": "Entity","subtype": "BcRepairLine","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}},"references": {},"arrays": {}},"BcLogInfoCopyValues": {"name": "BcLogInfoCopyValues","attributes": {"ModifiedSource": {"datatype": "Entity","subtype": "BcLogInfo","required": false,"editable": true,"updatable": true,"insertable": true,"unbound": false,"multiselect": false}},"references": {},"arrays": {}}},"actions": {"CreateNewCustOrder": {"name": "CreateNewCustOrder","ludependencies": [],"parameters": [{"Name": "CustomerId","DataType": "Text","Collection": false,"Nullable": true},{"Name": "RcoNo","DataType": "Number","Collection": false,"Nullable": true},{"Name": "Contract","DataType": "Text","Collection": false,"Nullable": true},{"Name": "Currency","DataType": "Text","Collection": false,"Nullable": true},{"Name": "DeliveryAddressId","DataType": "Text","Collection": false,"Nullable": true}]},"RefreshPage": {"name": "RefreshPage","ludependencies": ["BcRepairCenterOrder","BcRepairLine"],"returnType": {"dataType": "Text","collection": false}}[#[jsoncallback:Custom_Object_Proxy_Sys.Client_Action_Metadata:{"Projection": "BcRcoHandling"}]#]},"functions": {"GetDefInfologPart": {"name": "GetDefInfologPart","ludependencies": [],"parameters": [{"Name": "RcoLine","DataType": "Number","Collection": false,"Nullable": true},{"Name": "RcoNo","DataType": "Number","Collection": false,"Nullable": true}]},"GetDefInfologPartSite": {"name": "GetDefInfologPartSite","ludependencies": [],"parameters": [{"Name": "RcoLine","DataType": "Number","Collection": false,"Nullable": true},{"Name": "RcoNo","DataType": "Number","Collection": false,"Nullable": true}]},"GetDefaultAddress": {"name": "GetDefaultAddress","ludependencies": [],"parameters": [{"Name": "CustomerId","DataType": "Text","Collection": false,"Nullable": true},{"Name": "AddressType","DataType": "Text","Collection": false,"Nullable": true}]},"GetOwnerId": {"name": "GetOwnerId","ludependencies": [],"parameters": [{"Name": "RcoNo","DataType": "Number","Collection": false,"Nulla');
   Dbms_Lob.Writeappend(clob_, 282, 'ble": true}]}},"attachmentservices": {[#[callback:Object_Connection_Metadata_SYS.Enum_Entity_Services_:BcLogInfo,BcRepairCenterOrder,BcRepairLine,BcRepairLineAction,BcRepairType,ConditionCode,CustomerInfo,CustomerInfoAddress,CustomerOrder,FndUser,InventoryPart,IsoCurrency,Site]#]}}');
   Model_Design_SYS.Add_Model_Design_Template(header_, clob_);
   COMMIT;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   projection_ VARCHAR2(250) := 'BcRcoHandling';
   header_     Model_Design_SYS.Fnd_Model_Api_Doc_Rec;
   clob_       CLOB := to_clob(' ');
BEGIN
   header_ := Model_Design_SYS.Prepare_Doc_Load('projection', projection_, Model_Design_SYS.SERVER_METADATA, 'Put some useful description here ...');
   Dbms_Lob.trim(clob_, 0);
   Dbms_Lob.Writeappend(clob_, 2448, '{"projection": {"Name": "BcRcoHandling","Metadata": {"Version": "[#[generate:version]#]","Description": "Put some useful description here ...","Category": ["Users"]},"Container": {"EntitySets": [{"Name": "Reference_BcRepairLine","EntityType": "BcRepairLine"},{"Name": "Reference_BcLogInfo","EntityType": "BcLogInfo"},{"Name": "Reference_CustomerInfo","EntityType": "CustomerInfo"},{"Name": "Reference_CustomerInfoAddress","EntityType": "CustomerInfoAddress"},{"Name": "Lookup_IsoCurrency_EntitySet","EntityType": "Lookup_IsoCurrency_EntityType"},{"Name": "Reference_IsoCurrency","EntityType": "IsoCurrency"},{"Name": "Reference_Site","EntityType": "Site"},{"Name": "Reference_CustomerOrder","EntityType": "CustomerOrder"},{"Name": "Reference_FndUser","EntityType": "FndUser"},{"Name": "Reference_BcRepairType","EntityType": "BcRepairType"},{"Name": "Reference_ConditionCode","EntityType": "ConditionCode"},{"Name": "Reference_InventoryPart","EntityType": "InventoryPart"},{"Name": "Reference_BcRepairLineAction","EntityType": "BcRepairLineAction"},{"Name": "Lookup_IsoUnit_EntitySet","EntityType": "Lookup_IsoUnit_EntityType"},{"Name": "Lookup_IsoCountry_EntitySet","EntityType": "Lookup_IsoCountry_EntityType"},{"Name": "BcRepairCenterOrderSet","EntityType": "BcRepairCenterOrder"},{"Name": "BcRepairLineSet","EntityType": "BcRepairLine"},{"Name": "BcLogInfoSet","EntityType": "BcLogInfo"}],"Singletons": [],"Actions": [{"Name": "CreateNewCustOrder","Parameters": [{"Name": "CustomerId","DataType": "Text","Collection": false,"Nullable": true},{"Name": "RcoNo","DataType": "Number","Collection": false,"Nullable": true},{"Name": "Contract","DataType": "Text","Collection": false,"Nullable": true},{"Name": "Currency","DataType": "Text","Collection": false,"Nullable": true},{"Name": "DeliveryAddressId","DataType": "Text","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Do_Create_New_Cust_Order(:CustomerId, :RcoNo, :Contract, :Currency, :DeliveryAddressId, unbound## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Empty_Art","Bind": [{"Kind": "Parameter","Name": "CustomerId","ImplementationType": "VARCHAR2"},{"Kind": "Parameter","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Parameter","Name": "Contract","ImplementationType": "VARCHAR2"},{"Kind": "Parameter","Name": "Currency","ImplementationType": "VARCHAR2"},{"Kind": "Parameter","Name": "DeliveryAddressId","ImplementationType": "VA');
   Dbms_Lob.Writeappend(clob_, 2440, 'RCHAR2"}]}}},{"Name": "RefreshPage","DataType": "Text","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Do_Refresh_Page(unbound## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Text_Art","Bind": []}}}],"Functions": [{"Name": "GetDefInfologPart","DataType": "Text","Collection": false,"Parameters": [{"Name": "RcoLine","DataType": "Number","Collection": false,"Nullable": true},{"Name": "RcoNo","DataType": "Number","Collection": false,"Nullable": true}],"Execute": {"SQL": {"From": "TABLE(Bc_Rco_Handling_SVC.Rd_Get_Def_Infolog_Part(:RcoLine, :RcoNo, unbound## => ''''))","Bind": [{"Kind": "Parameter","Name": "RcoLine","ImplementationType": "NUMBER"},{"Kind": "Parameter","Name": "RcoNo","ImplementationType": "NUMBER"}]}}},{"Name": "GetDefInfologPartSite","DataType": "Text","Collection": false,"Parameters": [{"Name": "RcoLine","DataType": "Number","Collection": false,"Nullable": true},{"Name": "RcoNo","DataType": "Number","Collection": false,"Nullable": true}],"Execute": {"SQL": {"From": "TABLE(Bc_Rco_Handling_SVC.Rd_Get_Def_Infolog_Part_Site(:RcoLine, :RcoNo, unbound## => ''''))","Bind": [{"Kind": "Parameter","Name": "RcoLine","ImplementationType": "NUMBER"},{"Kind": "Parameter","Name": "RcoNo","ImplementationType": "NUMBER"}]}}},{"Name": "GetDefaultAddress","DataType": "Text","Collection": false,"Parameters": [{"Name": "CustomerId","DataType": "Text","Collection": false,"Nullable": true},{"Name": "AddressType","DataType": "Text","Collection": false,"Nullable": true}],"Execute": {"SQL": {"From": "TABLE(Bc_Rco_Handling_SVC.Rd_Get_Default_Address(:CustomerId, :AddressType, unbound## => ''''))","Bind": [{"Kind": "Parameter","Name": "CustomerId","ImplementationType": "VARCHAR2"},{"Kind": "Parameter","Name": "AddressType","ImplementationType": "VARCHAR2"}]}}},{"Name": "GetOwnerId","DataType": "Text","Collection": false,"Parameters": [{"Name": "RcoNo","DataType": "Number","Collection": false,"Nullable": true}],"Execute": {"SQL": {"From": "TABLE(Bc_Rco_Handling_SVC.Rd_Get_Owner_Id(:RcoNo, unbound## => ''''))","Bind": [{"Kind": "Parameter","Name": "RcoNo","ImplementationType": "NUMBER"}]}}}]},"Enumerations": [{"Name": "BcLineActionType","Values": [{"Identifier": "OnHold","DbValue": "ON_HOLD"},{"Identifier": "Released","DbValue": "RELEASED"}]},{"Name": "PutawayZoneRefillOption","Values": [{"Identifier": "NoRefill","DbValue": "NO_REFILL"},{"Identifier": "FromPutawayZones","DbValue');
   Dbms_Lob.Writeappend(clob_, 2450, '": "FROM_PUTAWAY_ZONES"},{"Identifier": "FromAllLocations","DbValue": "FROM_ALL_LOCATIONS"}]},{"Name": "InvPartFrequencyClass","Values": [{"Identifier": "VerySlowMover","DbValue": "VERY SLOW MOVER"},{"Identifier": "SlowMover","DbValue": "SLOW MOVER"},{"Identifier": "MediumMover","DbValue": "MEDIUM MOVER"},{"Identifier": "FastMover","DbValue": "FAST MOVER"}]},{"Name": "InvPartLifecycleStage","Values": [{"Identifier": "Development","DbValue": "DEVELOPMENT"},{"Identifier": "Introduction","DbValue": "INTRODUCTION"},{"Identifier": "Mature","DbValue": "MATURE"},{"Identifier": "Decline","DbValue": "DECLINE"},{"Identifier": "Expired","DbValue": "EXPIRED"}]},{"Name": "DopNetting","Values": [{"Identifier": "Netting","DbValue": "NETT"},{"Identifier": "NoNetting","DbValue": "NONET"},{"Identifier": "AutoNetting","DbValue": "AUTONETT"}]},{"Name": "CapabilityCheckAllocate","Values": [{"Identifier": "ReserveAndAllocate","DbValue": "RESERVE AND ALLOCATE"},{"Identifier": "AllocateOnly","DbValue": "ALLOCATE ONLY"},{"Identifier": "NeitherReserveNorAlloc","DbValue": "NEITHER RESERVE NOR ALLOCATE"},{"Identifier": "NoAutomatCapabilityCheck","DbValue": "NO AUTOMATIC CAPABILITY CHECK"}]},{"Name": "CapabilityCheckAllocateSubset1","Values": [{"Identifier": "ReserveAndAllocate","DbValue": "RESERVE AND ALLOCATE"},{"Identifier": "AllocateOnly","DbValue": "ALLOCATE ONLY"},{"Identifier": "NeitherReserveNorAlloc","DbValue": "NEITHER RESERVE NOR ALLOCATE"}]},{"Name": "CapabilityCheckAllocateSubset2","Values": [{"Identifier": "AllocateOnly","DbValue": "ALLOCATE ONLY"},{"Identifier": "NeitherReserveNorAlloc","DbValue": "NEITHER RESERVE NOR ALLOCATE"}]},{"Name": "ExtServiceCostMethod","Values": [{"Identifier": "IncludeServiceCost","DbValue": "INCLUDE SERVICE COST"},{"Identifier": "ExcludeServiceCost","DbValue": "EXCLUDE SERVICE COST"}]},{"Name": "InventoryPartCostLevel","Values": [{"Identifier": "CostPerPart","DbValue": "COST PER PART"},{"Identifier": "CostPerConfiguration","DbValue": "COST PER CONFIGURATION"},{"Identifier": "CostPerCondition","DbValue": "COST PER CONDITION"},{"Identifier": "CostPerLotBatch","DbValue": "COST PER LOT BATCH"},{"Identifier": "CostPerSerial","DbValue": "COST PER SERIAL"}]},{"Name": "InvoiceConsideration","Values": [{"Identifier": "IgnoreInvoicePrice","DbValue": "IGNORE INVOICE PRICE"},{"Identifier": "PeriodicWeightedAverage","DbValue": "PERIODIC WEIGHTED AVERAGE"},{"Identifier": "TransactionBased","DbValue": "TRAN');
   Dbms_Lob.Writeappend(clob_, 2450, 'SACTION BASED"}]},{"Name": "NegativeOnHand","Values": [{"Identifier": "NegativeOnHandAllowed","DbValue": "NEG ONHAND OK"},{"Identifier": "NegativOnHandNotAllowed","DbValue": "NEG ONHAND NOT OK"}]},{"Name": "InventoryValueMethod","Values": [{"Identifier": "WeightedAverage","DbValue": "AV"},{"Identifier": "StandardCost","DbValue": "ST"},{"Identifier": "FirstInFirstOut","DbValue": "FIFO"},{"Identifier": "LastInFirstOut","DbValue": "LIFO"}]},{"Name": "DopConnection","Values": [{"Identifier": "AutomaticDOP","DbValue": "AUT"},{"Identifier": "ManualDOP","DbValue": "MAN"},{"Identifier": "ReleaseDOP","DbValue": "REL"}]},{"Name": "InventoryPartManagement","Values": [{"Identifier": "VendorManagedInventory","DbValue": "VENDOR MANAGED INVENTORY"},{"Identifier": "SystemManagedInventory","DbValue": "SYSTEM MANAGED INVENTORY"}]},{"Name": "InvPartForecastConsum","Values": [{"Identifier": "OnlineConsumption","DbValue": "FORECAST"},{"Identifier": "NoOnlineConsumption","DbValue": "NOFORECAST"}]},{"Name": "InventoryPartShortage","Values": [{"Identifier": "ShortageNotation","DbValue": "Y"},{"Identifier": "NoShortageNotation","DbValue": "N"}]},{"Name": "InventoryPartAvailStat","Values": [{"Identifier": "Changed","DbValue": "CHANGED"},{"Identifier": "Unchanged","DbValue": "UNCHANGED"}]},{"Name": "InventoryPartZeroCost","Values": [{"Identifier": "ZeroCostAllowed","DbValue": "Y"},{"Identifier": "ZeroCostForbidden","DbValue": "N"},{"Identifier": "ZeroCostOnly","DbValue": "O"}]},{"Name": "InventoryPartType","Values": [{"Identifier": "Manufactured","DbValue": "1"},{"Identifier": "ManufacturedRecipe","DbValue": "2"},{"Identifier": "PurchasedRaw","DbValue": "3"},{"Identifier": "Purchased","DbValue": "4"},{"Identifier": "Expense","DbValue": "6"}]},{"Name": "MaterialRequisSupply","Values": [{"Identifier": "InventoryOrder","DbValue": "IO"},{"Identifier": "PurchaseOrder","DbValue": "PO"},{"Identifier": "ProjectInventory","DbValue": "PI"}]},{"Name": "MaterialRequisSupplySubset1","Values": [{"Identifier": "InventoryOrder","DbValue": "IO"},{"Identifier": "PurchaseOrder","DbValue": "PO"}]},{"Name": "InventoryPartOnhAnalys","Values": [{"Identifier": "MakeAvailabilityCheck","DbValue": "Y"},{"Identifier": "NoAvailabilityCheck","DbValue": "N"}]},{"Name": "CustOrdReservationType","Values": [{"Identifier": "PriorityReservation","DbValue": "Y"},{"Identifier": "NormalReservation","DbValue": "N"}]},{"Name": "InvPartLeadTimeCode","Values": [{"Identifier":');
   Dbms_Lob.Writeappend(clob_, 2450, ' "Manufactured","DbValue": "M"},{"Identifier": "Purchased","DbValue": "P"}]},{"Name": "InventoryPartCountType","Values": [{"Identifier": "CyclicCounting","DbValue": "Y"},{"Identifier": "NotCyclicCounting","DbValue": "N"}]},{"Name": "ConditionCodeType","Values": [{"Identifier": "DefaultConditionCode","DbValue": "DEF_COND_CODE"},{"Identifier": "NotDefaultConditionCode","DbValue": "NOT_DEF_COND_CODE"}]},{"Name": "FndUserType","Values": [{"Identifier": "SystemUser","DbValue": "SYSTEM_USER"},{"Identifier": "ServiceUser","DbValue": "SERVICE_USER"},{"Identifier": "EndUser","DbValue": "END_USER"}]},{"Name": "FndUserTypeUsersSubset","Values": [{"Identifier": "ServiceUser","DbValue": "SERVICE_USER"},{"Identifier": "EndUser","DbValue": "END_USER"}]},{"Name": "CustomerOrderBlockType","Values": [{"Identifier": "CreditBlocked","DbValue": "CREDIT_BLOCKED"},{"Identifier": "AdvPayBlocked","DbValue": "ADV_PAY_BLOCKED"},{"Identifier": "ManualBlocked","DbValue": "MANUAL_BLOCKED"},{"Identifier": "NotBlocked","DbValue": "NOT_BLOCKED"}]},{"Name": "TaxPayingParty","Values": [{"Identifier": "NoTax","DbValue": "NO_TAX"},{"Identifier": "Customer","DbValue": "CUSTOMER"},{"Identifier": "Company","DbValue": "COMPANY"}]},{"Name": "DeliveryNoteOptions","Values": [{"Identifier": "ShipmentCustomerOrder","DbValue": "SHIPMENT_CUSTOMER_ORDER"},{"Identifier": "Shipment","DbValue": "SHIPMENT"},{"Identifier": "CustomerOrder","DbValue": "CUSTOMER_ORDER"},{"Identifier": "None","DbValue": "NONE"}]},{"Name": "PickInventoryType","Values": [{"Identifier": "ShipmentInventory","DbValue": "SHIPINV"},{"Identifier": "OrdinaryInventory","DbValue": "ORDINV"}]},{"Name": "ShipmentCreation","Values": [{"Identifier": "NoAutomatic","DbValue": "NO_AUTOMATIC"},{"Identifier": "OrderRelease","DbValue": "ORDER_RELEASE"},{"Identifier": "PickListCreation","DbValue": "PICK_LIST_CREATION"},{"Identifier": "ReportReturn","DbValue": "REPORT_RETURN"}]},{"Name": "ShipmentCreationShipmentOrder","Values": [{"Identifier": "NoAutomatic","DbValue": "NO_AUTOMATIC"},{"Identifier": "OrderRelease","DbValue": "ORDER_RELEASE"}]},{"Name": "ShipmentCreationCustomerOrder","Values": [{"Identifier": "NoAutomatic","DbValue": "NO_AUTOMATIC"},{"Identifier": "OrderRelease","DbValue": "ORDER_RELEASE"},{"Identifier": "PickListCreation","DbValue": "PICK_LIST_CREATION"}]},{"Name": "ShipmentCreationReceiptReturn","Values": [{"Identifier": "NoAutomatic","DbValue": "NO_AUTOMATIC"},{"Identifier": "ReportR');
   Dbms_Lob.Writeappend(clob_, 2450, 'eturn","DbValue": "REPORT_RETURN"}]},{"Name": "CustomerBackorderOption","Values": [{"Identifier": "NoPartialDeliveriesAllow","DbValue": "NO PARTIAL DELIVERIES ALLOWED"},{"Identifier": "IncompleteLinesNotAllow","DbValue": "INCOMPLETE LINES NOT ALLOWED"},{"Identifier": "IncompletePkgsNotAllowed","DbValue": "INCOMPLETE PACKAGES NOT ALLOWED"},{"Identifier": "AllowIncompleteLinesPkgs","DbValue": "ALLOW INCOMPLETE LINES AND PACKAGES"}]},{"Name": "IntrastatExempt","Values": [{"Identifier": "Include","DbValue": "INCLUDE"},{"Identifier": "Exempt","DbValue": "EXEMPT"}]},{"Name": "ScheduleAgreementOrder","Values": [{"Identifier": "SchedulingOrder","DbValue": "SCHEDULE"},{"Identifier": "NotSchedulingOrder","DbValue": "NOT SCHEDULE"}]},{"Name": "ServiceManagementConnect","Values": [{"Identifier": "Connected","DbValue": "CONNECTED"},{"Identifier": "NotConnected","DbValue": "NOT CONNECTED"}]},{"Name": "StagedBillingType","Values": [{"Identifier": "StagedBilling","DbValue": "STAGED BILLING"},{"Identifier": "NotStagedBilling","DbValue": "NOT STAGED BILLING"}]},{"Name": "OrderDeliveryType","Values": [{"Identifier": "TransitDelivery","DbValue": "TRANSIT"},{"Identifier": "DirectDelivery","DbValue": "DIRECT"},{"Identifier": "InternalTransitDelivery","DbValue": "INTTRANSIT"},{"Identifier": "InternalDirectDelivery","DbValue": "INTDIRECT"},{"Identifier": "InterSiteDelivery","DbValue": "INTER-SITE"}]},{"Name": "PrintPickList","Values": [{"Identifier": "PrintPicklist","DbValue": "Y"},{"Identifier": "NoPicklist","DbValue": "N"}]},{"Name": "PrintPackList","Values": [{"Identifier": "PrintDeliveryNote","DbValue": "Y"},{"Identifier": "NoDeliveryNote","DbValue": "N"}]},{"Name": "PrintOrderConfirmation","Values": [{"Identifier": "PrintOrderConf","DbValue": "Y"},{"Identifier": "NoOrderConf","DbValue": "N"}]},{"Name": "OrderConfirmationPrinted","Values": [{"Identifier": "Printed","DbValue": "Y"},{"Identifier": "NotPrinted","DbValue": "N"}]},{"Name": "GenYesNo","Values": [{"Identifier": "Yes","DbValue": "Y"},{"Identifier": "No","DbValue": "N"}]},{"Name": "OutputMediaType","Values": [{"Identifier": "Printout","DbValue": "1"},{"Identifier": "Email","DbValue": "2"},{"Identifier": "MailToFax","DbValue": "3"},{"Identifier": "Xml","DbValue": "4"}]},{"Name": "CustomerCategory","Values": [{"Identifier": "Customer","DbValue": "CUSTOMER"},{"Identifier": "Prospect","DbValue": "PROSPECT"},{"Identifier": "EndCustomer","DbValue": "END_CUSTOMER"}]},{"Name":');
   Dbms_Lob.Writeappend(clob_, 2450, ' "CustomerCategoryProspect","Values": [{"Identifier": "Customer","DbValue": "CUSTOMER"},{"Identifier": "Prospect","DbValue": "PROSPECT"}]},{"Name": "CustomerCategoryEndCustomer","Values": [{"Identifier": "Customer","DbValue": "CUSTOMER"},{"Identifier": "EndCustomer","DbValue": "END_CUSTOMER"}]},{"Name": "IdentifierRefValidation","Values": [{"Identifier": "None","DbValue": "NONE"},{"Identifier": "Katakana","DbValue": "KATAKANA"}]},{"Name": "PartyType","Values": [{"Identifier": "Company","DbValue": "COMPANY"},{"Identifier": "Customer","DbValue": "CUSTOMER"},{"Identifier": "Supplier","DbValue": "SUPPLIER"},{"Identifier": "Person","DbValue": "PERSON"},{"Identifier": "Manufacturer","DbValue": "MANUFACTURER"},{"Identifier": "Owner","DbValue": "OWNER"},{"Identifier": "ForwardingAgent","DbValue": "FORWARDER"},{"Identifier": "Employee","DbValue": "EMPLOYEE"}]},{"Name": "FndBoolean","Values": [{"Identifier": "False","DbValue": "FALSE"},{"Identifier": "True","DbValue": "TRUE"}]},{"Name": "BCBillOrWar","Values": [{"Identifier": "Billable","DbValue": "BILLABLE"},{"Identifier": "Warranty","DbValue": "WARRANTY"}]},{"Name": "BcOwnershipCode","Values": [{"Identifier": "CustomerOwned","DbValue": "CUSTOMER_OWNED"},{"Identifier": "CompanyOwned","DbValue": "COMPANY_OWNED"}]},{"Name": "BcRepairCenterOrderState","Values": [{"Identifier": "Planned","DbValue": "Planned"},{"Identifier": "Cancelled","DbValue": "Cancelled"},{"Identifier": "Released","DbValue": "Released"},{"Identifier": "Started","DbValue": "Started"},{"Identifier": "Completed","DbValue": "Completed"},{"Identifier": "Closed","DbValue": "Closed"}]},{"Name": "BcRepairLineState","Values": [{"Identifier": "New","DbValue": "New"},{"Identifier": "Received","DbValue": "Received"},{"Identifier": "Cancelled","DbValue": "Cancelled"},{"Identifier": "Processed","DbValue": "Processed"},{"Identifier": "RepairStarted","DbValue": "RepairStarted"},{"Identifier": "RepairCompleted","DbValue": "RepairCompleted"},{"Identifier": "Shipped","DbValue": "Shipped"}]}[#[jsoncallback:Lookup_Enum_Metadata_SYS.Server_Enumeration_Metadata:Iso_Currency_API]#],{"Name": "CustomerOrderState","Values": [{"Identifier": "Planned","DbValue": "Planned"},{"Identifier": "Blocked","DbValue": "Blocked"},{"Identifier": "Delivered","DbValue": "Delivered"},{"Identifier": "Invoiced","DbValue": "Invoiced"},{"Identifier": "Released","DbValue": "Released"},{"Identifier": "Reserved","DbValue": "Reserved"},{"Identifier":');
   Dbms_Lob.Writeappend(clob_, 2442, ' "Picked","DbValue": "Picked"},{"Identifier": "PartiallyDelivered","DbValue": "PartiallyDelivered"},{"Identifier": "Cancelled","DbValue": "Cancelled"}]}[#[jsoncallback:Lookup_Enum_Metadata_SYS.Server_Enumeration_Metadata:Iso_Language_API]#][#[jsoncallback:Lookup_Enum_Metadata_SYS.Server_Enumeration_Metadata:Iso_Country_API]#]],"Structures": [{"Name": "BcRepairCenterOrderCopyValues","PLSQLRecordName": "BC_RCO_HANDLING_SVC.COPY_VALUES_REC","Attributes": [{"Name": "ModifiedSource","DataType": "Entity","SubType": "BcRepairCenterOrder","Collection": false,"Nullable": true,"AttrName": "MODIFIED_SOURCE","Execute": {"SQL": {"ImplementationType": "VARCHAR2"}}}]},{"Name": "BcRepairLineCopyValues","PLSQLRecordName": "BC_RCO_HANDLING_SVC.COPY_VALUES_REC","Attributes": [{"Name": "ModifiedSource","DataType": "Entity","SubType": "BcRepairLine","Collection": false,"Nullable": true,"AttrName": "MODIFIED_SOURCE","Execute": {"SQL": {"ImplementationType": "VARCHAR2"}}}]},{"Name": "BcLogInfoCopyValues","PLSQLRecordName": "BC_RCO_HANDLING_SVC.COPY_VALUES_REC","Attributes": [{"Name": "ModifiedSource","DataType": "Entity","SubType": "BcLogInfo","Collection": false,"Nullable": true,"AttrName": "MODIFIED_SOURCE","Execute": {"SQL": {"ImplementationType": "VARCHAR2"}}}]},{"Name": "StreamInfoRec","PLSQLRecordName": "BC_RCO_HANDLING_SVC.STREAM_INFO_REC","Attributes": [{"Name": "FileName","DataType": "Text"},{"Name": "MimeType","DataType": "Text"}]},{"Name": "EntityDec","PLSQLRecordName": "BC_RCO_HANDLING_SVC.ENTITY_DEC","Attributes": [{"Name": "ETag","DataType": "Text"},{"Name": "Info","DataType": "Text"},{"Name": "Attr","DataType": "Text"}]}],"Entities": [{"Name": "BcRepairCenterOrder","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairCenterOrder","View":"BC_REPAIR_CENTER_ORDER"}]#]"}},"Keys": ["RcoNo"],"KeysWhere": "(rco_no = :RcoNo)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairCenterOrder''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": tru');
   Dbms_Lob.Writeappend(clob_, 2446, 'e,"Execute": {"SQL": {"Select": "''RCO_NO=''||rco_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objstate","DataType": "Enumeration","SubType": "BcRepairCenterOrderState","Collection": false,"Size": 50,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJSTATE","Keygeneration": "Server","Execute": {"SQL": {"Select": "objstate","OrderBy": "state","ImplementationType": "VARCHAR2","Alias": "objstate"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "RcoNo","DataType": "Number","Collection": false,"Nullable": true,"Updatable": false,"AttrName": "RCO_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "rco_no","ImplementationType": "NUMBER","Alias": "rco_no"}}},{"Name": "CustomerId","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "CUSTOMER_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_id","ImplementationType": "VARCHAR2","Alias": "customer_id"}},"format": "uppercase"},{"Name": "CustomerOrderNo","DataType": "Text","Collection": false,"Size": 12,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMER_ORDER_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_order_no","ImplementationType": "VARCHAR2","Alias": "customer_order_no"}},"format": "uppercase"},{"Name": "DocAddressId","DataType": "Text","Collection": false,"Size": 50,"Nullable": false,"Updatable": true,"AttrName": "DOC_ADDRESS_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "doc_address_id","ImplementationType": "VARCHAR2","Alias": "doc_address_id"}},"format": "uppercase"},{"Name": "DeliveryAddressId","DataType": "Text","Collection": false,"Size": 50,"Nullable": false,"Updatable": true,"AttrName": "DELIVERY_ADDRESS_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "delivery_address_id","ImplementationType": "VARCHAR2","Alias": "delivery_address_id"}},"format": "uppercase"},{"Name": "Contract","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": true,"AttrName": "CONTRACT","Keygeneration": "User","Execute": {"SQL": {"Select": "contract","ImplementationType": "VARCHAR2","Alias": "contract"}},"format": "uppercase"},{"Name": "Currency","DataType');
   Dbms_Lob.Writeappend(clob_, 2444, '": "Text","Collection": false,"Size": 3,"Nullable": false,"Updatable": true,"AttrName": "CURRENCY","Keygeneration": "User","Execute": {"SQL": {"Select": "currency","ImplementationType": "VARCHAR2","Alias": "currency"}},"format": "uppercase"},{"Name": "DateCreated","DataType": "Date","Collection": false,"Nullable": false,"Updatable": false,"AttrName": "DATE_CREATED","Keygeneration": "User","Execute": {"SQL": {"Select": "date_created","ImplementationType": "DATE","Alias": "date_created"}}},{"Name": "ReportedBy","DataType": "Text","Collection": false,"Size": 30,"Nullable": false,"Updatable": false,"AttrName": "REPORTED_BY","Keygeneration": "User","Execute": {"SQL": {"Select": "reported_by","ImplementationType": "VARCHAR2","Alias": "reported_by"}},"format": "uppercase"}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairCenterOrder","Type":"Entity","Name":"BcRepairCenterOrder","View":"BC_REPAIR_CENTER_ORDER"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairCenterOrder''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''RCO_NO=''||rco_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [{"Name": "RepairLineArray","Collection": true,"Target": "BcRepairLine","Keys": [{"ThisAttribute": "RcoNo","TargetAttribute": "RcoNo"}],"ParentAttributes": ["RcoNo"],"ChildAttributes": ["RcoNo"],"Where": "(:parent.rco_no = :child.rco_no)"},{"Name": "InfoLogArray","Collection": true,"Target": "BcLogInfo","Keys": [{"ThisAttribute": "RcoNo","TargetAttribute": "RcoNo"}],"ParentAttributes": ["RcoNo"],"ChildAttributes": ["RcoNo"],"Where": "(:parent.rco_no = :child.rco_no)"},{"Name": "CustomerRef","Collection": false,"Target": "CustomerInfo","Keys": [{"ThisAttribute": "CustomerId","TargetAttribute": "CustomerId"}],"ParentAttributes": ["CustomerId"],"ChildAttributes": ["CustomerId"],"Where": "(:parent.customer_id = :child.customer_id)"},{"Name": "DocAddressRef","Collection": false,"Target": "CustomerInfoAddress","Keys": [{"ThisAttribute": "CustomerId","TargetAttribute": "CustomerId"},{"ThisAttribute": "DocAddressId","TargetAttribute": "AddressId"}],"ParentAttributes": ["CustomerId","DocAddressId"],"ChildAttributes": ["Cu');
   Dbms_Lob.Writeappend(clob_, 2448, 'stomerId","AddressId"],"Where": "(:parent.customer_id = :child.customer_id AND :parent.doc_address_id = :child.address_id)"},{"Name": "DelAddressRef","Collection": false,"Target": "CustomerInfoAddress","Keys": [{"ThisAttribute": "CustomerId","TargetAttribute": "CustomerId"},{"ThisAttribute": "DeliveryAddressId","TargetAttribute": "AddressId"}],"ParentAttributes": ["CustomerId","DeliveryAddressId"],"ChildAttributes": ["CustomerId","AddressId"],"Where": "(:parent.customer_id = :child.customer_id AND :parent.delivery_address_id = :child.address_id)"},{"Name": "CurrencyRef","Collection": false,"Target": "IsoCurrency","Keys": [{"ThisAttribute": "Currency","TargetAttribute": "CurrencyCode"}],"ParentAttributes": ["Currency"],"ChildAttributes": ["CurrencyCode"],"Where": "(:parent.currency = :child.currency_code)"},{"Name": "ContractRef","Collection": false,"Target": "Site","Keys": [{"ThisAttribute": "Contract","TargetAttribute": "Contract"}],"ParentAttributes": ["Contract"],"ChildAttributes": ["Contract"],"Where": "(:parent.contract = :child.contract)"},{"Name": "CustomerOrderRef","Collection": false,"Target": "CustomerOrder","Keys": [{"ThisAttribute": "CustomerOrderNo","TargetAttribute": "OrderNo"}],"ParentAttributes": ["CustomerOrderNo"],"ChildAttributes": ["OrderNo"],"Where": "(:parent.customer_order_no = :child.order_no)"},{"Name": "FndUserRef","Collection": false,"Target": "FndUser","Keys": [{"ThisAttribute": "ReportedBy","TargetAttribute": "Identity"}],"ParentAttributes": ["ReportedBy"],"ChildAttributes": ["Identity"],"Where": "(:parent.reported_by = :child.identity)"}[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"BcRepairCenterOrder","Lu":"BcRepairCenterOrder","View":"BC_REPAIR_CENTER_ORDER"}]#]],"CRUD": [{"Name": "Default","DataType": "Entity","SubType": "BcRepairCenterOrder","Collection": false,"CollectionBound": true,"Parameters": [],"Execute": {"SQL": {"From": "TABLE(Bc_Rco_Handling_SVC.CRUD_Default(:Attr, bc_repair_center_order## => ''''))","Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"}]}}},{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcRepairCenterOrder","Collection": false,"CollectionBound": true,"Parameters": [{"Name": "CopyValues","DataType": "Structure","SubType": "BcRepairCenterOrderCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Retur');
   Dbms_Lob.Writeappend(clob_, 2440, 'n_$ := Bc_Rco_Handling_SVC.CRUD_Default_Copy(:CopyValues, bc_repair_center_order## => '''');","END;"],"Bind": [{"Kind": "Parameter","Name": "CopyValues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.COPY_VALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}},{"Name": "Create","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_Handling_SVC.CRUD_Create(:Attr, :Action$, bc_repair_center_order## => '''');","END;"],"Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Update","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_Handling_SVC.CRUD_Update(:ETag, :RcoNo, :Attr, :Action$, bc_repair_center_order## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Delete","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_Handling_SVC.CRUD_Delete(:ETag, :RcoNo, :Action$, bc_repair_center_order## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}}],"Actions": [{"Name": "Cancel","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Cancel(:ETag, :RcoNo, :Action$, bc_repair_center_order## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Release","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCa');
   Dbms_Lob.Writeappend(clob_, 2440, 'll": "Bc_Rco_Handling_SVC.Ev_Release(:ETag, :RcoNo, :Action$, bc_repair_center_order## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Start","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Start(:ETag, :RcoNo, :Action$, bc_repair_center_order## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Complete","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Complete(:ETag, :RcoNo, :Action$, bc_repair_center_order## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Close","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Close(:ETag, :RcoNo, :Action$, bc_repair_center_order## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Reopen","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Reopen(:ETag, :RcoNo, :Action$, bc_repair_center_order## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}}],"Functions": [{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcRepairCenterOrder","Collection": false,"CrudOperation": true,"Parameters": [{"Name": "CopyValues","Dat');
   Dbms_Lob.Writeappend(clob_, 2432, 'aType": "Structure","SubType": "BcRepairCenterOrderCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Return_$ := Bc_Rco_Handling_SVC.CRUD_Default_Copy(:ETag, :RcoNo, :CopyValues, bc_repair_center_order## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Parameter","Name": "CopyValues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.COPY_VALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}}]},{"Name": "BcRepairLine","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairLine","View":"BC_REPAIR_LINE"}]#]"}},"Keys": ["RcoNo","RepairLineNo"],"KeysWhere": "(rco_no = :RcoNo AND repair_line_no = :RepairLineNo)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairLine''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''RCO_NO=''||rco_no||''^''||''REPAIR_LINE_NO=''||repair_line_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objstate","DataType": "Enumeration","SubType": "BcRepairLineState","Collection": false,"Size": 50,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJSTATE","Keygeneration": "Server","Execute": {"SQL": {"Select": "objstate","OrderBy": "state","ImplementationType": "VARCHAR2","Alias": "objstate"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "RcoNo","DataType": "Number","Collection": false,"Nullable": false,"Updatable": false,"AttrName": "RCO_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "rco_no","Implementati');
   Dbms_Lob.Writeappend(clob_, 2450, 'onType": "NUMBER","Alias": "rco_no"}}},{"Name": "RepairLineNo","DataType": "Number","Collection": false,"Nullable": true,"Updatable": false,"AttrName": "REPAIR_LINE_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_line_no","ImplementationType": "NUMBER","Alias": "repair_line_no"}}},{"Name": "DateEntered","DataType": "Date","Collection": false,"Nullable": false,"Updatable": false,"AttrName": "DATE_ENTERED","Keygeneration": "User","Execute": {"SQL": {"Select": "date_entered","ImplementationType": "DATE","Alias": "date_entered"}}},{"Name": "RepairSite","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": true,"AttrName": "REPAIR_SITE","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_site","ImplementationType": "VARCHAR2","Alias": "repair_site"}},"format": "uppercase"},{"Name": "PartNumber","DataType": "Text","Collection": false,"Size": 25,"Nullable": false,"Updatable": true,"AttrName": "PART_NUMBER","Keygeneration": "User","Execute": {"SQL": {"Select": "part_number","ImplementationType": "VARCHAR2","Alias": "part_number"}},"format": "uppercase"},{"Name": "Quantity","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "QUANTITY","Keygeneration": "User","Execute": {"SQL": {"Select": "quantity","ImplementationType": "NUMBER","Alias": "quantity"}}},{"Name": "QuantityReceived","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "QUANTITY_RECEIVED","Keygeneration": "User","Execute": {"SQL": {"Select": "quantity_received","ImplementationType": "NUMBER","Alias": "quantity_received"}}},{"Name": "ConditionCode","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "CONDITION_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "condition_code","ImplementationType": "VARCHAR2","Alias": "condition_code"}},"format": "uppercase"},{"Name": "SerialNo","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "SERIAL_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "serial_no","ImplementationType": "VARCHAR2","Alias": "serial_no"}}},{"Name": "OwnershipCode","DataType": "Enumeration","SubType": "BcOwnershipCode","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "OWNERSHIP_CODE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "ownership_code_db","OrderBy": "ownership_c');
   Dbms_Lob.Writeappend(clob_, 2450, 'ode","ImplementationType": "VARCHAR2","Alias": "ownership_code"}}},{"Name": "OwnerId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": false,"AttrName": "OWNER_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "owner_id","ImplementationType": "VARCHAR2","Alias": "owner_id"}},"format": "uppercase"},{"Name": "RepairLineAction","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "REPAIR_LINE_ACTION","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_line_action","ImplementationType": "VARCHAR2","Alias": "repair_line_action"}}},{"Name": "RepairType","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "REPAIR_TYPE","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_type","ImplementationType": "VARCHAR2","Alias": "repair_type"}},"format": "uppercase"},{"Name": "CustomerFaultCode","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": false,"AttrName": "CUSTOMER_FAULT_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_fault_code","ImplementationType": "VARCHAR2","Alias": "customer_fault_code"}}},{"Name": "NoteText","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Updatable": true,"AttrName": "NOTE_TEXT","Keygeneration": "User","Execute": {"SQL": {"Select": "note_text","ImplementationType": "VARCHAR2","Alias": "note_text"}}},{"Name": "NoteId","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": false,"AttrName": "NOTE_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "note_id","ImplementationType": "VARCHAR2","Alias": "note_id"}}},{"Name": "BillableOrWarranty","DataType": "Enumeration","SubType": "BCBillOrWar","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "BILLABLE_OR_WARRANTY_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "billable_or_warranty_db","OrderBy": "billable_or_warranty","ImplementationType": "VARCHAR2","Alias": "billable_or_warranty"}}},{"Name": "ManufacturerWarranty","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": true,"Updatable": false,"AttrName": "MANUFACTURER_WARRANTY_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "manufacturer_warranty_db","ImplementationType": "VARCHAR2","Alias": "manufacturer_warranty"}}},{"Name": "RepairWarranty","Data');
   Dbms_Lob.Writeappend(clob_, 2440, 'Type": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": true,"Updatable": false,"AttrName": "REPAIR_WARRANTY_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_warranty_db","ImplementationType": "VARCHAR2","Alias": "repair_warranty"}}},{"Name": "WarrantyValidated","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": true,"Updatable": true,"AttrName": "WARRANTY_VALIDATED_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "warranty_validated_db","ImplementationType": "VARCHAR2","Alias": "warranty_validated"}}},{"Name": "ProcessingFee","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "PROCESSING_FEE","Keygeneration": "User","Execute": {"SQL": {"Select": "processing_fee","ImplementationType": "NUMBER","Alias": "processing_fee"}}},{"Name": "RequiredStart","DataType": "Date","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "REQUIRED_START","Keygeneration": "User","Execute": {"SQL": {"Select": "required_start","ImplementationType": "DATE","Alias": "required_start"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairLine","Type":"Entity","Name":"BcRepairLine","View":"BC_REPAIR_LINE"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairLine''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''RCO_NO=''||rco_no||''^''||''REPAIR_LINE_NO=''||repair_line_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [{"Name": "CustomerRef","Collection": false,"Target": "CustomerInfo","Keys": [{"ThisAttribute": "OwnerId","TargetAttribute": "CustomerId"}],"ParentAttributes": ["OwnerId"],"ChildAttributes": ["CustomerId"],"Where": "(:parent.owner_id = :child.customer_id)"},{"Name": "RepairTypeRef","Collection": false,"Target": "BcRepairType","Keys": [{"ThisAttribute": "RepairType","TargetAttribute": "RepairType"}],"ParentAttributes": ["RepairType"],"ChildAttributes": ["RepairType"],"Where": "(:parent.repair_type = :child.repair_type)"},{"Name": "ConditionCodeRef","Collection": false,"Target": "ConditionCode","Keys": [{"ThisAttribute": "Conditi');
   Dbms_Lob.Writeappend(clob_, 2446, 'onCode","TargetAttribute": "ConditionCode"}],"ParentAttributes": ["ConditionCode"],"ChildAttributes": ["ConditionCode"],"Where": "(:parent.condition_code = :child.condition_code)"},{"Name": "InventoryPartRef","Collection": false,"Target": "InventoryPart","Keys": [{"ThisAttribute": "RepairSite","TargetAttribute": "Contract"},{"ThisAttribute": "PartNumber","TargetAttribute": "PartNo"}],"ParentAttributes": ["RepairSite","PartNumber"],"ChildAttributes": ["Contract","PartNo"],"Where": "(:parent.repair_site = :child.contract AND :parent.part_number = :child.part_no)"},{"Name": "LineActionRef","Collection": false,"Target": "BcRepairLineAction","Keys": [{"ThisAttribute": "RepairLineAction","TargetAttribute": "RepairLineAction"}],"ParentAttributes": ["RepairLineAction"],"ChildAttributes": ["RepairLineAction"],"Where": "(:parent.repair_line_action = :child.repair_line_action)"},{"Name": "SiteRef","Collection": false,"Target": "Site","Keys": [{"ThisAttribute": "RepairSite","TargetAttribute": "Contract"}],"ParentAttributes": ["RepairSite"],"ChildAttributes": ["Contract"],"Where": "(:parent.repair_site = :child.contract)"},{"Name": "RepairLineActionRef","Collection": false,"Target": "BcRepairLine","Keys": [{"ThisAttribute": "RepairLineAction","TargetAttribute": "RepairLineAction"}],"ParentAttributes": ["RepairLineAction"],"ChildAttributes": ["RepairLineAction"],"Where": "(:parent.repair_line_action = :child.repair_line_action)"}[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"BcRepairLine","Lu":"BcRepairLine","View":"BC_REPAIR_LINE"}]#]],"CRUD": [{"Name": "Default","DataType": "Entity","SubType": "BcRepairLine","Collection": false,"CollectionBound": true,"Parameters": [],"Execute": {"SQL": {"From": "TABLE(Bc_Rco_Handling_SVC.CRUD_Default(:Attr, bc_repair_line## => ''''))","Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"}]}}},{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcRepairLine","Collection": false,"CollectionBound": true,"Parameters": [{"Name": "CopyValues","DataType": "Structure","SubType": "BcRepairLineCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Return_$ := Bc_Rco_Handling_SVC.CRUD_Default_Copy(:CopyValues, bc_repair_line## => '''');","END;"],"Bind": [{"Kind": "Parameter","Name": "CopyValues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLIN');
   Dbms_Lob.Writeappend(clob_, 2442, 'G_SVC.COPY_VALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}},{"Name": "Create","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_Handling_SVC.CRUD_Create(:Attr, :Action$, bc_repair_line## => '''');","END;"],"Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Update","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_Handling_SVC.CRUD_Update(:ETag, :RcoNo, :RepairLineNo, :Attr, :Action$, bc_repair_line## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "RepairLineNo","ImplementationType": "NUMBER"},{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Delete","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_Handling_SVC.CRUD_Delete(:ETag, :RcoNo, :RepairLineNo, :Action$, bc_repair_line## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "RepairLineNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}}],"Actions": [{"Name": "Cancel","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Cancel(:ETag, :RcoNo, :RepairLineNo, :Action$, bc_repair_line## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "RepairLineNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Receive","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Exe');
   Dbms_Lob.Writeappend(clob_, 2440, 'cute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Receive(:ETag, :RcoNo, :RepairLineNo, :Action$, bc_repair_line## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "RepairLineNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Process","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Process(:ETag, :RcoNo, :RepairLineNo, :Action$, bc_repair_line## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "RepairLineNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "RepairStart","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Repair_Start(:ETag, :RcoNo, :RepairLineNo, :Action$, bc_repair_line## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "RepairLineNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "RepairComplete","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Repair_Complete(:ETag, :RcoNo, :RepairLineNo, :Action$, bc_repair_line## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr","Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "RepairLineNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Ship","ReturnsInfo": true,"StateTransition": true,"Parameters": [],"Execute": {"PL-SQL": {"MethodCall": "Bc_Rco_Handling_SVC.Ev_Ship(:ETag, :RcoNo, :RepairLineNo, :Action$, bc_repair_line## => '''')","ReturnType": "Bc_Rco_Handling_SVC.Entity_Small_Drr"');
   Dbms_Lob.Writeappend(clob_, 2432, ',"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "RepairLineNo","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}}],"Functions": [{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcRepairLine","Collection": false,"CrudOperation": true,"Parameters": [{"Name": "CopyValues","DataType": "Structure","SubType": "BcRepairLineCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Return_$ := Bc_Rco_Handling_SVC.CRUD_Default_Copy(:ETag, :RcoNo, :RepairLineNo, :CopyValues, bc_repair_line## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "RepairLineNo","ImplementationType": "NUMBER"},{"Kind": "Parameter","Name": "CopyValues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.COPY_VALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}}]},{"Name": "BcLogInfo","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"BcLogInfo","View":"BC_LOG_INFO"}]#]"}},"Keys": ["RcoNo","LogInfoId"],"KeysWhere": "(rco_no = :RcoNo AND log_info_id = :LogInfoId)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcLogInfo''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''LOG_INFO_ID=''||log_info_id||''^''||''RCO_NO=''||rco_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "');
   Dbms_Lob.Writeappend(clob_, 2450, 'RcoNo","DataType": "Number","Collection": false,"Nullable": false,"Updatable": false,"AttrName": "RCO_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "rco_no","ImplementationType": "NUMBER","Alias": "rco_no"}}},{"Name": "LogInfoId","DataType": "Number","Collection": false,"Nullable": true,"Updatable": false,"AttrName": "LOG_INFO_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "log_info_id","ImplementationType": "NUMBER","Alias": "log_info_id"}}},{"Name": "RcoLine","DataType": "Number","Collection": false,"Nullable": false,"Updatable": false,"AttrName": "RCO_LINE","Keygeneration": "User","Execute": {"SQL": {"Select": "rco_line","ImplementationType": "NUMBER","Alias": "rco_line"}}},{"Name": "DateCreated","DataType": "Date","Collection": false,"Nullable": false,"Updatable": false,"AttrName": "DATE_CREATED","Keygeneration": "User","Execute": {"SQL": {"Select": "date_created","ImplementationType": "DATE","Alias": "date_created"}}},{"Name": "ReportedBy","DataType": "Text","Collection": false,"Size": 30,"Nullable": false,"Updatable": false,"AttrName": "REPORTED_BY","Keygeneration": "User","Execute": {"SQL": {"Select": "reported_by","ImplementationType": "VARCHAR2","Alias": "reported_by"}}},{"Name": "PartNumber","DataType": "Text","Collection": false,"Size": 25,"Nullable": false,"Updatable": false,"AttrName": "PART_NUMBER","Keygeneration": "User","Execute": {"SQL": {"Select": "part_number","ImplementationType": "VARCHAR2","Alias": "part_number"}},"format": "uppercase"},{"Name": "Contract","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": true,"AttrName": "CONTRACT","Keygeneration": "User","Execute": {"SQL": {"Select": "contract","ImplementationType": "VARCHAR2","Alias": "contract"}},"format": "uppercase"},{"Name": "Notes","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Updatable": true,"AttrName": "NOTES","Keygeneration": "User","Execute": {"SQL": {"Select": "notes","ImplementationType": "VARCHAR2","Alias": "notes"}}},{"Name": "EnterBy","DataType": "Text","Collection": false,"Size": 6,"Nullable": true,"Updatable": true,"AttrName": "ENTER_BY","Keygeneration": "User","Execute": {"SQL": {"Select": "enter_by","ImplementationType": "VARCHAR2","Alias": "enter_by"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"BcLogInfo","Type":"Entity","Name":"BcLogInfo","View":"BC_LOG_INFO"}]#]],"Computed": []');
   Dbms_Lob.Writeappend(clob_, 2436, ',"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcLogInfo''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''LOG_INFO_ID=''||log_info_id||''^''||''RCO_NO=''||rco_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [{"Name": "ReportedByRef","Collection": false,"Target": "FndUser","Keys": [{"ThisAttribute": "ReportedBy","TargetAttribute": "Identity"}],"ParentAttributes": ["ReportedBy"],"ChildAttributes": ["Identity"],"Where": "(:parent.reported_by = :child.identity)"},{"Name": "PartRef","Collection": false,"Target": "InventoryPart","Keys": [{"ThisAttribute": "Contract","TargetAttribute": "Contract"},{"ThisAttribute": "PartNumber","TargetAttribute": "PartNo"}],"ParentAttributes": ["Contract","PartNumber"],"ChildAttributes": ["Contract","PartNo"],"Where": "(:parent.contract = :child.contract AND :parent.part_number = :child.part_no)"},{"Name": "RCOLineRef","Collection": false,"Target": "BcRepairLine","Keys": [{"ThisAttribute": "RcoNo","TargetAttribute": "RcoNo"},{"ThisAttribute": "RcoLine","TargetAttribute": "RepairLineNo"}],"ParentAttributes": ["RcoNo","RcoLine"],"ChildAttributes": ["RcoNo","RepairLineNo"],"Where": "(:parent.rco_no = :child.rco_no AND :parent.rco_line = :child.repair_line_no)"}[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"BcLogInfo","Lu":"BcLogInfo","View":"BC_LOG_INFO"}]#]],"CRUD": [{"Name": "Default","DataType": "Entity","SubType": "BcLogInfo","Collection": false,"CollectionBound": true,"Parameters": [],"Execute": {"SQL": {"From": "TABLE(Bc_Rco_Handling_SVC.CRUD_Default(:Attr, bc_log_info## => ''''))","Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"}]}}},{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcLogInfo","Collection": false,"CollectionBound": true,"Parameters": [{"Name": "CopyValues","DataType": "Structure","SubType": "BcLogInfoCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Return_$ := Bc_Rco_Handling_SVC.CRUD_Default_Copy(:CopyValues, bc_log_info## => '''');","END;"],"Bind": [{"Kind": "Parameter","Name": "CopyValues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.COPY_V');
   Dbms_Lob.Writeappend(clob_, 2442, 'ALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}},{"Name": "Create","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_Handling_SVC.CRUD_Create(:Attr, :Action$, bc_log_info## => '''');","END;"],"Bind": [{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Update","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_Handling_SVC.CRUD_Update(:ETag, :RcoNo, :LogInfoId, :Attr, :Action$, bc_log_info## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "LogInfoId","ImplementationType": "NUMBER"},{"Kind": "ClientSYS.AttributeString","Name": "Attr","ImplementationType": "VARCHAR2"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}},{"Name": "Delete","DataType": "Structure","SubType": "EntityDec","Collection": false,"Parameters": [],"Execute": {"PL-SQL": {"Code": ["BEGIN","   :Return_$ := Bc_Rco_Handling_SVC.CRUD_Delete(:ETag, :RcoNo, :LogInfoId, :Action$, bc_log_info## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "LogInfoId","ImplementationType": "NUMBER"},{"Kind": "Action","Name": "Action$","ImplementationType": "VARCHAR2"}]}}}],"Actions": [],"Functions": [{"Name": "DefaultCopy","DataType": "Entity","SubType": "BcLogInfo","Collection": false,"CrudOperation": true,"Parameters": [{"Name": "CopyValues","DataType": "Structure","SubType": "BcLogInfoCopyValues","Collection": false,"Nullable": true}],"Execute": {"PL-SQL": {"Code": ["BEGIN"," :Return_$ := Bc_Rco_Handling_SVC.CRUD_Default_Copy(:ETag, :RcoNo, :LogInfoId, :CopyValues, bc_log_info## => '''');","END;"],"Bind": [{"Kind": "ETag","Name": "ETag","ImplementationType": "VARCHAR2"},{"Kind": "Attribute","Name": "RcoNo","ImplementationType": "NUMBER"},{"Kind": "Attribute","Name": "LogInfoId","ImplementationType": "NUMBER"},{"Kind": "Parameter","Name": "CopyVal');
   Dbms_Lob.Writeappend(clob_, 2438, 'ues","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.COPY_VALUES_REC"},{"Kind": "EntityDec$","Name": "Return_$","ImplementationType": "STRUCTURE","SubType": "BC_RCO_HANDLING_SVC.ENTITY_DEC","Direction": "OUT"}]}}}]},{"Name": "CustomerInfo","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"CustomerInfo","View":"CUSTOMER_INFO"}]#]"}},"Keys": ["CustomerId"],"KeysWhere": "(customer_id = :CustomerId)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''CustomerInfo''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CUSTOMER_ID=''||customer_id||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "CustomerId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": false,"AttrName": "CUSTOMER_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_id","ImplementationType": "VARCHAR2","Alias": "customer_id"}},"format": "uppercase"},{"Name": "Name","DataType": "Text","Collection": false,"Size": 100,"Nullable": false,"Updatable": true,"AttrName": "NAME","Keygeneration": "User","Execute": {"SQL": {"Select": "name","ImplementationType": "VARCHAR2","Alias": "name"}}},{"Name": "CreationDate","DataType": "Date","Collection": false,"Nullable": false,"Updatable": false,"AttrName": "CREATION_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "creation_date","ImplementationType": "DATE","Alias": "creation_date"}}},{"Name": "AssociationNo","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "ASSOCIATION_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "association_no","ImplementationType": "VARCHAR2","Alias": "association_');
   Dbms_Lob.Writeappend(clob_, 2442, 'no"}}},{"Name": "Party","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "PARTY","Keygeneration": "User","Execute": {"SQL": {"Select": "party","ImplementationType": "VARCHAR2","Alias": "party"}}},{"Name": "DefaultDomain","DataType": "Boolean","Collection": false,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "DEFAULT_DOMAIN","Keygeneration": "User","Execute": {"SQL": {"Select": "decode(default_domain,''TRUE'',''TRUE'',''FALSE'',''FALSE'',default_domain)","ImplementationType": "VARCHAR2","Alias": "default_domain"}}},{"Name": "DefaultLanguage","DataType": "Enumeration","SubType": "Lookup_IsoLanguage","Collection": false,"Size": 2,"Nullable": true,"Updatable": true,"AttrName": "DEFAULT_LANGUAGE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "default_language_db","OrderBy": "default_language","ImplementationType": "VARCHAR2","Alias": "default_language"}}},{"Name": "Country","DataType": "Enumeration","SubType": "Lookup_IsoCountry","Collection": false,"Size": 2,"Nullable": true,"Updatable": true,"AttrName": "COUNTRY_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "country_db","OrderBy": "country","ImplementationType": "VARCHAR2","Alias": "country"}}},{"Name": "PartyType","DataType": "Enumeration","SubType": "PartyType","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "PARTY_TYPE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "party_type_db","OrderBy": "party_type","ImplementationType": "VARCHAR2","Alias": "party_type"}}},{"Name": "CorporateForm","DataType": "Text","Collection": false,"Size": 8,"Nullable": true,"Updatable": true,"AttrName": "CORPORATE_FORM","Keygeneration": "User","Execute": {"SQL": {"Select": "corporate_form","ImplementationType": "VARCHAR2","Alias": "corporate_form"}}},{"Name": "IdentifierReference","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "IDENTIFIER_REFERENCE","Keygeneration": "User","Execute": {"SQL": {"Select": "identifier_reference","ImplementationType": "VARCHAR2","Alias": "identifier_reference"}}},{"Name": "IdentifierRefValidation","DataType": "Enumeration","SubType": "IdentifierRefValidation","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "IDENTIFIER_REF_VALIDATION_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "identifier_ref_validation_d');
   Dbms_Lob.Writeappend(clob_, 2450, 'b","OrderBy": "identifier_ref_validation","ImplementationType": "VARCHAR2","Alias": "identifier_ref_validation"}}},{"Name": "PictureId","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "PICTURE_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "picture_id","ImplementationType": "NUMBER","Alias": "picture_id"}}},{"Name": "OneTime","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "ONE_TIME_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "one_time_db","ImplementationType": "VARCHAR2","Alias": "one_time"}}},{"Name": "CustomerCategory","DataType": "Enumeration","SubType": "CustomerCategory","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "CUSTOMER_CATEGORY_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_category_db","OrderBy": "customer_category","ImplementationType": "VARCHAR2","Alias": "customer_category"}}},{"Name": "B2bCustomer","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "B2B_CUSTOMER_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "b2b_customer_db","ImplementationType": "VARCHAR2","Alias": "b2b_customer"}}},{"Name": "CustomerTaxUsageType","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMER_TAX_USAGE_TYPE","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_tax_usage_type","ImplementationType": "VARCHAR2","Alias": "customer_tax_usage_type"}},"format": "uppercase"},{"Name": "BusinessClassification","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "BUSINESS_CLASSIFICATION","Keygeneration": "User","Execute": {"SQL": {"Select": "business_classification","ImplementationType": "VARCHAR2","Alias": "business_classification"}}},{"Name": "DateOfRegistration","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "DATE_OF_REGISTRATION","Keygeneration": "User","Execute": {"SQL": {"Select": "date_of_registration","ImplementationType": "DATE","Alias": "date_of_registration"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"CustomerInfo","Type":"Entity","Name":"CustomerInfo","View":"CUSTOMER_INFO"}]#]],"Computed": [],"Ann');
   Dbms_Lob.Writeappend(clob_, 2428, 'otations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''CustomerInfo''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CUSTOMER_ID=''||customer_id||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"CustomerInfo","Lu":"CustomerInfo","View":"CUSTOMER_INFO"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "CustomerInfoAddress","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"CustomerInfoAddress","View":"CUSTOMER_INFO_ADDRESS"}]#]"}},"Keys": ["CustomerId","AddressId"],"KeysWhere": "(customer_id = :CustomerId AND address_id = :AddressId)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''CustomerInfoAddress''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ADDRESS_ID=''||address_id||''^''||''CUSTOMER_ID=''||customer_id||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "CustomerId","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": false,"AttrName": "CUSTOMER_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_id","ImplementationType": "VARCHAR2","Alias": "customer_id"}},"format": "uppercase"},{"Name": "AddressId","DataType": "Text","Collection": false,"Size": 50,"Nullable": false,"Updatable": false,"AttrName": "ADDRESS_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "address_id","ImplementationType": "VARCHAR2","Alias": "add');
   Dbms_Lob.Writeappend(clob_, 2442, 'ress_id"}},"format": "uppercase"},{"Name": "Name","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "NAME","Keygeneration": "User","Execute": {"SQL": {"Select": "name","ImplementationType": "VARCHAR2","Alias": "name"}}},{"Name": "Address","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Updatable": true,"AttrName": "ADDRESS","Keygeneration": "User","Execute": {"SQL": {"Select": "address","ImplementationType": "VARCHAR2","Alias": "address"}}},{"Name": "EanLocation","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "EAN_LOCATION","Keygeneration": "User","Execute": {"SQL": {"Select": "ean_location","ImplementationType": "VARCHAR2","Alias": "ean_location"}}},{"Name": "ValidFrom","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "VALID_FROM","Keygeneration": "User","Execute": {"SQL": {"Select": "valid_from","ImplementationType": "DATE","Alias": "valid_from"}}},{"Name": "ValidTo","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "VALID_TO","Keygeneration": "User","Execute": {"SQL": {"Select": "valid_to","ImplementationType": "DATE","Alias": "valid_to"}}},{"Name": "Party","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "PARTY","Keygeneration": "User","Execute": {"SQL": {"Select": "party","ImplementationType": "VARCHAR2","Alias": "party"}}},{"Name": "AddressLov","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "ADDRESS_LOV","Keygeneration": "Server","Execute": {"SQL": {"Select": "address_lov","ImplementationType": "VARCHAR2","Alias": "address_lov"}}},{"Name": "DefaultDomain","DataType": "Boolean","Collection": false,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "DEFAULT_DOMAIN","Keygeneration": "User","Execute": {"SQL": {"Select": "decode(default_domain,''TRUE'',''TRUE'',''FALSE'',''FALSE'',default_domain)","ImplementationType": "VARCHAR2","Alias": "default_domain"}}},{"Name": "Country","DataType": "Enumeration","SubType": "Lookup_IsoCountry","Collection": false,"Size": 2,"Nullable": false,"Updatable": true,"AttrName": "COUNTRY_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "country_db","OrderBy": "country","ImplementationType": "VARCHAR2","Alias": "country"');
   Dbms_Lob.Writeappend(clob_, 2450, '}}},{"Name": "PartyType","DataType": "Enumeration","SubType": "PartyType","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "PARTY_TYPE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "party_type_db","OrderBy": "party_type","ImplementationType": "VARCHAR2","Alias": "party_type"}}},{"Name": "SecondaryContact","DataType": "Text","Collection": false,"Size": 35,"Nullable": true,"Updatable": true,"AttrName": "SECONDARY_CONTACT","Keygeneration": "User","Execute": {"SQL": {"Select": "secondary_contact","ImplementationType": "VARCHAR2","Alias": "secondary_contact"}}},{"Name": "PrimaryContact","DataType": "Text","Collection": false,"Size": 35,"Nullable": true,"Updatable": true,"AttrName": "PRIMARY_CONTACT","Keygeneration": "User","Execute": {"SQL": {"Select": "primary_contact","ImplementationType": "VARCHAR2","Alias": "primary_contact"}}},{"Name": "Address1","DataType": "Text","Collection": false,"Size": 35,"Nullable": true,"Updatable": true,"AttrName": "ADDRESS1","Keygeneration": "User","Execute": {"SQL": {"Select": "address1","ImplementationType": "VARCHAR2","Alias": "address1"}}},{"Name": "Address2","DataType": "Text","Collection": false,"Size": 35,"Nullable": true,"Updatable": true,"AttrName": "ADDRESS2","Keygeneration": "User","Execute": {"SQL": {"Select": "address2","ImplementationType": "VARCHAR2","Alias": "address2"}}},{"Name": "Address3","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "ADDRESS3","Keygeneration": "User","Execute": {"SQL": {"Select": "address3","ImplementationType": "VARCHAR2","Alias": "address3"}}},{"Name": "Address4","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "ADDRESS4","Keygeneration": "User","Execute": {"SQL": {"Select": "address4","ImplementationType": "VARCHAR2","Alias": "address4"}}},{"Name": "Address5","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "ADDRESS5","Keygeneration": "User","Execute": {"SQL": {"Select": "address5","ImplementationType": "VARCHAR2","Alias": "address5"}}},{"Name": "Address6","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "ADDRESS6","Keygeneration": "User","Execute": {"SQL": {"Select": "address6","ImplementationType": "VARCHAR2","Alias": "address6"}}},{"Name": "ZipCode","DataType": "Text","Collection": false,"Size": 35,"N');
   Dbms_Lob.Writeappend(clob_, 2450, 'ullable": true,"Updatable": true,"AttrName": "ZIP_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "zip_code","ImplementationType": "VARCHAR2","Alias": "zip_code"}},"format": "uppercase"},{"Name": "City","DataType": "Text","Collection": false,"Size": 35,"Nullable": true,"Updatable": true,"AttrName": "CITY","Keygeneration": "User","Execute": {"SQL": {"Select": "city","ImplementationType": "VARCHAR2","Alias": "city"}}},{"Name": "County","DataType": "Text","Collection": false,"Size": 35,"Nullable": true,"Updatable": true,"AttrName": "COUNTY","Keygeneration": "User","Execute": {"SQL": {"Select": "county","ImplementationType": "VARCHAR2","Alias": "county"}}},{"Name": "State","DataType": "Text","Collection": false,"Size": 35,"Nullable": true,"Updatable": true,"AttrName": "STATE","Keygeneration": "User","Execute": {"SQL": {"Select": "state","ImplementationType": "VARCHAR2","Alias": "state"}}},{"Name": "InCity","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": true,"AttrName": "IN_CITY","Keygeneration": "User","Execute": {"SQL": {"Select": "in_city","ImplementationType": "VARCHAR2","Alias": "in_city"}}},{"Name": "JurisdictionCode","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "JURISDICTION_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "jurisdiction_code","ImplementationType": "VARCHAR2","Alias": "jurisdiction_code"}}},{"Name": "CommId","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "COMM_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "comm_id","ImplementationType": "NUMBER","Alias": "comm_id"}}},{"Name": "OutputMedia","DataType": "Enumeration","SubType": "OutputMediaType","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "OUTPUT_MEDIA_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "output_media_db","OrderBy": "output_media","ImplementationType": "VARCHAR2","Alias": "output_media"}}},{"Name": "EndCustomerId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "END_CUSTOMER_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "end_customer_id","ImplementationType": "VARCHAR2","Alias": "end_customer_id"}},"format": "uppercase"},{"Name": "EndCustAddrId","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "END_CUST_ADDR_ID","Keygener');
   Dbms_Lob.Writeappend(clob_, 2428, 'ation": "User","Execute": {"SQL": {"Select": "end_cust_addr_id","ImplementationType": "VARCHAR2","Alias": "end_cust_addr_id"}},"format": "uppercase"},{"Name": "CustomerBranch","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMER_BRANCH","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_branch","ImplementationType": "VARCHAR2","Alias": "customer_branch"}},"format": "uppercase"}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"CustomerInfoAddress","Type":"Entity","Name":"CustomerInfoAddress","View":"CUSTOMER_INFO_ADDRESS"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''CustomerInfoAddress''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ADDRESS_ID=''||address_id||''^''||''CUSTOMER_ID=''||customer_id||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"CustomerInfoAddress","Lu":"CustomerInfoAddress","View":"CUSTOMER_INFO_ADDRESS"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "IsoCurrency","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"IsoCurrency","View":"ISO_CURRENCY"}]#]"}},"Keys": ["CurrencyCode"],"KeysWhere": "(currency_code = :CurrencyCode)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''IsoCurrency''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CURRENCY_CODE=''||currency_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration');
   Dbms_Lob.Writeappend(clob_, 2444, '": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "CurrencyCode","DataType": "Text","Collection": false,"Size": 3,"Nullable": false,"Updatable": false,"AttrName": "CURRENCY_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "currency_code","ImplementationType": "VARCHAR2","Alias": "currency_code"}},"format": "uppercase"},{"Name": "Description","DataType": "Text","Collection": false,"Size": 739,"Nullable": false,"Updatable": true,"AttrName": "DESCRIPTION","Keygeneration": "User","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}},{"Name": "CurrencyNumber","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "CURRENCY_NUMBER","Keygeneration": "User","Execute": {"SQL": {"Select": "currency_number","ImplementationType": "NUMBER","Alias": "currency_number"}}},{"Name": "UsedInAppl","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": true,"AttrName": "USED_IN_APPL","Keygeneration": "User","Execute": {"SQL": {"Select": "used_in_appl","ImplementationType": "VARCHAR2","Alias": "used_in_appl"}}},{"Name": "DefaultCountry","DataType": "Text","Collection": false,"Size": 2,"Nullable": true,"Updatable": true,"AttrName": "DEFAULT_COUNTRY","Keygeneration": "User","Execute": {"SQL": {"Select": "default_country","ImplementationType": "VARCHAR2","Alias": "default_country"}},"format": "uppercase"},{"Name": "SystemAdded","DataType": "Text","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "SYSTEM_ADDED","Keygeneration": "User","Execute": {"SQL": {"Select": "system_added","ImplementationType": "VARCHAR2","Alias": "system_added"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"IsoCurrency","Type":"Entity","Name":"IsoCurrency","View":"ISO_CURRENCY"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''IsoCurrency''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CURRENCY_CODE=''||currency_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projec');
   Dbms_Lob.Writeappend(clob_, 2438, 'tion":"BcRcoHandling","Entity":"IsoCurrency","Lu":"IsoCurrency","View":"ISO_CURRENCY"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "Site","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"Site","View":"SITE"}]#]"}},"Keys": ["Contract"],"KeysWhere": "(contract = :Contract)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Site''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CONTRACT=''||contract||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "Contract","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": false,"AttrName": "CONTRACT","Keygeneration": "User","Execute": {"SQL": {"Select": "contract","ImplementationType": "VARCHAR2","Alias": "contract"}},"format": "uppercase"},{"Name": "Company","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": false,"AttrName": "COMPANY","Keygeneration": "User","Execute": {"SQL": {"Select": "company","ImplementationType": "VARCHAR2","Alias": "company"}},"format": "uppercase"},{"Name": "DeliveryAddress","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "DELIVERY_ADDRESS","Keygeneration": "User","Execute": {"SQL": {"Select": "delivery_address","ImplementationType": "VARCHAR2","Alias": "delivery_address"}},"format": "uppercase"},{"Name": "Description","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DESCRIPTION","Keygeneration": "Server","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}},{"Name": "DistCalendarId","DataType": "Text","Collection":');
   Dbms_Lob.Writeappend(clob_, 2438, ' false,"Size": 10,"Nullable": false,"Updatable": true,"AttrName": "DIST_CALENDAR_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "dist_calendar_id","ImplementationType": "VARCHAR2","Alias": "dist_calendar_id"}},"format": "uppercase"},{"Name": "ManufCalendarId","DataType": "Text","Collection": false,"Size": 10,"Nullable": false,"Updatable": true,"AttrName": "MANUF_CALENDAR_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "manuf_calendar_id","ImplementationType": "VARCHAR2","Alias": "manuf_calendar_id"}},"format": "uppercase"},{"Name": "Offset","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "OFFSET","Keygeneration": "User","Execute": {"SQL": {"Select": "offset","ImplementationType": "NUMBER","Alias": "offset"}}},{"Name": "DataCaptureMenuId","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "DATA_CAPTURE_MENU_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "data_capture_menu_id","ImplementationType": "VARCHAR2","Alias": "data_capture_menu_id"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"Site","Type":"Entity","Name":"Site","View":"SITE"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Site''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CONTRACT=''||contract||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"Site","Lu":"Site","View":"SITE"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "CustomerOrder","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"CustomerOrder","View":"CUSTOMER_ORDER"}]#]"}},"Keys": ["OrderNo"],"KeysWhere": "(order_no = :OrderNo)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL');
   Dbms_Lob.Writeappend(clob_, 2444, '": {"Select": "''CustomerOrder''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ORDER_NO=''||order_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objstate","DataType": "Enumeration","SubType": "CustomerOrderState","Collection": false,"Size": 50,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJSTATE","Keygeneration": "Server","Execute": {"SQL": {"Select": "objstate","OrderBy": "state","ImplementationType": "VARCHAR2","Alias": "objstate"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "OrderNo","DataType": "Text","Collection": false,"Size": 12,"Nullable": true,"Updatable": false,"AttrName": "ORDER_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "order_no","ImplementationType": "VARCHAR2","Alias": "order_no"}},"format": "uppercase"},{"Name": "AuthorizeCode","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "AUTHORIZE_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "authorize_code","ImplementationType": "VARCHAR2","Alias": "authorize_code"}},"format": "uppercase"},{"Name": "BillAddrNo","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "BILL_ADDR_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "bill_addr_no","ImplementationType": "VARCHAR2","Alias": "bill_addr_no"}}},{"Name": "Contract","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": false,"AttrName": "CONTRACT","Keygeneration": "User","Execute": {"SQL": {"Select": "contract","ImplementationType": "VARCHAR2","Alias": "contract"}},"format": "uppercase"},{"Name": "Company","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "COMPANY","Keygeneration": "Server","Execute": {"SQL": {"Select": "company","ImplementationType": "VARCHAR2","Alias": "company"}},"format": "uppercase"},{"Name": "CountryCode","DataType": "Text","Collection": false,"Size": 2,"Nullable": true,"Updatable": true,"AttrName": "COUNTRY_CODE","Keygeneration": "User","Execu');
   Dbms_Lob.Writeappend(clob_, 2450, 'te": {"SQL": {"Select": "country_code","ImplementationType": "VARCHAR2","Alias": "country_code"}},"format": "uppercase"},{"Name": "CurrencyCode","DataType": "Text","Collection": false,"Size": 3,"Nullable": false,"Updatable": false,"AttrName": "CURRENCY_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "currency_code","ImplementationType": "VARCHAR2","Alias": "currency_code"}},"format": "uppercase"},{"Name": "CustomerNo","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": false,"AttrName": "CUSTOMER_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_no","ImplementationType": "VARCHAR2","Alias": "customer_no"}},"format": "uppercase"},{"Name": "CustomerNoPay","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMER_NO_PAY","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_no_pay","ImplementationType": "VARCHAR2","Alias": "customer_no_pay"}},"format": "uppercase"},{"Name": "CustomerNoPayAddrNo","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMER_NO_PAY_ADDR_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_no_pay_addr_no","ImplementationType": "VARCHAR2","Alias": "customer_no_pay_addr_no"}}},{"Name": "CustomerNoPayReference","DataType": "Text","Collection": false,"Size": 30,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMER_NO_PAY_REF","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_no_pay_ref","ImplementationType": "VARCHAR2","Alias": "customer_no_pay_reference"}}},{"Name": "DeliveryTerms","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": true,"AttrName": "DELIVERY_TERMS","Keygeneration": "User","Execute": {"SQL": {"Select": "delivery_terms","ImplementationType": "VARCHAR2","Alias": "delivery_terms"}},"format": "uppercase"},{"Name": "DistrictCode","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "DISTRICT_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "district_code","ImplementationType": "VARCHAR2","Alias": "district_code"}},"format": "uppercase"},{"Name": "LanguageCode","DataType": "Text","Collection": false,"Size": 2,"Nullable": false,"Updatable": true,"AttrName": "LANGUAGE_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "language_code","ImplementationType": "VARCHAR2","Alias": "language_code"}}');
   Dbms_Lob.Writeappend(clob_, 2450, '},{"Name": "MarketCode","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "MARKET_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "market_code","ImplementationType": "VARCHAR2","Alias": "market_code"}},"format": "uppercase"},{"Name": "NoteId","DataType": "Number","Collection": false,"Nullable": true,"Updatable": false,"AttrName": "NOTE_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "note_id","ImplementationType": "NUMBER","Alias": "note_id"}}},{"Name": "OrderCode","DataType": "Text","Collection": false,"Size": 3,"Nullable": false,"Updatable": false,"AttrName": "ORDER_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "order_code","ImplementationType": "VARCHAR2","Alias": "order_code"}},"format": "uppercase"},{"Name": "OrderId","DataType": "Text","Collection": false,"Size": 3,"Nullable": false,"Updatable": false,"AttrName": "ORDER_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "order_id","ImplementationType": "VARCHAR2","Alias": "order_id"}},"format": "uppercase"},{"Name": "PayTermId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "PAY_TERM_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "pay_term_id","ImplementationType": "VARCHAR2","Alias": "pay_term_id"}},"format": "uppercase"},{"Name": "PreAccountingId","DataType": "Number","Collection": false,"Nullable": true,"Updatable": false,"AttrName": "PRE_ACCOUNTING_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "pre_accounting_id","ImplementationType": "NUMBER","Alias": "pre_accounting_id"}}},{"Name": "PrintControlCode","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "PRINT_CONTROL_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "print_control_code","ImplementationType": "VARCHAR2","Alias": "print_control_code"}},"format": "uppercase"},{"Name": "RegionCode","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "REGION_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "region_code","ImplementationType": "VARCHAR2","Alias": "region_code"}},"format": "uppercase"},{"Name": "SalesmanCode","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "SALESMAN_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "salesman_code","ImplementationType": "VARCHAR');
   Dbms_Lob.Writeappend(clob_, 2450, '2","Alias": "salesman_code"}},"format": "uppercase"},{"Name": "ShipAddrNo","DataType": "Text","Collection": false,"Size": 50,"Nullable": false,"Updatable": true,"AttrName": "SHIP_ADDR_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "ship_addr_no","ImplementationType": "VARCHAR2","Alias": "ship_addr_no"}}},{"Name": "ShipViaCode","DataType": "Text","Collection": false,"Size": 3,"Nullable": true,"Updatable": true,"AttrName": "SHIP_VIA_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "ship_via_code","ImplementationType": "VARCHAR2","Alias": "ship_via_code"}},"format": "uppercase"},{"Name": "AddrFlag","DataType": "Enumeration","SubType": "GenYesNo","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "ADDR_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "addr_flag_db","OrderBy": "addr_flag","ImplementationType": "VARCHAR2","Alias": "addr_flag"}}},{"Name": "GrpDiscCalcFlag","DataType": "Enumeration","SubType": "GenYesNo","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "GRP_DISC_CALC_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "grp_disc_calc_flag_db","OrderBy": "grp_disc_calc_flag","ImplementationType": "VARCHAR2","Alias": "grp_disc_calc_flag"}}},{"Name": "CustomerPoNo","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMER_PO_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_po_no","ImplementationType": "VARCHAR2","Alias": "customer_po_no"}}},{"Name": "CustRef","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "CUST_REF","Keygeneration": "User","Execute": {"SQL": {"Select": "cust_ref","ImplementationType": "VARCHAR2","Alias": "cust_ref"}}},{"Name": "DateEntered","DataType": "Timestamp","Collection": false,"Nullable": true,"Updatable": false,"AttrName": "DATE_ENTERED","Keygeneration": "User","Execute": {"SQL": {"Select": "date_entered","ImplementationType": "DATE","Alias": "date_entered"}}},{"Name": "DeliveryLeadtime","DataType": "Number","Collection": false,"Precision": "3","Nullable": false,"Updatable": true,"AttrName": "DELIVERY_LEADTIME","Keygeneration": "User","Execute": {"SQL": {"Select": "delivery_leadtime","ImplementationType": "NUMBER","Alias": "delivery_leadtime"}}},{"Name": "LabelNote","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName"');
   Dbms_Lob.Writeappend(clob_, 2450, ': "LABEL_NOTE","Keygeneration": "User","Execute": {"SQL": {"Select": "label_note","ImplementationType": "VARCHAR2","Alias": "label_note"}}},{"Name": "NoteText","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Updatable": true,"AttrName": "NOTE_TEXT","Keygeneration": "User","Execute": {"SQL": {"Select": "note_text","ImplementationType": "VARCHAR2","Alias": "note_text"}}},{"Name": "OrderConf","DataType": "Enumeration","SubType": "OrderConfirmationPrinted","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "ORDER_CONF_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "order_conf_db","OrderBy": "order_conf","ImplementationType": "VARCHAR2","Alias": "order_conf"}}},{"Name": "OrderConfFlag","DataType": "Enumeration","SubType": "PrintOrderConfirmation","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "ORDER_CONF_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "order_conf_flag_db","OrderBy": "order_conf_flag","ImplementationType": "VARCHAR2","Alias": "order_conf_flag"}}},{"Name": "PackListFlag","DataType": "Enumeration","SubType": "PrintPackList","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "PACK_LIST_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "pack_list_flag_db","OrderBy": "pack_list_flag","ImplementationType": "VARCHAR2","Alias": "pack_list_flag"}}},{"Name": "PickListFlag","DataType": "Enumeration","SubType": "PrintPickList","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "PICK_LIST_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "pick_list_flag_db","OrderBy": "pick_list_flag","ImplementationType": "VARCHAR2","Alias": "pick_list_flag"}}},{"Name": "TaxLiability","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "TAX_LIABILITY","Keygeneration": "User","Execute": {"SQL": {"Select": "tax_liability","ImplementationType": "VARCHAR2","Alias": "tax_liability"}},"format": "uppercase"},{"Name": "DeliveryCountryCode","DataType": "Text","Collection": false,"Size": 2,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DELIVERY_COUNTRY_CODE","Keygeneration": "Server","Execute": {"SQL": {"Select": "delivery_country_code","ImplementationType": "VARCHAR2","Alias": "delivery_country_code"}},"format": "uppercase"},{"Name": "WantedDeliveryDate","DataType": "Timestamp","Colle');
   Dbms_Lob.Writeappend(clob_, 2450, 'ction": false,"Nullable": false,"Updatable": true,"AttrName": "WANTED_DELIVERY_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "wanted_delivery_date","ImplementationType": "DATE","Alias": "wanted_delivery_date"}}},{"Name": "InternalPoNo","DataType": "Text","Collection": false,"Size": 12,"Nullable": true,"Updatable": false,"AttrName": "INTERNAL_PO_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "internal_po_no","ImplementationType": "VARCHAR2","Alias": "internal_po_no"}},"format": "uppercase"},{"Name": "RouteId","DataType": "Text","Collection": false,"Size": 12,"Nullable": true,"Updatable": true,"AttrName": "ROUTE_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "route_id","ImplementationType": "VARCHAR2","Alias": "route_id"}}},{"Name": "AgreementId","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "AGREEMENT_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "agreement_id","ImplementationType": "VARCHAR2","Alias": "agreement_id"}},"format": "uppercase"},{"Name": "ForwardAgentId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "FORWARD_AGENT_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "forward_agent_id","ImplementationType": "VARCHAR2","Alias": "forward_agent_id"}},"format": "uppercase"},{"Name": "InternalDeliveryType","DataType": "Enumeration","SubType": "OrderDeliveryType","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "INTERNAL_DELIVERY_TYPE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "internal_delivery_type_db","OrderBy": "internal_delivery_type","ImplementationType": "VARCHAR2","Alias": "internal_delivery_type"}}},{"Name": "ExternalRef","DataType": "Text","Collection": false,"Size": 25,"Nullable": true,"Updatable": true,"AttrName": "EXTERNAL_REF","Keygeneration": "User","Execute": {"SQL": {"Select": "external_ref","ImplementationType": "VARCHAR2","Alias": "external_ref"}}},{"Name": "ProjectId","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "PROJECT_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "project_id","ImplementationType": "VARCHAR2","Alias": "project_id"}},"format": "uppercase"},{"Name": "StagedBilling","DataType": "Enumeration","SubType": "StagedBillingType","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "STAGED_B');
   Dbms_Lob.Writeappend(clob_, 2450, 'ILLING_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "staged_billing_db","OrderBy": "staged_billing","ImplementationType": "VARCHAR2","Alias": "staged_billing"}}},{"Name": "SmConnection","DataType": "Enumeration","SubType": "ServiceManagementConnect","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "SM_CONNECTION_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "sm_connection_db","OrderBy": "sm_connection","ImplementationType": "VARCHAR2","Alias": "sm_connection"}}},{"Name": "SchedulingConnection","DataType": "Enumeration","SubType": "ScheduleAgreementOrder","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "SCHEDULING_CONNECTION_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "scheduling_connection_db","OrderBy": "scheduling_connection","ImplementationType": "VARCHAR2","Alias": "scheduling_connection"}}},{"Name": "Priority","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "PRIORITY","Keygeneration": "User","Execute": {"SQL": {"Select": "priority","ImplementationType": "NUMBER","Alias": "priority"}}},{"Name": "IntrastatExempt","DataType": "Enumeration","SubType": "IntrastatExempt","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "INTRASTAT_EXEMPT_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "intrastat_exempt_db","OrderBy": "intrastat_exempt","ImplementationType": "VARCHAR2","Alias": "intrastat_exempt"}}},{"Name": "AdditionalDiscount","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "ADDITIONAL_DISCOUNT","Keygeneration": "User","Execute": {"SQL": {"Select": "additional_discount","ImplementationType": "NUMBER","Alias": "additional_discount"}}},{"Name": "PayTermBaseDate","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "PAY_TERM_BASE_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "pay_term_base_date","ImplementationType": "DATE","Alias": "pay_term_base_date"}}},{"Name": "SummarizedSourceLines","DataType": "Enumeration","SubType": "GenYesNo","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "SUMMARIZED_SOURCE_LINES_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "summarized_source_lines_db","OrderBy": "summarized_source_lines","ImplementationType": "VARCHAR2","Alias": "summarized_source_lines"}}},{"Name": "CaseId","D');
   Dbms_Lob.Writeappend(clob_, 2450, 'ataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "CASE_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "case_id","ImplementationType": "NUMBER","Alias": "case_id"}}},{"Name": "TaskId","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "TASK_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "task_id","ImplementationType": "NUMBER","Alias": "task_id"}}},{"Name": "ConfirmDeliveries","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "CONFIRM_DELIVERIES_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "confirm_deliveries_db","ImplementationType": "VARCHAR2","Alias": "confirm_deliveries"}}},{"Name": "CheckSalesGrpDelivConf","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "CHECK_SALES_GRP_DELIV_CONF_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "check_sales_grp_deliv_conf_db","ImplementationType": "VARCHAR2","Alias": "check_sales_grp_deliv_conf"}}},{"Name": "DelayCogsToDelivConf","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "DELAY_COGS_TO_DELIV_CONF_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "delay_cogs_to_deliv_conf_db","ImplementationType": "VARCHAR2","Alias": "delay_cogs_to_deliv_conf"}}},{"Name": "CancelReason","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "CANCEL_REASON","Keygeneration": "User","Execute": {"SQL": {"Select": "cancel_reason","ImplementationType": "VARCHAR2","Alias": "cancel_reason"}},"format": "uppercase"},{"Name": "JinsuiInvoice","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "JINSUI_INVOICE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "jinsui_invoice_db","ImplementationType": "VARCHAR2","Alias": "jinsui_invoice"}}},{"Name": "BlockedReason","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "BLOCKED_REASON","Keygeneration": "User","Execute": {"SQL": {"Select": "blocked_reason","ImplementationType": "VARCHAR2","Alias": "blocked_reason"}},"format": "uppercase"},{"Name": "BlockedFromStat');
   Dbms_Lob.Writeappend(clob_, 2446, 'e","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "BLOCKED_FROM_STATE","Keygeneration": "User","Execute": {"SQL": {"Select": "blocked_from_state","ImplementationType": "VARCHAR2","Alias": "blocked_from_state"}}},{"Name": "SalesContractNo","DataType": "Text","Collection": false,"Size": 15,"Nullable": true,"Updatable": true,"AttrName": "SALES_CONTRACT_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "sales_contract_no","ImplementationType": "VARCHAR2","Alias": "sales_contract_no"}}},{"Name": "ContractRevSeq","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "CONTRACT_REV_SEQ","Keygeneration": "User","Execute": {"SQL": {"Select": "contract_rev_seq","ImplementationType": "NUMBER","Alias": "contract_rev_seq"}}},{"Name": "ContractLineNo","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "CONTRACT_LINE_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "contract_line_no","ImplementationType": "NUMBER","Alias": "contract_line_no"}}},{"Name": "ContractItemNo","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "CONTRACT_ITEM_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "contract_item_no","ImplementationType": "NUMBER","Alias": "contract_item_no"}}},{"Name": "DefaultCharges","DataType": "Boolean","Collection": false,"TrueValue": "1","FalseValue": "0","Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DEFAULT_CHARGES","Keygeneration": "Server","Execute": {"SQL": {"Select": "decode(default_charges,1,''TRUE'',0,''FALSE'',default_charges)","ImplementationType": "VARCHAR2","Alias": "default_charges"}}},{"Name": "ReleasedFromCreditCheck","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "RELEASED_FROM_CREDIT_CHECK_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "released_from_credit_check_db","ImplementationType": "VARCHAR2","Alias": "released_from_credit_check"}}},{"Name": "ProposedPrepaymentAmount","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "PROPOSED_PREPAYMENT_AMOUNT","Keygeneration": "User","Execute": {"SQL": {"Select": "proposed_prepayment_amount","ImplementationType": "NUMBER","Alias": "proposed_prepayment_amount"}}},{"Name": "PrepaymentApproved","DataType": "Boolea');
   Dbms_Lob.Writeappend(clob_, 2450, 'n","Collection": false,"Size": 5,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "PREPAYMENT_APPROVED_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "prepayment_approved_db","ImplementationType": "VARCHAR2","Alias": "prepayment_approved"}}},{"Name": "BackorderOption","DataType": "Enumeration","SubType": "CustomerBackorderOption","Collection": false,"Size": 40,"Nullable": false,"Updatable": true,"AttrName": "BACKORDER_OPTION_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "backorder_option_db","OrderBy": "backorder_option","ImplementationType": "VARCHAR2","Alias": "backorder_option"}}},{"Name": "ExpectedPrepaymentDate","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "EXPECTED_PREPAYMENT_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "expected_prepayment_date","ImplementationType": "DATE","Alias": "expected_prepayment_date"}}},{"Name": "ShipmentCreation","DataType": "Enumeration","SubType": "ShipmentCreationCustomerOrder","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "SHIPMENT_CREATION_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "shipment_creation_db","OrderBy": "shipment_creation","ImplementationType": "VARCHAR2","Alias": "shipment_creation"}}},{"Name": "UsePreShipDelNote","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": false,"AttrName": "USE_PRE_SHIP_DEL_NOTE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "use_pre_ship_del_note_db","ImplementationType": "VARCHAR2","Alias": "use_pre_ship_del_note"}}},{"Name": "PickInventoryType","DataType": "Enumeration","SubType": "PickInventoryType","Collection": false,"Size": 7,"Nullable": false,"Updatable": false,"AttrName": "PICK_INVENTORY_TYPE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "pick_inventory_type_db","OrderBy": "pick_inventory_type","ImplementationType": "VARCHAR2","Alias": "pick_inventory_type"}}},{"Name": "TaxIdNo","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "TAX_ID_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "tax_id_no","ImplementationType": "VARCHAR2","Alias": "tax_id_no"}},"format": "uppercase"},{"Name": "TaxIdValidatedDate","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "TAX_ID_VALIDATED_D');
   Dbms_Lob.Writeappend(clob_, 2450, 'ATE","Keygeneration": "User","Execute": {"SQL": {"Select": "tax_id_validated_date","ImplementationType": "DATE","Alias": "tax_id_validated_date"}}},{"Name": "ClassificationStandard","DataType": "Text","Collection": false,"Size": 25,"Nullable": true,"Updatable": true,"AttrName": "CLASSIFICATION_STANDARD","Keygeneration": "User","Execute": {"SQL": {"Select": "classification_standard","ImplementationType": "VARCHAR2","Alias": "classification_standard"}},"format": "uppercase"},{"Name": "MsgSequenceNo","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "MSG_SEQUENCE_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "msg_sequence_no","ImplementationType": "NUMBER","Alias": "msg_sequence_no"}}},{"Name": "MsgVersionNo","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "MSG_VERSION_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "msg_version_no","ImplementationType": "NUMBER","Alias": "msg_version_no"}}},{"Name": "CurrencyRateType","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "CURRENCY_RATE_TYPE","Keygeneration": "User","Execute": {"SQL": {"Select": "currency_rate_type","ImplementationType": "VARCHAR2","Alias": "currency_rate_type"}}},{"Name": "DelTermsLocation","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "DEL_TERMS_LOCATION","Keygeneration": "User","Execute": {"SQL": {"Select": "del_terms_location","ImplementationType": "VARCHAR2","Alias": "del_terms_location"}}},{"Name": "InternalRef","DataType": "Text","Collection": false,"Size": 30,"Nullable": true,"Updatable": true,"AttrName": "INTERNAL_REF","Keygeneration": "User","Execute": {"SQL": {"Select": "internal_ref","ImplementationType": "VARCHAR2","Alias": "internal_ref"}}},{"Name": "InternalPoLabelNote","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "INTERNAL_PO_LABEL_NOTE","Keygeneration": "User","Execute": {"SQL": {"Select": "internal_po_label_note","ImplementationType": "VARCHAR2","Alias": "internal_po_label_note"}}},{"Name": "SupplyCountry","DataType": "Enumeration","SubType": "Lookup_IsoCountry","Collection": false,"Size": 2,"Nullable": false,"Updatable": true,"AttrName": "SUPPLY_COUNTRY_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "supply_country_db","OrderBy": "supply_country","ImplementationType": "VA');
   Dbms_Lob.Writeappend(clob_, 2450, 'RCHAR2","Alias": "supply_country"}}},{"Name": "RebateCustomer","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "REBATE_CUSTOMER","Keygeneration": "User","Execute": {"SQL": {"Select": "rebate_customer","ImplementationType": "VARCHAR2","Alias": "rebate_customer"}},"format": "uppercase"},{"Name": "FreightMapId","DataType": "Text","Collection": false,"Size": 15,"Nullable": true,"Updatable": true,"AttrName": "FREIGHT_MAP_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "freight_map_id","ImplementationType": "VARCHAR2","Alias": "freight_map_id"}},"format": "uppercase"},{"Name": "ZoneId","DataType": "Text","Collection": false,"Size": 15,"Nullable": true,"Updatable": true,"AttrName": "ZONE_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "zone_id","ImplementationType": "VARCHAR2","Alias": "zone_id"}},"format": "uppercase"},{"Name": "FreightPriceListNo","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "FREIGHT_PRICE_LIST_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "freight_price_list_no","ImplementationType": "VARCHAR2","Alias": "freight_price_list_no"}}},{"Name": "SummarizedFreightCharges","DataType": "Enumeration","SubType": "GenYesNo","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "SUMMARIZED_FREIGHT_CHARGES_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "summarized_freight_charges_db","OrderBy": "summarized_freight_charges","ImplementationType": "VARCHAR2","Alias": "summarized_freight_charges"}}},{"Name": "ApplyFixDelivFreight","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "APPLY_FIX_DELIV_FREIGHT_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "apply_fix_deliv_freight_db","ImplementationType": "VARCHAR2","Alias": "apply_fix_deliv_freight"}}},{"Name": "FixDelivFreight","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "FIX_DELIV_FREIGHT","Keygeneration": "User","Execute": {"SQL": {"Select": "fix_deliv_freight","ImplementationType": "NUMBER","Alias": "fix_deliv_freight"}}},{"Name": "PrintDeliveredLines","DataType": "Enumeration","SubType": "DeliveryNoteOptions","Collection": false,"Size": 23,"Nullable": false,"Updatable": true,"AttrName": "PRINT_DELIVERED_LINES_DB","Keygeneration": "User","Execute": {"');
   Dbms_Lob.Writeappend(clob_, 2446, 'SQL": {"Select": "print_delivered_lines_db","OrderBy": "print_delivered_lines","ImplementationType": "VARCHAR2","Alias": "print_delivered_lines"}}},{"Name": "UpdatePriceEffectiveDate","DataType": "Boolean","Collection": false,"TrueValue": "1","FalseValue": "0","Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "UPDATE_PRICE_EFFECTIVE_DATE","Keygeneration": "Server","Execute": {"SQL": {"Select": "decode(update_price_effective_date,1,''TRUE'',0,''FALSE'',update_price_effective_date)","ImplementationType": "VARCHAR2","Alias": "update_price_effective_date"}}},{"Name": "CustCalendarId","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "CUST_CALENDAR_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "cust_calendar_id","ImplementationType": "VARCHAR2","Alias": "cust_calendar_id"}},"format": "uppercase"},{"Name": "ExtTransportCalendarId","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "EXT_TRANSPORT_CALENDAR_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "ext_transport_calendar_id","ImplementationType": "VARCHAR2","Alias": "ext_transport_calendar_id"}},"format": "uppercase"},{"Name": "UsePriceInclTax","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": false,"AttrName": "USE_PRICE_INCL_TAX_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "use_price_incl_tax_db","ImplementationType": "VARCHAR2","Alias": "use_price_incl_tax"}}},{"Name": "CustomsValueCurrency","DataType": "Text","Collection": false,"Size": 3,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMS_VALUE_CURRENCY","Keygeneration": "User","Execute": {"SQL": {"Select": "customs_value_currency","ImplementationType": "VARCHAR2","Alias": "customs_value_currency"}},"format": "uppercase"},{"Name": "BusinessOpportunityNo","DataType": "Text","Collection": false,"Size": 12,"Nullable": true,"Updatable": false,"AttrName": "BUSINESS_OPPORTUNITY_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "business_opportunity_no","ImplementationType": "VARCHAR2","Alias": "business_opportunity_no"}},"format": "uppercase"},{"Name": "PickingLeadtime","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "PICKING_LEADTIME","Keygeneration": "User","Execute": {"SQL": {"Select": "picking_leadtime","ImplementationType": "NUMBER","A');
   Dbms_Lob.Writeappend(clob_, 2450, 'lias": "picking_leadtime"}}},{"Name": "ShipmentType","DataType": "Text","Collection": false,"Size": 3,"Nullable": false,"Updatable": true,"AttrName": "SHIPMENT_TYPE","Keygeneration": "User","Execute": {"SQL": {"Select": "shipment_type","ImplementationType": "VARCHAR2","Alias": "shipment_type"}}},{"Name": "VendorNo","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "VENDOR_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "vendor_no","ImplementationType": "VARCHAR2","Alias": "vendor_no"}},"format": "uppercase"},{"Name": "DisconnectExpLicense","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DISCONNECT_EXP_LICENSE","Keygeneration": "Server","Execute": {"SQL": {"Select": "disconnect_exp_license","ImplementationType": "VARCHAR2","Alias": "disconnect_exp_license"}}},{"Name": "ReplicateChanges","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "REPLICATE_CHANGES","Keygeneration": "Server","Execute": {"SQL": {"Select": "replicate_changes","ImplementationType": "VARCHAR2","Alias": "replicate_changes"}}},{"Name": "ChangeRequest","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "CHANGE_REQUEST","Keygeneration": "Server","Execute": {"SQL": {"Select": "change_request","ImplementationType": "VARCHAR2","Alias": "change_request"}}},{"Name": "QuotationNo","DataType": "Text","Collection": false,"Size": 12,"Nullable": true,"Updatable": true,"AttrName": "QUOTATION_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "quotation_no","ImplementationType": "VARCHAR2","Alias": "quotation_no"}}},{"Name": "FreeOfChgTaxPayParty","DataType": "Enumeration","SubType": "TaxPayingParty","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "FREE_OF_CHG_TAX_PAY_PARTY_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "free_of_chg_tax_pay_party_db","OrderBy": "free_of_chg_tax_pay_party","ImplementationType": "VARCHAR2","Alias": "free_of_chg_tax_pay_party"}}},{"Name": "BlockedType","DataType": "Enumeration","SubType": "CustomerOrderBlockType","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "BLOCKED_TYPE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "blocked_type_db","OrderBy": "blocked_type","ImplementationTy');
   Dbms_Lob.Writeappend(clob_, 2450, 'pe": "VARCHAR2","Alias": "blocked_type"}}},{"Name": "B2bOrder","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": false,"AttrName": "B2B_ORDER_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "b2b_order_db","ImplementationType": "VARCHAR2","Alias": "b2b_order"}}},{"Name": "MainRepresentativeId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "MAIN_REPRESENTATIVE_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "main_representative_id","ImplementationType": "VARCHAR2","Alias": "main_representative_id"}},"format": "uppercase"},{"Name": "LimitSalesToAssortments","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "LIMIT_SALES_TO_ASSORTMENTS_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "limit_sales_to_assortments_db","ImplementationType": "VARCHAR2","Alias": "limit_sales_to_assortments"}}},{"Name": "FinalConsumer","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "FINAL_CONSUMER_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "final_consumer_db","ImplementationType": "VARCHAR2","Alias": "final_consumer"}}},{"Name": "CustomerTaxUsageType","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMER_TAX_USAGE_TYPE","Keygeneration": "User","Execute": {"SQL": {"Select": "customer_tax_usage_type","ImplementationType": "VARCHAR2","Alias": "customer_tax_usage_type"}},"format": "uppercase"},{"Name": "InvoiceReasonId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "INVOICE_REASON_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "invoice_reason_id","ImplementationType": "VARCHAR2","Alias": "invoice_reason_id"}},"format": "uppercase"},{"Name": "DeliveryReasonId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "DELIVERY_REASON_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "delivery_reason_id","ImplementationType": "VARCHAR2","Alias": "delivery_reason_id"}},"format": "uppercase"},{"Name": "ComponentA","DataType": "Text","Collection": false,"Size": 50,"Nullable": true,"Updatable": true,"AttrName": "COMPONENT_A","Keygener');
   Dbms_Lob.Writeappend(clob_, 2444, 'ation": "User","Execute": {"SQL": {"Select": "component_a","ImplementationType": "VARCHAR2","Alias": "component_a"}},"format": "uppercase"},{"Name": "ServiceCode","DataType": "Text","Collection": false,"Size": 100,"Nullable": true,"Updatable": true,"AttrName": "SERVICE_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "service_code","ImplementationType": "VARCHAR2","Alias": "service_code"}},"format": "uppercase"},{"Name": "DiscPriceRound","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Insertable": false,"Updatable": false,"AttrName": "DISC_PRICE_ROUND_DB","Keygeneration": "Server","Execute": {"SQL": {"Select": "disc_price_round_db","ImplementationType": "VARCHAR2","Alias": "disc_price_round"}}},{"Name": "BusinessTransactionId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "BUSINESS_TRANSACTION_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "business_transaction_id","ImplementationType": "VARCHAR2","Alias": "business_transaction_id"}}},{"Name": "InvoicedClosedDate","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "INVOICED_CLOSED_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "invoiced_closed_date","ImplementationType": "DATE","Alias": "invoiced_closed_date"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"CustomerOrder","Type":"Entity","Name":"CustomerOrder","View":"CUSTOMER_ORDER"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''CustomerOrder''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ORDER_NO=''||order_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"CustomerOrder","Lu":"CustomerOrder","View":"CUSTOMER_ORDER"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "FndUser","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"FndUser","View":"FND_USER"}]#]"}},"Keys": ["Identity"],"KeysWhere": "(identity');
   Dbms_Lob.Writeappend(clob_, 2438, ' = :Identity)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''FndUser''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''IDENTITY=''||identity||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "Identity","DataType": "Text","Collection": false,"Size": 30,"Nullable": false,"Updatable": false,"AttrName": "IDENTITY","Keygeneration": "User","Execute": {"SQL": {"Select": "identity","ImplementationType": "VARCHAR2","Alias": "identity"}},"format": "uppercase"},{"Name": "Description","DataType": "Text","Collection": false,"Size": 2000,"Nullable": false,"Updatable": true,"AttrName": "DESCRIPTION","Keygeneration": "User","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}},{"Name": "OracleUser","DataType": "Text","Collection": false,"Size": 30,"Nullable": true,"Updatable": true,"AttrName": "ORACLE_USER","Keygeneration": "User","Execute": {"SQL": {"Select": "oracle_user","ImplementationType": "VARCHAR2","Alias": "oracle_user"}},"format": "uppercase"},{"Name": "WebUser","DataType": "Text","Collection": false,"Size": 2000,"Nullable": false,"Updatable": true,"AttrName": "WEB_USER","Keygeneration": "User","Execute": {"SQL": {"Select": "web_user","ImplementationType": "VARCHAR2","Alias": "web_user"}},"format": "uppercase"},{"Name": "UserType","DataType": "Enumeration","SubType": "FndUserType","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "USER_TYPE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "user_type_db","OrderBy": "user_type","ImplementationType": "VARCHAR2","Alias": "user_type"}}},{"Name": "Active","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": true,"AttrName": "ACTIVE","Keygeneration": "U');
   Dbms_Lob.Writeappend(clob_, 2444, 'ser","Execute": {"SQL": {"Select": "active","ImplementationType": "VARCHAR2","Alias": "active"}},"format": "uppercase"},{"Name": "Created","DataType": "Date","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "CREATED","Keygeneration": "User","Execute": {"SQL": {"Select": "created","ImplementationType": "DATE","Alias": "created"}}},{"Name": "LastModified","DataType": "Date","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "LAST_MODIFIED","Keygeneration": "User","Execute": {"SQL": {"Select": "last_modified","ImplementationType": "DATE","Alias": "last_modified"}}},{"Name": "ValidFrom","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "VALID_FROM","Keygeneration": "User","Execute": {"SQL": {"Select": "valid_from","ImplementationType": "DATE","Alias": "valid_from"}}},{"Name": "ValidTo","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "VALID_TO","Keygeneration": "User","Execute": {"SQL": {"Select": "valid_to","ImplementationType": "DATE","Alias": "valid_to"}}},{"Name": "DefaultIdp","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "DEFAULT_IDP","Keygeneration": "User","Execute": {"SQL": {"Select": "default_idp","ImplementationType": "VARCHAR2","Alias": "default_idp"}},"format": "uppercase"},{"Name": "FromScim","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "FROM_SCIM","Keygeneration": "User","Execute": {"SQL": {"Select": "from_scim","ImplementationType": "VARCHAR2","Alias": "from_scim"}},"format": "uppercase"}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"FndUser","Type":"Entity","Name":"FndUser","View":"FND_USER"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''FndUser''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''IDENTITY=''||identity||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"FndUser","Lu":"FndUser","View":"FND_USER"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "BcRepairTyp');
   Dbms_Lob.Writeappend(clob_, 2432, 'e","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairType","View":"BC_REPAIR_TYPE"}]#]"}},"Keys": ["RepairType"],"KeysWhere": "(repair_type = :RepairType)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairType''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''REPAIR_TYPE=''||repair_type||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "RepairType","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": false,"AttrName": "REPAIR_TYPE","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_type","ImplementationType": "VARCHAR2","Alias": "repair_type"}},"format": "uppercase"},{"Name": "Description","DataType": "Text","Collection": false,"Size": 60,"Nullable": false,"Updatable": true,"AttrName": "DESCRIPTION","Keygeneration": "User","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairType","Type":"Entity","Name":"BcRepairType","View":"BC_REPAIR_TYPE"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairType''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''REPAIR_TYPE=''||repair_type||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"BcRepairType');
   Dbms_Lob.Writeappend(clob_, 2438, '","Lu":"BcRepairType","View":"BC_REPAIR_TYPE"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "ConditionCode","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"ConditionCode","View":"CONDITION_CODE"}]#]"}},"Keys": ["ConditionCode"],"KeysWhere": "(condition_code = :ConditionCode)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''ConditionCode''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CONDITION_CODE=''||condition_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "ConditionCode","DataType": "Text","Collection": false,"Size": 10,"Nullable": false,"Updatable": false,"AttrName": "CONDITION_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "condition_code","ImplementationType": "VARCHAR2","Alias": "condition_code"}},"format": "uppercase"},{"Name": "Description","DataType": "Text","Collection": false,"Size": 35,"Nullable": false,"Updatable": true,"AttrName": "DESCRIPTION","Keygeneration": "User","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}},{"Name": "NoteText","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Updatable": true,"AttrName": "NOTE_TEXT","Keygeneration": "User","Execute": {"SQL": {"Select": "note_text","ImplementationType": "VARCHAR2","Alias": "note_text"}}},{"Name": "ConditionCodeType","DataType": "Enumeration","SubType": "ConditionCodeType","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "CONDITION_CODE_TYPE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "condition_code_type_db","OrderBy": "condition_code_type","ImplementationType": "VARCHAR2","Alias": "con');
   Dbms_Lob.Writeappend(clob_, 2438, 'dition_code_type"}}},{"Name": "DefaultAvailControlId","DataType": "Text","Collection": false,"Size": 25,"Nullable": true,"Updatable": true,"AttrName": "DEFAULT_AVAIL_CONTROL_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "default_avail_control_id","ImplementationType": "VARCHAR2","Alias": "default_avail_control_id"}},"format": "uppercase"},{"Name": "ResetRepairValue","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "RESET_REPAIR_VALUE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "reset_repair_value_db","ImplementationType": "VARCHAR2","Alias": "reset_repair_value"}}},{"Name": "ResetOverhaulValue","DataType": "Boolean","Collection": false,"Size": 20,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "RESET_OVERHAUL_VALUE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "reset_overhaul_value_db","ImplementationType": "VARCHAR2","Alias": "reset_overhaul_value"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"ConditionCode","Type":"Entity","Name":"ConditionCode","View":"CONDITION_CODE"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''ConditionCode''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CONDITION_CODE=''||condition_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"ConditionCode","Lu":"ConditionCode","View":"CONDITION_CODE"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "InventoryPart","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"InventoryPart","View":"INVENTORY_PART"}]#]"}},"Keys": ["Contract","PartNo"],"KeysWhere": "(contract = :Contract AND part_no = :PartNo)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType');
   Dbms_Lob.Writeappend(clob_, 2440, '": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''InventoryPart''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CONTRACT=''||contract||''^''||''PART_NO=''||part_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "Contract","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": false,"AttrName": "CONTRACT","Keygeneration": "User","Execute": {"SQL": {"Select": "contract","ImplementationType": "VARCHAR2","Alias": "contract"}},"format": "uppercase"},{"Name": "PartNo","DataType": "Text","Collection": false,"Size": 25,"Nullable": false,"Updatable": false,"AttrName": "PART_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "part_no","ImplementationType": "VARCHAR2","Alias": "part_no"}},"format": "uppercase"},{"Name": "AccountingGroup","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "ACCOUNTING_GROUP","Keygeneration": "User","Execute": {"SQL": {"Select": "accounting_group","ImplementationType": "VARCHAR2","Alias": "accounting_group"}}},{"Name": "AssetClass","DataType": "Text","Collection": false,"Size": 2,"Nullable": false,"Updatable": true,"AttrName": "ASSET_CLASS","Keygeneration": "User","Execute": {"SQL": {"Select": "asset_class","ImplementationType": "VARCHAR2","Alias": "asset_class"}},"format": "uppercase"},{"Name": "CountryOfOrigin","DataType": "Text","Collection": false,"Size": 2,"Nullable": true,"Updatable": true,"AttrName": "COUNTRY_OF_ORIGIN","Keygeneration": "User","Execute": {"SQL": {"Select": "country_of_origin","ImplementationType": "VARCHAR2","Alias": "country_of_origin"}},"format": "uppercase"},{"Name": "HazardCode","DataType": "Text","Collection": false,"Size": 6,"Nullable": true,"Updatable": true,"AttrName": "HAZARD_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "hazard_code","ImplementationType": "VARCHAR2","Alias": "hazard_code"}},"format": "uppercase"},{"Name": "NoteId","DataType": "Number","Collection": false,"Precision": "10","Nullable": true,"');
   Dbms_Lob.Writeappend(clob_, 2450, 'Updatable": false,"AttrName": "NOTE_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "note_id","ImplementationType": "NUMBER","Alias": "note_id"}}},{"Name": "EstimatedMaterialCost","DataType": "Number","Collection": false,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "ESTIMATED_MATERIAL_COST","Keygeneration": "Server","Execute": {"SQL": {"Select": "estimated_material_cost","ImplementationType": "NUMBER","Alias": "estimated_material_cost"}}},{"Name": "PartProductCode","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "PART_PRODUCT_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "part_product_code","ImplementationType": "VARCHAR2","Alias": "part_product_code"}}},{"Name": "PartProductFamily","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "PART_PRODUCT_FAMILY","Keygeneration": "User","Execute": {"SQL": {"Select": "part_product_family","ImplementationType": "VARCHAR2","Alias": "part_product_family"}}},{"Name": "PartStatus","DataType": "Text","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "PART_STATUS","Keygeneration": "User","Execute": {"SQL": {"Select": "part_status","ImplementationType": "VARCHAR2","Alias": "part_status"}},"format": "uppercase"},{"Name": "PlannerBuyer","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "PLANNER_BUYER","Keygeneration": "User","Execute": {"SQL": {"Select": "planner_buyer","ImplementationType": "VARCHAR2","Alias": "planner_buyer"}},"format": "uppercase"},{"Name": "PrimeCommodity","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "PRIME_COMMODITY","Keygeneration": "User","Execute": {"SQL": {"Select": "prime_commodity","ImplementationType": "VARCHAR2","Alias": "prime_commodity"}}},{"Name": "SecondCommodity","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "SECOND_COMMODITY","Keygeneration": "User","Execute": {"SQL": {"Select": "second_commodity","ImplementationType": "VARCHAR2","Alias": "second_commodity"}}},{"Name": "UnitMeas","DataType": "Text","Collection": false,"Size": 10,"Nullable": false,"Updatable": false,"AttrName": "UNIT_MEAS","Keygeneration": "User","Execute": {"SQL": {"Select": "unit_meas","ImplementationType": "VARCHAR2","Alias": "unit_meas"}}},{"Name": "CatchUnitMe');
   Dbms_Lob.Writeappend(clob_, 2450, 'as","DataType": "Text","Collection": false,"Size": 30,"Nullable": true,"Updatable": true,"AttrName": "CATCH_UNIT_MEAS","Keygeneration": "User","Execute": {"SQL": {"Select": "catch_unit_meas","ImplementationType": "VARCHAR2","Alias": "catch_unit_meas"}}},{"Name": "Description","DataType": "Text","Collection": false,"Size": 200,"Nullable": false,"Updatable": true,"AttrName": "DESCRIPTION","Keygeneration": "User","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}},{"Name": "DescriptionCopy","DataType": "Text","Collection": false,"Size": 200,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DESCRIPTION_COPY","Keygeneration": "Server","Execute": {"SQL": {"Select": "description_copy","ImplementationType": "VARCHAR2","Alias": "description_copy"}}},{"Name": "DescriptionInUse","DataType": "Text","Collection": false,"Size": 200,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DESCRIPTION_IN_USE","Keygeneration": "Server","Execute": {"SQL": {"Select": "description_in_use","ImplementationType": "VARCHAR2","Alias": "description_in_use"}}},{"Name": "AbcClass","DataType": "Text","Collection": false,"Size": 1,"Nullable": true,"Updatable": true,"AttrName": "ABC_CLASS","Keygeneration": "User","Execute": {"SQL": {"Select": "abc_class","ImplementationType": "VARCHAR2","Alias": "abc_class"}}},{"Name": "AbcClassLockedUntil","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "ABC_CLASS_LOCKED_UNTIL","Keygeneration": "User","Execute": {"SQL": {"Select": "abc_class_locked_until","ImplementationType": "DATE","Alias": "abc_class_locked_until"}}},{"Name": "CountVariance","DataType": "Number","Collection": false,"Nullable": false,"Insertable": false,"Updatable": true,"AttrName": "COUNT_VARIANCE","Keygeneration": "User","Execute": {"SQL": {"Select": "count_variance","ImplementationType": "NUMBER","Alias": "count_variance"}}},{"Name": "CreateDate","DataType": "Date","Collection": false,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "CREATE_DATE","Keygeneration": "Server","Execute": {"SQL": {"Select": "create_date","ImplementationType": "DATE","Alias": "create_date"}}},{"Name": "CycleCode","DataType": "Enumeration","SubType": "InventoryPartCountType","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "CYCLE_CODE_DB","Keygeneration": "User","Execute": {"SQL": {"Select":');
   Dbms_Lob.Writeappend(clob_, 2450, ' "cycle_code_db","OrderBy": "cycle_code","ImplementationType": "VARCHAR2","Alias": "cycle_code"}}},{"Name": "CyclePeriod","DataType": "Number","Collection": false,"Precision": "3","Nullable": false,"Updatable": true,"AttrName": "CYCLE_PERIOD","Keygeneration": "User","Execute": {"SQL": {"Select": "cycle_period","ImplementationType": "NUMBER","Alias": "cycle_period"}}},{"Name": "DimQuality","DataType": "Text","Collection": false,"Size": 25,"Nullable": true,"Updatable": true,"AttrName": "DIM_QUALITY","Keygeneration": "User","Execute": {"SQL": {"Select": "dim_quality","ImplementationType": "VARCHAR2","Alias": "dim_quality"}}},{"Name": "DurabilityDay","DataType": "Number","Collection": false,"Precision": "4","Nullable": true,"Updatable": true,"AttrName": "DURABILITY_DAY","Keygeneration": "User","Execute": {"SQL": {"Select": "durability_day","ImplementationType": "NUMBER","Alias": "durability_day"}}},{"Name": "ExpectedLeadtime","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "EXPECTED_LEADTIME","Keygeneration": "User","Execute": {"SQL": {"Select": "expected_leadtime","ImplementationType": "NUMBER","Alias": "expected_leadtime"}}},{"Name": "LastActivityDate","DataType": "Date","Collection": false,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "LAST_ACTIVITY_DATE","Keygeneration": "Server","Execute": {"SQL": {"Select": "last_activity_date","ImplementationType": "DATE","Alias": "last_activity_date"}}},{"Name": "LeadTimeCode","DataType": "Enumeration","SubType": "InvPartLeadTimeCode","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "LEAD_TIME_CODE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "lead_time_code_db","OrderBy": "lead_time_code","ImplementationType": "VARCHAR2","Alias": "lead_time_code"}}},{"Name": "ManufLeadtime","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "MANUF_LEADTIME","Keygeneration": "User","Execute": {"SQL": {"Select": "manuf_leadtime","ImplementationType": "NUMBER","Alias": "manuf_leadtime"}}},{"Name": "NoteText","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Updatable": true,"AttrName": "NOTE_TEXT","Keygeneration": "User","Execute": {"SQL": {"Select": "note_text","ImplementationType": "VARCHAR2","Alias": "note_text"}}},{"Name": "OeAllocAssignFlag","DataType": "Enumeration","SubType": "CustOrdReservationType","Collection": false,"');
   Dbms_Lob.Writeappend(clob_, 2450, 'Size": 1,"Nullable": false,"Updatable": true,"AttrName": "OE_ALLOC_ASSIGN_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "oe_alloc_assign_flag_db","OrderBy": "oe_alloc_assign_flag","ImplementationType": "VARCHAR2","Alias": "oe_alloc_assign_flag"}}},{"Name": "OnhandAnalysisFlag","DataType": "Enumeration","SubType": "InventoryPartOnhAnalys","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "ONHAND_ANALYSIS_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "onhand_analysis_flag_db","OrderBy": "onhand_analysis_flag","ImplementationType": "VARCHAR2","Alias": "onhand_analysis_flag"}}},{"Name": "PurchLeadtime","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "PURCH_LEADTIME","Keygeneration": "User","Execute": {"SQL": {"Select": "purch_leadtime","ImplementationType": "NUMBER","Alias": "purch_leadtime"}}},{"Name": "EarliestUltdSupplyDate","DataType": "Date","Collection": false,"Nullable": true,"Insertable": false,"Updatable": true,"AttrName": "EARLIEST_ULTD_SUPPLY_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "earliest_ultd_supply_date","ImplementationType": "DATE","Alias": "earliest_ultd_supply_date"}}},{"Name": "Supersedes","DataType": "Text","Collection": false,"Size": 25,"Nullable": true,"Updatable": true,"AttrName": "SUPERSEDES","Keygeneration": "User","Execute": {"SQL": {"Select": "supersedes","ImplementationType": "VARCHAR2","Alias": "supersedes"}}},{"Name": "SupplyCode","DataType": "Enumeration","SubType": "MaterialRequisSupplySubset1","Collection": false,"Size": 3,"Nullable": false,"Updatable": true,"AttrName": "SUPPLY_CODE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "supply_code_db","OrderBy": "supply_code","ImplementationType": "VARCHAR2","Alias": "supply_code"}}},{"Name": "TypeCode","DataType": "Enumeration","SubType": "InventoryPartType","Collection": false,"Size": 2,"Nullable": false,"Updatable": true,"AttrName": "TYPE_CODE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "type_code_db","OrderBy": "type_code","ImplementationType": "VARCHAR2","Alias": "type_code"}}},{"Name": "CustomsStatNo","DataType": "Text","Collection": false,"Size": 15,"Nullable": true,"Updatable": true,"AttrName": "CUSTOMS_STAT_NO","Keygeneration": "User","Execute": {"SQL": {"Select": "customs_stat_no","ImplementationType": "VARCHAR2","Alias": "customs_stat_no"}},"format": "uppercase"},{"Name": "Type');
   Dbms_Lob.Writeappend(clob_, 2450, 'Designation","DataType": "Text","Collection": false,"Size": 25,"Nullable": true,"Updatable": true,"AttrName": "TYPE_DESIGNATION","Keygeneration": "User","Execute": {"SQL": {"Select": "type_designation","ImplementationType": "VARCHAR2","Alias": "type_designation"}}},{"Name": "ZeroCostFlag","DataType": "Enumeration","SubType": "InventoryPartZeroCost","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "ZERO_COST_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "zero_cost_flag_db","OrderBy": "zero_cost_flag","ImplementationType": "VARCHAR2","Alias": "zero_cost_flag"}}},{"Name": "AvailActivityStatus","DataType": "Enumeration","SubType": "InventoryPartAvailStat","Collection": false,"Size": 9,"Nullable": false,"Updatable": true,"AttrName": "AVAIL_ACTIVITY_STATUS_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "avail_activity_status_db","OrderBy": "avail_activity_status","ImplementationType": "VARCHAR2","Alias": "avail_activity_status"}}},{"Name": "EngAttribute","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "ENG_ATTRIBUTE","Keygeneration": "User","Execute": {"SQL": {"Select": "eng_attribute","ImplementationType": "VARCHAR2","Alias": "eng_attribute"}},"format": "uppercase"},{"Name": "ShortageFlag","DataType": "Enumeration","SubType": "InventoryPartShortage","Collection": false,"Size": 1,"Nullable": false,"Updatable": true,"AttrName": "SHORTAGE_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "shortage_flag_db","OrderBy": "shortage_flag","ImplementationType": "VARCHAR2","Alias": "shortage_flag"}}},{"Name": "ForecastConsumptionFlag","DataType": "Enumeration","SubType": "InvPartForecastConsum","Collection": false,"Size": 30,"Nullable": false,"Updatable": true,"AttrName": "FORECAST_CONSUMPTION_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "forecast_consumption_flag_db","OrderBy": "forecast_consumption_flag","ImplementationType": "VARCHAR2","Alias": "forecast_consumption_flag"}}},{"Name": "StockManagement","DataType": "Enumeration","SubType": "InventoryPartManagement","Collection": false,"Size": 50,"Nullable": false,"Updatable": true,"AttrName": "STOCK_MANAGEMENT_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "stock_management_db","OrderBy": "stock_management","ImplementationType": "VARCHAR2","Alias": "stock_management"}}},{"Name": "IntrastatConvFactor","DataType": "Number","Colle');
   Dbms_Lob.Writeappend(clob_, 2450, 'ction": false,"Nullable": true,"Updatable": true,"AttrName": "INTRASTAT_CONV_FACTOR","Keygeneration": "User","Execute": {"SQL": {"Select": "intrastat_conv_factor","ImplementationType": "NUMBER","Alias": "intrastat_conv_factor"}}},{"Name": "PartCostGroupId","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Updatable": true,"AttrName": "PART_COST_GROUP_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "part_cost_group_id","ImplementationType": "VARCHAR2","Alias": "part_cost_group_id"}}},{"Name": "DopConnection","DataType": "Enumeration","SubType": "DopConnection","Collection": false,"Size": 200,"Nullable": false,"Updatable": true,"AttrName": "DOP_CONNECTION_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "dop_connection_db","OrderBy": "dop_connection","ImplementationType": "VARCHAR2","Alias": "dop_connection"}}},{"Name": "StdNameId","DataType": "Number","Collection": false,"Precision": "10","Nullable": true,"Updatable": true,"AttrName": "STD_NAME_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "std_name_id","ImplementationType": "NUMBER","Alias": "std_name_id"}}},{"Name": "InventoryValuationMethod","DataType": "Enumeration","SubType": "InventoryValueMethod","Collection": false,"Size": 50,"Nullable": false,"Updatable": true,"AttrName": "INVENTORY_VALUATION_METHOD_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "inventory_valuation_method_db","OrderBy": "inventory_valuation_method","ImplementationType": "VARCHAR2","Alias": "inventory_valuation_method"}}},{"Name": "NegativeOnHand","DataType": "Enumeration","SubType": "NegativeOnHand","Collection": false,"Size": 50,"Nullable": false,"Updatable": true,"AttrName": "NEGATIVE_ON_HAND_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "negative_on_hand_db","OrderBy": "negative_on_hand","ImplementationType": "VARCHAR2","Alias": "negative_on_hand"}}},{"Name": "TechnicalCoordinatorId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "TECHNICAL_COORDINATOR_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "technical_coordinator_id","ImplementationType": "VARCHAR2","Alias": "technical_coordinator_id"}},"format": "uppercase"},{"Name": "InvoiceConsideration","DataType": "Enumeration","SubType": "InvoiceConsideration","Collection": false,"Size": 50,"Nullable": false,"Updatable": true,"AttrName": "INVOICE_CONSIDERATION_DB","Keygeneration": "User","Execute": {"S');
   Dbms_Lob.Writeappend(clob_, 2450, 'QL": {"Select": "invoice_consideration_db","OrderBy": "invoice_consideration","ImplementationType": "VARCHAR2","Alias": "invoice_consideration"}}},{"Name": "ActualCostActivated","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "ACTUAL_COST_ACTIVATED","Keygeneration": "User","Execute": {"SQL": {"Select": "actual_cost_activated","ImplementationType": "DATE","Alias": "actual_cost_activated"}}},{"Name": "MaxActualCostUpdate","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "MAX_ACTUAL_COST_UPDATE","Keygeneration": "User","Execute": {"SQL": {"Select": "max_actual_cost_update","ImplementationType": "NUMBER","Alias": "max_actual_cost_update"}},"format": "percentage"},{"Name": "CustWarrantyId","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "CUST_WARRANTY_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "cust_warranty_id","ImplementationType": "NUMBER","Alias": "cust_warranty_id"}}},{"Name": "SupWarrantyId","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "SUP_WARRANTY_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "sup_warranty_id","ImplementationType": "NUMBER","Alias": "sup_warranty_id"}}},{"Name": "RegionOfOrigin","DataType": "Text","Collection": false,"Size": 10,"Nullable": true,"Updatable": true,"AttrName": "REGION_OF_ORIGIN","Keygeneration": "User","Execute": {"SQL": {"Select": "region_of_origin","ImplementationType": "VARCHAR2","Alias": "region_of_origin"}},"format": "uppercase"},{"Name": "InventoryPartCostLevel","DataType": "Enumeration","SubType": "InventoryPartCostLevel","Collection": false,"Size": 50,"Nullable": false,"Updatable": true,"AttrName": "INVENTORY_PART_COST_LEVEL_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "inventory_part_cost_level_db","OrderBy": "inventory_part_cost_level","ImplementationType": "VARCHAR2","Alias": "inventory_part_cost_level"}}},{"Name": "ExtServiceCostMethod","DataType": "Enumeration","SubType": "ExtServiceCostMethod","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "EXT_SERVICE_COST_METHOD_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "ext_service_cost_method_db","OrderBy": "ext_service_cost_method","ImplementationType": "VARCHAR2","Alias": "ext_service_cost_method"}}},{"Name": "SupplyChainPartGroup","DataType": "Text","Collection": false,"Size":');
   Dbms_Lob.Writeappend(clob_, 2450, ' 20,"Nullable": true,"Updatable": true,"AttrName": "SUPPLY_CHAIN_PART_GROUP","Keygeneration": "User","Execute": {"SQL": {"Select": "supply_chain_part_group","ImplementationType": "VARCHAR2","Alias": "supply_chain_part_group"}},"format": "uppercase"},{"Name": "AutomaticCapabilityCheck","DataType": "Enumeration","SubType": "CapabilityCheckAllocate","Collection": false,"Size": 50,"Nullable": false,"Updatable": true,"AttrName": "AUTOMATIC_CAPABILITY_CHECK_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "automatic_capability_check_db","OrderBy": "automatic_capability_check","ImplementationType": "VARCHAR2","Alias": "automatic_capability_check"}}},{"Name": "InputUnitMeasGroupId","DataType": "Text","Collection": false,"Size": 30,"Nullable": true,"Updatable": true,"AttrName": "INPUT_UNIT_MEAS_GROUP_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "input_unit_meas_group_id","ImplementationType": "VARCHAR2","Alias": "input_unit_meas_group_id"}},"format": "uppercase"},{"Name": "DopNetting","DataType": "Enumeration","SubType": "DopNetting","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "DOP_NETTING_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "dop_netting_db","OrderBy": "dop_netting","ImplementationType": "VARCHAR2","Alias": "dop_netting"}}},{"Name": "CoReserveOnhAnalysFlag","DataType": "Enumeration","SubType": "InventoryPartOnhAnalys","Collection": false,"Size": 20,"Nullable": false,"Updatable": true,"AttrName": "CO_RESERVE_ONH_ANALYS_FLAG_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "co_reserve_onh_analys_flag_db","OrderBy": "co_reserve_onh_analys_flag","ImplementationType": "VARCHAR2","Alias": "co_reserve_onh_analys_flag"}}},{"Name": "QtyCalcRounding","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "QTY_CALC_ROUNDING","Keygeneration": "User","Execute": {"SQL": {"Select": "qty_calc_rounding","ImplementationType": "NUMBER","Alias": "qty_calc_rounding"}}},{"Name": "LifecycleStage","DataType": "Enumeration","SubType": "InvPartLifecycleStage","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "LIFECYCLE_STAGE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "lifecycle_stage_db","OrderBy": "lifecycle_stage","ImplementationType": "VARCHAR2","Alias": "lifecycle_stage"}}},{"Name": "LifeStageLockedUntil","DataType": "Date","Collection": false,"Nullable": true,"Updatable": tr');
   Dbms_Lob.Writeappend(clob_, 2450, 'ue,"AttrName": "LIFE_STAGE_LOCKED_UNTIL","Keygeneration": "User","Execute": {"SQL": {"Select": "life_stage_locked_until","ImplementationType": "DATE","Alias": "life_stage_locked_until"}}},{"Name": "FrequencyClass","DataType": "Enumeration","SubType": "InvPartFrequencyClass","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "FREQUENCY_CLASS_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "frequency_class_db","OrderBy": "frequency_class","ImplementationType": "VARCHAR2","Alias": "frequency_class"}}},{"Name": "FreqClassLockedUntil","DataType": "Date","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "FREQ_CLASS_LOCKED_UNTIL","Keygeneration": "User","Execute": {"SQL": {"Select": "freq_class_locked_until","ImplementationType": "DATE","Alias": "freq_class_locked_until"}}},{"Name": "FirstStatIssueDate","DataType": "Date","Collection": false,"Nullable": true,"Insertable": false,"Updatable": true,"AttrName": "FIRST_STAT_ISSUE_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "first_stat_issue_date","ImplementationType": "DATE","Alias": "first_stat_issue_date"}}},{"Name": "LatestStatIssueDate","DataType": "Date","Collection": false,"Nullable": true,"Insertable": false,"Updatable": true,"AttrName": "LATEST_STAT_ISSUE_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "latest_stat_issue_date","ImplementationType": "DATE","Alias": "latest_stat_issue_date"}}},{"Name": "DeclineDate","DataType": "Date","Collection": false,"Nullable": true,"Insertable": false,"Updatable": true,"AttrName": "DECLINE_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "decline_date","ImplementationType": "DATE","Alias": "decline_date"}}},{"Name": "ExpiredDate","DataType": "Date","Collection": false,"Nullable": true,"Insertable": false,"Updatable": true,"AttrName": "EXPIRED_DATE","Keygeneration": "User","Execute": {"SQL": {"Select": "expired_date","ImplementationType": "DATE","Alias": "expired_date"}}},{"Name": "DeclineIssueCounter","DataType": "Number","Collection": false,"Nullable": true,"Insertable": false,"Updatable": true,"AttrName": "DECLINE_ISSUE_COUNTER","Keygeneration": "User","Execute": {"SQL": {"Select": "decline_issue_counter","ImplementationType": "NUMBER","Alias": "decline_issue_counter"}}},{"Name": "ExpiredIssueCounter","DataType": "Number","Collection": false,"Nullable": true,"Insertable": false,"Updatable": true,"AttrName": "EXPIRED_ISSUE_COUNTER"');
   Dbms_Lob.Writeappend(clob_, 2450, ',"Keygeneration": "User","Execute": {"SQL": {"Select": "expired_issue_counter","ImplementationType": "NUMBER","Alias": "expired_issue_counter"}}},{"Name": "MinDurabDaysCoDeliv","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "MIN_DURAB_DAYS_CO_DELIV","Keygeneration": "User","Execute": {"SQL": {"Select": "min_durab_days_co_deliv","ImplementationType": "NUMBER","Alias": "min_durab_days_co_deliv"}}},{"Name": "MinDurabDaysPlanning","DataType": "Number","Collection": false,"Nullable": false,"Updatable": true,"AttrName": "MIN_DURAB_DAYS_PLANNING","Keygeneration": "User","Execute": {"SQL": {"Select": "min_durab_days_planning","ImplementationType": "NUMBER","Alias": "min_durab_days_planning"}}},{"Name": "AutoCreatedGtin","DataType": "Text","Collection": false,"Size": 5,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "AUTO_CREATED_GTIN","Keygeneration": "Server","Execute": {"SQL": {"Select": "auto_created_gtin","ImplementationType": "VARCHAR2","Alias": "auto_created_gtin"}},"format": "uppercase"},{"Name": "StorageWidthRequirement","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "STORAGE_WIDTH_REQUIREMENT","Keygeneration": "User","Execute": {"SQL": {"Select": "storage_width_requirement","ImplementationType": "NUMBER","Alias": "storage_width_requirement"}}},{"Name": "StorageHeightRequirement","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "STORAGE_HEIGHT_REQUIREMENT","Keygeneration": "User","Execute": {"SQL": {"Select": "storage_height_requirement","ImplementationType": "NUMBER","Alias": "storage_height_requirement"}}},{"Name": "StorageDepthRequirement","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "STORAGE_DEPTH_REQUIREMENT","Keygeneration": "User","Execute": {"SQL": {"Select": "storage_depth_requirement","ImplementationType": "NUMBER","Alias": "storage_depth_requirement"}}},{"Name": "StorageVolumeRequirement","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "STORAGE_VOLUME_REQUIREMENT","Keygeneration": "User","Execute": {"SQL": {"Select": "storage_volume_requirement","ImplementationType": "NUMBER","Alias": "storage_volume_requirement"}}},{"Name": "StorageWeightRequirement","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "STORAGE_WEIGHT_REQUIREMENT","Keygener');
   Dbms_Lob.Writeappend(clob_, 2450, 'ation": "User","Execute": {"SQL": {"Select": "storage_weight_requirement","ImplementationType": "NUMBER","Alias": "storage_weight_requirement"}}},{"Name": "MinStorageTemperature","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "MIN_STORAGE_TEMPERATURE","Keygeneration": "User","Execute": {"SQL": {"Select": "min_storage_temperature","ImplementationType": "NUMBER","Alias": "min_storage_temperature"}}},{"Name": "MaxStorageTemperature","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "MAX_STORAGE_TEMPERATURE","Keygeneration": "User","Execute": {"SQL": {"Select": "max_storage_temperature","ImplementationType": "NUMBER","Alias": "max_storage_temperature"}}},{"Name": "MinStorageHumidity","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "MIN_STORAGE_HUMIDITY","Keygeneration": "User","Execute": {"SQL": {"Select": "min_storage_humidity","ImplementationType": "NUMBER","Alias": "min_storage_humidity"}}},{"Name": "MaxStorageHumidity","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "MAX_STORAGE_HUMIDITY","Keygeneration": "User","Execute": {"SQL": {"Select": "max_storage_humidity","ImplementationType": "NUMBER","Alias": "max_storage_humidity"}}},{"Name": "StandardPutawayQty","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "STANDARD_PUTAWAY_QTY","Keygeneration": "User","Execute": {"SQL": {"Select": "standard_putaway_qty","ImplementationType": "NUMBER","Alias": "standard_putaway_qty"}}},{"Name": "PutawayZoneRefillOption","DataType": "Enumeration","SubType": "PutawayZoneRefillOption","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "PUTAWAY_ZONE_REFILL_OPTION_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "putaway_zone_refill_option_db","OrderBy": "putaway_zone_refill_option","ImplementationType": "VARCHAR2","Alias": "putaway_zone_refill_option"}}},{"Name": "ResetConfigStdCost","DataType": "Boolean","Collection": false,"Size": 5,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "RESET_CONFIG_STD_COST_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "reset_config_std_cost_db","ImplementationType": "VARCHAR2","Alias": "reset_config_std_cost"}}},{"Name": "MandatoryExpirationDate","DataType": "Boolean","Collection": false,"Size": 5,"TrueValue": "TR');
   Dbms_Lob.Writeappend(clob_, 2440, 'UE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "MANDATORY_EXPIRATION_DATE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "mandatory_expiration_date_db","ImplementationType": "VARCHAR2","Alias": "mandatory_expiration_date"}}},{"Name": "ExclShipPackProposal","DataType": "Boolean","Collection": false,"Size": 5,"TrueValue": "TRUE","FalseValue": "FALSE","Nullable": false,"Updatable": true,"AttrName": "EXCL_SHIP_PACK_PROPOSAL_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "excl_ship_pack_proposal_db","ImplementationType": "VARCHAR2","Alias": "excl_ship_pack_proposal"}}},{"Name": "Company","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "COMPANY","Keygeneration": "Server","Execute": {"SQL": {"Select": "company","ImplementationType": "VARCHAR2","Alias": "company"}},"format": "uppercase"},{"Name": "StatisticalCode","DataType": "Text","Collection": false,"Size": 15,"Nullable": true,"Updatable": true,"AttrName": "STATISTICAL_CODE","Keygeneration": "User","Execute": {"SQL": {"Select": "statistical_code","ImplementationType": "VARCHAR2","Alias": "statistical_code"}}},{"Name": "AcquisitionOrigin","DataType": "Number","Collection": false,"Nullable": true,"Updatable": true,"AttrName": "ACQUISITION_ORIGIN","Keygeneration": "User","Execute": {"SQL": {"Select": "acquisition_origin","ImplementationType": "NUMBER","Alias": "acquisition_origin"}}},{"Name": "AcquisitionReasonId","DataType": "Text","Collection": false,"Size": 20,"Nullable": true,"Updatable": true,"AttrName": "ACQUISITION_REASON_ID","Keygeneration": "User","Execute": {"SQL": {"Select": "acquisition_reason_id","ImplementationType": "VARCHAR2","Alias": "acquisition_reason_id"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"InventoryPart","Type":"Entity","Name":"InventoryPart","View":"INVENTORY_PART"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''InventoryPart''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''CONTRACT=''||contract||''^''||''PART_NO=''||part_no||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_');
   Dbms_Lob.Writeappend(clob_, 2438, 'Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"InventoryPart","Lu":"InventoryPart","View":"INVENTORY_PART"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "BcRepairLineAction","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairLineAction","View":"BC_REPAIR_LINE_ACTION"}]#]"}},"Keys": ["RepairLineAction"],"KeysWhere": "(repair_line_action = :RepairLineAction)","Attributes": [{"Name": "ETag","DataType": "ETag","Collection": false,"Size": 128,"Nullable": true,"Execute": {"SQL": {"Select": "''W/\"''||objid||'':''||objversion||''\"''","ImplementationType": "VARCHAR2","Alias": "etag"}}},{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairLineAction''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''REPAIR_LINE_ACTION=''||repair_line_action||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "Server","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "RepairLineAction","DataType": "Text","Collection": false,"Size": 20,"Nullable": false,"Updatable": false,"AttrName": "REPAIR_LINE_ACTION","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_line_action","ImplementationType": "VARCHAR2","Alias": "repair_line_action"}},"format": "uppercase"},{"Name": "Contract","DataType": "Text","Collection": false,"Size": 5,"Nullable": false,"Updatable": false,"AttrName": "CONTRACT","Keygeneration": "User","Execute": {"SQL": {"Select": "contract","ImplementationType": "VARCHAR2","Alias": "contract"}},"format": "uppercase"},{"Name": "RepairLineActionDesc","DataType": "Text","Collection": false,"Size": 60,"Nullable": true,"Updatable": true,"AttrName": "REPAIR_LINE_ACTION_DESC","Keygeneration": "User","Execute": {"SQL": {"Select": "repair_line_action_desc","ImplementationType": "VARCHAR2","Alias": "repair_line_action_desc"}}},{"Name": "ActionType","DataType": "Enumeration","SubType": "BcLineActionType","Collection": false,"Size": 20,"Nullable": false,"Updatable": ');
   Dbms_Lob.Writeappend(clob_, 2438, 'true,"AttrName": "ACTION_TYPE_DB","Keygeneration": "User","Execute": {"SQL": {"Select": "action_type_db","OrderBy": "action_type","ImplementationType": "VARCHAR2","Alias": "action_type"}}},{"Name": "DaysBeforeOverdue","DataType": "Number","Collection": false,"Precision": "3","Nullable": true,"Updatable": true,"AttrName": "DAYS_BEFORE_OVERDUE","Keygeneration": "User","Execute": {"SQL": {"Select": "days_before_overdue","ImplementationType": "NUMBER","Alias": "days_before_overdue"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":"BcRepairLineAction","Type":"Entity","Name":"BcRepairLineAction","View":"BC_REPAIR_LINE_ACTION"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''BcRepairLineAction''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''REPAIR_LINE_ACTION=''||repair_line_action||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"BcRepairLineAction","Lu":"BcRepairLineAction","View":"BC_REPAIR_LINE_ACTION"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "Lookup_IsoCurrency_EntityType","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":null,"View":"ISO_CURRENCY"}]#]"}},"Keys": ["Id"],"KeysWhere": "(currency_code = :Id)","Attributes": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Lookup_IsoCurrency''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ID=''||currency_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "User","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "Id","DataType": "Text","Collection": false,"Nullable": true,"Insertable": false,"Updatable": false,"A');
   Dbms_Lob.Writeappend(clob_, 2438, 'ttrName": "ID","Keygeneration": "UserOrServer","Execute": {"SQL": {"Select": "currency_code","ImplementationType": "VARCHAR2","Alias": "id"}}},{"Name": "Description","DataType": "Text","Collection": false,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DESCRIPTION","Keygeneration": "UserOrServer","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":null,"Type":"Query","Name":"Lookup_IsoCurrency","View":"ISO_CURRENCY"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Lookup_IsoCurrency''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ID=''||currency_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"Lookup_IsoCurrency","Lu":null,"View":"ISO_CURRENCY"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "Lookup_IsoUnit_EntityType","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":null,"View":"ISO_UNIT"}]#]"}},"Keys": ["Id"],"KeysWhere": "(unit_code = :Id)","Attributes": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Lookup_IsoUnit''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ID=''||unit_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "User","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "Id","DataType": "Text","Collection": false,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "ID","Keygeneration": "UserOrServer","Execute": {"SQL": {"Select": "unit_code","ImplementationType": "VARCHAR2","Alias": "id"}}},{"Name": "Descrip');
   Dbms_Lob.Writeappend(clob_, 2438, 'tion","DataType": "Text","Collection": false,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DESCRIPTION","Keygeneration": "UserOrServer","Execute": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":null,"Type":"Query","Name":"Lookup_IsoUnit","View":"ISO_UNIT"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Lookup_IsoUnit''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ID=''||unit_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"Lookup_IsoUnit","Lu":null,"View":"ISO_UNIT"}]#]],"CRUD": [],"Actions": [],"Functions": []},{"Name": "Lookup_IsoCountry_EntityType","SupportWarnings": false,"Execute": {"SQL": {"From": "[#[callback:Custom_Object_Proxy_SYS.Server_View_Metadata:{"Projection":"BcRcoHandling","Lu":null,"View":"ISO_COUNTRY"}]#]"}},"Keys": ["Id"],"KeysWhere": "(country_code = :Id)","Attributes": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Lookup_IsoCountry''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ID=''||country_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}},{"Name": "Objgrants","DataType": "Text","Collection": false,"Size": 2000,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "OBJGRANTS","Keygeneration": "User","Execute": {"SQL": {"Select": "NULL","ImplementationType": "VARCHAR2","Alias": "objgrants"}}},{"Name": "Id","DataType": "Text","Collection": false,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "ID","Keygeneration": "UserOrServer","Execute": {"SQL": {"Select": "country_code","ImplementationType": "VARCHAR2","Alias": "id"}}},{"Name": "Description","DataType": "Text","Collection": false,"Nullable": true,"Insertable": false,"Updatable": false,"AttrName": "DESCRIPTION","Keygeneration": "UserOrServer","Execut');
   Dbms_Lob.Writeappend(clob_, 911, 'e": {"SQL": {"Select": "description","ImplementationType": "VARCHAR2","Alias": "description"}}}[#[jsoncallback:Custom_Object_Proxy_SYS.Server_Attribute_Metadata:{"Projection":"BcRcoHandling","Lu":null,"Type":"Query","Name":"Lookup_IsoCountry","View":"ISO_COUNTRY"}]#]],"Computed": [],"Annotations": [{"Name": "luname","DataType": "Text","Collection": false,"Size": 80,"Nullable": true,"Execute": {"SQL": {"Select": "''Lookup_IsoCountry''","ImplementationType": "VARCHAR2","Alias": "luname"}}},{"Name": "keyref","DataType": "Text","Collection": false,"Size": 4000,"Nullable": true,"Execute": {"SQL": {"Select": "''ID=''||country_code||''^''","ImplementationType": "VARCHAR2","Alias": "keyref"}}}],"Navigation": [[#[jsoncallback:Custom_Object_Proxy_Sys.Server_Entity_Nav_Metadata:{"Projection":"BcRcoHandling","Entity":"Lookup_IsoCountry","Lu":null,"View":"ISO_COUNTRY"}]#]],"CRUD": [],"Actions": [],"Functions": []}]}}');
   Model_Design_SYS.Add_Model_Api_Doc_Template(header_, clob_);
   COMMIT;
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Creating Bc_Rco_Handling_SVC specification

-- [IFS COMPLETE BLOCK PACKAGE Bc_Rco_Handling_SVC]
CREATE OR REPLACE PACKAGE Bc_Rco_Handling_SVC IS

module_  CONSTANT VARCHAR2(25)  := 'BCRCO';
lu_name_ CONSTANT VARCHAR2(250) := 'BcRcoHandling';
lu_type_ CONSTANT VARCHAR2(25)  := 'Projection';

-----------------------------------------------------------------------------
---------------------------- PUBLIC DECLARATIONS ----------------------------
-----------------------------------------------------------------------------

TYPE Entity_Dec IS RECORD (
   etag                           VARCHAR2(100),
   info                           VARCHAR2(4000),
   attr                           VARCHAR2(32000));

TYPE Entity_Small_Dec IS RECORD (
   etag                           VARCHAR2(100),
   info                           VARCHAR2(4000),
   attr                           VARCHAR2(4000));

TYPE Entity_Small_Drr      IS TABLE OF Entity_Small_Dec;

TYPE Entity_Drr      IS TABLE OF Entity_Dec;

TYPE Objid_Arr       IS TABLE OF VARCHAR2(100);

TYPE Empty_Art       IS TABLE OF VARCHAR2(1);

TYPE Boolean_Arr     IS TABLE OF BOOLEAN;

TYPE Boolean_Art     IS TABLE OF VARCHAR2(5);

TYPE Number_Arr      IS TABLE OF NUMBER;

TYPE Text_Arr        IS TABLE OF VARCHAR2(4000);

TYPE Stream_Data_Rec IS RECORD (
   file_name                           VARCHAR2(100),
   mime_type                           VARCHAR2(100),
   stream_data                         BLOB);

TYPE Stream_Data_Arr IS TABLE OF Stream_Data_Rec;

TYPE Stream_Info_Rec IS RECORD (
   file_name                           VARCHAR2(100),
   mime_type                           VARCHAR2(100));

TYPE Stream_Text_Data_Rec IS RECORD (
   file_name                           VARCHAR2(100),
   mime_type                           VARCHAR2(100),
   stream_data                         CLOB);

TYPE Copy_Values_Rec IS RECORD (
   modified_source                VARCHAR2(32000));


-----------------------------------------------------------------------------
------------------------- METADATA PROVIDER METHODS -------------------------
-----------------------------------------------------------------------------

FUNCTION Verify_Metadata_Sql_Content_ (
   metadata_version_ IN VARCHAR2 ) RETURN VARCHAR2;

PROCEDURE Verify_Metadata_Plsql_Content_ (
   metadata_version_ IN VARCHAR2 );

FUNCTION Get_Metadata_Content_ (
   context_ IN VARCHAR2 DEFAULT NULL ) RETURN CLOB;

FUNCTION Get_Metadata_Version_ (
   context_ IN VARCHAR2 DEFAULT NULL ) RETURN VARCHAR2;

FUNCTION Get_Metadata_Category_ (
   context_ IN VARCHAR2 DEFAULT NULL ) RETURN VARCHAR2;

FUNCTION Get_Metadata_Service_Group_ (
   context_ IN VARCHAR2 DEFAULT NULL ) RETURN VARCHAR2;

-----------------------------------------------------------------------------
------------------------------- GLOBAL METHODS ------------------------------
-----------------------------------------------------------------------------
--@PoReadOnly(Do_Create_New_Cust_Order)
PROCEDURE Do_Create_New_Cust_Order(customer_id_ IN VARCHAR2, rco_no_ IN NUMBER, contract_ IN VARCHAR2, currency_ IN VARCHAR2, delivery_address_id_ IN VARCHAR2, unbound## IN VARCHAR2);
--@PoReadOnly(Do_Refresh_Page)
FUNCTION Do_Refresh_Page(unbound## IN VARCHAR2) RETURN Text_Arr;

--@PoReadOnly(Rd_Get_Def_Infolog_Part)
FUNCTION Rd_Get_Def_Infolog_Part(rco_line_ IN NUMBER, rco_no_ IN NUMBER, unbound## IN VARCHAR2) RETURN Text_Arr PIPELINED;

--@PoReadOnly(Rd_Get_Def_Infolog_Part_Site)
FUNCTION Rd_Get_Def_Infolog_Part_Site(rco_line_ IN NUMBER, rco_no_ IN NUMBER, unbound## IN VARCHAR2) RETURN Text_Arr PIPELINED;

--@PoReadOnly(Rd_Get_Default_Address)
FUNCTION Rd_Get_Default_Address(customer_id_ IN VARCHAR2, address_type_ IN VARCHAR2, unbound## IN VARCHAR2) RETURN Text_Arr PIPELINED;

--@PoReadOnly(Rd_Get_Owner_Id)
FUNCTION Rd_Get_Owner_Id(rco_no_ IN NUMBER, unbound## IN VARCHAR2) RETURN Text_Arr PIPELINED;

-----------------------------------------------------------------------------
--------------------- METHODS FOR BC REPAIR CENTER ORDER --------------------
-----------------------------------------------------------------------------


--@PoReadOnly(CRUD_Default)
FUNCTION CRUD_Default(attr_ IN VARCHAR2 DEFAULT NULL, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Small_Drr PIPELINED;

--@PoReadOnly(CRUD_Default_Copy)
FUNCTION CRUD_Default_Copy(values_ IN Copy_Values_Rec, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Dec;

FUNCTION CRUD_Default_Copy(etag_ IN VARCHAR2, rco_no_ IN NUMBER, values_ IN Copy_Values_Rec, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Dec;

--@PoReadOnly(CRUD_Create)
FUNCTION CRUD_Create(attr_ IN VARCHAR2, action_ IN VARCHAR2, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Dec;

--@PoReadOnly(CRUD_Update)
FUNCTION CRUD_Update(etag_ IN VARCHAR2, rco_no_ IN NUMBER, attr_ IN VARCHAR2, action$_ IN VARCHAR2, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Dec;

--@PoReadOnly(CRUD_Delete)
FUNCTION CRUD_Delete(etag_ IN VARCHAR2, rco_no_ IN NUMBER, action$_ IN VARCHAR2, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Dec;

--@PoReadOnly(Ev_Cancel)
FUNCTION Ev_Cancel(etag_ IN VARCHAR2, rco_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Small_Drr;

--@PoReadOnly(Ev_Release)
FUNCTION Ev_Release(etag_ IN VARCHAR2, rco_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Small_Drr;

--@PoReadOnly(Ev_Start)
FUNCTION Ev_Start(etag_ IN VARCHAR2, rco_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Small_Drr;

--@PoReadOnly(Ev_Complete)
FUNCTION Ev_Complete(etag_ IN VARCHAR2, rco_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Small_Drr;

--@PoReadOnly(Ev_Close)
FUNCTION Ev_Close(etag_ IN VARCHAR2, rco_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Small_Drr;

--@PoReadOnly(Ev_Reopen)
FUNCTION Ev_Reopen(etag_ IN VARCHAR2, rco_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Small_Drr;

-----------------------------------------------------------------------------
------------------------- METHODS FOR BC REPAIR LINE ------------------------
-----------------------------------------------------------------------------


--@PoReadOnly(CRUD_Default)
FUNCTION CRUD_Default(attr_ IN VARCHAR2 DEFAULT NULL, bc_repair_line## IN VARCHAR2) RETURN Entity_Small_Drr PIPELINED;

--@PoReadOnly(CRUD_Default_Copy)
FUNCTION CRUD_Default_Copy(values_ IN Copy_Values_Rec, bc_repair_line## IN VARCHAR2) RETURN Entity_Dec;

FUNCTION CRUD_Default_Copy(etag_ IN VARCHAR2, rco_no_ IN NUMBER, repair_line_no_ IN NUMBER, values_ IN Copy_Values_Rec, bc_repair_line## IN VARCHAR2) RETURN Entity_Dec;

--@PoReadOnly(CRUD_Create)
FUNCTION CRUD_Create(attr_ IN VARCHAR2, action_ IN VARCHAR2, bc_repair_line## IN VARCHAR2) RETURN Entity_Dec;

--@PoReadOnly(CRUD_Update)
FUNCTION CRUD_Update(etag_ IN VARCHAR2, rco_no_ IN NUMBER, repair_line_no_ IN NUMBER, attr_ IN VARCHAR2, action$_ IN VARCHAR2, bc_repair_line## IN VARCHAR2) RETURN Entity_Dec;

--@PoReadOnly(CRUD_Delete)
FUNCTION CRUD_Delete(etag_ IN VARCHAR2, rco_no_ IN NUMBER, repair_line_no_ IN NUMBER, action$_ IN VARCHAR2, bc_repair_line## IN VARCHAR2) RETURN Entity_Dec;

--@PoReadOnly(Ev_Cancel)
FUNCTION Ev_Cancel(etag_ IN VARCHAR2, rco_no_ IN NUMBER, repair_line_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_line## IN VARCHAR2) RETURN Entity_Small_Drr;

--@PoReadOnly(Ev_Receive)
FUNCTION Ev_Receive(etag_ IN VARCHAR2, rco_no_ IN NUMBER, repair_line_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_line## IN VARCHAR2) RETURN Entity_Small_Drr;

--@PoReadOnly(Ev_Process)
FUNCTION Ev_Process(etag_ IN VARCHAR2, rco_no_ IN NUMBER, repair_line_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_line## IN VARCHAR2) RETURN Entity_Small_Drr;

--@PoReadOnly(Ev_Repair_Start)
FUNCTION Ev_Repair_Start(etag_ IN VARCHAR2, rco_no_ IN NUMBER, repair_line_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_line## IN VARCHAR2) RETURN Entity_Small_Drr;

--@PoReadOnly(Ev_Repair_Complete)
FUNCTION Ev_Repair_Complete(etag_ IN VARCHAR2, rco_no_ IN NUMBER, repair_line_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_line## IN VARCHAR2) RETURN Entity_Small_Drr;

--@PoReadOnly(Ev_Ship)
FUNCTION Ev_Ship(etag_ IN VARCHAR2, rco_no_ IN NUMBER, repair_line_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_line## IN VARCHAR2) RETURN Entity_Small_Drr;

-----------------------------------------------------------------------------
-------------------------- METHODS FOR BC LOG INFO --------------------------
-----------------------------------------------------------------------------


--@PoReadOnly(CRUD_Default)
FUNCTION CRUD_Default(attr_ IN VARCHAR2 DEFAULT NULL, bc_log_info## IN VARCHAR2) RETURN Entity_Small_Drr PIPELINED;

--@PoReadOnly(CRUD_Default_Copy)
FUNCTION CRUD_Default_Copy(values_ IN Copy_Values_Rec, bc_log_info## IN VARCHAR2) RETURN Entity_Dec;

FUNCTION CRUD_Default_Copy(etag_ IN VARCHAR2, rco_no_ IN NUMBER, log_info_id_ IN NUMBER, values_ IN Copy_Values_Rec, bc_log_info## IN VARCHAR2) RETURN Entity_Dec;

--@PoReadOnly(CRUD_Create)
FUNCTION CRUD_Create(attr_ IN VARCHAR2, action_ IN VARCHAR2, bc_log_info## IN VARCHAR2) RETURN Entity_Dec;

--@PoReadOnly(CRUD_Update)
FUNCTION CRUD_Update(etag_ IN VARCHAR2, rco_no_ IN NUMBER, log_info_id_ IN NUMBER, attr_ IN VARCHAR2, action$_ IN VARCHAR2, bc_log_info## IN VARCHAR2) RETURN Entity_Dec;

--@PoReadOnly(CRUD_Delete)
FUNCTION CRUD_Delete(etag_ IN VARCHAR2, rco_no_ IN NUMBER, log_info_id_ IN NUMBER, action$_ IN VARCHAR2, bc_log_info## IN VARCHAR2) RETURN Entity_Dec;

-----------------------------------------------------------------------------
------------------------- METHODS FOR CUSTOMER INFO -------------------------
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
--------------------- METHODS FOR CUSTOMER INFO ADDRESS ---------------------
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
-------------------------- METHODS FOR ISO CURRENCY -------------------------
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
------------------------------ METHODS FOR SITE -----------------------------
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
------------------------- METHODS FOR CUSTOMER ORDER ------------------------
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
---------------------------- METHODS FOR FND USER ---------------------------
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
------------------------- METHODS FOR BC REPAIR TYPE ------------------------
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
------------------------- METHODS FOR CONDITION CODE ------------------------
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
------------------------- METHODS FOR INVENTORY PART ------------------------
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
--------------------- METHODS FOR BC REPAIR LINE ACTION ---------------------
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
---------------------- METHODS FOR LOOKUP ISO CURRENCY ----------------------
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
------------------------ METHODS FOR LOOKUP ISO UNIT ------------------------
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
----------------------- METHODS FOR LOOKUP ISO COUNTRY ----------------------
-----------------------------------------------------------------------------


END Bc_Rco_Handling_SVC;
-- [END IFS COMPLETE BLOCK]
/
SHOW ERROR

PROMPT Creating Bc_Rco_Handling_SVC implementation

-- [IFS COMPLETE BLOCK PACKAGEBODY Bc_Rco_Handling_SVC]
CREATE OR REPLACE PACKAGE BODY Bc_Rco_Handling_SVC IS

-----------------------------------------------------------------------------
---------------------------- PRIVATE DECLARATIONS ---------------------------
-----------------------------------------------------------------------------

TYPE Bc_Repair_Center_Order_Rec IS RECORD (
   objid                          VARCHAR2(4000),
   objversion                     VARCHAR2(4000),
   objinfo                        VARCHAR2(4000),
   objstate                       VARCHAR2(100),
   objgrants                      VARCHAR2(2000),
   rco_no                         NUMBER,
   customer_id                    VARCHAR2(20),
   customer_order_no              VARCHAR2(12),
   doc_address_id                 VARCHAR2(50),
   delivery_address_id            VARCHAR2(50),
   contract                       VARCHAR2(5),
   currency                       VARCHAR2(3),
   date_created                   DATE,
   reported_by                    VARCHAR2(30));

TYPE Bc_Repair_Center_Order_Default_Copy_Rec IS RECORD (
   objstate                       VARCHAR2(100),
   objgrants                      VARCHAR2(2000),
   rco_no                         NUMBER,
   customer_id                    VARCHAR2(20),
   customer_order_no              VARCHAR2(12),
   doc_address_id                 VARCHAR2(50),
   delivery_address_id            VARCHAR2(50),
   contract                       VARCHAR2(5),
   currency                       VARCHAR2(3),
   date_created                   DATE,
   reported_by                    VARCHAR2(30));

TYPE Bc_Repair_Center_Order_Key IS RECORD (
   rco_no                         NUMBER);

TYPE Bc_Repair_Line_Rec IS RECORD (
   objid                          VARCHAR2(4000),
   objversion                     VARCHAR2(4000),
   objinfo                        VARCHAR2(4000),
   objstate                       VARCHAR2(100),
   objgrants                      VARCHAR2(2000),
   rco_no                         NUMBER,
   repair_line_no                 NUMBER,
   date_entered                   DATE,
   repair_site                    VARCHAR2(5),
   part_number                    VARCHAR2(25),
   quantity                       NUMBER,
   quantity_received              NUMBER,
   condition_code                 VARCHAR2(10),
   serial_no                      VARCHAR2(50),
   ownership_code                 VARCHAR2(100),
   owner_id                       VARCHAR2(20),
   repair_line_action             VARCHAR2(20),
   repair_type                    VARCHAR2(20),
   customer_fault_code            VARCHAR2(20),
   note_text                      VARCHAR2(2000),
   note_id                        VARCHAR2(10),
   billable_or_warranty           VARCHAR2(100),
   manufacturer_warranty          BOOLEAN,
   repair_warranty                BOOLEAN,
   warranty_validated             BOOLEAN,
   processing_fee                 NUMBER,
   required_start                 DATE);

TYPE Bc_Repair_Line_Default_Copy_Rec IS RECORD (
   objstate                       VARCHAR2(100),
   objgrants                      VARCHAR2(2000),
   rco_no                         NUMBER,
   repair_line_no                 NUMBER,
   date_entered                   DATE,
   repair_site                    VARCHAR2(5),
   part_number                    VARCHAR2(25),
   quantity                       NUMBER,
   quantity_received              NUMBER,
   condition_code                 VARCHAR2(10),
   serial_no                      VARCHAR2(50),
   ownership_code                 VARCHAR2(100),
   owner_id                       VARCHAR2(20),
   repair_line_action             VARCHAR2(20),
   repair_type                    VARCHAR2(20),
   customer_fault_code            VARCHAR2(20),
   note_text                      VARCHAR2(2000),
   note_id                        VARCHAR2(10),
   billable_or_warranty           VARCHAR2(100),
   manufacturer_warranty          VARCHAR2(5),
   repair_warranty                VARCHAR2(5),
   warranty_validated             VARCHAR2(5),
   processing_fee                 NUMBER,
   required_start                 DATE);

TYPE Bc_Repair_Line_Key IS RECORD (
   rco_no                         NUMBER,
   repair_line_no                 NUMBER);

TYPE Bc_Log_Info_Rec IS RECORD (
   objid                          VARCHAR2(4000),
   objversion                     VARCHAR2(4000),
   objinfo                        VARCHAR2(4000),
   objgrants                      VARCHAR2(2000),
   rco_no                         NUMBER,
   log_info_id                    NUMBER,
   rco_line                       NUMBER,
   date_created                   DATE,
   reported_by                    VARCHAR2(30),
   part_number                    VARCHAR2(25),
   contract                       VARCHAR2(5),
   notes                          VARCHAR2(2000),
   enter_by                       VARCHAR2(6));

TYPE Bc_Log_Info_Default_Copy_Rec IS RECORD (
   objgrants                      VARCHAR2(2000),
   rco_no                         NUMBER,
   log_info_id                    NUMBER,
   rco_line                       NUMBER,
   date_created                   DATE,
   reported_by                    VARCHAR2(30),
   part_number                    VARCHAR2(25),
   contract                       VARCHAR2(5),
   notes                          VARCHAR2(2000),
   enter_by                       VARCHAR2(6));

TYPE Bc_Log_Info_Key IS RECORD (
   rco_no                         NUMBER,
   log_info_id                    NUMBER);

TYPE Customer_Info_Rec IS RECORD (
   objid                          VARCHAR2(4000),
   objversion                     VARCHAR2(4000),
   objinfo                        VARCHAR2(4000),
   objgrants                      VARCHAR2(2000),
   customer_id                    VARCHAR2(20),
   name                           VARCHAR2(100),
   creation_date                  DATE,
   association_no                 VARCHAR2(50),
   party                          VARCHAR2(20),
   default_domain                 BOOLEAN,
   default_language               VARCHAR2(100),
   country                        VARCHAR2(100),
   party_type                     VARCHAR2(100),
   corporate_form                 VARCHAR2(8),
   identifier_reference           VARCHAR2(100),
   identifier_ref_validation      VARCHAR2(100),
   picture_id                     NUMBER,
   one_time                       BOOLEAN,
   customer_category              VARCHAR2(100),
   b2b_customer                   BOOLEAN,
   customer_tax_usage_type        VARCHAR2(5),
   business_classification        VARCHAR2(10),
   date_of_registration           DATE);

TYPE Customer_Info_Default_Copy_Rec IS RECORD (
   objgrants                      VARCHAR2(2000),
   customer_id                    VARCHAR2(20),
   name                           VARCHAR2(100),
   creation_date                  DATE,
   association_no                 VARCHAR2(50),
   party                          VARCHAR2(20),
   default_domain                 VARCHAR2(5),
   default_language               VARCHAR2(100),
   country                        VARCHAR2(100),
   party_type                     VARCHAR2(100),
   corporate_form                 VARCHAR2(8),
   identifier_reference           VARCHAR2(100),
   identifier_ref_validation      VARCHAR2(100),
   picture_id                     NUMBER,
   one_time                       VARCHAR2(5),
   customer_category              VARCHAR2(100),
   b2b_customer                   VARCHAR2(5),
   customer_tax_usage_type        VARCHAR2(5),
   business_classification        VARCHAR2(10),
   date_of_registration           DATE);

TYPE Customer_Info_Key IS RECORD (
   customer_id                    VARCHAR2(20));

TYPE Customer_Info_Address_Rec IS RECORD (
   objid                          VARCHAR2(4000),
   objversion                     VARCHAR2(4000),
   objinfo                        VARCHAR2(4000),
   objgrants                      VARCHAR2(2000),
   customer_id                    VARCHAR2(20),
   address_id                     VARCHAR2(50),
   name                           VARCHAR2(100),
   address                        VARCHAR2(2000),
   ean_location                   VARCHAR2(100),
   valid_from                     DATE,
   valid_to                       DATE,
   party                          VARCHAR2(20),
   address_lov                    VARCHAR2(2000),
   default_domain                 BOOLEAN,
   country                        VARCHAR2(100),
   party_type                     VARCHAR2(100),
   secondary_contact              VARCHAR2(35),
   primary_contact                VARCHAR2(35),
   address1                       VARCHAR2(35),
   address2                       VARCHAR2(35),
   address3                       VARCHAR2(100),
   address4                       VARCHAR2(100),
   address5                       VARCHAR2(100),
   address6                       VARCHAR2(100),
   zip_code                       VARCHAR2(35),
   city                           VARCHAR2(35),
   county                         VARCHAR2(35),
   state                          VARCHAR2(35),
   in_city                        VARCHAR2(5),
   jurisdiction_code              VARCHAR2(20),
   comm_id                        NUMBER,
   output_media                   VARCHAR2(100),
   end_customer_id                VARCHAR2(20),
   end_cust_addr_id               VARCHAR2(50),
   customer_branch                VARCHAR2(20));

TYPE Customer_Info_Address_Default_Copy_Rec IS RECORD (
   objgrants                      VARCHAR2(2000),
   customer_id                    VARCHAR2(20),
   address_id                     VARCHAR2(50),
   name                           VARCHAR2(100),
   address                        VARCHAR2(2000),
   ean_location                   VARCHAR2(100),
   valid_from                     DATE,
   valid_to                       DATE,
   party                          VARCHAR2(20),
   address_lov                    VARCHAR2(2000),
   default_domain                 VARCHAR2(5),
   country                        VARCHAR2(100),
   party_type                     VARCHAR2(100),
   secondary_contact              VARCHAR2(35),
   primary_contact                VARCHAR2(35),
   address1                       VARCHAR2(35),
   address2                       VARCHAR2(35),
   address3                       VARCHAR2(100),
   address4                       VARCHAR2(100),
   address5                       VARCHAR2(100),
   address6                       VARCHAR2(100),
   zip_code                       VARCHAR2(35),
   city                           VARCHAR2(35),
   county                         VARCHAR2(35),
   state                          VARCHAR2(35),
   in_city                        VARCHAR2(5),
   jurisdiction_code              VARCHAR2(20),
   comm_id                        NUMBER,
   output_media                   VARCHAR2(100),
   end_customer_id                VARCHAR2(20),
   end_cust_addr_id               VARCHAR2(50),
   customer_branch                VARCHAR2(20));

TYPE Customer_Info_Address_Key IS RECORD (
   customer_id                    VARCHAR2(20),
   address_id                     VARCHAR2(50));

TYPE Iso_Currency_Rec IS RECORD (
   objid                          VARCHAR2(4000),
   objversion                     VARCHAR2(4000),
   objinfo                        VARCHAR2(4000),
   objgrants                      VARCHAR2(2000),
   currency_code                  VARCHAR2(3),
   description                    VARCHAR2(739),
   currency_number                NUMBER,
   used_in_appl                   VARCHAR2(5),
   default_country                VARCHAR2(2),
   system_added                   VARCHAR2(1));

TYPE Iso_Currency_Default_Copy_Rec IS RECORD (
   objgrants                      VARCHAR2(2000),
   currency_code                  VARCHAR2(3),
   description                    VARCHAR2(739),
   currency_number                NUMBER,
   used_in_appl                   VARCHAR2(5),
   default_country                VARCHAR2(2),
   system_added                   VARCHAR2(1));

TYPE Iso_Currency_Key IS RECORD (
   currency_code                  VARCHAR2(3));

TYPE Site_Rec IS RECORD (
   objid                          VARCHAR2(4000),
   objversion                     VARCHAR2(4000),
   objinfo                        VARCHAR2(4000),
   objgrants                      VARCHAR2(2000),
   contract                       VARCHAR2(5),
   company                        VARCHAR2(20),
   delivery_address               VARCHAR2(50),
   description                    VARCHAR2(20),
   dist_calendar_id               VARCHAR2(10),
   manuf_calendar_id              VARCHAR2(10),
   offset                         NUMBER,
   data_capture_menu_id           VARCHAR2(50));

TYPE Site_Default_Copy_Rec IS RECORD (
   objgrants                      VARCHAR2(2000),
   contract                       VARCHAR2(5),
   company                        VARCHAR2(20),
   delivery_address               VARCHAR2(50),
   description                    VARCHAR2(20),
   dist_calendar_id               VARCHAR2(10),
   manuf_calendar_id              VARCHAR2(10),
   offset                         NUMBER,
   data_capture_menu_id           VARCHAR2(50));

TYPE Site_Key IS RECORD (
   contract                       VARCHAR2(5));

TYPE Customer_Order_Rec IS RECORD (
   objid                          VARCHAR2(4000),
   objversion                     VARCHAR2(4000),
   objinfo                        VARCHAR2(4000),
   objstate                       VARCHAR2(100),
   objgrants                      VARCHAR2(2000),
   order_no                       VARCHAR2(12),
   authorize_code                 VARCHAR2(20),
   bill_addr_no                   VARCHAR2(50),
   contract                       VARCHAR2(5),
   company                        VARCHAR2(20),
   country_code                   VARCHAR2(2),
   currency_code                  VARCHAR2(3),
   customer_no                    VARCHAR2(20),
   customer_no_pay                VARCHAR2(20),
   customer_no_pay_addr_no        VARCHAR2(50),
   customer_no_pay_reference      VARCHAR2(30),
   delivery_terms                 VARCHAR2(5),
   district_code                  VARCHAR2(10),
   language_code                  VARCHAR2(2),
   market_code                    VARCHAR2(10),
   note_id                        NUMBER,
   order_code                     VARCHAR2(3),
   order_id                       VARCHAR2(3),
   pay_term_id                    VARCHAR2(20),
   pre_accounting_id              NUMBER,
   print_control_code             VARCHAR2(10),
   region_code                    VARCHAR2(10),
   salesman_code                  VARCHAR2(20),
   ship_addr_no                   VARCHAR2(50),
   ship_via_code                  VARCHAR2(3),
   addr_flag                      VARCHAR2(100),
   grp_disc_calc_flag             VARCHAR2(100),
   customer_po_no                 VARCHAR2(50),
   cust_ref                       VARCHAR2(100),
   date_entered                   DATE,
   delivery_leadtime              NUMBER,
   label_note                     VARCHAR2(50),
   note_text                      VARCHAR2(2000),
   order_conf                     VARCHAR2(100),
   order_conf_flag                VARCHAR2(100),
   pack_list_flag                 VARCHAR2(100),
   pick_list_flag                 VARCHAR2(100),
   tax_liability                  VARCHAR2(20),
   delivery_country_code          VARCHAR2(2),
   wanted_delivery_date           DATE,
   internal_po_no                 VARCHAR2(12),
   route_id                       VARCHAR2(12),
   agreement_id                   VARCHAR2(10),
   forward_agent_id               VARCHAR2(20),
   internal_delivery_type         VARCHAR2(100),
   external_ref                   VARCHAR2(25),
   project_id                     VARCHAR2(10),
   staged_billing                 VARCHAR2(100),
   sm_connection                  VARCHAR2(100),
   scheduling_connection          VARCHAR2(100),
   priority                       NUMBER,
   intrastat_exempt               VARCHAR2(100),
   additional_discount            NUMBER,
   pay_term_base_date             DATE,
   summarized_source_lines        VARCHAR2(100),
   case_id                        NUMBER,
   task_id                        NUMBER,
   confirm_deliveries             BOOLEAN,
   check_sales_grp_deliv_conf     BOOLEAN,
   delay_cogs_to_deliv_conf       BOOLEAN,
   cancel_reason                  VARCHAR2(10),
   jinsui_invoice                 BOOLEAN,
   blocked_reason                 VARCHAR2(100),
   blocked_from_state             VARCHAR2(20),
   sales_contract_no              VARCHAR2(15),
   contract_rev_seq               NUMBER,
   contract_line_no               NUMBER,
   contract_item_no               NUMBER,
   default_charges                BOOLEAN,
   released_from_credit_check     BOOLEAN,
   proposed_prepayment_amount     NUMBER,
   prepayment_approved            BOOLEAN,
   backorder_option               VARCHAR2(100),
   expected_prepayment_date       DATE,
   shipment_creation              VARCHAR2(100),
   use_pre_ship_del_note          BOOLEAN,
   pick_inventory_type            VARCHAR2(100),
   tax_id_no                      VARCHAR2(50),
   tax_id_validated_date          DATE,
   classification_standard        VARCHAR2(25),
   msg_sequence_no                NUMBER,
   msg_version_no                 NUMBER,
   currency_rate_type             VARCHAR2(10),
   del_terms_location             VARCHAR2(100),
   internal_ref                   VARCHAR2(30),
   internal_po_label_note         VARCHAR2(50),
   supply_country                 VARCHAR2(100),
   rebate_customer                VARCHAR2(20),
   freight_map_id                 VARCHAR2(15),
   zone_id                        VARCHAR2(15),
   freight_price_list_no          VARCHAR2(10),
   summarized_freight_charges     VARCHAR2(100),
   apply_fix_deliv_freight        BOOLEAN,
   fix_deliv_freight              NUMBER,
   print_delivered_lines          VARCHAR2(100),
   update_price_effective_date    BOOLEAN,
   cust_calendar_id               VARCHAR2(10),
   ext_transport_calendar_id      VARCHAR2(10),
   use_price_incl_tax             BOOLEAN,
   customs_value_currency         VARCHAR2(3),
   business_opportunity_no        VARCHAR2(12),
   picking_leadtime               NUMBER,
   shipment_type                  VARCHAR2(3),
   vendor_no                      VARCHAR2(20),
   disconnect_exp_license         VARCHAR2(5),
   replicate_changes              VARCHAR2(5),
   change_request                 VARCHAR2(5),
   quotation_no                   VARCHAR2(12),
   free_of_chg_tax_pay_party      VARCHAR2(100),
   blocked_type                   VARCHAR2(100),
   b2b_order                      BOOLEAN,
   main_representative_id         VARCHAR2(20),
   limit_sales_to_assortments     BOOLEAN,
   final_consumer                 BOOLEAN,
   customer_tax_usage_type        VARCHAR2(5),
   invoice_reason_id              VARCHAR2(20),
   delivery_reason_id             VARCHAR2(20),
   component_a                    VARCHAR2(50),
   service_code                   VARCHAR2(100),
   disc_price_round               BOOLEAN,
   business_transaction_id        VARCHAR2(20),
   invoiced_closed_date           DATE);

TYPE Customer_Order_Default_Copy_Rec IS RECORD (
   objstate                       VARCHAR2(100),
   objgrants                      VARCHAR2(2000),
   order_no                       VARCHAR2(12),
   authorize_code                 VARCHAR2(20),
   bill_addr_no                   VARCHAR2(50),
   contract                       VARCHAR2(5),
   company                        VARCHAR2(20),
   country_code                   VARCHAR2(2),
   currency_code                  VARCHAR2(3),
   customer_no                    VARCHAR2(20),
   customer_no_pay                VARCHAR2(20),
   customer_no_pay_addr_no        VARCHAR2(50),
   customer_no_pay_reference      VARCHAR2(30),
   delivery_terms                 VARCHAR2(5),
   district_code                  VARCHAR2(10),
   language_code                  VARCHAR2(2),
   market_code                    VARCHAR2(10),
   note_id                        NUMBER,
   order_code                     VARCHAR2(3),
   order_id                       VARCHAR2(3),
   pay_term_id                    VARCHAR2(20),
   pre_accounting_id              NUMBER,
   print_control_code             VARCHAR2(10),
   region_code                    VARCHAR2(10),
   salesman_code                  VARCHAR2(20),
   ship_addr_no                   VARCHAR2(50),
   ship_via_code                  VARCHAR2(3),
   addr_flag                      VARCHAR2(100),
   grp_disc_calc_flag             VARCHAR2(100),
   customer_po_no                 VARCHAR2(50),
   cust_ref                       VARCHAR2(100),
   date_entered                   DATE,
   delivery_leadtime              NUMBER,
   label_note                     VARCHAR2(50),
   note_text                      VARCHAR2(2000),
   order_conf                     VARCHAR2(100),
   order_conf_flag                VARCHAR2(100),
   pack_list_flag                 VARCHAR2(100),
   pick_list_flag                 VARCHAR2(100),
   tax_liability                  VARCHAR2(20),
   delivery_country_code          VARCHAR2(2),
   wanted_delivery_date           DATE,
   internal_po_no                 VARCHAR2(12),
   route_id                       VARCHAR2(12),
   agreement_id                   VARCHAR2(10),
   forward_agent_id               VARCHAR2(20),
   internal_delivery_type         VARCHAR2(100),
   external_ref                   VARCHAR2(25),
   project_id                     VARCHAR2(10),
   staged_billing                 VARCHAR2(100),
   sm_connection                  VARCHAR2(100),
   scheduling_connection          VARCHAR2(100),
   priority                       NUMBER,
   intrastat_exempt               VARCHAR2(100),
   additional_discount            NUMBER,
   pay_term_base_date             DATE,
   summarized_source_lines        VARCHAR2(100),
   case_id                        NUMBER,
   task_id                        NUMBER,
   confirm_deliveries             VARCHAR2(5),
   check_sales_grp_deliv_conf     VARCHAR2(5),
   delay_cogs_to_deliv_conf       VARCHAR2(5),
   cancel_reason                  VARCHAR2(10),
   jinsui_invoice                 VARCHAR2(5),
   blocked_reason                 VARCHAR2(100),
   blocked_from_state             VARCHAR2(20),
   sales_contract_no              VARCHAR2(15),
   contract_rev_seq               NUMBER,
   contract_line_no               NUMBER,
   contract_item_no               NUMBER,
   default_charges                VARCHAR2(5),
   released_from_credit_check     VARCHAR2(5),
   proposed_prepayment_amount     NUMBER,
   prepayment_approved            VARCHAR2(5),
   backorder_option               VARCHAR2(100),
   expected_prepayment_date       DATE,
   shipment_creation              VARCHAR2(100),
   use_pre_ship_del_note          VARCHAR2(5),
   pick_inventory_type            VARCHAR2(100),
   tax_id_no                      VARCHAR2(50),
   tax_id_validated_date          DATE,
   classification_standard        VARCHAR2(25),
   msg_sequence_no                NUMBER,
   msg_version_no                 NUMBER,
   currency_rate_type             VARCHAR2(10),
   del_terms_location             VARCHAR2(100),
   internal_ref                   VARCHAR2(30),
   internal_po_label_note         VARCHAR2(50),
   supply_country                 VARCHAR2(100),
   rebate_customer                VARCHAR2(20),
   freight_map_id                 VARCHAR2(15),
   zone_id                        VARCHAR2(15),
   freight_price_list_no          VARCHAR2(10),
   summarized_freight_charges     VARCHAR2(100),
   apply_fix_deliv_freight        VARCHAR2(5),
   fix_deliv_freight              NUMBER,
   print_delivered_lines          VARCHAR2(100),
   update_price_effective_date    VARCHAR2(5),
   cust_calendar_id               VARCHAR2(10),
   ext_transport_calendar_id      VARCHAR2(10),
   use_price_incl_tax             VARCHAR2(5),
   customs_value_currency         VARCHAR2(3),
   business_opportunity_no        VARCHAR2(12),
   picking_leadtime               NUMBER,
   shipment_type                  VARCHAR2(3),
   vendor_no                      VARCHAR2(20),
   disconnect_exp_license         VARCHAR2(5),
   replicate_changes              VARCHAR2(5),
   change_request                 VARCHAR2(5),
   quotation_no                   VARCHAR2(12),
   free_of_chg_tax_pay_party      VARCHAR2(100),
   blocked_type                   VARCHAR2(100),
   b2b_order                      VARCHAR2(5),
   main_representative_id         VARCHAR2(20),
   limit_sales_to_assortments     VARCHAR2(5),
   final_consumer                 VARCHAR2(5),
   customer_tax_usage_type        VARCHAR2(5),
   invoice_reason_id              VARCHAR2(20),
   delivery_reason_id             VARCHAR2(20),
   component_a                    VARCHAR2(50),
   service_code                   VARCHAR2(100),
   disc_price_round               VARCHAR2(5),
   business_transaction_id        VARCHAR2(20),
   invoiced_closed_date           DATE);

TYPE Customer_Order_Key IS RECORD (
   order_no                       VARCHAR2(12));

TYPE Fnd_User_Rec IS RECORD (
   objid                          VARCHAR2(4000),
   objversion                     VARCHAR2(4000),
   objinfo                        VARCHAR2(4000),
   objgrants                      VARCHAR2(2000),
   identity                       VARCHAR2(30),
   description                    VARCHAR2(2000),
   oracle_user                    VARCHAR2(30),
   web_user                       VARCHAR2(2000),
   user_type                      VARCHAR2(100),
   active                         VARCHAR2(5),
   created                        DATE,
   last_modified                  DATE,
   valid_from                     DATE,
   valid_to                       DATE,
   default_idp                    VARCHAR2(5),
   from_scim                      VARCHAR2(5));

TYPE Fnd_User_Default_Copy_Rec IS RECORD (
   objgrants                      VARCHAR2(2000),
   identity                       VARCHAR2(30),
   description                    VARCHAR2(2000),
   oracle_user                    VARCHAR2(30),
   web_user                       VARCHAR2(2000),
   user_type                      VARCHAR2(100),
   active                         VARCHAR2(5),
   created                        DATE,
   last_modified                  DATE,
   valid_from                     DATE,
   valid_to                       DATE,
   default_idp                    VARCHAR2(5),
   from_scim                      VARCHAR2(5));

TYPE Fnd_User_Key IS RECORD (
   identity                       VARCHAR2(30));

TYPE Bc_Repair_Type_Rec IS RECORD (
   objid                          VARCHAR2(4000),
   objversion                     VARCHAR2(4000),
   objinfo                        VARCHAR2(4000),
   objgrants                      VARCHAR2(2000),
   repair_type                    VARCHAR2(20),
   description                    VARCHAR2(60));

TYPE Bc_Repair_Type_Default_Copy_Rec IS RECORD (
   objgrants                      VARCHAR2(2000),
   repair_type                    VARCHAR2(20),
   description                    VARCHAR2(60));

TYPE Bc_Repair_Type_Key IS RECORD (
   repair_type                    VARCHAR2(20));

TYPE Condition_Code_Rec IS RECORD (
   objid                          VARCHAR2(4000),
   objversion                     VARCHAR2(4000),
   objinfo                        VARCHAR2(4000),
   objgrants                      VARCHAR2(2000),
   condition_code                 VARCHAR2(10),
   description                    VARCHAR2(35),
   note_text                      VARCHAR2(2000),
   condition_code_type            VARCHAR2(100),
   default_avail_control_id       VARCHAR2(25),
   reset_repair_value             BOOLEAN,
   reset_overhaul_value           BOOLEAN);

TYPE Condition_Code_Default_Copy_Rec IS RECORD (
   objgrants                      VARCHAR2(2000),
   condition_code                 VARCHAR2(10),
   description                    VARCHAR2(35),
   note_text                      VARCHAR2(2000),
   condition_code_type            VARCHAR2(100),
   default_avail_control_id       VARCHAR2(25),
   reset_repair_value             VARCHAR2(5),
   reset_overhaul_value           VARCHAR2(5));

TYPE Condition_Code_Key IS RECORD (
   condition_code                 VARCHAR2(10));

TYPE Inventory_Part_Rec IS RECORD (
   objid                          VARCHAR2(4000),
   objversion                     VARCHAR2(4000),
   objinfo                        VARCHAR2(4000),
   objgrants                      VARCHAR2(2000),
   contract                       VARCHAR2(5),
   part_no                        VARCHAR2(25),
   accounting_group               VARCHAR2(5),
   asset_class                    VARCHAR2(2),
   country_of_origin              VARCHAR2(2),
   hazard_code                    VARCHAR2(6),
   note_id                        NUMBER,
   estimated_material_cost        NUMBER,
   part_product_code              VARCHAR2(5),
   part_product_family            VARCHAR2(5),
   part_status                    VARCHAR2(1),
   planner_buyer                  VARCHAR2(20),
   prime_commodity                VARCHAR2(5),
   second_commodity               VARCHAR2(5),
   unit_meas                      VARCHAR2(10),
   catch_unit_meas                VARCHAR2(30),
   description                    VARCHAR2(200),
   description_copy               VARCHAR2(200),
   description_in_use             VARCHAR2(200),
   abc_class                      VARCHAR2(1),
   abc_class_locked_until         DATE,
   count_variance                 NUMBER,
   create_date                    DATE,
   cycle_code                     VARCHAR2(100),
   cycle_period                   NUMBER,
   dim_quality                    VARCHAR2(25),
   durability_day                 NUMBER,
   expected_leadtime              NUMBER,
   last_activity_date             DATE,
   lead_time_code                 VARCHAR2(100),
   manuf_leadtime                 NUMBER,
   note_text                      VARCHAR2(2000),
   oe_alloc_assign_flag           VARCHAR2(100),
   onhand_analysis_flag           VARCHAR2(100),
   purch_leadtime                 NUMBER,
   earliest_ultd_supply_date      DATE,
   supersedes                     VARCHAR2(25),
   supply_code                    VARCHAR2(100),
   type_code                      VARCHAR2(100),
   customs_stat_no                VARCHAR2(15),
   type_designation               VARCHAR2(25),
   zero_cost_flag                 VARCHAR2(100),
   avail_activity_status          VARCHAR2(100),
   eng_attribute                  VARCHAR2(5),
   shortage_flag                  VARCHAR2(100),
   forecast_consumption_flag      VARCHAR2(100),
   stock_management               VARCHAR2(100),
   intrastat_conv_factor          NUMBER,
   part_cost_group_id             VARCHAR2(5),
   dop_connection                 VARCHAR2(100),
   std_name_id                    NUMBER,
   inventory_valuation_method     VARCHAR2(100),
   negative_on_hand               VARCHAR2(100),
   technical_coordinator_id       VARCHAR2(20),
   invoice_consideration          VARCHAR2(100),
   actual_cost_activated          DATE,
   max_actual_cost_update         NUMBER,
   cust_warranty_id               NUMBER,
   sup_warranty_id                NUMBER,
   region_of_origin               VARCHAR2(10),
   inventory_part_cost_level      VARCHAR2(100),
   ext_service_cost_method        VARCHAR2(100),
   supply_chain_part_group        VARCHAR2(20),
   automatic_capability_check     VARCHAR2(100),
   input_unit_meas_group_id       VARCHAR2(30),
   dop_netting                    VARCHAR2(100),
   co_reserve_onh_analys_flag     VARCHAR2(100),
   qty_calc_rounding              NUMBER,
   lifecycle_stage                VARCHAR2(100),
   life_stage_locked_until        DATE,
   frequency_class                VARCHAR2(100),
   freq_class_locked_until        DATE,
   first_stat_issue_date          DATE,
   latest_stat_issue_date         DATE,
   decline_date                   DATE,
   expired_date                   DATE,
   decline_issue_counter          NUMBER,
   expired_issue_counter          NUMBER,
   min_durab_days_co_deliv        NUMBER,
   min_durab_days_planning        NUMBER,
   auto_created_gtin              VARCHAR2(5),
   storage_width_requirement      NUMBER,
   storage_height_requirement     NUMBER,
   storage_depth_requirement      NUMBER,
   storage_volume_requirement     NUMBER,
   storage_weight_requirement     NUMBER,
   min_storage_temperature        NUMBER,
   max_storage_temperature        NUMBER,
   min_storage_humidity           NUMBER,
   max_storage_humidity           NUMBER,
   standard_putaway_qty           NUMBER,
   putaway_zone_refill_option     VARCHAR2(100),
   reset_config_std_cost          BOOLEAN,
   mandatory_expiration_date      BOOLEAN,
   excl_ship_pack_proposal        BOOLEAN,
   company                        VARCHAR2(20),
   statistical_code               VARCHAR2(15),
   acquisition_origin             NUMBER,
   acquisition_reason_id          VARCHAR2(20));

TYPE Inventory_Part_Default_Copy_Rec IS RECORD (
   objgrants                      VARCHAR2(2000),
   contract                       VARCHAR2(5),
   part_no                        VARCHAR2(25),
   accounting_group               VARCHAR2(5),
   asset_class                    VARCHAR2(2),
   country_of_origin              VARCHAR2(2),
   hazard_code                    VARCHAR2(6),
   note_id                        NUMBER,
   estimated_material_cost        NUMBER,
   part_product_code              VARCHAR2(5),
   part_product_family            VARCHAR2(5),
   part_status                    VARCHAR2(1),
   planner_buyer                  VARCHAR2(20),
   prime_commodity                VARCHAR2(5),
   second_commodity               VARCHAR2(5),
   unit_meas                      VARCHAR2(10),
   catch_unit_meas                VARCHAR2(30),
   description                    VARCHAR2(200),
   description_copy               VARCHAR2(200),
   description_in_use             VARCHAR2(200),
   abc_class                      VARCHAR2(1),
   abc_class_locked_until         DATE,
   count_variance                 NUMBER,
   create_date                    DATE,
   cycle_code                     VARCHAR2(100),
   cycle_period                   NUMBER,
   dim_quality                    VARCHAR2(25),
   durability_day                 NUMBER,
   expected_leadtime              NUMBER,
   last_activity_date             DATE,
   lead_time_code                 VARCHAR2(100),
   manuf_leadtime                 NUMBER,
   note_text                      VARCHAR2(2000),
   oe_alloc_assign_flag           VARCHAR2(100),
   onhand_analysis_flag           VARCHAR2(100),
   purch_leadtime                 NUMBER,
   earliest_ultd_supply_date      DATE,
   supersedes                     VARCHAR2(25),
   supply_code                    VARCHAR2(100),
   type_code                      VARCHAR2(100),
   customs_stat_no                VARCHAR2(15),
   type_designation               VARCHAR2(25),
   zero_cost_flag                 VARCHAR2(100),
   avail_activity_status          VARCHAR2(100),
   eng_attribute                  VARCHAR2(5),
   shortage_flag                  VARCHAR2(100),
   forecast_consumption_flag      VARCHAR2(100),
   stock_management               VARCHAR2(100),
   intrastat_conv_factor          NUMBER,
   part_cost_group_id             VARCHAR2(5),
   dop_connection                 VARCHAR2(100),
   std_name_id                    NUMBER,
   inventory_valuation_method     VARCHAR2(100),
   negative_on_hand               VARCHAR2(100),
   technical_coordinator_id       VARCHAR2(20),
   invoice_consideration          VARCHAR2(100),
   actual_cost_activated          DATE,
   max_actual_cost_update         NUMBER,
   cust_warranty_id               NUMBER,
   sup_warranty_id                NUMBER,
   region_of_origin               VARCHAR2(10),
   inventory_part_cost_level      VARCHAR2(100),
   ext_service_cost_method        VARCHAR2(100),
   supply_chain_part_group        VARCHAR2(20),
   automatic_capability_check     VARCHAR2(100),
   input_unit_meas_group_id       VARCHAR2(30),
   dop_netting                    VARCHAR2(100),
   co_reserve_onh_analys_flag     VARCHAR2(100),
   qty_calc_rounding              NUMBER,
   lifecycle_stage                VARCHAR2(100),
   life_stage_locked_until        DATE,
   frequency_class                VARCHAR2(100),
   freq_class_locked_until        DATE,
   first_stat_issue_date          DATE,
   latest_stat_issue_date         DATE,
   decline_date                   DATE,
   expired_date                   DATE,
   decline_issue_counter          NUMBER,
   expired_issue_counter          NUMBER,
   min_durab_days_co_deliv        NUMBER,
   min_durab_days_planning        NUMBER,
   auto_created_gtin              VARCHAR2(5),
   storage_width_requirement      NUMBER,
   storage_height_requirement     NUMBER,
   storage_depth_requirement      NUMBER,
   storage_volume_requirement     NUMBER,
   storage_weight_requirement     NUMBER,
   min_storage_temperature        NUMBER,
   max_storage_temperature        NUMBER,
   min_storage_humidity           NUMBER,
   max_storage_humidity           NUMBER,
   standard_putaway_qty           NUMBER,
   putaway_zone_refill_option     VARCHAR2(100),
   reset_config_std_cost          VARCHAR2(5),
   mandatory_expiration_date      VARCHAR2(5),
   excl_ship_pack_proposal        VARCHAR2(5),
   company                        VARCHAR2(20),
   statistical_code               VARCHAR2(15),
   acquisition_origin             NUMBER,
   acquisition_reason_id          VARCHAR2(20));

TYPE Inventory_Part_Key IS RECORD (
   contract                       VARCHAR2(5),
   part_no                        VARCHAR2(25));

TYPE Bc_Repair_Line_Action_Rec IS RECORD (
   objid                          VARCHAR2(4000),
   objversion                     VARCHAR2(4000),
   objinfo                        VARCHAR2(4000),
   objgrants                      VARCHAR2(2000),
   repair_line_action             VARCHAR2(20),
   contract                       VARCHAR2(5),
   repair_line_action_desc        VARCHAR2(60),
   action_type                    VARCHAR2(100),
   days_before_overdue            NUMBER);

TYPE Bc_Repair_Line_Action_Default_Copy_Rec IS RECORD (
   objgrants                      VARCHAR2(2000),
   repair_line_action             VARCHAR2(20),
   contract                       VARCHAR2(5),
   repair_line_action_desc        VARCHAR2(60),
   action_type                    VARCHAR2(100),
   days_before_overdue            NUMBER);

TYPE Bc_Repair_Line_Action_Key IS RECORD (
   repair_line_action             VARCHAR2(20));

TYPE Lookup_Iso_Currency_Rec IS RECORD (
   objgrants                      VARCHAR2(2000),
   id                             VARCHAR2(4000),
   description                    VARCHAR2(4000));

TYPE Lookup_Iso_Currency_Default_Copy_Rec IS RECORD (
   objgrants                      VARCHAR2(2000),
   id                             VARCHAR2(4000),
   description                    VARCHAR2(4000));

TYPE Lookup_Iso_Currency_Key IS RECORD (
   id                             VARCHAR2(4000));

TYPE Lookup_Iso_Unit_Rec IS RECORD (
   objgrants                      VARCHAR2(2000),
   id                             VARCHAR2(4000),
   description                    VARCHAR2(4000));

TYPE Lookup_Iso_Unit_Default_Copy_Rec IS RECORD (
   objgrants                      VARCHAR2(2000),
   id                             VARCHAR2(4000),
   description                    VARCHAR2(4000));

TYPE Lookup_Iso_Unit_Key IS RECORD (
   id                             VARCHAR2(4000));

TYPE Lookup_Iso_Country_Rec IS RECORD (
   objgrants                      VARCHAR2(2000),
   id                             VARCHAR2(4000),
   description                    VARCHAR2(4000));

TYPE Lookup_Iso_Country_Default_Copy_Rec IS RECORD (
   objgrants                      VARCHAR2(2000),
   id                             VARCHAR2(4000),
   description                    VARCHAR2(4000));

TYPE Lookup_Iso_Country_Key IS RECORD (
   id                             VARCHAR2(4000));


-----------------------------------------------------------------------------
------------------------- METADATA PROVIDER METHODS -------------------------
-----------------------------------------------------------------------------

FUNCTION Verify_Metadata_Sql_Content_ (
   metadata_version_ IN VARCHAR2 ) RETURN VARCHAR2
IS
BEGIN
   Verify_Metadata_Plsql_Content_(metadata_version_);
   RETURN 'OK';
END Verify_Metadata_Sql_Content_;


PROCEDURE Verify_Metadata_Plsql_Content_ (
   metadata_version_ IN VARCHAR2 )
IS
BEGIN
   IF (metadata_version_ != Get_Metadata_Version_) THEN
      Raise_Application_Error(-20187, 'OLDMETA: Metadata mismatch, reload with Bc_Rco_Handling_SVC.Get_Metadata_Content_ and execute again.');
   END IF;
END Verify_Metadata_Plsql_Content_;


FUNCTION Get_Metadata_Content_ (
   context_ IN VARCHAR2 DEFAULT NULL ) RETURN CLOB
IS
BEGIN
   IF (context_ IS NULL) THEN
      RETURN Model_Design_SYS.Get_Data_Content_(Model_Design_SYS.SERVER_METADATA, 'projection', 'BcRcoHandling', language_ => Fnd_Session_API.Get_Language);
   ELSE
      RETURN Model_Design_SYS.Get_Data_Content_(Model_Design_SYS.SERVER_METADATA, 'projection', 'BcRcoHandling', language_ => Fnd_Session_API.Get_Language, scope_id_ => context_);
   END IF;
END Get_Metadata_Content_;


FUNCTION Get_Metadata_Category_ (
   context_ IN VARCHAR2 DEFAULT NULL ) RETURN VARCHAR2
IS
   projection_category_  VARCHAR2(100);
BEGIN
   projection_category_ := 'Users';
   RETURN projection_category_;
END Get_Metadata_Category_;


FUNCTION Get_Metadata_Service_Group_ (
   context_ IN VARCHAR2 DEFAULT NULL ) RETURN VARCHAR2
IS
   projection_service_group_  VARCHAR2(100);
BEGIN
   projection_service_group_ := 'Default';
   RETURN projection_service_group_;
END Get_Metadata_Service_Group_;


FUNCTION Get_Metadata_Version_ (
   context_ IN VARCHAR2 DEFAULT NULL ) RETURN VARCHAR2
IS
BEGIN
   RETURN Model_Design_SYS.Get_Data_Version_(Model_Design_SYS.SERVER_METADATA, 'projection', 'BcRcoHandling');
END Get_Metadata_Version_;


-----------------------------------------------------------------------------
--------------------- IMPLEMENTATION METHOD DECLARATIONS --------------------
-----------------------------------------------------------------------------

FUNCTION Get_Objid_From_Etag___ (
   etag_ IN VARCHAR2 ) RETURN VARCHAR2;

FUNCTION Get_Objversion_From_Etag___ (
   etag_ IN VARCHAR2 ) RETURN VARCHAR2;

FUNCTION Get_Etag___ (
   objid_      IN VARCHAR2,
   objversion_ IN VARCHAR2 ) RETURN VARCHAR2;

FUNCTION Combine_Value_Unit___ (
   value_ IN VARCHAR2,
   unit_  IN VARCHAR2 ) RETURN VARCHAR2;

FUNCTION To_Boolean_Arr____ (
   arr_ IN Text_Arr ) RETURN Boolean_Arr;

PROCEDURE Create_New_Cust_Order___ (
   customer_id_         IN    VARCHAR2,
   rco_no_              IN    NUMBER,
   contract_                  VARCHAR2,
   currency_                  VARCHAR2,
   delivery_address_id_       VARCHAR2);

FUNCTION Refresh_Page___ RETURN VARCHAR2;

FUNCTION Get_Def_Infolog_Part___ (
   rco_line_ IN    NUMBER,
   rco_no_   IN    NUMBER) RETURN VARCHAR2;

FUNCTION Get_Def_Infolog_Part_Site___ (
   rco_line_    IN    NUMBER,
   rco_no_      IN    NUMBER) RETURN VARCHAR2;

FUNCTION Get_Default_Address___ (
   customer_id_   IN    VARCHAR2,
   address_type_  IN    VARCHAR2) RETURN VARCHAR2;

FUNCTION Get_Owner_Id___ (
   rco_no_   IN  NUMBER) RETURN VARCHAR2;

PROCEDURE Add_To_Attr_From_Rec___ (
   rec_  IN     Bc_Repair_Center_Order_Rec,
   attr_ IN OUT NOCOPY VARCHAR2 );

PROCEDURE Add_To_Attr_From_Rec___ (
   rec_  IN     Bc_Repair_Line_Rec,
   attr_ IN OUT NOCOPY VARCHAR2 );

PROCEDURE Add_To_Attr_From_Rec___ (
   rec_  IN     Bc_Log_Info_Rec,
   attr_ IN OUT NOCOPY VARCHAR2 );

PROCEDURE Add_To_Rec_From_Attr___ (
   attr_ IN     VARCHAR2,
   rec_  IN OUT NOCOPY Bc_Repair_Center_Order_Rec );

PROCEDURE Add_To_Rec_From_Attr___ (
   attr_ IN     VARCHAR2,
   rec_  IN OUT NOCOPY Bc_Repair_Line_Rec );

PROCEDURE Add_To_Rec_From_Attr___ (
   attr_ IN     VARCHAR2,
   rec_  IN OUT NOCOPY Bc_Log_Info_Rec );

PROCEDURE Add_Keys_To_Rec_From_Attr___ (
   attr_ IN  VARCHAR2,
   rec_ IN OUT NOCOPY Bc_Repair_Center_Order_Rec );

PROCEDURE Add_Keys_To_Rec_From_Attr___ (
   attr_ IN  VARCHAR2,
   rec_ IN OUT NOCOPY Bc_Repair_Line_Rec );

PROCEDURE Add_Keys_To_Rec_From_Attr___ (
   attr_ IN  VARCHAR2,
   rec_ IN OUT NOCOPY Bc_Log_Info_Rec );

FUNCTION Add_To_Rec_From_Default_Copy_Rec___(
   default_copy_rec_ IN     Bc_Repair_Center_Order_Default_Copy_Rec) RETURN Bc_Repair_Center_Order_Rec;

FUNCTION Add_To_Rec_From_Default_Copy_Rec___(
   default_copy_rec_ IN     Bc_Repair_Line_Default_Copy_Rec) RETURN Bc_Repair_Line_Rec;

FUNCTION Add_To_Rec_From_Default_Copy_Rec___(
   default_copy_rec_ IN     Bc_Log_Info_Default_Copy_Rec) RETURN Bc_Log_Info_Rec;

FUNCTION Get_Record_By_Objid___ (
   objid_ IN VARCHAR2,
   bc_repair_center_order## IN VARCHAR2 ) RETURN Bc_Repair_Center_Order_Rec;

FUNCTION Get_Record_By_Objid___ (
   objid_ IN VARCHAR2,
   bc_repair_line## IN VARCHAR2 ) RETURN Bc_Repair_Line_Rec;

FUNCTION Get_Record_By_Objid___ (
   objid_ IN VARCHAR2,
   bc_log_info## IN VARCHAR2 ) RETURN Bc_Log_Info_Rec;

PROCEDURE Get_Objid_Objversion___ (
   objid_         OUT VARCHAR2,
   objversion_    OUT VARCHAR2,
   key_        IN     Bc_Repair_Center_Order_Key );

PROCEDURE Get_Objid_Objversion___ (
   objid_         OUT VARCHAR2,
   objversion_    OUT VARCHAR2,
   key_        IN     Bc_Repair_Line_Key );

PROCEDURE Get_Objid_Objversion___ (
   objid_         OUT VARCHAR2,
   objversion_    OUT VARCHAR2,
   key_        IN     Bc_Log_Info_Key );

PROCEDURE CRUD_Default___ (
   key_  IN     Bc_Repair_Center_Order_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2 );

PROCEDURE CRUD_Default___ (
   rec_  IN OUT NOCOPY Bc_Repair_Center_Order_Rec );

PROCEDURE CRUD_Default___ (
   key_  IN     Bc_Repair_Line_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2 );

PROCEDURE CRUD_Default___ (
   rec_  IN OUT NOCOPY Bc_Repair_Line_Rec );

PROCEDURE CRUD_Default___ (
   key_  IN     Bc_Log_Info_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2 );

PROCEDURE CRUD_Default___ (
   rec_  IN OUT NOCOPY Bc_Log_Info_Rec );

PROCEDURE CRUD_Default_Copy___ (
   objid_  IN  VARCHAR2,
   key_    IN  Bc_Repair_Center_Order_Key,
   values_ IN  Copy_Values_Rec,
   attr_   OUT VARCHAR2,
   info_   OUT VARCHAR2 );

PROCEDURE CRUD_Default_Copy___ (
   rec_  IN OUT NOCOPY Bc_Repair_Center_Order_Rec );

PROCEDURE CRUD_Default_Copy___ (
   objid_  IN  VARCHAR2,
   key_    IN  Bc_Repair_Line_Key,
   values_ IN  Copy_Values_Rec,
   attr_   OUT VARCHAR2,
   info_   OUT VARCHAR2 );

PROCEDURE CRUD_Default_Copy___ (
   rec_  IN OUT NOCOPY Bc_Repair_Line_Rec );

PROCEDURE CRUD_Default_Copy___ (
   objid_  IN  VARCHAR2,
   key_    IN  Bc_Log_Info_Key,
   values_ IN  Copy_Values_Rec,
   attr_   OUT VARCHAR2,
   info_   OUT VARCHAR2 );

PROCEDURE CRUD_Default_Copy___ (
   rec_  IN OUT NOCOPY Bc_Log_Info_Rec );

PROCEDURE CRUD_Create___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Repair_Center_Order_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE CRUD_Create___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Repair_Line_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE CRUD_Create___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Log_Info_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE CRUD_Update___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Repair_Center_Order_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE CRUD_Update___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Repair_Line_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE CRUD_Update___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Log_Info_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE CRUD_Delete___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Center_Order_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE CRUD_Delete___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Line_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE CRUD_Delete___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Log_Info_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE Cancel___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Center_Order_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE Cancel___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Line_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE Release___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Center_Order_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE Start___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Center_Order_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE Complete___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Center_Order_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE Close___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Center_Order_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE Reopen___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Center_Order_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE Receive___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Line_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE Process___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Line_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE Repair_Start___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Line_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE Repair_Complete___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Line_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

PROCEDURE Ship___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Line_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 );

FUNCTION Get_Default_Infolog_Part___ (
   rco_line_ IN NUMBER,
   rco_no_ IN NUMBER) RETURN VARCHAR2;

FUNCTION Get_Default_Infolog_Part_Site___ (
   rco_line_ IN NUMBER,
   rco_no_ IN NUMBER) RETURN VARCHAR2;

PROCEDURE Create_New_Customer_Order___ (
   customer_id_ IN VARCHAR2,
   r_c_o_no_ IN NUMBER);

-----------------------------------------------------------------------------
-------------------- GLOBAL METHODS -----------------------------------------
-----------------------------------------------------------------------------

PROCEDURE Do_Create_New_Cust_Order(customer_id_ IN VARCHAR2, rco_no_ IN NUMBER, contract_ IN VARCHAR2, currency_ IN VARCHAR2, delivery_address_id_ IN VARCHAR2, unbound## IN VARCHAR2)
IS
BEGIN
   General_SYS.Init_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'Do_Create_New_Cust_Order', trace_only_ => TRUE);
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'Do_Create_New_Cust_Order');
   Create_New_Cust_Order___(customer_id_, rco_no_, contract_, currency_, delivery_address_id_);
END Do_Create_New_Cust_Order;


--@IgnoreMissingSysinit
FUNCTION Do_Refresh_Page(unbound## IN VARCHAR2) RETURN Text_Arr
IS
   rec_ VARCHAR2(4000);
   art_ Text_Arr := Text_Arr();
BEGIN
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'Do_Refresh_Page');
   rec_ := Refresh_Page___;
   art_.extend();
   art_(1) := rec_;
   RETURN art_;
END Do_Refresh_Page;


FUNCTION Rd_Get_Def_Infolog_Part(rco_line_ IN NUMBER, rco_no_ IN NUMBER, unbound## IN VARCHAR2) RETURN Text_Arr PIPELINED
IS
   rec_ VARCHAR2(4000);
BEGIN
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'Rd_Get_Def_Infolog_Part');
   rec_ := Get_Def_Infolog_Part___(rco_line_, rco_no_);
   PIPE ROW (rec_);
END Rd_Get_Def_Infolog_Part;



FUNCTION Rd_Get_Def_Infolog_Part_Site(rco_line_ IN NUMBER, rco_no_ IN NUMBER, unbound## IN VARCHAR2) RETURN Text_Arr PIPELINED
IS
   rec_ VARCHAR2(4000);
BEGIN
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'Rd_Get_Def_Infolog_Part_Site');
   rec_ := Get_Def_Infolog_Part_Site___(rco_line_, rco_no_);
   PIPE ROW (rec_);
END Rd_Get_Def_Infolog_Part_Site;



FUNCTION Rd_Get_Default_Address(customer_id_ IN VARCHAR2, address_type_ IN VARCHAR2, unbound## IN VARCHAR2) RETURN Text_Arr PIPELINED
IS
   rec_ VARCHAR2(4000);
BEGIN
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'Rd_Get_Default_Address');
   rec_ := Get_Default_Address___(customer_id_, address_type_);
   PIPE ROW (rec_);
END Rd_Get_Default_Address;



FUNCTION Rd_Get_Owner_Id(rco_no_ IN NUMBER, unbound## IN VARCHAR2) RETURN Text_Arr PIPELINED
IS
   rec_ VARCHAR2(4000);
BEGIN
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'Rd_Get_Owner_Id');
   rec_ := Get_Owner_Id___(rco_no_);
   PIPE ROW (rec_);
END Rd_Get_Owner_Id;


-----------------------------------------------------------------------------
-------------------- PRIVATE METHODS FOR BC REPAIR CENTER ORDER -------------
-----------------------------------------------------------------------------

FUNCTION CRUD_Default(attr_ IN VARCHAR2 DEFAULT NULL, bc_repair_center_order## IN VARCHAR2 ) RETURN Entity_Small_Drr PIPELINED
IS
   ret_ Entity_Small_Dec;
   key_ Bc_Repair_Center_Order_Key;
BEGIN
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'CRUD_Default');
   ret_.attr := attr_;
   CRUD_Default___(key_, ret_.attr, ret_.info);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000) := Client_SYS.Get_All_Info;
         objid_     VARCHAR2(4000) := Get_Objid_From_Etag___(ret_.etag);
         attr_cf_   VARCHAR2(4000) := attr_;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Repair_Center_Order_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, attr_cf_, '', 'PREPARE', 'P');
         ret_.attr := ret_.attr || attr_cf_;
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   PIPE ROW (ret_);
END CRUD_Default;



--@IgnoreMissingSysinit
FUNCTION CRUD_Default_Copy(values_ IN Copy_Values_Rec, bc_repair_center_order## IN VARCHAR2 ) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Center_Order_Key;
   objid_  VARCHAR2(10) := NULL;
BEGIN
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'CRUD_Default_Copy');
   CRUD_Default_Copy___(objid_, key_, values_, ret_.attr, ret_.info);
   RETURN ret_;
END CRUD_Default_Copy;


--@IgnoreMissingSysinit
FUNCTION CRUD_Default_Copy(etag_ IN VARCHAR2, rco_no_ IN NUMBER, values_ IN Copy_Values_Rec, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Center_Order_Key;
   objid_  VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
BEGIN
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'CRUD_Default_Copy');
   key_.rco_no := rco_no_;
   CRUD_Default_Copy___(objid_, key_, values_, ret_.attr, ret_.info);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000) := Client_SYS.Get_All_Info;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Repair_Center_Order_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, ret_.attr, '', 'COPY', 'D');
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   RETURN ret_;
END CRUD_Default_Copy;


FUNCTION CRUD_Create(attr_ IN VARCHAR2, action_ IN VARCHAR2, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Center_Order_Key;
BEGIN
   General_SYS.Init_Projection_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'CRUD_Create');
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'CRUD_Create');
   ret_.attr := attr_;
   CRUD_Create___(ret_.etag, key_, ret_.attr, ret_.info, action_);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000)  := Client_SYS.Get_All_Info;
         objid_     VARCHAR2(4000)  := Get_Objid_From_Etag___(ret_.etag);
         attr_cf_   VARCHAR2(32000) := attr_;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Repair_Center_Order_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, attr_cf_, '', action_, 'C');
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   Client_SYS.Set_Item_Value('RCO_NO', key_.rco_no, ret_.attr);
   return ret_;
END CRUD_Create;


FUNCTION CRUD_Update(etag_ IN VARCHAR2, rco_no_ IN NUMBER, attr_ IN VARCHAR2, action$_ IN VARCHAR2, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Center_Order_Key;
BEGIN
   General_SYS.Init_Projection_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'CRUD_Update');
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'CRUD_Update');
   ret_.etag := etag_;
   ret_.attr := attr_;
   key_.rco_no := rco_no_;
   CRUD_Update___(ret_.etag, key_, ret_.attr, ret_.info, action$_);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000)  := Client_SYS.Get_All_Info;
         objid_     VARCHAR2(4000)  := Get_Objid_From_Etag___(ret_.etag);
         attr_cf_   VARCHAR2(32000) := attr_;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Repair_Center_Order_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, attr_cf_, '', action$_, 'U');
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   Client_SYS.Set_Item_Value('RCO_NO', key_.rco_no, ret_.attr);
   return ret_;
END CRUD_Update;


FUNCTION CRUD_Delete(etag_ IN VARCHAR2, rco_no_ IN NUMBER, action$_ IN VARCHAR2, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Center_Order_Key;
BEGIN
   General_SYS.Init_Projection_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'CRUD_Delete');
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'CRUD_Delete');
   ret_.etag := etag_;
   key_.rco_no := rco_no_;
   CRUD_Delete___(ret_.etag, key_, ret_.info, action$_);
   return ret_;
END CRUD_Delete;


FUNCTION Ev_Cancel(etag_ IN VARCHAR2, rco_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Small_Drr
IS
   ret_ Entity_Small_Dec;
   key_ Bc_Repair_Center_Order_Key;
   arr_ Entity_Small_Drr := Entity_Small_Drr();
BEGIN
   General_SYS.Init_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'Ev_Cancel', trace_only_ => TRUE);
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'Ev_Cancel');
   ret_.etag := etag_;
   key_.rco_no := rco_no_;
   Cancel___(ret_.etag, key_, ret_.info, action_);
   Client_SYS.Set_Item_Value('RCO_NO', key_.rco_no, ret_.attr);
   arr_.extend();
   arr_(1) := ret_;
   RETURN arr_;
END Ev_Cancel;


FUNCTION Ev_Release(etag_ IN VARCHAR2, rco_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Small_Drr
IS
   ret_ Entity_Small_Dec;
   key_ Bc_Repair_Center_Order_Key;
   arr_ Entity_Small_Drr := Entity_Small_Drr();
BEGIN
   General_SYS.Init_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'Ev_Release', trace_only_ => TRUE);
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'Ev_Release');
   ret_.etag := etag_;
   key_.rco_no := rco_no_;
   Release___(ret_.etag, key_, ret_.info, action_);
   Client_SYS.Set_Item_Value('RCO_NO', key_.rco_no, ret_.attr);
   arr_.extend();
   arr_(1) := ret_;
   RETURN arr_;
END Ev_Release;


FUNCTION Ev_Start(etag_ IN VARCHAR2, rco_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Small_Drr
IS
   ret_ Entity_Small_Dec;
   key_ Bc_Repair_Center_Order_Key;
   arr_ Entity_Small_Drr := Entity_Small_Drr();
BEGIN
   General_SYS.Init_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'Ev_Start', trace_only_ => TRUE);
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'Ev_Start');
   ret_.etag := etag_;
   key_.rco_no := rco_no_;
   Start___(ret_.etag, key_, ret_.info, action_);
   Client_SYS.Set_Item_Value('RCO_NO', key_.rco_no, ret_.attr);
   arr_.extend();
   arr_(1) := ret_;
   RETURN arr_;
END Ev_Start;


FUNCTION Ev_Complete(etag_ IN VARCHAR2, rco_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Small_Drr
IS
   ret_ Entity_Small_Dec;
   key_ Bc_Repair_Center_Order_Key;
   arr_ Entity_Small_Drr := Entity_Small_Drr();
BEGIN
   General_SYS.Init_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'Ev_Complete', trace_only_ => TRUE);
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'Ev_Complete');
   ret_.etag := etag_;
   key_.rco_no := rco_no_;
   Complete___(ret_.etag, key_, ret_.info, action_);
   Client_SYS.Set_Item_Value('RCO_NO', key_.rco_no, ret_.attr);
   arr_.extend();
   arr_(1) := ret_;
   RETURN arr_;
END Ev_Complete;


FUNCTION Ev_Close(etag_ IN VARCHAR2, rco_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Small_Drr
IS
   ret_ Entity_Small_Dec;
   key_ Bc_Repair_Center_Order_Key;
   arr_ Entity_Small_Drr := Entity_Small_Drr();
BEGIN
   General_SYS.Init_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'Ev_Close', trace_only_ => TRUE);
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'Ev_Close');
   ret_.etag := etag_;
   key_.rco_no := rco_no_;
   Close___(ret_.etag, key_, ret_.info, action_);
   Client_SYS.Set_Item_Value('RCO_NO', key_.rco_no, ret_.attr);
   arr_.extend();
   arr_(1) := ret_;
   RETURN arr_;
END Ev_Close;


FUNCTION Ev_Reopen(etag_ IN VARCHAR2, rco_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_center_order## IN VARCHAR2) RETURN Entity_Small_Drr
IS
   ret_ Entity_Small_Dec;
   key_ Bc_Repair_Center_Order_Key;
   arr_ Entity_Small_Drr := Entity_Small_Drr();
BEGIN
   General_SYS.Init_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'Ev_Reopen', trace_only_ => TRUE);
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'Ev_Reopen');
   ret_.etag := etag_;
   key_.rco_no := rco_no_;
   Reopen___(ret_.etag, key_, ret_.info, action_);
   Client_SYS.Set_Item_Value('RCO_NO', key_.rco_no, ret_.attr);
   arr_.extend();
   arr_(1) := ret_;
   RETURN arr_;
END Ev_Reopen;


PROCEDURE Add_To_Attr_From_Rec___ (
   rec_  IN     Bc_Repair_Center_Order_Rec,
   attr_ IN OUT NOCOPY VARCHAR2 )
IS
BEGIN
   IF (rec_.objstate IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('OBJSTATE', rec_.objstate, attr_);
   END IF;
   IF (rec_.objgrants IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('OBJGRANTS', rec_.objgrants, attr_);
   END IF;
   IF (rec_.rco_no IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('RCO_NO', rec_.rco_no, attr_);
   END IF;
   IF (rec_.customer_id IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('CUSTOMER_ID', rec_.customer_id, attr_);
   END IF;
   IF (rec_.customer_order_no IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('CUSTOMER_ORDER_NO', rec_.customer_order_no, attr_);
   END IF;
   IF (rec_.doc_address_id IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('DOC_ADDRESS_ID', rec_.doc_address_id, attr_);
   END IF;
   IF (rec_.delivery_address_id IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('DELIVERY_ADDRESS_ID', rec_.delivery_address_id, attr_);
   END IF;
   IF (rec_.contract IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('CONTRACT', rec_.contract, attr_);
   END IF;
   IF (rec_.currency IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('CURRENCY', rec_.currency, attr_);
   END IF;
   IF (rec_.date_created IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('DATE_CREATED', rec_.date_created, attr_);
   END IF;
   IF (rec_.reported_by IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('REPORTED_BY', rec_.reported_by, attr_);
   END IF;
END Add_To_Attr_From_Rec___;


PROCEDURE Add_To_Rec_From_Attr___ (
   attr_ IN     VARCHAR2,
   rec_  IN OUT NOCOPY Bc_Repair_Center_Order_Rec )
IS
BEGIN
   IF (Client_SYS.Item_Exist('OBJSTATE', attr_)) THEN
      rec_.objstate := Client_SYS.Get_Item_Value('OBJSTATE', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('OBJGRANTS', attr_)) THEN
      rec_.objgrants := Client_SYS.Get_Item_Value('OBJGRANTS', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('RCO_NO', attr_)) THEN
      rec_.rco_no := Client_SYS.Get_Item_Value('RCO_NO', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('CUSTOMER_ID', attr_)) THEN
      rec_.customer_id := Client_SYS.Get_Item_Value('CUSTOMER_ID', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('CUSTOMER_ORDER_NO', attr_)) THEN
      rec_.customer_order_no := Client_SYS.Get_Item_Value('CUSTOMER_ORDER_NO', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('DOC_ADDRESS_ID', attr_)) THEN
      rec_.doc_address_id := Client_SYS.Get_Item_Value('DOC_ADDRESS_ID', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('DELIVERY_ADDRESS_ID', attr_)) THEN
      rec_.delivery_address_id := Client_SYS.Get_Item_Value('DELIVERY_ADDRESS_ID', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('CONTRACT', attr_)) THEN
      rec_.contract := Client_SYS.Get_Item_Value('CONTRACT', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('CURRENCY', attr_)) THEN
      rec_.currency := Client_SYS.Get_Item_Value('CURRENCY', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('DATE_CREATED', attr_)) THEN
      rec_.date_created := Client_SYS.Get_Item_Value_To_Date('DATE_CREATED', attr_, lu_name_);
   END IF;
   IF (Client_SYS.Item_Exist('REPORTED_BY', attr_)) THEN
      rec_.reported_by := Client_SYS.Get_Item_Value('REPORTED_BY', attr_);
   END IF;
END Add_To_Rec_From_Attr___;


PROCEDURE Add_Keys_To_Rec_From_Attr___ (
   attr_ IN  VARCHAR2,
   rec_ IN OUT NOCOPY Bc_Repair_Center_Order_Rec )
IS
BEGIN
   IF (Client_SYS.Item_Exist('RCO_NO', attr_)) THEN
      rec_.rco_no := Client_SYS.Get_Item_Value('RCO_NO', attr_);
   END IF;
END Add_Keys_To_Rec_From_Attr___;


FUNCTION Add_To_Rec_From_Default_Copy_Rec___(
   default_copy_rec_ IN     Bc_Repair_Center_Order_Default_Copy_Rec) RETURN Bc_Repair_Center_Order_Rec
IS
   rec_ Bc_Repair_Center_Order_Rec;
BEGIN
   rec_.objstate := default_copy_rec_.objstate;
   rec_.objgrants := default_copy_rec_.objgrants;
   rec_.rco_no := default_copy_rec_.rco_no;
   rec_.customer_id := default_copy_rec_.customer_id;
   rec_.customer_order_no := default_copy_rec_.customer_order_no;
   rec_.doc_address_id := default_copy_rec_.doc_address_id;
   rec_.delivery_address_id := default_copy_rec_.delivery_address_id;
   rec_.contract := default_copy_rec_.contract;
   rec_.currency := default_copy_rec_.currency;
   rec_.date_created := default_copy_rec_.date_created;
   rec_.reported_by := default_copy_rec_.reported_by;
   RETURN rec_;
END Add_To_Rec_From_Default_Copy_Rec___;


FUNCTION Get_Record_By_Objid___ (
   objid_ IN VARCHAR2,
   bc_repair_center_order## IN VARCHAR2 ) RETURN Bc_Repair_Center_Order_Rec
IS
   default_copy_rec_ Bc_Repair_Center_Order_Default_Copy_Rec;
   rec_ Bc_Repair_Center_Order_Rec;
BEGIN
   SELECT
      NULL objstate,
      NULL objgrants,
      rco_no rco_no,
      customer_id customer_id,
      customer_order_no customer_order_no,
      doc_address_id doc_address_id,
      delivery_address_id delivery_address_id,
      contract contract,
      currency currency,
      date_created date_created,
      reported_by reported_by   INTO default_copy_rec_
   FROM BC_REPAIR_CENTER_ORDER
   WHERE
    objid = objid_;

   rec_ := Add_To_Rec_From_Default_Copy_Rec___(default_copy_rec_);
   RETURN rec_;
EXCEPTION
   WHEN NO_DATA_FOUND THEN
      Error_SYS.Record_Not_Exist(lu_name_);
END Get_Record_By_Objid___;


PROCEDURE Get_Objid_Objversion___ (
   objid_         OUT VARCHAR2,
   objversion_    OUT VARCHAR2,
   key_        IN     Bc_Repair_Center_Order_Key )
IS
BEGIN
   SELECT objid, objversion
      INTO  objid_, objversion_
      FROM  BC_REPAIR_CENTER_ORDER
      WHERE rco_no = key_.rco_no;
EXCEPTION
   WHEN NO_DATA_FOUND THEN
      Error_SYS.Odp_Record_Not_Exist(Bc_Repair_Center_Order_API.lu_name_);
END Get_Objid_Objversion___;


PROCEDURE CRUD_Default___ (
   key_  IN     Bc_Repair_Center_Order_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2 )
IS
   rec_        Bc_Repair_Center_Order_Rec;
   objid_      VARCHAR2(2000);
   objversion_ VARCHAR2(2000);
BEGIN
   Bc_Repair_Center_Order_API.New__(info_, objid_, objversion_, attr_, 'PREPARE');
   Add_To_Rec_From_Attr___(attr_, rec_);
   CRUD_Default___(rec_);
   Add_To_Attr_From_Rec___(rec_, attr_);
END CRUD_Default___;


PROCEDURE CRUD_Default___ (
   rec_  IN OUT NOCOPY Bc_Repair_Center_Order_Rec )
IS
BEGIN
   NULL;
END CRUD_Default___;


PROCEDURE CRUD_Default_Copy___ (
   rec_  IN OUT NOCOPY Bc_Repair_Center_Order_Rec )
IS
BEGIN
   NULL;
END CRUD_Default_Copy___;


PROCEDURE CRUD_Create___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Repair_Center_Order_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_      VARCHAR2(2000);
   objversion_ VARCHAR2(2000);
BEGIN
   Bc_Repair_Center_Order_API.New__(info_, objid_, objversion_, attr_, action_);
   IF (action_ = 'DO') THEN
   etag_ := Get_Etag___(objid_, objversion_);
   SELECT rco_no
      INTO key_.rco_no
      FROM BC_REPAIR_CENTER_ORDER
      WHERE objid = objid_;
   END IF;
END CRUD_Create___;


PROCEDURE CRUD_Update___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Repair_Center_Order_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*' ) THEN
      objid_ := objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Bc_Repair_Center_Order_API.Modify__(info_, objid_, objversion_, attr_, action_);
   etag_ := Get_Etag___(objid_, objversion_);
END CRUD_Update___;


PROCEDURE CRUD_Delete___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Center_Order_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*' ) THEN
      objid_ := objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Bc_Repair_Center_Order_API.Remove__(info_, objid_, objversion_, action_);
   etag_ := NULL;
END CRUD_Delete___;


PROCEDURE Cancel___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Center_Order_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   attr_                VARCHAR2(4000);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*') THEN
      objid_:= objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Client_SYS.Clear_Attr(attr_);
   Bc_Repair_Center_Order_API.Cancel__(info_, objid_, objversion_, attr_, action_);
   etag_ := Get_Etag___(objid_, objversion_);
END Cancel___;


PROCEDURE Release___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Center_Order_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   attr_                VARCHAR2(4000);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*') THEN
      objid_:= objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Client_SYS.Clear_Attr(attr_);
   Bc_Repair_Center_Order_API.Release__(info_, objid_, objversion_, attr_, action_);
   etag_ := Get_Etag___(objid_, objversion_);
END Release___;


PROCEDURE Start___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Center_Order_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   attr_                VARCHAR2(4000);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*') THEN
      objid_:= objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Client_SYS.Clear_Attr(attr_);
   Bc_Repair_Center_Order_API.Start__(info_, objid_, objversion_, attr_, action_);
   etag_ := Get_Etag___(objid_, objversion_);
END Start___;


PROCEDURE Complete___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Center_Order_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   attr_                VARCHAR2(4000);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*') THEN
      objid_:= objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Client_SYS.Clear_Attr(attr_);
   Bc_Repair_Center_Order_API.Complete__(info_, objid_, objversion_, attr_, action_);
   etag_ := Get_Etag___(objid_, objversion_);
END Complete___;


PROCEDURE Close___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Center_Order_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   attr_                VARCHAR2(4000);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*') THEN
      objid_:= objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Client_SYS.Clear_Attr(attr_);
   Bc_Repair_Center_Order_API.Close__(info_, objid_, objversion_, attr_, action_);
   etag_ := Get_Etag___(objid_, objversion_);
END Close___;


PROCEDURE Reopen___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Center_Order_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   attr_                VARCHAR2(4000);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*') THEN
      objid_:= objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Client_SYS.Clear_Attr(attr_);
   Bc_Repair_Center_Order_API.Reopen__(info_, objid_, objversion_, attr_, action_);
   etag_ := Get_Etag___(objid_, objversion_);
END Reopen___;

-----------------------------------------------------------------------------
-------------------- PRIVATE METHODS FOR BC REPAIR LINE ---------------------
-----------------------------------------------------------------------------

FUNCTION CRUD_Default(attr_ IN VARCHAR2 DEFAULT NULL, bc_repair_line## IN VARCHAR2 ) RETURN Entity_Small_Drr PIPELINED
IS
   ret_ Entity_Small_Dec;
   key_ Bc_Repair_Line_Key;
BEGIN
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'CRUD_Default');
   ret_.attr := attr_;
   CRUD_Default___(key_, ret_.attr, ret_.info);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000) := Client_SYS.Get_All_Info;
         objid_     VARCHAR2(4000) := Get_Objid_From_Etag___(ret_.etag);
         attr_cf_   VARCHAR2(4000) := attr_;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Repair_Line_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, attr_cf_, '', 'PREPARE', 'P');
         ret_.attr := ret_.attr || attr_cf_;
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   PIPE ROW (ret_);
END CRUD_Default;



--@IgnoreMissingSysinit
FUNCTION CRUD_Default_Copy(values_ IN Copy_Values_Rec, bc_repair_line## IN VARCHAR2 ) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Line_Key;
   objid_  VARCHAR2(10) := NULL;
BEGIN
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'CRUD_Default_Copy');
   CRUD_Default_Copy___(objid_, key_, values_, ret_.attr, ret_.info);
   RETURN ret_;
END CRUD_Default_Copy;


--@IgnoreMissingSysinit
FUNCTION CRUD_Default_Copy(etag_ IN VARCHAR2, rco_no_ IN NUMBER, repair_line_no_ IN NUMBER, values_ IN Copy_Values_Rec, bc_repair_line## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Line_Key;
   objid_  VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
BEGIN
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'CRUD_Default_Copy');
   key_.rco_no := rco_no_;
   key_.repair_line_no := repair_line_no_;
   CRUD_Default_Copy___(objid_, key_, values_, ret_.attr, ret_.info);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000) := Client_SYS.Get_All_Info;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Repair_Line_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, ret_.attr, '', 'COPY', 'D');
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   RETURN ret_;
END CRUD_Default_Copy;


FUNCTION CRUD_Create(attr_ IN VARCHAR2, action_ IN VARCHAR2, bc_repair_line## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Line_Key;
BEGIN
   General_SYS.Init_Projection_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'CRUD_Create');
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'CRUD_Create');
   ret_.attr := attr_;
   CRUD_Create___(ret_.etag, key_, ret_.attr, ret_.info, action_);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000)  := Client_SYS.Get_All_Info;
         objid_     VARCHAR2(4000)  := Get_Objid_From_Etag___(ret_.etag);
         attr_cf_   VARCHAR2(32000) := attr_;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Repair_Line_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, attr_cf_, '', action_, 'C');
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   Client_SYS.Set_Item_Value('RCO_NO', key_.rco_no, ret_.attr);
   Client_SYS.Set_Item_Value('REPAIR_LINE_NO', key_.repair_line_no, ret_.attr);
   return ret_;
END CRUD_Create;


FUNCTION CRUD_Update(etag_ IN VARCHAR2, rco_no_ IN NUMBER, repair_line_no_ IN NUMBER, attr_ IN VARCHAR2, action$_ IN VARCHAR2, bc_repair_line## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Line_Key;
BEGIN
   General_SYS.Init_Projection_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'CRUD_Update');
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'CRUD_Update');
   ret_.etag := etag_;
   ret_.attr := attr_;
   key_.rco_no := rco_no_;
   key_.repair_line_no := repair_line_no_;
   CRUD_Update___(ret_.etag, key_, ret_.attr, ret_.info, action$_);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000)  := Client_SYS.Get_All_Info;
         objid_     VARCHAR2(4000)  := Get_Objid_From_Etag___(ret_.etag);
         attr_cf_   VARCHAR2(32000) := attr_;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Repair_Line_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, attr_cf_, '', action$_, 'U');
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   Client_SYS.Set_Item_Value('RCO_NO', key_.rco_no, ret_.attr);
   Client_SYS.Set_Item_Value('REPAIR_LINE_NO', key_.repair_line_no, ret_.attr);
   return ret_;
END CRUD_Update;


FUNCTION CRUD_Delete(etag_ IN VARCHAR2, rco_no_ IN NUMBER, repair_line_no_ IN NUMBER, action$_ IN VARCHAR2, bc_repair_line## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Repair_Line_Key;
BEGIN
   General_SYS.Init_Projection_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'CRUD_Delete');
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'CRUD_Delete');
   ret_.etag := etag_;
   key_.rco_no := rco_no_;
   key_.repair_line_no := repair_line_no_;
   CRUD_Delete___(ret_.etag, key_, ret_.info, action$_);
   return ret_;
END CRUD_Delete;


FUNCTION Ev_Cancel(etag_ IN VARCHAR2, rco_no_ IN NUMBER, repair_line_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_line## IN VARCHAR2) RETURN Entity_Small_Drr
IS
   ret_ Entity_Small_Dec;
   key_ Bc_Repair_Line_Key;
   arr_ Entity_Small_Drr := Entity_Small_Drr();
BEGIN
   General_SYS.Init_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'Ev_Cancel', trace_only_ => TRUE);
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'Ev_Cancel');
   ret_.etag := etag_;
   key_.rco_no := rco_no_;
   key_.repair_line_no := repair_line_no_;
   Cancel___(ret_.etag, key_, ret_.info, action_);
   Client_SYS.Set_Item_Value('RCO_NO', key_.rco_no, ret_.attr);
   Client_SYS.Set_Item_Value('REPAIR_LINE_NO', key_.repair_line_no, ret_.attr);
   arr_.extend();
   arr_(1) := ret_;
   RETURN arr_;
END Ev_Cancel;


FUNCTION Ev_Receive(etag_ IN VARCHAR2, rco_no_ IN NUMBER, repair_line_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_line## IN VARCHAR2) RETURN Entity_Small_Drr
IS
   ret_ Entity_Small_Dec;
   key_ Bc_Repair_Line_Key;
   arr_ Entity_Small_Drr := Entity_Small_Drr();
BEGIN
   General_SYS.Init_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'Ev_Receive', trace_only_ => TRUE);
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'Ev_Receive');
   ret_.etag := etag_;
   key_.rco_no := rco_no_;
   key_.repair_line_no := repair_line_no_;
   Receive___(ret_.etag, key_, ret_.info, action_);
   Client_SYS.Set_Item_Value('RCO_NO', key_.rco_no, ret_.attr);
   Client_SYS.Set_Item_Value('REPAIR_LINE_NO', key_.repair_line_no, ret_.attr);
   arr_.extend();
   arr_(1) := ret_;
   RETURN arr_;
END Ev_Receive;


FUNCTION Ev_Process(etag_ IN VARCHAR2, rco_no_ IN NUMBER, repair_line_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_line## IN VARCHAR2) RETURN Entity_Small_Drr
IS
   ret_ Entity_Small_Dec;
   key_ Bc_Repair_Line_Key;
   arr_ Entity_Small_Drr := Entity_Small_Drr();
BEGIN
   General_SYS.Init_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'Ev_Process', trace_only_ => TRUE);
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'Ev_Process');
   ret_.etag := etag_;
   key_.rco_no := rco_no_;
   key_.repair_line_no := repair_line_no_;
   Process___(ret_.etag, key_, ret_.info, action_);
   Client_SYS.Set_Item_Value('RCO_NO', key_.rco_no, ret_.attr);
   Client_SYS.Set_Item_Value('REPAIR_LINE_NO', key_.repair_line_no, ret_.attr);
   arr_.extend();
   arr_(1) := ret_;
   RETURN arr_;
END Ev_Process;


FUNCTION Ev_Repair_Start(etag_ IN VARCHAR2, rco_no_ IN NUMBER, repair_line_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_line## IN VARCHAR2) RETURN Entity_Small_Drr
IS
   ret_ Entity_Small_Dec;
   key_ Bc_Repair_Line_Key;
   arr_ Entity_Small_Drr := Entity_Small_Drr();
BEGIN
   General_SYS.Init_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'Ev_Repair_Start', trace_only_ => TRUE);
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'Ev_Repair_Start');
   ret_.etag := etag_;
   key_.rco_no := rco_no_;
   key_.repair_line_no := repair_line_no_;
   Repair_Start___(ret_.etag, key_, ret_.info, action_);
   Client_SYS.Set_Item_Value('RCO_NO', key_.rco_no, ret_.attr);
   Client_SYS.Set_Item_Value('REPAIR_LINE_NO', key_.repair_line_no, ret_.attr);
   arr_.extend();
   arr_(1) := ret_;
   RETURN arr_;
END Ev_Repair_Start;


FUNCTION Ev_Repair_Complete(etag_ IN VARCHAR2, rco_no_ IN NUMBER, repair_line_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_line## IN VARCHAR2) RETURN Entity_Small_Drr
IS
   ret_ Entity_Small_Dec;
   key_ Bc_Repair_Line_Key;
   arr_ Entity_Small_Drr := Entity_Small_Drr();
BEGIN
   General_SYS.Init_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'Ev_Repair_Complete', trace_only_ => TRUE);
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'Ev_Repair_Complete');
   ret_.etag := etag_;
   key_.rco_no := rco_no_;
   key_.repair_line_no := repair_line_no_;
   Repair_Complete___(ret_.etag, key_, ret_.info, action_);
   Client_SYS.Set_Item_Value('RCO_NO', key_.rco_no, ret_.attr);
   Client_SYS.Set_Item_Value('REPAIR_LINE_NO', key_.repair_line_no, ret_.attr);
   arr_.extend();
   arr_(1) := ret_;
   RETURN arr_;
END Ev_Repair_Complete;


FUNCTION Ev_Ship(etag_ IN VARCHAR2, rco_no_ IN NUMBER, repair_line_no_ IN NUMBER, action_ IN VARCHAR2, bc_repair_line## IN VARCHAR2) RETURN Entity_Small_Drr
IS
   ret_ Entity_Small_Dec;
   key_ Bc_Repair_Line_Key;
   arr_ Entity_Small_Drr := Entity_Small_Drr();
BEGIN
   General_SYS.Init_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'Ev_Ship', trace_only_ => TRUE);
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'Ev_Ship');
   ret_.etag := etag_;
   key_.rco_no := rco_no_;
   key_.repair_line_no := repair_line_no_;
   Ship___(ret_.etag, key_, ret_.info, action_);
   Client_SYS.Set_Item_Value('RCO_NO', key_.rco_no, ret_.attr);
   Client_SYS.Set_Item_Value('REPAIR_LINE_NO', key_.repair_line_no, ret_.attr);
   arr_.extend();
   arr_(1) := ret_;
   RETURN arr_;
END Ev_Ship;


PROCEDURE Add_To_Attr_From_Rec___ (
   rec_  IN     Bc_Repair_Line_Rec,
   attr_ IN OUT NOCOPY VARCHAR2 )
IS
BEGIN
   IF (rec_.objstate IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('OBJSTATE', rec_.objstate, attr_);
   END IF;
   IF (rec_.objgrants IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('OBJGRANTS', rec_.objgrants, attr_);
   END IF;
   IF (rec_.rco_no IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('RCO_NO', rec_.rco_no, attr_);
   END IF;
   IF (rec_.repair_line_no IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('REPAIR_LINE_NO', rec_.repair_line_no, attr_);
   END IF;
   IF (rec_.date_entered IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('DATE_ENTERED', rec_.date_entered, attr_);
   END IF;
   IF (rec_.repair_site IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('REPAIR_SITE', rec_.repair_site, attr_);
   END IF;
   IF (rec_.part_number IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('PART_NUMBER', rec_.part_number, attr_);
   END IF;
   IF (rec_.quantity IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('QUANTITY', rec_.quantity, attr_);
   END IF;
   IF (rec_.quantity_received IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('QUANTITY_RECEIVED', rec_.quantity_received, attr_);
   END IF;
   IF (rec_.condition_code IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('CONDITION_CODE', rec_.condition_code, attr_);
   END IF;
   IF (rec_.serial_no IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('SERIAL_NO', rec_.serial_no, attr_);
   END IF;
   IF (rec_.ownership_code IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('OWNERSHIP_CODE_DB', rec_.ownership_code, attr_);
   END IF;
   IF (rec_.owner_id IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('OWNER_ID', rec_.owner_id, attr_);
   END IF;
   IF (rec_.repair_line_action IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('REPAIR_LINE_ACTION', rec_.repair_line_action, attr_);
   END IF;
   IF (rec_.repair_type IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('REPAIR_TYPE', rec_.repair_type, attr_);
   END IF;
   IF (rec_.customer_fault_code IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('CUSTOMER_FAULT_CODE', rec_.customer_fault_code, attr_);
   END IF;
   IF (rec_.note_text IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('NOTE_TEXT', rec_.note_text, attr_);
   END IF;
   IF (rec_.note_id IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('NOTE_ID', rec_.note_id, attr_);
   END IF;
   IF (rec_.billable_or_warranty IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('BILLABLE_OR_WARRANTY_DB', rec_.billable_or_warranty, attr_);
   END IF;
   IF (rec_.manufacturer_warranty IS NOT NULL) THEN
      IF (rec_.manufacturer_warranty) THEN
         Client_SYS.Set_Item_Value('MANUFACTURER_WARRANTY_DB', 'TRUE', attr_);
      ELSE
         Client_SYS.Set_Item_Value('MANUFACTURER_WARRANTY_DB', 'FALSE', attr_);
      END IF;
   END IF;
   IF (rec_.repair_warranty IS NOT NULL) THEN
      IF (rec_.repair_warranty) THEN
         Client_SYS.Set_Item_Value('REPAIR_WARRANTY_DB', 'TRUE', attr_);
      ELSE
         Client_SYS.Set_Item_Value('REPAIR_WARRANTY_DB', 'FALSE', attr_);
      END IF;
   END IF;
   IF (rec_.warranty_validated IS NOT NULL) THEN
      IF (rec_.warranty_validated) THEN
         Client_SYS.Set_Item_Value('WARRANTY_VALIDATED_DB', 'TRUE', attr_);
      ELSE
         Client_SYS.Set_Item_Value('WARRANTY_VALIDATED_DB', 'FALSE', attr_);
      END IF;
   END IF;
   IF (rec_.processing_fee IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('PROCESSING_FEE', rec_.processing_fee, attr_);
   END IF;
   IF (rec_.required_start IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('REQUIRED_START', rec_.required_start, attr_);
   END IF;
END Add_To_Attr_From_Rec___;


PROCEDURE Add_To_Rec_From_Attr___ (
   attr_ IN     VARCHAR2,
   rec_  IN OUT NOCOPY Bc_Repair_Line_Rec )
IS
BEGIN
   IF (Client_SYS.Item_Exist('OBJSTATE', attr_)) THEN
      rec_.objstate := Client_SYS.Get_Item_Value('OBJSTATE', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('OBJGRANTS', attr_)) THEN
      rec_.objgrants := Client_SYS.Get_Item_Value('OBJGRANTS', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('RCO_NO', attr_)) THEN
      rec_.rco_no := Client_SYS.Get_Item_Value('RCO_NO', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('REPAIR_LINE_NO', attr_)) THEN
      rec_.repair_line_no := Client_SYS.Get_Item_Value('REPAIR_LINE_NO', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('DATE_ENTERED', attr_)) THEN
      rec_.date_entered := Client_SYS.Get_Item_Value_To_Date('DATE_ENTERED', attr_, lu_name_);
   END IF;
   IF (Client_SYS.Item_Exist('REPAIR_SITE', attr_)) THEN
      rec_.repair_site := Client_SYS.Get_Item_Value('REPAIR_SITE', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('PART_NUMBER', attr_)) THEN
      rec_.part_number := Client_SYS.Get_Item_Value('PART_NUMBER', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('QUANTITY', attr_)) THEN
      rec_.quantity := Client_SYS.Get_Item_Value('QUANTITY', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('QUANTITY_RECEIVED', attr_)) THEN
      rec_.quantity_received := Client_SYS.Get_Item_Value('QUANTITY_RECEIVED', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('CONDITION_CODE', attr_)) THEN
      rec_.condition_code := Client_SYS.Get_Item_Value('CONDITION_CODE', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('SERIAL_NO', attr_)) THEN
      rec_.serial_no := Client_SYS.Get_Item_Value('SERIAL_NO', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('OWNERSHIP_CODE_DB', attr_)) THEN
      rec_.ownership_code := Client_SYS.Get_Item_Value('OWNERSHIP_CODE_DB', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('OWNER_ID', attr_)) THEN
      rec_.owner_id := Client_SYS.Get_Item_Value('OWNER_ID', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('REPAIR_LINE_ACTION', attr_)) THEN
      rec_.repair_line_action := Client_SYS.Get_Item_Value('REPAIR_LINE_ACTION', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('REPAIR_TYPE', attr_)) THEN
      rec_.repair_type := Client_SYS.Get_Item_Value('REPAIR_TYPE', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('CUSTOMER_FAULT_CODE', attr_)) THEN
      rec_.customer_fault_code := Client_SYS.Get_Item_Value('CUSTOMER_FAULT_CODE', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('NOTE_TEXT', attr_)) THEN
      rec_.note_text := Client_SYS.Get_Item_Value('NOTE_TEXT', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('NOTE_ID', attr_)) THEN
      rec_.note_id := Client_SYS.Get_Item_Value('NOTE_ID', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('BILLABLE_OR_WARRANTY_DB', attr_)) THEN
      rec_.billable_or_warranty := Client_SYS.Get_Item_Value('BILLABLE_OR_WARRANTY_DB', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('MANUFACTURER_WARRANTY_DB', attr_)) THEN
      rec_.manufacturer_warranty := CASE Client_SYS.Get_Item_Value('MANUFACTURER_WARRANTY_DB', attr_) WHEN 'TRUE' THEN TRUE WHEN 'FALSE' THEN FALSE ELSE NULL END;
   END IF;
   IF (Client_SYS.Item_Exist('REPAIR_WARRANTY_DB', attr_)) THEN
      rec_.repair_warranty := CASE Client_SYS.Get_Item_Value('REPAIR_WARRANTY_DB', attr_) WHEN 'TRUE' THEN TRUE WHEN 'FALSE' THEN FALSE ELSE NULL END;
   END IF;
   IF (Client_SYS.Item_Exist('WARRANTY_VALIDATED_DB', attr_)) THEN
      rec_.warranty_validated := CASE Client_SYS.Get_Item_Value('WARRANTY_VALIDATED_DB', attr_) WHEN 'TRUE' THEN TRUE WHEN 'FALSE' THEN FALSE ELSE NULL END;
   END IF;
   IF (Client_SYS.Item_Exist('PROCESSING_FEE', attr_)) THEN
      rec_.processing_fee := Client_SYS.Get_Item_Value('PROCESSING_FEE', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('REQUIRED_START', attr_)) THEN
      rec_.required_start := Client_SYS.Get_Item_Value_To_Date('REQUIRED_START', attr_, lu_name_);
   END IF;
END Add_To_Rec_From_Attr___;


PROCEDURE Add_Keys_To_Rec_From_Attr___ (
   attr_ IN  VARCHAR2,
   rec_ IN OUT NOCOPY Bc_Repair_Line_Rec )
IS
BEGIN
   IF (Client_SYS.Item_Exist('RCO_NO', attr_)) THEN
      rec_.rco_no := Client_SYS.Get_Item_Value('RCO_NO', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('REPAIR_LINE_NO', attr_)) THEN
      rec_.repair_line_no := Client_SYS.Get_Item_Value('REPAIR_LINE_NO', attr_);
   END IF;
END Add_Keys_To_Rec_From_Attr___;


FUNCTION Add_To_Rec_From_Default_Copy_Rec___(
   default_copy_rec_ IN     Bc_Repair_Line_Default_Copy_Rec) RETURN Bc_Repair_Line_Rec
IS
   rec_ Bc_Repair_Line_Rec;
BEGIN
   rec_.objstate := default_copy_rec_.objstate;
   rec_.objgrants := default_copy_rec_.objgrants;
   rec_.rco_no := default_copy_rec_.rco_no;
   rec_.repair_line_no := default_copy_rec_.repair_line_no;
   rec_.date_entered := default_copy_rec_.date_entered;
   rec_.repair_site := default_copy_rec_.repair_site;
   rec_.part_number := default_copy_rec_.part_number;
   rec_.quantity := default_copy_rec_.quantity;
   rec_.quantity_received := default_copy_rec_.quantity_received;
   rec_.condition_code := default_copy_rec_.condition_code;
   rec_.serial_no := default_copy_rec_.serial_no;
   rec_.ownership_code := default_copy_rec_.ownership_code;
   rec_.owner_id := default_copy_rec_.owner_id;
   rec_.repair_line_action := default_copy_rec_.repair_line_action;
   rec_.repair_type := default_copy_rec_.repair_type;
   rec_.customer_fault_code := default_copy_rec_.customer_fault_code;
   rec_.note_text := default_copy_rec_.note_text;
   rec_.note_id := default_copy_rec_.note_id;
   rec_.billable_or_warranty := default_copy_rec_.billable_or_warranty;
   rec_.manufacturer_warranty := CASE default_copy_rec_.manufacturer_warranty WHEN 'TRUE' THEN TRUE WHEN 'FALSE' THEN FALSE ELSE NULL END;
   rec_.repair_warranty := CASE default_copy_rec_.repair_warranty WHEN 'TRUE' THEN TRUE WHEN 'FALSE' THEN FALSE ELSE NULL END;
   rec_.warranty_validated := CASE default_copy_rec_.warranty_validated WHEN 'TRUE' THEN TRUE WHEN 'FALSE' THEN FALSE ELSE NULL END;
   rec_.processing_fee := default_copy_rec_.processing_fee;
   rec_.required_start := default_copy_rec_.required_start;
   RETURN rec_;
END Add_To_Rec_From_Default_Copy_Rec___;


FUNCTION Get_Record_By_Objid___ (
   objid_ IN VARCHAR2,
   bc_repair_line## IN VARCHAR2 ) RETURN Bc_Repair_Line_Rec
IS
   default_copy_rec_ Bc_Repair_Line_Default_Copy_Rec;
   rec_ Bc_Repair_Line_Rec;
BEGIN
   SELECT
      NULL objstate,
      NULL objgrants,
      rco_no rco_no,
      repair_line_no repair_line_no,
      date_entered date_entered,
      repair_site repair_site,
      part_number part_number,
      quantity quantity,
      quantity_received quantity_received,
      condition_code condition_code,
      serial_no serial_no,
      ownership_code_db ownership_code,
      owner_id owner_id,
      repair_line_action repair_line_action,
      repair_type repair_type,
      customer_fault_code customer_fault_code,
      note_text note_text,
      note_id note_id,
      billable_or_warranty_db billable_or_warranty,
      manufacturer_warranty_db manufacturer_warranty,
      repair_warranty_db repair_warranty,
      warranty_validated_db warranty_validated,
      processing_fee processing_fee,
      required_start required_start   INTO default_copy_rec_
   FROM BC_REPAIR_LINE
   WHERE
    objid = objid_;

   rec_ := Add_To_Rec_From_Default_Copy_Rec___(default_copy_rec_);
   RETURN rec_;
EXCEPTION
   WHEN NO_DATA_FOUND THEN
      Error_SYS.Record_Not_Exist(lu_name_);
END Get_Record_By_Objid___;


PROCEDURE Get_Objid_Objversion___ (
   objid_         OUT VARCHAR2,
   objversion_    OUT VARCHAR2,
   key_        IN     Bc_Repair_Line_Key )
IS
BEGIN
   SELECT objid, objversion
      INTO  objid_, objversion_
      FROM  BC_REPAIR_LINE
      WHERE rco_no = key_.rco_no
      AND   repair_line_no = key_.repair_line_no;
EXCEPTION
   WHEN NO_DATA_FOUND THEN
      Error_SYS.Odp_Record_Not_Exist(Bc_Repair_Line_API.lu_name_);
END Get_Objid_Objversion___;


PROCEDURE CRUD_Default___ (
   key_  IN     Bc_Repair_Line_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2 )
IS
   rec_        Bc_Repair_Line_Rec;
   objid_      VARCHAR2(2000);
   objversion_ VARCHAR2(2000);
BEGIN
   Bc_Repair_Line_API.New__(info_, objid_, objversion_, attr_, 'PREPARE');
   IF (Client_SYS.Item_Exist('OWNERSHIP_CODE', attr_)) THEN
      IF (NOT Client_SYS.Item_Exist('OWNERSHIP_CODE_DB', attr_)) THEN
         Client_SYS.Add_To_Attr('OWNERSHIP_CODE_DB', Bc_Ownership_Code_API.Encode(Client_SYS.Get_Item_Value('OWNERSHIP_CODE', attr_)), attr_);
      END IF;
      attr_ := Client_SYS.Remove_Attr('OWNERSHIP_CODE', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('BILLABLE_OR_WARRANTY', attr_)) THEN
      IF (NOT Client_SYS.Item_Exist('BILLABLE_OR_WARRANTY_DB', attr_)) THEN
         Client_SYS.Add_To_Attr('BILLABLE_OR_WARRANTY_DB', B_C_Bill_Or_War_API.Encode(Client_SYS.Get_Item_Value('BILLABLE_OR_WARRANTY', attr_)), attr_);
      END IF;
      attr_ := Client_SYS.Remove_Attr('BILLABLE_OR_WARRANTY', attr_);
   END IF;
   Add_To_Rec_From_Attr___(attr_, rec_);
   CRUD_Default___(rec_);
   Add_To_Attr_From_Rec___(rec_, attr_);
END CRUD_Default___;


PROCEDURE CRUD_Default___ (
   rec_  IN OUT NOCOPY Bc_Repair_Line_Rec )
IS
BEGIN
   NULL;
END CRUD_Default___;


PROCEDURE CRUD_Default_Copy___ (
   rec_  IN OUT NOCOPY Bc_Repair_Line_Rec )
IS
BEGIN
   NULL;
END CRUD_Default_Copy___;


PROCEDURE CRUD_Create___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Repair_Line_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_      VARCHAR2(2000);
   objversion_ VARCHAR2(2000);
BEGIN
   Bc_Repair_Line_API.New__(info_, objid_, objversion_, attr_, action_);
   IF (action_ = 'DO') THEN
   etag_ := Get_Etag___(objid_, objversion_);
   SELECT rco_no, repair_line_no
      INTO key_.rco_no, key_.repair_line_no
      FROM BC_REPAIR_LINE
      WHERE objid = objid_;
   END IF;
END CRUD_Create___;


PROCEDURE CRUD_Update___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Repair_Line_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*' ) THEN
      objid_ := objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Bc_Repair_Line_API.Modify__(info_, objid_, objversion_, attr_, action_);
   etag_ := Get_Etag___(objid_, objversion_);
END CRUD_Update___;


PROCEDURE CRUD_Delete___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Line_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*' ) THEN
      objid_ := objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Bc_Repair_Line_API.Remove__(info_, objid_, objversion_, action_);
   etag_ := NULL;
END CRUD_Delete___;


PROCEDURE Cancel___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Line_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   attr_                VARCHAR2(4000);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*') THEN
      objid_:= objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Client_SYS.Clear_Attr(attr_);
   Bc_Repair_Line_API.Cancel__(info_, objid_, objversion_, attr_, action_);
   etag_ := Get_Etag___(objid_, objversion_);
END Cancel___;


PROCEDURE Receive___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Line_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   attr_                VARCHAR2(4000);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*') THEN
      objid_:= objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Client_SYS.Clear_Attr(attr_);
   Bc_Repair_Line_API.Receive__(info_, objid_, objversion_, attr_, action_);
   etag_ := Get_Etag___(objid_, objversion_);
END Receive___;


PROCEDURE Process___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Line_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   attr_                VARCHAR2(4000);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*') THEN
      objid_:= objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Client_SYS.Clear_Attr(attr_);
   Bc_Repair_Line_API.Process__(info_, objid_, objversion_, attr_, action_);
   etag_ := Get_Etag___(objid_, objversion_);
END Process___;


PROCEDURE Repair_Start___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Line_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   attr_                VARCHAR2(4000);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*') THEN
      objid_:= objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Client_SYS.Clear_Attr(attr_);
   Bc_Repair_Line_API.Repair_Start__(info_, objid_, objversion_, attr_, action_);
   etag_ := Get_Etag___(objid_, objversion_);
END Repair_Start___;


PROCEDURE Repair_Complete___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Line_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   attr_                VARCHAR2(4000);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*') THEN
      objid_:= objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Client_SYS.Clear_Attr(attr_);
   Bc_Repair_Line_API.Repair_Complete__(info_, objid_, objversion_, attr_, action_);
   etag_ := Get_Etag___(objid_, objversion_);
END Repair_Complete___;


PROCEDURE Ship___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Repair_Line_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   attr_                VARCHAR2(4000);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*') THEN
      objid_:= objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Client_SYS.Clear_Attr(attr_);
   Bc_Repair_Line_API.Ship__(info_, objid_, objversion_, attr_, action_);
   etag_ := Get_Etag___(objid_, objversion_);
END Ship___;

-----------------------------------------------------------------------------
-------------------- PRIVATE METHODS FOR BC LOG INFO ------------------------
-----------------------------------------------------------------------------

FUNCTION CRUD_Default(attr_ IN VARCHAR2 DEFAULT NULL, bc_log_info## IN VARCHAR2 ) RETURN Entity_Small_Drr PIPELINED
IS
   ret_ Entity_Small_Dec;
   key_ Bc_Log_Info_Key;
BEGIN
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'CRUD_Default');
   ret_.attr := attr_;
   CRUD_Default___(key_, ret_.attr, ret_.info);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000) := Client_SYS.Get_All_Info;
         objid_     VARCHAR2(4000) := Get_Objid_From_Etag___(ret_.etag);
         attr_cf_   VARCHAR2(4000) := attr_;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Log_Info_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, attr_cf_, '', 'PREPARE', 'P');
         ret_.attr := ret_.attr || attr_cf_;
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   PIPE ROW (ret_);
END CRUD_Default;



--@IgnoreMissingSysinit
FUNCTION CRUD_Default_Copy(values_ IN Copy_Values_Rec, bc_log_info## IN VARCHAR2 ) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Log_Info_Key;
   objid_  VARCHAR2(10) := NULL;
BEGIN
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'CRUD_Default_Copy');
   CRUD_Default_Copy___(objid_, key_, values_, ret_.attr, ret_.info);
   RETURN ret_;
END CRUD_Default_Copy;


--@IgnoreMissingSysinit
FUNCTION CRUD_Default_Copy(etag_ IN VARCHAR2, rco_no_ IN NUMBER, log_info_id_ IN NUMBER, values_ IN Copy_Values_Rec, bc_log_info## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Log_Info_Key;
   objid_  VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
BEGIN
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'CRUD_Default_Copy');
   key_.rco_no := rco_no_;
   key_.log_info_id := log_info_id_;
   CRUD_Default_Copy___(objid_, key_, values_, ret_.attr, ret_.info);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000) := Client_SYS.Get_All_Info;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Log_Info_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, ret_.attr, '', 'COPY', 'D');
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   RETURN ret_;
END CRUD_Default_Copy;


FUNCTION CRUD_Create(attr_ IN VARCHAR2, action_ IN VARCHAR2, bc_log_info## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Log_Info_Key;
BEGIN
   General_SYS.Init_Projection_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'CRUD_Create');
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'CRUD_Create');
   ret_.attr := attr_;
   CRUD_Create___(ret_.etag, key_, ret_.attr, ret_.info, action_);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000)  := Client_SYS.Get_All_Info;
         objid_     VARCHAR2(4000)  := Get_Objid_From_Etag___(ret_.etag);
         attr_cf_   VARCHAR2(32000) := attr_;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Log_Info_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, attr_cf_, '', action_, 'C');
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   Client_SYS.Set_Item_Value('RCO_NO', key_.rco_no, ret_.attr);
   Client_SYS.Set_Item_Value('LOG_INFO_ID', key_.log_info_id, ret_.attr);
   return ret_;
END CRUD_Create;


FUNCTION CRUD_Update(etag_ IN VARCHAR2, rco_no_ IN NUMBER, log_info_id_ IN NUMBER, attr_ IN VARCHAR2, action$_ IN VARCHAR2, bc_log_info## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Log_Info_Key;
BEGIN
   General_SYS.Init_Projection_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'CRUD_Update');
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'CRUD_Update');
   ret_.etag := etag_;
   ret_.attr := attr_;
   key_.rco_no := rco_no_;
   key_.log_info_id := log_info_id_;
   CRUD_Update___(ret_.etag, key_, ret_.attr, ret_.info, action$_);
   IF Component_FNDCOB_SYS.INSTALLED THEN
      DECLARE
         save_info_ VARCHAR2(4000)  := Client_SYS.Get_All_Info;
         objid_     VARCHAR2(4000)  := Get_Objid_From_Etag___(ret_.etag);
         attr_cf_   VARCHAR2(32000) := attr_;
      BEGIN
         Custom_Object_Proxy_SYS.Cf_Crud(Bc_Log_Info_API.lu_name_, 'CUSTOM_FIELD', save_info_, objid_, attr_cf_, '', action$_, 'U');
         Client_SYS.Merge_Info(save_info_);
      END;
   END IF;
   Client_SYS.Set_Item_Value('RCO_NO', key_.rco_no, ret_.attr);
   Client_SYS.Set_Item_Value('LOG_INFO_ID', key_.log_info_id, ret_.attr);
   return ret_;
END CRUD_Update;


FUNCTION CRUD_Delete(etag_ IN VARCHAR2, rco_no_ IN NUMBER, log_info_id_ IN NUMBER, action$_ IN VARCHAR2, bc_log_info## IN VARCHAR2) RETURN Entity_Dec
IS
   ret_ Entity_Dec;
   key_ Bc_Log_Info_Key;
BEGIN
   General_SYS.Init_Projection_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'CRUD_Delete');
   Log_SYS.Init_Method('Bc_Rco_Handling_SVC', 'CRUD_Delete');
   ret_.etag := etag_;
   key_.rco_no := rco_no_;
   key_.log_info_id := log_info_id_;
   CRUD_Delete___(ret_.etag, key_, ret_.info, action$_);
   return ret_;
END CRUD_Delete;


PROCEDURE Add_To_Attr_From_Rec___ (
   rec_  IN     Bc_Log_Info_Rec,
   attr_ IN OUT NOCOPY VARCHAR2 )
IS
BEGIN
   IF (rec_.objgrants IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('OBJGRANTS', rec_.objgrants, attr_);
   END IF;
   IF (rec_.rco_no IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('RCO_NO', rec_.rco_no, attr_);
   END IF;
   IF (rec_.log_info_id IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('LOG_INFO_ID', rec_.log_info_id, attr_);
   END IF;
   IF (rec_.rco_line IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('RCO_LINE', rec_.rco_line, attr_);
   END IF;
   IF (rec_.date_created IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('DATE_CREATED', rec_.date_created, attr_);
   END IF;
   IF (rec_.reported_by IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('REPORTED_BY', rec_.reported_by, attr_);
   END IF;
   IF (rec_.part_number IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('PART_NUMBER', rec_.part_number, attr_);
   END IF;
   IF (rec_.contract IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('CONTRACT', rec_.contract, attr_);
   END IF;
   IF (rec_.notes IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('NOTES', rec_.notes, attr_);
   END IF;
   IF (rec_.enter_by IS NOT NULL) THEN
      Client_SYS.Set_Item_Value('ENTER_BY', rec_.enter_by, attr_);
   END IF;
END Add_To_Attr_From_Rec___;


PROCEDURE Add_To_Rec_From_Attr___ (
   attr_ IN     VARCHAR2,
   rec_  IN OUT NOCOPY Bc_Log_Info_Rec )
IS
BEGIN
   IF (Client_SYS.Item_Exist('OBJGRANTS', attr_)) THEN
      rec_.objgrants := Client_SYS.Get_Item_Value('OBJGRANTS', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('RCO_NO', attr_)) THEN
      rec_.rco_no := Client_SYS.Get_Item_Value('RCO_NO', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('LOG_INFO_ID', attr_)) THEN
      rec_.log_info_id := Client_SYS.Get_Item_Value('LOG_INFO_ID', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('RCO_LINE', attr_)) THEN
      rec_.rco_line := Client_SYS.Get_Item_Value('RCO_LINE', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('DATE_CREATED', attr_)) THEN
      rec_.date_created := Client_SYS.Get_Item_Value_To_Date('DATE_CREATED', attr_, lu_name_);
   END IF;
   IF (Client_SYS.Item_Exist('REPORTED_BY', attr_)) THEN
      rec_.reported_by := Client_SYS.Get_Item_Value('REPORTED_BY', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('PART_NUMBER', attr_)) THEN
      rec_.part_number := Client_SYS.Get_Item_Value('PART_NUMBER', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('CONTRACT', attr_)) THEN
      rec_.contract := Client_SYS.Get_Item_Value('CONTRACT', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('NOTES', attr_)) THEN
      rec_.notes := Client_SYS.Get_Item_Value('NOTES', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('ENTER_BY', attr_)) THEN
      rec_.enter_by := Client_SYS.Get_Item_Value('ENTER_BY', attr_);
   END IF;
END Add_To_Rec_From_Attr___;


PROCEDURE Add_Keys_To_Rec_From_Attr___ (
   attr_ IN  VARCHAR2,
   rec_ IN OUT NOCOPY Bc_Log_Info_Rec )
IS
BEGIN
   IF (Client_SYS.Item_Exist('RCO_NO', attr_)) THEN
      rec_.rco_no := Client_SYS.Get_Item_Value('RCO_NO', attr_);
   END IF;
   IF (Client_SYS.Item_Exist('LOG_INFO_ID', attr_)) THEN
      rec_.log_info_id := Client_SYS.Get_Item_Value('LOG_INFO_ID', attr_);
   END IF;
END Add_Keys_To_Rec_From_Attr___;


FUNCTION Add_To_Rec_From_Default_Copy_Rec___(
   default_copy_rec_ IN     Bc_Log_Info_Default_Copy_Rec) RETURN Bc_Log_Info_Rec
IS
   rec_ Bc_Log_Info_Rec;
BEGIN
   rec_.objgrants := default_copy_rec_.objgrants;
   rec_.rco_no := default_copy_rec_.rco_no;
   rec_.log_info_id := default_copy_rec_.log_info_id;
   rec_.rco_line := default_copy_rec_.rco_line;
   rec_.date_created := default_copy_rec_.date_created;
   rec_.reported_by := default_copy_rec_.reported_by;
   rec_.part_number := default_copy_rec_.part_number;
   rec_.contract := default_copy_rec_.contract;
   rec_.notes := default_copy_rec_.notes;
   rec_.enter_by := default_copy_rec_.enter_by;
   RETURN rec_;
END Add_To_Rec_From_Default_Copy_Rec___;


FUNCTION Get_Record_By_Objid___ (
   objid_ IN VARCHAR2,
   bc_log_info## IN VARCHAR2 ) RETURN Bc_Log_Info_Rec
IS
   default_copy_rec_ Bc_Log_Info_Default_Copy_Rec;
   rec_ Bc_Log_Info_Rec;
BEGIN
   SELECT
      NULL objgrants,
      rco_no rco_no,
      log_info_id log_info_id,
      rco_line rco_line,
      date_created date_created,
      reported_by reported_by,
      part_number part_number,
      contract contract,
      notes notes,
      enter_by enter_by   INTO default_copy_rec_
   FROM BC_LOG_INFO
   WHERE
    objid = objid_;

   rec_ := Add_To_Rec_From_Default_Copy_Rec___(default_copy_rec_);
   RETURN rec_;
EXCEPTION
   WHEN NO_DATA_FOUND THEN
      Error_SYS.Record_Not_Exist(lu_name_);
END Get_Record_By_Objid___;


PROCEDURE Get_Objid_Objversion___ (
   objid_         OUT VARCHAR2,
   objversion_    OUT VARCHAR2,
   key_        IN     Bc_Log_Info_Key )
IS
BEGIN
   SELECT objid, objversion
      INTO  objid_, objversion_
      FROM  BC_LOG_INFO
      WHERE rco_no = key_.rco_no
      AND   log_info_id = key_.log_info_id;
EXCEPTION
   WHEN NO_DATA_FOUND THEN
      Error_SYS.Odp_Record_Not_Exist(Bc_Log_Info_API.lu_name_);
END Get_Objid_Objversion___;


PROCEDURE CRUD_Default___ (
   key_  IN     Bc_Log_Info_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2 )
IS
   rec_        Bc_Log_Info_Rec;
   objid_      VARCHAR2(2000);
   objversion_ VARCHAR2(2000);
BEGIN
   Bc_Log_Info_API.New__(info_, objid_, objversion_, attr_, 'PREPARE');
   Add_To_Rec_From_Attr___(attr_, rec_);
   CRUD_Default___(rec_);
   Add_To_Attr_From_Rec___(rec_, attr_);
END CRUD_Default___;


PROCEDURE CRUD_Default___ (
   rec_  IN OUT NOCOPY Bc_Log_Info_Rec )
IS
BEGIN
   NULL;
END CRUD_Default___;


PROCEDURE CRUD_Default_Copy___ (
   rec_  IN OUT NOCOPY Bc_Log_Info_Rec )
IS
BEGIN
   NULL;
END CRUD_Default_Copy___;


PROCEDURE CRUD_Create___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Log_Info_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_      VARCHAR2(2000);
   objversion_ VARCHAR2(2000);
BEGIN
   Bc_Log_Info_API.New__(info_, objid_, objversion_, attr_, action_);
   IF (action_ = 'DO') THEN
   etag_ := Get_Etag___(objid_, objversion_);
   SELECT rco_no, log_info_id
      INTO key_.rco_no, key_.log_info_id
      FROM BC_LOG_INFO
      WHERE objid = objid_;
   END IF;
END CRUD_Create___;


PROCEDURE CRUD_Update___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN OUT NOCOPY Bc_Log_Info_Key,
   attr_ IN OUT NOCOPY VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*' ) THEN
      objid_ := objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Bc_Log_Info_API.Modify__(info_, objid_, objversion_, attr_, action_);
   etag_ := Get_Etag___(objid_, objversion_);
END CRUD_Update___;


PROCEDURE CRUD_Delete___ (
   etag_ IN OUT NOCOPY VARCHAR2,
   key_  IN     Bc_Log_Info_Key,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   objid_               VARCHAR2(2000) := Get_Objid_From_Etag___(etag_);
   objversion_          VARCHAR2(2000) := Get_Objversion_From_Etag___(etag_);
   objid_from_key_      VARCHAR2(2000);
   objversion_from_key_ VARCHAR2(2000);
BEGIN
   IF (etag_ IS NULL) THEN
      Error_SYS.System_General('ODATA_TO_PLSQL_PROTOCOL: ETag must have a value');
   END IF;
   Get_Objid_Objversion___(objid_from_key_, objversion_from_key_, key_);
   IF (etag_ = '*' ) THEN
      objid_ := objid_from_key_;
      objversion_ := objversion_from_key_;
   ELSIF (objid_from_key_ != objid_) THEN
      Error_SYS.Record_General(lu_name_,'ETAG_INCORRECT: ETag is incorrect');
   END IF;
   Bc_Log_Info_API.Remove__(info_, objid_, objversion_, action_);
   etag_ := NULL;
END CRUD_Delete___;

-----------------------------------------------------------------------------
-------------------- TOP ----------------------------------------------------
-----------------------------------------------------------------------------

PROCEDURE Create_Customer_Line_Order_New(
   customer_order_no_ IN VARCHAR2,
   contract_ IN VARCHAR2,
   customer_id_ IN VARCHAR2,
   part_no_ IN VARCHAR2,
   quantity_ IN NUMBER)
IS
   info_             VARCHAR2(3000);
   attr_             VARCHAR2(32000);
BEGIN
   General_SYS.Init_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'Create_Customer_Line_Order_New', trace_only_ => TRUE);
   Client_SYS.Clear_Attr(attr_);
   
   Client_SYS.Add_To_Attr('ORDER_NO'            , customer_order_no_, attr_);
   Client_SYS.Add_To_Attr('CATALOG_NO'          , part_no_ ,          attr_);
   Client_SYS.Add_To_Attr('BUY_QTY_DUE'         , quantity_ ,         attr_);
   Client_SYS.Add_To_Attr('TARGET_DATE'         , sysdate,            attr_);
   Client_SYS.Add_To_Attr('CONTRACT'            , contract_,          attr_);
   Client_SYS.Add_To_Attr('CUSTOMER_NO'         , customer_id_,       attr_);
   Client_SYS.Add_To_Attr('WANTED_DELIVERY_DATE', sysdate,          attr_);
   
   Customer_Order_Line_API.New(info_,attr_);
END Create_Customer_Line_Order_New;


PROCEDURE Create_Cust_Order_Line(
   customer_order_no_   IN  VARCHAR2,
   contract_            IN  VARCHAR2,
   customer_id_         IN  VARCHAR2,
   part_no_             IN  VARCHAR2,
   quantity_            IN  NUMBER)
IS
   info_             VARCHAR2(30000);
   attr_             VARCHAR2(30000);
BEGIN
   General_SYS.Init_Method(Bc_Rco_Handling_SVC.lu_name_, 'Bc_Rco_Handling_SVC', 'Create_Cust_Order_Line', trace_only_ => TRUE);
   Client_SYS.Clear_Attr(attr_);
   
   Client_SYS.Add_To_Attr('ORDER_NO'            , customer_order_no_, attr_);
   Client_SYS.Add_To_Attr('CATALOG_NO'          , part_no_ ,          attr_);
   Client_SYS.Add_To_Attr('BUY_QTY_DUE'         , quantity_ ,         attr_);
   Client_SYS.Add_To_Attr('TARGET_DATE'         , sysdate,            attr_);
   Client_SYS.Add_To_Attr('CONTRACT'            , contract_,          attr_);
   Client_SYS.Add_To_Attr('CUSTOMER_NO'         , customer_id_,       attr_);
   Client_SYS.Add_To_Attr('WANTED_DELIVERY_DATE', sysdate,            attr_);
   
   Customer_Order_Line_API.New(info_,attr_);
END Create_Cust_Order_Line;


PROCEDURE Create_New_Cust_Order___ (
   customer_id_         IN    VARCHAR2,
   rco_no_              IN    NUMBER,
   contract_                  VARCHAR2,
   currency_                  VARCHAR2,
   delivery_address_id_       VARCHAR2)
IS
   info_           VARCHAR2(3000);
   attr_           VARCHAR2(32000);
   cust_ord_no_    VARCHAR2(12);
   
   CURSOR      get_rco_lines IS
      SELECT   *
      FROM     bc_repair_line_tab
      WHERE    rco_no = rco_no_;
BEGIN
   Client_SYS.Clear_Attr(attr_);
   
   Client_SYS.Add_To_Attr('CUSTOMER_NO',          customer_id_,             attr_);                               
   Client_SYS.Add_To_Attr('ORDER_ID',             'NO' ,                    attr_);
   Client_SYS.Add_To_Attr('CONTRACT',             contract_,                attr_); 
   Client_SYS.Add_To_Attr('CURRENCY_CODE',        currency_,                attr_);
   Client_SYS.Add_To_Attr('SHIP_ADDR_NO',         delivery_address_id_,     attr_);
   Client_SYS.Add_To_Attr('WANTED_DELIVERY_DATE', sysdate,                  attr_);  
   Client_SYS.Add_To_Attr('AUTHORIZE_CODE',       '*',                      attr_);
   
   Customer_Order_API.New(info_, attr_);
   
   cust_ord_no_   :=    Client_SYS.Get_Item_Value('ORDER_NO', attr_);
   
   Bc_Repair_Center_Order_API.Modify_Record(rco_no_,cust_ord_no_);
   
   FOR line_ IN get_rco_lines
   LOOP 
      IF(line_.rowstate != 'Cancelled') THEN
         Create_Cust_Order_Line(cust_ord_no_, line_.repair_site, customer_id_, line_.part_number,line_.quantity);
       END IF;
    END LOOP;
   Bc_Repair_Center_Order_API.Set_Order_State_Close_(rco_no_);
END Create_New_Cust_Order___;


FUNCTION Refresh_Page___ RETURN VARCHAR2
IS
BEGIN
   RETURN NULL;
END Refresh_Page___;


FUNCTION Get_Def_Infolog_Part___ (
   rco_line_ IN    NUMBER,
   rco_no_   IN    NUMBER) RETURN VARCHAR2
IS
   CURSOR      get_part   IS
      SELECT   part_number
      FROM     bc_repair_line_tab
      WHERE    repair_line_no = rco_line_ AND rco_no = rco_no_;
   
   part_number_ VARCHAR2(25);
BEGIN
   OPEN     get_part;
   FETCH    get_part INTO part_number_;
   CLOSE    get_part;
   
   RETURN   part_number_;
END Get_Def_Infolog_Part___;


FUNCTION Get_Def_Infolog_Part_Site___ (
   rco_line_    IN    NUMBER,
   rco_no_      IN    NUMBER) RETURN VARCHAR2
IS
   CURSOR      get_site   IS
      SELECT   repair_site
      FROM     bc_repair_line_tab
      WHERE    repair_line_no = rco_line_ AND rco_no = rco_no_;
   
   site_    VARCHAR2(5);
BEGIN
   OPEN     get_site;
   FETCH    get_site INTO site_;
   CLOSE    get_site;
   
   RETURN   site_;
END Get_Def_Infolog_Part_Site___;


FUNCTION Get_Default_Address___ (
   customer_id_   IN    VARCHAR2,
   address_type_  IN    VARCHAR2) RETURN VARCHAR2
IS
   address_id_   VARCHAR2(20);
BEGIN
   address_id_ := Customer_Info_Address_API.Get_Default_Address(customer_id_,Address_Type_Code_API.Decode(address_type_)); 
   
   RETURN address_id_;
END Get_Default_Address___;


FUNCTION Get_Owner_Id___ (
   rco_no_   IN  NUMBER) RETURN VARCHAR2
IS
   id_   VARCHAR2(20);
BEGIN
   id_   :=    Bc_Repair_Center_Order_API.Get_Customer_Id(rco_no_);
	RETURN   id_;
END Get_Owner_Id___;


--@IgnoreMissingSysinit
PROCEDURE CRUD_Default_Copy___ (
   objid_  IN  VARCHAR2,
   key_    IN  Bc_Repair_Center_Order_Key,
   values_ IN  Copy_Values_Rec,
   attr_   OUT VARCHAR2,
   info_   OUT VARCHAR2 )
IS
   
   PROCEDURE Base (
      objid_  IN     VARCHAR2,
      key_    IN     Bc_Repair_Center_Order_Key,
      values_ IN     Copy_Values_Rec,
      attr_      OUT VARCHAR2,
      info_      OUT VARCHAR2 )
   IS
      rec_            Bc_Repair_Center_Order_Rec;
      default_dec_    Entity_Small_Dec;
   BEGIN
      IF objid_ IS NOT NULL THEN
         rec_ := Get_Record_By_Objid___(objid_, bc_repair_center_order## => '');
      END IF;
      Add_To_Rec_From_Attr___(values_.modified_source, rec_);
      SELECT * INTO default_dec_ FROM TABLE(Bc_Rco_Handling_SVC.CRUD_Default('', bc_repair_center_order## => ''));
      Client_SYS.Merge_Info(default_dec_.info);
      Add_Keys_To_Rec_From_Attr___(default_dec_.attr, rec_);
      attr_ := default_dec_.attr;
      CRUD_Default_Copy___(rec_);
      Add_To_Attr_From_Rec___(rec_, attr_);
      info_ := Client_SYS.Get_All_Info();
   END Base;

   PROCEDURE Cust_Projection_BcRcoHandling (
      objid_  IN  VARCHAR2,
      key_    IN  Bc_Repair_Center_Order_Key,
      values_ IN  Copy_Values_Rec,
      attr_   OUT VARCHAR2,
      info_   OUT VARCHAR2 )
   IS
   BEGIN
      
      Base(objid_, key_, values_, attr_, info_);
      
      Client_SYS.Set_Item_Value('RCO_NO'                ,''     ,attr_);
      Client_SYS.Set_Item_Value('CUSTOMER_ORDER_NO'     ,''     ,attr_);
   END Cust_Projection_BcRcoHandling;

BEGIN
   Cust_Projection_BcRcoHandling(objid_, key_, values_, attr_, info_);
END CRUD_Default_Copy___;


--@IgnoreMissingSysinit
PROCEDURE CRUD_Default_Copy___ (
   objid_  IN  VARCHAR2,
   key_    IN  Bc_Repair_Line_Key,
   values_ IN  Copy_Values_Rec,
   attr_   OUT VARCHAR2,
   info_   OUT VARCHAR2 )
IS
   
   PROCEDURE Base (
      objid_  IN     VARCHAR2,
      key_    IN     Bc_Repair_Line_Key,
      values_ IN     Copy_Values_Rec,
      attr_      OUT VARCHAR2,
      info_      OUT VARCHAR2 )
   IS
      rec_            Bc_Repair_Line_Rec;
      default_dec_    Entity_Small_Dec;
   BEGIN
      IF objid_ IS NOT NULL THEN
         rec_ := Get_Record_By_Objid___(objid_, bc_repair_line## => '');
      END IF;
      Add_To_Rec_From_Attr___(values_.modified_source, rec_);
      SELECT * INTO default_dec_ FROM TABLE(Bc_Rco_Handling_SVC.CRUD_Default('', bc_repair_line## => ''));
      Client_SYS.Merge_Info(default_dec_.info);
      Add_Keys_To_Rec_From_Attr___(default_dec_.attr, rec_);
      attr_ := default_dec_.attr;
      CRUD_Default_Copy___(rec_);
      Add_To_Attr_From_Rec___(rec_, attr_);
      info_ := Client_SYS.Get_All_Info();
   END Base;

   PROCEDURE Cust_Projection_BcRcoHandling (
      objid_  IN  VARCHAR2,
      key_    IN  Bc_Repair_Line_Key,
      values_ IN  Copy_Values_Rec,
      attr_   OUT VARCHAR2,
      info_   OUT VARCHAR2 )
   IS
   BEGIN
      
      Base(objid_, key_, values_, attr_, info_);
      
      Client_SYS.Set_Item_Value('REPAIR_LINE_NO'   ,''      ,attr_);
      Client_SYS.Set_Item_Value('NOTE_ID'          ,''      , attr_);
      Client_SYS.Set_Item_Value('SERIAL_NO'        ,''      , attr_);
      Client_SYS.Set_Item_Value('PART_NUMBER'      ,''      , attr_);
      Client_SYS.Set_Item_Value('REQUIRED_START'   ,sysdate , attr_);
   END Cust_Projection_BcRcoHandling;

BEGIN
   Cust_Projection_BcRcoHandling(objid_, key_, values_, attr_, info_);
END CRUD_Default_Copy___;


--@IgnoreMissingSysinit
PROCEDURE CRUD_Default_Copy___ (
   objid_  IN  VARCHAR2,
   key_    IN  Bc_Log_Info_Key,
   values_ IN  Copy_Values_Rec,
   attr_   OUT VARCHAR2,
   info_   OUT VARCHAR2 )
IS
   
   PROCEDURE Base (
      objid_  IN     VARCHAR2,
      key_    IN     Bc_Log_Info_Key,
      values_ IN     Copy_Values_Rec,
      attr_      OUT VARCHAR2,
      info_      OUT VARCHAR2 )
   IS
      rec_            Bc_Log_Info_Rec;
      default_dec_    Entity_Small_Dec;
   BEGIN
      IF objid_ IS NOT NULL THEN
         rec_ := Get_Record_By_Objid___(objid_, bc_log_info## => '');
      END IF;
      Add_To_Rec_From_Attr___(values_.modified_source, rec_);
      SELECT * INTO default_dec_ FROM TABLE(Bc_Rco_Handling_SVC.CRUD_Default('', bc_log_info## => ''));
      Client_SYS.Merge_Info(default_dec_.info);
      Add_Keys_To_Rec_From_Attr___(default_dec_.attr, rec_);
      attr_ := default_dec_.attr;
      CRUD_Default_Copy___(rec_);
      Add_To_Attr_From_Rec___(rec_, attr_);
      info_ := Client_SYS.Get_All_Info();
   END Base;

   PROCEDURE Cust_Projection_BcRcoHandling (
      objid_  IN  VARCHAR2,
      key_    IN  Bc_Log_Info_Key,
      values_ IN  Copy_Values_Rec,
      attr_   OUT VARCHAR2,
      info_   OUT VARCHAR2 )
   IS
   BEGIN
      
      Base(objid_, key_, values_, attr_, info_);
      
      Client_SYS.Set_Item_Value('LOG_INFO_ID'   , ''        ,attr_);
      Client_SYS.Set_Item_Value('DATE_CREATED'  , sysdate   ,attr_);
   END Cust_Projection_BcRcoHandling;

BEGIN
   Cust_Projection_BcRcoHandling(objid_, key_, values_, attr_, info_);
END CRUD_Default_Copy___;


FUNCTION Get_Default_Infolog_Part___ (
   rco_line_ IN NUMBER,
   rco_no_ IN NUMBER) RETURN VARCHAR2
IS

   --The code for layer Core_Projection_BcRcoHandling is overtaken
   
   FUNCTION Cust_Projection_BcRcoHandling (
      rco_line_ IN NUMBER,
      rco_no_ IN NUMBER) RETURN VARCHAR2
   IS  
   BEGIN
      RETURN  '';
   END Cust_Projection_BcRcoHandling;

BEGIN
   RETURN Cust_Projection_BcRcoHandling(rco_line_, rco_no_);
END Get_Default_Infolog_Part___;


FUNCTION Get_Default_Infolog_Part_Site___ (
   rco_line_ IN NUMBER,
   rco_no_ IN NUMBER) RETURN VARCHAR2
IS

   --The code for layer Core_Projection_BcRcoHandling is overtaken
   
   FUNCTION Cust_Projection_BcRcoHandling (
      rco_line_ IN NUMBER,
      rco_no_ IN NUMBER) RETURN VARCHAR2
   IS
   BEGIN
      RETURN   '';
   END Cust_Projection_BcRcoHandling;

BEGIN
   RETURN Cust_Projection_BcRcoHandling(rco_line_, rco_no_);
END Get_Default_Infolog_Part_Site___;


PROCEDURE Create_New_Customer_Order___ (
   customer_id_ IN VARCHAR2,
   r_c_o_no_ IN NUMBER)
IS

   --The code for layer Core_Projection_BcRcoHandling is overtaken
   
   PROCEDURE Cust_Projection_BcRcoHandling (
      customer_id_ IN VARCHAR2,
      r_c_o_no_ IN NUMBER)
   IS 
   BEGIN
      NULL;
   END Cust_Projection_BcRcoHandling;

BEGIN
   Cust_Projection_BcRcoHandling(customer_id_, r_c_o_no_);
END Create_New_Customer_Order___;

-----------------------------------------------------------------------------
-------------------- HELPER METHODS -----------------------------------------
-----------------------------------------------------------------------------

FUNCTION Get_Objid_From_Etag___ (
   etag_ IN VARCHAR2 ) RETURN VARCHAR2
IS
   delim_pos_ INTEGER := instr(etag_, ':');
BEGIN
   RETURN substr(etag_, 4, delim_pos_-4);
END Get_Objid_From_Etag___;


FUNCTION Get_Objversion_From_Etag___ (
   etag_ IN VARCHAR2 ) RETURN VARCHAR2
IS
   delim_pos_ INTEGER := instr(etag_, ':');
BEGIN
   RETURN substr(etag_, delim_pos_+1, length(etag_)-delim_pos_-1);
END Get_Objversion_From_Etag___;


FUNCTION Get_Etag___ (
   objid_      IN VARCHAR2,
   objversion_ IN VARCHAR2 ) RETURN VARCHAR2
IS
BEGIN
   RETURN 'W/"'||objid_||':'||objversion_||'"';
END Get_Etag___;


FUNCTION Combine_Value_Unit___ (
   value_ IN VARCHAR2,
   unit_  IN VARCHAR2 ) RETURN VARCHAR2
IS
BEGIN
   IF (value_ IS NULL) THEN
      RETURN NULL;
   ELSE
      RETURN value_||'|'||unit_;
   END IF;
END Combine_Value_Unit___;

-----------------------------------------------------------------------------
-------------------- CONVERSION METHODS -------------------------------------
-----------------------------------------------------------------------------

FUNCTION To_Boolean_Arr____ (
   arr_ IN Text_Arr ) RETURN Boolean_Arr
IS
   ret_ Boolean_Arr := Boolean_Arr();
BEGIN
   IF (arr_.count > 0) THEN
      FOR i IN arr_.first .. arr_.last LOOP
      ret_.extend;
      ret_(ret_.last) := Fndcg_Projection_Svc_Util_API.To_Boolean(arr_(i));
      END LOOP;
   END IF;
   RETURN ret_;
END To_Boolean_Arr____;

END Bc_Rco_Handling_SVC;
-- [END IFS COMPLETE BLOCK]
/
SHOW ERROR

GRANT EXECUTE ON Bc_Rco_Handling_SVC TO IFSSYS
/

-- [IFS COMPLETE BLOCK BEGINEND]
DECLARE
   projection_ VARCHAR2(250) := 'BcRcoHandling';
BEGIN
   Fnd_Projection_API.Create_Or_Replace(projection_, description_ => 'Put some useful description here ...', categories_ => 'Users', component_ => 'BCRCO', layer_  => 'Cust', plsql_package_ => 'BC_RCO_HANDLING_SVC', api_class_ => '', deprecated_ => 'FALSE');
   Fnd_Proj_Action_API.Create_Or_Replace(projection_, 'CreateNewCustOrder');
   Fnd_Proj_Action_API.Create_Or_Replace(projection_, 'RefreshPage');
   Fnd_Proj_Entity_API.Create_Or_Replace(projection_, 'BcRepairCenterOrder', 'CRUD', 'BC_REPAIR_CENTER_ORDER', 'BcRepairCenterOrder', 'Main', 'FALSE');
   Fnd_Proj_Ent_Action_API.Create_Or_Replace(projection_, 'BcRepairCenterOrder', 'Cancel');
   Fnd_Proj_Ent_Action_API.Create_Or_Replace(projection_, 'BcRepairCenterOrder', 'Release');
   Fnd_Proj_Ent_Action_API.Create_Or_Replace(projection_, 'BcRepairCenterOrder', 'Start');
   Fnd_Proj_Ent_Action_API.Create_Or_Replace(projection_, 'BcRepairCenterOrder', 'Complete');
   Fnd_Proj_Ent_Action_API.Create_Or_Replace(projection_, 'BcRepairCenterOrder', 'Close');
   Fnd_Proj_Ent_Action_API.Create_Or_Replace(projection_, 'BcRepairCenterOrder', 'Reopen');
   Fnd_Proj_Entity_API.Create_Or_Replace(projection_, 'BcRepairLine', 'CRUD', 'BC_REPAIR_LINE', 'BcRepairLine', 'Main', 'FALSE');
   Fnd_Proj_Ent_Action_API.Create_Or_Replace(projection_, 'BcRepairLine', 'Cancel');
   Fnd_Proj_Ent_Action_API.Create_Or_Replace(projection_, 'BcRepairLine', 'Receive');
   Fnd_Proj_Ent_Action_API.Create_Or_Replace(projection_, 'BcRepairLine', 'Process');
   Fnd_Proj_Ent_Action_API.Create_Or_Replace(projection_, 'BcRepairLine', 'RepairStart');
   Fnd_Proj_Ent_Action_API.Create_Or_Replace(projection_, 'BcRepairLine', 'RepairComplete');
   Fnd_Proj_Ent_Action_API.Create_Or_Replace(projection_, 'BcRepairLine', 'Ship');
   Fnd_Proj_Entity_API.Create_Or_Replace(projection_, 'BcLogInfo', 'CRUD', 'BC_LOG_INFO', 'BcLogInfo', 'Main', 'FALSE');
   Fnd_Proj_Entity_API.Create_Or_Replace(projection_, 'CustomerInfo', 'R', 'CUSTOMER_INFO', 'CustomerInfo', 'Main', 'FALSE');
   Fnd_Proj_Lookup_Usage_API.Create_Or_Replace('BcRcoHandling', 'CustomerInfo', 'DefaultLanguage', 'IsoLanguage');
   Fnd_Proj_Lookup_Usage_API.Create_Or_Replace('BcRcoHandling', 'CustomerInfo', 'Country', 'IsoCountry');
   Fnd_Proj_Entity_API.Create_Or_Replace(projection_, 'CustomerInfoAddress', 'R', 'CUSTOMER_INFO_ADDRESS', 'CustomerInfoAddress', 'Main', 'FALSE');
   Fnd_Proj_Lookup_Usage_API.Create_Or_Replace('BcRcoHandling', 'CustomerInfoAddress', 'Country', 'IsoCountry');
   Fnd_Proj_Entity_API.Create_Or_Replace(projection_, 'IsoCurrency', 'R', 'ISO_CURRENCY', 'IsoCurrency', 'Main', 'FALSE');
   Fnd_Proj_Entity_API.Create_Or_Replace(projection_, 'Site', 'R', 'SITE', 'Site', 'Main', 'FALSE');
   Fnd_Proj_Entity_API.Create_Or_Replace(projection_, 'CustomerOrder', 'R', 'CUSTOMER_ORDER', 'CustomerOrder', 'Main', 'FALSE');
   Fnd_Proj_Lookup_Usage_API.Create_Or_Replace('BcRcoHandling', 'CustomerOrder', 'SupplyCountry', 'IsoCountry');
   Fnd_Proj_Entity_API.Create_Or_Replace(projection_, 'FndUser', 'R', 'FND_USER', 'FndUser', 'Main', 'FALSE');
   Fnd_Proj_Entity_API.Create_Or_Replace(projection_, 'BcRepairType', 'R', 'BC_REPAIR_TYPE', 'BcRepairType', 'Main', 'FALSE');
   Fnd_Proj_Entity_API.Create_Or_Replace(projection_, 'ConditionCode', 'R', 'CONDITION_CODE', 'ConditionCode', 'Main', 'FALSE');
   Fnd_Proj_Entity_API.Create_Or_Replace(projection_, 'InventoryPart', 'R', 'INVENTORY_PART', 'InventoryPart', 'Main', 'FALSE');
   Fnd_Proj_Entity_API.Create_Or_Replace(projection_, 'BcRepairLineAction', 'R', 'BC_REPAIR_LINE_ACTION', 'BcRepairLineAction', 'Main', 'FALSE');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'Reference_BcRepairLine', 'Entity', 'BcRepairLine');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'Reference_BcLogInfo', 'Entity', 'BcLogInfo');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'Reference_CustomerInfo', 'Entity', 'CustomerInfo');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'Reference_CustomerInfoAddress', 'Entity', 'CustomerInfoAddress');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'Lookup_IsoCurrency', 'Query', 'Lookup_IsoCurrency');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'Reference_IsoCurrency', 'Entity', 'IsoCurrency');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'Reference_Site', 'Entity', 'Site');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'Reference_CustomerOrder', 'Entity', 'CustomerOrder');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'Reference_FndUser', 'Entity', 'FndUser');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'Reference_BcRepairType', 'Entity', 'BcRepairType');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'Reference_ConditionCode', 'Entity', 'ConditionCode');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'Reference_InventoryPart', 'Entity', 'InventoryPart');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'Reference_BcRepairLineAction', 'Entity', 'BcRepairLineAction');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'Lookup_IsoUnit', 'Query', 'Lookup_IsoUnit');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'Lookup_IsoCountry', 'Query', 'Lookup_IsoCountry');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'BcRepairCenterOrderSet', 'Entity', 'BcRepairCenterOrder');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'BcRepairLineSet', 'Entity', 'BcRepairLine');
   Fnd_Proj_Entityset_API.Create_Or_Replace(projection_, 'BcLogInfoSet', 'Entity', 'BcLogInfo');
   Fnd_Proj_Query_API.Create_Or_Replace(projection_, 'Lookup_IsoCurrency', 'ISO_CURRENCY', NULL, 'Main', 'FALSE');
   Fnd_Proj_Query_API.Create_Or_Replace(projection_, 'Lookup_IsoUnit', 'ISO_UNIT', NULL, 'Main', 'FALSE');
   Fnd_Proj_Query_API.Create_Or_Replace(projection_, 'Lookup_IsoCountry', 'ISO_COUNTRY', NULL, 'Main', 'FALSE');
   Fnd_Proj_Large_Attr_Supp_Api.Set_Lob_Max_Size_Modifiable(projection_, false);

   COMMIT;
END;
-- [END IFS COMPLETE BLOCK]
/
