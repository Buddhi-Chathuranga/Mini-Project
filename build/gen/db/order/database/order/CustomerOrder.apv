-----------------------------------------------------------------------------
--
--  Logical unit: CustomerOrder
--  Type:         EntityWithState
--  Component:    ORDER
--
--  Template:     3.0
--  Built by:     IFS Developer Studio
--
--  NOTE! Do not edit!! This file is completely generated and will be
--        overwritten next time the corresponding model is saved.
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
-------------------- PUBLIC VIEW DEFINITIONS --------------------------------
-----------------------------------------------------------------------------

PROMPT Creating CUSTOMER_ORDER_PUB view

-- [IFS COMPLETE BLOCK VIEW CUSTOMER_ORDER_PUB]
CREATE OR REPLACE VIEW CUSTOMER_ORDER_PUB AS
SELECT order_no                                 order_no,
       scheduling_connection                    scheduling_connection_db,
       customer_no                              customer_no,
       contract                                 contract,
       business_opportunity_no                  business_opportunity_no,
       language_code                            language_code,
       print_delivered_lines                    print_delivered_lines_db,
       rowstate                                objstate,
       rowkey                                  objkey
FROM   customer_order_tab
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE CUSTOMER_ORDER_PUB
   IS 'LU=CustomerOrder^PROMPT=Customer Order^MODULE=ORDER^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('CUSTOMER_ORDER_PUB', 'customer_no', 'FLAGS=A----^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Customer No^REF=CustOrdCustomer/NOCHECK^');
   Alter_Column_Comment('CUSTOMER_ORDER_PUB', 'contract', 'FLAGS=A----^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^');
   Alter_Column_Comment('CUSTOMER_ORDER_PUB', 'business_opportunity_no', 'FLAGS=A----^DATATYPE=STRING(12)/UPPERCASE^PROMPT=Business Opportunity No^REF=BusinessOpportunity/NOCHECK^');
   Alter_Column_Comment('CUSTOMER_ORDER_PUB', 'order_no', 'FLAGS=K-I-L^DATATYPE=STRING(12)/UPPERCASE^PROMPT=Order No^');
   Alter_Column_Comment('CUSTOMER_ORDER_PUB', 'scheduling_connection_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Scheduling Connection^');
   Alter_Column_Comment('CUSTOMER_ORDER_PUB', 'language_code', 'FLAGS=AMIU-^DATATYPE=STRING(2)^PROMPT=Language Code^REF=ApplicationLanguage/NOCHECK^');
   Alter_Column_Comment('CUSTOMER_ORDER_PUB', 'print_delivered_lines_db', 'FLAGS=A----^DATATYPE=STRING(23)^PROMPT=Print Delivered Lines^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON CUSTOMER_ORDER_PUB TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


-----------------------------------------------------------------------------
-------------------- BASE VIEW DEFINITION -----------------------------------
-----------------------------------------------------------------------------

PROMPT Creating CUSTOMER_ORDER view

-- [IFS COMPLETE BLOCK VIEW CUSTOMER_ORDER]
CREATE OR REPLACE VIEW CUSTOMER_ORDER AS
SELECT
      t0.*,
      t3.company
FROM (SELECT
       order_no                       order_no,
       authorize_code                 authorize_code,
       bill_addr_no                   bill_addr_no,
       contract                       contract,
       country_code                   country_code,
       currency_code                  currency_code,
       customer_no                    customer_no,
       customer_no_pay                customer_no_pay,
       customer_no_pay_addr_no        customer_no_pay_addr_no,
       customer_no_pay_ref            customer_no_pay_ref,
       delivery_terms                 delivery_terms,
       district_code                  district_code,
       language_code                  language_code,
       market_code                    market_code,
       note_id                        note_id,
       order_code                     order_code,
       order_id                       order_id,
       pay_term_id                    pay_term_id,
       pre_accounting_id              pre_accounting_id,
       print_control_code             print_control_code,
       region_code                    region_code,
       salesman_code                  salesman_code,
       ship_addr_no                   ship_addr_no,
       ship_via_code                  ship_via_code,
       Gen_Yes_No_API.Decode(addr_flag) addr_flag,
       addr_flag                      addr_flag_db,
       Gen_Yes_No_API.Decode(grp_disc_calc_flag) grp_disc_calc_flag,
       grp_disc_calc_flag             grp_disc_calc_flag_db,
       customer_po_no                 customer_po_no,
       cust_ref                       cust_ref,
       date_entered                   date_entered,
       delivery_leadtime              delivery_leadtime,
       label_note                     label_note,
       note_text                      note_text,
       Order_Confirmation_Printed_API.Decode(order_conf) order_conf,
       order_conf                     order_conf_db,
       Print_Order_Confirmation_API.Decode(order_conf_flag) order_conf_flag,
       order_conf_flag                order_conf_flag_db,
       Print_Pack_List_API.Decode(pack_list_flag) pack_list_flag,
       pack_list_flag                 pack_list_flag_db,
       Print_Pick_List_API.Decode(pick_list_flag) pick_list_flag,
       pick_list_flag                 pick_list_flag_db,
       tax_liability                  tax_liability,
       Customer_Order_Address_API.Get_Country_Code(order_no) delivery_country_code,
       wanted_delivery_date           wanted_delivery_date,
       internal_po_no                 internal_po_no,
       route_id                       route_id,
       agreement_id                   agreement_id,
       forward_agent_id               forward_agent_id,
       Order_Delivery_Type_API.Decode(internal_delivery_type) internal_delivery_type,
       internal_delivery_type         internal_delivery_type_db,
       external_ref                   external_ref,
       project_id                     project_id,
       Staged_Billing_Type_API.Decode(staged_billing) staged_billing,
       staged_billing                 staged_billing_db,
       Service_Management_Connect_API.Decode(sm_connection) sm_connection,
       sm_connection                  sm_connection_db,
       Schedule_Agreement_Order_API.Decode(scheduling_connection) scheduling_connection,
       scheduling_connection          scheduling_connection_db,
       priority                       priority,
       Intrastat_Exempt_API.Decode(intrastat_exempt) intrastat_exempt,
       intrastat_exempt               intrastat_exempt_db,
       additional_discount            additional_discount,
       pay_term_base_date             pay_term_base_date,
       Gen_Yes_No_API.Decode(summarized_source_lines) summarized_source_lines,
       summarized_source_lines        summarized_source_lines_db,
       case_id                        case_id,
       task_id                        task_id,
       Fnd_Boolean_API.Decode(confirm_deliveries) confirm_deliveries,
       confirm_deliveries             confirm_deliveries_db,
       Fnd_Boolean_API.Decode(check_sales_grp_deliv_conf) check_sales_grp_deliv_conf,
       check_sales_grp_deliv_conf     check_sales_grp_deliv_conf_db,
       Fnd_Boolean_API.Decode(delay_cogs_to_deliv_conf) delay_cogs_to_deliv_conf,
       delay_cogs_to_deliv_conf       delay_cogs_to_deliv_conf_db,
       cancel_reason                  cancel_reason,
       Fnd_Boolean_API.Decode(jinsui_invoice) jinsui_invoice,
       jinsui_invoice                 jinsui_invoice_db,
       blocked_reason                 blocked_reason,
       blocked_from_state             blocked_from_state,
       sales_contract_no              sales_contract_no,
       contract_rev_seq               contract_rev_seq,
       contract_line_no               contract_line_no,
       contract_item_no               contract_item_no,
       NULL                           default_charges,
       Fnd_Boolean_API.Decode(released_from_credit_check) released_from_credit_check,
       released_from_credit_check     released_from_credit_check_db,
       proposed_prepayment_amount     proposed_prepayment_amount,
       Fnd_Boolean_API.Decode(prepayment_approved) prepayment_approved,
       prepayment_approved            prepayment_approved_db,
       Customer_Backorder_Option_API.Decode(backorder_option) backorder_option,
       backorder_option               backorder_option_db,
       expected_prepayment_date       expected_prepayment_date,
       Shipment_Creation_API.Decode(shipment_creation) shipment_creation,
       shipment_creation              shipment_creation_db,
       Fnd_Boolean_API.Decode(use_pre_ship_del_note) use_pre_ship_del_note,
       use_pre_ship_del_note          use_pre_ship_del_note_db,
       Pick_Inventory_Type_API.Decode(pick_inventory_type) pick_inventory_type,
       pick_inventory_type            pick_inventory_type_db,
       tax_id_no                      tax_id_no,
       tax_id_validated_date          tax_id_validated_date,
       classification_standard        classification_standard,
       msg_sequence_no                msg_sequence_no,
       msg_version_no                 msg_version_no,
       currency_rate_type             currency_rate_type,
       del_terms_location             del_terms_location,
       internal_ref                   internal_ref,
       internal_po_label_note         internal_po_label_note,
       Iso_Country_API.Decode(supply_country) supply_country,
       supply_country                 supply_country_db,
       rebate_customer                rebate_customer,
       freight_map_id                 freight_map_id,
       zone_id                        zone_id,
       freight_price_list_no          freight_price_list_no,
       Gen_Yes_No_API.Decode(summarized_freight_charges) summarized_freight_charges,
       summarized_freight_charges     summarized_freight_charges_db,
       Fnd_Boolean_API.Decode(apply_fix_deliv_freight) apply_fix_deliv_freight,
       apply_fix_deliv_freight        apply_fix_deliv_freight_db,
       fix_deliv_freight              fix_deliv_freight,
       Delivery_Note_Options_API.Decode(print_delivered_lines) print_delivered_lines,
       print_delivered_lines          print_delivered_lines_db,
       NULL                           update_price_effective_date,
       cust_calendar_id               cust_calendar_id,
       ext_transport_calendar_id      ext_transport_calendar_id,
       Fnd_Boolean_API.Decode(use_price_incl_tax) use_price_incl_tax,
       use_price_incl_tax             use_price_incl_tax_db,
       customs_value_currency         customs_value_currency,
       business_opportunity_no        business_opportunity_no,
       picking_leadtime               picking_leadtime,
       shipment_type                  shipment_type,
       vendor_no                      vendor_no,
       NULL                           disconnect_exp_license,
       NULL                           replicate_changes,
       NULL                           change_request,
       quotation_no                   quotation_no,
       Tax_Paying_Party_API.Decode(free_of_chg_tax_pay_party) free_of_chg_tax_pay_party,
       free_of_chg_tax_pay_party      free_of_chg_tax_pay_party_db,
       Customer_Order_Block_Type_API.Decode(blocked_type) blocked_type,
       blocked_type                   blocked_type_db,
       Fnd_Boolean_API.Decode(b2b_order) b2b_order,
       b2b_order                      b2b_order_db,
       main_representative_id         main_representative_id,
       Fnd_Boolean_API.Decode(limit_sales_to_assortments) limit_sales_to_assortments,
       limit_sales_to_assortments     limit_sales_to_assortments_db,
       Fnd_Boolean_API.Decode(final_consumer) final_consumer,
       final_consumer                 final_consumer_db,
       customer_tax_usage_type        customer_tax_usage_type,
       invoice_reason_id              invoice_reason_id,
       delivery_reason_id             delivery_reason_id,
       component_a                    component_a,
       service_code                   service_code,
       Fnd_Boolean_API.Decode(disc_price_round) disc_price_round,
       disc_price_round               disc_price_round_db,
       business_transaction_id        business_transaction_id,
       invoiced_closed_date           invoiced_closed_date,
       rowstate                       objstate,
       Customer_Order_API.Finite_State_Events__(rowstate)                     objevents,
       Customer_Order_API.Finite_State_Decode__(rowstate)                         state,
       rowkey                         objkey,
       to_char(rowversion,'YYYYMMDDHH24MISS') objversion,
       rowid                          objid
FROM   customer_order_tab 
WHERE  EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE customer_order_tab.contract = site)
AND    order_no IN (SELECT * FROM customer_order_usg)) t0
LEFT OUTER JOIN site_tab t3
ON t0.contract = t3.contract
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE CUSTOMER_ORDER
   IS 'LU=CustomerOrder^PROMPT=Customer Order^MODULE=ORDER^TABLE=CUSTOMER_ORDER_TAB^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('CUSTOMER_ORDER', 'order_no', 'FLAGS=K-I-L^DATATYPE=STRING(12)/UPPERCASE^PROMPT=Order No^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'authorize_code', 'FLAGS=AMIUL^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Authorize Code^REF=OrderCoordinator^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'bill_addr_no', 'FLAGS=A-IUL^DATATYPE=STRING(50)^PROMPT=Bill Addr No^REF=CustomerInfoAddress(customer_no)^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'contract', 'FLAGS=AMI-L^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site^ROW_LEVEL_SECURITY=site^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'country_code', 'FLAGS=A-IU-^DATATYPE=STRING(2)/UPPERCASE^PROMPT=Country Code^REF=IsoCountry^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'currency_code', 'FLAGS=AMI--^DATATYPE=STRING(3)/UPPERCASE^PROMPT=Currency Code^REF=IsoCurrency^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'customer_no', 'FLAGS=AMI-L^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Customer No^REF=CustOrdCustomer^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'customer_no_pay', 'FLAGS=A-IU-^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Customer No Pay^REF=CustOrdCustomer^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'customer_no_pay_addr_no', 'FLAGS=A-IU-^DATATYPE=STRING(50)^PROMPT=Customer No Pay Addr No^REF=CustomerInfoAddress(customer_no_pay)^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'customer_no_pay_ref', 'FLAGS=A-IUL^DATATYPE=STRING(30)^PROMPT=Customer No Pay Reference^COLUMN=CUSTOMER_NO_PAY_REF^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'delivery_terms', 'FLAGS=AMIU-^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Delivery Terms^REF=OrderDeliveryTerm^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'district_code', 'FLAGS=A-IU-^DATATYPE=STRING(10)/UPPERCASE^PROMPT=District Code^REF=SalesDistrict^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'language_code', 'FLAGS=AMIU-^DATATYPE=STRING(2)^PROMPT=Language Code^REF=ApplicationLanguage^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'market_code', 'FLAGS=A-IU-^DATATYPE=STRING(10)/UPPERCASE^PROMPT=Market Code^REF=SalesMarket^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'note_id', 'FLAGS=A-I--^DATATYPE=NUMBER^PROMPT=Note ID^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'order_code', 'FLAGS=AMI--^DATATYPE=STRING(3)/UPPERCASE^PROMPT=Order Code^REF=CustomerOrderCode^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'order_id', 'FLAGS=AMI--^DATATYPE=STRING(3)/UPPERCASE^PROMPT=Order Type^REF=CustOrderType^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'pay_term_id', 'FLAGS=A-IU-^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Payment Terms^REF=PaymentTerm(company)/CUSTOM=(Check_Payment_Term__,)^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'pre_accounting_id', 'FLAGS=A-I--^DATATYPE=NUMBER^PROMPT=Pre Accounting ID^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'print_control_code', 'FLAGS=A-IU-^DATATYPE=STRING(10)/UPPERCASE^PROMPT=Print Control Code^REF=CustOrdPrintControl^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'region_code', 'FLAGS=A-IU-^DATATYPE=STRING(10)/UPPERCASE^PROMPT=Region Code^REF=SalesRegion^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'salesman_code', 'FLAGS=A-IU-^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Salesperson Code^REF=SalesPartSalesman^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'ship_addr_no', 'FLAGS=AMIU-^DATATYPE=STRING(50)^PROMPT=Ship Addr No^REF=CustOrdCustomerAddress(customer_no)^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'ship_via_code', 'FLAGS=A-IU-^DATATYPE=STRING(3)/UPPERCASE^PROMPT=Ship Via Code^REF=MpccomShipVia^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'addr_flag', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=GenYesNo^PROMPT=Addr Flag^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'addr_flag_db', 'FLAGS=A----^DATATYPE=STRING(1)^PROMPT=Addr Flag^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'grp_disc_calc_flag', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=GenYesNo^PROMPT=Grp Disc Calc Flag^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'grp_disc_calc_flag_db', 'FLAGS=A----^DATATYPE=STRING(1)^PROMPT=Grp Disc Calc Flag^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'customer_po_no', 'FLAGS=A-IU-^DATATYPE=STRING(50)^PROMPT=Customer PO No^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'cust_ref', 'FLAGS=A-IU-^DATATYPE=STRING(100)^PROMPT=Cust ref^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'date_entered', 'FLAGS=A-I--^DATATYPE=DATE/DATETIME^PROMPT=Date Entered^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'delivery_leadtime', 'FLAGS=AMIU-^DATATYPE=NUMBER(3)^PROMPT=External Transport Lead Time^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'label_note', 'FLAGS=A-IU-^DATATYPE=STRING(50)^PROMPT=Label Note^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'note_text', 'FLAGS=A-IU-^DATATYPE=STRING(2000)^PROMPT=Note^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'order_conf', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=OrderConfirmationPrinted^PROMPT=Order Conf^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'order_conf_db', 'FLAGS=A----^DATATYPE=STRING(1)^PROMPT=Order Conf^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'order_conf_flag', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=PrintOrderConfirmation^PROMPT=Order Conf Flag^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'order_conf_flag_db', 'FLAGS=A----^DATATYPE=STRING(1)^PROMPT=Order Conf Flag^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'pack_list_flag', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=PrintPackList^PROMPT=Pack List Flag^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'pack_list_flag_db', 'FLAGS=A----^DATATYPE=STRING(1)^PROMPT=Pack List Flag^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'pick_list_flag', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=PrintPickList^PROMPT=Pick List^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'pick_list_flag_db', 'FLAGS=A----^DATATYPE=STRING(1)^PROMPT=Pick List^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'tax_liability', 'FLAGS=AMIU-^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Tax Liability^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'delivery_country_code', 'FLAGS=A----^DATATYPE=STRING(2)/UPPERCASE^PROMPT=Delivery Country Code^COLUMN=Customer_Order_Address_API.Get_Country_Code(order_no)^REF=TaxLiability(tax_liability)^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'wanted_delivery_date', 'FLAGS=AMIU-^DATATYPE=DATE/DATETIME^PROMPT=Wanted Delivery Date^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'internal_po_no', 'FLAGS=A-I--^DATATYPE=STRING(12)/UPPERCASE^PROMPT=Internal PO No^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'route_id', 'FLAGS=A-IU-^DATATYPE=STRING(12)^PROMPT=Route ID^REF=DeliveryRoute^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'agreement_id', 'FLAGS=A-IU-^DATATYPE=STRING(10)/UPPERCASE^PROMPT=Agreement ID^REF=CustomerAgreement^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'forward_agent_id', 'FLAGS=A-IU-^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Forward Agent ID^REF=ForwarderInfo^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'internal_delivery_type', 'FLAGS=A-IU-^DATATYPE=STRING(200)^ENUMERATION=OrderDeliveryType^PROMPT=Internal Delivery Type^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'internal_delivery_type_db', 'FLAGS=A----^DATATYPE=STRING(10)^PROMPT=Internal Delivery Type^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'external_ref', 'FLAGS=A-IU-^DATATYPE=STRING(25)^PROMPT=External Ref^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'project_id', 'FLAGS=A-IU-^DATATYPE=STRING(10)/UPPERCASE^PROMPT=Project id^REF=Project^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'staged_billing', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=StagedBillingType^PROMPT=Staged Billing^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'staged_billing_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Staged Billing^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'sm_connection', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=ServiceManagementConnect^PROMPT=SM Connection^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'sm_connection_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=SM Connection^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'scheduling_connection', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=ScheduleAgreementOrder^PROMPT=Scheduling Connection^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'scheduling_connection_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Scheduling Connection^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'priority', 'FLAGS=A-IUL^DATATYPE=NUMBER^PROMPT=Priority^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'intrastat_exempt', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=IntrastatExempt^PROMPT=Intrastat Exempt^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'intrastat_exempt_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Intrastat Exempt^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'additional_discount', 'FLAGS=A-IU-^DATATYPE=NUMBER^PROMPT=Additional Discount^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'pay_term_base_date', 'FLAGS=A-IU-^DATATYPE=DATE/DATE^PROMPT=Pay Term Base Date^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'summarized_source_lines', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=GenYesNo^PROMPT=Summarized Source Lines^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'summarized_source_lines_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Summarized Source Lines^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'case_id', 'FLAGS=A-IU-^DATATYPE=NUMBER^PROMPT=Case Id^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'task_id', 'FLAGS=A-IU-^DATATYPE=NUMBER^PROMPT=ID^REF=CcCaseTask(case_id)^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'confirm_deliveries', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=FndBoolean^PROMPT=Confirm Deliveries^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'confirm_deliveries_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Confirm Deliveries^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'check_sales_grp_deliv_conf', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=FndBoolean^PROMPT=Check Sales Group Setting^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'check_sales_grp_deliv_conf_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Check Sales Group Setting^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'delay_cogs_to_deliv_conf', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=FndBoolean^PROMPT=Delay Cost of Sold Goods to Delivery Confirmation^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'delay_cogs_to_deliv_conf_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Delay Cost of Sold Goods to Delivery Confirmation^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'cancel_reason', 'FLAGS=A-IU-^DATATYPE=STRING(10)/UPPERCASE^PROMPT=Cancellation Reason^REF=OrderCancelReason^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'jinsui_invoice', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=FndBoolean^PROMPT=Jinsui Invoice^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'jinsui_invoice_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Jinsui Invoice^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'blocked_reason', 'FLAGS=A-IU-^DATATYPE=STRING(100)/UPPERCASE^PROMPT=Blocked Reason^REF=BlockReasons^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'blocked_from_state', 'FLAGS=A-IU-^DATATYPE=STRING(20)^PROMPT=Blocked From State^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'sales_contract_no', 'FLAGS=A-IU-^DATATYPE=STRING(15)^PROMPT=Sales Contract No^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'contract_rev_seq', 'FLAGS=A-IU-^DATATYPE=NUMBER^PROMPT=Contract Rev Seq^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'contract_line_no', 'FLAGS=A-IU-^DATATYPE=NUMBER^PROMPT=Contract Line No^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'contract_item_no', 'FLAGS=A-IU-^DATATYPE=NUMBER^PROMPT=Contract Item No^REF=ContractItem(sales_contract_no,contract_rev_seq,contract_line_no)^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'default_charges', 'FLAGS=A----^DATATYPE=BOOLEAN^PROMPT=Default Charges^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'released_from_credit_check', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=FndBoolean^PROMPT=Released From Credit Check^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'released_from_credit_check_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Released From Credit Check^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'proposed_prepayment_amount', 'FLAGS=AMIUL^DATATYPE=NUMBER^PROMPT=Required Prepayment Amount^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'prepayment_approved', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=FndBoolean^PROMPT=Prepayment Approved^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'prepayment_approved_db', 'FLAGS=A----^DATATYPE=STRING(5)^PROMPT=Prepayment Approved^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'backorder_option', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=CustomerBackorderOption^PROMPT=Backorder Option^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'backorder_option_db', 'FLAGS=A----^DATATYPE=STRING(40)^PROMPT=Backorder Option^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'expected_prepayment_date', 'FLAGS=A-IUL^DATATYPE=DATE/DATE^PROMPT=Expected Prepayment Date^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'shipment_creation', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=ShipmentCreation^PROMPT=Shipment Creation^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'shipment_creation_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Shipment Creation^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'use_pre_ship_del_note', 'FLAGS=AMI--^DATATYPE=STRING(200)^ENUMERATION=FndBoolean^PROMPT=Use Pre Ship Del Note^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'use_pre_ship_del_note_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Use Pre Ship Del Note^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'pick_inventory_type', 'FLAGS=AMI--^DATATYPE=STRING(200)^ENUMERATION=PickInventoryType^PROMPT=Pick Inventory Type^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'pick_inventory_type_db', 'FLAGS=A----^DATATYPE=STRING(7)^PROMPT=Pick Inventory Type^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'tax_id_no', 'FLAGS=A-IU-^DATATYPE=STRING(50)/UPPERCASE^PROMPT=Tax Id No^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'tax_id_validated_date', 'FLAGS=A-IU-^DATATYPE=DATE/DATE^PROMPT=Tax ID Validated Date^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'classification_standard', 'FLAGS=A-IU-^DATATYPE=STRING(25)/UPPERCASE^PROMPT=Classification Standard^REF=ClassificationStandard^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'msg_sequence_no', 'FLAGS=A-IU-^DATATYPE=NUMBER^PROMPT=Msg Sequence No^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'msg_version_no', 'FLAGS=A-IU-^DATATYPE=NUMBER^PROMPT=Msg Version No^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'currency_rate_type', 'FLAGS=A-IU-^DATATYPE=STRING(10)^PROMPT=Currency Rate Type^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'del_terms_location', 'FLAGS=A-IU-^DATATYPE=STRING(100)^PROMPT=Del Terms Location^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'internal_ref', 'FLAGS=A-IU-^DATATYPE=STRING(30)^PROMPT=Internal Ref^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'internal_po_label_note', 'FLAGS=A-IU-^DATATYPE=STRING(50)^PROMPT=Internal PO Label Note^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'supply_country', 'FLAGS=AMIU-^DATATYPE=STRING(200)^LOOKUP=IsoCountry^PROMPT=Supply Country^REF=IsoCountry^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'supply_country_db', 'FLAGS=A----^DATATYPE=STRING(2)^PROMPT=Supply Country^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'rebate_customer', 'FLAGS=A-IU-^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Rebate Customer^REF=CustOrdCustomer^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'freight_map_id', 'FLAGS=A-IUL^DATATYPE=STRING(15)/UPPERCASE^PROMPT=Freight Map ID^REF=FreightMap^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'zone_id', 'FLAGS=A-IUL^DATATYPE=STRING(15)/UPPERCASE^PROMPT=Zone Id^REF=FreightZone(freight_map_id)^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'freight_price_list_no', 'FLAGS=A-IUL^DATATYPE=STRING(10)^PROMPT=Freight Price List No^REF=FreightPriceListBase^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'summarized_freight_charges', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=GenYesNo^PROMPT=Summarized Freight Charges^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'summarized_freight_charges_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Summarized Freight Charges^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'apply_fix_deliv_freight', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=FndBoolean^PROMPT=Apply Fixed Delivery Freight^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'apply_fix_deliv_freight_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Apply Fixed Delivery Freight^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'fix_deliv_freight', 'FLAGS=A-IU-^DATATYPE=NUMBER^PROMPT=Fixed Delivery Freight Amt^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'print_delivered_lines', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=DeliveryNoteOptions^PROMPT=Print Delivered Lines^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'print_delivered_lines_db', 'FLAGS=A----^DATATYPE=STRING(23)^PROMPT=Print Delivered Lines^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'update_price_effective_date', 'FLAGS=A----^DATATYPE=BOOLEAN^PROMPT=Update Price Effective Date^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'cust_calendar_id', 'FLAGS=A-IU-^DATATYPE=STRING(10)/UPPERCASE^PROMPT=Cust Calendar Id^REF=WorkTimeCalendar^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'ext_transport_calendar_id', 'FLAGS=A-IU-^DATATYPE=STRING(10)/UPPERCASE^PROMPT=External Transport Calendar ID^REF=WorkTimeCalendar^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'use_price_incl_tax', 'FLAGS=AMI--^DATATYPE=STRING(200)^ENUMERATION=FndBoolean^PROMPT=Use Price Incl Tax^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'use_price_incl_tax_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Use Price Incl Tax^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'customs_value_currency', 'FLAGS=A-IU-^DATATYPE=STRING(3)/UPPERCASE^PROMPT=Customs Value Currency^REF=IsoCurrency^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'business_opportunity_no', 'FLAGS=A-I--^DATATYPE=STRING(12)/UPPERCASE^PROMPT=Business Opportunity No^REF=BusinessOpportunity^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'picking_leadtime', 'FLAGS=AMIU-^DATATYPE=NUMBER^PROMPT=Picking Lead Time^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'shipment_type', 'FLAGS=AMIUL^DATATYPE=STRING(3)^PROMPT=Shipment Type^REF=ShipmentType^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'vendor_no', 'FLAGS=A-IUL^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Vendor No^REF=Supplier^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'disconnect_exp_license', 'FLAGS=A----^DATATYPE=STRING(5)^PROMPT=Disconnect Exp License^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'replicate_changes', 'FLAGS=A----^DATATYPE=STRING(5)^PROMPT=Replicate Changes^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'change_request', 'FLAGS=A----^DATATYPE=STRING(5)^PROMPT=Change Request^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'quotation_no', 'FLAGS=A-IU-^DATATYPE=STRING(12)^PROMPT=Quotation No^REF=OrderQuotation^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'free_of_chg_tax_pay_party', 'FLAGS=AMIUL^DATATYPE=STRING(200)^ENUMERATION=TaxPayingParty^PROMPT=Free Of Chg Tax Pay Party^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'free_of_chg_tax_pay_party_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Free Of Chg Tax Pay Party^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'blocked_type', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=CustomerOrderBlockType^PROMPT=Blocked Type^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'blocked_type_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Blocked Type^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'b2b_order', 'FLAGS=AMI--^DATATYPE=STRING(200)^ENUMERATION=FndBoolean^PROMPT=B2b Order^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'b2b_order_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=B2b Order^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'main_representative_id', 'FLAGS=A-IU-^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Main Representative ID^REF=BusinessRepresentative^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'limit_sales_to_assortments', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=FndBoolean^PROMPT=Limit Sales To Assortments^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'limit_sales_to_assortments_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Limit Sales To Assortments^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'final_consumer', 'FLAGS=AMIU-^DATATYPE=STRING(200)^ENUMERATION=FndBoolean^PROMPT=Final Consumer^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'final_consumer_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Final Consumer^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'customer_tax_usage_type', 'FLAGS=A-IU-^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Customer Tax Usage Type^REF=CustomerTaxUsageType^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'invoice_reason_id', 'FLAGS=A-IU-^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Invoice Reason ID^REF=InvoiceReason(company)^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'delivery_reason_id', 'FLAGS=A-IUL^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Delivery Reason ID^REF=DeliveryReason(company)^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'component_a', 'FLAGS=A-IU-^DATATYPE=STRING(50)/UPPERCASE^PROMPT=Component A^REF=OffInvNumCompTypeVal(company)^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'service_code', 'FLAGS=A-IU-^DATATYPE=STRING(100)/UPPERCASE^PROMPT=Service Code^REF=CustomerServiceCode(company,customer_no)^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'disc_price_round', 'FLAGS=AM---^DATATYPE=STRING(200)^ENUMERATION=FndBoolean^PROMPT=Disc Price Round^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'disc_price_round_db', 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Disc Price Round^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'business_transaction_id', 'FLAGS=A-IUL^DATATYPE=STRING(20)^PROMPT=Business Transaction Id^REF=BusinessTransactionId(company)^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'invoiced_closed_date', 'FLAGS=A-IU-^DATATYPE=DATE/DATE^PROMPT=Invoiced Closed Date^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'state', 'FLAGS=A---L^DATATYPE=STRING(20)^PROMPT=State^');
   Alter_Column_Comment('CUSTOMER_ORDER', 'company', 'FLAGS=A----^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Company^COLUMN=Site_API.Get_Company(contract)^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON CUSTOMER_ORDER TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


-----------------------------------------------------------------------------
-------------------- PRIVATE VIEW DEFINITIONS -------------------------------
-----------------------------------------------------------------------------

PROMPT Creating CUSTOMER_ORDER_LOV view

-- [IFS COMPLETE BLOCK VIEW CUSTOMER_ORDER_LOV]
CREATE OR REPLACE VIEW CUSTOMER_ORDER_LOV AS
SELECT contract      contract,
       customer_no   customer_no,
       ship_addr_no  ship_addr_no,
       order_no      order_no,
       rowkey       objkey
FROM   CUSTOMER_ORDER_TAB
WHERE  rowstate NOT IN ('Cancelled', 'Invoiced')
AND    order_no IN (SELECT * FROM customer_order_usg)
AND    EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE customer_order_tab.contract = site)
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE CUSTOMER_ORDER_LOV
   IS 'LU=CustomerOrder^PROMPT=Customer Order^MODULE=ORDER^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('CUSTOMER_ORDER_LOV', 'contract', 'FLAGS=P---L^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^ROW_LEVEL_SECURITY=site^');
   Alter_Column_Comment('CUSTOMER_ORDER_LOV', 'customer_no', 'FLAGS=P---L^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Customer No^REF=CustOrdCustomer/NOCHECK^');
   Alter_Column_Comment('CUSTOMER_ORDER_LOV', 'ship_addr_no', 'FLAGS=P----^DATATYPE=STRING(50)^PROMPT=Ship Addr No^REF=CustOrdCustomerAddress(customer_no)/NOCHECK^');
   Alter_Column_Comment('CUSTOMER_ORDER_LOV', 'order_no', 'FLAGS=K---L^DATATYPE=STRING(12)/UPPERCASE^PROMPT=Order No^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON CUSTOMER_ORDER_LOV TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating ORDERS_PER_SITE_LOV view

-- [IFS COMPLETE BLOCK VIEW ORDERS_PER_SITE_LOV]
CREATE OR REPLACE VIEW ORDERS_PER_SITE_LOV AS
SELECT contract             contract,
       order_no             order_no,
       customer_no          customer_no,
       date_entered         date_entered,
       rowstate             rowstate,
       rowkey               objkey
FROM   CUSTOMER_ORDER_TAB
WHERE  order_no IN (SELECT * FROM customer_order_usg)
AND    EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE customer_order_tab.contract = site)
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE ORDERS_PER_SITE_LOV
   IS 'LU=CustomerOrder^PROMPT=Customer Orders Per Site^MODULE=ORDER^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('ORDERS_PER_SITE_LOV', 'contract', 'FLAGS=P----^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^ROW_LEVEL_SECURITY=site^');
   Alter_Column_Comment('ORDERS_PER_SITE_LOV', 'order_no', 'FLAGS=K---L^DATATYPE=STRING(12)/UPPERCASE^PROMPT=Order No^');
   Alter_Column_Comment('ORDERS_PER_SITE_LOV', 'customer_no', 'FLAGS=A---L^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Customer No^REF=CustOrdCustomer/NOCHECK^');
   Alter_Column_Comment('ORDERS_PER_SITE_LOV', 'date_entered', 'FLAGS=A---L^DATATYPE=DATE/DATETIME^PROMPT=Date Entered^');
   Alter_Column_Comment('ORDERS_PER_SITE_LOV', 'rowstate', 'FLAGS=A----^PROMPT=Rowstate^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON ORDERS_PER_SITE_LOV TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating CO_PROJECT_LOV view

-- [IFS COMPLETE BLOCK VIEW CO_PROJECT_LOV]
CREATE OR REPLACE VIEW CO_PROJECT_LOV AS
SELECT DISTINCT
       co.customer_no                    customer_no,
       co.order_no                       order_no,
       co.contract                       contract
FROM   CUSTOMER_ORDER_TAB co, customer_order_line_tab col, site_public sp
WHERE  co.rowstate = 'Planned'
AND    co.project_id IS NULL
AND    co.order_no = col.order_no (+)
AND    co.order_no NOT IN ( SELECT col.order_no
                            FROM customer_order_line_tab col
                            WHERE col.part_ownership = 'SUPPLIER LOANED')
AND    co.contract = sp.contract
AND    EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE co.contract = site)
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE CO_PROJECT_LOV
   IS 'LU=CustomerOrder^PROMPT=Customer Order Project LOV^MODULE=ORDER^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('CO_PROJECT_LOV', 'customer_no', 'FLAGS=K---L^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Customer No^REF=CustOrdCustomer/NOCHECK^');
   Alter_Column_Comment('CO_PROJECT_LOV', 'order_no', 'FLAGS=K---L^DATATYPE=STRING(12)/UPPERCASE^PROMPT=Order No^');
   Alter_Column_Comment('CO_PROJECT_LOV', 'contract', 'FLAGS=A----^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^ROW_LEVEL_SECURITY=site^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON CO_PROJECT_LOV TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating CUSTOMER_ORDER_CC_LOV view

-- [IFS COMPLETE BLOCK VIEW CUSTOMER_ORDER_CC_LOV]
CREATE OR REPLACE VIEW CUSTOMER_ORDER_CC_LOV AS
SELECT contract             contract,
       order_no             order_no,
       customer_no          customer_no,
       authorize_code       authorize_code,
       rowkey              objkey
FROM   CUSTOMER_ORDER_TAB
WHERE  EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE customer_order_tab.contract = site)
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE CUSTOMER_ORDER_CC_LOV
   IS 'LU=CustomerOrder^PROMPT=Customer Orders^MODULE=ORDER^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('CUSTOMER_ORDER_CC_LOV', 'contract', 'FLAGS=P---L^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^ROW_LEVEL_SECURITY=site^');
   Alter_Column_Comment('CUSTOMER_ORDER_CC_LOV', 'order_no', 'FLAGS=K---L^DATATYPE=STRING(12)/UPPERCASE^PROMPT=Order No^');
   Alter_Column_Comment('CUSTOMER_ORDER_CC_LOV', 'customer_no', 'FLAGS=A---L^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Customer No^REF=CustOrdCustomer/NOCHECK^');
   Alter_Column_Comment('CUSTOMER_ORDER_CC_LOV', 'authorize_code', 'FLAGS=AMIUL^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Authorize Code^REF=OrderCoordinator/NOCHECK^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON CUSTOMER_ORDER_CC_LOV TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating ORDER_USER_ALLOWED_SITE_LOV view

-- [IFS COMPLETE BLOCK VIEW ORDER_USER_ALLOWED_SITE_LOV]
CREATE OR REPLACE VIEW ORDER_USER_ALLOWED_SITE_LOV AS
SELECT order_no      order_no,
       contract      contract,
       customer_no   customer_no,
       rowkey       objkey
FROM   CUSTOMER_ORDER_TAB
WHERE  rowstate NOT IN ('Cancelled', 'Invoiced')
AND    EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE customer_order_tab.contract = site)
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE ORDER_USER_ALLOWED_SITE_LOV
   IS 'LU=CustomerOrder^PROMPT=User Allowed Customer Orders^MODULE=ORDER^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('ORDER_USER_ALLOWED_SITE_LOV', 'order_no', 'FLAGS=K---L^DATATYPE=STRING(12)/UPPERCASE^PROMPT=Order No^');
   Alter_Column_Comment('ORDER_USER_ALLOWED_SITE_LOV', 'contract', 'FLAGS=A---L^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^ROW_LEVEL_SECURITY=site^');
   Alter_Column_Comment('ORDER_USER_ALLOWED_SITE_LOV', 'customer_no', 'FLAGS=A---L^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Customer No^REF=CustOrdCustomer/NOCHECK^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON ORDER_USER_ALLOWED_SITE_LOV TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Creating CO_RMA_LOV view

-- [IFS COMPLETE BLOCK VIEW CO_RMA_LOV]
CREATE OR REPLACE VIEW CO_RMA_LOV AS
SELECT order_no             order_no,
       contract             contract,
       customer_no          customer_no,
       currency_code        currency_code,
       customer_po_no       customer_po_no
FROM   CUSTOMER_ORDER_TAB co 
WHERE  rowstate IN ('Delivered', 'PartiallyDelivered', 'Invoiced')
AND    EXISTS (SELECT 1 
               FROM  CUSTOMER_ORDER_LINE_TAB col 
               WHERE co.order_no = col.order_no 
               AND   col.catalog_type !='PKG'
               AND   col.part_ownership IN ('COMPANY OWNED', 'COMPANY RENTAL ASSET', 'SUPPLIER RENTED'))
AND    order_no IN (SELECT * FROM customer_order_usg)
AND    EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE co.contract = site)
WITH   READ ONLY;
-- [END IFS COMPLETE BLOCK]

COMMENT ON TABLE CO_RMA_LOV
   IS 'LU=CustomerOrder^PROMPT=Customer Orders Per RMA^MODULE=ORDER^';

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   PROCEDURE Alter_Column_Comment (
      view_name_   IN VARCHAR2,
      column_name_ IN VARCHAR2,
      comment_     IN VARCHAR2)
   IS
      stmt_ VARCHAR2(32767) := 'COMMENT ON COLUMN ' || view_name_ || '.' || column_name_ || ' IS ''' || REPLACE(comment_, '''', '''''') || '''';
   BEGIN
      EXECUTE IMMEDIATE stmt_;
   END Alter_Column_Comment;
BEGIN
   Alter_Column_Comment('CO_RMA_LOV', 'order_no', 'FLAGS=K---L^DATATYPE=STRING(12)/UPPERCASE^PROMPT=Order No^');
   Alter_Column_Comment('CO_RMA_LOV', 'contract', 'FLAGS=A----^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site/NOCHECK^ROW_LEVEL_SECURITY=site^');
   Alter_Column_Comment('CO_RMA_LOV', 'customer_no', 'FLAGS=A----^DATATYPE=STRING(20)/UPPERCASE^PROMPT=Customer No^REF=CustOrdCustomer/NOCHECK^');
   Alter_Column_Comment('CO_RMA_LOV', 'currency_code', 'FLAGS=A----^DATATYPE=STRING(3)/UPPERCASE^PROMPT=Currency Code^REF=IsoCurrency/NOCHECK^');
   Alter_Column_Comment('CO_RMA_LOV', 'customer_po_no', 'FLAGS=A---L^DATATYPE=STRING(50)^PROMPT=Customer PO No^');
   EXECUTE IMMEDIATE 'GRANT SELECT ON CO_RMA_LOV TO IFSSYS';
END;
-- [END IFS COMPLETE BLOCK]
/

