-----------------------------------------------------------------------------
--
--  Logical unit: CustomerOrder
--  Type:         EntityWithState
--  Component:    ORDER
--
--  Template:     3.0
--  Built by:     IFS Developer Studio
--
--  NOTE! Do not edit!! This file is completely generated and will be
--        overwritten next time the corresponding model is saved.
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
-------------------- FOUNDATION1 PRE-PROCESSING -----------------------------
-----------------------------------------------------------------------------

PROMPT Creating Customer_Order_API context

-- [IFS COMPLETE BLOCK BEGINEND]
BEGIN
   Database_SYS.Create_Context('CustomerOrder_CTX', 'DOMAIN_SYS', NULL, 'GLOBALLY', TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Creating Customer_Order_API specification

-- [IFS COMPLETE BLOCK PACKAGE Customer_Order_API]
CREATE OR REPLACE PACKAGE Customer_Order_API IS


--@ObjectConnectionServices:DocReferenceObject,RiskReferenceObject
module_                   CONSTANT VARCHAR2(6)      := 'ORDER';
lu_name_                  CONSTANT VARCHAR2(30)     := 'CustomerOrder';
lu_type_                  CONSTANT VARCHAR2(30)     := 'EntityWithState';
  
DB_BLOCKED                CONSTANT VARCHAR2(7)      := 'Blocked';
DB_CANCELLED              CONSTANT VARCHAR2(9)      := 'Cancelled';
DB_DELIVERED              CONSTANT VARCHAR2(9)      := 'Delivered';
DB_INVOICED               CONSTANT VARCHAR2(8)      := 'Invoiced';
DB_PARTIALLY_DELIVERED    CONSTANT VARCHAR2(18)     := 'PartiallyDelivered';
DB_PICKED                 CONSTANT VARCHAR2(6)      := 'Picked';
DB_PLANNED                CONSTANT VARCHAR2(7)      := 'Planned';
DB_RELEASED               CONSTANT VARCHAR2(8)      := 'Released';
DB_RESERVED               CONSTANT VARCHAR2(8)      := 'Reserved';

-----------------------------------------------------------------------------
-------------------- PUBLIC DECLARATIONS ------------------------------------
-----------------------------------------------------------------------------

TYPE Public_Rec IS RECORD
  (order_no                       CUSTOMER_ORDER_TAB.order_no%TYPE,
   "rowid"                        rowid,
   rowversion                     CUSTOMER_ORDER_TAB.rowversion%TYPE,
   rowkey                         CUSTOMER_ORDER_TAB.rowkey%TYPE,
   rowstate                       CUSTOMER_ORDER_TAB.rowstate%TYPE,
   authorize_code                 CUSTOMER_ORDER_TAB.authorize_code%TYPE,
   bill_addr_no                   CUSTOMER_ORDER_TAB.bill_addr_no%TYPE,
   contract                       CUSTOMER_ORDER_TAB.contract%TYPE,
   country_code                   CUSTOMER_ORDER_TAB.country_code%TYPE,
   currency_code                  CUSTOMER_ORDER_TAB.currency_code%TYPE,
   customer_no                    CUSTOMER_ORDER_TAB.customer_no%TYPE,
   customer_no_pay                CUSTOMER_ORDER_TAB.customer_no_pay%TYPE,
   customer_no_pay_addr_no        CUSTOMER_ORDER_TAB.customer_no_pay_addr_no%TYPE,
   customer_no_pay_ref            CUSTOMER_ORDER_TAB.customer_no_pay_ref%TYPE,
   delivery_terms                 CUSTOMER_ORDER_TAB.delivery_terms%TYPE,
   district_code                  CUSTOMER_ORDER_TAB.district_code%TYPE,
   language_code                  CUSTOMER_ORDER_TAB.language_code%TYPE,
   market_code                    CUSTOMER_ORDER_TAB.market_code%TYPE,
   note_id                        CUSTOMER_ORDER_TAB.note_id%TYPE,
   order_code                     CUSTOMER_ORDER_TAB.order_code%TYPE,
   order_id                       CUSTOMER_ORDER_TAB.order_id%TYPE,
   pay_term_id                    CUSTOMER_ORDER_TAB.pay_term_id%TYPE,
   pre_accounting_id              CUSTOMER_ORDER_TAB.pre_accounting_id%TYPE,
   print_control_code             CUSTOMER_ORDER_TAB.print_control_code%TYPE,
   region_code                    CUSTOMER_ORDER_TAB.region_code%TYPE,
   salesman_code                  CUSTOMER_ORDER_TAB.salesman_code%TYPE,
   ship_addr_no                   CUSTOMER_ORDER_TAB.ship_addr_no%TYPE,
   ship_via_code                  CUSTOMER_ORDER_TAB.ship_via_code%TYPE,
   addr_flag                      CUSTOMER_ORDER_TAB.addr_flag%TYPE,
   grp_disc_calc_flag             CUSTOMER_ORDER_TAB.grp_disc_calc_flag%TYPE,
   customer_po_no                 CUSTOMER_ORDER_TAB.customer_po_no%TYPE,
   cust_ref                       CUSTOMER_ORDER_TAB.cust_ref%TYPE,
   date_entered                   CUSTOMER_ORDER_TAB.date_entered%TYPE,
   delivery_leadtime              CUSTOMER_ORDER_TAB.delivery_leadtime%TYPE,
   label_note                     CUSTOMER_ORDER_TAB.label_note%TYPE,
   note_text                      CUSTOMER_ORDER_TAB.note_text%TYPE,
   order_conf                     CUSTOMER_ORDER_TAB.order_conf%TYPE,
   tax_liability                  CUSTOMER_ORDER_TAB.tax_liability%TYPE,
   wanted_delivery_date           CUSTOMER_ORDER_TAB.wanted_delivery_date%TYPE,
   internal_po_no                 CUSTOMER_ORDER_TAB.internal_po_no%TYPE,
   route_id                       CUSTOMER_ORDER_TAB.route_id%TYPE,
   agreement_id                   CUSTOMER_ORDER_TAB.agreement_id%TYPE,
   forward_agent_id               CUSTOMER_ORDER_TAB.forward_agent_id%TYPE,
   internal_delivery_type         CUSTOMER_ORDER_TAB.internal_delivery_type%TYPE,
   external_ref                   CUSTOMER_ORDER_TAB.external_ref%TYPE,
   project_id                     CUSTOMER_ORDER_TAB.project_id%TYPE,
   staged_billing                 CUSTOMER_ORDER_TAB.staged_billing%TYPE,
   sm_connection                  CUSTOMER_ORDER_TAB.sm_connection%TYPE,
   scheduling_connection          CUSTOMER_ORDER_TAB.scheduling_connection%TYPE,
   priority                       CUSTOMER_ORDER_TAB.priority%TYPE,
   intrastat_exempt               CUSTOMER_ORDER_TAB.intrastat_exempt%TYPE,
   additional_discount            CUSTOMER_ORDER_TAB.additional_discount%TYPE,
   pay_term_base_date             CUSTOMER_ORDER_TAB.pay_term_base_date%TYPE,
   summarized_source_lines        CUSTOMER_ORDER_TAB.summarized_source_lines%TYPE,
   case_id                        CUSTOMER_ORDER_TAB.case_id%TYPE,
   task_id                        CUSTOMER_ORDER_TAB.task_id%TYPE,
   confirm_deliveries             CUSTOMER_ORDER_TAB.confirm_deliveries%TYPE,
   check_sales_grp_deliv_conf     CUSTOMER_ORDER_TAB.check_sales_grp_deliv_conf%TYPE,
   delay_cogs_to_deliv_conf       CUSTOMER_ORDER_TAB.delay_cogs_to_deliv_conf%TYPE,
   cancel_reason                  CUSTOMER_ORDER_TAB.cancel_reason%TYPE,
   jinsui_invoice                 CUSTOMER_ORDER_TAB.jinsui_invoice%TYPE,
   blocked_reason                 CUSTOMER_ORDER_TAB.blocked_reason%TYPE,
   blocked_from_state             CUSTOMER_ORDER_TAB.blocked_from_state%TYPE,
   sales_contract_no              CUSTOMER_ORDER_TAB.sales_contract_no%TYPE,
   contract_rev_seq               CUSTOMER_ORDER_TAB.contract_rev_seq%TYPE,
   contract_line_no               CUSTOMER_ORDER_TAB.contract_line_no%TYPE,
   contract_item_no               CUSTOMER_ORDER_TAB.contract_item_no%TYPE,
   released_from_credit_check     CUSTOMER_ORDER_TAB.released_from_credit_check%TYPE,
   proposed_prepayment_amount     CUSTOMER_ORDER_TAB.proposed_prepayment_amount%TYPE,
   prepayment_approved            CUSTOMER_ORDER_TAB.prepayment_approved%TYPE,
   backorder_option               CUSTOMER_ORDER_TAB.backorder_option%TYPE,
   expected_prepayment_date       CUSTOMER_ORDER_TAB.expected_prepayment_date%TYPE,
   shipment_creation              CUSTOMER_ORDER_TAB.shipment_creation%TYPE,
   use_pre_ship_del_note          CUSTOMER_ORDER_TAB.use_pre_ship_del_note%TYPE,
   pick_inventory_type            CUSTOMER_ORDER_TAB.pick_inventory_type%TYPE,
   tax_id_no                      CUSTOMER_ORDER_TAB.tax_id_no%TYPE,
   tax_id_validated_date          CUSTOMER_ORDER_TAB.tax_id_validated_date%TYPE,
   classification_standard        CUSTOMER_ORDER_TAB.classification_standard%TYPE,
   msg_sequence_no                CUSTOMER_ORDER_TAB.msg_sequence_no%TYPE,
   msg_version_no                 CUSTOMER_ORDER_TAB.msg_version_no%TYPE,
   currency_rate_type             CUSTOMER_ORDER_TAB.currency_rate_type%TYPE,
   del_terms_location             CUSTOMER_ORDER_TAB.del_terms_location%TYPE,
   internal_ref                   CUSTOMER_ORDER_TAB.internal_ref%TYPE,
   internal_po_label_note         CUSTOMER_ORDER_TAB.internal_po_label_note%TYPE,
   supply_country                 CUSTOMER_ORDER_TAB.supply_country%TYPE,
   rebate_customer                CUSTOMER_ORDER_TAB.rebate_customer%TYPE,
   freight_map_id                 CUSTOMER_ORDER_TAB.freight_map_id%TYPE,
   zone_id                        CUSTOMER_ORDER_TAB.zone_id%TYPE,
   freight_price_list_no          CUSTOMER_ORDER_TAB.freight_price_list_no%TYPE,
   summarized_freight_charges     CUSTOMER_ORDER_TAB.summarized_freight_charges%TYPE,
   apply_fix_deliv_freight        CUSTOMER_ORDER_TAB.apply_fix_deliv_freight%TYPE,
   fix_deliv_freight              CUSTOMER_ORDER_TAB.fix_deliv_freight%TYPE,
   print_delivered_lines          CUSTOMER_ORDER_TAB.print_delivered_lines%TYPE,
   cust_calendar_id               CUSTOMER_ORDER_TAB.cust_calendar_id%TYPE,
   ext_transport_calendar_id      CUSTOMER_ORDER_TAB.ext_transport_calendar_id%TYPE,
   use_price_incl_tax             CUSTOMER_ORDER_TAB.use_price_incl_tax%TYPE,
   customs_value_currency         CUSTOMER_ORDER_TAB.customs_value_currency%TYPE,
   business_opportunity_no        CUSTOMER_ORDER_TAB.business_opportunity_no%TYPE,
   picking_leadtime               CUSTOMER_ORDER_TAB.picking_leadtime%TYPE,
   shipment_type                  CUSTOMER_ORDER_TAB.shipment_type%TYPE,
   vendor_no                      CUSTOMER_ORDER_TAB.vendor_no%TYPE,
   quotation_no                   CUSTOMER_ORDER_TAB.quotation_no%TYPE,
   free_of_chg_tax_pay_party      CUSTOMER_ORDER_TAB.free_of_chg_tax_pay_party%TYPE,
   blocked_type                   CUSTOMER_ORDER_TAB.blocked_type%TYPE,
   b2b_order                      CUSTOMER_ORDER_TAB.b2b_order%TYPE,
   limit_sales_to_assortments     CUSTOMER_ORDER_TAB.limit_sales_to_assortments%TYPE,
   final_consumer                 CUSTOMER_ORDER_TAB.final_consumer%TYPE,
   customer_tax_usage_type        CUSTOMER_ORDER_TAB.customer_tax_usage_type%TYPE,
   invoice_reason_id              CUSTOMER_ORDER_TAB.invoice_reason_id%TYPE,
   delivery_reason_id             CUSTOMER_ORDER_TAB.delivery_reason_id%TYPE,
   component_a                    CUSTOMER_ORDER_TAB.component_a%TYPE,
   service_code                   CUSTOMER_ORDER_TAB.service_code%TYPE,
   disc_price_round               CUSTOMER_ORDER_TAB.disc_price_round%TYPE,
   business_transaction_id        CUSTOMER_ORDER_TAB.business_transaction_id%TYPE,
   invoiced_closed_date           CUSTOMER_ORDER_TAB.invoiced_closed_date%TYPE);

TYPE order_line_details IS RECORD (
    line_no         VARCHAR2(4),
    rel_no          VARCHAR2(4),
    line_item_no    NUMBER,
    ref_id          VARCHAR2(35));

CURSOR get_co_lines_for_customer_part(
   order_no_         VARCHAR2,
   customer_part_no_ VARCHAR2,
   due_date_         DATE) RETURN order_line_details;

TYPE Calculated_Totals_Rec IS RECORD (
   order_line_total_base            NUMBER,
   order_line_total_curr            NUMBER,
   order_line_tax_total_curr        NUMBER,
   order_line_gross_total_curr      NUMBER,
   total_charge_base                NUMBER,
   total_charge_curr                NUMBER,
   total_charge_tax_curr            NUMBER,
   total_charge_gross_curr          NUMBER,   
   total_contribution_base          NUMBER,
   total_contribution_percent       NUMBER,
   additional_discount_curr         NUMBER,
   total_amount_base                NUMBER,
   total_amount_curr                NUMBER,
   toatal_tax_amount_curr           NUMBER,
   total_gross_amount_curr          NUMBER,
   order_weight                     NUMBER,
   order_volume                     NUMBER,
   adjusted_weight_gross_in_charges NUMBER,
   adjusted_volume_in_charges       NUMBER);

TYPE Calculated_Totals_Arr IS TABLE OF Calculated_Totals_Rec;


-----------------------------------------------------------------------------
-------------------- BASE METHODS -------------------------------------------
-----------------------------------------------------------------------------
-- Get_Key_By_Rowkey
--   Returns a table record with only keys (other attributes are NULL) based on a rowkey.
--
-- Exist
--   Checks if given pointer (e.g. primary key) to an instance of this
--   logical unit exists. If not an exception will be raised.
--
-- Exists
--   Same check as Exist, but returns a BOOLEAN value instead of exception.
--
-- Rowkey_Exist
--   Checks whether the rowkey exists
--   If not an exception will be raised.
--
-- Get_Authorize_Code
--   Fetches the AuthorizeCode attribute for a record.
--
-- Get_Bill_Addr_No
--   Fetches the BillAddrNo attribute for a record.
--
-- Get_Contract
--   Fetches the Contract attribute for a record.
--
-- Get_Country_Code
--   Fetches the CountryCode attribute for a record.
--
-- Get_Currency_Code
--   Fetches the CurrencyCode attribute for a record.
--
-- Get_Customer_No
--   Fetches the CustomerNo attribute for a record.
--
-- Get_Customer_No_Pay
--   Fetches the CustomerNoPay attribute for a record.
--
-- Get_Customer_No_Pay_Addr_No
--   Fetches the CustomerNoPayAddrNo attribute for a record.
--
-- Get_Customer_No_Pay_Ref
--   Fetches the CustomerNoPayReference attribute for a record.
--
-- Get_Delivery_Terms
--   Fetches the DeliveryTerms attribute for a record.
--
-- Get_District_Code
--   Fetches the DistrictCode attribute for a record.
--
-- Get_Language_Code
--   Fetches the LanguageCode attribute for a record.
--
-- Get_Market_Code
--   Fetches the MarketCode attribute for a record.
--
-- Get_Note_Id
--   Fetches the NoteId attribute for a record.
--
-- Get_Order_Code
--   Fetches the OrderCode attribute for a record.
--
-- Get_Order_Id
--   Fetches the OrderId attribute for a record.
--
-- Get_Pay_Term_Id
--   Fetches the PayTermId attribute for a record.
--
-- Get_Pre_Accounting_Id
--   Fetches the PreAccountingId attribute for a record.
--
-- Get_Print_Control_Code
--   Fetches the PrintControlCode attribute for a record.
--
-- Get_Region_Code
--   Fetches the RegionCode attribute for a record.
--
-- Get_Salesman_Code
--   Fetches the SalesmanCode attribute for a record.
--
-- Get_Ship_Addr_No
--   Fetches the ShipAddrNo attribute for a record.
--
-- Get_Ship_Via_Code
--   Fetches the ShipViaCode attribute for a record.
--
-- Get_Addr_Flag
--   Fetches the AddrFlag attribute for a record.
--
-- Get_Addr_Flag_Db
--   Fetches the DB value of AddrFlag attribute for a record.
--
-- Get_Grp_Disc_Calc_Flag
--   Fetches the GrpDiscCalcFlag attribute for a record.
--
-- Get_Grp_Disc_Calc_Flag_Db
--   Fetches the DB value of GrpDiscCalcFlag attribute for a record.
--
-- Get_Customer_Po_No
--   Fetches the CustomerPoNo attribute for a record.
--   Returns the customer's purchase order no.
--   Checks if the Customer Po No exists for the relevent customer.
--   Returns Customer No.
--
-- Get_Cust_Ref
--   Fetches the CustRef attribute for a record.
--
-- Get_Date_Entered
--   Fetches the DateEntered attribute for a record.
--
-- Get_Delivery_Leadtime
--   Fetches the DeliveryLeadtime attribute for a record.
--
-- Get_Label_Note
--   Fetches the LabelNote attribute for a record.
--
-- Get_Note_Text
--   Fetches the NoteText attribute for a record.
--
-- Get_Order_Conf
--   Fetches the OrderConf attribute for a record.
--
-- Get_Order_Conf_Db
--   Fetches the DB value of OrderConf attribute for a record.
--
-- Get_Tax_Liability
--   Fetches the TaxLiability attribute for a record.
--
-- Get_Wanted_Delivery_Date
--   Fetches the WantedDeliveryDate attribute for a record.
--
-- Get_Internal_Po_No
--   Fetches the InternalPoNo attribute for a record.
--
-- Get_Route_Id
--   Fetches the RouteId attribute for a record.
--
-- Get_Agreement_Id
--   Fetches the AgreementId attribute for a record.
--
-- Get_Forward_Agent_Id
--   Fetches the ForwardAgentId attribute for a record.
--
-- Get_Internal_Delivery_Type
--   Fetches the InternalDeliveryType attribute for a record.
--
-- Get_Internal_Delivery_Type_Db
--   Fetches the DB value of InternalDeliveryType attribute for a record.
--
-- Get_External_Ref
--   Fetches the ExternalRef attribute for a record.
--
-- Get_Project_Id
--   Fetches the ProjectId attribute for a record.
--
-- Get_Staged_Billing
--   Fetches the StagedBilling attribute for a record.
--
-- Get_Staged_Billing_Db
--   Fetches the DB value of StagedBilling attribute for a record.
--
-- Get_Sm_Connection
--   Fetches the SmConnection attribute for a record.
--
-- Get_Sm_Connection_Db
--   Fetches the DB value of SmConnection attribute for a record.
--
-- Get_Scheduling_Connection
--   Fetches the SchedulingConnection attribute for a record.
--
-- Get_Scheduling_Connection_Db
--   Fetches the DB value of SchedulingConnection attribute for a record.
--
-- Get_Priority
--   Fetches the Priority attribute for a record.
--
-- Get_Intrastat_Exempt
--   Fetches the IntrastatExempt attribute for a record.
--
-- Get_Intrastat_Exempt_Db
--   Fetches the DB value of IntrastatExempt attribute for a record.
--
-- Get_Additional_Discount
--   Fetches the AdditionalDiscount attribute for a record.
--
-- Get_Pay_Term_Base_Date
--   Fetches the PayTermBaseDate attribute for a record.
--
-- Get_Summarized_Source_Lines
--   Fetches the SummarizedSourceLines attribute for a record.
--
-- Get_Summarized_Source_Lines_Db
--   Fetches the DB value of SummarizedSourceLines attribute for a record.
--
-- Get_Case_Id
--   Fetches the CaseId attribute for a record.
--
-- Get_Task_Id
--   Fetches the TaskId attribute for a record.
--
-- Get_Confirm_Deliveries
--   Fetches the ConfirmDeliveries attribute for a record.
--
-- Get_Confirm_Deliveries_Db
--   Fetches the DB value of ConfirmDeliveries attribute for a record.
--
-- Get_Check_Sales_Grp_Deliv_Conf
--   Fetches the CheckSalesGrpDelivConf attribute for a record.
--
-- Get_Check_Sales_Grp_Dc_Db
--   Fetches the DB value of CheckSalesGrpDelivConf attribute for a record.
--
-- Get_Delay_Cogs_To_Deliv_Conf
--   Fetches the DelayCogsToDelivConf attribute for a record.
--
-- Get_Delay_Cogs_To_Dc_Db
--   Fetches the DB value of DelayCogsToDelivConf attribute for a record.
--
-- Get_Cancel_Reason
--   Fetches the CancelReason attribute for a record.
--
-- Get_Jinsui_Invoice
--   Fetches the JinsuiInvoice attribute for a record.
--
-- Get_Jinsui_Invoice_Db
--   Fetches the DB value of JinsuiInvoice attribute for a record.
--
-- Get_Blocked_Reason
--   Fetches the BlockedReason attribute for a record.
--
-- Get_Blocked_From_State
--   Fetches the BlockedFromState attribute for a record.
--
-- Get_Sales_Contract_No
--   Fetches the SalesContractNo attribute for a record.
--
-- Get_Contract_Rev_Seq
--   Fetches the ContractRevSeq attribute for a record.
--
-- Get_Contract_Line_No
--   Fetches the ContractLineNo attribute for a record.
--
-- Get_Contract_Item_No
--   Fetches the ContractItemNo attribute for a record.
--
-- Get_Released_From_Credit_Check
--   Fetches the ReleasedFromCreditCheck attribute for a record.
--
-- Get_Released_From_Credit_Ch_Db
--   Fetches the DB value of ReleasedFromCreditCheck attribute for a record.
--
-- Get_Proposed_Prepayment_Amount
--   Fetches the ProposedPrepaymentAmount attribute for a record.
--
-- Get_Prepayment_Approved
--   Fetches the PrepaymentApproved attribute for a record.
--
-- Get_Prepayment_Approved_Db
--   Fetches the DB value of PrepaymentApproved attribute for a record.
--
-- Get_Backorder_Option
--   Fetches the BackorderOption attribute for a record.
--
-- Get_Backorder_Option_Db
--   Fetches the DB value of BackorderOption attribute for a record.
--
-- Get_Expected_Prepayment_Date
--   Fetches the ExpectedPrepaymentDate attribute for a record.
--
-- Get_Shipment_Creation
--   Fetches the ShipmentCreation attribute for a record.
--
-- Get_Shipment_Creation_Db
--   Fetches the DB value of ShipmentCreation attribute for a record.
--
-- Get_Use_Pre_Ship_Del_Note
--   Fetches the UsePreShipDelNote attribute for a record.
--
-- Get_Use_Pre_Ship_Del_Note_Db
--   Fetches the DB value of UsePreShipDelNote attribute for a record.
--
-- Get_Pick_Inventory_Type
--   Fetches the PickInventoryType attribute for a record.
--
-- Get_Pick_Inventory_Type_Db
--   Fetches the DB value of PickInventoryType attribute for a record.
--
-- Get_Tax_Id_No
--   Fetches the TaxIdNo attribute for a record.
--
-- Get_Tax_Id_Validated_Date
--   Fetches the TaxIdValidatedDate attribute for a record.
--
-- Get_Classification_Standard
--   Fetches the ClassificationStandard attribute for a record.
--
-- Get_Msg_Sequence_No
--   Fetches the MsgSequenceNo attribute for a record.
--
-- Get_Msg_Version_No
--   Fetches the MsgVersionNo attribute for a record.
--
-- Get_Currency_Rate_Type
--   Fetches the CurrencyRateType attribute for a record.
--
-- Get_Del_Terms_Location
--   Fetches the DelTermsLocation attribute for a record.
--
-- Get_Internal_Ref
--   Fetches the InternalRef attribute for a record.
--
-- Get_Internal_Po_Label_Note
--   Fetches the InternalPoLabelNote attribute for a record.
--
-- Get_Supply_Country
--   Fetches the SupplyCountry attribute for a record.
--
-- Get_Supply_Country_Db
--   Fetches the DB value of SupplyCountry attribute for a record.
--
-- Get_Rebate_Customer
--   Fetches the RebateCustomer attribute for a record.
--
-- Get_Freight_Map_Id
--   Fetches the FreightMapId attribute for a record.
--
-- Get_Zone_Id
--   Fetches the ZoneId attribute for a record.
--
-- Get_Freight_Price_List_No
--   Fetches the FreightPriceListNo attribute for a record.
--
-- Get_Summarized_Freight_Charges
--   Fetches the SummarizedFreightCharges attribute for a record.
--
-- Get_Summarized_Freight_Char_Db
--   Fetches the DB value of SummarizedFreightCharges attribute for a record.
--
-- Get_Apply_Fix_Deliv_Freight
--   Fetches the ApplyFixDelivFreight attribute for a record.
--
-- Get_Apply_Fix_Deliv_Freight_Db
--   Fetches the DB value of ApplyFixDelivFreight attribute for a record.
--
-- Get_Fix_Deliv_Freight
--   Fetches the FixDelivFreight attribute for a record.
--
-- Get_Print_Delivered_Lines
--   Fetches the PrintDeliveredLines attribute for a record.
--
-- Get_Print_Delivered_Lines_Db
--   Fetches the DB value of PrintDeliveredLines attribute for a record.
--
-- Get_Cust_Calendar_Id
--   Fetches the CustCalendarId attribute for a record.
--
-- Get_Ext_Transport_Calendar_Id
--   Fetches the ExtTransportCalendarId attribute for a record.
--
-- Get_Use_Price_Incl_Tax
--   Fetches the UsePriceInclTax attribute for a record.
--
-- Get_Use_Price_Incl_Tax_Db
--   Fetches the DB value of UsePriceInclTax attribute for a record.
--
-- Get_Customs_Value_Currency
--   Fetches the CustomsValueCurrency attribute for a record.
--
-- Get_Business_Opportunity_No
--   Fetches the BusinessOpportunityNo attribute for a record.
--
-- Get_Picking_Leadtime
--   Fetches the PickingLeadtime attribute for a record.
--
-- Get_Shipment_Type
--   Fetches the ShipmentType attribute for a record.
--
-- Get_Vendor_No
--   Fetches the VendorNo attribute for a record.
--
-- Get_Quotation_No
--   Fetches the QuotationNo attribute for a record.
--
-- Get_Free_Of_Chg_Tax_Pay_Party
--   Fetches the FreeOfChgTaxPayParty attribute for a record.
--
-- Get_Free_Of_Chg_Tax_Pay_Par_Db
--   Fetches the DB value of FreeOfChgTaxPayParty attribute for a record.
--
-- Get_Blocked_Type
--   Fetches the BlockedType attribute for a record.
--
-- Get_Blocked_Type_Db
--   Fetches the DB value of BlockedType attribute for a record.
--
-- Get_B2b_Order
--   Fetches the B2bOrder attribute for a record.
--
-- Get_B2b_Order_Db
--   Fetches the DB value of B2bOrder attribute for a record.
--
-- Get_Limit_Sales_To_Assortments
--   Fetches the LimitSalesToAssortments attribute for a record.
--
-- Get_Limit_Sales_To_Assortme_Db
--   Fetches the DB value of LimitSalesToAssortments attribute for a record.
--
-- Get_Final_Consumer
--   Fetches the FinalConsumer attribute for a record.
--
-- Get_Final_Consumer_Db
--   Fetches the DB value of FinalConsumer attribute for a record.
--
-- Get_Customer_Tax_Usage_Type
--   Fetches the CustomerTaxUsageType attribute for a record.
--
-- Get_Invoice_Reason_Id
--   Fetches the InvoiceReasonId attribute for a record.
--
-- Get_Delivery_Reason_Id
--   Fetches the DeliveryReasonId attribute for a record.
--
-- Get_Component_A
--   Fetches the ComponentA attribute for a record.
--
-- Get_Service_Code
--   Fetches the ServiceCode attribute for a record.
--
-- Get_Disc_Price_Round
--   Fetches the DiscPriceRound attribute for a record.
--
-- Get_Disc_Price_Round_Db
--   Fetches the DB value of DiscPriceRound attribute for a record.
--
-- Get_Business_Transaction_Id
--   Fetches the BusinessTransactionId attribute for a record.
--
-- Get_Invoiced_Closed_Date
--   Fetches the InvoicedClosedDate attribute for a record.
--
-- Get_State
--   Fetches the State attribute for a record.
--
-- Get_Objstate
--   Fetches the Objstate attribute for a record.
--
-- Get_Objevents
--   Fetches the Objevents attribute for a record.
--
-- Get_By_Rowkey
--   Fetches a record containing the public attributes by rowkey inparameter.
--
-- Get
--   Fetches a record containing the public attributes.
--
-- Get_Objkey
--   Fetches the objkey attribute for a record.
--
-- Lock__
--   Client-support to lock a specific instance of the logical unit.
--
-- New__
--   Client-support interface to create LU instances.
--   action_ = 'PREPARE'
--   Default values and handle of information to client.
--   The default values are set in procedure Prepare_Insert___.
--   action_ = 'CHECK'
--   Check all attributes before creating new object and handle of
--   information to client. The attribute list is unpacked, checked
--   and prepared (defaults) in procedures Unpack___ and Check_Insert___.
--   action_ = 'DO'
--   Creation of new instances of the logical unit and handle of
--   information to client. The attribute list is unpacked, checked
--   and prepared (defaults) in procedures Unpack___ and Check_Insert___
--   before calling procedure Insert___.
--
-- Modify__
--   Client-support interface to modify attributes for LU instances.
--   action_ = 'CHECK'
--   Check all attributes before modifying an existing object and
--   handle of information to client. The attribute list is unpacked,
--   checked and prepared(defaults) in procedures Unpack___ and Check_Update___.
--   action_ = 'DO'
--   Modification of an existing instance of the logical unit. The
--   procedure unpacks the attributes, checks all values before
--   procedure Update___ is called.
--
-- Remove__
--   Client-support interface to remove LU instances.
--   action_ = 'CHECK'
--   Check whether a specific LU-instance may be removed or not.
--   The procedure fetches the complete record by calling procedure
--   Get_Object_By_Id___. Then the check is made by calling procedure
-----------------------------------------------------------------------------

--@PoReadOnly(Get_Key_By_Rowkey)
FUNCTION Get_Key_By_Rowkey (
   rowkey_ IN VARCHAR2 ) RETURN customer_order_tab%ROWTYPE;

--@PoReadOnly(Exist)
PROCEDURE Exist (
   order_no_ IN VARCHAR2 );

--@PoReadOnly(Exists)
FUNCTION Exists (
   order_no_ IN VARCHAR2 ) RETURN BOOLEAN;

--@PoReadOnly(Rowkey_Exist)
PROCEDURE Rowkey_Exist (
   rowkey_ IN VARCHAR2 );

--@PoReadOnly(Get_Authorize_Code)
FUNCTION Get_Authorize_Code (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Bill_Addr_No)
FUNCTION Get_Bill_Addr_No (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Contract)
FUNCTION Get_Contract (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Country_Code)
FUNCTION Get_Country_Code (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Currency_Code)
FUNCTION Get_Currency_Code (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Customer_No)
FUNCTION Get_Customer_No (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Customer_No_Pay)
FUNCTION Get_Customer_No_Pay (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Customer_No_Pay_Addr_No)
FUNCTION Get_Customer_No_Pay_Addr_No (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Customer_No_Pay_Ref)
FUNCTION Get_Customer_No_Pay_Ref (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Delivery_Terms)
FUNCTION Get_Delivery_Terms (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_District_Code)
FUNCTION Get_District_Code (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Language_Code)
FUNCTION Get_Language_Code (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Market_Code)
FUNCTION Get_Market_Code (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Note_Id)
FUNCTION Get_Note_Id (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Order_Code)
FUNCTION Get_Order_Code (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Order_Id)
FUNCTION Get_Order_Id (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Pay_Term_Id)
FUNCTION Get_Pay_Term_Id (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Pre_Accounting_Id)
FUNCTION Get_Pre_Accounting_Id (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Print_Control_Code)
FUNCTION Get_Print_Control_Code (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Region_Code)
FUNCTION Get_Region_Code (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Salesman_Code)
FUNCTION Get_Salesman_Code (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Ship_Addr_No)
FUNCTION Get_Ship_Addr_No (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Ship_Via_Code)
FUNCTION Get_Ship_Via_Code (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Addr_Flag)
FUNCTION Get_Addr_Flag (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Addr_Flag_Db)
FUNCTION Get_Addr_Flag_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.addr_flag%TYPE;

--@PoReadOnly(Get_Grp_Disc_Calc_Flag)
FUNCTION Get_Grp_Disc_Calc_Flag (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Grp_Disc_Calc_Flag_Db)
FUNCTION Get_Grp_Disc_Calc_Flag_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.grp_disc_calc_flag%TYPE;

--@PoReadOnly(Get_Customer_Po_No)
FUNCTION Get_Customer_Po_No (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Cust_Ref)
FUNCTION Get_Cust_Ref (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Date_Entered)
FUNCTION Get_Date_Entered (
   order_no_ IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_Delivery_Leadtime)
FUNCTION Get_Delivery_Leadtime (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Label_Note)
FUNCTION Get_Label_Note (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Note_Text)
FUNCTION Get_Note_Text (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Order_Conf)
FUNCTION Get_Order_Conf (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Order_Conf_Db)
FUNCTION Get_Order_Conf_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.order_conf%TYPE;

--@PoReadOnly(Get_Tax_Liability)
FUNCTION Get_Tax_Liability (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Wanted_Delivery_Date)
FUNCTION Get_Wanted_Delivery_Date (
   order_no_ IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_Internal_Po_No)
FUNCTION Get_Internal_Po_No (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Route_Id)
FUNCTION Get_Route_Id (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Agreement_Id)
FUNCTION Get_Agreement_Id (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Forward_Agent_Id)
FUNCTION Get_Forward_Agent_Id (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Internal_Delivery_Type)
FUNCTION Get_Internal_Delivery_Type (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Internal_Delivery_Type_Db)
FUNCTION Get_Internal_Delivery_Type_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.internal_delivery_type%TYPE;

--@PoReadOnly(Get_External_Ref)
FUNCTION Get_External_Ref (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Project_Id)
FUNCTION Get_Project_Id (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Staged_Billing)
FUNCTION Get_Staged_Billing (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Staged_Billing_Db)
FUNCTION Get_Staged_Billing_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.staged_billing%TYPE;

--@PoReadOnly(Get_Sm_Connection)
FUNCTION Get_Sm_Connection (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Sm_Connection_Db)
FUNCTION Get_Sm_Connection_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.sm_connection%TYPE;

--@PoReadOnly(Get_Scheduling_Connection)
FUNCTION Get_Scheduling_Connection (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Scheduling_Connection_Db)
FUNCTION Get_Scheduling_Connection_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.scheduling_connection%TYPE;

--@PoReadOnly(Get_Priority)
FUNCTION Get_Priority (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Intrastat_Exempt)
FUNCTION Get_Intrastat_Exempt (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Intrastat_Exempt_Db)
FUNCTION Get_Intrastat_Exempt_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.intrastat_exempt%TYPE;

--@PoReadOnly(Get_Additional_Discount)
FUNCTION Get_Additional_Discount (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Pay_Term_Base_Date)
FUNCTION Get_Pay_Term_Base_Date (
   order_no_ IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_Summarized_Source_Lines)
FUNCTION Get_Summarized_Source_Lines (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Summarized_Source_Lines_Db)
FUNCTION Get_Summarized_Source_Lines_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.summarized_source_lines%TYPE;

--@PoReadOnly(Get_Case_Id)
FUNCTION Get_Case_Id (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Task_Id)
FUNCTION Get_Task_Id (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Confirm_Deliveries)
FUNCTION Get_Confirm_Deliveries (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Confirm_Deliveries_Db)
FUNCTION Get_Confirm_Deliveries_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.confirm_deliveries%TYPE;

--@PoReadOnly(Get_Check_Sales_Grp_Deliv_Conf)
FUNCTION Get_Check_Sales_Grp_Deliv_Conf (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Check_Sales_Grp_Dc_Db)
FUNCTION Get_Check_Sales_Grp_Dc_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.check_sales_grp_deliv_conf%TYPE;

--@PoReadOnly(Get_Delay_Cogs_To_Deliv_Conf)
FUNCTION Get_Delay_Cogs_To_Deliv_Conf (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Delay_Cogs_To_Dc_Db)
FUNCTION Get_Delay_Cogs_To_Dc_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.delay_cogs_to_deliv_conf%TYPE;

--@PoReadOnly(Get_Cancel_Reason)
FUNCTION Get_Cancel_Reason (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Jinsui_Invoice)
FUNCTION Get_Jinsui_Invoice (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Jinsui_Invoice_Db)
FUNCTION Get_Jinsui_Invoice_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.jinsui_invoice%TYPE;

--@PoReadOnly(Get_Blocked_Reason)
FUNCTION Get_Blocked_Reason (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Blocked_From_State)
FUNCTION Get_Blocked_From_State (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Sales_Contract_No)
FUNCTION Get_Sales_Contract_No (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Contract_Rev_Seq)
FUNCTION Get_Contract_Rev_Seq (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Contract_Line_No)
FUNCTION Get_Contract_Line_No (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Contract_Item_No)
FUNCTION Get_Contract_Item_No (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Released_From_Credit_Check)
FUNCTION Get_Released_From_Credit_Check (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Released_From_Credit_Ch_Db)
FUNCTION Get_Released_From_Credit_Ch_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.released_from_credit_check%TYPE;

--@PoReadOnly(Get_Proposed_Prepayment_Amount)
FUNCTION Get_Proposed_Prepayment_Amount (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Prepayment_Approved)
FUNCTION Get_Prepayment_Approved (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Prepayment_Approved_Db)
FUNCTION Get_Prepayment_Approved_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.prepayment_approved%TYPE;

--@PoReadOnly(Get_Backorder_Option)
FUNCTION Get_Backorder_Option (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Backorder_Option_Db)
FUNCTION Get_Backorder_Option_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.backorder_option%TYPE;

--@PoReadOnly(Get_Expected_Prepayment_Date)
FUNCTION Get_Expected_Prepayment_Date (
   order_no_ IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_Shipment_Creation)
FUNCTION Get_Shipment_Creation (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Shipment_Creation_Db)
FUNCTION Get_Shipment_Creation_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.shipment_creation%TYPE;

--@PoReadOnly(Get_Use_Pre_Ship_Del_Note)
FUNCTION Get_Use_Pre_Ship_Del_Note (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Use_Pre_Ship_Del_Note_Db)
FUNCTION Get_Use_Pre_Ship_Del_Note_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.use_pre_ship_del_note%TYPE;

--@PoReadOnly(Get_Pick_Inventory_Type)
FUNCTION Get_Pick_Inventory_Type (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Pick_Inventory_Type_Db)
FUNCTION Get_Pick_Inventory_Type_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.pick_inventory_type%TYPE;

--@PoReadOnly(Get_Tax_Id_No)
FUNCTION Get_Tax_Id_No (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Tax_Id_Validated_Date)
FUNCTION Get_Tax_Id_Validated_Date (
   order_no_ IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_Classification_Standard)
FUNCTION Get_Classification_Standard (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Msg_Sequence_No)
FUNCTION Get_Msg_Sequence_No (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Msg_Version_No)
FUNCTION Get_Msg_Version_No (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Currency_Rate_Type)
FUNCTION Get_Currency_Rate_Type (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Del_Terms_Location)
FUNCTION Get_Del_Terms_Location (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Internal_Ref)
FUNCTION Get_Internal_Ref (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Internal_Po_Label_Note)
FUNCTION Get_Internal_Po_Label_Note (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Supply_Country)
FUNCTION Get_Supply_Country (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Supply_Country_Db)
FUNCTION Get_Supply_Country_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.supply_country%TYPE;

--@PoReadOnly(Get_Rebate_Customer)
FUNCTION Get_Rebate_Customer (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Freight_Map_Id)
FUNCTION Get_Freight_Map_Id (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Zone_Id)
FUNCTION Get_Zone_Id (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Freight_Price_List_No)
FUNCTION Get_Freight_Price_List_No (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Summarized_Freight_Charges)
FUNCTION Get_Summarized_Freight_Charges (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Summarized_Freight_Char_Db)
FUNCTION Get_Summarized_Freight_Char_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.summarized_freight_charges%TYPE;

--@PoReadOnly(Get_Apply_Fix_Deliv_Freight)
FUNCTION Get_Apply_Fix_Deliv_Freight (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Apply_Fix_Deliv_Freight_Db)
FUNCTION Get_Apply_Fix_Deliv_Freight_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.apply_fix_deliv_freight%TYPE;

--@PoReadOnly(Get_Fix_Deliv_Freight)
FUNCTION Get_Fix_Deliv_Freight (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Print_Delivered_Lines)
FUNCTION Get_Print_Delivered_Lines (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Print_Delivered_Lines_Db)
FUNCTION Get_Print_Delivered_Lines_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.print_delivered_lines%TYPE;

--@PoReadOnly(Get_Cust_Calendar_Id)
FUNCTION Get_Cust_Calendar_Id (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Ext_Transport_Calendar_Id)
FUNCTION Get_Ext_Transport_Calendar_Id (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Use_Price_Incl_Tax)
FUNCTION Get_Use_Price_Incl_Tax (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Use_Price_Incl_Tax_Db)
FUNCTION Get_Use_Price_Incl_Tax_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.use_price_incl_tax%TYPE;

--@PoReadOnly(Get_Customs_Value_Currency)
FUNCTION Get_Customs_Value_Currency (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Business_Opportunity_No)
FUNCTION Get_Business_Opportunity_No (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Picking_Leadtime)
FUNCTION Get_Picking_Leadtime (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Shipment_Type)
FUNCTION Get_Shipment_Type (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Vendor_No)
FUNCTION Get_Vendor_No (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Quotation_No)
FUNCTION Get_Quotation_No (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Free_Of_Chg_Tax_Pay_Party)
FUNCTION Get_Free_Of_Chg_Tax_Pay_Party (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Free_Of_Chg_Tax_Pay_Par_Db)
FUNCTION Get_Free_Of_Chg_Tax_Pay_Par_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.free_of_chg_tax_pay_party%TYPE;

--@PoReadOnly(Get_Blocked_Type)
FUNCTION Get_Blocked_Type (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Blocked_Type_Db)
FUNCTION Get_Blocked_Type_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.blocked_type%TYPE;

--@PoReadOnly(Get_B2b_Order)
FUNCTION Get_B2b_Order (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_B2b_Order_Db)
FUNCTION Get_B2b_Order_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.b2b_order%TYPE;

--@PoReadOnly(Get_Limit_Sales_To_Assortments)
FUNCTION Get_Limit_Sales_To_Assortments (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Limit_Sales_To_Assortme_Db)
FUNCTION Get_Limit_Sales_To_Assortme_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.limit_sales_to_assortments%TYPE;

--@PoReadOnly(Get_Final_Consumer)
FUNCTION Get_Final_Consumer (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Final_Consumer_Db)
FUNCTION Get_Final_Consumer_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.final_consumer%TYPE;

--@PoReadOnly(Get_Customer_Tax_Usage_Type)
FUNCTION Get_Customer_Tax_Usage_Type (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Invoice_Reason_Id)
FUNCTION Get_Invoice_Reason_Id (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Delivery_Reason_Id)
FUNCTION Get_Delivery_Reason_Id (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Component_A)
FUNCTION Get_Component_A (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Service_Code)
FUNCTION Get_Service_Code (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Disc_Price_Round)
FUNCTION Get_Disc_Price_Round (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Disc_Price_Round_Db)
FUNCTION Get_Disc_Price_Round_Db (
   order_no_ IN VARCHAR2 ) RETURN customer_order_tab.disc_price_round%TYPE;

--@PoReadOnly(Get_Business_Transaction_Id)
FUNCTION Get_Business_Transaction_Id (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Invoiced_Closed_Date)
FUNCTION Get_Invoiced_Closed_Date (
   order_no_ IN VARCHAR2 ) RETURN DATE;

--@PoReadOnly(Get_State)
FUNCTION Get_State (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Objstate)
FUNCTION Get_Objstate (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Objevents)
FUNCTION Get_Objevents (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_By_Rowkey)
FUNCTION Get_By_Rowkey (
   rowkey_ IN VARCHAR2 ) RETURN Public_Rec;

--@PoReadOnly(Get)
FUNCTION Get (
   order_no_ IN VARCHAR2 ) RETURN Public_Rec;

--@PoReadOnly(Get_Objkey)
FUNCTION Get_Objkey (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Lock__)
PROCEDURE Lock__ (
   info_       OUT VARCHAR2,
   objid_      IN  VARCHAR2,
   objversion_ IN  VARCHAR2 );

PROCEDURE New__ (
   info_       OUT    VARCHAR2,
   objid_      OUT    VARCHAR2,
   objversion_ OUT    VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Modify__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Remove__ (
   info_       OUT VARCHAR2,
   objid_      IN  VARCHAR2,
   objversion_ IN  VARCHAR2,
   action_     IN  VARCHAR2 );

-----------------------------------------------------------------------------
-------------------- LU SPECIFIC PUBLIC METHODS -----------------------------
-----------------------------------------------------------------------------
-- Get_Charge_Gross_Amount
--   Retrieves the Charge Gross Amount for all order lines on the
--   specified order.
--
-- Modify_Grp_Disc_Calc_Flag
--
-- Check_Ship_Via_Code
--   Checks if Ship_Via_Code is used by any record. (Used by Mpccom)
--
-- Calculate_Planned_Due_Date
--   Calculate the planned due date for an order line with
--   the specified supply_code and planned_delivery_date.
--   Generate an error if the delivery date specified is not valid.
--   This procedure is called from shortage handling.
--   Calculate the planned due date for an order line with the specified
--   catalog_no and/or supply_code and wanted_delivery_date.
--   This method is called from Customer Scheduling.
--
-- Calculate_Planned_Due_Date
--   Calculate the planned due date for an order line with
--   the specified supply_code and planned_delivery_date.
--   Generate an error if the delivery date specified is not valid.
--   This procedure is called from shortage handling.
--   Calculate the planned due date for an order line with the specified
--   catalog_no and/or supply_code and wanted_delivery_date.
--   This method is called from Customer Scheduling.
--
-- Calculate_Planned_Deliv_Date
--   Calculate the planned delivery date for an order line with the
--   specified planned_due_date.
--   Generate an error if the planned due date specified is not valid.
--   This procedure is called from shortage handling and assumes that
--   the goods will be reserved and picked at our inventory.
--
-- Get_Next_Line_No
--   Retrieve new line_no, rel_no and line_item_no for a order line.
--   Called when registering a new order line.
--
-- Get_Total_Base_Price
--   Retrive the total base price for the specified order in base currency
--   rounding. Changes to this should apply to Get_Order_ToTals as well.
--
-- Get_Total_Sales_Price
--
-- Get_Total_Base_Price_Incl_Tax
--   Retrive the total base price including tax for the specified order in base currency rounding.
--
-- Get_Total_Cost
--   Retrieve the total cost for the specified order. Changes to this should apply to Get_Ord_Line_ToTals__ as well.
--
-- Uses_Shipment_Inventory
--   Returns value for TRUE if order uses shipment inventory.FALSE (0) if not
--
-- Set_Line_Qty_Assigned
--   Public interface used to generate a SetLineQtyAssigned event and
--   pass it to the state diagram.
--
-- Set_Line_Qty_Picked
--   Public interface used to generate a SetLineQtyPicked event and pass it
--   to the state diagram
--
-- Set_Line_Qty_Shipped
--   Public interface used to generate a SetLineQtyDelivered event and
--   pass it to the state diagram
--
-- Check_Ref_Line_Remove
--   Checks if the order line with the reference is in status Released, or
--   Reserved, so that cancel or remove is possible by customer scheduling.
--
-- Calendar_Changed
--   Modify planned due date for orders when changes have been made in the
--   work time calendar.
--
-- Set_Line_Qty_Shipdiff
--   Public interface used to generate the SetLineQtyShipdiff event and
--   pass it to the finite state machine for processing.
--
-- Set_Line_Qty_Invoiced
--   Public interface used to generate the SetLineQtyInvoiced event and
--   pass it to the finite state machine for processing.
--
-- Set_Cancelled
--   Generates the SetCancelled state event and pass
--   it to the finite state machine for processing.
--
-- Set_Released
--   Generates the SetReleased state event and
--   pass it to the finite state machine for processing.
--
-- Set_Blocked
--   Generates the SetBlocked state event
--   and pass it to the finite state machine for processing.
--
-- Block_Connected_Orders
--   Blocked Internal customer order connected parent customer orders
--   except connected External Customer order .
--
-- Release_Connected_Blocked_Ord
--   Release External Co connected Internal COs.
--
-- Start_Release_Blocked
--
-- Release_Blocked
--   Generates the ReleaseCreditBlocked state event
--   and pass it to the finite state machine for processing.
--
-- Get_Id_Version_By_Keys
--
-- Get_Default_Shipment_Location
--   If parts of order exists in a shipment inventory, the first
--   location_no is returned as default, otherwise NULL.
--
-- Set_Line_Cancelled
--   Generates the SetLineCancelled event
--   and pass it to the finite state machine for processing.
--
-- Modify_Address
--   Modify address information for a customer order.
--   Called when an order address has been modified.
--
-- Modify_Address
--   Modify address information for a customer order.
--   Called when an order address has been modified.
--
-- New
--   Public interface for creating a new customer order.
--
-- Modify
--   Public interface for modification of customer order attributes.
--   The attributes to be modified should be passed in an attribute string.
--
-- New_Order_Lines_Allowed
--   Return TRUE (1) if new order line creation is allowed for the order,
--   FALSE (0) if new lines may not be created
--
-- Get_Latest_Order_No
--   Returns the latest registered order for a specified customer and site
--   and where the order number is not equal to the passed one.
--
-- Get_Qty_Shipped_Per_Part
--   Returns the sum of (qty_shipped - qty_returned) for all order lines for a given part with a delivery date within a
--   given time interval. Optional to include/exclude internal demands like Distribution Orders
--
-- Get_Open_Demand_Per_Part
--
-- Get_Part_Sales_All_Orders
--   Returns the sum of the bookings for all order lines for a given part with a planned_due_date within a
--   given time interval. Optional to include/exclude internal demands like Distribution Orders
--
-- Get_Line_Demand_Code_Db
--   Checks all customer order lines and returns a distinct demand code.
--
-- Get_Tot_Charge_Base_Tax_Amount
--   Retrive the total tax amount on charges for an order in base currency
--
-- Get_Price_List_No
--   Always returns NULL.
--   Only kept to maintain backward compatibility to Maintenance 5.3.1.
--
-- Find_External_Ref_Order
--   Finds the order no if only the external reference is known.
--   Finds the order no if only the external reference is known.
--
-- Find_External_Ref_Order
--   Finds the order no if only the external reference is known.
--   Finds the order no if only the external reference is known.
--
-- Get_Delivery_Time
--   Returns the passed date with default time from the delivery address
--   added to it.
--
-- Check_State
--   This method should be called when changes have been made to an order
--   which could cause state changes on the order header, and the changes
--   have not been made using the Finite_State_Machine methods.
--   One example of when the method should be called is if the buy qty on
--   an order line is decreased. In some cases this should cause a state change.
--
-- New_Order_Line_Added
--   This method should be called when new order lines have been added to an
--   order in state 'Delivered' or 'Invoiced'.
--   The method will force a state change to 'PartiallyDelivered'.
--
-- Get_Total_Contribution
--   Returns the total contribution for a customer order. Changes to this should apply to Get_Ord_Line_ToTals__ as well.
--
-- Set_Project_Id
--   Method used by Project module.
--   Sets a value on Project_Id.
--   This is used by IFS/Project to establish a connection between a CO and a Project
--
-- Set_Project_Pre_Posting
--   This is used by IFS/Project to add information for pre account
--
-- Set_Scheduling_Connection
--   Sets the connection to Customer Scheduling
--
-- Modify_Sm_Connection
--   Modify SM_Connection, used by Service Management
--
-- Get_Delivery_Information
--   Returns correct ship_via_code, delivery_terms and delivery_terms_desc.
--   If an agreement exists, the values are fetched from the agreement.
--   Otherwise, the values are fetched from the customer
--
-- Get_Line_Return_Percentage
--   Returns the percentage of order lines with returns within a specified
--   period of time.
--   Customer number and sales part number may be specified as qualifiers
--   to this function.
--
-- Get_No_Of_Orders_Due_For_Part
--   Return the number of customer orders for the specified part within
--   the specified date intervall.
--   Used by the ABC calculation in Costing.
--
-- Uninvoiced_Charges_Exist
--   Returns and sing plus TRUE if univoiced charges connected to the order head exist-
--
-- Is_Pre_Posting_Mandatory
--   This Function is return 1 if mandarory pre posting is set for order header
--
-- Finite_State_Decode
--   Returns the client value of the state.
--
-- Get_Total_Tax_Amount
--   Retrive the total tax amount for order lines on the specified order
--   in base currency.
--
-- Get_Tax_Amount_Per_Tax_Code
--   Returns the total tax amount (VAT or Sales Tax) per tax code
--   in order currency.
--   gelr:delivery_types_in_pbi, begin
--
-- Get_Tax_Per_Tax_Code_Deliv
--   Returns the total tax amount (VAT or Sales Tax) per tax code and delivery type
--   in order currency. If the delivery type is not given it will be calculated only per tax code
--   gelr:delivery_types_in_pbi, end
--
-- Get_Gross_Amount
--   Retrive the total gross amount for all order lines on this order.
--   Charges will not be included.
--   gelr:delivery_types_in_pbi, begin
--
-- Get_Gross_Amount_Per_Tax_Code
--
-- Get_Gross_Per_Tax_Code_Deliv
--   Returns the Gross Amout calculated per Tax Code and Delivery Type
--   gelr:delivery_types_in_pbi, end
--
-- Get_Ord_Gross_Amount
--   Retrive the total gross amount for all order lines on this order
--   in order currency.Charges will not be included.
--
-- Get_Ord_Total_Tax_Amount
--   Retrive the total tax amount for an order in order currency
--
-- Order_Lines_Exist
--   Return TRUE (1) if lines exist on the specified order,
--   FALSE (0) if no lines have been created.
--
-- Get_Total_Add_Discount_Amount
--   Retrives the total additional discount amount in base price for the
--   specified order, in base currency rounding. Changes to this should apply to Get_Ord_Line_ToTals__ as well.
--
-- Check_Peggings_Exist
--   returns 1 If any peggings exist for the customer order.
--   Otherwise returns 0
--
-- Check_Exchange_Part_Exist
--   Checks the existancy of exchange customer order lines of a specific
--   customer order.
--
-- Shipment_Connected_Lines_Exist
--   returns 1 If any customer order line has connected to a shipment.
--   Otherwise returns 0
--
-- Check_Order_Connected
--   This method is used to check whether there is a connected customer
--   order to a given activity
--
-- Check_Delivered_Sched_Order
--   Checks if the order is a schedule connected order which is delivered..
--
-- Get_Shipment_Charge_Amount
--   Return charge sum and base charge sum for an order that has lines
--   that are connected to a specified shipment.
--
-- Get_Tot_Charge_Sale_Tax_Amt
--   Public function to return the sum of tax of all charge lines for a
--   given order.
--
-- Get_Customer_Defaults
--   Method retrieves the default data using customer number and the contract.
--
-- Is_Order_Exist
--   This will return 1(TRUE) if there is an  order with the order_no,
--   else it will return 0(FALSE).
--
-- New_Or_Changed_Charge
--   This method should be called when new charge lines have been added
--   or when exsisting lines have been modified in an order in state 'Invoiced'.
--   Then it will force a state change to 'Delivered'.
--
-- Set_Cancel_Reason
--   Updates the value of cancel_reason for the order.
--
-- Find_Open_Scheduling_Order
--   Finds the order no if there is a matching customer purchase order no
--   else find a order no which has schedule connection and is in open
--   state as required.
--
-- Blocked_Invoicing_Exist
--   Return TRUE(1) if blocked for Invoicing exist on the specified order,
--   FALSE (0) if blocked for Invoicing does not exist.
--
-- Set_Line_Qty_Confirmeddiff
--
-- Get_Blocked_Reason_Desc
--   Returns the reason for the Customer Order to be blocked.
--
-- Check_Forecast_Consumpt_Change
--   This will check the updating of Online consumption flag and raise the error
--
-- Consignment_Lines_Exist
--
-- Get_Gross_Amt_Incl_Charges
--   This will returns the gross amount including charges
--
-- Handle_Pre_Posting_Change
--   This method will update Customer Order History when user adds or changes
--   customer order pre postings.
--
-- Set_Msg_Sequence_And_Version
--
-- Get_Adj_Weight_In_Charges
--   Now the adjusted weight is used for Freight Charges.
--   This method returns total of the total adjusted gross weights, of CO Lines, which has freight charge lines.
--
-- Get_Adj_Volume_In_Charges
--   Now the adjusted volume is used for Freight Charges.
--   This method returns total of the total adjusted volumes, of CO Lines, which has freight charge lines.
--
-- Get_Pegged_Orders
--   This method returns the number of pegged orders to the given Customer Order
--   where the customer order lines are not delivered, invoiced or cancelled.
--
-- Modify_Project_Id
--   Modify project in customer order header. called from customer order line.
--
-- Get_Promotion_Charges_Count
--   If there are sales promotion charges connected to the order this will return count
--
-- Exist_Connected_Charges
--   Returns whether or not connected charges are used in an order.
--
-- Non_Ivc_Cancelled_Lines_Exist
--   Returns 1 if the specified order contains any lines with status other than 'Invoiced' and 'Cancelled'
--
-- Update_Freight_Free_On_Lines
--
-- Check_Config_Revisions
--   This method checks whether the part configuration revisions used to create configurations
--   for each customer order line is valid for each line's planned delivery date and returns
--   the number of reserved and unreserved lines with invalid configuration revisions.
--
-- Update_Config_Revisions
--   This method updates the part configuration revisions used to create configurations
--   for each customer order line to revision valid for the new planned delivery date.
--   Excludes lines with reserved qty > 0.
--
-- Get_Order_Currency_Rounding
--
-- Is_Single_Occ_Addr_Connected
--
-- Is_Customer_Credit_Blocked
--
-- Check_Customer_Credit_Blocked
--
-- Copy_Prepostings_To_Lines
--   Pre postings from the given order header will get copied to all its' lines.
--   Intended to use in Order Quotation when creating order from quotation, with prepostings information added at that moment.
--
-- Modify_Line_Purchase_Part_No
--   Calls the function Modify_Purchase_Part_No on a specific customer order line if the
--   purchase part no field is NULL when the purchase part is connected to an inventory part from Purchasing.
--
-- Fetch_Delivery_Attributes
--
-- Fetch_Default_Delivery_Info
--   This method is used to retrieve default delivery information. If no Freight zone information
--   is defined in supplier chain matrix, the delivery address is considered.
--
-- All_Lines_Cancelled
--   Returns TRUE when all the CO lines are cancelled.
--
-- Check_No_Default_Info_Lines
--   This method will return TRUE if all the CO lines have default Info NOT selected. Otherwise this will return FALSE.
--
-- Valid_Ownership_Del_Line_Exist
--   This method returns at least one company owned/company rental asset delivered line exists for non rental or
--   company rental asset, supplier rented delivered line exist for rentals in
--   given customer order which can be connected to RMA if needed.
--
-- Check_Order_Exist_For_Customer
--   Check whether any non Delivered, Invoiced or Cancelled orders exist for a given customer in a considered site.
--
-- Check_Ipd_Tax_Registration
--   This method checks whether there are IPD lines with delivery address country
--   is different to the order header supply country and the comapny has a tax
--   registration in the delivery address country.
--
-- Internal_Co_Exists
--   Checks to see if internal CO having the customer po no was created from internal PO.
--
-- Check_Rel_Mtrl_Planning
--   Check whether any lines exist with rel_mtrl_planning is FALSE for a given order.
--   If so set the value of rel_mtrl_planning to TRUE.
--
-- Uncheck_Rel_Mtrl_Planning
--   This method will be used only when CO is manually blocking or when the manual block reason changes in CO.
--   If the manual block reason is with exclude_mtrl_planning check box is checked, co lines rel_mtrl_planning should be
--   cleared for the customer orders which are in state Planned, Released and the orders that doesn't have pegged orders.
--
-- Is_Expctr_Connected
--   Returns true if export license connected line exist.
--
-- Rental_Lines_Exist
--   Returns true if any rental lines exist for a given order.
--
-- Get_Customer_Po_No
--   Fetches the CustomerPoNo attribute for a record.
--   Returns the customer's purchase order no.
--   Checks if the Customer Po No exists for the relevent customer.
--   Returns Customer No.
--
-- Get_Bo_Connected_Order_No
--   Returns the list of order no connected to specific business opportunity no.
--
-- New_Rental_Replacement_Order
--
-- Set_Rent_Line_Completed
--   This will complete the rental order line and closed the
--   CO header and line status.
--
-- Set_Rent_Line_Reopened
--   This will reopen the rental order line for invoicing
--   when CO header and line is closed.
--
-- Set_Line_Uninvoiced
--   This will un-invoice the order line
--
-- Undo_Line_Delivery
--   This will undo order line delivery.
--
-- Exists_Freight_Info_Lines
--   Checks whether there are invoiced customer order lines with freight information
--
-- Has_Non_Def_Info_Lines
--   Checks whether there are customer order lines with Default info flag unchecked
--   and same address as header.
--
-- Has_Invoiced_Lines
--   Return TRUE if at least one line in the specified order has been
--
-- Exists_One_Tax_Code_Per_Line
--
-- All_Lines_Expctr
--   all_lines_expctr_ will be true if all lines of the specified CO is export controlled.
--   connected_ will be true if at least one of those lines is license connected.
--
-- Get_Tax_Liability_Type_Db
--   Returns tax liability type db value
--
-- Has_Demand_Code_Lines
--   Returns TRUE if at least one line in the specified order has the
--   required demand code.
--
-- Get_Tax_Liability_Country_Db
--   This method Returns the effective tax liability country which should be used for fetching the
--   tax liability details. i.e if there is no tax registration for the
--   delivery country then use the supply country for the tax registration.
--   This method is used by DataCaptDeliverCo
--   This method is used by DataCaptDeliverCo
--   This method is used by DataCaptDeliverCo
--
-- Check_Diff_Delivery_Info
--
-- Modify_Main_Representative
--
-- Check_Edit_Allowed
--
-- Create_Data_Capture_Lov
--
-- Get_Column_Value_If_Unique
--
-- Record_With_Column_Value_Exist
--
-- Refresh_Tax_On_Co_Release
--
-- Order_Lines_Available_To_Copy
--
-- Get_Default_Order_Type
--   Returns order_type according to below hierarchy.
--   Site and customer combination
--
-- Calculate_Totals
--
-- Modify_Tax_Id_Validated_Date
--
-- Fetch_External_Tax
--   Fetches tax information from external tax system.
--
-- Get_Discounted_Price_Rounded
--
-- Check_Delivery_Type
--   Checks if the delivery type is same for all customer order lines and charge lines in the customer order.
--
-- Get_Tax_Id_Type
-----------------------------------------------------------------------------

FUNCTION Get_Charge_Gross_Amount (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

PROCEDURE Modify_Grp_Disc_Calc_Flag (
   order_no_           IN VARCHAR2,
   grp_disc_calc_flag_ IN VARCHAR2 );

--@PoReadOnly(Check_Ship_Via_Code)
FUNCTION Check_Ship_Via_Code (
   ship_via_code_ IN VARCHAR2 ) RETURN BOOLEAN;

PROCEDURE Calculate_Planned_Due_Date (
   planned_due_date_      IN OUT NOCOPY DATE,
   order_no_              IN     VARCHAR2,
   planned_delivery_date_ IN     DATE,
   supply_code_           IN     VARCHAR2 );

FUNCTION Calculate_Planned_Due_Date (
   order_no_             IN VARCHAR2,
   wanted_delivery_date_ IN DATE,
   catalog_no_           IN VARCHAR2,
   supply_code_          IN VARCHAR2 ) RETURN DATE;

PROCEDURE Calculate_Planned_Deliv_Date (
   planned_delivery_date_ IN OUT NOCOPY DATE,
   order_no_              IN     VARCHAR2,
   planned_due_date_      IN     DATE );

PROCEDURE Get_Next_Line_No (
   rel_no_         OUT    VARCHAR2,
   line_item_no_   OUT    NUMBER,
   line_no_        IN OUT NOCOPY VARCHAR2,
   order_no_       IN     VARCHAR2,
   contract_       IN     VARCHAR2,
   catalog_no_     IN     VARCHAR2,
   supply_code_    IN     VARCHAR2,
   demand_code_db_ IN     VARCHAR2 DEFAULT NULL,
   rental_db_      IN     VARCHAR2 DEFAULT 'FALSE' );

--@PoReadOnly(Get_Total_Base_Price)
FUNCTION Get_Total_Base_Price (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Total_Sales_Price)
FUNCTION Get_Total_Sales_Price(
   order_no_   IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Total_Base_Price_Incl_Tax)
FUNCTION Get_Total_Base_Price_Incl_Tax (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Total_Cost)
FUNCTION Get_Total_Cost (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Uses_Shipment_Inventory)
FUNCTION Uses_Shipment_Inventory (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

PROCEDURE Set_Line_Qty_Assigned (
   order_no_     IN VARCHAR2,
   line_no_      IN VARCHAR2,
   rel_no_       IN VARCHAR2,
   line_item_no_ IN NUMBER,
   qty_assigned_ IN NUMBER,
   add_hist_log_ IN VARCHAR2 DEFAULT 'TRUE' );

PROCEDURE Set_Line_Qty_Picked (
   order_no_     IN VARCHAR2,
   line_no_      IN VARCHAR2,
   rel_no_       IN VARCHAR2,
   line_item_no_ IN NUMBER,
   qty_picked_   IN NUMBER,
   add_hist_log_ IN VARCHAR2 DEFAULT 'TRUE');

PROCEDURE Set_Line_Qty_Shipped (
   order_no_     IN VARCHAR2,
   line_no_      IN VARCHAR2,
   rel_no_       IN VARCHAR2,
   line_item_no_ IN NUMBER,
   qty_shipped_  IN NUMBER,
   from_undo_delivery_ IN VARCHAR2 DEFAULT 'FALSE');

--@PoReadOnly(Check_Ref_Line_Remove)
FUNCTION Check_Ref_Line_Remove (
   order_no_         IN VARCHAR2,
   ref_id_           IN VARCHAR2,
   customer_part_no_ IN VARCHAR2,
   min_date_         IN DATE,
   max_date_         IN DATE ) RETURN VARCHAR2;

PROCEDURE Calendar_Changed (
   error_log_   OUT CLOB,
   calendar_id_ IN VARCHAR2,
   contract_    IN VARCHAR2 DEFAULT NULL );

PROCEDURE Set_Line_Qty_Shipdiff (
   order_no_     IN VARCHAR2,
   line_no_      IN VARCHAR2,
   rel_no_       IN VARCHAR2,
   line_item_no_ IN NUMBER,
   qty_shipdiff_ IN NUMBER );

PROCEDURE Set_Line_Qty_Invoiced (
   order_no_     IN VARCHAR2,
   line_no_      IN VARCHAR2,
   rel_no_       IN VARCHAR2,
   line_item_no_ IN NUMBER,
   qty_invoiced_ IN NUMBER );

PROCEDURE Set_Cancelled (
   order_no_ IN VARCHAR2 );

PROCEDURE Set_Released (
   order_no_ IN VARCHAR2 );

PROCEDURE Set_Blocked (
   order_no_           IN VARCHAR2,
   blocked_reason_     IN VARCHAR2,
   checking_state_     IN VARCHAR2 );

PROCEDURE Block_Connected_Orders(
   order_no_       IN VARCHAR2,
   blocked_reason_ IN VARCHAR2 );

PROCEDURE Release_Connected_Blocked_Ord(
   order_no_                  IN VARCHAR2,
   release_from_credit_check_ IN VARCHAR2  );

PROCEDURE Start_Release_Blocked(
   order_no_                  IN VARCHAR2,
   release_from_credit_check_ IN VARCHAR2);

PROCEDURE Release_Blocked (
   order_no_              IN VARCHAR2,
   rel_from_credit_check_ IN VARCHAR2 DEFAULT 'FALSE' );

PROCEDURE Get_Id_Version_By_Keys (
   objid_      OUT VARCHAR2,
   objversion_ OUT VARCHAR2,
   order_no_   IN  VARCHAR2 );

--@PoReadOnly(Get_Default_Shipment_Location)
FUNCTION Get_Default_Shipment_Location (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

PROCEDURE Set_Line_Cancelled (
   order_no_     IN VARCHAR2,
   line_no_      IN VARCHAR2,
   rel_no_       IN VARCHAR2,
   line_item_no_ IN NUMBER );

--@Deprecated
PROCEDURE Modify_Address (
   order_no_             IN VARCHAR2,
   bill_addr_no_         IN VARCHAR2,
   ship_addr_no_         IN VARCHAR2,
   addr_flag_db_         IN VARCHAR2,
   changed_country_code_ IN VARCHAR2,
   freight_map_id_       IN VARCHAR2,
   zone_id_              IN VARCHAR2 );

PROCEDURE Modify_Address (
   order_no_             IN VARCHAR2,
   bill_addr_no_         IN VARCHAR2,
   ship_addr_no_         IN VARCHAR2,
   addr_flag_db_         IN VARCHAR2,
   changed_country_code_ IN VARCHAR2,
   freight_map_id_       IN VARCHAR2,
   zone_id_              IN VARCHAR2,
   vat_free_vat_code_    IN VARCHAR2);

PROCEDURE New (
   info_ OUT    VARCHAR2,
   attr_ IN OUT NOCOPY VARCHAR2 );

PROCEDURE Modify (
   info_     OUT    VARCHAR2,
   attr_     IN OUT NOCOPY VARCHAR2,
   order_no_ IN     VARCHAR2 );

--@PoReadOnly(New_Order_Lines_Allowed)
FUNCTION New_Order_Lines_Allowed (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Latest_Order_No)
FUNCTION Get_Latest_Order_No (
   order_no_    IN VARCHAR2,
   customer_no_ IN VARCHAR2,
   contract_    IN VARCHAR2 ) RETURN VARCHAR2;

PROCEDURE Get_Qty_Shipped_Per_Part (
   qty_shipped_             OUT NUMBER,
   revenue_                 OUT NUMBER,
   cost_                    OUT NUMBER,
   contract_                IN  VARCHAR2,
   part_no_                 IN  VARCHAR2,
   date_from_               IN  DATE,
   date_until_              IN  DATE,
   include_internal_demand_ IN  VARCHAR2);

PROCEDURE Get_Open_Demand_Per_Part (
   open_demand_qty_         OUT NUMBER,
   revenue_                 OUT NUMBER,
   cost_                    OUT NUMBER,
   contract_                IN  VARCHAR2,
   part_no_                 IN  VARCHAR2,
   date_from_               IN  DATE,
   date_until_              IN  DATE,
   include_internal_demand_ IN  VARCHAR2);

FUNCTION Get_Part_Sales_All_Orders  (
   contract_                IN  VARCHAR2,
   part_no_                 IN  VARCHAR2,
   date_from_               IN  DATE,
   date_until_              IN  DATE,
   include_internal_demand_ IN  VARCHAR2) RETURN NUMBER;

--@PoReadOnly(Get_Line_Demand_Code_Db)
FUNCTION Get_Line_Demand_Code_Db (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

FUNCTION Get_Tot_Charge_Base_Tax_Amount (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Price_List_No)
FUNCTION Get_Price_List_No (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Find_External_Ref_Order)
FUNCTION Find_External_Ref_Order (
   external_ref_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Find_External_Ref_Order)
FUNCTION Find_External_Ref_Order (
   external_ref_ IN VARCHAR2,
   customer_no_  IN VARCHAR2 ) RETURN VARCHAR2;

FUNCTION Get_Delivery_Time (
   order_no_      IN VARCHAR2,
   delivery_date_ IN DATE ) RETURN DATE;

PROCEDURE Check_State (
   order_no_ IN VARCHAR2 );

PROCEDURE New_Order_Line_Added (
   order_no_ IN VARCHAR2 );

--@PoReadOnly(Get_Total_Contribution)
FUNCTION Get_Total_Contribution (
   order_no_ IN VARCHAR2) RETURN NUMBER;

PROCEDURE Set_Project_Id (
   order_no_   IN VARCHAR2,
   project_id_ IN VARCHAR2 );

PROCEDURE Set_Project_Pre_Posting (
   order_no_     IN VARCHAR2,
   codeno_a_     IN VARCHAR2,
   codeno_b_     IN VARCHAR2,
   codeno_c_     IN VARCHAR2,
   codeno_d_     IN VARCHAR2,
   codeno_e_     IN VARCHAR2,
   codeno_f_     IN VARCHAR2,
   codeno_g_     IN VARCHAR2,
   codeno_h_     IN VARCHAR2,
   codeno_i_     IN VARCHAR2,
   codeno_j_     IN VARCHAR2,
   activity_seq_ IN NUMBER );

PROCEDURE Set_Scheduling_Connection (
   order_no_        IN VARCHAR2,
   scheduling_flag_ IN BOOLEAN );

PROCEDURE Modify_Sm_Connection (
   order_no_         IN VARCHAR2,
   sm_connection_db_ IN VARCHAR2 );

PROCEDURE Get_Delivery_Information (
   attr_          IN OUT NOCOPY VARCHAR2,
   language_code_ IN     VARCHAR2,
   agreement_id_  IN     VARCHAR2,
   customer_no_   IN     VARCHAR2,
   address_no_    IN     VARCHAR2 );

--@PoReadOnly(Get_Line_Return_Percentage)
FUNCTION Get_Line_Return_Percentage (
   days_        IN NUMBER,
   catalog_no_  IN VARCHAR2,
   customer_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_No_Of_Orders_Due_For_Part)
FUNCTION Get_No_Of_Orders_Due_For_Part (
   contract_   IN VARCHAR2,
   part_no_    IN VARCHAR2,
   date_from_  IN DATE,
   date_until_ IN DATE ) RETURN NUMBER;

--@PoReadOnly(Uninvoiced_Charges_Exist)
FUNCTION Uninvoiced_Charges_Exist (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

FUNCTION Is_Pre_Posting_Mandatory (
   company_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Finite_State_Decode)
FUNCTION Finite_State_Decode (
   db_state_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Total_Tax_Amount)
FUNCTION Get_Total_Tax_Amount (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

FUNCTION Get_Tax_Amount_Per_Tax_Code (
   order_no_ IN VARCHAR2,
   tax_code_ IN VARCHAR2 ) RETURN NUMBER;

FUNCTION Get_Tax_Per_Tax_Code_Deliv (
   order_no_      IN VARCHAR2,
   tax_code_      IN VARCHAR2, 
   delivery_type_ IN VARCHAR2) RETURN NUMBER;

--@PoReadOnly(Get_Gross_Amount)
FUNCTION Get_Gross_Amount (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

FUNCTION Get_Gross_Amount_Per_Tax_Code (
   order_no_ IN VARCHAR2,
   tax_code_ IN VARCHAR2 ) RETURN NUMBER;

FUNCTION Get_Gross_Per_Tax_Code_Deliv (
   order_no_      IN VARCHAR2,
   tax_code_      IN VARCHAR2,
   delivery_type_ IN VARCHAR2) RETURN NUMBER;

--@PoReadOnly(Get_Ord_Gross_Amount)
FUNCTION Get_Ord_Gross_Amount (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Ord_Total_Tax_Amount)
FUNCTION Get_Ord_Total_Tax_Amount (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Order_Lines_Exist)
FUNCTION Order_Lines_Exist (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Total_Add_Discount_Amount)
FUNCTION Get_Total_Add_Discount_Amount (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

FUNCTION Check_Peggings_Exist (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Check_Exchange_Part_Exist)
FUNCTION Check_Exchange_Part_Exist (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Shipment_Connected_Lines_Exist)
FUNCTION Shipment_Connected_Lines_Exist (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Check_Order_Connected)
FUNCTION Check_Order_Connected (
   order_no_     IN VARCHAR2,
   activity_seq_ IN NUMBER ) RETURN NUMBER;

--@PoReadOnly(Check_Delivered_Sched_Order)
FUNCTION Check_Delivered_Sched_Order (
   order_no_         IN VARCHAR2,
   customer_no_      IN VARCHAR2,
   ship_addr_no_     IN VARCHAR2,
   customer_part_no_ IN VARCHAR2,
   contract_         IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Shipment_Charge_Amount)
PROCEDURE Get_Shipment_Charge_Amount (
   charge_sum_      IN OUT NOCOPY NUMBER,
   base_charge_sum_ IN OUT NOCOPY NUMBER,
   order_no_        IN     VARCHAR2,
   shipment_id_     IN     NUMBER );

--@PoReadOnly(Get_Tot_Charge_Sale_Tax_Amt)
FUNCTION Get_Tot_Charge_Sale_Tax_Amt (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

PROCEDURE Get_Customer_Defaults (
   forwarder_id_         OUT    VARCHAR2,
   wanted_delivery_date_ IN OUT NOCOPY DATE,
   order_id_             IN OUT NOCOPY VARCHAR2,
   route_id_             IN OUT NOCOPY VARCHAR2,
   ship_via_code_        IN OUT NOCOPY VARCHAR2,
   delivery_terms_       IN OUT NOCOPY VARCHAR2,
   del_terms_location_   IN OUT NOCOPY VARCHAR2,
   customer_id_          IN     VARCHAR2,
   contract_             IN     VARCHAR2,
   delivery_address_     IN     VARCHAR2 );

--@PoReadOnly(Is_Order_Exist)
FUNCTION Is_Order_Exist (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

PROCEDURE New_Or_Changed_Charge (
   order_no_ IN VARCHAR2 );

PROCEDURE Set_Cancel_Reason (
   order_no_        IN VARCHAR2,
   cancel_reason_   IN VARCHAR2 );

--@PoReadOnly(Find_Open_Scheduling_Order)
FUNCTION Find_Open_Scheduling_Order (
   customer_pur_order_no_ IN VARCHAR2,
   customer_no_           IN VARCHAR2,
   contract_              IN VARCHAR2,
   ship_addr_no_          IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Blocked_Invoicing_Exist)
FUNCTION Blocked_Invoicing_Exist (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

PROCEDURE Set_Line_Qty_Confirmeddiff (
   order_no_          IN VARCHAR2,
   line_no_           IN VARCHAR2,
   rel_no_            IN VARCHAR2,
   line_item_no_      IN NUMBER,
   qty_confirmeddiff_ IN NUMBER );

--@PoReadOnly(Get_Blocked_Reason_Desc)
FUNCTION Get_Blocked_Reason_Desc (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

PROCEDURE Check_Forecast_Consumpt_Change (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 );

--@PoReadOnly(Consignment_Lines_Exist)
FUNCTION Consignment_Lines_Exist (
   contract_     IN VARCHAR2,
   customer_no_  IN VARCHAR2,
   ship_addr_no_ IN VARCHAR2,
   catalog_no_   IN VARCHAR2 ) RETURN BOOLEAN;

--@PoReadOnly(Get_Gross_Amt_Incl_Charges)
FUNCTION Get_Gross_Amt_Incl_Charges (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

PROCEDURE Handle_Pre_Posting_Change (
   pre_accounting_id_ IN NUMBER );

PROCEDURE Set_Msg_Sequence_And_Version (
   order_no_    IN VARCHAR2,
   sequence_no_ IN NUMBER,
   version_no_  IN NUMBER );

--@PoReadOnly(Get_Adj_Weight_In_Charges)
FUNCTION Get_Adj_Weight_In_Charges (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Adj_Volume_In_Charges)
FUNCTION Get_Adj_Volume_In_Charges (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Pegged_Orders)
FUNCTION Get_Pegged_Orders (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

PROCEDURE Modify_Project_Id (
   order_no_   IN VARCHAR2,
   project_id_ IN VARCHAR2 );

--@PoReadOnly(Get_Promotion_Charges_Count)
FUNCTION Get_Promotion_Charges_Count (order_no_ IN VARCHAR2) RETURN NUMBER;

--@PoReadOnly(Exist_Connected_Charges)
FUNCTION Exist_Connected_Charges (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Non_Ivc_Cancelled_Lines_Exist)
FUNCTION Non_Ivc_Cancelled_Lines_Exist (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

PROCEDURE Update_Freight_Free_On_Lines (
   order_no_ IN VARCHAR2 );

PROCEDURE Check_Config_Revisions (
   unreserved_    OUT NUMBER,
   reserved_      OUT NUMBER,
   order_no_      IN  VARCHAR2,
   delivery_date_ IN DATE);

PROCEDURE Update_Config_Revisions (
   order_no_   IN  VARCHAR2,
   delivery_date_ IN DATE);

--@PoReadOnly(Get_Order_Currency_Rounding)
FUNCTION Get_Order_Currency_Rounding (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

FUNCTION Is_Single_Occ_Addr_Connected (
   order_no_           IN VARCHAR2,
   line_no_            IN VARCHAR2,
   release_no_         IN VARCHAR2,
   line_item_no_       IN NUMBER) RETURN VARCHAR2;

--@PoReadOnly(Is_Customer_Credit_Blocked)
FUNCTION Is_Customer_Credit_Blocked (
   order_no_                   IN VARCHAR2,
   released_from_credit_check_ IN VARCHAR2 DEFAULT NULL) RETURN VARCHAR2;

--@PoReadOnly(Check_Customer_Credit_Blocked)
PROCEDURE Check_Customer_Credit_Blocked (
   credit_block_result_        OUT VARCHAR2,
   attr_                       OUT VARCHAR2,
   order_no_                   IN VARCHAR2,
   released_from_credit_check_ IN VARCHAR2 DEFAULT NULL);

PROCEDURE Copy_Prepostings_To_Lines (
   order_no_ IN VARCHAR2);

PROCEDURE Modify_Line_Purchase_Part_No (
   contract_         IN VARCHAR2,
   catalog_no_       IN VARCHAR2,
   purchase_part_no_ IN VARCHAR2);

PROCEDURE Fetch_Delivery_Attributes (
   route_id_                  IN OUT NOCOPY VARCHAR2,
   delivery_leadtime_         IN OUT NOCOPY NUMBER,
   ext_transport_calendar_id_ OUT    VARCHAR2,
   freight_map_id_            OUT    VARCHAR2,
   zone_id_                   OUT    VARCHAR2,
   picking_leadtime_          IN OUT NOCOPY NUMBER,
   shipment_type_             IN OUT NOCOPY VARCHAR2,
   forward_agent_id_          IN OUT NOCOPY VARCHAR2,
   delivery_terms_            IN OUT NOCOPY VARCHAR2,
   del_terms_location_        IN OUT NOCOPY VARCHAR2,
   order_no_                  IN     VARCHAR2,
   contract_                  IN     VARCHAR2,
   customer_no_               IN     VARCHAR2,
   ship_addr_no_              IN     VARCHAR2,
   addr_flag_db_              IN     VARCHAR2,
   ship_via_code_             IN     VARCHAR2,
   vendor_no_                 IN     VARCHAR2,
   ship_via_code_changed_     IN     VARCHAR2 DEFAULT 'FALSE');

PROCEDURE Fetch_Default_Delivery_Info (
   forward_agent_id_          IN OUT NOCOPY VARCHAR2,
   route_id_                  IN OUT NOCOPY VARCHAR2,
   freight_map_id_            IN OUT NOCOPY VARCHAR2,
   zone_id_                   IN OUT NOCOPY VARCHAR2,
   delivery_leadtime_         IN OUT NOCOPY NUMBER,
   ext_transport_calendar_id_ IN OUT NOCOPY VARCHAR2,
   picking_leadtime_          IN OUT NOCOPY NUMBER,
   shipment_type_             IN OUT NOCOPY VARCHAR2,
   ship_via_code_             IN OUT NOCOPY VARCHAR2,
   delivery_terms_            IN OUT NOCOPY VARCHAR2,
   del_terms_location_        IN OUT NOCOPY VARCHAR2,
   order_no_                  IN     VARCHAR2,
   contract_                  IN     VARCHAR2,
   customer_no_               IN     VARCHAR2,
   ship_addr_no_              IN     VARCHAR2,
   addr_flag_db_              IN     VARCHAR2,
   agreement_id_              IN     VARCHAR2,
   vendor_no_                 IN     VARCHAR2,
   ship_addr_no_changed_      IN     VARCHAR2 DEFAULT 'FALSE');

--@PoReadOnly(All_Lines_Cancelled)
FUNCTION All_Lines_Cancelled (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Check_No_Default_Info_Lines)
FUNCTION Check_No_Default_Info_Lines (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Valid_Ownership_Del_Line_Exist)
FUNCTION Valid_Ownership_Del_Line_Exist (
   order_no_ IN VARCHAR2 ) RETURN BOOLEAN;

--@PoReadOnly(Check_Order_Exist_For_Customer)
FUNCTION Check_Order_Exist_For_Customer (
   contract_     IN VARCHAR2,
   customer_no_  IN VARCHAR2 ) RETURN BOOLEAN;

PROCEDURE Check_Ipd_Tax_Registration (
   order_no_              IN VARCHAR2,
   use_default_addr_flag_ IN VARCHAR2 );

--@PoReadOnly(Internal_Co_Exists)
FUNCTION Internal_Co_Exists (
   customer_no_    IN VARCHAR2,
   customer_po_no_ IN VARCHAR2 ) RETURN NUMBER;

PROCEDURE Check_Rel_Mtrl_Planning(
   order_no_               IN VARCHAR2,
   create_connected_order_ IN VARCHAR2 );

PROCEDURE Uncheck_Rel_Mtrl_Planning(
   order_no_         IN VARCHAR2,
   blocked_reason_   IN VARCHAR2 );

--@PoReadOnly(Is_Expctr_Connected)
FUNCTION Is_Expctr_Connected(
   order_no_ IN VARCHAR2) RETURN VARCHAR2;

--@PoReadOnly(Rental_Lines_Exist)
FUNCTION Rental_Lines_Exist(
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Customer_Po_No)
FUNCTION Get_Customer_Po_No (
   customer_po_no_ IN VARCHAR2,
   customer_no_    IN VARCHAR2,
   order_no_       IN VARCHAR2 DEFAULT NULL ) RETURN NUMBER;

--@PoReadOnly(Get_Bo_Connected_Order_No)
FUNCTION Get_Bo_Connected_Order_No (
   business_opportunity_no_ IN VARCHAR2 ) RETURN VARCHAR2;

PROCEDURE New_Rental_Replacement_Order (
   new_order_no_      OUT VARCHAR2, 
   old_order_no_      IN  VARCHAR2,
   old_line_no_       IN  VARCHAR2,
   old_rel_no_        IN  VARCHAR2,
   old_line_item_no_  IN  NUMBER,
   new_buy_qty_due_   IN  NUMBER,
   rental_attr_       IN  VARCHAR2 );

PROCEDURE Set_Rent_Line_Completed (
   order_no_     IN VARCHAR2,
   line_no_      IN VARCHAR2,
   rel_no_       IN VARCHAR2,
   line_item_no_ IN NUMBER );

PROCEDURE Set_Rent_Line_Reopened (
   order_no_     IN VARCHAR2,
   line_no_      IN VARCHAR2,
   rel_no_       IN VARCHAR2,
   line_item_no_ IN NUMBER );

PROCEDURE Set_Line_Uninvoiced (
   order_no_     IN VARCHAR2,
   line_no_      IN VARCHAR2,
   rel_no_       IN VARCHAR2,
   line_item_no_ IN NUMBER,
   qty_invoiced_ IN NUMBER );

PROCEDURE Undo_Line_Delivery (
   order_no_     IN VARCHAR2,
   line_no_      IN VARCHAR2,
   rel_no_       IN VARCHAR2,
   line_item_no_ IN NUMBER,
   deliv_no_     IN NUMBER);

--@PoReadOnly(Exists_Freight_Info_Lines)
FUNCTION Exists_Freight_Info_Lines (
   order_no_ IN VARCHAR2 ) RETURN BOOLEAN;

--@PoReadOnly(Has_Non_Def_Info_Lines)
FUNCTION Has_Non_Def_Info_Lines (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Has_Invoiced_Lines)
FUNCTION Has_Invoiced_Lines (
   order_no_ IN VARCHAR2 ) RETURN BOOLEAN;

--@PoReadOnly(Exists_One_Tax_Code_Per_Line)
FUNCTION Exists_One_Tax_Code_Per_Line(
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

PROCEDURE All_Lines_Expctr(
   all_lines_expctr_ OUT VARCHAR2,
   connected_        OUT VARCHAR2,
   order_no_         IN VARCHAR2 );

--@PoReadOnly(Get_Tax_Liability_Type_Db)
FUNCTION Get_Tax_Liability_Type_Db (
   order_no_     IN VARCHAR2 ) RETURN VARCHAR2;

FUNCTION Has_Demand_Code_Lines (
   order_no_    IN VARCHAR2,
   demand_code_ IN VARCHAR2) RETURN VARCHAR2;

--@PoReadOnly(Get_Tax_Liability_Country_Db)
FUNCTION Get_Tax_Liability_Country_Db(
   order_no_                 IN VARCHAR2,
   delivery_country_db_      IN VARCHAR2,
   tax_liability_            IN VARCHAR2) RETURN VARCHAR2;

FUNCTION Check_Diff_Delivery_Info (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

PROCEDURE Modify_Main_Representative(
   order_no_ IN VARCHAR2,
   rep_id_       IN VARCHAR2,
   remove_main_  IN VARCHAR2 DEFAULT Fnd_Boolean_API.DB_FALSE );

PROCEDURE Check_Edit_Allowed(
   order_no_ IN VARCHAR2 );

PROCEDURE Create_Data_Capture_Lov (
   contract_                   IN VARCHAR2,
   order_no_                   IN VARCHAR2,
   customer_no_                IN VARCHAR2,
   priority_                   IN NUMBER,
   forward_agent_id_           IN VARCHAR2,
   route_id_                   IN VARCHAR2,
   wanted_delivery_date_       IN DATE,
   order_type_                 IN VARCHAR2,
   coordinator_                IN VARCHAR2,
   capture_session_id_         IN NUMBER,
   column_name_                IN VARCHAR2,
   lov_type_db_                IN VARCHAR2,
   sql_where_expression_       IN VARCHAR2 DEFAULT NULL );

FUNCTION Get_Column_Value_If_Unique (
   contract_               IN VARCHAR2,
   order_no_               IN VARCHAR2,
   customer_no_            IN VARCHAR2,
   priority_               IN NUMBER,
   forward_agent_id_       IN VARCHAR2,
   route_id_               IN VARCHAR2,
   wanted_delivery_date_   IN DATE,
   order_type_             IN VARCHAR2,
   coordinator_            IN VARCHAR2,
   column_name_            IN VARCHAR2,
   sql_where_expression_   IN VARCHAR2 DEFAULT NULL  ) RETURN VARCHAR2;

PROCEDURE Record_With_Column_Value_Exist (
   contract_               IN VARCHAR2,
   order_no_               IN VARCHAR2,
   customer_no_            IN VARCHAR2,
   priority_               IN NUMBER,
   forward_agent_id_       IN VARCHAR2,
   route_id_               IN VARCHAR2,
   wanted_delivery_date_   IN DATE,
   order_type_             IN VARCHAR2,
   coordinator_            IN VARCHAR2,
   column_name_            IN VARCHAR2,
   column_value_           IN VARCHAR2,
   column_description_     IN VARCHAR2,
   date_type_handling_     IN BOOLEAN DEFAULT FALSE,
   sql_where_expression_   IN VARCHAR2 DEFAULT NULL  );

PROCEDURE Refresh_Tax_On_Co_Release (
   order_no_     IN VARCHAR2);

PROCEDURE Order_Lines_Available_To_Copy (
   lines_available_          OUT VARCHAR2,
   order_no_             IN  VARCHAR2,
   order_lines_          IN  VARCHAR2,
   rental_order_lines_   IN  VARCHAR2);

--@PoReadOnly(Get_Default_Order_Type)
FUNCTION Get_Default_Order_Type (
   contract_     IN VARCHAR2,
   customer_no_  IN VARCHAR2  ) RETURN VARCHAR2;

FUNCTION  Calculate_Totals (
   order_no_   IN  VARCHAR2) RETURN Calculated_Totals_Arr PIPELINED;

PROCEDURE Modify_Tax_Id_Validated_Date (
   order_no_          IN VARCHAR2);

PROCEDURE Fetch_External_Tax (
   order_no_          IN VARCHAR2,
   address_changed_   IN VARCHAR2 DEFAULT 'FALSE',
   include_charges_   IN VARCHAR2 DEFAULT 'TRUE' );

FUNCTION Get_Discounted_Price_Rounded (
   order_no_     IN VARCHAR2 ) RETURN BOOLEAN;

PROCEDURE Check_Delivery_Type(
   same_delivery_type_     OUT   VARCHAR2,
   delivery_type_          OUT   VARCHAR2,
   order_no_               IN    VARCHAR2,
   with_charges_           IN    VARCHAR2);

--@PoReadOnly(Get_Tax_Id_Type)
FUNCTION Get_Tax_Id_Type (
   order_no_   IN VARCHAR2) RETURN VARCHAR2;

-----------------------------------------------------------------------------
-------------------- FINITE STATE MACHINE -----------------------------------
-----------------------------------------------------------------------------
-- Finite_State_Init_
--   Runs the initial start event for a basedOn child entity.
--
-- Finite_State_Decode__
--   Returns the client equivalent for any database representation of
--   a state name = objstate.
--
-- Finite_State_Encode__
--   Returns the database equivalent for any client representation of
--   a state name = state.
--
-- Enumerate_States__
--   Returns a list of all possible finite states in client terminology.
--
-- Enumerate_States_Db__
--   Returns a list of all possible finite states in database terminology.
--
-- Finite_State_Events__
--   Returns a list of allowed events for a given state
--   NOTE! Regardless of conditions if not otherwize encoded
--
-- Enumerate_Events__
--   Returns a list of all possible events.
--
-- New_Or_Changed_Charge__
--   Executes the NewOrChangedCharge event logic as defined in the state machine.
--
-- New_Order_Line_Added__
--   Executes the NewOrderLineAdded event logic as defined in the state machine.
--
-- Set_Blocked__
--   Executes the SetBlocked event logic as defined in the state machine.
--
-- Set_Cancelled__
--   Executes the SetCancelled event logic as defined in the state machine.
--
-- Set_Line_Cancelled__
--   Executes the SetLineCancelled event logic as defined in the state machine.
--
-- Set_Line_Qty_Assigned__
--   Executes the SetLineQtyAssigned event logic as defined in the state machine.
--
-- Set_Line_Qty_Confirmeddiff__
--   Executes the SetLineQtyConfirmeddiff event logic as defined in the state machine.
--
-- Set_Line_Qty_Invoiced__
--   Executes the SetLineQtyInvoiced event logic as defined in the state machine.
--
-- Set_Line_Qty_Picked__
--   Executes the SetLineQtyPicked event logic as defined in the state machine.
--
-- Set_Line_Qty_Shipdiff__
--   Executes the SetLineQtyShipdiff event logic as defined in the state machine.
--
-- Set_Line_Qty_Shipped__
--   Executes the SetLineQtyShipped event logic as defined in the state machine.
--
-- Set_Line_Uninvoiced__
--   Executes the SetLineUninvoiced event logic as defined in the state machine.
--
-- Set_Rent_Line_Completed__
--   Executes the SetRentLineCompleted event logic as defined in the state machine.
--
-- Set_Rent_Line_Reopened__
--   Executes the SetRentLineReopened event logic as defined in the state machine.
--
-- Undo_Line_Delivery__
--   Executes the UndoLineDelivery event logic as defined in the state machine.
-----------------------------------------------------------------------------

PROCEDURE Finite_State_Init_ (
   rec_  IN OUT NOCOPY customer_order_tab%ROWTYPE,
   attr_ IN OUT NOCOPY VARCHAR2 );

--@PoReadOnly(Finite_State_Decode__)
FUNCTION Finite_State_Decode__ (
   db_state_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Finite_State_Encode__)
FUNCTION Finite_State_Encode__ (
   client_state_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Enumerate_States__)
PROCEDURE Enumerate_States__ (
   client_values_ OUT VARCHAR2 );

--@PoReadOnly(Enumerate_States_Db__)
PROCEDURE Enumerate_States_Db__ (
   db_values_ OUT VARCHAR2 );

--@PoReadOnly(Finite_State_Events__)
FUNCTION Finite_State_Events__ (
   db_state_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Enumerate_Events__)
PROCEDURE Enumerate_Events__ (
   db_events_ OUT VARCHAR2 );

PROCEDURE New_Or_Changed_Charge__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE New_Order_Line_Added__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Set_Blocked__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Set_Cancelled__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Set_Line_Cancelled__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Set_Line_Qty_Assigned__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Set_Line_Qty_Confirmeddiff__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Set_Line_Qty_Invoiced__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Set_Line_Qty_Picked__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Set_Line_Qty_Shipdiff__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Set_Line_Qty_Shipped__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Set_Line_Uninvoiced__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Set_Rent_Line_Completed__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Set_Rent_Line_Reopened__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Undo_Line_Delivery__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

-----------------------------------------------------------------------------
-------------------- LU SPECIFIC PRIVATE METHODS ----------------------------
-----------------------------------------------------------------------------
-- Release_Blocked__
--   Executes the ReleaseBlocked event logic as defined in the state machine.
--
-- Set_Released__
--   Executes the SetReleased event logic as defined in the state machine.
--
-- Calculate_Order_Discount__
--
-- Get_Total_Sale_Price__
--   Retrieve the total sale price for the specified order.
--
-- Get_Tot_Sale_Price_Incl_Tax__
--
-- Set_Order_Conf__
--   Sets the order_conf flag for an order in order to indicate that the
--   order confirmation has been printed.
--
-- Get_Total_Qty__
--   Retrieve the total line_total_qty for the specified order. Changes to this should apply to Get_Ord_Line_ToTals__ as well.
--
-- Get_Total_Weight__
--   Retrieve the total weight for the specified order. Changes to this should apply to Get_Ord_Line_ToTals__ as well.
--
-- Check_Payment_Term__
--   Checks if the payment_term exists. If found, print an error message.
--   Used for restricted delete check when removing an payment_term (ACCRUL-module).
--
-- Get_Tot_Sale_Price_Excl_Item__
--   Retrieve the total sale price for the specified order excluding, Charged Item and Exchange Item cost.
--   Retrieve the total tax amount for the specified order excluding, Charged Item and Exchange Item cost.
--
-- Get_Ord_Tax_Amt_Excl_Item__
--
-- Lock_By_Keys__
--   Calls the function Lock_By_Keys___.
--   Server support to lock a specific instance of the logical uni
--
-- Exist_Charges__
--   Returns whether or not charges are used on an order.
--
-- Get_Total_Base_Charge__
--   Get the total charge amount on the order in base currency.
--
-- Get_Total_Sale_Charge__
--   Get the total charge amount on the order in order currency.
--
-- Get_Total_Sale_Charge_Gross__
--   Get the total charge amount including tax on the order in order currency.
--
-- Get_Customer_Defaults__
--   Called on validation of customer_no in custord.apt customer order client
--
-- Is_Sm2001_Installed__
--   This method is used by client to check that we are not working against
--   an old version av Service Management.
--   According to the Rose documentation this used to exclude a RMB to Service
--   Management on CO head and CO line, if it is an older version than 2001.
--
-- Modify_Wanted_Delivery_Date__
--   Modifies the attributes wanted_delivery_date and planned_delivery_date
--   for all order lines on the order.
--
-- Is_Any_Line_Proj_Conn_Exist__
--   Determines whether there exist project connections in any of the order lines.
--
-- Crdt_Chck_Valid_Lines_Exist__
--   This method is used to check whether order lines exist not in 'Cancelled', 'Invoiced', 'Delivered', 'PartiallyDelivered' states.
--   For Odata session extended this method to check for Charge lines also.
--
-- Log_Manual_Credit_Check_Hist__
--   This method is used to log the history whether the user done a credit check manually.
--
-- Self_Billing_Lines_Exist__
--   This method returns true (1) if there exists at least one CO line for
--   the given order number that is SELF BILLING and not in state cancelled
--   or invoiced, and false (0) otherwise.
--
-- Modify_Release_From_Credit__
--   Update field released_from_credit_check in customer order record.
--
-- Valid_Project_Customer__
--   Returns "TRUE" if passed customer and the project customer are same;
--   "FALSE" otherwise.
--
-- Created_From_Int_Po__
--   Checks if passed in CO contains at least one line with demand_code = IPT, IPD
--   or IPT_RO and if so, returns 'TRUE', otherwise, returns 'FALSE'
--
-- Get_Total_Gross_Weight__
--
-- Check_Address_Replication__
--
-- Get_Freight_Charges_Count__
--   If there are freight charges connected to the order this will return count
--
-- Set_Earliest_Delivery_Date__
--   Set all the Delivery Dates of customer order lines to the latest of all
--
-- Get_Ord_Line_Totals__
--   Retrieve the totals of the order in an attr string. Intend is to minimize the access to the line level from client.
--
-- Check_Ipd_Ipt_Exist__
--   Determines if Order Change message is to be sent and if supply_code = IPD or IPT exist
--   for a particular customer order.
--
-- Check_Line_Peggings__
--   Determines if Order Change message is to be sent and if peggings exist
--   for a particular customer order.
--
-- Add_Lines_From_Template__
--   Takes in bulk of customer order lines sent from CO template,
--   unpacks each line and create new records.
--
-- Copy_Customer_Order__
--
-- Build_Attr_For_New__
-----------------------------------------------------------------------------

PROCEDURE Release_Blocked__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Set_Released__ (
   info_       OUT    VARCHAR2,
   objid_      IN     VARCHAR2,
   objversion_ IN OUT NOCOPY VARCHAR2,
   attr_       IN OUT NOCOPY VARCHAR2,
   action_     IN     VARCHAR2 );

PROCEDURE Calculate_Order_Discount__ (
   order_no_     IN VARCHAR2,
   line_no_      IN VARCHAR2 DEFAULT NULL,
   rel_no_       IN VARCHAR2 DEFAULT NULL,
   line_item_no_ IN NUMBER   DEFAULT NULL);

--@PoReadOnly(Get_Total_Sale_Price__)
FUNCTION Get_Total_Sale_Price__ (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Tot_Sale_Price_Incl_Tax__)
FUNCTION Get_Tot_Sale_Price_Incl_Tax__ (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

PROCEDURE Set_Order_Conf__ (
   order_no_ IN VARCHAR2 );

--@PoReadOnly(Get_Total_Qty__)
FUNCTION Get_Total_Qty__ (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Total_Weight__)
FUNCTION Get_Total_Weight__ (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

PROCEDURE Check_Payment_Term__ (
   key_list_ IN VARCHAR2 );

--@PoReadOnly(Get_Tot_Sale_Price_Excl_Item__)
FUNCTION Get_Tot_Sale_Price_Excl_Item__ (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Ord_Tax_Amt_Excl_Item__)
FUNCTION Get_Ord_Tax_Amt_Excl_Item__ (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

PROCEDURE Lock_By_Keys__ (
   order_no_ IN VARCHAR2 );

--@PoReadOnly(Exist_Charges__)
FUNCTION Exist_Charges__ (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Total_Base_Charge__)
FUNCTION Get_Total_Base_Charge__ (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Total_Sale_Charge__)
FUNCTION Get_Total_Sale_Charge__ (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Get_Total_Sale_Charge_Gross__)
FUNCTION Get_Total_Sale_Charge_Gross__ (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

PROCEDURE Get_Customer_Defaults__ (
   attr_           IN OUT NOCOPY VARCHAR2,
   all_attributes_ IN     VARCHAR2 DEFAULT 'TRUE' );

--@PoReadOnly(Is_Sm2001_Installed__)
FUNCTION Is_Sm2001_Installed__ (
   dummy_ IN NUMBER ) RETURN NUMBER;

PROCEDURE Modify_Wanted_Delivery_Date__ (
   order_no_                  IN VARCHAR2,
   wanted_delivery_date_      IN DATE,
   planned_delivery_date_     IN DATE,
   replicate_changes_         IN VARCHAR2,
   change_request_            IN VARCHAR2,
   dop_changed_               IN VARCHAR2,
   price_effec_date_changed_  IN VARCHAR2,
   disconnect_exp_license_    IN VARCHAR2,
   changed_attrib_not_in_pol_ IN VARCHAR2);

--@PoReadOnly(Is_Any_Line_Proj_Conn_Exist__)
FUNCTION Is_Any_Line_Proj_Conn_Exist__ (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Crdt_Chck_Valid_Lines_Exist__)
FUNCTION Crdt_Chck_Valid_Lines_Exist__ (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

PROCEDURE Log_Manual_Credit_Check_Hist__ (
   order_no_   IN VARCHAR2,
   log_reason_ IN VARCHAR2 );

--@PoReadOnly(Self_Billing_Lines_Exist__)
FUNCTION Self_Billing_Lines_Exist__ (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

PROCEDURE Modify_Release_From_Credit__ (
   order_no_                   IN VARCHAR2,
   released_from_credit_check_ IN VARCHAR2 );

--@PoReadOnly(Valid_Project_Customer__)
FUNCTION Valid_Project_Customer__ (
   customer_no_ IN VARCHAR2,
   project_id_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Created_From_Int_Po__)
FUNCTION Created_From_Int_Po__ (
   order_no_  IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Total_Gross_Weight__)
FUNCTION Get_Total_Gross_Weight__ (
   order_no_ IN VARCHAR2 ) RETURN NUMBER;

--@PoReadOnly(Check_Address_Replication__)
FUNCTION Check_Address_Replication__ (
   order_no_ IN VARCHAR2 ) RETURN VARCHAR2;

--@PoReadOnly(Get_Freight_Charges_Count__)
FUNCTION Get_Freight_Charges_Count__ (order_no_ IN VARCHAR2) RETURN NUMBER;

PROCEDURE Set_Earliest_Delivery_Date__ (
   order_no_ IN VARCHAR2 );

--@PoReadOnly(Get_Ord_Line_Totals__)
PROCEDURE Get_Ord_Line_Totals__ (
   total_base_price_    OUT NUMBER,
   total_sale_price_    OUT NUMBER,
   total_weight_        OUT NUMBER,
   total_quantity_      OUT NUMBER,
   total_cost_          OUT NUMBER,
   total_contribution_  OUT NUMBER,
   total_tax_amount_    OUT NUMBER,
   total_gross_amount_  OUT NUMBER,
   total_add_disc_amt_  OUT NUMBER,
   order_no_            IN  VARCHAR2 );

PROCEDURE Check_Ipd_Ipt_Exist__ (
   info_                 OUT VARCHAR2,
   ipd_exist_            OUT VARCHAR2,
   ipt_exist_            OUT VARCHAR2,
   only_ipt_exist_       OUT VARCHAR2,
   send_change_          OUT VARCHAR2,
   replicate_label_note_ OUT VARCHAR2,
   order_no_             IN  VARCHAR2,
   label_note_changed_   IN  VARCHAR2 );

PROCEDURE Check_Line_Peggings__ (
   send_change_   OUT VARCHAR2,
   pegging_exist_ OUT VARCHAR2,
   order_no_      IN  VARCHAR2);

PROCEDURE Add_Lines_From_Template__ (
   info_ OUT    VARCHAR2,
   attr_ IN OUT NOCOPY VARCHAR2);

PROCEDURE Copy_Customer_Order__ (
   to_order_no_               IN OUT NOCOPY VARCHAR2,
   from_order_no_             IN     VARCHAR2, 
   customer_no_               IN     VARCHAR2,
   order_id_                  IN     VARCHAR2,
   currency_code_             IN     VARCHAR2,
   contract_                  IN     VARCHAR2,
   wanted_delivery_date_      IN     DATE,
   copy_order_lines_          IN     VARCHAR2,
   copy_rental_order_lines_   IN     VARCHAR2,
   copy_charges_              IN     VARCHAR2,
   copy_order_adresses_       IN     VARCHAR2,
   copy_delivery_info_        IN     VARCHAR2,
   copy_misc_order_info_      IN     VARCHAR2,   
   copy_document_info_        IN     VARCHAR2, 
   copy_tax_detail_           IN     VARCHAR2,
   copy_pricing_              IN     VARCHAR2,
   copy_document_texts_       IN     VARCHAR2,
   copy_notes_                IN     VARCHAR2,   
   copy_representatives_      IN     VARCHAR2,
   copy_contacts_             IN     VARCHAR2,
   copy_pre_accounting_       IN     VARCHAR2);

PROCEDURE Build_Attr_For_New__ (
   attr_ IN OUT NOCOPY VARCHAR2 );

-----------------------------------------------------------------------------
-------------------- FOUNDATION1 METHODS ------------------------------------
-----------------------------------------------------------------------------
-- Language_Refreshed
--   Framework method that updates translations to a new language.
--
-- Init
--   Framework method that initializes this package.
-----------------------------------------------------------------------------

--@PoReadOnly(Language_Refreshed)
PROCEDURE Language_Refreshed;

--@PoReadOnly(Init)
PROCEDURE Init;

END Customer_Order_API;
-- [END IFS COMPLETE BLOCK]
/
SHOW ERROR


