-----------------------------------------------------------------------------
--
--  Logical unit: CustomerOrder
--  Component:    ORDER
--
--  Template:     3.0
--  Built by:     IFS Developer Studio (unit-test)
--
--  NOTE! Do not edit!! This file is completely generated and will be
--        overwritten next time the corresponding model is saved.
-----------------------------------------------------------------------------


layer Base;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

COLUMN Order_No IS
   Flags      = 'K-I-L'
   Datatype   = 'STRING(12)/UPPERCASE'
   Prompt     = 'Order No';
COLUMN Authorize_Code IS
   Flags      = 'AMIUL'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Authorize Code'
   Ref        = 'OrderCoordinator';
COLUMN Bill_Addr_No IS
   Flags      = 'A-IUL'
   Datatype   = 'STRING(50)'
   Prompt     = 'Bill Addr No'
   Ref        = 'CustomerInfoAddress(customer_no)';
COLUMN Contract IS
   Flags      = 'AMI-L'
   Datatype   = 'STRING(5)/UPPERCASE'
   Prompt     = 'Site'
   Ref        = 'Site';
COLUMN Company IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Company'
   Column     = 'Site_API.Get_Company(contract)';
COLUMN Country_Code IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(2)/UPPERCASE'
   Prompt     = 'Country Code'
   Ref        = 'IsoCountry';
COLUMN Currency_Code IS
   Flags      = 'AMI--'
   Datatype   = 'STRING(3)/UPPERCASE'
   Prompt     = 'Currency Code'
   Ref        = 'IsoCurrency';
COLUMN Customer_No IS
   Flags      = 'AMI-L'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Customer No'
   Ref        = 'CustOrdCustomer';
COLUMN Customer_No_Pay IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Customer No Pay'
   Ref        = 'CustOrdCustomer';
COLUMN Customer_No_Pay_Addr_No IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(50)'
   Prompt     = 'Customer No Pay Addr No'
   Ref        = 'CustomerInfoAddress(customer_no_pay)';
COLUMN Customer_No_Pay_Ref IS
   Flags      = 'A-IUL'
   Datatype   = 'STRING(30)'
   Prompt     = 'Customer No Pay Reference'
   Column     = 'CUSTOMER_NO_PAY_REF';
COLUMN Delivery_Terms IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(5)/UPPERCASE'
   Prompt     = 'Delivery Terms'
   Ref        = 'OrderDeliveryTerm';
COLUMN District_Code IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(10)/UPPERCASE'
   Prompt     = 'District Code'
   Ref        = 'SalesDistrict';
COLUMN Language_Code IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(2)'
   Prompt     = 'Language Code'
   Ref        = 'ApplicationLanguage';
COLUMN Market_Code IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(10)/UPPERCASE'
   Prompt     = 'Market Code'
   Ref        = 'SalesMarket';
COLUMN Note_Id IS
   Flags      = 'A-I--'
   Datatype   = 'NUMBER'
   Prompt     = 'Note ID';
COLUMN Order_Code IS
   Flags      = 'AMI--'
   Datatype   = 'STRING(3)/UPPERCASE'
   Prompt     = 'Order Code'
   Ref        = 'CustomerOrderCode';
COLUMN Order_Id IS
   Flags      = 'AMI--'
   Datatype   = 'STRING(3)/UPPERCASE'
   Prompt     = 'Order Type'
   Ref        = 'CustOrderType';
COLUMN Pay_Term_Id IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Payment Terms'
   Ref        = 'PaymentTerm(company)/CUSTOM=(Check_Payment_Term__,)';
COLUMN Pre_Accounting_Id IS
   Flags      = 'A-I--'
   Datatype   = 'NUMBER'
   Prompt     = 'Pre Accounting ID';
COLUMN Print_Control_Code IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(10)/UPPERCASE'
   Prompt     = 'Print Control Code'
   Ref        = 'CustOrdPrintControl';
COLUMN Region_Code IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(10)/UPPERCASE'
   Prompt     = 'Region Code'
   Ref        = 'SalesRegion';
COLUMN Salesman_Code IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Salesperson Code'
   Ref        = 'SalesPartSalesman';
COLUMN Ship_Addr_No IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(50)'
   Prompt     = 'Ship Addr No'
   Ref        = 'CustOrdCustomerAddress(customer_no)';
COLUMN Ship_Via_Code IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(3)/UPPERCASE'
   Prompt     = 'Ship Via Code'
   Ref        = 'MpccomShipVia';
COLUMN Addr_Flag IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'GenYesNo'
   Prompt     = 'Addr Flag';
COLUMN Addr_Flag_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(1)'
   Prompt     = 'Addr Flag';
COLUMN Grp_Disc_Calc_Flag IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'GenYesNo'
   Prompt     = 'Grp Disc Calc Flag';
COLUMN Grp_Disc_Calc_Flag_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(1)'
   Prompt     = 'Grp Disc Calc Flag';
COLUMN Customer_Po_No IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(50)'
   Prompt     = 'Customer PO No';
COLUMN Cust_Ref IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(100)'
   Prompt     = 'Cust ref';
COLUMN Date_Entered IS
   Flags      = 'A-I--'
   Datatype   = 'DATE/DATETIME'
   Prompt     = 'Date Entered';
COLUMN Delivery_Leadtime IS
   Flags      = 'AMIU-'
   Datatype   = 'NUMBER(3)'
   Prompt     = 'External Transport Lead Time';
COLUMN Label_Note IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(50)'
   Prompt     = 'Label Note';
COLUMN Note_Text IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(2000)'
   Prompt     = 'Note';
COLUMN Order_Conf IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'OrderConfirmationPrinted'
   Prompt     = 'Order Conf';
COLUMN Order_Conf_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(1)'
   Prompt     = 'Order Conf';
COLUMN Order_Conf_Flag IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'PrintOrderConfirmation'
   Prompt     = 'Order Conf Flag';
COLUMN Order_Conf_Flag_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(1)'
   Prompt     = 'Order Conf Flag';
COLUMN Pack_List_Flag IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'PrintPackList'
   Prompt     = 'Pack List Flag';
COLUMN Pack_List_Flag_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(1)'
   Prompt     = 'Pack List Flag';
COLUMN Pick_List_Flag IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'PrintPickList'
   Prompt     = 'Pick List';
COLUMN Pick_List_Flag_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(1)'
   Prompt     = 'Pick List';
COLUMN Tax_Liability IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Tax Liability';
COLUMN Delivery_Country_Code IS
   Flags      = 'A----'
   Datatype   = 'STRING(2)/UPPERCASE'
   Prompt     = 'Delivery Country Code'
   Column     = 'Customer_Order_Address_API.Get_Country_Code(order_no)'
   Ref        = 'TaxLiability(tax_liability)';
COLUMN Wanted_Delivery_Date IS
   Flags      = 'AMIU-'
   Datatype   = 'DATE/DATETIME'
   Prompt     = 'Wanted Delivery Date';
COLUMN Internal_Po_No IS
   Flags      = 'A-I--'
   Datatype   = 'STRING(12)/UPPERCASE'
   Prompt     = 'Internal PO No';
COLUMN Route_Id IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(12)'
   Prompt     = 'Route ID'
   Ref        = 'DeliveryRoute';
COLUMN Agreement_Id IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(10)/UPPERCASE'
   Prompt     = 'Agreement ID'
   Ref        = 'CustomerAgreement';
COLUMN Forward_Agent_Id IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Forward Agent ID'
   Ref        = 'ForwarderInfo';
COLUMN Internal_Delivery_Type IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'OrderDeliveryType'
   Prompt     = 'Internal Delivery Type';
COLUMN Internal_Delivery_Type_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(10)'
   Prompt     = 'Internal Delivery Type';
COLUMN External_Ref IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(25)'
   Prompt     = 'External Ref';
COLUMN Project_Id IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(10)/UPPERCASE'
   Prompt     = 'Project id'
   Ref        = 'Project';
COLUMN Staged_Billing IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'StagedBillingType'
   Prompt     = 'Staged Billing';
COLUMN Staged_Billing_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Staged Billing';
COLUMN Sm_Connection IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'ServiceManagementConnect'
   Prompt     = 'SM Connection';
COLUMN Sm_Connection_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'SM Connection';
COLUMN Scheduling_Connection IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'ScheduleAgreementOrder'
   Prompt     = 'Scheduling Connection';
COLUMN Scheduling_Connection_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Scheduling Connection';
COLUMN Priority IS
   Flags      = 'A-IUL'
   Datatype   = 'NUMBER'
   Prompt     = 'Priority';
COLUMN Intrastat_Exempt IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'IntrastatExempt'
   Prompt     = 'Intrastat Exempt';
COLUMN Intrastat_Exempt_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Intrastat Exempt';
COLUMN Additional_Discount IS
   Flags      = 'A-IU-'
   Datatype   = 'NUMBER'
   Prompt     = 'Additional Discount';
COLUMN Pay_Term_Base_Date IS
   Flags      = 'A-IU-'
   Datatype   = 'DATE/DATE'
   Prompt     = 'Pay Term Base Date';
COLUMN Summarized_Source_Lines IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'GenYesNo'
   Prompt     = 'Summarized Source Lines';
COLUMN Summarized_Source_Lines_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Summarized Source Lines';
COLUMN Case_Id IS
   Flags      = 'A-IU-'
   Datatype   = 'NUMBER'
   Prompt     = 'Case Id';
COLUMN Task_Id IS
   Flags      = 'A-IU-'
   Datatype   = 'NUMBER'
   Prompt     = 'ID'
   Ref        = 'CcCaseTask(case_id)';
COLUMN Confirm_Deliveries IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'FndBoolean'
   Prompt     = 'Confirm Deliveries';
COLUMN Confirm_Deliveries_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Confirm Deliveries';
COLUMN Check_Sales_Grp_Deliv_Conf IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'FndBoolean'
   Prompt     = 'Check Sales Group Setting';
COLUMN Check_Sales_Grp_Deliv_Conf_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Check Sales Group Setting';
COLUMN Delay_Cogs_To_Deliv_Conf IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'FndBoolean'
   Prompt     = 'Delay Cost of Sold Goods to Delivery Confirmation';
COLUMN Delay_Cogs_To_Deliv_Conf_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Delay Cost of Sold Goods to Delivery Confirmation';
COLUMN Cancel_Reason IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(10)/UPPERCASE'
   Prompt     = 'Cancellation Reason'
   Ref        = 'OrderCancelReason';
COLUMN Jinsui_Invoice IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'FndBoolean'
   Prompt     = 'Jinsui Invoice';
COLUMN Jinsui_Invoice_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Jinsui Invoice';
COLUMN Blocked_Reason IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(100)/UPPERCASE'
   Prompt     = 'Blocked Reason'
   Ref        = 'BlockReasons';
COLUMN Blocked_From_State IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(20)'
   Prompt     = 'Blocked From State';
COLUMN Sales_Contract_No IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(15)'
   Prompt     = 'Sales Contract No';
COLUMN Contract_Rev_Seq IS
   Flags      = 'A-IU-'
   Datatype   = 'NUMBER'
   Prompt     = 'Contract Rev Seq';
COLUMN Contract_Line_No IS
   Flags      = 'A-IU-'
   Datatype   = 'NUMBER'
   Prompt     = 'Contract Line No';
COLUMN Contract_Item_No IS
   Flags      = 'A-IU-'
   Datatype   = 'NUMBER'
   Prompt     = 'Contract Item No'
   Ref        = 'ContractItem(sales_contract_no,contract_rev_seq,contract_line_no)';
COLUMN Default_Charges IS
   Flags      = 'A----'
   Datatype   = 'BOOLEAN'
   Prompt     = 'Default Charges';
COLUMN Released_From_Credit_Check IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'FndBoolean'
   Prompt     = 'Released From Credit Check';
COLUMN Released_From_Credit_Check_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Released From Credit Check';
COLUMN Proposed_Prepayment_Amount IS
   Flags      = 'AMIUL'
   Datatype   = 'NUMBER'
   Prompt     = 'Required Prepayment Amount';
COLUMN Prepayment_Approved IS
   Flags      = 'AMIUL'
   Datatype   = 'STRING(200)'
   Enumeration= 'FndBoolean'
   Prompt     = 'Prepayment Approved';
COLUMN Prepayment_Approved_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(5)'
   Prompt     = 'Prepayment Approved';
COLUMN Backorder_Option IS
   Flags      = 'AMIUL'
   Datatype   = 'STRING(200)'
   Enumeration= 'CustomerBackorderOption'
   Prompt     = 'Backorder Option';
COLUMN Backorder_Option_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(40)'
   Prompt     = 'Backorder Option';
COLUMN Expected_Prepayment_Date IS
   Flags      = 'A-IUL'
   Datatype   = 'DATE/DATE'
   Prompt     = 'Expected Prepayment Date';
COLUMN Shipment_Creation IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'ShipmentCreation'
   Prompt     = 'Shipment Creation';
COLUMN Shipment_Creation_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Shipment Creation';
COLUMN Use_Pre_Ship_Del_Note IS
   Flags      = 'AMI--'
   Datatype   = 'STRING(200)'
   Enumeration= 'FndBoolean'
   Prompt     = 'Use Pre Ship Del Note';
COLUMN Use_Pre_Ship_Del_Note_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Use Pre Ship Del Note';
COLUMN Pick_Inventory_Type IS
   Flags      = 'AMI--'
   Datatype   = 'STRING(200)'
   Enumeration= 'PickInventoryType'
   Prompt     = 'Pick Inventory Type';
COLUMN Pick_Inventory_Type_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(7)'
   Prompt     = 'Pick Inventory Type';
COLUMN Tax_Id_No IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(50)/UPPERCASE'
   Prompt     = 'Tax Id No';
COLUMN Tax_Id_Validated_Date IS
   Flags      = 'A-IU-'
   Datatype   = 'DATE/DATE'
   Prompt     = 'Tax ID Validated Date';
COLUMN Classification_Standard IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(25)/UPPERCASE'
   Prompt     = 'Classification Standard'
   Ref        = 'ClassificationStandard';
COLUMN Msg_Sequence_No IS
   Flags      = 'A-IU-'
   Datatype   = 'NUMBER'
   Prompt     = 'Msg Sequence No';
COLUMN Msg_Version_No IS
   Flags      = 'A-IU-'
   Datatype   = 'NUMBER'
   Prompt     = 'Msg Version No';
COLUMN Currency_Rate_Type IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(10)'
   Prompt     = 'Currency Rate Type';
COLUMN Del_Terms_Location IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(100)'
   Prompt     = 'Del Terms Location';
COLUMN Internal_Ref IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(30)'
   Prompt     = 'Internal Ref';
COLUMN Internal_Po_Label_Note IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(50)'
   Prompt     = 'Internal PO Label Note';
COLUMN Supply_Country IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Lookup     = 'IsoCountry'
   Prompt     = 'Supply Country'
   Ref        = 'IsoCountry';
COLUMN Supply_Country_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(2)'
   Prompt     = 'Supply Country';
COLUMN Rebate_Customer IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Rebate Customer'
   Ref        = 'CustOrdCustomer';
COLUMN Freight_Map_Id IS
   Flags      = 'A-IUL'
   Datatype   = 'STRING(15)/UPPERCASE'
   Prompt     = 'Freight Map ID'
   Ref        = 'FreightMap';
COLUMN Zone_Id IS
   Flags      = 'A-IUL'
   Datatype   = 'STRING(15)/UPPERCASE'
   Prompt     = 'Zone Id'
   Ref        = 'FreightZone(freight_map_id)';
COLUMN Freight_Price_List_No IS
   Flags      = 'A-IUL'
   Datatype   = 'STRING(10)'
   Prompt     = 'Freight Price List No'
   Ref        = 'FreightPriceListBase';
COLUMN Summarized_Freight_Charges IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'GenYesNo'
   Prompt     = 'Summarized Freight Charges';
COLUMN Summarized_Freight_Charges_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Summarized Freight Charges';
COLUMN Apply_Fix_Deliv_Freight IS
   Flags      = 'AMIUL'
   Datatype   = 'STRING(200)'
   Enumeration= 'FndBoolean'
   Prompt     = 'Apply Fixed Delivery Freight';
COLUMN Apply_Fix_Deliv_Freight_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Apply Fixed Delivery Freight';
COLUMN Fix_Deliv_Freight IS
   Flags      = 'A-IU-'
   Datatype   = 'NUMBER'
   Prompt     = 'Fixed Delivery Freight Amt';
COLUMN Print_Delivered_Lines IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'DeliveryNoteOptions'
   Prompt     = 'Print Delivered Lines';
COLUMN Print_Delivered_Lines_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(23)'
   Prompt     = 'Print Delivered Lines';
COLUMN Update_Price_Effective_Date IS
   Flags      = 'A----'
   Datatype   = 'BOOLEAN'
   Prompt     = 'Update Price Effective Date';
COLUMN Cust_Calendar_Id IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(10)/UPPERCASE'
   Prompt     = 'Cust Calendar Id'
   Ref        = 'WorkTimeCalendar';
COLUMN Ext_Transport_Calendar_Id IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(10)/UPPERCASE'
   Prompt     = 'External Transport Calendar ID'
   Ref        = 'WorkTimeCalendar';
COLUMN Use_Price_Incl_Tax IS
   Flags      = 'AMI--'
   Datatype   = 'STRING(200)'
   Enumeration= 'FndBoolean'
   Prompt     = 'Use Price Incl Tax';
COLUMN Use_Price_Incl_Tax_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Use Price Incl Tax';
COLUMN Customs_Value_Currency IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(3)/UPPERCASE'
   Prompt     = 'Customs Value Currency'
   Ref        = 'IsoCurrency';
COLUMN Business_Opportunity_No IS
   Flags      = 'A-I--'
   Datatype   = 'STRING(12)/UPPERCASE'
   Prompt     = 'Business Opportunity No'
   Ref        = 'BusinessOpportunity';
COLUMN Picking_Leadtime IS
   Flags      = 'AMIU-'
   Datatype   = 'NUMBER'
   Prompt     = 'Picking Lead Time';
COLUMN Shipment_Type IS
   Flags      = 'AMIUL'
   Datatype   = 'STRING(3)'
   Prompt     = 'Shipment Type'
   Ref        = 'ShipmentType';
COLUMN Vendor_No IS
   Flags      = 'A-IUL'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Vendor No'
   Ref        = 'Supplier';
COLUMN Disconnect_Exp_License IS
   Flags      = 'A----'
   Datatype   = 'STRING(5)'
   Prompt     = 'Disconnect Exp License';
COLUMN Replicate_Changes IS
   Flags      = 'A----'
   Datatype   = 'STRING(5)'
   Prompt     = 'Replicate Changes';
COLUMN Change_Request IS
   Flags      = 'A----'
   Datatype   = 'STRING(5)'
   Prompt     = 'Change Request';
COLUMN Quotation_No IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(12)'
   Prompt     = 'Quotation No'
   Ref        = 'OrderQuotation';
COLUMN Free_Of_Chg_Tax_Pay_Party IS
   Flags      = 'AMIUL'
   Datatype   = 'STRING(200)'
   Enumeration= 'TaxPayingParty'
   Prompt     = 'Free Of Chg Tax Pay Party';
COLUMN Free_Of_Chg_Tax_Pay_Party_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Free Of Chg Tax Pay Party';
COLUMN Blocked_Type IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'CustomerOrderBlockType'
   Prompt     = 'Blocked Type';
COLUMN Blocked_Type_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Blocked Type';
COLUMN B2b_Order IS
   Flags      = 'AMI--'
   Datatype   = 'STRING(200)'
   Enumeration= 'FndBoolean'
   Prompt     = 'B2b Order';
COLUMN B2b_Order_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'B2b Order';
COLUMN Main_Representative_Id IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Main Representative ID'
   Ref        = 'BusinessRepresentative';
COLUMN Limit_Sales_To_Assortments IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'FndBoolean'
   Prompt     = 'Limit Sales To Assortments';
COLUMN Limit_Sales_To_Assortments_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Limit Sales To Assortments';
COLUMN Final_Consumer IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'FndBoolean'
   Prompt     = 'Final Consumer';
COLUMN Final_Consumer_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Final Consumer';
COLUMN Customer_Tax_Usage_Type IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(5)/UPPERCASE'
   Prompt     = 'Customer Tax Usage Type'
   Ref        = 'CustomerTaxUsageType';
COLUMN Invoice_Reason_Id IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Invoice Reason ID'
   Ref        = 'InvoiceReason(company)';
COLUMN Delivery_Reason_Id IS
   Flags      = 'A-IUL'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Delivery Reason ID'
   Ref        = 'DeliveryReason(company)';
COLUMN Component_A IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(50)/UPPERCASE'
   Prompt     = 'Component A'
   Ref        = 'OffInvNumCompTypeVal(company)';
COLUMN Service_Code IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(100)/UPPERCASE'
   Prompt     = 'Service Code'
   Ref        = 'CustomerServiceCode(company,customer_no)';
COLUMN Disc_Price_Round IS
   Flags      = 'AM---'
   Datatype   = 'STRING(200)'
   Enumeration= 'FndBoolean'
   Prompt     = 'Disc Price Round';
COLUMN Disc_Price_Round_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Disc Price Round';
COLUMN Business_Transaction_Id IS
   Flags      = 'A-IUL'
   Datatype   = 'STRING(20)'
   Prompt     = 'Business Transaction Id'
   Ref        = 'BusinessTransactionId(company)';
COLUMN Invoiced_Closed_Date IS
   Flags      = 'A-IU-'
   Datatype   = 'DATE/DATE'
   Prompt     = 'Invoiced Closed Date';
COLUMN State IS
   Flags      = 'A---L'
   Datatype   = 'STRING(20)'
   Prompt     = 'State';

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------


-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

@SecurityCheck Site.UserAuthorized(contract)
@RmcomAccessCheck CustomerOrder(order_no)
VIEW Customer_Order IS
   Prompt     = 'Customer Order'
   Table      = 'CUSTOMER_ORDER_TAB'
SELECT
      t0.*,
      t3.company
FROM (SELECT
       order_no                       order_no,
       authorize_code                 authorize_code,
       bill_addr_no                   bill_addr_no,
       contract                       contract,
       country_code                   country_code,
       currency_code                  currency_code,
       customer_no                    customer_no,
       customer_no_pay                customer_no_pay,
       customer_no_pay_addr_no        customer_no_pay_addr_no,
       customer_no_pay_ref            customer_no_pay_ref,
       delivery_terms                 delivery_terms,
       district_code                  district_code,
       language_code                  language_code,
       market_code                    market_code,
       note_id                        note_id,
       order_code                     order_code,
       order_id                       order_id,
       pay_term_id                    pay_term_id,
       pre_accounting_id              pre_accounting_id,
       print_control_code             print_control_code,
       region_code                    region_code,
       salesman_code                  salesman_code,
       ship_addr_no                   ship_addr_no,
       ship_via_code                  ship_via_code,
       Gen_Yes_No_API.Decode(addr_flag) addr_flag,
       addr_flag                      addr_flag_db,
       Gen_Yes_No_API.Decode(grp_disc_calc_flag) grp_disc_calc_flag,
       grp_disc_calc_flag             grp_disc_calc_flag_db,
       customer_po_no                 customer_po_no,
       cust_ref                       cust_ref,
       date_entered                   date_entered,
       delivery_leadtime              delivery_leadtime,
       label_note                     label_note,
       note_text                      note_text,
       Order_Confirmation_Printed_API.Decode(order_conf) order_conf,
       order_conf                     order_conf_db,
       Print_Order_Confirmation_API.Decode(order_conf_flag) order_conf_flag,
       order_conf_flag                order_conf_flag_db,
       Print_Pack_List_API.Decode(pack_list_flag) pack_list_flag,
       pack_list_flag                 pack_list_flag_db,
       Print_Pick_List_API.Decode(pick_list_flag) pick_list_flag,
       pick_list_flag                 pick_list_flag_db,
       tax_liability                  tax_liability,
       Customer_Order_Address_API.Get_Country_Code(order_no) delivery_country_code,
       wanted_delivery_date           wanted_delivery_date,
       internal_po_no                 internal_po_no,
       route_id                       route_id,
       agreement_id                   agreement_id,
       forward_agent_id               forward_agent_id,
       Order_Delivery_Type_API.Decode(internal_delivery_type) internal_delivery_type,
       internal_delivery_type         internal_delivery_type_db,
       external_ref                   external_ref,
       project_id                     project_id,
       Staged_Billing_Type_API.Decode(staged_billing) staged_billing,
       staged_billing                 staged_billing_db,
       Service_Management_Connect_API.Decode(sm_connection) sm_connection,
       sm_connection                  sm_connection_db,
       Schedule_Agreement_Order_API.Decode(scheduling_connection) scheduling_connection,
       scheduling_connection          scheduling_connection_db,
       priority                       priority,
       Intrastat_Exempt_API.Decode(intrastat_exempt) intrastat_exempt,
       intrastat_exempt               intrastat_exempt_db,
       additional_discount            additional_discount,
       pay_term_base_date             pay_term_base_date,
       Gen_Yes_No_API.Decode(summarized_source_lines) summarized_source_lines,
       summarized_source_lines        summarized_source_lines_db,
       case_id                        case_id,
       task_id                        task_id,
       Fnd_Boolean_API.Decode(confirm_deliveries) confirm_deliveries,
       confirm_deliveries             confirm_deliveries_db,
       Fnd_Boolean_API.Decode(check_sales_grp_deliv_conf) check_sales_grp_deliv_conf,
       check_sales_grp_deliv_conf     check_sales_grp_deliv_conf_db,
       Fnd_Boolean_API.Decode(delay_cogs_to_deliv_conf) delay_cogs_to_deliv_conf,
       delay_cogs_to_deliv_conf       delay_cogs_to_deliv_conf_db,
       cancel_reason                  cancel_reason,
       Fnd_Boolean_API.Decode(jinsui_invoice) jinsui_invoice,
       jinsui_invoice                 jinsui_invoice_db,
       blocked_reason                 blocked_reason,
       blocked_from_state             blocked_from_state,
       sales_contract_no              sales_contract_no,
       contract_rev_seq               contract_rev_seq,
       contract_line_no               contract_line_no,
       contract_item_no               contract_item_no,
       NULL                           default_charges,
       Fnd_Boolean_API.Decode(released_from_credit_check) released_from_credit_check,
       released_from_credit_check     released_from_credit_check_db,
       proposed_prepayment_amount     proposed_prepayment_amount,
       Fnd_Boolean_API.Decode(prepayment_approved) prepayment_approved,
       prepayment_approved            prepayment_approved_db,
       Customer_Backorder_Option_API.Decode(backorder_option) backorder_option,
       backorder_option               backorder_option_db,
       expected_prepayment_date       expected_prepayment_date,
       Shipment_Creation_API.Decode(shipment_creation) shipment_creation,
       shipment_creation              shipment_creation_db,
       Fnd_Boolean_API.Decode(use_pre_ship_del_note) use_pre_ship_del_note,
       use_pre_ship_del_note          use_pre_ship_del_note_db,
       Pick_Inventory_Type_API.Decode(pick_inventory_type) pick_inventory_type,
       pick_inventory_type            pick_inventory_type_db,
       tax_id_no                      tax_id_no,
       tax_id_validated_date          tax_id_validated_date,
       classification_standard        classification_standard,
       msg_sequence_no                msg_sequence_no,
       msg_version_no                 msg_version_no,
       currency_rate_type             currency_rate_type,
       del_terms_location             del_terms_location,
       internal_ref                   internal_ref,
       internal_po_label_note         internal_po_label_note,
       Iso_Country_API.Decode(supply_country) supply_country,
       supply_country                 supply_country_db,
       rebate_customer                rebate_customer,
       freight_map_id                 freight_map_id,
       zone_id                        zone_id,
       freight_price_list_no          freight_price_list_no,
       Gen_Yes_No_API.Decode(summarized_freight_charges) summarized_freight_charges,
       summarized_freight_charges     summarized_freight_charges_db,
       Fnd_Boolean_API.Decode(apply_fix_deliv_freight) apply_fix_deliv_freight,
       apply_fix_deliv_freight        apply_fix_deliv_freight_db,
       fix_deliv_freight              fix_deliv_freight,
       Delivery_Note_Options_API.Decode(print_delivered_lines) print_delivered_lines,
       print_delivered_lines          print_delivered_lines_db,
       NULL                           update_price_effective_date,
       cust_calendar_id               cust_calendar_id,
       ext_transport_calendar_id      ext_transport_calendar_id,
       Fnd_Boolean_API.Decode(use_price_incl_tax) use_price_incl_tax,
       use_price_incl_tax             use_price_incl_tax_db,
       customs_value_currency         customs_value_currency,
       business_opportunity_no        business_opportunity_no,
       picking_leadtime               picking_leadtime,
       shipment_type                  shipment_type,
       vendor_no                      vendor_no,
       NULL                           disconnect_exp_license,
       NULL                           replicate_changes,
       NULL                           change_request,
       quotation_no                   quotation_no,
       Tax_Paying_Party_API.Decode(free_of_chg_tax_pay_party) free_of_chg_tax_pay_party,
       free_of_chg_tax_pay_party      free_of_chg_tax_pay_party_db,
       Customer_Order_Block_Type_API.Decode(blocked_type) blocked_type,
       blocked_type                   blocked_type_db,
       Fnd_Boolean_API.Decode(b2b_order) b2b_order,
       b2b_order                      b2b_order_db,
       main_representative_id         main_representative_id,
       Fnd_Boolean_API.Decode(limit_sales_to_assortments) limit_sales_to_assortments,
       limit_sales_to_assortments     limit_sales_to_assortments_db,
       Fnd_Boolean_API.Decode(final_consumer) final_consumer,
       final_consumer                 final_consumer_db,
       customer_tax_usage_type        customer_tax_usage_type,
       invoice_reason_id              invoice_reason_id,
       delivery_reason_id             delivery_reason_id,
       component_a                    component_a,
       service_code                   service_code,
       Fnd_Boolean_API.Decode(disc_price_round) disc_price_round,
       disc_price_round               disc_price_round_db,
       business_transaction_id        business_transaction_id,
       invoiced_closed_date           invoiced_closed_date,
       rowstate                       objstate,
       Customer_Order_API.Finite_State_Events__(rowstate)                     objevents,
       Customer_Order_API.Finite_State_Decode__(rowstate)                         state,
       rowkey                         objkey,
       to_char(rowversion,'YYYYMMDDHH24MISS') objversion,
       rowid                          objid
FROM   customer_order_tab ) t0


LEFT OUTER JOIN site_tab t3
ON t0.contract = t3.contract












































;
