-- ----------  ------  --------------------------------------------------------------------------------
-- 2020-12-22  ErRalk  Bug 156647(SCZ-12849), Changed the Lu to CustomerOrderCharge from CustomerOrder to facilitate custom fields.
-- 2018-10-10  Mikulk  SCUXXW4-1069, Added  tbwReturnMaterialOverview using MTG Version: 1.30
--------------------------------------------------------------------------------------------------------
projection CustomerOrderChargesHandling;
component ORDER;
layer Core;
description "Use this API to view the records with customer order charges in the system.
             For instance, you can display the total amount of charges used for a specific customer or the total amount invoiced for a specific charge.";
category Users;
include fragment CampaignPerCustomerJoinSelector;
include fragment TaxCalcStructureActiveSelector;
include fragment UserAllowedSiteLovSelector;
include fragment CustOrdCust2Selector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset CustomerOrderSet for CustomerOrderChargeJoin;

------------------------------ ENTITY DETAILS -------------------------------
@Override
query CustomerOrderChargeJoin {
   from = "co_charge_join";
   lu = CustomerOrderCharge;
   keys = OrderNo, ChargeSeqNo;

   attribute OrderNo Text;
   attribute OrderType Text;
   attribute CustomerNo Text;
   attribute CustomerName Text;
   attribute Contract Text;
   attribute ChargeSeqNo Number;
   attribute ChargeType Text;
   attribute ChargeTypeDescription Text {
      fetch = "Customer_Order_Charge_API.Get_Charge_Type_Desc(contract,order_no,charge_type)";
   }
   attribute ChargeAmount Number {
      label = "Charge Price/Curr";
      format = ifscurrency;
   }
   attribute ChargeAmountInclTax Number {
      label = "Chrg Price incl Tax/Curr";
      format = ifscurrency;
   }
   attribute CurrencyCode Text {
      label = "Currency";
   }
   attribute CurrencyRate Number {
      label = "Currency Rates from Company";
   }
   attribute Charge Number {
      label = "Charge (%)";
   }
   attribute ChargeBasisCurr Number {
      fetch = "Customer_Order_Charge_API.Get_Charge_Percent_Basis(order_no,charge_seq_no)";
      label = "Charge (%) Basis/Curr";
      format = ifscurrency;
   }
   attribute ChargedQty Number;
   attribute PriceUnitMeas Text {
      label = "Price UoM";
   }
   attribute BaseChargeAmount Number {
      label = "Charge Price/Base";
      format = ifscurrency;
   }
   attribute BaseChargeAmtInclTax Number {
      label = "Chrg Price incl Tax/Base";
      format = ifscurrency;
   }
   attribute StatisticalChargeDiff Number {
      label = "Statistical Charge Diff/Base";
      format = ifscurrency;
   }
   attribute LineNo Text {
      label = "Connect to Line No";
   }
   attribute RelNo Text {
      label = "Connect to Del No";
   }
   attribute CatalogNo Text {
      label = "Sales Part No";
   }
   attribute CatalogDesc Text {
      label = "Sales Part Description";
      format = uppercase;
   }
   attribute SalesPartQty Number {
      label = "Sales Qty";
   }
   attribute SalesPartUnitMeas Text {
      label = "Sales UoM";
   }
   attribute TaxCode Text;
   attribute TaxClassId Text {
      label = "Tax Class";
   }
   attribute TaxCalcStructureId Text {
      label = "Tax Calculation Structure";
      format = uppercase;
   }
   attribute TotalChargedAmount Number {
      label = "Net Amt/Curr";
      format = ifscurrency;
   }
   attribute TotalBaseChargedAmount Number {
      label = "Net Amt/Base";
      format = ifscurrency;
   }
   attribute GrossAmtCurr Number {
      fetch = "Customer_Order_Charge_API.Get_Total_Charged_Amt_Incl_Tax(order_no,sequence_no)";
      label = "Gross Amt/Curr";
      format = ifscurrency;
   }
   attribute GrossAmtBase Number {
      fetch = "Customer_Order_Charge_API.Get_Tot_Base_Chg_Amt_Incl_Tax(order_no,sequence_no)";
      label = "Gross Amt/Base";
      format = ifscurrency;
   }
   attribute ChargeCostPercent Number {
      label = "Charge Cost (%)";
   }
   attribute TotalChargeCost Number {
      fetch = "Customer_Order_Charge_API.Get_Total_Base_Charged_Cost(order_no, charge_seq_no)";
      format = ifscurrency;
   }
   attribute InvoicedQty Number;
   attribute QtyReturned Number {
      label = "Returned Qty";
   }
   attribute SalesChgTypeCategory Enumeration(SalesChgTypeCategory) {
      label = "Sales Charge Type Category";
   }
   attribute CampaignId Number {
      label = "Campaign";
   }
   attribute DealId Number {
      label = "Deal ID";
   }
   attribute TaxLiability Text {
      fetch = "Customer_Order_Charge_API.Get_Connected_Tax_Liability(ORDER_NO, SEQUENCE_NO)";
   }
   attribute Company Text;
   attribute TaxCodeDescription Text {
      fetch = "Statutory_Fee_API.Get_Description(company, tax_code)";
   }
   attribute CatalogType Enumeration(SalesPartType) {
      label = "Sales Part Type";
   }

   reference TaxClassRef(Company, TaxClassId) to TaxClass(Company, TaxClassId);
   reference CustomerOrderChargeRef(OrderNo, ChargeSeqNo) to CustomerOrderCharge(OrderNo, SequenceNo);
   reference PartCatalogRef(CatalogNo) to PartCatalog(PartNo);
   reference CustomerOrderRef(OrderNo) to CustomerOrder(OrderNo) {
      label = "Order No";
   }
   reference OrderTypeRef(OrderType) to CustOrderType(OrderId) {
      label = "Order Type";
   }
   reference CustomerNoRef(CustomerNo) to CustOrdCust2(CustomerNo) {
      label = "Customer No";
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference ChargeTypeRef(Contract, ChargeType) to SalesChargeType(Contract, ChargeType) {
      prefetch ChargeGroup as ChargeGroup;
      label = "Charge Type";
   }
   reference ChargeGroupRef(ChargeGroup) to SalesChargeGroup(ChargeGroup);

   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Currency";
   }
   reference CatalogNoRef(Contract, CatalogNo) to SalesPart(Contract, CatalogNo) {
      label = "Sales Part No";
   }
   reference SalesPartUnitMeasRef(SalesPartUnitMeas) to IsoUnit(UnitCode) {
      label = "Sales UoM";
   }
   reference TaxCodeRef(Company, TaxCode) to StatutoryFee(Company, FeeCode) {
      label = "Tax Code";
   }
   reference TaxCalcStructureIdRef(Company, TaxCalcStructureId) to TaxCalcStructureActive(Company, TaxCalcStructureId) {
      label = "Tax Calculation Structure";
   }
   reference CampaignIdRef(CampaignId) to CampaignPerCustomerJoin(CustomerNo) {
      label = "Campaign";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------

