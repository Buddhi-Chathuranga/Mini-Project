
--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2021-07-29  PraWlk  FI21R2-3355, Added attribute EnabledLccParams to fecth the enabled lcc params for the company.
-- 2019-01-14  KHVESE  SCUXXW4-1239, SCUXXW4-13285, Removed function PrintInvoice and renamed action Finish to PrintInvoice and added attribute MessageType to entity PrintCustomerInvoiceWarningVirtual.
-- 2018-11-07  KHVESE  SCUXXW4-1239, SCUXXW4-8830, Included fragment SendInvoiceAssistant.
-- 2018-10-08  RaVdlk  SCUXXW4-1239, Added the variable Exist to PrintCustomerInvoiceVirtual
-- 2018-09-26  RaVdlk  SCUXXW4-1239, Added the virtuals PrintCustomerInvoiceVirtual and PrintCustomerInvoiceWarningVirtual to handle warnings in multi selection
-- 2018-07-20  RaVdlk  SCUXXW4-8355, Changed the labels of the fields in assistant
-- 2018-07-09  RaVdlk  SCUXXW4-8355, Created dlgCustomerInvoiceEmailOvw using an assitant
-- 2018-06-22  RaVdlk  SCUXXW4-1239, Added Start_Customer_Order_Main___,Validate_Invoice_Text___ and Validate_Correction_Reason___
-- 2018-06-04  RaVdlk  SCUXXW4-1239, Converted from tbwPrintCustomerInvoice  using MTG Version: 1.16
--------------------------------------------------------------------------------------

projection PrintCustomerInvoices;
component ORDER;
layer Core;
description "Use this API to print general customer invoices, customer credit invoices and advance invoices.
             It is also possible to send or e-mail multiple invoices using this API.";
category Users;
include fragment UserAllowedSiteLovSelector;
include fragment CustomerOrderInvoiceStateEnumeration;
include fragment SendInvoiceAssistant;
include fragment OrdInvoiceTypeLovSelector;
----------------------------- MAIN ENTRY POINTS -----------------------------

entityset CustomerOrderInvHeadSet for CustomerOrderInvHead;
entityset CustomerInvoiceVirtualSet for CustomerInvoiceVirtual;
entityset PrintCustomerInvoiceVirtualSet for PrintCustomerInvoiceVirtual;

------------------------------ ENTITY DETAILS -------------------------------
query CustomerOrderInvHead {
   from = "customer_order_inv_head_uiv";
   lu = CustomerOrderInvHead;
   keys = Company, InvoiceId;
   where = "COMPANY > ' ' AND OBJSTATE = 'Preliminary'";

   attribute Company Text {
      fetch = "COMPANY";
      format = uppercase;
   }
   attribute SeriesId Text {
      fetch = "SERIES_ID";
      label = "Series ID";
      format = uppercase;
   }
   attribute InvoiceNo Text {
      fetch = "INVOICE_NO";
      label = "Preliminary Invoice No";
      format = uppercase;
   }
   attribute SbReferenceNo Text {
      fetch = "SB_REFERENCE_NO";
      label = "SBI Ref No";
   }
   attribute CustomerOrderInvoiceState Enumeration(CustomerOrderInvoiceState) {
      fetch = "OBJSTATE";
      label = "Invoice Status";
   }
   attribute InvoiceType Text {
      fetch = "INVOICE_TYPE";
      format = uppercase;
   }
   attribute InvoiceTypeDescription Text {
      fetch = "Invoice_Type_API.Get_Description_Db(COMPANY, PARTY_TYPE, INVOICE_TYPE)";
   }
   attribute AdvancePrepaymBasedInvoice Boolean("TRUE", "FALSE") {
      fetch = "Invoice_API.Is_Adv_Or_Prepay_Based_Inv(COMPANY, INVOICE_ID)";
      label = "Advance/Prepayment Invoice";
   }
   attribute CorrectionInvoice Boolean("TRUE", "FALSE") {
      fetch = "Invoice_API.Is_Correction_Invoice(COMPANY, INVOICE_ID)";
   }
   attribute Branch Text {
      fetch = "BRANCH";
   }
   attribute Currency Text {
      fetch = "CURRENCY";
      format = uppercase;
   }
   attribute CreatorsReference Text {
      fetch = "CREATORS_REFERENCE";
      label = "Order No";
      format = uppercase;
   }
   attribute Contract Text {
      fetch = "CONTRACT";
      label = "Site";
      format = uppercase;
   }
   attribute Identity Text {
      fetch = "IDENTITY";
      label = "Invoice Customer";
      format = uppercase;
   }
   attribute Name Text {
      fetch = "NAME";
   }
   attribute InvoiceAddressId Text {
      fetch = "INVOICE_ADDRESS_ID";
      label = "Invoice Address ID";
   }
   attribute DeliveryAddressId Text {
      fetch = "DELIVERY_ADDRESS_ID";
      label = "Delivery Address";
   }
   attribute InvoiceDate Date {
      fetch = "INVOICE_DATE";
   }
   attribute LatestDeliveryDate Date {
      fetch = "LATEST_DELIVERY_DATE";
      label = "Latest Ship Date";
   }
   attribute WantedDeliveryDate Timestamp {
      fetch = "WANTED_DELIVERY_DATE";
      label = "Wanted Delivery Date/Time";
   }
   attribute PayTermId Text {
      fetch = "PAY_TERM_ID";
      label = "Pay Term";
   }
   attribute PayTermDescription Text {
      fetch = "PAY_TERM_DESCRIPTION";
   }
   attribute DueDate Date {
      fetch = "DUE_DATE";
   }
   attribute Collect Boolean("TRUE", "FALSE") {
      fetch = "COLLECT";
      label = "Collective Invoice";
   }
   attribute OrderDate Date {
      fetch = "ORDER_DATE";
      label = "Created";
   }
   attribute OurReference Text {
      fetch = "OUR_REFERENCE";
   }
   attribute YourReference Text {
      fetch = "YOUR_REFERENCE";
      label = "Customer Reference";
   }
   attribute ShipVia Text {
      fetch = "SHIP_VIA";
      label = "Ship Via";
      format = uppercase;
   }
   attribute ForwardAgentId Text {
      fetch = "FORWARD_AGENT_ID";
      label = "Forward ID";
      format = uppercase;
   }
   attribute LabelNote Text {
      fetch = "LABEL_NOTE";
   }
   attribute DeliveryTerms Text {
      fetch = "DELIVERY_TERMS";
      label = "Delivery Terms";
      format = uppercase;
   }
   attribute NetAmount Number {
      fetch = "NET_AMOUNT";
      label = "Total Net Amount/Curr";
      format = ifscurrency;
   }
   attribute VatAmount Number {
      fetch = "VAT_AMOUNT";
      label = "Total Tax Amt/Curr";
      format = ifscurrency;
   }
   attribute GrossAmount Number {
      fetch = "GROSS_AMOUNT";
      label = "Total Gross Amount/Curr";
      format = ifscurrency;
   }
   attribute MediaCode Text {
      fetch = "Cust_Ord_Customer_API.Get_Default_Media_Code(IDENTITY, 'INVOIC', COMPANY)";
      label = "Media Code";
      format = uppercase;
   }
   attribute NcfReference Text {
      fetch = "NCF_REFERENCE";
      label = "Payment Reference";
   }
   @DynamicComponentDependency JINSUI
   attribute JsInvoiceState Enumeration(JsInvoiceState) {
      fetch = "JS_INVOICE_STATE_DB";
      label = "Jinsui Invoice State";
   }
   attribute AggregationNo Number {
      fetch = "AGGREGATION_NO";
      label = "Settlement";
   }
   attribute PartyType Text {
      fetch = "PARTY_TYPE";
      format = uppercase;
   }
   attribute InvoiceId Number {
      fetch = "INVOICE_ID";
   }
   attribute EmailAddress Text {
      fetch = "Cust_Ord_Customer_Address_API.Get_Email(IDENTITY, YOUR_REFERENCE, INVOICE_ADDRESS_ID)";
   }
   -- gelr:localization_control_center, begin
   attribute EnabledLccParams Text {
      fetch = "Company_Localization_Info_API.Get_Enabled_Params_Per_Company(COMPANY)";
      insertable = [false];
      updatable = [false];
   }
   -- gelr:localization_control_center, end
   reference InvoiceTypeRef(Company, InvoiceType) to OrdInvoiceTypeLov(Company, TypeId) {
      label = "Invoice Type";
   }
   reference PayTermIdRef(Company, PayTermId) to PaymentTerm(Company, PayTermId) {
      label = "Payment Term";
   }
   reference CustomerOrderRef(CreatorsReference) to CustomerOrder(OrderNo);
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
}

-------------------------------- STRUCTURES ---------------------------------

structure PrintInfo {
   attribute TextValidated    Text;
   attribute CorrReasonValid  Text;
}

--------------------------------- VIRTUALS ----------------------------------
virtual CustomerInvoiceVirtual {
   attribute SelectionList Text;
   array CustomerInvoiceEmailArray() to CustomerInvoiceEmailVirtual();
   action EmailCustomerInvoice {
      supportwarnings = [true];
   }
}

virtual CustomerInvoiceEmailVirtual {
   crud = Read, Update;

   attribute InvoiceId Text {
      editable = [false];
      label = "Invoice No";
   }
   attribute Company Text;
   attribute InvoiceCustomer Text {
      editable = [false];
   }
   attribute YourReference Text {
      editable = [false];
      label = "Customer Contact";
   }
   attribute Email Text {
      label = "E-mail";
   }
   attribute Contract Text;
}

virtual PrintCustomerInvoiceVirtual {
   attribute Selection LongText {
      inlined = [true];
   }
   attribute Exist Boolean;
   array WarningsArray() to PrintCustomerInvoiceWarningVirtual();
   action PrintInvoice;
}

virtual PrintCustomerInvoiceWarningVirtual {
   crud = Read;
   attribute MessageType Text {
      label = "";
      editable = [false];
   }
   attribute Company Text {
      editable = [false];
   }
   attribute InvoiceId Number {
      editable = [false];
   }
   attribute Warning Text {
      editable = [false];
   }
}
