------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -------------------------------------------------------------------
-- 2020-11-18  RavDlk  SC2020R1-11348, Handled the enumeration CreatePartialSum
-- 2019-08-17  MalLlk  SCUXXW4-22978, Supporting to move fragment CustomerOrderLineDiscountAsistant to a seperate projection
-- 2019-08-17          and renamed the client ManageCustOrdLineDiscountAssistant to CustomerOrderLineDiscount.
-- 2019-06-22  MAHPLK  SCUXXW4-22196, Moved CustomerOrderLineDiscount projection and client to this fragment.
-- 2018-08-14  SeJalk  SCUXXW4-8397, created from dlgCustOrderLineDiscount using MTG Version: 1.25
------------------------------------------------------------------------------------------

client CustomerOrderLineDiscount;
component ORDER;
layer Core;
projection CustomerOrderLineDiscountHandling;

--------------------------------- FRAGMENTS ---------------------------------

-------------------------------- ASSISTANTS ---------------------------------
assistant CustOrderLineDiscountAssistant using CustOrderLineDiscountSet {
   label = "Customer Order Line Discount";
   input(OrderNo, LineNo, RelNo, LineItemNo, Company, Contract, CatalogNo, InsUpdAllowed, UsePriceInclTax);

   steps {
      step {
         group CustOrderLineDetailGroup;
         group AmountsGroup;
         list CustOrderLineDiscountList(CustOrderLineDiscountArray);
      }
      final step {

      }
      cancelled step {

      }
   }
   finish command {
      label = "Close";
      execute {
         exit OK;
      }
   }
   cancel command {
      visible = [false];
      execute {
         exit CANCEL;
      }
   }
   restart command {
      visible = [false];
   }
}

--------------------------------- COMMANDS ----------------------------------
command AfterCrudCommand for CustOrderLineDiscount {
   bulkexecute {
      call UpdateParent(parent.Objkey);
      if [CreateCount = 1] {
         call UpdateDiscountLineNo(parent.OrderNo, parent.LineNo, parent.RelNo, parent.LineItemNo, Record.DiscountNo, true);
      }
      if [DeleteCount = 1] {
         call UpdateDiscountLineNo(parent.OrderNo, parent.LineNo, parent.RelNo, parent.LineItemNo, Record.DiscountNo, false);
      }
   }
}

---------------------------------- GROUPS -----------------------------------
group CustOrderLineDetailGroup for CustomerOrderLineVirtual {
   label = "";
   field CatalogNo {
      size = Small;
   }
   field SalesPartDescription;
   field OrderNo {
      size = Small;
   }
   field LineNo {
      size = Small;
   }
   field RelNo {
      size = Small;
   }
}

group AmountsGroup for CustomerOrderLineVirtual {
   label = "Amounts";
   field BaseSaleUnitPrice;
   field BaseUnitPriceInclTax;
   field SaleUnitPrice;
   field UnitPriceInclTax;
   field CurrencyCode {
      size = Small;
   }
   field Discount;
   field AccDiscountNetAmt;
   field AccDiscountGrossAmt;
}

----------------------------------- LISTS -----------------------------------
list CustOrderLineDiscountList for CustOrderLineDiscount {
   label = "Discount Lines";
   editmode = SingleCellEdit;
   orderby = DiscountLineNo;
   crudactions {
      new {
         enabled = [parent.InsUpdAllowed];
      }
      edit {
         enabled = [parent.InsUpdAllowed];
      }
      delete {
         enabled = [parent.InsUpdAllowed];
      }
      after command AfterCrudCommand;
   }
   field DiscountLineNo {
      searchable = false;
      editable = [isNew];
   }

   lov DiscountTypeRef with ReferenceSalesDiscountTypeSelector {
      searchable = false;
      size = Large;
      description = DiscountTypeRef.Description;
      validate command {
         execute {
            call GetDiscount(DiscountType) into Discount;
         }
      }
   }
   field CalculationBasis {
      searchable = false;
   }
   field Discount {
      searchable = false;
   }
   field DiscountAmount {
      searchable = false;
   }
   field CreatePartialSum {
      size = Small;
      enumerationtrue = "PartialSum";
      enumerationfalse = "NotPartialSum";
      truelabel = "Yes";
      falselabel = "No";
      searchable = false;
   }
   field PriceCurrency {
      searchable = false;
   }
   field PriceBase {
      searchable = false;
   }
   field PriceCurrencyInclTax {
      searchable = false;
   }
   field PriceBaseInclTax {
      searchable = false;
   }
   field DiscountSource {
      size = Small;
      searchable = false;
   }
   field DiscountSourceId {
      size = Small;
      searchable = false;
   }
}

