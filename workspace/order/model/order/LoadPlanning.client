--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-10-31  AyAmlk  SCXTEND-1202, Added the startup mode as search.
-- 2018-06-20  KHVESE  SCUXXW4-9235, Changed the included fragments to the correct one and corrected the name of Reference Lov Selectors
-- 2018-04-25  MAHPLK  SCUXXW4-9237, Converted from frmLoadPlanning using MTG Version: 1.16
--------------------------------------------------------------------------------------
client LoadPlanning;
component ORDER;
layer Core;

include fragment UserAllowedSiteLovSelector;
include fragment CustOrdCust7Selector;
include fragment CustAddressShipLovSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry LoadPlanningNavEntry parent OrderNavigator.TransportationAdministrationRoutePlanning at index 300 {
      label = "Load Planning";
      page Form;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using LoadPlans {
   label = "Load Planning";
   startupmode = search;
   selector LoadPlanSelector;
   group LoadPlanningGroup;
   list LoadPlanLineList(DetailLoadPlanLine);

}

--------------------------------- SELECTORS ---------------------------------
@Override
selector LoadPlanSelector for LoadPlan {
   label = "${RouteId} - ${RouteIdRef.Description}";
   static RouteId;
   static RouteIdRef.Description;
}


---------------------------------- GROUPS -----------------------------------

group LoadPlanningGroup for LoadPlan {
   label = "";

   lov RouteIdRef with ReferenceDeliveryRouteSelector {
      description = RouteIdRef.Description;
   }
   lov ContractRef with ReferenceUserAllowedSiteLovSelector;
   lov ShipViaCodeRef with ReferenceMpccomShipViaSelector {
      description = ShipViaCodeRef.Description;
   }
}

----------------------------------- LISTS -----------------------------------

list LoadPlanLineList for LoadPlanLine {
   label = "";
   orderby = LoadSequenceNo asc;

   lov CustomerNoRef with ReferenceCustOrdCust7Selector {
      contactwidget {
         enabled = [true];
         source = Customer;
      }
      validate command {
         execute {
            call ValidateAddressInfo(CustomerNo, AddrNo) into AddressInfo;

            set AddrNo = AddressInfo.AddrNo;
            set AddressName = AddressInfo.AddressName;
            set Address1 = AddressInfo.Address1;
            set Address2 = AddressInfo.Address2;
            set Address3 = AddressInfo.Address3;
            set Address4 = AddressInfo.Address4;
            set Address5 = AddressInfo.Address5;
            set Address6 = AddressInfo.Address6;
            set ZipCode = AddressInfo.ZipCode;
            set City = AddressInfo.City;
            set State = AddressInfo.State;
            set DistrictCode = AddressInfo.DistrictCode;
            set RegionCode = AddressInfo.RegionCode;
         }
      }
   }
   field LoadSequenceNo;
   lov AddrNoRef with ReferenceCustAddressShipLovSelector {
      validate command {
         execute {
            call ValidateAddressInfo(CustomerNo, AddrNo) into AddressInfo;

            set AddrNo = AddressInfo.AddrNo;
            set AddressName = AddressInfo.AddressName;
            set Address2 = AddressInfo.Address2;
            set Address3 = AddressInfo.Address3;
            set Address4 = AddressInfo.Address4;
            set Address5 = AddressInfo.Address5;
            set Address6 = AddressInfo.Address6;
            set ZipCode = AddressInfo.ZipCode;
            set City = AddressInfo.City;
            set State = AddressInfo.State;
            set DistrictCode = AddressInfo.DistrictCode;
            set RegionCode = AddressInfo.RegionCode;
         }
      }
   }

   field AddressName;
   field Address1;
   field Address2;
   field Address3;
   field Address4;
   field Address5;
   field Address6;
   field ZipCode;
   field City;
   field State;
   lov SalesDistrictRef with ReferenceSalesDistrictSelector {
      description = SalesDistrictRef.Description;
   }
   lov SalesRegionRef with ReferenceSalesRegionSelector {
      description = SalesRegionRef.Description;
   }
}