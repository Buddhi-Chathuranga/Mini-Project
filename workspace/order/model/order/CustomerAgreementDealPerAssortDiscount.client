--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-07-24  IzShlk  SCUXXW4-8117, Converted from dlgAgreementDealAssortDiscount using MTG Version: 1.23
--------------------------------------------------------------------------------------

client CustomerAgreementDealPerAssortDiscount;
component ORDER;
layer Core;
projection CustomerAgreementDealPerAssortDiscountHandling;

-------------------------------- ASSISTANTS ---------------------------------
assistant CustomerAgreementDealPerAssortmentDiscountAssistant using AgreementDealAssortDiscountSet {
   label = "Customer Agreement Deal per Assortment Discount";

   setup SetupSourceInfo {
      variable AgreementIdVar {
         type = Text;
      }
      variable MinQuantityVar {
         type = Number;
      }
      variable ValidFromVar {
         type = Date;
      }
      variable PriceUnitMeasVar {
         type = Text;
      }
      variable AssortmentIdVar {
         type = Text;
      }
      variable AssortmentNodeIdVar {
         type = Text;
      }
      variable DealPriceVar {
         type = Number;
      }
      variable ValidToVar {
         type = Date;
      }
      variable CurrencyCodeVar {
         type = Text;
      }
      variable UpdAllowedVar {
         type = Boolean;
      }
      execute {
         set AgreementId = AgreementIdVar;
         set MinQuantity = MinQuantityVar;
         set ValidFrom = ValidFromVar;
         set PriceUnitMeas = PriceUnitMeasVar;
         set AssortmentId = AssortmentIdVar;
         set AssortmentNodeId = AssortmentNodeIdVar;
         set DealPrice = DealPriceVar;
         set ValidTo = ValidToVar;
         set CurrencyCode = CurrencyCodeVar;
         set UpdAllowed = UpdAllowedVar;
      }
   }

   steps {
      step {
         group AgreementDealAssortDiscountGroup;
         list AgreementAssortDiscountList(AgreementAssortDiscountArray);
      }
      final step {

      }
      cancelled step {

      }
   }
   finish command {
      execute {
         navigate back;
      }
   }
   cancel command {
      execute {
         navigate back;
      }
   }
   restart command {
      visible = [false];
   }
}


--------------------------------- COMMANDS ----------------------------------
command AfterCrud for AgreementAssortDiscount {
   bulkexecute {
      call CalcDiscount(parent.AgreementId, parent.MinQuantity, parent.ValidFrom, parent.PriceUnitMeas, parent.AssortmentId, parent.AssortmentNodeId);
      call UpdateParent(parent.Objkey);
      if [CreateCount = 1] {
         call UpdateDiscountLineNo(parent.AgreementId, parent.AssortmentId, parent.AssortmentNodeId, parent.MinQuantity, parent.ValidFrom, parent.PriceUnitMeas, Record.DiscountNo, true);
      }
      if [DeleteCount = 1] {
         call UpdateDiscountLineNo(parent.AgreementId, parent.AssortmentId, parent.AssortmentNodeId, parent.MinQuantity, parent.ValidFrom, parent.PriceUnitMeas, Record.DiscountNo, false);
      }
   }
}

---------------------------------- GROUPS -----------------------------------
group AgreementDealAssortDiscountGroup for AgreementAssortmentDealVirtual {
   label = "";
   lov AssortmentIdRef with ReferenceAssortmentStructureSelector {
      label = "Assortment";
      description = AssortmentIdRef.Description;
   }
   lov AssortmentNodeIdRef with ReferenceAssortmentNodeSelector {
      label = "Assortment Node";
      description = AssortmentNodeIdRef.Description;
   }
   field AgreementId {
      size = Small;
   }
   measure DealPrice(CurrencyCode) {
      preserveprecision = [true];
   }
   field PriceUnitMeas {
      size = Small;
   }
   field Discount {
      size = Small;
   }
   measure AccDiscountAmount(CurrencyCode);

   field MinQuantity {
      size = Small;
   }
   daterangefield {
      startdate ValidFrom;
      enddate ValidTo;
      label = "Validity Period";
   }
}

----------------------------------- LISTS -----------------------------------
list AgreementAssortDiscountList for AgreementAssortDiscount {
   label = "Discount Lines";
   editmode = SingleCellEdit;
   orderby = DiscountLineNo;

   crudactions {
      new {
         enabled = [parent.UpdAllowed];
      }
      edit {
         enabled = [parent.UpdAllowed];
      }
      delete {
         enabled = [parent.UpdAllowed];
      }
      after command AfterCrud;
   }

   field DiscountLineNo;
   lov DiscountTypeRef with ReferenceSalesDiscountTypeSelector using DiscountType(DiscountType) {
      description = DiscountTypeRef.Description;
      validate command {
         execute {
            set Discount = DiscountTypeRef.Discount;
         }
      }
   }
   field CalculationBasis;
   field Discount;
   field DiscountAmount {
      searchable = false;
   }
   field PriceCurrency {
      searchable = false;
      preserveprecision = [true];
      editable = [false];
   }
}
