---------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ----------------------------------------------------------
-- 2020-11-10  RavDlk  SC2020R1-11228, Handled the boolean fields properly
-- 2019-02-05  MaIklk  SCUXX-5323, Removed FNDAB1 condition.
-- 2018-06-26  Lufelk  SCUXX-3681, Converted from tbwReturnMaterialOverview using MTG Version: 1.23
---------------------------------------------------------------------------------
client ReturnMaterial;
component ORDER;
layer Core;
projection ReturnMaterialHandling;
include fragment CustOrdCust2Selector;
include fragment AllSalesPartActiveLovSelector;
include fragment TaxCalcStructureActiveSelector;
include fragment SalesPartGtinNoLovSelector;

-------------------------------- MAIN PAGES ---------------------------------
page List using ReturnMaterialLineSet {
   label = "Return Material Authorization Lines";
   list ReturnMaterialOverviewList;
}


--------------------------------- COMMANDS ----------------------------------
//command ReturnMaterialAuthorizationCommand for ReturnMaterialLine {
//   label = "Return Material Authorization";
//   //! TODO: <Use the "enabled" keyword below to define the Inquire logic, found within the event handler 'menuItem__Return_Inquire'>
//   enabled = [true];
//   //! TODO: <Use the "execute" keyword below to define the Execute logic, found within the event handler 'menuItem__Return_Execute'>
//   execute {
//      error("Command 'ReturnMaterialAuthorizationCommand' not implemented!");
//   }
//}
//command ReceivePartsCommand for ReturnMaterialLine {
//   label = "Receive Parts";
//   //! TODO: <Use the "enabled" keyword below to define the Inquire logic, found within the event handler 'menuItem_Receive_Parts_Inquire'>
//   enabled = [true];
//   //! TODO: <Use the "execute" keyword below to define the Execute logic, found within the event handler 'menuItem_Receive_Parts_Execute'>
//   execute {
//      error("Command 'ReceivePartsCommand' not implemented!");
//   }
//}
//command ReceivePartsOrderDeliveriesCommand for ReturnMaterialLine {
//   label = "Receive Parts against Order Deliveries";
//   //! TODO: <Use the "enabled" keyword below to define the Inquire logic, found within the event handler 'menuItem_Receive_Parts_Against_Order_Deliveries_Inquire'>
//   enabled = [true];
//   //! TODO: <Use the "execute" keyword below to define the Execute logic, found within the event handler 'menuItem_Receive_Parts_Against_Order_Deliveries_Execute'>
//   execute {
//      error("Command 'ReceivePartsOrderDeliveriesCommand' not implemented!");
//   }
//}
//command ScrapPartsCommand for ReturnMaterialLine {
//   label = "Scrap Parts";
//   //! TODO: <Use the "enabled" keyword below to define the Inquire logic, found within the event handler 'menuItem_Scrap_Parts_Inquire'>
//   enabled = [true];
//   //! TODO: <Use the "execute" keyword below to define the Execute logic, found within the event handler 'menuItem_Scrap_Parts_Execute'>
//   execute {
//      error("Command 'ScrapPartsCommand' not implemented!");
//   }
//}
//command ReturnPartsfromInternalOrdeCommand for ReturnMaterialLine {
//   label = "Return Parts from Internal Order Transit";
//   //! TODO: <Use the "enabled" keyword below to define the Inquire logic, found within the event handler 'menuItem_Return_Inquire'>
//   enabled = [true];
//   //! TODO: <Use the "execute" keyword below to define the Execute logic, found within the event handler 'menuItem_Return_Execute'>
//   execute {
//      error("Command 'ReturnPartsfromInternalOrdeCommand' not implemented!");
//   }
//}
//command ScrapPartsfromInternalOrderCommand for ReturnMaterialLine {
//   label = "Scrap Parts from Internal Order Transit";
//   //! TODO: <Use the "enabled" keyword below to define the Inquire logic, found within the event handler 'menuItem_Scrap_Inquire'>
//   enabled = [true];
//   //! TODO: <Use the "execute" keyword below to define the Execute logic, found within the event handler 'menuItem_Scrap_Execute'>
//   execute {
//      error("Command 'ScrapPartsfromInternalOrderCommand' not implemented!");
//   }
//}
//command RegisterDirectReturnsCommand for ReturnMaterialLine {
//   label = "Register Direct Returns to Supplier";
//   //! TODO: <Use the "enabled" keyword below to define the Inquire logic, found within the event handler 'menuTbwMethods_menuRegister_Direct_Returns_Inquire'>
//   enabled = [true];
//   //! TODO: <Use the "execute" keyword below to define the Execute logic, found within the event handler 'menuTbwMethods_menuRegister_Direct_Returns_Execute'>
//   execute {
//      error("Command 'RegisterDirectReturnsCommand' not implemented!");
//   }
//}
//command ResolveShortagesCommand for ReturnMaterialLine {
//   label = "Resolve Shortages";
//   //! TODO: <Use the "enabled" keyword below to define the Inquire logic, found within the event handler 'menuItem_Resolve_Inquire'>
//   enabled = [true];
//   //! TODO: <Use the "execute" keyword below to define the Execute logic, found within the event handler 'menuItem_Resolve_Execute'>
//   execute {
//      error("Command 'ResolveShortagesCommand' not implemented!");
//   }
//}
//command DirectReturntoSupplierfromInternalOrderTransitCommand for ReturnMaterialLine {
//   label = "Direct Return to Supplier from Internal Order Transit";
//   //! TODO: <Use the "enabled" keyword below to define the Inquire logic, found within the event handler 'menuTbwMethods_menuDirect_Return_to_Supplier_from_Internal_Order_Transit_Inquire'>
//   enabled = [true];
//   //! TODO: <Use the "execute" keyword below to define the Execute logic, found within the event handler 'menuTbwMethods_menuDirect_Return_to_Supplier_from_Internal_Order_Transit_Execute'>
//   execute {
//      error("Command 'DirectReturntoSupplierfromInternalOrderTransitCommand' not implemented!");
//   }
//}
//command ViewConfigurationCommand for ReturnMaterialLine {
//   label = "View Configuration";
//   //! TODO: <Use the "enabled" keyword below to define the Inquire logic, found within the event handler 'menuItem__View_Inquire'>
//   enabled = [true];
//   //! TODO: <Use the "execute" keyword below to define the Execute logic, found within the event handler 'menuItem__View_Execute'>
//   execute {
//      error("Command 'ViewConfigurationCommand' not implemented!");
//   }
//}
//command NotesCommand for ReturnMaterialLine {
//   label = "Notes";
//   //! TODO: <Use the "enabled" keyword below to define the Inquire logic, found within the event handler 'menuItem__Notes_Inquire'>
//   enabled = [true];
//   //! TODO: <Use the "execute" keyword below to define the Execute logic, found within the event handler 'menuItem__Notes_Execute'>
//   execute {
//      error("Command 'NotesCommand' not implemented!");
//   }
//}
//command DocumentTextCommand for ReturnMaterialLine {
//   label = "Document Text";
//   //! TODO: <Use the "enabled" keyword below to define the Inquire logic, found within the event handler 'menuItem_Document_Inquire'>
//   enabled = [true];
//   //! TODO: <Use the "execute" keyword below to define the Execute logic, found within the event handler 'menuItem_Document_Execute'>
//   execute {
//      error("Command 'DocumentTextCommand' not implemented!");
//   }
//}


----------------------------------- LISTS -----------------------------------
list ReturnMaterialOverviewList for ReturnMaterialLineQuery {
   field RmaNo;
   field RmaLineNo;
   lov CatalogNoRef with ReferenceAllSalesPartActiveLovSelector {
      size = Small;
   }
   field CatalogDesc {
      size = Small;
   }
   field ReturnReasonCodeRef {
      size = Small;
   }
   field ReturnMaterialReasonRef.ReturnReasonDescription {
      size = Small;
      label = "Return Reason Description";
   }
   field InspectionInfo {
      size = Small;
   }
   field QtyToReturn;
   field QtyReceived;
   field ReturnUoMRef {
      size = Small;
   }
   field QtyReturnedInv;
   field QtyScrapped;
   field InventoryPartRef.UnitMeas {
      size = Small;
      label = "Inventory UoM";
   }
   field OrderNo {
      size = Small;
   }
   field LineNo {
      size = Small;
   }
   field RelNo {
      size = Small;
   }
   field FeeCodeRef {
      size = Small;
   }
   field FeeCodeRef.Description {
      size = Small;
   }
   field NetAmountCurr;
   field TaxAmountCurr;
   field GrossAmtCurr;
   field DateRequested;
   lov CustomerNoRef with ReferenceCustOrdCust2Selector {
      size = Small;
   }
   field CustomerName {
      size = Small;
   }
   @DynamicComponentDependency CFGCHR
   field ConfigurationIdRef {
      size = Small;
   }
   field ConditionCodeRef {
      size = Small;
   }
   field ConditionCodeRef.Description {
      size = Small;
      label = "Condition Code Description";
   }
   field RentalNo {
      size = Small;
   }
   field TaxClassId {
      size = Small;
   }
   field TaxClassRef.Description {
      size = Small;
      label = "Tax Class Description";
   }
   lov TaxCalcStructureIdRef with ReferenceTaxCalcStructureActiveSelector {
      size = Small;
   }
   field DeliveryType {
      size = Small;
   }
   field DeliveryTypeRef.Description {
      size = Small;
      label = "Delivery Type Description";
   }
   field DebitInvoiceNo {
      size = Small;
   }
   field Contract {
      size = Small;
   }
   field DateReturned;
   field Objstate {
      size = Small;
      label = "Line Status";
   }
   field CurrencyCode {
      size = Small;
   }
   field SaleUnitPrice;
   field BaseSaleUnitPrice;
   field UnitPriceInclTax;
   field BaseUnitPriceInclTax;
   field GrossAmtBase;
   field PriceConvFactor;
   field CurrencyRate2;
   field PurchaseOrderNo {
      size = Small;
   }
   field NetAmountBase;

   field TaxAmountBase;
   field CreditApproverIdRef {
      size = Small;
   }
   field CreditCorrInvoiceNo {
      size = Small;
   }
   field CreditInvoiceItemId;
   field ReturnApproverId {
      size = Small;
   }
   field CustRef {
      size = Small;
   }
   field ReferenceName {
      size = Small;
   }
   field HeadState {
      size = Small;
   }
   field CancelReasonRef {
      size = Small;
   }
   field CancellationReasonDescription {
      size = Small;
   }
   lov GTINRef with ReferenceSalesPartGtinNoLovSelector {
      size = Small;
   }
   field RebateBuilder {
      size = Small;
   }
   field NoteText {
      label = "Notes";
      size = Large;
      multiline = true;
   }
   field DocumentText {
      size = Small;
   }
   field Rental {
      size = Small;
   }
   @DynamicComponentDependency EXPCTR
   field ExportLicenseStatusforFindandConnect {
      size = Small;
   }
   field ReturnToContract {
      size = Small;
   }
   field ReturnToVendorNo {
      size = Small;
   }
   field OriginatingRmaNo;
   field ReceiptRmaNo;

   fieldranking CatalogNoRef.CatalogNo, QtyToReturn, ReturnUoMRef, ReturnMaterialReasonRef.ReturnReasonDescription, QtyReceived, GrossAmtCurr, RmaNo, InspectionInfo, CatalogDesc, QtyReturnedInv, QtyScrapped, InventoryPartRef.UnitMeas, RmaLineNo, OrderNo, LineNo, RelNo, NetAmountCurr, TaxAmountCurr, GrossAmtCurr;

//   commandgroup CommandGroupCmdGroup {
//      label = "Command Group";
//      command ReturnMaterialAuthorizationCommand;
//      command ReceivePartsCommand;
//      command ReceivePartsOrderDeliveriesCommand;
//      command ScrapPartsCommand;
//      command ReturnPartsfromInternalOrdeCommand;
//      command ScrapPartsfromInternalOrderCommand;
//      command RegisterDirectReturnsCommand;
//      command ResolveShortagesCommand;
//      command DirectReturntoSupplierfromInternalOrderTransitCommand;
//   }
//
//   commandgroup CommandGroup2CmdGroup {
//      label = "Command Group 2";
//      command ViewConfigurationCommand;
//   }
//
//   commandgroup CommandGroup3CmdGroup {
//      label = "Command Group 3";
//      command NotesCommand;
//      command DocumentTextCommand;
//   }
}