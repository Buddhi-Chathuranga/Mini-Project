-------------------------------------------------------------------------------------------------------
--  Date        Sign    History
--  ----------  ------  -------------------------------------------------------------------------------
--  2021-07-30  NiDalk  SC21R2-128, Set as Premium.
--  2021-06-30  NiDalk  SC21R2-114, Set mandatory attributes in CustomerPriceRequestStructure and PartAvailabilityRequestStructure.
--  2021-05-25  DhAplk  SC21R2-1283, Added array and reference related descriptions.
--  2021-05-25  DhAplk  SC21R2-1282, Added service and action related description.
--  2020-02-19  NiDalk  SC2020R1-12530, Corrected initialcheck.
--  2020-11-13  DhAplk  SC2020R1-11072, Added documentation to GetCustomerPrice related structures and set apiclass to Premium.
--  2020-10-05  DhAplk  SC2020R1-9964, Changed attribute name EffectivityDate to EffectiveDate in CustomerPriceRequestStructure.
--  2019-10-09  AyAmlk  SCSPRING20-54, Moved from ORDSRV/SalesPartHandling.serverpackage.
--  2020-04-27  Erlise  SC2020R1-52, Conversion of BizApi GetSalesPart from ORDSRV/SalesPartHandling.serverpackage.
-------------------------------------------------------------------------------------------------------

@apidoc {
   @description: <<
   Designed for IFS Integration functionality to retrieve sales part information in terms of price, available quantity and part general data.
   Sales Part Service consists of three inbound operations and the required actions/functions to handle these operations are exposed through REST APIs.
   >>
}
projection SalesPartService;
component ORDER;
layer Core;
description "Designed for IFS Integration functionality to retrieve sales part information in terms of price, available quantity and part general data.
Sales Part Service consists of three inbound operations and the required actions/functions to handle these operations are exposed through REST APIs.";
category Integration;
apiclass Premium;

--------------------------------- FRAGMENTS ---------------------------------
include fragment SalesPartUtil;
include fragment CustOrdCustomerInitialCheck;

----------------------------- MAIN ENTRY POINTS -----------------------------


------------------------------ ENTITY DETAILS -------------------------------


---------------------------------- ACTIONS ----------------------------------
@apidoc {
   @description : This operation is used to retrieve part price details based on selection criteria. Originally developed to support a web shop integration to IFS Cloud.
   @param CustomerPriceParams : A structure parameter of type CustomerPriceRequestStructure
   @return : A structure parameter of type CustomerPriceResponseStructure
}
action GetCustomerPrice Structure(CustomerPriceResponseStructure) {
   -- Checks done in SalesPartUtil
   initialcheck implementation;
   parameter CustomerPriceParams Structure(CustomerPriceRequestStructure);
}

@apidoc {
   @description : This operation is used retrieve stock quantity of the available parts based on selection criteria. Originally developed to support a web shop integration to IFS Cloud.
   @param PartAvailabilityParams : A structure parameter of type PartAvailabilityRequestStructure
   @return : A structure parameter of type PartAvailabilityResponseStructure
}
action GetPartAvailability Structure(PartAvailabilityResponseStructure) {
      -- Checks done in SalesPartUtil
   initialcheck implementation;
   parameter PartAvailabilityParams Structure(PartAvailabilityRequestStructure);
}

@apidoc {
   @description : This operation is used to retrieve sales part information based on selection criteria. Originally developed to support a web shop integration to IFS Cloud.
   @param SalesPartParams : This is a strucutre of type SalesPartParamsStructure
   @return : List of elements of type SalesPartStructure
}
action GetSalesPart List<Structure(SalesPartStructure)> {
   -- Data fetched from base view with security
   initialcheck implementation;
   parameter SalesPartParams Structure(SalesPartParamsStructure);
}
-------------------------------- STRUCTURES ---------------------------------
@apidoc {
   @description : Data structure for Get Customer Price request
   @attribute Site : The site ID in IFS Cloud. When specified it will retrieve price information connected to this specific site. If no EDI site is setup for the Customer in IFS Cloud, then this field requires a valid site ID.
   @attribute CustomerNo : The short name or identification number of the ordering customer in IFS cloud. When specified it will retrieve price information for this customer ID. If a EDI site is setup for this customer ID in IFS Cloud then this value can be used to retrieve the correct site for the price information.
   @attribute CurrencyCode : The Currency code for which price infomation should be retrieved.
   @attribute AgreementId : The customer agreement for which price information should be retrieved.
   @attribute EffectiveDate : The date for which price information should be retrieved.
   @attribute Parts : Include sales part, quantity, price list and condition code information to retrieve price in IFS Cloud.
}
structure CustomerPriceRequestStructure {
   attribute Site Text {
      maxlength = 10;
      required = [true];
   }
   attribute CustomerNo Text {
      maxlength = 30;
      required = [true];
   }
   attribute CurrencyCode Text {
      maxlength = 3;
      required = [true];

   }
   attribute AgreementId Text {
      maxlength = 10;
   }
   attribute EffectiveDate Date;
   attribute Parts List<Structure(SalesPartPriceRequestDataStructure)>;
}

@apidoc {
   @description : Data structure for Parts elements
   @attribute ProductNo : The sales part number for which to retrieve price information.
   @attribute Quantity : The quantity that should be the base for retrieving price information.
   @attribute PriceListNo : The price list number for which price information should be retreived, this can be used if there are multiple valid price lists for a part number.
   @attribute ConditionCode : The condition code for which to retrieve price information. This field refers to the condition code specified for the part. It is only applicable for condition code enabled serial and lot/batch parts.
}
structure SalesPartPriceRequestDataStructure {
   attribute ProductNo Text {
      maxlength = 50;
      required = [true];
   }
   attribute Quantity Integer;
   attribute PriceListNo Text {
      maxlength = 10;
   }
   attribute ConditionCode Text {
      maxlength = 10;
   }
}

@apidoc {
   @description : Data structure for Get Customer Price response
   @attribute Site : The short code of the site at which the part is registered.
   @attribute CustomerNo : The short name or identification number of the customer for which the price is valid for.
   @attribute CurrencyCode : The currency code value for each unit price.
   @attribute ErrorText : This attribute indicates if there are any errors connected to this operations.
   @attribute Parts : Include price information of the selected part in IFS Cloud.
}
structure CustomerPriceResponseStructure {
   attribute Site Text {
      maxlength = 10;
   }
   attribute CustomerNo Text {
      maxlength = 30;
   }
   attribute CurrencyCode Text {
      maxlength = 3;
   }
   attribute ErrorText Text {
      maxlength = 20000;
   }
   attribute Parts List<Structure(SalesPartPriceResponseDataStructure)>;
}

@apidoc {
   @description : Data structure for Parts elements
   @attribute ProductNo : The sales part number or ID.
   @attribute Quantity : The ordered quantity, expressed in sales unit of measure.
   @attribute SaleUnitPrice : The price of a unit that is being sold.
   @attribute SaleUnitPriceIncVat : The price of a unit including the tax amount.
   @attribute CurrencyRate : The exchange rate of the currency.
   @attribute Discount : Any applicable discount, expressed as a percentage.
   @attribute SaleNetPrice : The sales price of a unit. This is the net price, i.e. the discounts have been deducted.
   @attribute PriceSource : The description of the source where the price is agreed. There are six alternatives: Campaign, Agreement, Price List, Sales Part, Price Breaks or Condition Code.
   @attribute PriceSourceId : The short name or identification number of the price source.
   @attribute PriceSourceDescription : The description of the source where the price is agreed.
   @attribute MinimumQty : The minimum quantity of parts that should be ordered for having the appropriate sales price.
}
structure SalesPartPriceResponseDataStructure {
   attribute ProductNo Text {
      maxlength = 50;
   }
   attribute Quantity Integer;
   attribute SaleUnitPrice Number;
   attribute SaleUnitPriceIncVat Number;
   attribute CurrencyRate Number;
   attribute Discount Number;
   attribute SaleNetPrice Number;
   attribute PriceSource Text {
      maxlength = 15;
   }
   attribute PriceSourceId Text {
      maxlength = 25;
   }
   attribute PriceSourceDescription Text {
      maxlength = 1000;
   }
   attribute MinimumQty Integer;
}

@apidoc {
   @description : Data structure for Get Part Availability request
   @attribute Site : The site ID in IFS Cloud. When specified it will retrieve part availability information from this specific site. If no EDI site is setup for the Customer in IFS Cloud, then this field requires a valid site ID.
   @attribute CustomerNo : The short name or identification number of the ordering customer in IFS cloud, for which to retrieve part availability information. If a EDI site is setup for this customer ID in IFS Cloud then this value can be used to retrieve the correct site for the part availability control.
   @attribute AddressId : The address ID of the end customer, for which to retrieve part availability information.
   @attribute CustOwnAddressId : This is the customer's own ID for an address (sometimes referred to as EAN), for which to retrieve part availability information.
   @attribute PartsAvailable : Include sales part, date and quantity information to retrieve part availability details in IFS Cloud.
}
structure PartAvailabilityRequestStructure {
   attribute Site Text {
      maxlength = 5;
      required = [true];

   }
   attribute CustomerNo Text {
      maxlength = 20;
      required = [true];

   }
   attribute AddressId Text {
      maxlength = 50;
   }
   attribute CustOwnAddressId Text {
      maxlength = 100;
   }
   attribute PartsAvailable List<Structure(PartAvailabilityRequestDataStructure)>;
}

@apidoc {
   @description : Data structure for PartsAvailable elements
   @attribute ProductNo : The sales part number for which to retrieve part availability information.
   @attribute WantedQuantity : The quantity which the availability check will be based on.
   @attribute WantedDeliveryDate : Indicates the date on which the customer wants the order to be delivered at the customer's delivery address. It can be a non-working day. The part availability check will be based on this date.
}
structure PartAvailabilityRequestDataStructure {
   attribute ProductNo Text {
      maxlength = 25;
      required = [true];

   }
   attribute WantedQuantity Integer {
      required = [true];
   }
   attribute WantedDeliveryDate Date;
}

@apidoc {
   @description : Data structure for Get Part Availability response
   @attribute Site : The site ID in IFS Cloud. This is the that the availability check is valid for.
   @attribute CustomerNo : The short name or identification number of the ordering customer in IFS cloud.
   @attribute ErrorText : This attribute indicates if there are any errors connected to this operations.
   @attribute PartsAvailable : Include availability information of the selected part in IFS Cloud.
}
structure PartAvailabilityResponseStructure {
   attribute Site Text {
      maxlength = 5;
   }
   attribute CustomerNo Text {
      maxlength = 20;
   }
   attribute ErrorText Text {
      maxlength = 20000;
   }
   attribute PartsAvailable List<Structure(PartAvailabilityResponseDataStructure)>;
}

@apidoc {
   @description : Data structure for PartsAvailable elements
   @attribute ProductNo : The sales part number for which part availability information is valid.
   @attribute PartsAvailableSite : The site to which the available parts belong.
   @attribute QuantityAvailable : Indicate the available quantity for the requested part on desired wanted delivery date.
   @attribute FirstAvailableDate : Indicate when the outstanding desired quantity will be available if there are any shortages.
}
structure PartAvailabilityResponseDataStructure {
   attribute ProductNo Text {
      maxlength = 25;
   }
   attribute PartsAvailableSite Text {
      maxlength = 5;
   }
   attribute QuantityAvailable Integer;
   attribute FirstAvailableDate Date;
}