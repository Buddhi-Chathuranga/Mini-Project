-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-06-12  MaEelk  SCUXXW4-21911, Removed fetching % to Catalog No, Base Price Site and Sales Price Group when opening the Assistant..
-- 2019-04-04  milise  SCUXXW4-18022, Replacing of label = "" with showlabel = false
-- 2018-11-13  MaEelk  SCUXXW4-8852, Converted from dlgUpdateBasePrices using MTG Version: 1.32
--------------------------------------------------------------------------------------
client UpdateBasePrices;
component ORDER;
layer Core;
include fragment SalesPartBasePricePartsSelector;
include fragment UserAllowedSiteLovSelector;
include fragment SalesPriceGroupPartLovSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry UpdateBasePricesNavEntry parent OrderNavigator.PricingBasePrice at index 400 {
      label = "Update Base Prices";
      assistant Assistant;
   }
}
-------------------------------- MAIN PAGES ---------------------------------

-------------------------------- ASSISTANTS ---------------------------------
assistant Assistant using UpdateBasePricesSet {
   label = "Update Base Prices";
   setup SetupDefaultValues {
      variable SalesPriceTypeDbVar {
         type = Text;
      }
      execute {
         set SalesPriceTypeDb = SalesPriceTypeDbVar;
      }
   }
   init command {
      execute {
         call FetchDefaults(SalesPriceTypeDb) into DefaultValueStructure;
         set PricingBaseSelection = DefaultValueStructure.PricingBaseSelection;
         set BaselinePricesSelection = DefaultValueStructure.BaselinePricesSelection;
         set WithPercentageOffset = DefaultValueStructure.WithPercentageOffset;
         set AdjustmentTypeSelection = DefaultValueStructure.AdjustmentTypeSelection;
         set AddToSalesPrices = DefaultValueStructure.AddToSalesPrices;
         set AddToRentalPrices = DefaultValueStructure.AddToRentalPrices;
      }
   }

   steps {
      step {
         group PricingBasedOnGroup;
         group UpdateBaselinePricesGroup;
         group AdjustmentTypeGroup;
         group AdjustmentParametersGroup;
         group FilteredbyGroup;
         group PriceTypeGroup;
         group ExecuteGroup;
      }
      final step {

      }
      cancelled step {

      }
   }
   finish command {
      enabled = [true];
      variable NoOfupdatesVar {
         type = Number;
      }
      variable MsgVar {
         type = Text;

      }
      execute {
         confirm("Do you want to update the sales/rental part base prices?") {

            when OK {
               call UpdateLinePrices(PricingBaseSelection, BaselinePricesSelection, WithPercentageOffset, AdjustmentTypeSelection, PercentageOffset, AmountOffset, CatalogNo, BasePriceSite, SalesPriceGroup, AddToSalesPrices, AddToRentalPrices, RunBackground) into NoOfupdatesVar;
               if [RunBackground = false] {
                  if [NoOfupdatesVar > 0] {
                     alert("Base price updated in ${NoOfupdatesVar} record(s).");
                  }
                  else {
                     alert("No records were updated.");
                  }
               }
               navigate back;
            }
            when CANCEL {
               exit CANCEL;
            }
         }
      }
   }
   cancel command {
      execute {
         navigate back;
      }
   }
   restart command {
      visible = [false];
   }
}

--------------------------------- COMMANDS ----------------------------------

--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------

group PricingBasedOnGroup for UpdateBasePricesVirtual {
   label = "Pricing Based On";
   radiogroup PricingBaseSelection {
      showlabel = false;
      validate command {
         execute {
            if [PricingBaseSelection = "COSTING"] {
               set AddToRentalPrices = false;
            }
         }
      }
   }
}

group ExecuteGroup for UpdateBasePricesVirtual {
   label = "Execute";
   field RunBackground {
      required = [true];
      defaulttoprevious = [true];
   }
}

group UpdateBaselinePricesGroup for UpdateBasePricesVirtual {
   label = "Update Baseline Prices";
   radiogroup BaselinePricesSelection {
      showlabel = false;
      size = FullWidth;
      validate command {
         execute {
            if [BaselinePricesSelection != "OFFSET"] {
               set WithPercentageOffset = 0;
            }
         }
      }
   }
   field WithPercentageOffset {
      editable = [BaselinePricesSelection = "OFFSET"];
      visible = [BaselinePricesSelection = "OFFSET"];
   }
}

group AdjustmentTypeGroup for UpdateBasePricesVirtual {
   label = "Adjustment Type";
   radiogroup AdjustmentTypeSelection {
      showlabel = false;
   }
}

group AdjustmentParametersGroup for UpdateBasePricesVirtual {
   label = "Adjustment Parameters";
   visible = [AdjustmentTypeSelection != "NOUPDATE"];

   field PercentageOffset {
      editable = [AdjustmentTypeSelection != "NOUPDATE"];
   }
   field AmountOffset {
      editable = [AdjustmentTypeSelection != "NOUPDATE"];
   }
}

group FilteredbyGroup for UpdateBasePricesVirtual {
   label = "Filtered by";
   multilov CatalogNoRef with SalesPartBasePricePartsLovList using SalesPartBasePricePartsLovListSet;
   multilov BasePriceSiteRef with UserAllowedSiteLovLovList using UserAllowedSiteLovLovListSet;
   multilov SalesPriceGroupRef with SalesPriceGroupPartLovLovList using SalesPriceGroupPartLovLovListSet;
}

group PriceTypeGroup for UpdateBasePricesVirtual {
   label = "Price Type";
   field AddToSalesPrices;
   field AddToRentalPrices {
      editable = [PricingBaseSelection != "COSTING"];
   }
}

