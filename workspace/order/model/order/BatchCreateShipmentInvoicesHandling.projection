----------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------
-- 181204      RAKUSE  SCUXXW4-8610, Converted dialog 'dlgPsheetBatchCreateShipmentInvoices' using MTG Version: 1.34
----------------------------------------------------------------------------------------------------
projection BatchCreateShipmentInvoicesHandling;
component ORDER;
layer Core;
description "Scheduled Task Assistant handling ''Batch Create Shipment Invoices''";
category Users;
include fragment ScheduledTasksCommon;
include fragment UserSiteCompanyLovSelector;
include fragment CustOrdCust1Selector;

-------------------------------- STRUCTURES----------------------------------

@Override
structure ParametersStructure {
   attribute Company Text;
   attribute Contract Text;
   attribute CustomerNo Text;
   attribute CurrencyCode Text;
   attribute PayTermId Text;
}

--------------------------------- VIRTUALS ----------------------------------

@Override
virtual TaskVirtual using BatchSchedule {
   -- Parameters
   attribute Company Text {
      required = [true];
      label = "Company";
      maxlength = 20;
      // searchable = false;
      format = uppercase;
   }
   attribute Contract Text {
      required = [true];
      label = "Site";
      maxlength = 5;
      // searchable = false;
      format = uppercase;
   }
   attribute CustomerNo Text {
      required = [true];
      label = "Customer No";
      maxlength = 20;
      // searchable = false;
      format = uppercase;
   }
   attribute CurrencyCode Text {
      required = [true];
      label = "Currency";
      maxlength = 20;
      // searchable = false;
      format = uppercase;
   }
   attribute PayTermId Text {
      required = [true];
      label = "Payment Terms";
      maxlength = 20;
      // searchable = false;
      format = uppercase;
   }
   reference DfsCompanyRef(Company) to CompanyFinance(Company) {
      label = "Company";
      // TODO: This reference will have to be one that can take additional "static" values like %.
      // Uncomment the attribute below once the TEUXX-15075/TEUXX-15266 are available.
      // existcheck = [false];
   }
   reference DfsContractRef(Company, Contract) to UserSiteCompanyLov(Company, Contract) {
      label = "Site";
      // TODO: This reference will have to be one that can take additional "static" values like %.
      // Uncomment the attribute below once the TEUXX-15075/TEUXX-15266 are available.
      // existcheck = [false];
   }
   reference DfsCustomerNoRef(CustomerNo) to CustOrdCust1(CustomerNo) {
      label = "Customer";
      // TODO: This reference will have to be one that can take additional "static" values like %.
      // Uncomment the attribute below once the TEUXX-15075/TEUXX-15266 are available.
      // existcheck = [false];
   }
   reference DfsCurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Currency";
      // TODO: This reference will have to be one that can take additional "static" values like %.
      // Uncomment the attribute below once the TEUXX-15075/TEUXX-15266 are available.
      // existcheck = [false];
   }
   reference DfsPayTermIdRef(Company, PayTermId) to PaymentTerm(Company, PayTermId) {
      label = "Payment Terms";
      // TODO: This reference will have to be one that can take additional "static" values like %.
      // Uncomment the attribute below once the TEUXX-15075/TEUXX-15266 are available.
      // existcheck = [false];
   }

   ---

}
