--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-07-03  MaEelk  SCUXXW4-22760, Made preserveprecision = true for ChargeAmount, ChargeAmountInclTax, BaseChargeAmount and BaseChargeAmtInclTax in SalesPromotionChargeList.
-- 2019-07-03          Made preserveprecision = true for Price in SalesCampaignPurchaseOrderLineList.
-- 2019-05-16  MaEelk  SCUXXW4-20235, Sales Campaign Usage Analysis was renamed ad Sales Campaign Analysis.
-- 2019-05-15  MaEelk  SCUXXW4-20235, PurchaseOrderLineStateReferencedFieldSet was overridden to change the label.
-- 2018-07-13  MAHPLK  SCUXXW4-3001, Converted from tbwCampaignPurchOrdLineOverview using MTG Version: 1.23
-- 2018-07-06  MAHPLK  SCUXXW4-9667, Converted from tbwCampaignCustOrdLineOverview using MTG Version: 1.23
-- 2018-07-06  MAHPLK  SCUXXW4-1516, Converted from tbwSalesPromotionCharges using MTG Version: 1.23
--------------------------------------------------------------------------------------

client SalesCampaignUsageAnalysis;
component ORDER;
layer Core;

include fragment UserAllowedSiteLovSelector;
include fragment CustOrdCust2Selector;
include fragment SalesPartActiveLovSelector;
@DynamicComponentDependency PURCH
include fragment PurchaseOrderLineStateBadge;

----------------------------- NAVIGATOR ENTRIES -----------------------------


-------------------------------- MAIN PAGES ---------------------------------
page Form using SalesCampaignSet {
   label = "Sales Campaign Analysis - ${CampaignId}";
   singleton SalesCampaignSingleton;
   tabs {
      tab {
         label = "Parts Analysis";
         arrange {
            list SalesCampaignPartsByQuantityList(SalesCampaignPartsByQuantityArray);
            list SalesCampaignPartsByGrossAmountList(SalesCampaignPartsByGrossAmountArray);
         }
         arrange {
            barchart SalesCampaignPartsByQuantityChart(SalesCampaignPartsByQuantityArray) bind SalesCampaignSingleton;
            barchart SalesCampaignPartsByGrossAmountChart(SalesCampaignPartsByGrossAmountArray) bind SalesCampaignSingleton;
         }
      }
      tab {
         label = "Sales Promotion Charges";
         list SalesPromotionChargeList(SalesPromotionChargeArray);

      }
      tab {
         label = "CO-Lines";
         list SalesCampaignCustOrderLineList(SalesCampaignCustOrderLineArray);
      }
      @DynamicComponentDependency PURCH
      tab {
         label = "PO-Lines";
         list SalesCampaignPurchaseOrderLineList(SalesCampaignPurchaseOrderLineArray);
      }
   }
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------

--------------------------------- SELECTORS ---------------------------------
singleton SalesCampaignSingleton for Campaign;

@Override
selector SalesPartActiveLovSelector for SalesPartActiveLov {
   static CatalogNo;
   static CatalogDesc;
}

---------------------------------- GROUPS -----------------------------------

----------------------------------- LISTS -----------------------------------

list SalesPromotionChargeList for SalesPromotionCharge {
   lov SalesPromotionDealRef with ReferenceSalesPromotionDealSelector {
      label = "Deal";
      description = SalesPromotionDealRef.Description;
   }
   field OrderNoRef {
      size = Small;
   }
   field CustomerOrderRef.Objstate {
      size = Small;
      label = "Order Status";
   }
   badge CustomerOrderRef.Objstate {
      style = TextOnly;
      size = Small;
      label = "Order Status";
      emphasis Progress1 = [CustomerOrderRef.Objstate = "Planned"];
      emphasis Progress2 = [CustomerOrderRef.Objstate = "Released"];
      emphasis Progress4 = [CustomerOrderRef.Objstate = "Reserved"];
      emphasis Progress6 = [CustomerOrderRef.Objstate = "Picked"];
      emphasis Progress8 = [CustomerOrderRef.Objstate = "PartiallyDelivered"];
      emphasis Progress10 = [CustomerOrderRef.Objstate = "Delivered"];
      emphasis Progress12 = [CustomerOrderRef.Objstate = "Invoiced"];
      emphasis StateCancelled = [CustomerOrderRef.Objstate = "Cancelled"];
      emphasis StateBlocked = [CustomerOrderRef.Objstate = "Blocked"];

   }
   field SequenceNo;
   lov CustomerNoRef with ReferenceCustOrdCust2Selector {
      label = "Customer";
      description = CustomerName;
   }
   lov ContractRef with ReferenceUserAllowedSiteLovSelector {
      size = Small;
   }
   lov ChargeTypeRef with ReferenceSalesChargeTypeSelector {
      description = ChargeTypeDesc;
   }
   field ChargeAmount {
      preserveprecision = [true];

   }
   field ChargeAmountInclTax {
      preserveprecision = [true];

   }
   field CustomerOrderRef.CurrencyCode {
      size = Small;
      label = "Currency";
   }
   field BaseChargeAmount {
      preserveprecision = [true];

   }
   field BaseChargeAmtInclTax {
      preserveprecision = [true];

   }
   field ChargedQty;
   field InvoicedQty;
   field QtyReturned;
   field PriceUnitMeasRef {
      size = Small;
   }
   field TotalBaseChargedAmount;
   field TotalChargedAmount;
   field TotalGrossAmountBase;
   field TotalGrossAmountCurr;
   lov TaxCodeRef with ReferenceStatutoryFeeSelector {
      description = TaxCodeRef.Description;
   }
}

list SalesCampaignCustOrderLineList for SalesCampaignCustOrderLine {
   field OrderNo {
      size = Small;
   }
   field LineNo {
      size = Small;
   }
   field RelNo {
      size = Small;
   }
   badge CustomerOrderLineRef.Objstate {
      style = TextOnly;
      size = Small;
      label = "Status";
      emphasis Progress2 = [Objstate = "Released"];
      emphasis Progress4 = [Objstate = "Reserved"];
      emphasis Progress6 = [Objstate = "Picked"];
      emphasis Progress8 = [Objstate = "PartiallyDelivered"];
      emphasis Progress10 = [Objstate = "Delivered"];
      emphasis Progress12 = [Objstate = "Invoiced"];
      emphasis StateCancelled = [Objstate = "Cancelled"];

   }
   lov CustomerInfoRef with ReferenceCustOrdCust2Selector {
      label = "Customer";
      description = CustomerInfoRef.Name;
      contactwidget {
         enabled = [CustomerNo != null];
         source = Customer;
      }
   }
   field Contract {
      size = Small;
   }
   field CatalogNo {
      size = Small;
   }
   field CatalogDesc;
   field BuyQtyDue {
      size = Small;
   }
   field NetAmountCurr;
   field NetAmountBase;
   field GrossAmountCurr;
}

@DynamicComponentDependency PURCH
list SalesCampaignPurchaseOrderLineList for SalesCampaignPurchaseOrderLine {
   field OrderNo {
      size = Small;
   }
   field LineNo {
      size = Small;
   }
   field ReleaseNo {
      size = Small;
   }
   field Contract {
      size = Small;
   }
   lov VendorNoRef  with ReferenceSupplierSelector {
      description = VendorNoRef.VendorName;
      contactwidget {
         enabled = [VendorNo != null];
         source = Supplier;
      }
   }
   fieldset PurchaseOrderLineStateReferencedFieldSet;
   field PartNo {
      size = Small;
   }
   field Description;
   field BuyQtyDue;
   field Price {
      preserveprecision = [true];
   }
}

list SalesCampaignPartsByQuantityList for SalesCampaignPartsByQuantity {
   label = "Top 10 Sales Parts by Quantity";
   field CatalogNo;
   field CatalogDesc;
   field TotalBuyQtyDue;
}

list SalesCampaignPartsByGrossAmountList for SalesCampaignPartsByGrossAmount {
   label = "Top 10 Sales Parts by Gross Amount";
   field CatalogNo;
   field CatalogDesc;
   field TotalGrossAmountCurr;
}
----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------
barchart SalesCampaignPartsByQuantityChart for SalesCampaignPartsByQuantity {
   label = "Sales Parts by Quantity";
   height = medium;
   x {
      label = "Sales Part";
      value CatalogNo;
   }
   y {
      label = "Sales Quantity";
      value TotalBuyQtyDue;
      topn = Count(10);
   }
}

barchart SalesCampaignPartsByGrossAmountChart for SalesCampaignPartsByGrossAmount {
   label = "Sales Parts by Gross Amount";
   height = medium;
   x {
      label = "Sales Part";
      value CatalogNo;
   }
   y {
      label = "Gross Amt/Curr";
      value TotalGrossAmountCurr;
      topn = Count(10);
   }
}

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------
@Override
@DynamicComponentDependency PURCH
fieldset PurchaseOrderLineStateReferencedFieldSet {
   badge PurchaseOrderLineRef.Objstate {
      label = "Status";

      emphasis Progress3 = [PurchaseOrderLineRef.Objstate = "Released"];
      emphasis StateBlocked = [PurchaseOrderLineRef.Objstate = "Stopped"];
      emphasis Progress12 = [PurchaseOrderLineRef.Objstate = "Closed"];
      emphasis Progress5 = [PurchaseOrderLineRef.Objstate = "Confirmed"];
      emphasis Progress7 = [PurchaseOrderLineRef.Objstate = "Arrived"];
      emphasis Progress10 = [PurchaseOrderLineRef.Objstate = "Received"];
      emphasis StateCancelled = [PurchaseOrderLineRef.Objstate = "Cancelled"];

      style = TextOnly;
   }
}
----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

