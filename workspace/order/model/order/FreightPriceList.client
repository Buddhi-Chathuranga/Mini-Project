--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2021-11-12  KiSalk  Bug 161030(SC21R2-5473), Passed identifier value "FreightPriceList" to RemoveInvalidPricesDialog and RemoveBasePrices.
-- 2021-09-08  NiRalk  SC21R2-2388, Removed the size of ContractRef in FreightPriceListGroup.
-- 2020-02-08  ErRalk  SC2020R1-12457, Modified FreightPriceListSelector to add status badge color.
-- 2020-02-19  RaVdlk  SCXTEND-2213, Enabled Duplicate functionality
-- 2019-10-31  chlelk  SCXTEND-1324, The startupmode was set to "Search"
-- 2019-05-29  ChBnlk  SCUXXW4-18662, Added new form FormForCo in order to navigate to the freight information properly based on the company.
-- 2019-12-11  ShPrlk  SCUXXW4-17432, Reduced the content in the record selector as it was too long.
-- 2018-12-16  LaThlk  SCUXXW4-891, Added tbwFreightPriceListSite using MTG Version: 1.33.
-- 2018-12-19  Nipklk  SCUXXW4-884, Passed PriceListNo to copyoncruddefault() method in charges tab.
-- 2018-12-18  ChBnlk  SCUXXW4-9187, Changed the implementation of the RemoveInvalidPricesCommand in order to execute it properly.
-- 2018-12-17  Nipklk  SCUXXW4-884, Renamed imported FreightPriceList fragment to FreightPriceListLineTab and called copyoncruddefault() in charges tab.
-- 2018-12-14  WaSalk  SCUXXW4-8275, Added command to copy freight price list dialog and included CopyFreightPriceListDialog fragment.
-- 2018-12-11  ChBnlk  SCUXXW4-9187, Changed the design and Implemented the commands related to frmFreightPriceList.
-- 2018-12-01  ShPrlk  SCUXXW4-894, Added tbwFreightPriceListZone using MTG Version: 1.33.
-- 2018-11-29  Nipklk  SCUXXW4-884,  Added tbwFreightPriceListLine using MTG Version: 1.33.
-- 2018-11-27  ChBnLK  SCUXXW4-9187, Converted from frmFreightPriceList using MTG Version: 1.33.
--------------------------------------------------------------------------------------

client FreightPriceList;
component ORDER;
layer Core;
projection FreightPriceListHandling;
include fragment UserSiteCompanyLovSelector;
include fragment RemoveInvalidPricesDialog;
include fragment FreightPriceListLineTab;
include fragment FreightPriceListZoneTab;
include fragment CopyFreightPriceListDialog;
include fragment FreightPriceListSiteTab;
include fragment SiteClusteDialog;
include fragment SiteClusterNodeJoinSelector;
include fragment SiteClusterLevelLovSelector;
warningsenabled = FreightPriceList;


-------------------------------- MAIN PAGES ---------------------------------


--------------------------------- COMMANDS ----------------------------------


----------------------------- VISUAL COMPONENTS -----------------------------


---------------------------- GENERATED FROM APF -----------------------------
// MTG Version: 1.33
// Enterprise Explorer Source: frmFreightPriceList
// Language: en-US

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry FreightPriceListNavEntry parent OrderNavigator.TransportationAdministrationFreight at index 200 {
      label = "Freight Price List";
      page Form home FreightPriceList;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using FreightPriceListSet {
   label = "Freight Price List";
   startupmode = search;
   stateindicator FreightPriceListStateIndicator;
   crudactions {
      duplicate {
         enabled = [true];
      }
   }

   searchcontext FreightPriceListSearchContext {
      defaults = FreightPriceListSearchContextDefaults();
   }

   selector FreightPriceListSelector;

   group FreightPriceListGroup;
   group FreightPriceListDeliveryInfo;

   arrange {
      group FreightPriceListFreightInfo;
      group FreightPriceListIndications;
   }

   tabs {
      tab {
         label = "Charges";
         list FreightPriceListLineList using FetchFreightPriceListLines(PriceListNo, FreightMapId, searchcontext.FreightPriceListSearchContext.ShowDetails, searchcontext.FreightPriceListSearchContext.ValidDate) {
            copyoncruddefault(FreightMapId, PriceListNo) to(FreightMapId, PriceListNo);
         }
      }
      tab {
         label = "Valid for Site";
         list FreightPriceListSiteList(FreightPriceListSiteArray);
      }
      tab {
         label = "Zone Info";
         list FreightPriceListZoneList(FreigthPriceListZoneArray);
      }
   }

   commandgroup CommandGroupCmdGroup {
      label = "States";
      command ActivateCommand;
      command CloseCommand;
   }

   commandgroup CommandGroup2CmdGroup {
      label = "Operations";
      command CopyPriceListCommand;
      command RemoveInvalidPricesCommand;
   }

}

page FormForCo using FreightPriceListSetForCo {
   label = "Freight Price List";
   stateindicator FreightPriceListStateIndicator;

   searchcontext FreightPriceListSearchContext {
      defaults = FreightPriceListSearchContextDefaults();
   }

   selector FreightPriceListSelector;

   group FreightPriceListGroup;
   group FreightPriceListDeliveryInfo;

   arrange {
      group FreightPriceListFreightInfo;
      group FreightPriceListIndications;
   }

   tabs {
      tab {
         label = "Charges";
         list FreightPriceListLineList using FetchFreightPriceListLines(PriceListNo, FreightMapId, searchcontext.FreightPriceListSearchContext.ShowDetails, searchcontext.FreightPriceListSearchContext.ValidDate) {
            copyoncruddefault(FreightMapId, PriceListNo) to(FreightMapId, PriceListNo);
         }
      }
      tab {
         label = "Valid for Site";
         list FreightPriceListSiteList(FreightPriceListSiteArray);
      }
      tab {
         label = "Zone Info";
         list FreightPriceListZoneList(FreigthPriceListZoneArray);
      }
   }

   commandgroup CommandGroupCmdGroup {
      label = "States";
      command ActivateCommand;
      command CloseCommand;
   }

   commandgroup CommandGroup2CmdGroup {
      label = "Operations";
      command CopyPriceListCommand;
      command RemoveInvalidPricesCommand;
   }

}
-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command ActivateCommand for FreightPriceList {
   label = "Set Active";

   enabled = [Objstate in("Planned", "Closed") and ActiveAllowed = 1];

   execute {
      call Activate();
      refresh;
   }
}

command CloseCommand for FreightPriceList {
   label = "Close";
   enabled = [Objstate in("Planned", "Active")];
   execute {
      call Close();
      refresh;
   }
}

command CopyPriceListCommand for FreightPriceList {
   label = "Copy Price List";
   variable PriceListTypeVar {
      type = Text;
   }
   enabled = [true];
   execute {
      set PriceListTypeVar = "FreightPriceList";
      dialog CopyFreightListDialog(PriceListNo, Description, PriceListTypeVar) {
         when CANCEL {
            exit CANCEL;
         }
      }
   }
}


command RemoveInvalidPricesCommand for FreightPriceList {
   label = "Remove Invalid Prices";

   variable KeepFromDt {
      type = Date;
   }

   variable RemovedItemsNum {
      type = Number;
   }
   variable SalesPriceSelectionVar {
      type = Text;
   }
   enabled = [Objstate != "Closed"];

   bulkexecute {
      stringify(records, "PRICE_LIST_NO=${PriceListNo}^", JSON) into SalesPriceSelectionVar;
      dialog RemoveInvalidPricesDialog("FreightPriceList") into(KeepFromDt) {
         when OK {
            call RemoveBasePrices(SalesPriceSelectionVar, KeepFromDt, "FreightPriceList") into RemovedItemsNum;
            if [RemovedItemsNum > 0] {
               alert("${RemovedItemsNum} record(s) removed.");
            }
            else
               {
               alert("No records were removed.");
            }
         }
      }
   }
}


--------------------------------- SELECTORS ---------------------------------
@Override
selector FreightPriceListSelector for FreightPriceList {
   label = "${PriceListNo} - ${Description}";
   badge Objstate {
      label = "Status";
      emphasis Progress1 = [Objstate = "Planned"];
      emphasis Progress6 = [Objstate = "Active"];
      emphasis Progress12 = [Objstate = "Closed"];
      style = TextOnly;
   }
   static Description;
}

---------------------------------- GROUPS -----------------------------------
group FreightPriceListGroup for FreightPriceList {
   label = "";

   field PriceListNo {
      size = Small;
   }
   field Description {
      size = Medium;
   }
   lov ContractRef with ReferenceUserSiteCompanyLovSelector {
      description = ContractRef.ContractDesc;
      preview = UserSiteCompanyLovCard;


      validate command {
         execute {
            call ValidateContract(Contract) into UsePriceInclTax;
         }
      }
   }
}

group FreightPriceListDeliveryInfo for FreightPriceList {
   label = "Delivery Information";

   lov ShipViaCodeRef with ReferenceMpccomShipViaSelector {
      size = Medium;
      description = ShipViaCodeRef.Description;
      validate command {
         execute {
            call ValidateShipViaCode(ShipViaCode, Contract) into FreightMapId;
         }
      }
   }

   lov FreightMapIdRef with ReferenceFreightMapSelector using GetFreightMapList(Contract, ShipViaCode) {
      description = FreightMapIdRef.Description;
      size = Medium;
   }

   lov ForwarderIdRef with ReferenceForwarderInfoSelector {
      size = Medium;
      description = ForwarderInfoRef.Name;
   }
}

group FreightPriceListFreightInfo for FreightPriceList {
   label = "Freight Charge Information";

   lov ChargeTypeRef with ReferenceSalesChargeTypeSelector using GetChargeTypeList {
      description = ChargeTypeRef.ChargeTypeDesc;
      size = Medium;
   }

   field ChargeTypeRef.SalesUnitMeas {
      label = "UOM";
      size = Small;
   }

   field FreightBasis {
      size = Small;
   }
}

group FreightPriceListIndications for FreightPriceList {
   label = "Indicators";


   field ChargeTypeRef.UnitCharge {
      size = Medium;
   }

   field UsePriceInclTax {
      size = Medium;
   }

}
----------------------------------- LISTS -----------------------------------

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

@Override
stateindicator FreightPriceListStateIndicator for FreightPriceList {
   state "Planned" {
      completed = 10%;
      emphasis Progress1 = [Objstate = "Planned"];
   }
   state "Active" {
      completed = 60%;
      emphasis Progress6 = [Objstate = "Active"];
   }
   state "Closed" {
      completed = 100%;
      emphasis Progress12 = [Objstate = "Closed"];
   }
}


------------------------------ SEARCH CONTEXTS ------------------------------

searchcontext FreightPriceListSearchContext for FreightPriceListSearchContextStructure {
   label = "";
   field ShowDetails {
      label = "View Option";
      validate command {
         execute {
            call FetchValidDate(searchcontext.FreightPriceListSearchContext.ShowDetails) into ValidDate;
         }
      }
   }
   field ValidDate {
      editable = [ShowDetails = "ViewWithValidDate"];
   }
}

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

--------------------------------- CHECKLIST ---------------------------------

