--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-07-02  Cpeilk  SCUXXW4-21090, Included fragment FreightPriceListLovSelector.
-- 2019-03-12  Kubalk  SCUXXW4-17239, Dependency annotations added.
-- 2018-05-10  SeJalk  SCUXXW4-881, Converted from tbwFreightPriceList using MTG Version: 1.17
--------------------------------------------------------------------------------------

projection FreightPriceListsHandling;
component ORDER;
layer Core;
description "Use this API to view details of all freight price lists for a company. Observe that you can view only the price lists belonging to a company at a time. When working with several companies, you might need to change the company to see other price lists.";
category Users;
include fragment CompanyHavingSiteSelector;
include fragment RemoveInvalidPricesDialog;
include fragment FreightPriceListLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset FreightPriceListBases for FreightPriceListBase {
   context Company(Company);
}

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity FreightPriceListBase {
   crud = Read;
   from = "freight_price_list_base_all";
   attribute Contract Text {
      label = "Site";
   }

   attribute ShipViaCode Text {
      label = "Ship-Via Code";
   }
   attribute SupplierId Text {
      fetch = "SUPPLIER_ID";
      label = "Supplier";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   @DynamicComponentDependency PURCH
   attribute SupplierName Text {
      fetch = "Supplier_API.Get_Vendor_name(SUPPLIER_ID)";
      label = "Supplier Name";
      maxlength = 100;
      // searchable = false;
      editable = [false];
   }
   attribute UsePriceInclTaxDb Boolean("TRUE", "FALSE") {
      fetch = "USE_PRICE_INCL_TAX_DB";
      label = "Use Price Incl Tax";
      required = [true];
      editable = [false];
   }
   attribute ForwarderId Text {
      maxlength = 80;
   }
   reference SalesChargeTypeRef(Contract, ChargeType) to SalesChargeType(Contract, ChargeType);
   reference ForwarderInfoRef(ForwarderId) to ForwarderInfo(ForwarderId);
   reference ContractRef(Contract) to CompanyHavingSite(Company) {
      label = "Site";
   }
   reference ShipViaCodeRef(ShipViaCode) to MpccomShipVia(ShipViaCode) {
      label = "Ship-Via Code";
   }
   reference FreightMapIdRef(FreightMapId) to FreightMap(FreightMapId) {
      label = "Freight Map ID";
   }
   reference ChargeTypeRef(ChargeType) to SalesChargeType(ChargeType) {
      label = "Charge Type";
   }
   reference SupplierIdRef(SupplierId) to SupplierInfo(SupplierId) {
      label = "Supplier";
   }
   reference CompanyRef(Company) to CompanyFinance(Company) {
      label = "Company";
   }
   reference PriceListNoRef(PriceListNo) to FreightPriceListLov(PriceListNo) {
      label = "Price List No";
   }
}
