--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-03-11  RasDlk  SCUXXW4-17240, Added Dependency Annotation for the relevant fields.
-- 2018-11-20  KHVESE  SCUXXW4-9750, SCUXXW4-854, Included fragments PrepaymentBasedInvoiceList and LedgerItemCuDetailsLovSelector from payled.
-- 2018-09-27  KHVESE  SCUXXW4-9750, SCUXXW4-854, Modified InvoiceInfoCommand to remove unnecessary validation for Check_Invoice_Exist_For_Co (The condition is always true). Also removed plsvc file.
-- 2018-09-24  HPETSE  SCUXXW4-9310, SCUXXW4-9750, SCUXXW4-854, Changed editmode, fieldsizes and state colors
-- 2018-09-19  KHVESE  SCUXXW4-9310, SCUXXW4-9750, SCUXXW4-854, Converted from frmPrepaymentBasedInvoice, tbwConnectedPrepayInvoices, tbwDeliveryInvoices using MTG Version: 1.29
--------------------------------------------------------------------------------------

client HandlePrepaymentBasedInvoice;
component ORDER;
layer Core;
include fragment CustOrdCust2Selector;
@DynamicComponentDependency PAYLED
include fragment PrepaymentBasedInvoiceList;
@DynamicComponentDependency PAYLED
include fragment LedgerItemCuDetailsLovSelector;
warningsenabled = CustomerOrder;

----------------------------- NAVIGATOR ENTRIES -----------------------------

navigator {
   entry HandlePrepaymentBasedInvoiceNavEntry parent OrderNavigator.InvoicingPrepaymentBasedInvoices at index 200 {
      label = "Handle Prepayment Based Invoice";
      page Form;
   }
}

-------------------------------- MAIN PAGES ---------------------------------

page Form using CustomerOrderSet {
   label = "Handle Prepayment Based Invoice";
   startupmode = search;
   selector CustomerOrderSelector;
   arrange {
      group PrepaymentBasedInvoiceGroup;
      group PrepaymentBasedInvoiceAmountGroup;
   }

   group PrepaymentBasedInvoiceEditableGroup;
   tabs {
      tab {
         label = "Prepayment Invoices";
         list ConnectedPrepayInvoicesList(PrepaymentInvoices);
      }
      tab {
         label = "Delivery Invoices";
         list DeliveryInvoicesList(DeliveryInvoices);
      }
      @DynamicComponentDependency PAYLED
      tab {
         label = "Connected Payments";
         list ConnectedPaymentsList(OnAccountLedgerItems);
      }
   }
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- SELECTORS ---------------------------------

@Override
selector CustomerOrderSelector for CustomerOrder {
   label = "${OrderNo}";
   static OrderNo;
   badge Objstate {
      label = "Status";
      emphasis Progress1 = [Objstate = "Planned"];
      emphasis Progress3 = [Objstate = "Released"];
      emphasis Progress5 = [Objstate = "Reserved"];
      emphasis Progress7 = [Objstate = "Picked"];
      emphasis Progress8 = [Objstate = "PartiallyDelivered"];
      emphasis Progress10 = [Objstate = "Delivered"];
      emphasis Progress12 = [Objstate = "Invoiced"];
      emphasis StateBlocked = [Objstate = "Blocked"];
      emphasis StateCancelled = [Objstate = "Cancelled"];
      style = TextOnly;
   }
}

---------------------------------- GROUPS -----------------------------------

group PrepaymentBasedInvoiceGroup for CustomerOrder {
   label = "";
   field OrderNoRef;
   lov InvoiceCustomerRef with ReferenceCustOrdCust2Selector {
      contactwidget {
         enabled = [true];
         source = Customer;
      }
      description = InvoiceCustomerRef.Name;
   }
   field ContractRef {
      size = Small;
   }
}


group PrepaymentBasedInvoiceAmountGroup for CustomerOrder {
   label = "Amounts";
   field CurrencyCodeRef {
      size = Small;
   }
   @DynamicComponentDependency PAYLED
   field PrepaidAmt {
      size = Small;
      searchable = false;
   }
   field InvoicedAmt {
      size = Small;
      searchable = false;
   }
   field ConsumedAmt {
      size = Small;
      searchable = false;
   }

}

group PrepaymentBasedInvoiceEditableGroup for CustomerOrder {
   label = "Prepayment Settings";
   field TotalGrossInclChrg {
      size = Small;
      searchable = false;
   }
   field ProposedPrepaymentAmount {
      size = Small;
      editable = [Objstate in("Planned", "Released", "Reserved", "Picked", "PartiallyDelivered")];
      validate command {
         execute {
            if [ProposedPrepaymentAmount > 0 and  TotalGrossInclChrg > 0] {
               set ProposedPrepaymentPercentage = "#{(ProposedPrepaymentAmount / TotalGrossInclChrg)}";
            }
            else {
               set ProposedPrepaymentPercentage = 0;
            }
         }
      }
   }

   field ProposedPrepaymentPercentage {
      size = Small;
      editable = [Objstate in("Planned", "Released", "Reserved", "Picked", "PartiallyDelivered")];
      validate command {
         execute {
            if [ProposedPrepaymentPercentage >= 0] {
               set ProposedPrepaymentAmount = "#{(TotalGrossInclChrg * ProposedPrepaymentPercentage)}";
            }
            else {
               warning("Incorrect Percentage Value.");
            }
         }
      }
   }
   field PrepaymentApproved {
      size = Small;
   }
   field ExpectedPrepaymentDate {
      editable = [Objstate in("Planned", "Released", "Reserved", "Picked", "PartiallyDelivered")];
   }
   field WantedDeliveryDate;
}

----------------------------------- LISTS -----------------------------------

list ConnectedPrepayInvoicesList for CustomerOrderInvHead {
   field SeriesId {
      size = Small;
   }
   field InvoiceNo {
      size = Small;
   }
   field InvoiceType;
   field InvoiceTypeDescription {
      size = Large;
   }
   field InvoiceDate;
   badge InvoiceStatus {
      emphasis Progress1 = [InvoiceStatus = "Preliminary"];
      emphasis Progress3 = [InvoiceStatus = "Printed"];
      emphasis StateCancelled = [InvoiceStatus = "Cancelled"];
      emphasis Progress5 = [InvoiceStatus = "Posted"];
      emphasis Progress7 = [InvoiceStatus = "PostedAuth"];
      emphasis Progress9 = [InvoiceStatus = "PartlyPaidPosted"];
      emphasis Progress12 = [InvoiceStatus = "PaidPosted"];
      style = TextOnly;
   }
   @DynamicComponentDependency PAYLED
   currency GrossAmount(Currency);
   @DynamicComponentDependency PAYLED
   currency VatAmount(Currency);
   @DynamicComponentDependency PAYLED
   currency NetAmount(Currency);
   command InvoiceInfoCommand {
      label = "Invoice Info";
   }
}

list DeliveryInvoicesList for CustomerOrderInvHead {
   field SeriesId {
      size = Small;
   }
   field InvoiceNo {
      size = Small;
   }
   field InvoiceType;
   field InvoiceTypeDescription {
      size = Large;
   }
   field InvoiceDate;
   badge InvoiceStatus {
      emphasis Progress1 = [InvoiceStatus = "Preliminary"];
      emphasis Progress3 = [InvoiceStatus = "Printed"];
      emphasis StateCancelled = [InvoiceStatus = "Cancelled"];
      emphasis Progress5 = [InvoiceStatus = "Posted"];
      emphasis Progress7 = [InvoiceStatus = "PostedAuth"];
      emphasis Progress9 = [InvoiceStatus = "PartlyPaidPosted"];
      emphasis Progress12 = [InvoiceStatus = "PaidPosted"];
      style = TextOnly;
   }
   @DynamicComponentDependency PAYLED
   currency GrossAmount(Currency);
   @DynamicComponentDependency PAYLED
   currency VatAmount(Currency);
   @DynamicComponentDependency PAYLED
   currency NetAmount(Currency);
   command InvoiceInfoCommand {
      label = "Invoice Info";
   }
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

--------------------------------- COMMANDS ----------------------------------

command InvoiceInfoCommand for CustomerOrderInvHead {
   label = "Invoice Info";
   mode = SelectedRecords;
   enabled = [true];
   bulkexecute {
      bulknavigate "page/CustomerOrderInvoice/Form?$filter=Company eq $[Company] and InvoiceId eq $[InvoiceId]";
   }
}
