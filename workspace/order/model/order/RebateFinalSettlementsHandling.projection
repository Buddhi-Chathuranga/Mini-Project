--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-05-21  MaEelk  SCUXXW4-1326, Concatenating Descriptions.
-- 2018-04-26  MaEelk  SCUXXW4-1326, Converted from tbwRebateFinalSettlement using MTG Version: 1.16
--------------------------------------------------------------------------------------
projection RebateFinalSettlementsHandling;
component ORDER;
layer Core;
description "Use this window to view all aggregated, final settlement details.";
category Users;
----------------------------- MAIN ENTRY POINTS -----------------------------
entityset RebateFinalAggHeads for RebateFinalAggHead {
   context Company(Company);

}

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity RebateFinalAggHead {
   crud = Read, Update;
   attribute AggregationNo Number {
      label = "Settlement";
      required = [true];
   }
   attribute CustomerNo Text {
      label = "Customer";
      editable = [ETag = null];
   }
   attribute CustomerName Text {
      fetch = "CUST_ORD_CUSTOMER_API.Get_Name(CUSTOMER_NO)";
      label = "Customer Name";
      editable = [false];
   }
   attribute TotalFinalRebateAmtCurr Number {
      fetch = "REBATE_FINAL_AGG_HEAD_API.Get_Total_Rebate_Amt(AGGREGATION_NO)";
      label = "Total Final Rebate Amt/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute FromDate Date {
      editable = [ETag = null];
   }
   attribute ToDate Date {
      editable = [ETag = null];
   }
   attribute Invoiced Boolean("TRUE", "FALSE") {
      fetch = "REBATE_FINAL_AGG_HEAD_API.Get_Invoiced(AGGREGATION_NO)";
      label = "Invoiced";
      editable = [false];
      required = [true];
   }
   attribute DoNotInvoiceDb Boolean("TRUE", "FALSE") {
      fetch = "DO_NOT_INVOICE_DB";
      label = "Do Not Invoice";
      required = [true];
   }
   attribute Company Text {
      editable = [ETag = null];
   }
   reference RebateAgreementRef(AgreementId) to RebateAgreement(AgreementId);
   reference HierarchyIdRef(HierarchyId) to CustomerHierarchy(HierarchyId);
   reference CustomerLevelRef(HierarchyId, CustomerLevel) to CustomerHierarchyLevel(HierarchyId, CustomerLevel);
}
