--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2020-11-09  RavDlk  SC2020R1-11228, Handled enumeration 'DispatchAdviceSent'
-- 2019-09-09  YasMlk  SCFALL19-225, Removed projection attributes and added get methods for DelivertoCustomerName and CustomerName.
-- 2019-06-15  RoJalk  SCUXXW4-21908, Added RefreshPage method.
-- 2019-06-06  ErRalk  SCUXXW4-21905, Added CustOrdCustomerRef to concatenate customer.
-- 2019-05-27  RoJalk  SCUXXW4-21689, Added the where clause to filter on objstate.
-- 2018-07-25  RaVdlk  SCUXXW4-1244, Added the actions GetReportResultKeys and ProceedAfterPrint
-- 2018-07-11  RaVdlk  SCUXXW4-1244, Converted from tbwPrintDeliveryNote using MTG Version: 1.23
--------------------------------------------------------------------------------------

projection PrintDeliveryNoteForCustomerOrders;
component ORDER;
layer Core;
description "Use this activity to print a delivery note. When the ordered parts are ready for delivery, it is possible to create and print a delivery note that can accompany the goods to the customer.";
category Users;

include fragment CustomerTemplateLovSelector;
-- Command "Send Order"
include fragment CustomerOrderMessageHandlerDialog;
include fragment CustomerOrderDelivNoteUivInitialCheck;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset DeliveryNoteSet for DeliveryNote;

---------------------------------- QUERIES ----------------------------------
query DeliveryNote {
   from = "customer_order_deliv_note_uiv";
   where = "OBJSTATE IN ('Created', 'Printed')";
   keys = DelnoteNo {
      where = "DELNOTE_NO = :DelnoteNo";
   }

   attribute OrderNo Text {
      fetch = "ORDER_NO";
      format = uppercase;
   }
   attribute CustomerNo Text {
      fetch = "CUSTOMER_NO";
      format = uppercase;
   }
   attribute DeliverToCustomerNo Text {
      fetch = "DELIVER_TO_CUSTOMER_NO";
      label = "Deliver-to-Customer No";
      format = uppercase;
   }
   attribute DelnoteNo Text {
      fetch = "DELNOTE_NO";
      label = "Delivery Note No";
      format = uppercase;
   }
   attribute AltDelnoteNo Text {
      fetch = "ALT_DELNOTE_NO";
      label = "Alt Delivery Note No";
   }
   attribute CreateDate Date {
      fetch = "CREATE_DATE";
      label = "Created";
   }
   attribute Description Text {
      fetch = "DELIVERY_ROUTE_API.Get_Description(CUSTOMER_ORDER_API.Get_Route_Id(ORDER_NO))";
   }
   attribute DispatchAdviceSent Enumeration(DispatchAdviceSent) {
      fetch = "DISPATCH_ADVICE_SENT_DB";
      label = "Dispatch Advice Sent";
      required = [true];

   }
   attribute MediaCode Text {
      fetch = "CUST_ORD_CUSTOMER_API.Get_Default_Media_Code(CUSTOMER_NO, 'DESADV')";
   }
   attribute NoDelnoteCopies Number {
      fetch = "NVL(Cust_Ord_Customer_API.Get_No_Delnote_Copies(CUSTOMER_NO), 0)";
   }
   attribute CustomerOrderStatus Text {
      fetch = "Customer_Order_API.Get_State(ORDER_NO)";
   }
   attribute State Text {
      fetch = "STATE";
      label = "Status";
   }
   attribute AllowedToSend Number {
      fetch = "Customer_Order_Transfer_API.Allowed_To_Send(ORDER_NO, 'DIRDEL')";
   }
   attribute RouteId Text;

   reference CustomerOrderRef(OrderNo) to CustomerOrder(OrderNo);
   reference DeliverToCustomerNoRef(DeliverToCustomerNo) to CustomerTemplateLov(TemplateCustomerId) {
      label = "Deliver-to-Customer No";
   }
   reference CustOrdCustomerRef(CustomerNo) to CustOrdCustomer(CustomerNo) {
      label = "Customer";
   }
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Route ID";
   }
   action ProceedAfterPrint {
      parameter OrderNo   Text;
   }
}

---------------------------------- ACTIONS ----------------------------------
action StartPrintProformaInvoice {
   initialcheck implementation;
   parameter Selection Text;
}
action GetReportResultKeys Text {
   initialcheck implementation;
   parameter FullSelection Text;
}
action RefreshPage {
   initialcheck none;
   ludependencies = DeliveryNote;
}

--------------------------------- FUNCTIONS ---------------------------------
function GetDelivertoCustomerName Text {
   parameter DelivertoCustomerNo Text;
}
function GetCustomerName Text {
   parameter CustomerNo Text;
}
-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------
