-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-04-04  milise  SCUXXW4-18022, Replacing of label = "" with showlabel = false
-- 2018-10-20  MaEelk  SCUXXW4-8077, Added Multi Selector LOV functionality to Part No and Base Price Site.
-- 2018-10-17  MaEelk  SCUXXW4-8077, Converted from dlgAddSalesPartToPriceList using MTG Version: 1.31
--------------------------------------------------------------------------------------
fragment AddSalesPartToSalesPriceListDialog;
component ORDER;
layer Core;
description "Use this API to addnew sales parts to a sales price list";

include fragment SalesPriceListInitialCheck;

----------------------------- CLIENT FRAGMENTS ------------------------------
--------------------------------- COMMANDS ----------------------------------
command Ok for AddSalesPartToPriceListStructure {
   enabled = [(CatalogNo != null) and(BasePriceSite != null)];
   variable NoOfNewLinesVar {
      type = Number;
   }
   execute {
      confirm("Do you want to add the new sales part(s) to the price list?") {
         when OK {
            call AddPartToPriceList(PriceListNo, CatalogNo, ValidFromDate, BasePriceSite, DiscountType, Discount, PercentageOffset, AmountOffset, SalesPriceGroupId, AddToSalesPrices, AddToRentalPrices, ValidToDate, ExecutionTypeSelection) into NoOfNewLinesVar;
            if [ExecutionTypeSelection = "ONLINE"] {
               if [NoOfNewLinesVar > 0] {
                  alert("${NoOfNewLinesVar} New record(s) added to the price list.");
               }
               else {
                  alert("No records have been added to the price list.");
               }
            }
            exit OK;
         }
      }
   }
}

command InitCommand for AddSalesPartToPriceListStructure {
   execute {
      call FetchDefaults(PriceListNo) into DefaultValueStruc;
      set CatalogNo = DefaultValueStruc.CatalogNo;
      set ValidFromDate = DefaultValueStruc.ValidFromDate;
      set BasePriceSite = DefaultValueStruc.BasePriceSite;
      set PercentageOffset = DefaultValueStruc.PercentageOffset;
      set AmountOffset = DefaultValueStruc.AmountOffset;
      set AddToSalesPrices = DefaultValueStruc.AddToSalesPrices;
   }
}


---------------------------------- GROUPS -----------------------------------
group AddSalesPartToPriceListGroup for AddSalesPartToPriceListStructure {
   label = "";
   lov PriceListNoRef with ReferenceSalesPriceListSelector {
      description = PriceListNoRef.Description;
   }
   lov SalesPriceGroupIdRef with ReferenceSalesPriceGroupSelector {
      description = SalesPriceGroupIdRef.Description;
   }
   daterangefield {
      startdate ValidFromDate;
      enddate ValidToDate;

      label = "Validity Period";
   }
}

group DiscountGroup for AddSalesPartToPriceListStructure {
   label = "Discount";
   field DiscountTypeRef {
      validate command {
         execute {
            set Discount = DiscountTypeRef.Discount;
         }
      }
   }
   field Discount;
}

group OffsetGroup for AddSalesPartToPriceListStructure {
   label = "Offset";
   field PercentageOffset;
   field AmountOffset;
}

group FilteredByGroup for AddSalesPartToPriceListStructure {
   label = "Filtered by";
   multilov CatalogNoRef with SalesPartForPriceListLovLovList using SalesPartForPriceListLovLovListSet;
   multilov BasePriceSiteRef with UserAllowedSiteLovLovList using UserAllowedSiteLovLovListSet;
}

group PriceTypeGroup for AddSalesPartToPriceListStructure {
   label = "Price Type";
   field AddToSalesPrices;
   field AddToRentalPrices;
}

group ExecuteGroup for AddSalesPartToPriceListStructure {
   label = "Execute";
   radiogroup ExecutionTypeSelection {
      showlabel = false;
      size = FullWidth;
   }
}

---------------------------------- DIALOGS ----------------------------------
dialog AddSalesPartToSalesPriceListDialog for AddSalesPartToPriceListStructure {
   label = "Add New Sales Parts to Sales Price List";

   input(PriceListNo, SalesPriceGroupId) {
      command InitCommand;

   }
   group AddSalesPartToPriceListGroup;
   group DiscountGroup;
   group OffsetGroup;
   group FilteredByGroup;
   group PriceTypeGroup;
   group ExecuteGroup;
   commandgroup ButtonCmdGroup {
      
      command Ok;
      command Cancel;

   }
}

--------------------------- PROJECTION FRAGMENTS ----------------------------
entityset SalesPartForPriceListLovLovListSet for SalesPartForPriceListLov;
entityset UserAllowedSiteLovLovListSet for UserAllowedSiteLov;

------------------------------- ENUMERATIONS --------------------------------
enumeration ExecutionTypeEnum {
   value = "ONLINE" {
      label = "Online";
   }
   value = "BACKGROUND" {
      label = "Run in Background";
   }
}
---------------------------------- ACTIONS ----------------------------------
action AddPartToPriceList Number {
   initialcheck SalesPriceListInitialCheck(PriceListNo);
   ludependencies = SalesPriceList, SalesPriceListPart;
   parameter PriceListNo Text;
   parameter CatalogNo Text;
   parameter ValidFrom Date;
   parameter BasePriceSite Text;
   parameter DiscountType Text;
   parameter Discount Number;
   parameter PercentageOffset Number;
   parameter AmountOffset Number;
   parameter SalesPriceGroupId Text;
   parameter AddToSalesPrices Boolean;
   parameter AddToRentalPrices Boolean;
   parameter ValidToDate Date;
   parameter ExecutionTypeSelection Enumeration(ExecutionTypeEnum);
}
--------------------------------- FUNCTIONS ---------------------------------
function FetchDefaults Structure(DefaultValueStruc) {
   parameter PriceListNo Text;
}
-------------------------------- STRUCTURES ---------------------------------
structure DefaultValueStruc {
   attribute CatalogNo Text;
   attribute ValidFromDate Date;
   attribute BasePriceSite Text;
   attribute PercentageOffset Number;
   attribute AmountOffset Number;
   attribute AddToSalesPrices Boolean;
}

structure AddSalesPartToPriceListStructure {
   attribute PriceListNo Text {
      label = "Price List No";
      maxlength = 100;
      format = uppercase;
      editable = [false];
   }
   attribute ValidFromDate Date {
      label = "Valid From";
   }
   attribute SalesPriceGroupId Text {
      label = "Sales Price Group";
      maxlength = 10;
      format = uppercase;
      editable = [false];
   }
   attribute ValidToDate Date {
      label = "Valid To";
   }
   attribute DiscountType Text {
      label = "Discount Type";
      maxlength = 25;
   }
   attribute Discount Number {
      label = "Discount (%)";
   }
   attribute PercentageOffset Number {
      label = "Percentage Offset";
   }
   attribute AmountOffset Number {
      label = "Amount Offset";
   }
   attribute CatalogNo Text {
      label = "Sales Part No";
      maxlength = 1000;
      format = uppercase;
   }
   attribute BasePriceSite Text {
      label = "Base Price Site";
      maxlength = 100;
      format = uppercase;
   }
   attribute AddToSalesPrices Boolean("TRUE", "FALSE") {
      label = "Add to Sales Prices";
      required = [true];
   }
   attribute AddToRentalPrices Boolean("TRUE", "FALSE") {
      label = "Add to Rental Prices";
      required = [true];
   }
   attribute ExecutionTypeSelection Enumeration(ExecutionTypeEnum);

   reference PriceListNoRef(PriceListNo) to SalesPriceList(PriceListNo) {
      label = "Price List No";
   }
   reference SalesPriceGroupIdRef(SalesPriceGroupId) to SalesPriceGroup(SalesPriceGroupId) {
      label = "Sales Price Group";
   }
   reference DiscountTypeRef(DiscountType) to SalesDiscountType(DiscountType) {
      label = "Discount Type";
   }
   reference CatalogNoRef(CatalogNo) to SalesPartForPriceListLov(CatalogNo) {
      multireference = [true];
      label = "Sales Part No";
   }
   reference BasePriceSiteRef(BasePriceSite) to UserAllowedSiteLov(Contract) {
      multireference = [true];
      label = "Base Price Site";
   }
}

