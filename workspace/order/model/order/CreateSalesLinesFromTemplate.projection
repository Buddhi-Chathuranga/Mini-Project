------------------------------------------------------------------------------------------------------------
-- Date        Sign       History
-- ----------  ------   ------------------------------------------------------------------------------------
-- 2019-10-13  OsAllk   SC2020R1-10455, Replaced Component_Is_Installed_Num with Component_Is_Active_Num to check component ACTIVE/INACTIVE.
-- 2019-08-17  MalLlk   SCUXXW4-22978, Renamed the projection CreateSalesLinesFromTemplateAssistant to CreateSalesLinesFromTemplate.
-- 2019-07-04  MiKulk   SCUXXW4-22978, Supporting to move assistant CreateSqLinesOrCoLinesFromTemplateAssistant to a seperate projection.
-- 2019-04-29  ChBnlk   SCUXXW4-8515, Corrected according to the code review suggestions.
-- 2019-03-31  ChBnlk   SCUXXW4-18290, Properly handled info returned from Create_Order_Lines_From_Template___.
-- 2019-03-31  ChBnlk   SCUXXW4-18288, Corrected issues reported through this bug.
-- 2019-03-28  ChBnlk   SCUXXW4-18216, Added validation to PeriodTo and OrderPeriodTo fields.
-- 2019-03-28  ChBnlk   SCUXXW4-8377, Implemented the Customer Order Template dialog.
-- 2019-03-19  ChBnlk   SCUXXW4-8517, Implemented the Sales Quotation Template dialog.
-- 2019-01-14  JeLise   SCUXXW4-8515, Converted from dlgOrderQuotationTemplate using MTG Version: 1.34
------------------------------------------------------------------------------------------------------------

projection CreateSalesLinesFromTemplate;
component ORDER;
layer Core;
description "Use this to create either Sales Quotation lines for a specfic Sales Quotation header or
Customer Order Lines for a specific Customer Order header using a template or other orders or quotations as a template.";
category Users;

--------------------------------- FRAGMENTS ---------------------------------
@DynamicComponentDependency RENTAL
include fragment RentalLineFieldCommon;
include fragment QuotationsPerSiteLovSelector;
include fragment OrdersPerSiteLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset CreateSqLinesOrCoLinesFromTemplateVirtualSet for CreateSqLinesOrCoLinesFromTemplateVirtual;
entityset TemplateLineVirtualSet for TemplateLineVirtual;

------------------------------ ENTITY DETAILS -------------------------------

virtual TemplateLineVirtual {
   crud = Update, Read, Delete;
   ludependencies = CreateSqLinesOrCoLinesFromTemplateVirtual;
   attribute StandardQty Number {
      label = "Ordered Qty";
      required = [true];

   }
   attribute StandardQty2 Number {
      fetch = "standard_qty2";
      label = "Standard Qty";
      editable = [false];
   }
   attribute Contract Text {
      fetch = "contract";
      label = "Site";
      editable = [false];
   }
   attribute CustomerPartNo Text {
      fetch = "customer_part_no";
      label = "Customer's Part No";
      maxlength = 45;
      editable = [false];
      format = uppercase;
   }
   attribute CatalogNo Text {
      label = "Sales Part No";
      editable = [false];
   }
   attribute Description Text {
      fetch = "Sales_Part_API.Get_Catalog_Desc_For_Lang(contract, catalog_no, Order_Quotation_API.Get_Language_Code(quotation_no))";
      label = "Description";
      maxlength = 200;
      editable = [false];
   }
   attribute ConditionCode Text {
      fetch = "condition_code";
      label = "Condition Code";
      maxlength = 10;
      editable = [false];
   }
   attribute RentalDb Boolean("TRUE", "FALSE") {
      fetch = "rental_db";
      label = "Rental";
      editable = [false];
   }
   attribute QuotationNo Text {
      fetch = "quotation_no";
      editable = [false];
   }
   attribute LineNo Text {
      fetch = "line_no";
      editable = [false];
   }
   attribute RelNo Text {
      fetch = "rel_no";
      editable = [false];
   }
   attribute Objstate Text {
      fetch = "objstate";
      editable = [false];
   }
   attribute RowType Text {
      fetch = "row_type";
      editable = [false];
   }

   reference SalesPartRef(Contract, CatalogNo) to SalesPart(Contract, CatalogNo);
}

------------------------------- ENUMERATIONS --------------------------------
enumeration QuotationSelectionMethodEnum {
   enumerationtype = Custom;
   value = "USE_TEMPLATE" {
      identifier = "UseTemplate";
      label = "Defined Template";
   }
   value = "USE_LATEST_QUOTATION" {
      identifier = "UseLatestQuotationNo";
      label = "Latest Quotation No";
   }
   value = "USE_QUOTATION_PERIOD" {
      identifier = "UseQuotationPeriod";
      label = "Quotation Period";
   }
   value = "USE_QUOTATION_NO" {
      identifier = "UseQuotationNo";
      label = "Quotation No";
   }
   value = "USE_ORDER_NO" {
      identifier = "UseOrderNo";
      label = "Order No";
   }
   value = "USE_LATEST_ORDER" {
      identifier = "UseLatestOrderNo";
      label = "Latest Order No";
   }
   value = "USE_ORDER_PERIOD" {
      identifier = "UseOrderPeriod";
      label = "Order Period";
   }
}

enumeration OrderSelectionMethodEnum {
   enumerationtype = Custom;
   value = "USE_TEMPLATE" {
      identifier = "UseTemplate";
      label = "Defined Template";
   }
   value = "USE_ORDER_NO" {
      identifier = "UseOrderNo";
      label = "Order No";
   }
   value = "USE_LATEST_ORDER" {
      identifier = "UseLatestOrderNo";
      label = "Latest Order No";
   }
   value = "USE_ORDER_PERIOD" {
      identifier = "UseOrderPeriod";
      label = "Order Period";
   }
}

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

action PopulateQuoteLines {
   initialcheck none;
   parameter ParentKey Text;
   parameter QuotationNo Text;
   parameter FromDate Date;
   parameter ToDate Date;
   parameter CustomerNo Text;
   parameter Contract Text;
   parameter QuotationSelectionMethod Enumeration(QuotationSelectionMethodEnum);
   parameter TemplateId Text;
   parameter RowType Text;

   ludependencies = TemplateLineVirtual;

}

action PopulateOrderLines {
   initialcheck none;
   parameter ParentKey Text;
   parameter OrderNo Text;
   parameter FromDate Date;
   parameter ToDate Date;
   parameter CustomerNo Text;
   parameter Contract Text;
   parameter OrderSelectionMethod Enumeration(OrderSelectionMethodEnum);
   parameter TemplateId Text;
   parameter RowType Text;

   ludependencies = TemplateLineVirtual;

}

//! TODO: Should be refactored as a function!
action ValidateFields {
   initialcheck none;
   parameter ParentKey Text;
   parameter PlannedRentalStartDateEditable Date;
   parameter PlannedRentalStartTimeEditable Time;
   parameter PlannedRentalEndDateEditable Date;
   parameter PlannedRentalEndTimeEditable Time;
   parameter LuName Text;
}


action ClearRecords {
   initialcheck none;
   parameter ParentKey Text;
   ludependencies = TemplateLineVirtual;
}


action CreateQuoteLinesFromTemplate Text {
   initialcheck implementation;
   parameter ParentKey Text;
   parameter Contract Text;
   parameter StartQuotationNo Text;
   parameter PlannedRentalStartDateEditable Date;
   parameter PlannedRentalStartTimeEditable Time;
   parameter PlannedRentalEndDateEditable Date;
   parameter PlannedRentalEndTimeEditable Time;

   ludependencies = OrderQuotation;
}

action CreateOrderLinesFromTemplate Text {
   initialcheck implementation;
   parameter ParentKey Text;
   parameter Contract Text;
   parameter StartOrderNo Text;
   parameter PlannedRentalStartDateEditable Date;
   parameter PlannedRentalStartTimeEditable Time;
   parameter PlannedRentalEndDateEditable Date;
   parameter PlannedRentalEndTimeEditable Time;

   ludependencies = CustomerOrder, CustomerOrderLine;
   supportwarnings = [true];
}


--------------------------------- FUNCTIONS ---------------------------------
function FetchDefaults Structure(TemplateStructure) {
   parameter CustomerNo Text;
   parameter Contract Text;
   parameter QuotationNo Text;
   parameter OrderNo Text;
}

-------------------------------- STRUCTURES ---------------------------------
structure TemplateStructure {
   attribute TemplateId Text;
   attribute TemplateDescription Text;
   attribute LatestQuotationNo Text;
   attribute LatestDateEntered Date;
   attribute LatestOrderNo Text;
   attribute LatestOrderDateEntered Date;
   attribute PeriodTo Date;
   attribute PlannedRentalStartDateEditable Date;
   attribute PlannedRentalStartTimeEditable Time;
}

--------------------------------- VIRTUALS ----------------------------------
virtual CreateSqLinesOrCoLinesFromTemplateVirtual {
   attribute Contract Text;
   attribute TemplateId Text {
      label = "Defined Template";
      maxlength = 2000;
      format = uppercase;
   }
   attribute TemplateDescription Text {
      maxlength = 2000;
   }
   attribute LatestQuotationNo Text {
      label = "Latest Quotation No";
      maxlength = 2000;
      editable = [false];
   }
   attribute LatestDateEntered Date {
      label = "Date";
      editable = [false];
   }
   attribute PeriodFrom Date {
      label = "From";
   }
   attribute PeriodTo Date {
      label = "To";
   }
   attribute QuotationNo Text {
      label = "Quotation No";
      maxlength = 12;
      format = uppercase;
   }
   attribute DateEntered Date {
      label = "Date";
      editable = [false];
   }
   attribute OrderNo Text {
      maxlength = 12;
      format = uppercase;
   }
   attribute OrderDateEntered Date {
      label = "Date";
   }
   attribute LatestOrderNo Text {
      maxlength = 2000;
      editable = [false];
   }
   attribute LatestOrderDateEntered Date {
      label = "Date";
      editable = [false];
   }
   attribute OrderPeriodFrom Date {
      label = "From";
   }
   attribute OrderPeriodTo Date {
      label = "To";
   }
   attribute CustomerNo Text {
      label = "Customer No";
      maxlength = 20;
      editable = [false];
      updatable = [false];
   }
   attribute CustomerName Text {
      label = "Name";
      maxlength = 2000;
      editable = [false];
      updatable = [false];
   }
   attribute PlannedRentalStartDateEditable Date {
      label = "Start Date";
      updatable = [false];
      insertable = [false];

   }
   attribute PlannedRentalStartTimeEditable Time {
      label = "Start Time";
      updatable = [false];
      insertable = [false];
   }
   attribute PlannedRentalEndDateEditable Date {
      label = "End Date";
      updatable = [false];
      insertable = [false];
   }
   attribute PlannedRentalEndTimeEditable Time {
      label = "End Time";
      updatable = [false];
      insertable = [false];
   }

   attribute PlannedRentalStartDate Timestamp {
      label = "Rental Start DateTime Formatter";
   }

   attribute PlannedRentalEndDate Timestamp {
      label = "Rental End DateTime Formatter";
   }

   attribute QuotationSelectionMethod Enumeration(QuotationSelectionMethodEnum);
   attribute OrderSelectionMethod Enumeration(OrderSelectionMethodEnum);
   attribute StartQuotationNo Text;
   attribute StartOrderNo Text;
   attribute IsRentalInstalled Boolean("TRUE", "FALSE") {
      fetch = "DECODE(Dictionary_SYS.Component_Is_Active_Num('RENTAL'), 1, 'TRUE', 'FALSE')";
      editable = [false];
   }
   attribute KeyList Text;
   array TemplateLineArray() to TemplateLineVirtual();



   reference TemplateIdRef(TemplateId) to CustomerOrderTemplate(TemplateId) {
      label = "Defined Template";
   }
   reference QuotationNoRef(Contract, QuotationNo) to QuotationsPerSiteLov(Contract, QuotationNo) {
      label = "Quotation No";
   }
   reference OrderNoRef(Contract, OrderNo) to OrdersPerSiteLov(Contract, OrderNo) {
      label = "Order No";
   }

}

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------

