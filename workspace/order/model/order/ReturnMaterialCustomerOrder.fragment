--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2021-05-31  MaEelk  SC21R2-950, ReturnMaterialReason entity was overridden and ReturnReasonCode was made Uppercase
-- 2018-08-17  Akhalk  SCUXXW4-8737, Converted from dlgReturnMaterialCustomerOrder using MTG Version: 1.23
--------------------------------------------------------------------------------------
fragment ReturnMaterialCustomerOrder;
component ORDER;
layer Core;
description "Fragment for Returning the Materials From the Header Level";

include fragment CustomerOrderInitialCheck;

----------------------------- CLIENT FRAGMENTS ------------------------------
--------------------------------- COMMANDS ----------------------------------
command ReturnMaterialAuthorizeCreateCommand for CustomerOrder {
   mode = SelectedRecords;
   label = "Create";
   variable ReasonVar {
      type = Text;
   }
   variable AddChargeLinesVar {
      type = Boolean;
   }
   variable InvoiceVar {
      type = Number;
   }
   variable SelectionVar {
      type = Text;
   }
   variable ChargesExistVar {
      type = Text;
   }
   bulkexecute {
      stringify(records, keyref, JSON) into SelectionVar;
      call IsChargesExist(SelectionVar) into ChargesExistVar;
      dialog ReturnMaterialCustomerOrderDialog(ChargesExistVar, ChargesExistVar) into(ReasonVar, AddChargeLinesVar) {
         when OK {
            call CreateRmaFromOrderHeader(SelectionVar, ReasonVar, AddChargeLinesVar) into InvoiceVar;
            if [InvoiceVar > 1] {
               alert("Customer Order Line has more than one invoice. Select the invoice manually.");
            }
         }
         when CANCEL {
            exit;
         }
      }
   }
}


--------------------------------- SELECTORS ---------------------------------
---------------------------------- GROUPS -----------------------------------
group ReturnMaterialCustomerOrderGroup for ReturnMaterialCustomerOrderStructure {
   label = "";

   lov ReturnReasonCodeRef with ReferenceReturnMaterialReasonSelector {
      description = ReturnReasonCodeRef.ReturnReasonDescription;
   }

   field AddChargeLines {
      editable = [ExistCharges];
      visible = [ExistCharges];

      size = Small;

   }

}

----------------------------------- LISTS -----------------------------------

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------
dialog ReturnMaterialCustomerOrderDialog for ReturnMaterialCustomerOrderStructure {
   label = "Return Material Customer Order";

   input(ExistCharges, AddChargeLines);

   output(ReturnReasonCode, AddChargeLines);

   markdowntext {
      text = "This will create a Return Material Authoriazation ( RMA ) for the customer order";
   }
   group ReturnMaterialCustomerOrderGroup;

   commandgroup ButtonCmdGroup {

      command Ok {
         enabled = [ReturnReasonCode != null];
      }
      command Cancel;

   }
}

--------------------------- PROJECTION FRAGMENTS ----------------------------

---------------------------------- ACTIONS ----------------------------------

action CreateRmaFromOrderHeader Number {
   initialcheck implementation;
   parameter Selection Text;
   parameter Reason Text;
   parameter AddChargeLines Boolean;

   ludependencies = CustomerOrder;
}

--------------------------------- FUNCTIONS ---------------------------------

function IsChargesExist Boolean {
   parameter Selection Text;
}

-------------------------------- STRUCTURES ---------------------------------
structure ReturnMaterialCustomerOrderStructure {
   attribute ReturnReasonCode Text {
      label = "Return Reason";
      maxlength = 10;

      format = uppercase;
   }

   attribute AddChargeLines Boolean("TRUE", "FALSE") {
      label = "Add Charge Line(s)";
      required = [true];
   }
   attribute ExistCharges Boolean;
   reference ReturnReasonCodeRef(ReturnReasonCode) to ReturnMaterialReason(ReturnReasonCode) {
      label = "Return Reason";
   }
}

---------------------------------- ENTITY -----------------------------------
@Override
entity ReturnMaterialReason {
   attribute ReturnReasonCode Text {
      format = uppercase;
   }
}
