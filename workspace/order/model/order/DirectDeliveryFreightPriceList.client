-----------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------
-- 2021-11-12  KiSalk  Bug 161030(SC21R2-5473), Passed identifier value "FreightPriceList" to RemoveInvalidPricesDialog and RemoveBasePrices.
-- 2020-02-11  ErRalk  Modified FreightPriceListDirectSelector to add status badge color.
-- 2020-02-19  RaVdlk  SCXTEND-2214,Enabled Duplicate functionality
-- 2019-10-31  chlelk  SCXTEND-1324, The startupmode was set to "Search"
-- 2019-06-19  DiKulk  SCUXXW4-21571, Added maxlength to the PriceListNo.
-- 2018-12-17  Nipklk  SCUXXW4-884, Renamed imported FreightPriceList fragment to FreightPriceListLineTab.
-- 2018-11-16  Aszelk  SCUXXW4-9195, Converted from frmFreightPriceListDirect using MTG Version: 1.33.
-----------------------------------------------------------------------------

client DirectDeliveryFreightPriceList;
component ORDER;
layer Core;
projection DirectDeliveryFreightPriceListHandling;
include fragment UserSiteCompanyLovSelector;
include fragment ForwarderInfoPublicSelector;
include fragment FreightPriceListLineTab;
include fragment FreightPriceListZoneTab;
include fragment RemoveInvalidPricesDialog;
include fragment CopyFreightPriceListDialog;
include fragment FreightPriceListSiteTab;
include fragment SiteClusteDialog;
include fragment SiteClusterNodeJoinSelector;
include fragment SiteClusterLevelLovSelector;

warningsenabled = FreightPriceListDirect;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry DirectDeliveryFreightPriceListNavEntry parent OrderNavigator.TransportationAdministrationFreight at index 400 {
      label = "Direct Delivery Freight Price List";
      page Form home FreightPriceListDirect;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using FreightPriceListDirectSet {
   label = "Direct Delivery Freight Price List";
   startupmode = search;
   stateindicator FreightPriceListDirectStateIndicator;

   searchcontext DirectDeliveryFreightPriceListSearchContext {
      defaults = DirectDeliveryFreightPriceListSearchContextDefaults();
   }
   selector FreightPriceListDirectSelector;
   group FreightPriceListDirectGroup;
   group DeliveryInfoGroup;
   arrange {
      group FreightCalculation;
      group Indicators;
   }

   tabs {
      tab {
         label = "Charges";
         list FreightPriceListLineList using FetchDirectDeliveryFreightPriceListLines(PriceListNo, FreightMapId, searchcontext.DirectDeliveryFreightPriceListSearchContext.ShowDetails, searchcontext.DirectDeliveryFreightPriceListSearchContext.ValidDate) {
            copyoncruddefault(FreightMapId, PriceListNo) to(FreightMapId, PriceListNo);
         }
      }
      tab {
         label = "Valid for Site";
         list FreightPriceListSiteList(FreightPriceListSiteArray);
      }
      tab {
         label = "Zone Info";
         list FreightPriceListZoneList(FreigthPriceListZone);
      }
   }

   commandgroup CommandGroupCmdGroup {

      command Activate;
      command Close;
   }

   commandgroup CommandGroup2CmdGroup {

      command CopyPriceListCommand;
      command RemoveInvalidPricesCommand;
   }
}

--------------------------------- COMMANDS ----------------------------------
@Override
command Activate for FreightPriceListDirect {
   label = "Set Active";
   enabled = [Objstate in("Planned", "Closed") and AllowActive];
}
command CopyPriceListCommand for FreightPriceListDirect {
   label = "Copy Price List";
   variable PriceListTypeVar {
      type = Text;
   }
   enabled = [true];
   execute {
      set PriceListTypeVar = "FreightPriceListDirect";
      dialog CopyFreightListDialog(PriceListNo, Description, PriceListTypeVar) {
         when CANCEL {
            exit CANCEL;
         }
      }
   }
}

command RemoveInvalidPricesCommand for FreightPriceListDirect {

   label = "Remove Invalid Prices";
   enabled = [Objstate != "Closed"];
   variable KeepFromDt {
      type = Date;
   }
   variable RemovedItemsNum {
      type = Number;
   }
   variable SalesPriceSelectionVar {
      type = Text;
   }
   bulkexecute {
      stringify(records, "PRICE_LIST_NO=${PriceListNo}^", JSON) into SalesPriceSelectionVar;
      dialog RemoveInvalidPricesDialog("FreightPriceList") into(KeepFromDt) {
         when OK {
            call RemoveBasePrices(SalesPriceSelectionVar, KeepFromDt, "FreightPriceList") into RemovedItemsNum;
            if [RemovedItemsNum > 0] {
               alert("${RemovedItemsNum} record(s) removed.");
            }
            else
               {
               alert("No records were removed.");
            }
         }

         when CANCEL {
            exit;
         }
      }
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector FreightPriceListDirectSelector for FreightPriceListDirect {
   label = "${PriceListNo} - ${Description} - ${ShipViaCode} - ${FreightMapId} - ${ChargeType}";
   badge Objstate {
      label = "Status";
      emphasis Progress1 = [Objstate = "Planned"];
      emphasis Progress4 = [Objstate = "Active"];
      emphasis Progress8 = [Objstate = "Closed"];
      style = TextOnly;
   }
   static PriceListNo;
   static Description;
   static ShipViaCode;
   static FreightMapId;
   static ChargeType;
}

---------------------------------- GROUPS -----------------------------------
group FreightPriceListDirectGroup for FreightPriceListDirect {
   label = "";

   field PriceListNo {
      size = Small;
      maxlength = 10;
   }
   field Description;

   lov ContractRef with ReferenceUserSiteCompanyLovSelector {
      description = ContractRef.ContractDesc;
      validate command {
         variable UsePriceInclTaxVar {
            type = Boolean;
         }
         execute {
            call GetUsePriceInclTax(Contract) into UsePriceInclTaxVar;
            if [UsePriceInclTaxVar = "TRUE"] {
               set UsePriceInclTax = true;
            }
            else {
               set UsePriceInclTax = false;
            }
         }
      }
   }
}

group DeliveryInfoGroup for FreightPriceListDirect {
   label = "Delivery Information";

   lov ShipViaCodeRef with ReferenceMpccomShipViaSelector {
      description = ShipViaCodeRef.Description;
      label = "Ship-Via";

      validate command {
         variable FreightMapIdVar {
            type = Text;
         }
         execute {
            call ValidateShipViaCode(ShipViaCode, Contract) into FreightMapIdVar;
            if [FreightMapIdVar != null] {
               set FreightMapId = FreightMapIdVar;
            }
         }
      }
   }
   lov FreightMapInfoRef with ReferenceFreightMapSelector using FreightMapFilter(Contract, ShipViaCode) {
      description = FreightMapInfoRef.Description;
      label = "Freight Map";
   }
   lov SupplierIdRef with ReferenceSupplierInfoSelector {
      description = SupplierIdRef.Name;
      size = Small;
      visible = [FreightMapId = null];
      contactwidget {
         enabled = [true];
         source = Supplier;
      }
   }
   lov SupplierIdRef1 with ReferenceSupplierInfo1Selector using SupplierFilter(FreightMapId) {
      description = SupplierIdRef1.Name;
      size = Small;
      visible = [FreightMapId != null];
      contactwidget {
         enabled = [true];
         source = Supplier;
      }
   }
   field AddrId {
      size = Small;
   }
   lov ForwarderInfoRef with ReferenceForwarderInfoSelector {
      description = ForwarderInfoRef.Name;
      contactwidget {
         enabled = [true];
         source = Person;
      }
   }
}

group FreightCalculation for FreightPriceListDirect {
   label = "Freight Calculation";

   lov ChargeTypeRef with ReferenceSalesChargeTypeSelector using ChargeTypeFilter {
      description = ChargeTypeRef.ChargeTypeDesc;
   }
   field ChargeTypeRef.SalesUnitMeas {
      size = Small;
      label = "UoM";
   }
   field FreightBasis;
}

group Indicators for FreightPriceListDirect {
   label = "Indicators";

   field UsePriceInclTax;

   field ChargeTypeRef.UnitCharge {
      size = Medium;
      label = "Unit Charge";
   }
}

------------------------------ SEARCH CONTEXT -------------------------------
searchcontext DirectDeliveryFreightPriceListSearchContext for DirectDeliveryFreightPriceListSearchContextStructure {
   label = "";
   field ShowDetails {
      label = "View Option";
      validate command {
         execute {
            call FetchValidDate(searchcontext.DirectDeliveryFreightPriceListSearchContext.ShowDetails) into ValidDate;
         }
      }
   }
   field ValidDate {
      editable = [searchcontext.DirectDeliveryFreightPriceListSearchContext.ShowDetails = "ViewWithValidDate"];
   }
}

----------------------------- STATE INDICATORS ------------------------------
@Override
stateindicator FreightPriceListDirectStateIndicator for FreightPriceListDirect {
   state "Planned" {
      completed = 33%;
      emphasis Progress1 = [Objstate = "Planned"];
   }
   state "Active" {
      completed = 67%;
      emphasis Progress4 = [Objstate = "Active"];

   }
   state "Closed" {
      completed = 100%;
      emphasis Progress8 = [Objstate = "Closed"];

   }
}