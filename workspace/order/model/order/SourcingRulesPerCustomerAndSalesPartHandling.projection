--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-05-23  RaVdlk  SCUXXW4-21335, Added the where clause
-- 2018-06-20  JaThlk  SCUXXW4-11617, Included UserAllowedSiteLovSelector fragment instead of UserAllowedSiteLov.
-- 2018-04-20  IzShlk  SCUXXW4-9547, Converted from frmSourcingRulesPerCustomer using MTG Version: 1.16
--------------------------------------------------------------------------------------

projection SourcingRulesPerCustomerAndSalesPartHandling;
component ORDER;
layer Core;
description "Use this API to override a sourcing rule for a specific sales part and customer combination, or sales part and customer address combination.";
category Users;
include fragment UserAllowedSiteLovSelector;
include fragment SalesPartActiveLov;
include fragment CustOrdCust1Lov;
include fragment NonRentalSalesPartLov;
include fragment CustAddressShipLov;
include fragment CustOrdCustomerAddressEntLov;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset SalesParts for SalesPart;

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity SalesPart {
   crud = Read;
   keys = CatalogNo, Contract;
   where = "CATALOG_TYPE_DB != 'PKG' and SOURCING_OPTION_DB IN ('NOTDECIDED','USESOURCINGRULE') and SALES_TYPE_DB IN ('SALES',  'SALES RENTAL')";

   attribute CatalogType Enumeration(SalesPartType) {
      label = "Type Of Sales Part";
   }
   reference CatalogNoRef(Contract, CatalogNo) to SalesPartActiveLov(Contract, CatalogNo) {
      label = "Sales Part No";
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference RuleIdRef(RuleId) to SourcingRule(RuleId) {
      label = "Sourcing Rule";
   }
   array DetailSourceRulePerCustomer(Contract, CatalogNo) to SourceRulePerCustomer(Contract, CatalogNo);
   array DetailSourceRulePerCustAddr(Contract, CatalogNo) to SourceRulePerCustAddr(Contract, CatalogNo);
}

@Override
entity SourceRulePerCustomer {
   attribute CustomerName Text {
      fetch = "CUST_ORD_CUSTOMER_API.Get_Name(CUSTOMER_NO)";
      label = "Customer Name";
      editable = [false];
   }

   reference CustomerNoRef(CustomerNo) to CustOrdCust1(CustomerNo) {
      label = "Customer No";
   }
   reference RuleIdRef(RuleId) to SourcingRule(RuleId) {
      label = "Sourcing Rule";
   }
   reference CatalogNoRef(Contract, CatalogNo) to NonRentalSalesPartLov(Contract, CatalogNo) {
      label = "Sales Part No";
   }
}

@Override
entity SourceRulePerCustAddr {
   attribute CustomerName Text {
      fetch = "CUST_ORD_CUSTOMER_API.Get_Name(CUSTOMER_NO)";
      label = "Customer Name";
      editable = [false];
   }
   attribute AddrNo Text {
      label = "Address ID";
   }
   attribute CatalogNo Text {
      label = "Sales Part No";
   }

   reference CustomerNoRef(CustomerNo) to CustOrdCustomerAddressEnt(CustomerId) {
      copy AddressId to AddrNo;
      label = "Customer No";
      where = "Customer_Info_API.Get_Customer_Category_Db(CUSTOMER_ID) = 'CUSTOMER'";

   }
   reference AddrNoRef(CustomerNo, AddrNo) to CustAddressShipLov(CustomerNo, AddrNo) {
      label = "Address ID";
   }
   reference RuleIdRef(RuleId) to SourcingRule(RuleId) {
      label = "Sourcing Rule";
   }
   reference CatalogNoRef(Contract, CatalogNo) to NonRentalSalesPartLov(Contract, CatalogNo) {
      label = "Sales Part No";
   }
}


--------------------------------- FUNCTIONS ---------------------------------
function CustName Text {
   parameter CustomerNo Text;
}





