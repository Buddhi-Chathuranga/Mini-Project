--------------------------------------------------------------------------------------
-- Date        Sign     History
-- ----------  ------   --------------------------------------------------------------
-- 2019-01-02  SeJalk   SCUXXW4-986, Added code to support miltipe records.-- 2018-11-20  NiDalk   Bug 145448, Removed label in ButtonCmdGroup in OrderQuotationWonWithNoPriceDiffDialog and OrderQuotationLostDialog.
-- 2018-06-21  JeLise   SCUXXW4-8507, Converted from dlgOrderQuotationLost using MTG Version: 1.22
-- 2018-06-20  JeLise   SCUXXW4-8532, Converted from dlgOrderQuotationWonWithNoPriceDiff using MTG Version: 1.22
--------------------------------------------------------------------------------------

fragment LostWonQuotationDialog;
component ORDER;
layer Core;
description "In this API you can enter necessary information when setting a sales quotation to Won or Lost.";

include fragment OrderQuotationInitialCheck;
include fragment OrderQuotationLineInitialCheck;

//include fragment LoseWinReasonLovSelector;
----------------------------- CLIENT FRAGMENTS ------------------------------


---------------------------------- GROUPS -----------------------------------
group OrderQuotationWonGroup for OrderQuotationWonStructure {
   label = "";
   field QuotationNo {
      size = Small;
      editable = [false];
   }
   field LineNo {
      size = Small;
      editable = [false];
   }
   field RelNo {
      size = Small;
      editable = [false];
   }
   lov ReasonIdRef with ReferenceLoseWinReasonLovSelector using GetWinReasonIds {
      description = ReasonIdRef.ReasonDescription;
      validate command {
         execute {
            call ValidateWinReasonId(ReasonIdRef.ReasonId);
         }
      }
   }
   field WonNote {
      multiline = true;
      editable = [ReasonId != null];
   }
}

group OrderQuotationLostGroup for OrderQuotationLostStructure {
   label = "";
   field QuotationNo {
      size = Small;
      editable = [false];
   }
   field LineNo {
      size = Small;
      editable = [false];
   }
   field RelNo {
      size = Small;
      editable = [false];
   }
   lov LostToRef with ReferenceCompetitorSelector {
      description = LostToRef.CompetitorName;
      validate command {
         execute {
            call ValidateCompetitor(LostToRef.CompetitorId);
         }
      }
   }
   lov ReasonIdRef with ReferenceLoseWinReasonLovSelector using GetLoseReasonIds {
      description = ReasonIdRef.ReasonDescription;
      validate command {
         execute {
            call ValidateLoseReasonId(ReasonIdRef.ReasonId);
         }
      }
   }
   field LostNote {
      multiline = true;
      editable = [ReasonId != null and LostTo != null];
   }
}

---------------------------------- DIALOGS ----------------------------------
dialog OrderQuotationWonDialog for OrderQuotationWonStructure {
   label = "Won Information";
   input(QuotationNo, LineNo, RelNo, LineItemNo);
   output(ReasonId, WonNote);

   group OrderQuotationWonGroup;

   commandgroup ButtonCmdGroup {
      command Ok {
         enabled = [ReasonId != null];
      }
      command Cancel;
   }
}

dialog OrderQuotationLostDialog for OrderQuotationLostStructure {
   label = "Lost Information";
   input(QuotationNo, LineNo, RelNo, LineItemNo);
   output(ReasonId, LostTo, LostNote);

   group OrderQuotationLostGroup;

   commandgroup ButtonCmdGroup {
      command Ok {
         enabled = [ReasonId != null and LostTo != null];
      }
      command Cancel;
   }
}

--------------------------- PROJECTION FRAGMENTS ----------------------------

---------------------------------- ACTIONS ----------------------------------
//! TODO: Should be refactored as a function!
action ValidateWinReasonId {
   initialcheck none;
   parameter ReasonId Text;
}

//! TODO: Should be refactored as a function!
action ValidateLoseReasonId {
   initialcheck none;
   parameter ReasonId Text;
}

//! TODO: Should be refactored as a function!
action ValidateCompetitor {
   initialcheck none;
   parameter CompetitorId Text;
}

action SetQuotationLost {
   initialcheck OrderQuotationInitialCheck(QuotationNo);
   ludependencies = OrderQuotation;
   supportwarnings = [true];
   parameter QuotationNo Text;
   parameter ReasonId Text;
   parameter LostTo Text;
   parameter LostNote Text;
}

action SetQuotationWon {
   initialcheck OrderQuotationInitialCheck(QuotationNo);
   ludependencies = OrderQuotation;
   supportwarnings = [true];
   parameter QuotationNo Text;
   parameter ReasonId Text;
   parameter WonNote Text;
}

action SetBulkQuotationLost {
   initialcheck implementation;
   ludependencies = OrderQuotationLine;
   supportwarnings = [true];
   parameter Selection Text;
   parameter ReasonId Text;
   parameter LostTo Text;
   parameter LostNote Text;
}

action SetBulkQuotationWon {
   initialcheck implementation;
   ludependencies = OrderQuotationLine;
   supportwarnings = [true];
   parameter Selection Text;
   parameter ReasonId Text;
   parameter WonNote Text;
}

--------------------------------- FUNCTIONS ---------------------------------
function GetWinReasonIds List < Entity(LoseWinReasonLov) > {
   where = "LOSE_WIN_DB = 'WIN' AND USED_BY_ENTITY_DB like '%^SQ^%'";
}

function GetLoseReasonIds List < Entity(LoseWinReasonLov) > {
   where = "LOSE_WIN_DB = 'LOSE' AND USED_BY_ENTITY_DB like '%^SQ^%'";
}

function ValidateSelectedLines Structure(QutationLineStructure) {
   parameter Selection Text;

}

-------------------------------- STRUCTURES ---------------------------------
structure QutationLineStructure {
   attribute QuotationNo Text;
   attribute LineNo Text;
   attribute RelNo Text;
   attribute LineItemNo Number;
}

structure OrderQuotationWonStructure {
   attribute QuotationNo Text {
      label = "Quotation No";
      maxlength = 12;
   }
   attribute LineNo Text {
      label = "Line No";
      maxlength = 4;
   }
   attribute RelNo Text {
      label = "Del No";
      maxlength = 4;
   }
   attribute ReasonId Text {
      label = "Reason ID";
      maxlength = 10;
      required = [true];
      format = uppercase;
   }
   attribute LoseWinReasonDesc Text {
      label = "Reason Description";
      maxlength = 2000;
   }
   attribute WonNote Text {
      label = "Won Note";
      maxlength = 2000;
   }
   attribute LineItemNo Number {
      label = "Line Item No";
      maxlength = 0;
   }

   reference ReasonIdRef(ReasonId) to LoseWinReasonLov(ReasonId) {
      label = "Reason ID";
      copy ReasonDescription to LoseWinReasonDesc;
   }
}

structure OrderQuotationLostStructure {
   attribute QuotationNo Text {
      label = "Quotation No";
      maxlength = 12;
   }
   attribute LineNo Text {
      label = "Line No";
      maxlength = 4;
   }
   attribute RelNo Text {
      label = "Del No";
      maxlength = 4;
   }
   attribute LostTo Text {
      label = "Lost to Competitor";
      maxlength = 10;
      required = [true];
      format = uppercase;
   }
   attribute CompetitorName Text {
      label = "Competitor Name";
      maxlength = 2000;
   }
   attribute ReasonId Text {
      label = "Reason ID";
      maxlength = 10;
      required = [true];
      format = uppercase;
   }
   attribute LoseWinReasonDesc Text {
      label = "Reason Description";
      maxlength = 2000;
   }
   attribute LostNote Text {
      label = "Lost Note ";
      maxlength = 2000;
   }
   attribute LineItemNo Number {
      label = "Line Item No";
      maxlength = 0;
   }

   reference LostToRef(LostTo) to Competitor(CompetitorId) {
      label = "Lost to Competitor";
   }
   reference ReasonIdRef(ReasonId) to LoseWinReasonLov(ReasonId) {
      label = "Reason ID";
   }
}

