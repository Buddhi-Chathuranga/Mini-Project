------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -------------------------------------------------------------------
-- 2020-11-18  RavDlk  SC2020R1-11348, Handled the enumeration CreatePartialSum
-- 2019-08-17  MalLlk  SCUXXW4-22978, Supporting to move fragment CustomerOrderLineDiscountAsistant to a seperate projection
-- 2019-08-17          and renamed the projection ManageCustOrdLineDiscountAssistant to CustomerOrderLineDiscountHandling.
-- 2019-06-22  MAHPLK  SCUXXW4-22196, Moved CustomerOrderLineDiscount projection and client to this fragment.
-- 2018-08-14  SeJalk  SCUXXW4-8397, created from dlgCustOrderLineDiscount using MTG Version: 1.25
------------------------------------------------------------------------------------------

projection CustomerOrderLineDiscountHandling;
component ORDER;
layer Core;
description "Use this API to add multiple discount types to a customer order line.";
category Users;

--------------------------------- FRAGMENTS ---------------------------------
include fragment CustomerOrderLineInitialCheck;

----------------------------- MAIN ENTRY POINTS -----------------------------

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset CustOrderLineDiscountSet for CustomerOrderLineVirtual;

------------------------------ ENTITY DETAILS -------------------------------
@Override
virtual CustomerOrderLineVirtual {
   crud = Create, Read;
   ludependencies = CustomerOrderLineVirtual;
   attribute OrderNo Text;
   attribute LineNo Text;
   attribute Contract Text;
   attribute CatalogNo Text {
      label = "Sales Part No";
      editable = [false];
   }
   attribute SalesPartDescription Text {
      fetch = "SALES_PART_API.Get_Catalog_Desc(contract,CATALOG_NO)";
      label = "Sales Part Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute RelNo Text {
      label = "Del No";
   }
   attribute BaseSaleUnitPrice Number {
      label = "Price/Base";
      editable = [ETag = null];
      format = ifscurrency;
   }
   attribute BaseUnitPriceInclTax Number {
      label = "Price incl Tax/Base";
      format = ifscurrency;
   }
   attribute SaleUnitPrice Number {
      label = "Price/Curr";
      editable = [ETag = null];
      format = ifscurrency;
   }
   attribute UnitPriceInclTax Number {
      label = "Price Incl Tax/Curr";
      format = ifscurrency;
   }
   attribute CurrencyCode Text {
      label = "Currency";
   }

   attribute Discount Number {
      label = "Acc Disc";
      format = percentage;
   }
   attribute AccDiscountNetAmt Number {
      label = "Acc Discount Net Amt";
      format = ifscurrency;
   }
   attribute AccDiscountGrossAmt Number {
      label = "Acc Discount Gross Amt";
      format = ifscurrency;
   }
   attribute LineItemNo Number {
      maxlength = 0;
   }
   attribute Company Text;
   attribute InsUpdAllowed Boolean {
      required = [true];
   }
   attribute UsePriceInclTax Boolean {
      required = [true];
   }
   array CustOrderLineDiscountArray(OrderNo, LineNo, RelNo, LineItemNo) to CustOrderLineDiscount(OrderNo, LineNo, RelNo, LineItemNo);
}

@Override
entity CustOrderLineDiscount {
   ludependencies = CustOrderLineDiscount;
   attribute DiscountLineNo Number {
      required = [true];
   }
   attribute DiscountType Text {
      format = uppercase;
   }
   attribute Description Text {
      fetch = "SALES_DISCOUNT_TYPE_API.Get_Description(DISCOUNT_TYPE)";
      label = "Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute CalculationBasis Number {
      editable = [false];
      format = ifscurrency;
   }
   attribute Discount Number {
      label = "Discount (%)";
   }
   attribute DiscountAmount Number {
      label = "Discount Amt/Curr";
      format = ifscurrency;
   }

   attribute CreatePartialSum Enumeration(CreatePartialSum) {
      fetch = "CREATE_PARTIAL_SUM_DB";
      label = "Create Partial Sum";
      required = [true];
   }

   attribute PriceCurrency Number {
      label = "Net Price/Curr";
      editable = [ETag = null];
      format = ifscurrency;
   }
   attribute PriceBase Number {
      label = "Net Price/Base";
      editable = [ETag = null];
      format = ifscurrency;
   }
   attribute PriceCurrencyInclTax Number {
      label = "Net Price incl Tax/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute PriceBaseInclTax Number {
      label = "Net Price incl Tax/Base";
      editable = [false];
      format = ifscurrency;
   }
   attribute DiscountSource Text {
      fetch = "DISCOUNT_SOURCE";
      maxlength = 200;
      editable = [false];
   }
   attribute DiscountSourceId Text {
      editable = [false];
   }

   reference DiscountTypeRef(DiscountType) to SalesDiscountType(DiscountType) {
      label = "Discount Type";
   }

}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

action UpdateParent {
   initialcheck none;
   parameter ObjKey Text;

   ludependencies = CustomerOrderLineVirtual;
}

action UpdateDiscountLineNo {
   initialcheck CustomerOrderLineInitialCheck(OrderNo, LineNo, RelNo, LineItemNo);
   parameter OrderNo Text;
   parameter LineNo Text;
   parameter RelNo Text;
   parameter LineItemNo Number;
   parameter DiscountNo Number;
   parameter CreateDiscount Boolean;

   ludependencies = CustOrderLineDiscount;
}
--------------------------------- FUNCTIONS ---------------------------------
function GetDiscount Number {
   parameter DiscountType Text;
}




