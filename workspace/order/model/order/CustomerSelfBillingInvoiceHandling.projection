-----------------------------------------------------------------------------------------------------
-- Date        Sign     History
-- ----------  ------   -----------------------------------------------------------------------------
-- 2020-03-06  MaEelk   SCXTEND-2227, Enabled the Dulicate Functionality.
-- 2018-12-05  KHVESE   SCUXXW4-9475, Implemented.
-- 2018-11-27  HPETSE   SCUXXW4-9475, Converted from frmSelfBillingInvoice using MTG Version: 1.33
-----------------------------------------------------------------------------------------------------

projection CustomerSelfBillingInvoiceHandling;
component ORDER;
layer Core;
description "Use this API to manage the information in Customer Self-Billing Invoice";
category Users;
include fragment ValidCustomerAgreementLovSelector;
include fragment NonRentalSalesPartLovSelector;
include fragment CustomerInfoCustcategoryPubSelector;
include fragment UnmatchedSbiDeliveriesSelector;
include fragment AddSelfBillingLinesAssistant;
include fragment UpdateSalesPartPricesFromSbDialog;
include fragment CustomerOrderLineInitialCheck;
include fragment SelfBillingItemInitialCheck;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset SelfBillingHeaderSet for SelfBillingHeader;

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity SelfBillingHeader {
   crud = Create, Read, Update, Delete;
   from = "self_billing_header";
   exec = "SELF_BILLING_HEADER_API";
   keys = SbiNo {
      where = "SBI_NO = :SbiNo";
   }
   ludependencies = SelfBillingItem;
   use attributes = CustomerId, Company, SbReferenceNo, CurrencyCode, ModifiedDate, GrossAmount, MatchedNetAmount, TaxAmount, MessageId;
   attribute SbiNo Text {
      fetch = "sbi_no";
      label = "SBI No";
      maxlength = 100;
      editable = [false];
      format = uppercase;
   }
   // TODO! IntSbiNo has been added as a Number attribute to be used in order by in client. It can be replace with alternative solution if framework give any in future.
   attribute IntSbiNo Number {
      fetch = "TO_NUMBER(sbi_no)";
      label = "SBI No";
      maxlength = 100;
      editable = [false];
      format = uppercase;
   }
   attribute CustomerId Text {
      fetch = "customer_id";
      label = "Customer";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 100;
      format = uppercase;
   }
   attribute SbReferenceNo Text {
      fetch = "sb_reference_no";
      label = "SBI Ref No";
      maxlength = 50;
      default = "null";
   }
   attribute CurrencyCode Text {
      fetch = "currency_code";
      label = "Currency";
      maxlength = 3;
      editable = [ETag = null];
      format = uppercase;
   }
   attribute ModifiedDate Date {
      fetch = "modified_date";
      label = "Modified";
      editable = [false];
      default = "sysdate";

   }
   attribute GrossAmount Number {
      fetch = "gross_amount";
      label = "Match Tot Gross Amt";
      editable = [false];
      format = ifscurrency;
      default = "0";
   }
   attribute MatchedNetAmount Number {
      fetch = "matched_net_amount";
      label = "Match Tot Net Amt";
      editable = [false];
      format = ifscurrency;
      default = "0";
   }
   attribute TaxAmount Number {
      fetch = "tax_amount";
      label = "Tax Amt";
      editable = [false];
      format = ifscurrency;
      default = "0";
   }
   attribute MessageId Number {
      fetch = "message_id";
      editable = [false];
   }
   attribute LinesToInvoice Number {
      fetch = "Self_Billing_Header_API.Get_Lines_To_Invoice(sbi_no)";
      editable = [false];
      default = "null";
   }
   reference CustomerInfoRef(CustomerId) to CustomerInfo(CustomerId);
   reference CustomerIdRef(CustomerId) to CustomerInfoCustcategoryPub(CustomerId) {
      label = "Customer";
   }
   reference CompanyRef(Company) to CompanyFinance(Company) {
      label = "Company";
   }
   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Currency";
   }
   array SelfBillingItemArray(SbiNo) to SelfBillingItem(SbiNo);
   action UnmatchAll {
      ludependencies = SelfBillingItem;
   }
   action CreateInvoice {
      ludependencies = SelfBillingItem;
      parameter Company    Text;
      parameter CustomerId Text;
   }

}

@Override
entity SelfBillingItem {
   crud = Read, Update;
   from = "self_billing_item";
   exec = "SELF_BILLING_ITEM_API";
   keys = SbiNo, SbiLineNo {
      where = "SBI_NO = :SbiNo and SBI_LINE_NO = :SbiLineNo";
   }
   use attributes = CustomerNo, DelnoteNo, InvoiceNo, SeriesId, OrderNo, LineNo, RelNo, Contract, CatalogNo, CustomerPartNo, BuyQtyDue, SalesUnitMeas,
   CustomerQty, CustUnitSalesQty, PartPrice, PriceSource, CustUnitPartPrice, CustPartPrice, QtyToMatch, CurrencyCode, ConsignmentStock,
   PayTermId, OrderId, GrossCurrAmount, TaxCurrAmount, NetCurrAmount, CustNetCurrAmount, WantedDeliveryDate, DateDelivered, MessageId,
   MessageRow, MatchedDate, MatchType, Discount, DiscountAmount, LineItemNo, DelivNo, PriceConvFactor, Reason, InvoiceId;
   attribute SbiNo Text {
      fetch = "sbi_no";
      label = "SBI No";
      maxlength = 15;
      editable = [false];
   }
   attribute SbiLineNo Number {
      fetch = "sbi_line_no";
      label = "SBI Line No";
      editable = [false];
   }
   attribute DelnoteNo Text {
      fetch = "delnote_no";
      label = "Delivery Note No";
      maxlength = 15;
      editable = [false];
   }
   // TODO! IntDelnoteNo has been added as a Number attribute to be used in order by in client. It can be replace with alternative solution if framework give any in future.
   attribute IntDelnoteNo Text {
      fetch = "TO_NUMBER(delnote_no)";
      label = "Delivery Note No";
      maxlength = 15;
      editable = [false];
   }
   attribute InvoiceNo Text {
      fetch = "invoice_no";
      label = "Invoice No";
      maxlength = 100;
      editable = [false];
   }
   attribute SeriesId Text {
      fetch = "series_id";
      label = "Series ID";
      maxlength = 100;
      editable = [false];
   }
   attribute OrderNo Text {
      fetch = "order_no";
      label = "Order No";
      maxlength = 12;
      editable = [false];
      format = uppercase;
   }
   attribute LineNo Text {
      fetch = "line_no";
      label = "Line No";
      maxlength = 4;
      editable = [false];
   }
   attribute RelNo Text {
      fetch = "rel_no";
      label = "Del No";
      maxlength = 4;
      editable = [false];
   }
   attribute Contract Text {
      fetch = "contract";
      label = "Site";
      maxlength = 5;
      editable = [false];
      format = uppercase;
   }
   attribute CatalogNo Text {
      fetch = "catalog_no";
      label = "Sales Part No";
      required = [false];
      maxlength = 25;
      editable = [false];
   }
   attribute CustomerPartNo Text {
      fetch = "customer_part_no";
      label = "Customer's Part No";
      maxlength = 45;
      editable = [false];
   }
   attribute BuyQtyDue Number {
      fetch = "buy_qty_due";
      label = "Sales Qty";
      editable = [false];
   }
   attribute SalesUnitMeas Text {
      fetch = "sales_unit_meas";
      label = "Sales UoM";
      maxlength = 10;
      editable = [false];
   }
   attribute PriceQty Number {
      fetch = "buy_qty_due * price_conv_factor";
      label = "Price Qty";
      editable = [false];
   }
   attribute CustomerQty Number {
      fetch = "customer_qty";
      label = "Matched Qty";
      editable = [false];
   }
   attribute CustUnitSalesQty Number {
      fetch = "cust_unit_sales_qty";
      label = "Matched Customer Qty";
      editable = [false];
   }
   attribute PartPrice Number {
      fetch = "part_price";
      label = "Source Price/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute PriceSource Enumeration(PricingSource) {
      fetch = "price_source_db";
      label = "Price Source";
      maxlength = 200;
      editable = [false];
   }
   attribute CustUnitPartPrice Number {
      fetch = "cust_unit_part_price";
      label = "Self-Billed Price/Curr";
      format = ifscurrency;
   }
   attribute CustPartPrice Number {
      fetch = "cust_part_price";
      label = "Customer Part Price/Curr";
      required = [true];
      editable = [ETag = null];
      format = ifscurrency;
   }
   attribute CalculatedNetPriceCurr Number {
      fetch = "Customer_Order_Line_API.Get_Sale_Price_Total(order_no,line_no,rel_no,line_item_no)/(buy_qty_due * price_conv_factor)";
      label = "Calculated Net Price/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute TotalOrderLineDiscount Number {
      fetch = "Customer_Order_Line_API.Get_Total_Discount_Percentage(order_no,line_no,rel_no,line_item_no)";
      label = "Included Total Order Line Discount (%)";
      editable = [false];
   }
   attribute DeliveredQty Number {
      fetch = "Customer_Order_Delivery_API.Get_Qty_Shipped(deliv_no)/conv_factor";
      label = "Delivered Qty";
      editable = [false];
   }
   attribute QtyToMatch Number {
      fetch = "qty_to_match";
      label = "Total Qty to Match";
      editable = [false];
   }
   attribute CurrencyCode Text {
      fetch = "currency_code";
      label = "Currency";
      maxlength = 3;
      editable = [false];
   }
   attribute ConsignmentStock Boolean("TRUE", "FALSE") {
      fetch = "consignment_stock";
      label = "Consignment Stock";
      editable = [false];
   }
   attribute PayTermId Text {
      fetch = "pay_term_id";
      label = "Payment Terms";
      maxlength = 20;
      editable = [false];
      format = uppercase;
   }
   attribute OrderId Text {
      fetch = "order_id";
      label = "Order Type";
      maxlength = 3;
      editable = [false];
   }
   attribute GrossCurrAmount Number {
      fetch = "gross_curr_amount";
      label = "Gross Amt/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute TaxCurrAmount Number {
      fetch = "tax_curr_amount";
      label = "Tax Amt/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute NetCurrAmount Number {
      fetch = "net_curr_amount";
      label = "Net Amount/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute CustNetCurrAmount Number {
      fetch = "cust_net_curr_amount";
      label = "Self-Billed Net Amt/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute WantedDeliveryDate Date {
      fetch = "wanted_delivery_date";
      label = "Wanted Delivery Date";
      editable = [false];
   }
   attribute DateDelivered Date {
      fetch = "date_delivered";
      label = "Delivered Date";
      editable = [false];
   }
   attribute MessageId Number {
      fetch = "message_id";
      label = "Message ID";
      editable = [false];
   }
   attribute MessageRow Number {
      fetch = "message_row";
      label = "Message Row";
      editable = [false];
   }
   attribute MatchedDate Date {
      fetch = "matched_date";
      label = "Matched Date";
      editable = [false];
   }
   attribute MatchType Enumeration(SelfBillingMatchType) {
      fetch = "match_type_db";
      label = "Matching Type";
      editable = [false];
   }
   attribute Discount Number {
      fetch = "discount";
      label = "Included Discount (%)";
      editable = [false];
   }
   attribute DiscountAmount Number {
      fetch = "discount_amount";
      label = "Included Discount Amount (%)";
      editable = [false];
   }
   attribute LineItemNo Number {
      fetch = "line_item_no";
      label = "Line Item No";
      editable = [false];
   }
   attribute DelivNo Number {
      fetch = "deliv_no";
      label = "Delivery No";
      editable = [false];
   }
   attribute PriceConvFactor Number {
      fetch = "price_conv_factor";
      label = "Price Conv Factor";
      editable = [false];
   }
   attribute Reason Text {
      fetch = "reason";
      label = "Deviation Reason";
      maxlength = 10;
      format = uppercase;
   }
   attribute InvoiceId Number {
      fetch = "invoice_id";
      label = "Invoice Id";
      maxlength = 100;
      editable = [false];
   }
   attribute CustPriceConvFactor Number {
      fetch = "NVL(Ext_Inc_Sbi_Item_API.Get_Price_Conv_Factor(message_id, message_row), 1)";
      label = "Price Conv Factor";
      editable = [false];
   }
   attribute CloseDelivery Boolean("TRUE", "FALSE") {
      fetch = "decode(sign(CUSTOMER_ORDER_DELIVERY_API.Get_Confirmed_Sbi_Qty(deliv_no) - Customer_Order_Delivery_API.Get_Qty_To_Invoice(deliv_no)), -1, 'FALSE', 'TRUE')";
      label = "Close Delivery";
      editable = [false];
   }
   reference CustomerOrderLineRef(OrderNo, LineNo, RelNo, LineItemNo) to CustomerOrderLine(OrderNo, LineNo, RelNo, LineItemNo);
   reference CustomerOrderDeliveryRef(DelivNo) to CustomerOrderDelivery(DelivNo);
   reference DeliveryNoteRef(DelnoteNo) to DeliveryNote(DelnoteNo);
   reference ReasonRef(Reason) to SelfBillingDevReason(Reason) {
      label = "Deviation Reason";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

action UnmatchLine {
   initialcheck SelfBillingItemInitialCheck(SbiNo, SbiLineNo);
   ludependencies = SelfBillingHeader, SelfBillingItem;
   parameter SbiNo      Text;
   parameter SbiLineNo  Number;
}

action ModifySaleUnitPrice {
   initialcheck CustomerOrderLineInitialCheck(OrderNo, LineNo, RelNo, LineItemNo);
   parameter OrderNo       Text;
   parameter LineNo        Text;
   parameter RelNo         Text;
   parameter LineItemNo    Number;
   parameter CustPartPrice Number;
}

--------------------------------- FUNCTIONS ---------------------------------

function GetAmounts Structure(AmountsStruct) {
   parameter Company             Text;
   parameter OrderNo             Text;
   parameter LineNo              Text;
   parameter RelNo               Text;
   parameter LineItemNo          Number;
   parameter CustUnitPartPrice   Number;
   parameter CustUnitSalesQty    Number;
   parameter CustPriceConvFactor Number;
   parameter CurrencyCode        Text;
}

function GetCurrencyCode Text {
   parameter CustomerId  Text;
}

function ProvisionalPriceExist Text {
   parameter SbiNo Text;
}

function GetPriceSourceId Text {
   parameter OrderNo    Text;
   parameter LineNo     Text;
   parameter RelNo      Text;
   parameter LineItemNo Number;
}

-------------------------------- STRUCTURES ---------------------------------

structure AmountsStruct {
   attribute CustNetCurrAmount   Number;
   attribute CustGrossCurrAmount Number;
   attribute CustTaxCurrAmount   Number;
}

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

