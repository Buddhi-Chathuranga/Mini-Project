
--  Date       Sign    History
--  ------     ------  ---------------------------------------------------------
-- 2019-05-30  MaEelk  SCUXXW4-20946, Added UserAllowedSiteLov to BasePriceSiteRef.
-- 2018-05-04  RaVdlk  SCUXXW4-12020, Used PriceBreakTemplateIdRef to get the Template Description
-- 2018-05-04  RaVdlk  SCUXXW4-12020, Added the keys MinQty, MinDuration
-- 2018-04-17  RaVdlk  SCUXXW4-1236, Converted tbwPriceBreaksPerSalesPart using MTG Version: 1.16 and made the Entity into a query
-- 2018-04-09  RaVdlk  SCUXXW4-1236, Converted tbwPriceBreaksPerSalesPart using MTG Version: 1.15
--  ------     ------  ---------------------------------------------------------

projection PriceBreaksPerSalesPartsHandling;
component ORDER;
layer Core;
description "Use this page to search and view the details of all price breaks per sales part base price.";
category Users;
include fragment NonRentalSalesPartLov;
include fragment UserAllowedSiteLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset PriceBreaksPerSalesParts for PriceBreaksPerSalesPart;

------------------------------ ENTITY DETAILS -------------------------------

query PriceBreaksPerSalesPart {

   from = "price_breaks_per_sales_part";
   lu = SalesPartBasePrice;
   keys = BasePriceSite, CatalogNo, SalesPriceType, MinQty, MinDurationDb;

   attribute BasePriceSite Text;
   attribute CatalogNo Text {
      fetch = "CATALOG_NO";
      label = "Sales Part Number";
      maxlength = 25;
      format = uppercase;
   }
   attribute SalesPriceType Enumeration(SalesPriceType) {
      fetch = "Sales_Price_Type_API.Encode(Sales_Price_Type)";
      label = "Sales Price Type";
   }
   attribute SalesPriceTypeDb Text {
      fetch = "Sales_Price_Type_db";
      label = "Sales Price Type";
   }

   attribute MinQty Number {
      fetch = "MIN_QTY";
      label = "Min Qty";
   }
   attribute MinDuration Number {
      fetch = "MIN_DURATION";
      label = "Min Duration";
   }
   attribute MinDurationDb Number {
      fetch = "NVL(MIN_DURATION,-1)";
      label = "Min Duration";
   }
   attribute SalesPartDescription Text {
      fetch = "Sales_Part_API.Get_Catalog_Desc(BASE_PRICE_SITE, CATALOG_NO)";
      label = "Sales Part Description";
      maxlength = 200;
      editable = [false];
   }
   attribute BaselinePrice Number {
      format = ifscurrency;
   }
   attribute PercentageOffset Number;

   attribute AmountOffset Number;

   attribute BasePrice Number {
      format = ifscurrency;
   }
   attribute TemplatePercentageOffset Number {
      fetch = "TEMPLATE_PERCENTAGE_OFFSET";
      label = "Template Percentage Offset";
   }
   attribute PriceBreakBasePrice Number {
      fetch = "PRICE_BREAK_BASE_PRICE";
      label = "Price Break Base Price";
      format = ifscurrency;
   }
   attribute BaseCurrency Text {
      fetch = "BASE_CURRENCY";
      label = "Base Currency";
      maxlength = 3;
      format = uppercase;
   }
   attribute PriceUom Text {
      fetch = "PRICE_UOM";
      label = "Price UoM";
      maxlength = 10;
   }
   attribute PriceBreakTemplateId Text {
      fetch = "PRICE_BREAK_TEMPLATE_ID";
      label = "Price Break Template ID";
      maxlength = 10;
   }
   attribute BasePriceStatus Text {
      fetch = "BASE_PRICE_STATUS";
      label = "Sales Part Base Price Status";
      maxlength = 50;
   }
   attribute TemplateStatus Text {
      fetch = "TEMPLATE_STATUS";
      label = "Price Break Template Status";
      maxlength = 50;
   }
   reference BasePriceSiteRef(BasePriceSite) to UserAllowedSiteLov(Contract) {
      label = "Base Price Site";
   }
   reference CatalogNoRef(BasePriceSite, CatalogNo) to NonRentalSalesPartLov(Contract, CatalogNo) {
      label = "Sales Part Number";
   }
   reference BaseCurrencyRef(BaseCurrency) to IsoCurrency(CurrencyCode) {
      label = "Base Currency";
   }
   reference PriceUomRef(PriceUom) to IsoUnit(UnitCode) {
      label = "Price UoM";
   }
   reference PriceBreakTemplateIdRef(PriceBreakTemplateId) to PriceBreakTemplate(TemplateId) {
      label = "Price Break Template ID";
   }
   reference SalesPartBasePriceRef(BasePriceSite, CatalogNo, SalesPriceType) to SalesPartBasePrice(BasePriceSite, CatalogNo, SalesPriceType);

}

