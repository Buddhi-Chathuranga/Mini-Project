
--  Date       Sign    History
--  ------     ------  ---------------------------------------------------------
-- 2018-06-19  JaThlk  SCUXXW4-11617, Included UserAllowedSiteLovSelector fragment instead of UserAllowedSiteLov.
-- 2018-04-19  RaVdlk  SCUXXW4-11596, Added the description and where clause
-- 2018-04-18  RaVdlk  SCUXXW4-1216, Override the Shipment entity to get the correct SourceRefType value
-- 2018-04-09  RaVdlk  SCUXXW4-1216, Converted tbwPickingProposal using MTG Version: 1.15
--  ------     ------  ---------------------------------------------------------

projection CustomerOrderLineReservationsAnalysis;
component ORDER;
layer Core;
description "Use this page to search for reservations of customer order lines and shipment lines.
             You can retrieve information about order status, quantity of parts reserved,
from which location the parts are to be taken, and the planned delivery date.";
category Users;
include fragment UserAllowedSiteLovSelector;
include fragment SalesPartLov2;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset CustomerOrderReservations for CustomerOrderReservation;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity CustomerOrderReservation {
   crud = Read;
   where = "(ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO) IN (SELECT col.ORDER_NO, col.LINE_NO, col.REL_NO, col.LINE_ITEM_NO
             FROM CUSTOMER_ORDER_LINE col WHERE OBJSTATE IN ('Reserved', 'PartiallyDelivered', 'Picked')) AND QTY_ASSIGNED > 0";
   keys = OrderNo, LineNo, RelNo, LineItemNo, ShipmentId, Contract, PickListNo, PartNo, ConfigurationId, LocationNo, HandlingUnitId, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq {
      where = "ORDER_NO = :OrderNo and LINE_NO = :LineNo and REL_NO = :RelNo and LINE_ITEM_NO = :LineItemNo and SHIPMENT_ID = :ShipmentId and CONTRACT = :Contract and PICK_LIST_NO = :PickListNo and PART_NO = :PartNo and CONFIGURATION_ID = :ConfigurationId and LOCATION_NO = :LocationNo and HANDLING_UNIT_ID = :HandlingUnitId and LOT_BATCH_NO = :LotBatchNo and SERIAL_NO = :SerialNo and ENG_CHG_LEVEL = :EngChgLevel and WAIV_DEV_REJ_NO = :WaivDevRejNo and ACTIVITY_SEQ = :ActivitySeq";
   }
   attribute RelNo Text {
      label = "Del No";
   }
   attribute LineItemNo Number;
   attribute ShipmentId Number;
   attribute PackageComponent Boolean("TRUE", "FALSE") {
      fetch = "DECODE(LINE_ITEM_NO,0,'FALSE','TRUE')";
      label = "Package Component";
   }
   attribute PickListNo Text;
   attribute Description Text {
      fetch = "Inventory_Part_API.Get_Description(CONTRACT, PART_NO)";
      label = "Description";
      maxlength = 2000;
   }
   attribute ConfigurationId Text;
   attribute QtyAssigned Number {
      label = "Reserved";
   }
   attribute QtyPicked Number {
      label = "Picked Qty";
   }
   attribute QtyShipped Number {
      label = "Delivered Qty";
   }
   attribute AvailableQty Number {
      fetch = "Reserve_Customer_Order_API.Get_Available_Qty(order_no,line_no,rel_no,line_item_no,'TRUE')";
      label = "Available Qty";
   }
   attribute TypeDescription Text {
      fetch = "Handling_Unit_Type_API.Get_Description(Handling_Unit_API.Get_Handling_Unit_Type_Id(HANDLING_UNIT_ID))";
      label = "Type Description";
      maxlength = 2000;
   }
   attribute Warehouse Text {
      fetch = "INVENTORY_LOCATION_API.GET_WAREHOUSE(CONTRACT,LOCATION_NO)";
      label = "Warehouse";
      maxlength = 2000;
   }
   attribute Bay Text {
      fetch = "INVENTORY_LOCATION_API.GET_BAY_NO(CONTRACT,LOCATION_NO)";
      label = "Bay";
      maxlength = 2000;
   }
   attribute RowNo Text {
      fetch = "INVENTORY_LOCATION_API.GET_ROW_NO(CONTRACT,LOCATION_NO)";
      label = "Row";
      maxlength = 2000;
   }
   attribute Tier Text {
      fetch = "INVENTORY_LOCATION_API.GET_TIER_NO(CONTRACT,LOCATION_NO)";
      label = "Tier";
      maxlength = 2000;
   }
   attribute Bin Text {
      fetch = "INVENTORY_LOCATION_API.GET_BIN_NO(CONTRACT,LOCATION_NO)";
      label = "Bin";
      maxlength = 2000;
   }
   attribute LotBatchNo Text {
      label = "Lot/Batch No";
   }
   attribute SerialNo Text;
   attribute ConditionCode Text {
      fetch = "CONDITION_CODE_MANAGER_API.Get_Condition_Code(PART_NO,SERIAL_NO,LOT_BATCH_NO)";
      label = "Condition Code";
      maxlength = 2000;
      format = uppercase;
   }
   attribute ConditionCodeDescription Text {
      fetch = "CONDITION_CODE_API.Get_Description(CONDITION_CODE_MANAGER_API.Get_Condition_Code(PART_NO,SERIAL_NO,LOT_BATCH_NO))";
      label = "Condition Code Description";
      maxlength = 2000;
   }
   attribute Owner Text {
      fetch = "Inventory_Part_In_Stock_API.Get_Owner(CONTRACT,PART_NO,CONFIGURATION_ID,LOCATION_NO,LOT_BATCH_NO,SERIAL_NO,ENG_CHG_LEVEL,WAIV_DEV_REJ_NO,ACTIVITY_SEQ,HANDLING_UNIT_ID)";
      label = "Owner";
      maxlength = 2000;
   }
   attribute OwningCustomerName Text {
      fetch = "CUST_ORD_CUSTOMER_API.Get_Name(CUSTOMER_ORDER_LINE_API.Get_Owning_Customer_No(ORDER_NO,LINE_NO,REL_NO,LINE_ITEM_NO))";
      label = "Owning Customer Name";
      maxlength = 2000;
   }
   attribute EngChgLevel Text {
      label = "Revision No";
   }
   attribute CustomerName Text {
      fetch = "CUST_ORD_CUSTOMER_API.Get_Name(CUSTOMER_ORDER_API.Get_Customer_No(ORDER_NO))";
      label = "Customer Name";
      maxlength = 2000;
   }
   attribute WaivDevRejNo Text;
   attribute ActivitySeq Number {
      label = "Activity Seqence";
      // searchable = false;
   }
   attribute TopParentHandlingUnitID Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Handl_Unit_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Handling Unit ID";
      maxlength = 2000;
   }
   attribute TopParentHandlingUnitTypeID Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Hu_Type_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Handling Unit Type ID";
      maxlength = 2000;
   }
   attribute TopParentHandlingUnitTypeDesc Text {
      fetch = "Handling_Unit_Type_API.Get_Description(Handling_Unit_API.Get_Top_Parent_Hu_Type_Id(HANDLING_UNIT_ID))";
      label = "Top Parent Handling Unit Type Desc";
      maxlength = 2000;
   }
   attribute TopParentSSCC Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Sscc(HANDLING_UNIT_ID)";
      label = "Top Parent SSCC";
      maxlength = 2000;
   }
   attribute TopParentAltHandlingUnitLabelID Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Alt_Hu_Label_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Alt Handling Unit Label ID";
      maxlength = 2000;
   }
   reference CustomerOrderLineRef(OrderNo, LineNo, RelNo, LineItemNo) to CustomerOrderLine(OrderNo, LineNo, RelNo, LineItemNo);
   reference InventoryPartRef(Contract, PartNo) to InventoryPart(Contract, PartNo);
   reference HandlingUnitRef(HandlingUnitId) to HandlingUnit(HandlingUnitId);
   reference InventoryPartInStockRef(Contract, PartNo, ConfigurationId, LocationNo, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq, HandlingUnitId) to InventoryPartInStock(Contract, PartNo, ConfigurationId, LocationNo, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq, HandlingUnitId);
   reference CustomerOrderRef(OrderNo) to CustomerOrder(OrderNo);

   reference ShipmentIdRef(ShipmentId) to Shipment(ShipmentId) {
      label = "Shipment ID";
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference PartNoRef(Contract, PartNo) to SalesPartLov2(Contract, CatalogNo) {
      label = "Part No";
   }
}

@Override
entity Shipment {
   where = "(source_ref_type_db IS NOT NULL) AND (INSTR(source_ref_type_db,'CUSTOMER_ORDER') != 0)";
   attribute SourceRefType Text {
      fetch = "Logistics_Source_Ref_Type_API.Decode_List(source_ref_type_db)";
      label = "Source Ref Type";
      lovcolumn = [true];
      implementationtype = "VARCHAR2(4000)";
   }
}
