--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2021-11-12  KiSalk  Bug 161030(SC21R2-5473), Passed identifier value "FreightPriceList" to RemoveInvalidPricesDialog and RemoveBasePrices.
-- 2019-07-02  Cpeilk  SCUXXW4-21090, Concatinated with description of PriceListNo, ShipViaCode, FreightMapId, SupplierId and ForwarderInfo.
-- 2019-03-12  Kubalk  SCUXXW4-17239, Dependency annotations added.
-- 2018-05-10  SeJalk  SCUXXW4-881, Converted from dlgRemoveInvalidFreightPrices using MTG Version: 1.17
-- 2018-05-10  SeJalk  SCUXXW4-881, Converted from tbwFreightPriceList using MTG Version: 1.17
--------------------------------------------------------------------------------------
client FreightPriceLists;
component ORDER;
layer Core;
projection FreightPriceListsHandling;
include fragment CompanyHavingSiteSelector;
include fragment RemoveInvalidPricesDialog;
include fragment FreightPriceListLovSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {

   entry FreightPriceListNavEntry parent OrderNavigator.TransportationAdministrationFreight at index 200 {
      label = "Freight Price Lists";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------

page List using FreightPriceListBases {
   label = "Freight Price Lists";
   list FreightPriceList;

}

--------------------------------- COMMANDS ----------------------------------
command FreightPriceListCommand for FreightPriceListBase {
   label = "Freight Price List";
   mode = SelectedRecords;
   enabled = [SupplierId = null];
   bulkexecute {
      bulknavigate "page/FreightPriceList/Form?$filter=PriceListNo eq $[PriceListNo]";
   }
}

command DirectDeliveryFreightPriceLCommand for FreightPriceListBase {
   label = "Direct Delivery Freight Price List";
   mode = SelectedRecords;
   enabled = [SupplierId != null];
   execute {
      navigate "page/DirectDeliveryFreightPriceList/Form?$filter=PriceListNo eq $[PriceListNo]";
   }
}

command RemoveInvalidPricesCommand for FreightPriceListBase {
   label = "Remove Invalid Prices";
   mode = SelectedRecords;
   variable KeepFromDt {
      type = Date;
   }

   variable RemovedItemsNum {
      type = Number;
   }
   variable SalesPriceSelectionVar {
      type = Text;
   }
   enabled = [Objstate != "Closed"];
   bulkexecute {
      stringify(records, "PRICE_LIST_NO=${PriceListNo}^", JSON) into SalesPriceSelectionVar;
      dialog RemoveInvalidPricesDialog("FreightPriceList") into(KeepFromDt) {
         when OK {
            call RemoveBasePrices(SalesPriceSelectionVar, KeepFromDt, "FreightPriceList") into RemovedItemsNum;
            if [RemovedItemsNum > 0] {
               alert("${RemovedItemsNum} record(s) removed.");
            }
            else
               {
               alert("No records were removed.");
            }
         }
      }
   }
}

----------------------------- VISUAL COMPONENTS -----------------------------
----------------------------------- LISTS -----------------------------------
list FreightPriceList for FreightPriceListBase {
   orderby = PriceListNo;
   lov PriceListNoRef with ReferenceFreightPriceListLovSelector {
      description = Description;
      label = "Price List";
   }
   lov ContractRef with ReferenceCompanyHavingSiteSelector {
      size = Small;
   }
   badge Objstate {
      label = "Status";
      style = TextOnly;
      emphasis Progress1 = [Objstate = "Planned"];
      emphasis Progress6 = [Objstate = "Active"];
      emphasis Progress12 = [Objstate = "Closed"];
   }

   lov ShipViaCodeRef with ReferenceMpccomShipViaSelector {
      description = ShipViaCodeRef.Description;
      label = "Ship Via";
   }

   lov FreightMapIdRef with ReferenceFreightMapSelector {
      description = FreightMapIdRef.Description;
      label = "Freight Map";
   }

   lov ChargeTypeRef with ReferenceSalesChargeTypeSelector {

      description = SalesChargeTypeRef.ChargeTypeDesc;
   }
   @DynamicComponentDependency PURCH
   lov SupplierIdRef with ReferenceSupplierInfoSelector {
      contactwidget {
         enabled = [SupplierId != null];
         source = Supplier;
      }
      description = SupplierName;
   }

   field SalesChargeTypeRef.SalesUnitMeas {
      size = Small;
      label = "UoM";
   }
   field UsePriceInclTaxDb {
      size = Small;
   }
   field SalesChargeTypeRef.UnitCharge {
      size = Small;
      label = "Unit Charge";
   }

   field FreightBasis;

   lov ForwarderInfoRef with ReferenceForwarderInfoSelector {
      description = ForwarderInfoRef.Name;
      label = "Forwarder";
   }

   commandgroup CommandGroup {

      command FreightPriceListCommand;
      command DirectDeliveryFreightPriceLCommand;
   }

   commandgroup CommandGroup2 {

      command RemoveInvalidPricesCommand;
   }

}


