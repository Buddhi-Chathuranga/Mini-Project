--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-07-20  MalLlk  SCUXXW4-1356, Converted from tbwReleaseCustOrder using MTG Version: 1.22
--------------------------------------------------------------------------------------

client HandleBlockedCustomerOrders;
component ORDER;
layer Core;

include fragment SalesPartSalesmanLovSelector;
include fragment CustOrdCust1Selector;
include fragment OrderCoordinatorLovSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry ReleaseCustOrderNavEntry parent OrderNavigator.SalesOrder at index 800 {
      label = "Handle Blocked Customer Orders";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page List using CustomerOrderSet {
   label = "Handle Blocked Customer Orders";
   startupmode = search;
   list ReleaseCustOrderList;
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command ReleaseBlockedOrderCommand for CustomerOrder {
   label = "Release Blocked Order";
   mode = SelectedRecords;

   enabled = [true];
   bulkexecute {
      confirm("The customer order(s) will be released.") {
         when OK {
            call ReleaseCustomerOrder(Selection);
         }
      }
   }
}
command ReleasefromCreditCheckCommand for CustomerOrder {
   label = "Release from Credit Check";
   mode = SelectedRecords;

   enabled = [BlockedTypeDb != "ADV_PAY_BLOCKED" and BlockedTypeDb != "MANUAL_BLOCKED"];
   bulkexecute {
      confirm("The Customer Order(s) will be released from credit check.") {
         when OK {
            call ReleaseCreditCheck(Selection);
         }
      }
   }
}
@DynamicComponentDependency PAYLED
command HandlePrepaymentBasedInvoiceCommand for CustomerOrder {
   label = "Handle Prepayment Based Invoice";
   mode = SelectedRecords;

   enabled = [BlockedTypeDb != "MANUAL_BLOCKED" and PrepaymentInvMethodDb = "PREPAYMENT_BASED_INVOICE"];
   bulkexecute {
      bulknavigate "page/HandlePrepaymentBasedInvoice/Form?$filter=OrderNo eq $[OrderNo]";
   }
}
command InvoiceInfoCommand for CustomerOrder {
   label = "Invoice Info";
   mode = SelectedRecords;

   enabled = [AdvanceInvExists = true and BlockedTypeDb != "MANUAL_BLOCKED"];
   bulkexecute {
      bulknavigate "page/CustomerOrderInvoiceLines/List?$filter=OrderNo eq $[OrderNo]";
   }
}

--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------

----------------------------------- LISTS -----------------------------------

list ReleaseCustOrderList for CustomerOrder {
   field OrderNoRef {
      size = Small;
   }
   field ContractRef {
      size = Small;
   }
   field Objstate {
      size = Small;
      label = "Status";
   }
   field OrderIdRef {
      size = Small;
   }
   lov CustomerNoRef with ReferenceCustOrdCust1Selector {
      description = CustomerNoRef.Name;
      contactwidget {
         enabled = [CustomerNo != null];
         source = Customer;
      }
   }
   lov AuthorizeCodeRef with ReferenceOrderCoordinatorLovSelector {
      contactwidget {
         enabled = [AuthorizeCode != null];
         source = Person;
      }
   }
   lov SalesmanCodeRef with ReferenceSalesPartSalesmanLovSelector {
      contactwidget {
         enabled = [SalesmanCode != null];
         source = Person;
      }
   }
   @DynamicComponentDependency PAYLED
   field CreditLimit;
   field TotalGrossinclChrgBase;
   field BaseCurr {
      size = Small;
   }
   field Priority {
      size = Small;
   }
   field DescriptionofBlockingProblem {
      size = Large;
   }
   field TotalGrossinclChrgCurr;
   field ProposedPrepaymentAmount;

   commandgroup ActionsCmdGroup {
      label = "";

      command ReleaseBlockedOrderCommand {
         showasaction = IfRoom;
      }
      command ReleasefromCreditCheckCommand {
         showasaction = IfRoom;
      }
      @DynamicComponentDependency PAYLED
      command HandlePrepaymentBasedInvoiceCommand {
         showasaction = IfRoom;
      }
      command InvoiceInfoCommand {
         showasaction = IfRoom;
      }
   }
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------
