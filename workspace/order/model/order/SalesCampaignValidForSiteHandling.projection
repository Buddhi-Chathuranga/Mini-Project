--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-06-29  MAHPLK  SCUXXW4-8167, Converted from dlgCampaignSiteCluster using MTG Version: 1.23
-- 2018-06-29  MAHPLK  SCUXXW4-9687, Converted from tbwCampaignSite using MTG Version: 1.23
--------------------------------------------------------------------------------------

projection SalesCampaignValidForSiteHandling;
component ORDER;
layer Core;
description "Use this API to specify the sites the campaign is targeted to be held. However it is only possible to connect the user-allowed sites belonging to the same company. The sites can be specified manually or added from a site cluster.";
category Users;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset SalesCampaignSet for Campaign;

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity Campaign {
   array CampaignSitesArray(CampaignId) to CampaignSite(CampaignId);
}

@Override
entity CampaignSite {
   crud = Create, Delete, Read;
   keys = CampaignId, Contract {
      where = "CAMPAIGN_ID = :CampaignId and CONTRACT = :Contract";
   }
   attribute CampaignId Number {
      label = "Campaign";
      required = [true];
   }
   attribute Contract Text {
      label = "Site";
   }
   reference CampaignIdRef(CampaignId) to Campaign(CampaignId) {
      label = "Campaign";
   }
   reference ContractRef(Contract) to CompanySite(Contract) {
      label = "Site";
   }

   action AddSites {
      parameter SiteClusterId Text;
      parameter SiteClusterNodeId Text;
   }
}

---------------------------------- QUERIES ----------------------------------
query AllSiteClusterNode {
   from = "SITE_CLUSTER_NODE";
   lu = SiteClusterNode;
   where = "SITE_CLUSTER_ID IS NOT NULL";
   keys = SiteClusterId;

   attribute SiteClusterId Text;
   attribute SiteClusterNodeId Text;
   attribute Description Text;
}

-------------------------------- STRUCTURES ---------------------------------

structure CampaignSiteClusterStructure {
   attribute SiteClusterId Text {
      label = "Site Cluster";
      required = [true];
      format = uppercase;
   }
   attribute SiteClusterNodeId Text {
      label = "Site Cluster Node";
      required = [true];
      format = uppercase;
   }
   reference SiteClusterIdRef(SiteClusterId) to SiteCluster(SiteClusterId) {
      label = "Site Cluster";
   }
   reference SiteClusterNodeIdRef(SiteClusterId, SiteClusterNodeId) to SiteClusterNode(SiteClusterId, SiteClusterNodeId) {
      label = "Site Cluster Node";
   }
   reference AllSiteClusterNodeIdRef(SiteClusterNodeId) to AllSiteClusterNode(SiteClusterNodeId) {
      label = "Site Cluster Node";
   }
}

structure SiteClusterIdsStructure {
   attribute SiteClusterId Text;
}

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

function GetSiteClusterIds Text {
   parameter FullSelection Text;
}

function GetContractUserWhere List<Entity(CompanySite)> {
   parameter Company Text;
   where = "COMPANY = :Company AND contract IN (SELECT site FROM User_Allowed_Site_Pub)";
}

