--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2020-10-14  RaVdlk  SC2020R1-10556, Removed Notes command and added it as a column
-- 2018-06-29  IzShlk  SCUXXW4-1021, Converted from tbwOverviewAgrAssortDeal using MTG Version: 1.23
--------------------------------------------------------------------------------------

client AgreementAssortmentDeals;
component ORDER;
layer Core;
projection AgreementAssortmentDealsHandling;

--------------------------------- FRAGMENTS ---------------------------------
include fragment CustomerTemplateLovSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry AgreementAssortmentDealsNavEntry parent OrderNavigator.PricingCustomerAgreement at index 500 {
      label = "Agreement Assortment Deals";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page List using AgreementAssortmentDealSet {
   label = "Agreement Assortment Deals";
   startupmode = search;
   list AgreementAssortmentDealList;
}

--------------------------------- COMMANDS ----------------------------------
command CustomerAgreementCommand for AgreementAssortmentDeal {
   label = "Customer Agreement";
   enabled = [true];
   mode = SelectedRecords;

   bulkexecute {
      bulknavigate "page/CustomerAgreement/Form?$filter=AgreementId eq $[AgreementId]";
   }
}
command DealperAssortmentDiscountCommand for AgreementAssortmentDeal {
   label = "Deal per Assortment Discount";
   enabled = [true];
   mode = SingleRecord;
   variable UpdAllowedVar {
      type = Boolean;
   }
   execute {
      if [Objstate != "Closed"] {
         set UpdAllowedVar = true;
      }
      else {
         set UpdAllowedVar = false;
      }
      navigate "assistant/CustomerAgreementDealPerAssortDiscount/CustomerAgreementDealPerAssortmentDiscountAssistant?$action=SetupSourceInfo{AgreementIdVar:$[AgreementId], MinQuantityVar:$[MinQuantity], ValidFromVar:$[ValidFrom], PriceUnitMeasVar:$[PriceUnitMeas], AssortmentIdVar:$[AssortmentId], AssortmentNodeIdVar : $[AssortmentNodeId], DealPriceVar : $[DealPrice], ValidToVar:$[ValidTo], CurrencyCodeVar:$[CurrencyCode], UpdAllowedVar:$[UpdAllowedVar]}";
   }
}
command SalesPartsCommand for AgreementAssortmentDeal {
   label = "Sales Parts";
   enabled = [true];
   mode = SingleRecord;
   variable PriceSourceVar;

   execute {
      set PriceSourceVar = "AgreementAssortment";
      navigate "page/SalesPartsForAssortments/List?searchcontext=PriceSource:$[PriceSourceVar],SourceAssortment:$[AssortmentId],SourceAssortmentNode:$[AssortmentNodeId],SourceId:$[AgreementId],SourcePriceUnitMeas:$[PriceUnitMeas]";
   }
}
----------------------------------- LISTS -----------------------------------

list AgreementAssortmentDealList for AgreementAssortmentDeal {
   lov CustomerAgreementRef with ReferenceCustomerAgreementSelector {
      label = "Agreement";
      description = CustomerAgreementRef.Description;
   }
   lov CustomerNoRef with ReferenceCustomerTemplateLovSelector {
      label = "Customer";

      contactwidget {
         enabled = [CustomerNo != null];
         source = Customer;
      }
      description = CustomerName;
   }
   field CurrencyCodeRef {
      size = Small;
   }
   field Objstate;
   field AssortmentId {
      size = Small;
   }
   lov AssortmentNodeIdRef with ReferenceAssortmentNodeSelector {
      label = "Assortment Node";
      description = AssortmentNodeIdRef.Description;
   }
   field MinQuantity;
   daterangefield {
      startdate ValidFrom;
      enddate ValidTo;
      label = "Validity Period";
   }
   field PriceUnitMeasRef {
      size = Small;
   }
   field DealPrice {
      preserveprecision = [true];
   }
   field ProvisionalPriceDb;
   field NetPriceDb;
   lov DiscountTypeRef with ReferenceSalesDiscountTypeSelector {
      description = DiscountTypeRef.Description;
      validate command {
         execute {
            set Discount = DiscountTypeRef.Discount;
         }
      }
   }
   field Discount;
   field DiscountLinesExist {
      searchable = false;
   }
   field Rounding;
   field LastUpdate;
   field NoteText {
      multiline = true;
   }
   commandgroup CommandGroupCmdGroup {

      command CustomerAgreementCommand;
      command DealperAssortmentDiscountCommand;
   }

   command SalesPartsCommand;
}

