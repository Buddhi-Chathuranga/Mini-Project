-------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2020-10-14  Maeelk  SCZ-11403, IncludeCalculatedLines was set as a field instead of a badege introduced by Bug 155332(SCZ-11302)
-- 2020-09-03  KiSalk  Bug 155332(SCZ-11302), Added IncludeCalculatedLines, set it's value and passed to CalculateCommission.
-- 2019-01-31  SATGLK  SCUXXW4-8480, Converted from dlgOrderCommissionCalculate using MTG Version: 1.34
--------------------------------------------------------------------------------------
client CalculateCommissions;
component ORDER;
layer Core;
projection CalculateCommissionsHandling;

--------------------------------- FRAGMENTS ---------------------------------
include fragment UserAllowedSiteLovSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry CommissionAgreementNavEntry parent OrderNavigator.SalesCommission at index 1000 {
      label = "Calculate Commissions";
      assistant OrderCommissionCalculateAssistant;
   }
}

-------------------------------- ASSISTANTS ---------------------------------
assistant OrderCommissionCalculateAssistant for OrderCommissionCalculateStructure {
   label = "Calculate Commissions";
   init command {
      execute {
         call FetchCurrentDate() into DateUntil;
         set IncludeCalculatedLines = false;
      }
   }
   steps {
      step {
         label = "Parameters";
         group OrderCommissionCalculateGroup;
      }
      final step {
         markdowntext {
            text = "${Status}";
         }
      }
   }
   finish command {
      enabled = [CommissionReceiver != null and CommissionReceiverGroup != null and DateUntil != null and Contract != null];
      execute {
         call  CalculateCommission(CommissionReceiver, CommissionReceiverGroup, DateUntil, Contract, IncludeCalculatedLines) {
            when FAIL {
               if [not(error.Message = null)] {
                  error("${error.Message}");
                  set Status = "Task was cancelled";
                  navigate "assistant/CalculateCommissionsResults/OrderCommissionResultAssistant?$action=InitMessage{MessageStr:$[Status]}";
               }
            }
            when SUCCESS {
               set Status = "Task was successfully completed";
               navigate "assistant/CalculateCommissionsResults/OrderCommissionResultAssistant?$action=InitMessage{MessageStr:$[Status]}";
            }
         }
      }
   }
   cancel command {
      execute {
         set Status = "Task was cancelled";
         navigate "assistant/CalculateCommissionsResults/OrderCommissionResultAssistant?$action=InitMessage{MessageStr:$[Status]}";

      }
   }
   restart command {
      visible = [false];
   }
}


---------------------------------- GROUPS -----------------------------------
group OrderCommissionCalculateGroup for OrderCommissionCalculateStructure {
   label = "Parameters";
   lov ContractRef with ReferenceUserAllowedSiteLovSelector {
      description = ContractRef.ContractDesc;
   }
   lov CommissionReceiverGroupRef with CommissionReceiverGroupSelector {
      description = CommissionReceiverGroupRef.Description;
   }
   field CommissionReceiverRef {
      contactwidget {
         enabled = [CommissionReceiver != null];
         source = Person;
      }
   }
   field DateUntil;
   field IncludeCalculatedLines {
      label = "Include Calculated Lines";
      size = Small;
   }
}