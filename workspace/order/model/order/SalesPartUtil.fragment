-------------------------------------------------------------------------------------------------------
--  Date        Sign    History
--  ----------  ------  -------------------------------------------------------------------------------
--  2021-07-29  MiKulk  SC21R2-2128, Set correct MaxLengths for additional attributes in SalesPart overriden entity.
--  2021-06-28  ChBnlk  SC21R2-1412, Added attribute error_text_ SalesPartStructure.
--  2021-05-28  NiDalk  SC21R2-174, Added array and reference descriptions.
--  2021-05-13  ChBnlk  SC21R2-1188, Added CRUD = none to the entities to remove unnecessary projection entity actions grants.
--  2020-11-26  DhAplk  SC2020R1-11057, Added descriptions for SalesPartStructure related structures and overriden entities.
--  2020-11-26          Override SubstituteSalesPart, SalesPartLanguageDesc, SuggestedSalesPart entities.
--  2020-10-07  DhAplk  SC2020R1-6902, Remove AttributeStructure and add Attribute query. Added Attributes array to SalesPart overriden entity.
--  2020-04-27  Erlise  SC2020R1-52, Created to support integration projection SalesPartService.
--                      Conversion of BizApi GetSalesPart from ORDSRV/SalesPartHandling.serverpackage.
-------------------------------------------------------------------------------------------------------

fragment SalesPartUtil;
component ORDER;
layer Core;
description "This will keep the related model/structures to support the Integrations with Sales part";

--------------------------------- FRAGMENTS ---------------------------------


----------------------------- CLIENT FRAGMENTS ------------------------------


--------------------------- PROJECTION FRAGMENTS ----------------------------
@Override
@apidoc {
   @description : Overridden SalesPart entity
   @attribute Contract : The short code of the site at which the part is registered.
   @attribute CatalogNo : The sales part number or ID.
   @attribute PartNo : The inventory part number.
   @attribute SalesPriceGroupId : The sales price group to where the part belongs. Sales price groups are used to group parts with the same characteristics regarding pricing.
   @attribute EngAttribute : The characteristic template is used to describe a part with specific characteristics.
   @attribute SalesUnitMeas : The sales unit of measure indicates the unit in which the part will be sold, i.e., piece, meter, or kilo.
   @attribute ConvFactor : <<The conversion factor used to convert the customer sales quantity expressed in customer unit of measure (UoM) to the sales quantity expressed in sales UoM. The conversion formula is as follows:
   Sales Quantity = (Customer Sales Quantity * Conv. Factor) Example: The customer sales in gram [g] and the sales in kilogram [kg]. To convert the customer sales quantity of 2000 [g] into sales quantity [kg], use inventory conversion factor 0,001.
   i.e. (2000 g customer sales * 0,001 Conv. Factor) = 2 kg sales.>>
   @attribute Cost : The cost of the part used when delivering the non-inventory sales part, unless the delivery transaction refers to a direct delivery where the price from the connected purchase order line will apply.
   @attribute CustomsStatNo : The statistics number (often called commodity code) received from the customs authority. The customs statistics number is used for reports to customs authorities for imports and exports. The value is also used by the Intrastat feature in IFS Cloud.
   @attribute DateEntered : The date on which the record was created.
   @attribute DiscountGroup : Indicates if a group discount based on order amount, weight or volume is applicable to the sales part.
   @attribute ListPrice : The sales price of the current part expressed in base currency, i.e., the currency used by your company.
   @attribute ListPriceInclTax : The price per unit inclauding tax, expressed in the base currency.
   @attribute RentalListPrice : The daily rental price for the part, expressed in company's base currency. This price will be used as default, when rental price list is applicable to the customer order rental line. If you are using different sales and price units, observe that this is the price for one price unit per day.
   @attribute RentalListPriceInclTax : The daily rental price per unit including tax expressed in the base currency.
   @attribute NoteText : Notes or comments connected to the sales part.
   @attribute CatalogType : This indicates the sales part type. The sales part type can be inventory part, non inventory part, component part, or package part.
   @attribute Taxable : Indicates if tax should apply to the part.
   @attribute NonInvPartType : Indicates whether the non-inventory part is a service or goods. This value is used in the Intrastat reports for non-inventory sales parts. Non-inventory parts with category Service will not be included in the Intrastat report.
   @attribute SourcingOption : The sourcing option specified for the sales part.
   @attribute QuickRegisteredPart : Indicates if the sales part record has been generated automatically. All sales part records created outside the sales part client will be initially indicated as quick-registered.
   @attribute ExportToExternalApp : This is an indication used to decide if the sales part information should be transferred to an external application. This option is only used to narrow down the number of sales parts transferred to any external application.
   @attribute AllowPartialPkgDeliv : Indicates if the package part is allowed to be reserved, picked, and delivered as an incomplete package. However, to fully effectuate this functionality, the customer must also be setup to allow incomplete packages. If the standard setup is not to allow incomplete packages, i.e. the option is cleared, it is important to remember that it is always possible for you to override such a setup by handling the customer order line manually throughout the order flow.
   @attribute PrimaryCatalog : Indicates that the sales part is the primary sales part of the inventory part.
   @attribute UsePriceInclTax : Indicates if the price calculations are based on price incl tax or not.
   @attribute SalesType : Defines if the part can be used for sales and/or rental.
   @attribute CreateSmObjectOption : Indicates if a service management object shall be created in the IFS Maintenance component when customer order lines are delivered. At creation the service management object will get an existing location containing the customer's delivery address. If no such location exists a new location will be created with the customer's delivery address. To be able to use this functionality, the sales part must be serialized and IFS Maintenance must be installed.
   @attribute PriceChangeDate : The date on which the price on this record was last changed.
   @attribute PriceConvFactor : <<The conversion factor used to convert the sales quantity expressed in sales unit of measure (UoM) to the quantity expressed in price UoM. The conversion formula is as follows:
   Price Quantity = (Sales Quantity * Price Conv. Factor).>>
   @attribute PriceUnitMeas : The price unit of measure (UoM) used for the part, e.g., piece, meter, or kilo.
   @attribute Company : The company associated with this sales part record.
   @attribute TaxCode : The tax code that represents the tax percentage applicable to the part. It is used when the part is taxable.
   @attribute TaxClassId : The tax class used to derive a tax code for calculating tax for the sales part.
   @attribute CloseTolerance : The closing tolerance for a customer order line. The customer order line will automatically be closed after delivery if the difference between the quantity ordered and the quantity delivered is within the specified close tolerance. For instance, if the closing tolerance is set to 10% the order line will be closed if at least 90% of the ordered quantity has been delivered.
   @attribute ExpectedAveragePrice : This is the expected average price for the sales part. It may be used for forecasting or statistical purposes.
   @attribute PurchasePartNo : The purchase part number to be used if the sales part is purchased via a purchase order.
   @attribute ReplacementPartNo : This is the sales part number for the replacement part. A replacement part will supersede the current sales part at a predefined replacement date.
   @attribute DateOfReplacement : This field displays the date when the current sales part will be superseded by the replacement part indicated in the Replacement Part No field.
   @attribute CustWarrantyId : Indicates if a customer warranty is connected to the part.
   @attribute IntrastatConvFactor : The intrastat conversion factor is used when the part is connected to a customs statistic number where it is required to report a different unit other than kilograms. The conversion factor is manually calculated and entered on this field and displays the difference between the customs unit of measure and inventory unit of measure for inventory parts, and purchase unit of measure for non-inventory part lines. This information is used by the Intrastat feature.
   @attribute RuleId : The ID or short name of the sourcing rule, that will decide how this part is sourced.
   @attribute MinimumQty : The recommended minimum sales quantity, expressed in the sales unit of measure, for this sales part. When you later enter a sales quotation line, customer order line or business opportunity line for this sales part, a message will be displayed when the sales quantity does not reach this minimum sales quantity. However, you will still be able to save the line and continue to process the quotation, order or the opportunity.
   @attribute DeliveryType : The delivery type for invoices applying to trade within the European Union (EU).
   @attribute GtinNo : The Global Trade Item Number (GTIN).
   @attribute InvertedConvFactor : <<Inverted conversion factor used to convert sales quantity expressed in the sales unit of measure (UoM) to quantity expressed in the inventory UoM. The inverted conversion formula is as follows:
   Inventory Quantity = [Sales Quantity * (1 /Inverted Conversion Factor)] Example: The sales in [pcs] and the inventory in kilogram [kg]. To convert the sales quantity of 410 [pcs] into inventory quantity [kg], use inverted conversion factor 4.1, i.e., [410 pcs Sales * (1/4.1 Invert. Conv. Factor)] = 100kg Inventory.>>
   @attribute CountryOfOrigin : Indicates the short code for the country of origin for the part.
   @attribute ActivePart : Displays whether or not the part is used in the system.
   @attribute PartDescriptionInUse : The description actually used for this sales part, this description can either be the sales part description or the part catalog description depending on how this part has been setup in IFS Cloud.
   @attribute PartDescription : The description of the part number in the part catalog record.
   @attribute SalesPartDescription : The description of the part, in the language indicated in the Language field. This makes it possible to view the description of the part in the customer's language.
   @attribute SalesGroupId : The sales group to where the part belongs. Sales groups are used for logical grouping of parts.
   @attribute SalesGroupDesc : The description of the Sales Group.
   @attribute SalesPriceGroupDesc : The description of the Sales Price Group.
   @attribute RebateGroupId : The short code of the sales part rebate group. A rebate group is a logical grouping of the sales parts used for calculating customer rebates, in order to give different rebate to different groups of parts.
   @attribute RebateGroupDesc : the description of the sales rebate group.
   @attribute PriceCurrencyCode : The currency code value for each unit price.
   @attribute QuantityAvailable : The quantity of the part available for sale, excluding those with ownership type Customer Owned or Supplier Loaned.
   @attribute SalesPartActive : Displays whether or not the part is used in the system.
   @navigation Languages : Include sales part information in a specific language as defined in IFS Cloud.
   @navigation SubstituteParts : Include substitute part information connected to a specific sales part record in IFS Cloud.
   @navigation ComplementaryParts : Include complementary part information connected to a specific sales part record in IFS Cloud.
   @navigation Components : Include component information if this sales part is connected to a package part record in IFS Cloud.
   @navigation Attributes : Include information related to custom fields created for a specific sales part record in IFS Cloud.
   @navigation DiscountGroupRef : Include discount information connected to the specific sales part in IFS Cloud.
   @navigation SalesPriceGroupRef : Include sales price group information connected to the specific sales part in IFS Cloud.
}
entity SalesPart {
   crud = None;
   use attributes = PartNo, CatalogGroup, SalesPriceGroupId, EngAttribute, SalesUnitMeas,
   ConvFactor, Cost, CustomsStatNo, DateEntered, DiscountGroup, ListPrice, ListPriceInclTax, RentalListPrice, RentalListPriceInclTax, NoteText,
   Activeind, CatalogType, Taxable, NonInvPartType, SourcingOption, QuickRegisteredPart, ExportToExternalApp, AllowPartialPkgDeliv, PrimaryCatalog,
   UsePriceInclTax, SalesType, CreateSmObjectOption, PriceChangeDate, PriceConvFactor, PriceUnitMeas, Company, TaxCode, TaxClassId, CloseTolerance,
   ExpectedAveragePrice, PurchasePartNo, ReplacementPartNo, DateOfReplacement, CustWarrantyId, IntrastatConvFactor, RuleId, MinimumQty, DeliveryType,
   SalesPartRebateGroup, GtinNo, InvertedConvFactor, SalesType, CountryOfOrigin;

   attribute Activeind Enumeration(ActiveSalesPart) {
      alias = "ActivePart";
   }
   attribute PartDescriptionInUse Text {
      fetch = "Sales_Part_API.Get_Catalog_Desc(contract, catalog_no)";
      maxlength = 200;

   }
   attribute PartDescription Text {
      fetch = "Part_Catalog_API.Get_Description(catalog_no)";
      maxlength = 200;

   }
   attribute CatalogDesc Text {
      alias = "SalesPartDescription";
      maxlength = 200;

   }
   attribute CatalogGroup Text {
      alias = "SalesGroupId";
      maxlength = 10;

   }
   attribute SalesGroupDesc Text {
      fetch = "Sales_Group_API.Get_Description(catalog_group)";
      maxlength = 35;

   }
   attribute SalesPriceGroupDesc Text {
      fetch = "Sales_Price_Group_API.Get_Description(sales_price_group_id)";
      maxlength = 35;
   }
   attribute SalesPartRebateGroup Text {
      alias = "RebateGroupId";
      maxlength = 10;
   }
   attribute RebateGroupDesc Text {
      fetch = "Sales_Part_Rebate_Group_API.Get_Description(sales_part_rebate_group)";
      maxlength = 35;
   }
   attribute PriceCurrencyCode Text {
      fetch = "Company_Finance_API.Get_Currency_Code(Site_API.Get_Company(contract))";
      maxlength = 3;
   }
   attribute QuantityAvailable Number {
      fetch = "Inventory_Part_In_Stock_API.Get_Avail_Plan_Qty_Loc_Type(contract, part_no, NULL, NULL, 'AVAILABLE', NULL, 'PICKING', 'F', 'SHIPMENT', 'MANUFACTURING')";
   }
   attribute SalesPartActive Text {
      fetch = "Sales_Part_Util_API.Get_Sales_Part_Status(contract, catalog_no)";
      maxlength = 5;
   }
   attribute ErrorText Text {
      fetch = "''";
      maxlength = 20000;
   }

   reference DiscountGroupRef(DiscountGroup) to SalesDiscountGroup(DiscountGroup);
   reference SalesPriceGroupRef(SalesPriceGroupId) to SalesPriceGroup(SalesPriceGroupId);

   array Languages(Contract, CatalogNo) to SalesPartLanguageDesc(Contract, CatalogNo);
   array SubstituteParts(Contract, CatalogNo) to SubstituteSalesPart(Contract, CatalogNo);
   array ComplementaryParts(Contract, CatalogNo) to SuggestedSalesPart(Contract, ParentPartNo);
   array Components(Contract, CatalogNo) to SalesPartPackage(Contract, ParentPart);
   array Attributes(Contract, CatalogNo) to Attribute(Contract, CatalogNo);
}

@Override
@apidoc {
   @description : Overridden SalesDiscountGroup entity
   @attribute DiscountGroup : Indicate if a group discount based on order amount, weight or volume is applicable to the sales part.
   @attribute Description : The description of the discount group.
   @attribute DiscountCode : This indicates whether the discount is be based on the order volume, the order weight or the order net amount.
}
entity SalesDiscountGroup {
   crud = None;
   use attributes = Description, DiscountCode;
}

@Override
@apidoc {
   @description : Overridden SubstituteSalesPart entity
   @attribute Contract : The short code for the site.
   @attribute CatalogNo : The sales part number or ID.
   @attribute SubstituteSalesPart : The part number of the substitute sales part.
}
entity SubstituteSalesPart {
   crud = None;
   exclude attributes = Priority;
}

@Override
@apidoc {
   @description : Overridden SalesPartLanguageDesc entity
   @attribute Contract : The short code for the site.
   @attribute CatalogNo : The sales part number or ID.
   @attribute LanguageCode : The language code of the Sales Part description.
   @attribute CatalogDesc : The description of the part, in the language indicated in the Language code field. This makes it possible to view the description of the part in the customer's language.
}
entity SalesPartLanguageDesc {
   crud = None;
   exclude attributes = NoteId;
}

@Override
@apidoc {
   @description : Overridden SuggestedSalesPart entity
   @attribute Contract : The short code for the site.
   @attribute ParentPartNo : The parent part number in this complementary part relation.
   @attribute SuggestedPartNo : The part number of the complementary sales part that is suggested when an order line with the parent part is entered.
}
entity SuggestedSalesPart {
   crud = None;
}

@Override
@apidoc {
   @description : Overridden SalesPriceGroup entity
   @attribute SalesPriceGroupId : The ID of the sales price group. Sales price groups are used to group parts with the same characteristics regarding pricing.
   @attribute Description : The description of the Sales Price Group.
   @attribute SalesPriceGroupType : The sales price group type determines whether the sales price group is Part Based or Unit Based.
   @attribute SalesPriceGroupUnit : The unit of measure specified for the unit based price group.
}
entity SalesPriceGroup {
   crud = None;
   use attributes = Description, SalesPriceGroupType, SalesPriceGroupUnit;
}

@Override
@apidoc {
   @description : Overridden SalesPartPackage entity
   @attribute Contract : The short code for the site.
   @attribute ParentPart : The parent part number, e.g., the package part number.
   @attribute CatalogNo : The sales part number or ID of the component part.
   @attribute QtyPerAssembly : This is the quantity per assembly for this component. It is the quantity needed to assemble one unit of the package part.
}
entity SalesPartPackage {
   crud = None;
   exclude attributes = LineItemNo;
}

-------------------------------- STRUCTURES ---------------------------------

@apidoc {
   @description : Data structure for Get Sales Part response
}
structure SalesPartStructure using SalesPart {
   nestedwithcrud = ReadAndWrapWithJson;
   implementation = "Utility";

}

@apidoc {
   @description : Additional attributes of Sales Part in SalesPartStructure.
   @attribute CatalogNo : An attribute used for internal use.
   @attribute Contract : An attribute used for internal use.
   @attribute AttributeName : The custom field name.
   @attribute AttributeValue : The custom field value.
}
query Attribute {
   from = "Sales_Part";
   keys = Contract, CatalogNo;

   attribute CatalogNo Text {
      maxlength = 25;
   }
   attribute Contract Text {
      maxlength = 5;
   }
   attribute AttributeName Text {
      maxlength = 200;
      fetch = "''";
   }
   attribute AttributeValue Text {
      maxlength = 2000;
      fetch = "''";
   }
}

@apidoc {
   @description : Data structure for Get Sales Part payload
   @attribute Site : The site ID in IFS Cloud. When specified it will retrieve sales part information connected only to this specific site.
   @attribute SalesPartNo : The sales part number for which to retrieve information. When specified it will retrieve sales part  information only for this part number defined in IFS Cloud.
   @attribute SalesGroup : The sales group to where the part belongs. Sales groups are used for logical grouping of parts. When specified it will retrieve sales part  information for parts connected to this sales group in IFS Cloud.
   @attribute SalesPriceGroup : The sales price group to where the part belongs. Sales price groups are used to group parts with the same characteristics regarding pricing. When specified it will retrieve sales part  information for parts connected to this sales price group in IFS Cloud.
   @attribute DiscountGroup : The discount group to where the part belongs. Discount groups are used for logical grouping of parts with the same discount criterias. When specified it will retrieve sales part  information for parts connected to this discount group in IFS Cloud.
   @attribute SalesGrpInCondition : Used as a parameter where a list of sales groups can be entered as a search criteria. When specified it will retrieve sales part  information for parts connected to this sales group in IFS Cloud.
   @attribute SalesPriceGrpInCondition : Used as a parameter where a list of sales price groups can be entered as a search criteria. When specified it will retrieve sales part  information for parts connected to this sales price group in IFS Cloud.
   @attribute DiscountGrpInCondition : Used as a parameter where a list of discount groups can be entered as a search criteria.When specified it will retrieve sales part  information for parts connected to this discount group in IFS Cloud.
   @attribute ChangedSinceNumberOfDays : This attribute can be used to set a criteria to only retrieve records that has been changed during a certain time frame.
   @attribute UseExportToExternalApp : This attribute determine if only sales parts with export to external application set to true should be included in the response payload or not. Valid values for this field is true or false.
   @attribute UseActiveInDatabase : This attribute determine if only sales parts with status active should be included in the response payload or not. Valid values for this field is true or false.
   @attribute ExcludeSubstituteParts : This attribute determine if attributes related to substitute parts should be included in the response payload or not. Valid values for this field is true or false.
   @attribute ExcludeComplementaryParts : This attribute determine if attributes related to complementary parts should be included in the response payload or not. Valid values for this field is true or false.
   @attribute IncludeAttributes : This attribute determine if the defined extra attributes should be included in the response payload or not. Valid values for this field is true or false.
}
structure SalesPartParamsStructure {
   implementation = "Utility";
   attribute Site Text {
      required = [true];
      maxlength = 5;
   }
   attribute SalesPartNo Text {
      maxlength = 25;
   }
   attribute SalesGroup Text {
      maxlength = 10;
   }
   attribute SalesPriceGroup Text {
      maxlength = 10;
   }
   attribute DiscountGroup Text {
      maxlength = 6;
   }
   attribute SalesGrpInCondition Text {
      maxlength = 2000;
   }
   attribute SalesPriceGrpInCondition Text {
      maxlength = 2000;
   }
   attribute DiscountGrpInCondition Text {
      maxlength = 2000;
   }
   attribute ChangedSinceNumberOfDays Integer;
   attribute UseExportToExternalApp Boolean;
   attribute UseActiveInDatabase Boolean;
   attribute ExcludeSubstituteParts Boolean;
   attribute ExcludeComplementaryParts Boolean;
   attribute IncludeAttributes Boolean;
}