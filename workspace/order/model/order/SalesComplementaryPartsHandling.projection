------------------------------------------------------------------------------------------------------------
-- Date        Sign       History
-- ----------  ------   ------------------------------------------------------------------------------------
-- 2021-07-26  ChFolk   SCZ-15615(Bug-160007), Included fragment ConnectObjectToActivityDialog. Added function GetProjectInfo and structure ProjectInfoStructure. Added new attributes ParentSourceNo and
-- 2021-07-26           ProjectConnectAtCreation into SuggestedSalesPartVirtual. Added ActivitySeq into SuggestedSalesPartListVirtual.
-- 2019-09-16  Rulilk   SCFALL19-391, Modified method CreateRecords by adding LineNo and ReleaseNo as parameters.
-- 2019-08-20  MalLlk   SCUXXW4-22978, Renamed the projection ManageComplementaryPartsAssistant to SalesComplementaryPartsHandling.
-- 2019-07-11  RuLiLk   SCUXXW4-23041, Modified method PrePostingCommand. Values for LineNo and ReleaseNo is not set after CreateRecord methods as it will show inline editing icon for save multiple times.
-- 2019-07-04  MiKulk   SCUXXW4-22978, Supporting to move assistant ComplementaryPartsAssistant to a seperate projection.
-- 2019-04-30  Chbnlk   SCUXXW4-8515,  Included the fragment PrePostingWithSourceAssistant.
-- 2019-03-31  ChBnlk   SCUXXW4-18291, Fixed the refresh issue reported through this bug.
-- 2019-03-31  ChBnlk   SCUXXW4-18215, Implemented the Cancel command.
-- 2019-03-20  ChBnlk   SCUXXW4-8517, Modified file to support Sales Quotation Template.
-- 2018-11-20  RuLiLk   SCUXXW4-8810, Converted from dlgSuggestedSalesPart using MTG Version: 1.33
-----------------------------------------------------------------------------------------------------------

projection SalesComplementaryPartsHandling;
component ORDER;
layer Core;
description "Use this API to add complementary parts to a customer order.";
category Users;

--------------------------------- FRAGMENTS ---------------------------------

include fragment SalesPartActiveLovSelector;
@DynamicComponentDependency PROJ
include fragment ConnectObjectToActivityDialog;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset SuggestedSalesPartSet for SuggestedSalesPartVirtual;

------------------------------ ENTITY DETAILS -------------------------------

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

function IsMandatoryPrePosting Boolean {
   initialcheck none;
   parameter OrderNo Text;
   parameter Contract Text;
}

action CreateRecords Structure(ReturnValues) {
   initialcheck implementation;
   parameter Source Text;
   parameter ParentObjKey Text;
   parameter SuggestedPartNo Text;
   parameter SuggestedLineNo Text;
   parameter SuggestedRelNo  Text;

   ludependencies = OrderQuotationLine, CustomerOrder, CustomerOrderLine;
}

--------------------------------- FUNCTIONS ---------------------------------

function GetPrice Structure(StructGetPrice) {
   parameter Source Text;
   parameter SourceNo Text;
   parameter SuggestedPartNo Text;
   parameter TaxCode Text;
   parameter Quantity Number;
   parameter PriceEffectivityDate Date;
}

function GetProjectInfo Structure(ProjectInfoStructure) {
   parameter ParentSourceNo Text;
   parameter Source Text;
}

-------------------------------- STRUCTURES ---------------------------------
structure StructGetPrice {
   attribute Price Number;
   attribute PriceInclTax Number;
   attribute PriceSource Text;
   attribute PriceSourceId Text;
}

structure ReturnValues {
   attribute LineNo Text;
   attribute ReleaseNo Text;
   attribute PreAccountingId Number;
}

structure ProjectInfoStructure {
   attribute Company Text;
   attribute Contract Text;
   attribute ProjectId Text;
}

--------------------------------- VIRTUALS ----------------------------------
virtual SuggestedSalesPartVirtual {
   attribute Record Text;
   attribute Source Text;
   attribute ObjRecord Text;
   attribute ParentSourceNo Text;
   attribute ProjectConnectAtCreation Boolean;

   array RelatedPartsArray() to SuggestedSalesPartListVirtual();
}

virtual SuggestedSalesPartListVirtual {
   crud = Read, Update;

   attribute SourceNo Text;
   attribute LineNo Text;
   attribute ReleaseNo Text;
   attribute ParentPartNo Text {
      fetch = "parent_part_no";
      label = "Parent Part No";
      required = [false];
      maxlength = 100;
      editable = [false];
   }
   attribute Description Text {
      fetch = "Sales_Part_API.Get_Catalog_Desc(contract,parent_part_no)";
      label = "Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute Contract Text {
      fetch = "contract";
      label = "Site";
      maxlength = 5;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute BuyQtyDue Number {
      label = "Sales Qty";
   }
   attribute Quantity Number {
      fetch = "NVL(Quantity,0)";
      label = "Complementary Part Qty";
      required = [true];
   }
   attribute SuggestedPartNo Text {
      fetch = "suggested_part_no";
      label = "Complementary Part No";
      maxlength = 25;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute Price Number {
      label = "Price";
      updatable = [true];
      format = ifscurrency;
   }
   attribute PriceInclTax Number {
      label = "Price incl Tax/Base";
      editable = [true];
      updatable = [true];
      format = ifscurrency;
   }
   attribute TaxCodeDescription Text {
      fetch = "Statutory_Fee_API.Get_Description(Site_API.Get_Company(contract),Sales_Part_API.Get_Tax_Code(contract, suggested_part_no))";
      label = "Tax Code Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute PriceSource Text {
      label = "Price Source";
      maxlength = 100;
      editable = [false];
      updatable = [true];
   }
   attribute PriceSourceId Text {
      label = "Price Source ID";
      maxlength = 100;
      editable = [false];
      updatable = [true];
   }

   attribute FeeRate Number {
      fetch = "Statutory_Fee_API.Get_Fee_Rate(Site_API.Get_Company(contract),Sales_Part_API.Get_Tax_Code(contract,suggested_part_no))";
      editable = [false];
   }
   attribute  UsePriceInclTax Text;
   attribute  WantedDeliveryDate Date;
   attribute  PlannedDeliveryDate Date;
   attribute  PriceEffectivityDate Date;
   attribute  ActivitySeq Number;
   
   reference SalesPartRef(Contract, SuggestedPartNo) to SalesPart(Contract, CatalogNo);
   reference SuggestedPartNoRef(Contract, SuggestedPartNo) to SalesPartActiveLov(Contract, CatalogNo) {
      label = "Complementary Part";
   }
   reference ParentPartNoRef(ParentPartNo) to SuggestedSalesPart(ParentPartNo) {
      label = "Parent Part No";
   }
   reference DescriptionRef(Description) to SuggestedSalesPart(ParentPartNo) {
      label = "Description";
   }
}
--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------
