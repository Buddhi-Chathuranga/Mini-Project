---------------------------------------------------------------------------------------------------
-- Date Sign History
-- ---------- ------ ------------------------------------------------------------------------------
-- 2020-11-25 RavDlk SC2020R1-11402, Handled NVL for the Contract
-- 2020-11-09 RavDlk SC2020R1-11228, Handled enumeration 'PreferredPriceList'
-- 2018-05-03 HaPulk SCUXXW4-9815, Converted from tbwCustConnectedPriceLists using MTG Version: 1.16
----------------------------------------------------------------------------------------------------
projection PriceListPerCustomerHandling;
component ORDER;
layer Core;
description "Use this API to view and search for the details of all the price lists connected either
             directly or indirectly to a particular customer";
category Users;
----------------------------- MAIN ENTRY POINTS -----------------------------
entityset SalesPriceCustConnectedLists for SalesPriceCustConnectedList;

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity SalesPriceCustConnectedList using SalesPriceList {
   crud = Read;
   from = "cust_connected_price_lists";

   keys = CustomerNo, PriceListNo, CustPriceGroupIdDb, HierarchyIdDb, ParentCustomerDb, SalesPriceGroupId, CurrencyCode, Contract;

   attribute CustomerNo Text {
      fetch = "CUSTOMER_NO";
      label = "Customer";
      maxlength = 20;
      editable = [false];
      format = uppercase;
   }
   attribute PriceListNo Text {
      editable = [false];
   }
   attribute CustPriceGroupId Text {

      fetch = "CUST_PRICE_GROUP_ID";
      label = "Cust Price Group";
      maxlength = 10;
      editable = [false];
      format = uppercase;
   }

   // Used to handle NULL values since this column is part of the Primary Keys
   attribute CustPriceGroupIdDb Text {

      fetch = "NVL(CUST_PRICE_GROUP_ID, CHR(32))";

      label = "Cust Price Group";
      maxlength = 10;
      editable = [false];
      format = uppercase;
   }

   attribute HierarchyId Text {
      fetch = "HIERARCHY_ID";
      label = "Hierarchy";
      maxlength = 10;
      editable = [false];
      format = uppercase;
   }

   // Used to handle NULL values since this column is part of the Primary Keys
   attribute HierarchyIdDb Text {
      fetch = "NVL(HIERARCHY_ID, CHR(32))";
      label = "Hierarchy";
      maxlength = 10;
      editable = [false];
      format = uppercase;
   }

   attribute ParentCustomer Text {
      fetch = "PARENT_CUSTOMER";
      label = "Parent Customer ID";
      maxlength = 20;
      editable = [false];
      format = uppercase;
   }
   // Used to handle NULL values since this column is part of the Primary Keys
   attribute ParentCustomerDb Text {
      fetch = "NVL(PARENT_CUSTOMER,CHR(32))";
      label = "Parent Customer ID";
      maxlength = 20;
      editable = [false];
      format = uppercase;
   }
   attribute CurrencyCode Text {
      label = "Currency";
      editable = [false];
   }
   attribute SalesPriceGroupId Text {
      label = "Sales Price Group";
      editable = [false];
   }
   attribute SalesPriceGroupDescription Text {
      fetch = "Sales_Price_Group_API.Get_Description(SALES_PRICE_GROUP_ID)";
      label = "Sales Price Group Description";
      maxlength = 100;
      editable = [false];
   }
   attribute PreferredPriceList Enumeration(PreferredPriceList) {
      fetch = "PREFERRED_PRICE_LIST_DB";
      label = "Preferred Price List";
      editable = [false];
      required = [true];
   }
   attribute Contract Text {
      fetch = "NVL(CONTRACT, CHR(32))";
      label = "Valid for Site";
      maxlength = 5;
      editable = [false];
      format = uppercase;
   }
   attribute UsePriceBreakTemplatesDb Boolean("TRUE", "FALSE") {
      fetch = "USE_PRICE_BREAK_TEMPLATES_DB";
      label = "Use Price Break Templates";
      editable = [false];
   }
   attribute AwaitReviewDb Boolean("TRUE", "FALSE") {
      fetch = "AWAIT_REVIEW_DB";
      label = "Await Review";
      editable = [false];
   }
   attribute DefaultBasePriceSite Text {
      label = "Base Price Site";
      maxlength = 20;
      editable = [false];
   }
   attribute DefaultPercentageOffset Number {
      label = "Percentage Offset";
      editable = [false];
      format = ifscurrency;
   }
   attribute DefaultAmountOffset Number {
      label = "Amount Offset";
      editable = [false];
      format = ifscurrency;
   }
   attribute SubscribeNewSalesPartsDb Boolean("TRUE", "FALSE") {
      fetch = "SUBSCRIBE_NEW_SALES_PARTS_DB";
      label = "Subscribe to New Sales Parts";
      editable = [false];
   }
   reference CustomerInfoRef(CustomerNo) to  CustomerInfo(CustomerId);

   reference SalesPriceGroupRef(SalesPriceGroupId) to SalesPriceGroup(SalesPriceGroupId);
   reference CustomerNoRef(CustomerNo) to CustOrdCustomer(CustomerNo) {
      label = "Customer";
   }

   reference PriceListNoRef(PriceListNo) to SalesPriceList(PriceListNo) {
      label = "Price List";
   }

   reference CustPriceGroupIdRef(CustPriceGroupId) to CustPriceGroup(CustPriceGroupId) {
      label = "Cust Price Group";
   }
   reference HierarchyIdRef(HierarchyId) to CustomerHierarchy(HierarchyId) {
      label = "Hierarchy";
   }
   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Currency";
   }
   reference SalesPriceGroupIdRef(SalesPriceGroupId) to  SalesPriceGroup(SalesPriceGroupId) {
      label = "Sales Price Group";
   }
   reference ContractRef(Contract) to  Site(Contract) {
      label = "Valid for Site";
   }
}