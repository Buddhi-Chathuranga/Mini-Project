--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2021-08-12  ErRalk  SC21R2-2263, Added PlannedDueDateTruncated to fix navigator issues in Shipping Planner Outbound Lobby Pages.
-- 2020-11-18  RaVdlk  SC2020R1-11348, Handled the enumeration CtpPlanned
-- 2020-03-03  ErFelk  Bug 152764(SCZ-9064), Removed the reference CustomerOrderLineRef and placed the attributes ClassificationStandard,
-- 2020-03-03          ClassificationPartNo and ClassificationUnitMeas in CustomerOrderLine entity. Also removed duplicate references
-- 2020-03-03          CustomerOrderLineRef and InventoryPartRef.
-- 2020-01-24  RaVdlk  SCXTEND-458, Modified the reference SalesContractNoRef
-- 2019-05-24  RaVdlk  SCUXXW4-21407, Added the missing field "QtyConfirmeddiff" and cancel reason ref
-- 2019-03-14  RoJalk  SCUXXW4-17232, Added missing dependencies.
-- 2018-04-23  MAHPLK  SCUXXW4-1309, Converted from tbwQueryCustOrdLine using MTG Version: 1.16
--------------------------------------------------------------------------------------

projection CustomerOrderLinesAnalysis;
component ORDER;
layer Core;
description "Use this API to view existing customer orders by order lines. You can receive information about order status and type, delivery status (quantity delivered and invoiced), and planned or actual delivery date.";
category Users;
include fragment CustOrdCust1Lov;
include fragment UserAllowedSiteLovSelector;
@DynamicComponentDependency CONMGT
include fragment ConItemCustOrderLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset CustomerOrderLines for CustomerOrderLine;

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity CustomerOrderLine {
   crud = Read;
   from = "customer_order_join";
   keys = OrderNo, LineNo, RelNo, LineItemNo {
      where = "ORDER_NO = :OrderNo and LINE_NO = :LineNo and REL_NO = :RelNo and LINE_ITEM_NO = :LineItemNo";
   }
   attribute RelNo Text {
      label = "Del No";
   }
   attribute Company Text {
      fetch = "COMPANY";
   }
   attribute CustomerName Text {
      fetch = "CUSTOMER_NAME";
      label = "Customer Name";
      maxlength = 100;
   }
   attribute CatalogNo Text {
      label = "Sales Part No";
   }
   attribute CatalogDesc Text {
      label = "Description";
   }
   attribute CatalogType Text {
      fetch = "CATALOG_TYPE";
      label = "Sales Part Type";
      maxlength = 20;
   }
   attribute ConditionCode Text;
   attribute PartOwnership Enumeration(PartOwnership) {
      label = "Ownership";
   }
   attribute Owner Text {
      fetch = "Customer_Order_Line_API.Get_Owner_For_Part_Ownership(ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO, PART_OWNERSHIP_DB)";
      label = "Owner";
   }
   attribute OwningCustomerName Text {
      fetch = "CUST_ORD_CUSTOMER_API.Get_Name(OWNING_CUSTOMER_NO)";
      label = "Owning Customer Name";
   }
//   attribute SupplyCode Text {
//      fetch = "SUPPLY_CODE";
//   }
   attribute VendorNo Text;
   attribute SupplySiteReservedQty Number {
      fetch = "Co_Supply_Site_Reservation_API.Get_Qty_Reserved(ORDER_NO,LINE_NO,REL_NO,LINE_ITEM_NO)";
      label = "Supply Site Reserved Qty";
   }
   attribute SupplySiteReserveType Enumeration(SupplySiteReserveType) {
      label = "Supply Site Reservation Type";
   }
   attribute BuyQtyDue Number {
      label = "Sales Qty";
   }
   attribute InvertedConvFactor Number {
      label = "Inverted Conversion Factor";
   }
   attribute RevisedQtyDue Number {
      label = "Inventory Qty";
   }
   attribute QtyAssigned Number {
      label = "Reserved Qty";
   }
   attribute QtyOnOrder Number {
      label = "Pegged Qty";
   }
   attribute QtyToShip Number {
      label = "Non-Inventory Qty to Deliver";
   }
   attribute DeliveredQty Number {
      fetch = "DECODE(SALES_PART_API.Get_Catalog_Type_Db(CONTRACT, CATALOG_NO), 'INV', QTY_SHIPPED, NULL)";
      label = "Delivered Qty";
   }
   attribute QtyShipdiff Number {
      label = "Qty Diff when Delivered";
   }
   attribute QtyConfirmeddiff Number {
      label = "Delivered Qty Diff from Confirmed";
   }
   attribute QtyReturned Number {
      label = "Returned Qty";
   }
   attribute QtyInvoiced Number {
      label = "Invoiced Qty";
   }
   attribute SalesUnitMeas Text {
      label = "Sales UoM";
   }
   attribute SaleUnitPrice Number {
      label = "Sales Price";
      format = ifscurrency;
   }
   attribute CurrencyRate2 Number {
      fetch = "Order_Currency_Rate_Util_API.Get_Fin_Curr_Rate(CURRENCY_RATE, COMPANY, CURRENCY_CODE)";
      label = "Currency Rate";
   }
   attribute BaseSaleUnitPrice Number {
      label = "Sales Price/Base";
      format = ifscurrency;
   }
   attribute Cost Number {
      format = ifscurrency;
   }
   attribute WantedDeliveryDate Timestamp {
      label = "Wanted Delivery Date/Time";
   }
   attribute TargetDate Timestamp {
      label = "Target Date/Time";
   }
   attribute PlannedDeliveryDate Timestamp {
      label = "Planned Delivery Date/Time";
   }
   attribute PromisedDeliveryDate Timestamp {
      label = "Promised Delivery Date/Time";
   }
   attribute RealShipDate Date {
      label = "Last Actual Ship Date";
   }
   attribute DateEntered Date {
      fetch = "TRUNC(date_entered)";
      label = "Created";
   }
   attribute PriceEffectivityDate Timestamp {
      label = "Price Effective Date";
   }
   attribute PlannedShipDate Timestamp {
      label = "Planned Ship Date/Time";
   }
   attribute CloseTolerance Number {
      label = "Closing Tolerance (%)";
   }
   attribute Discount Number {
      label = "Discount (%)";
   }
   attribute OrderDiscount Number {
      label = "Group Discount (%)";
   }
   attribute AdditionalDiscount Number {
      label = "Additional Discount (%)";
   }
   attribute TotalOrderLineDiscount Number {
      fetch = "Customer_Order_Line_Api.Get_Total_Discount_Percentage(ORDER_NO,LINE_NO,REL_NO,LINE_ITEM_NO)";
      label = "Total Order Line Discount (%)";
   }
   attribute LineTotalQty Number {
      label = "Volume";
   }
   attribute LineTotalWeight Number {
      label = "Weight";
   }
   attribute DemandCode Enumeration(OrderSupplyType);
   attribute DemandOrderRef1 Text {
      label = "Order Ref 1";
   }
   attribute DemandOrderRef2 Text {
      label = "Order Ref 2";
   }
   attribute DemandOrderRef3 Text {
      label = "Order Ref 3";
   }
   attribute OriginalPartNo Text {
      label = "Original Sales Part No";
   }
   attribute Priority Number {
      fetch = "PRIORITY";
      label = "Priority";
   }
   attribute OriginatingRelNo Text {
      label = "Previous Delivery No";
   }
   attribute SupplySiteDueDate Date;
   attribute LatestReleaseDate Date;
   attribute CtpPlanned Enumeration(GenYesNo) {
      fetch = "CTP_PLANNED_DB";
      label = "Capability Check";
   }
   attribute CancelReason Text;
   attribute CancellationReasonDescription Text {
      fetch = "ORDER_CANCEL_REASON_API.GET_REASON_DESCRIPTION(CANCEL_REASON)";
      label = "Cancellation Reason Description";
   }
   attribute SalesContractNo Text {
      fetch = "SALES_CONTRACT_NO";
      label = "Sales Contract No";
   }
   attribute PickedQty Number {
      fetch = "DECODE(SALES_PART_API.Get_Catalog_Type_Db(CONTRACT, CATALOG_NO), 'INV', QTY_PICKED, NULL)";
      label = "Picked Qty";
   }
   attribute PickedQtySalesUoM Number {
      fetch = "QTY_PICKED/CONV_FACTOR";
      label = "Picked Qty/Sales UoM";
   }
   attribute DeliveredQtySalesUoM Number {
      fetch = "QTY_SHIPPED/CONV_FACTOR";
      label = "Delivered Qty/Sales UoM";
   }
   attribute OpenShipmentQty Number {
      label = "Open Shipment Qty";
   }
   attribute ShipmentConnectableQty Number {
      fetch = "(REVISED_QTY_DUE - QTY_SHIPPED - OPEN_SHIPMENT_QTY + QTY_SHIPDIFF)";
      label = "Shipment Connectable Qty";
   }
   attribute ClassificationStandard Text {
      label = "Classification Standard";
   }
   attribute ClassificationPartNo Text {
      label = "Classification Part No";
   }
   attribute ClassificationUnitMeas Text {

      label = "Classification UoM";
   }
   attribute PlannedDueDateTruncated Date {
      fetch = "TRUNC(planned_due_date)";
   }
   attribute ContractRevSeq Number;
   attribute ContractLineNo Number;
   attribute ContractItemNo Number;
   reference CustomerOrderRef(OrderNo) to CustomerOrder(OrderNo);
   reference ConditionCodeRef(ConditionCode) to ConditionCode(ConditionCode);
   reference SiteRef(Contract) to Site(Contract);

   reference OrderNoRef(OrderNo) to CustomerOrder(OrderNo) {
      label = "Order No";
   }
   reference CustomerNoRef(CustomerNo) to CustOrdCust1(CustomerNo) {
      label = "Customer No";
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference CatalogNoRef(Contract, CatalogNo) to SalesPart(Contract, CatalogNo) {
      label = "Sales Part No";
   }
   reference PartNoRef(Contract, PartNo) to InventoryPart(Contract, PartNo) {
      label = "Part No";
   }
   @DynamicComponentDependency PURCH
   reference VendorNoRef(VendorNo) to Supplier(VendorNo) {
      label = "Supplier";
   }
   reference SupplySiteRef(SupplySite) to Site(Contract) {
      label = "Supply Site";
   }
   reference SalesUnitMeasRef(SalesUnitMeas) to IsoUnit(UnitCode) {
      label = "Sales UoM";
   }
   reference PlannedShipPeriodRef(PlannedShipPeriod) to WorkTimePeriod(Period) {
      label = "Planned Ship Period";
   }
   reference TaxCodeRef(Company, TaxCode) to StatutoryFee(Company, FeeCode) {
      label = "Tax Code";
   }
   @DynamicComponentDependency CONMGT
   reference SalesContractNoRef(Company, ContractRevSeq, ContractLineNo, ContractItemNo, SalesContractNo) to ConItemCustOrderLov(Company, RevSeq, LineNo, ItemNo, ContractNo) {
      label = "Sales Contract No";
   }
   reference CancelReasonRef(CancelReason) to OrderCancelReason(CancelReason) {
      label = "Cancellation Reason";
   }
}

