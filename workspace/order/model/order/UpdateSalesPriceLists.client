-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-06-12  MaEelk  SCUXXW4-21911, Removed fetching % to Price List No, Sales Price Group , Owning Comapany, Catalog no and Base Price Site when opening the asistant.
-- 2019-04-04  milise  SCUXXW4-18022, Replacing of label = "" with showlabel = false
-- 2018-10-20  MaEelk  SCUXXW4-8892, Added Multi Selector LOV functionality to Price List No, Sales Price Group, Owninig Company, Part No and Base Price Site.
-- 2018-08-27  MaEelk  SCUXXW4-8892, Converted from dlgUpdateSalesPriceLists using MTG Version: 1.26
--------------------------------------------------------------------------------------

client UpdateSalesPriceLists;
component ORDER;
layer Core;
include fragment SalesPriceListPartLovSelector;
include fragment SalesPartBasePricePartsSelector;
include fragment UserAllowedSiteLovSelector;
include fragment SalesPriceGroupPartLovSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry UpdateSalesPriceListsNavEntry parent OrderNavigator.PricingPriceList at index 1000 {
      label = "Update Sales Price Lists from Base Prices";
      assistant Assistant;
   }
}
-------------------------------- MAIN PAGES ---------------------------------

-------------------------------- ASSISTANTS ---------------------------------
assistant Assistant using UpdateSalesPriceListsSet {
   label = "Update Sales Price Lists from Base Prices";
   savemode = OnLostFocus;
   setup SetupDefaultValues {
      variable SalesPriceTypeDbVar {
         type = Text;
      }
      execute {
         set SalesPriceTypeDb = SalesPriceTypeDbVar;
      }
   }

   init command {
      execute {
         call FetchDefaults(SalesPriceTypeDb) into DefaultValueStructure;
         set PricingBaseSelection = DefaultValueStructure.PricingBaseSelection;
         set AddToSalesPrices = DefaultValueStructure.AddToSalesPrices;
         set AddToRentalPrices = DefaultValueStructure.AddToRentalPrices;
         set ValidFrom = DefaultValueStructure.ValidFrom;
      }
   }
   steps {
      step {
         group PricingBasedOnGroup;
         group PriceTypeGroup;
         group UpdateSalesPriceListsGroup;
         group FilteredByGroup;
         group ExecuteGroup;
      }
      final step {

      }
      cancelled step {

      }
   }
   finish command {
      enabled = [ValidFrom != null];
      variable NoOfupdatesVar {
         type = Number;
      }

      execute {
         confirm("The relevant price list(s) will be updated.") {
            when OK {
               call UpdatePrices(ValidFrom, PriceList, SalesPriceGroup, CatalogNo, BasePriceSite, OwningCompany, PricingBaseSelection, ExecutionTypeSelection, IncludeBothDates, AddToSalesPrices, AddToRentalPrices) into NoOfupdatesVar;
               if [ExecutionTypeSelection = "ONLINE"] {
                  if [NoOfupdatesVar > 0] {
                     alert("Base price updated in ${NoOfupdatesVar} record(s).");
                  }
                  else {
                     alert("No records were updated.");
                  }
               }
               navigate back;
            }
            when CANCEL {
               exit CANCEL;
            }
         }
      }
   }
   cancel command {
      execute {
         navigate back;
      }
   }
   restart command {
      visible = [false];
   }
}

--------------------------------- COMMANDS ----------------------------------

--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------
group PricingBasedOnGroup for UpdateSalesPriceListsVirtual {
   label = "Pricing base on";
   radiogroup PricingBaseSelection {
      showlabel = false;
      size = FullWidth;
   }

}
group UpdateSalesPriceListsGroup for UpdateSalesPriceListsVirtual {
   label = "";
   field ValidFrom;
   field IncludeBothDates {
      defaulttoprevious = [true];
   }
}

group PriceTypeGroup for UpdateSalesPriceListsVirtual {
   label = "Price Type";
   field AddToSalesPrices {
      size = Small;
   }
   field AddToRentalPrices {
      size = Small;
   }
}

group FilteredByGroup for UpdateSalesPriceListsVirtual {
   label = "Filtered by";
   multilov PriceListRef with SalesPriceListPartLovLovList using SalesPriceListPartLovLovListSet;
   multilov OwningCompanyRef with CompanyFinanceLovList using CompanyFinanceLovListSet;
   multilov CatalogNoRef with SalesPartBasePricePartsLovList using SalesPartBasePricePartsLovListSet;
   multilov BasePriceSiteRef with UserAllowedSiteLovLovList using UserAllowedSiteLovLovListSet;
   multilov SalesPriceGroupRef with SalesPriceGroupPartLovLovList using SalesPriceGroupPartLovLovListSet;
}

group ExecuteGroup for UpdateSalesPriceListsVirtual {
   label = "Execute";
   radiogroup ExecutionTypeSelection {
      showlabel = false;
      size = FullWidth;
      defaulttoprevious = [true];
   }
}

