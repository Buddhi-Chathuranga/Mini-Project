-------------------------------------------------------------------------------------------------------
--  Date        Sign    History
--  ----------  ------  --------------------------------------------------------------------------------
--  2019-06-28  bajelk  SCUXXW4-20899, Added some keys in CustomerAssortmentStruct entity.
--  2018-11-27  bajelk  SCUXXW4-801, Converted from tbwCustomerPartsByAssortment using MTG Version 1.33.
--  ----------  ------  --------------------------------------------------------------------------------
projection PartsByAssortmentAndCustomerHandling;
component ORDER;
layer Core;
description "Parts by Assortment and Customer";
category Users;

----------------------------- MAIN ENTRY POINTS -----------------------------


------------------------------ ENTITY DETAILS -------------------------------


---------------------------- GENERATED FROM APF -----------------------------


----------------------------- MAIN ENTRY POINTS -----------------------------
entityset CustomerAssortmentStructSet for CustomerAssortmentStruct;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity CustomerAssortmentStruct {
   crud = Read;
   from = "customer_parts_by_assortment";
   keys = CustomerNo, AssortmentId, PartNo {
      where = "CUSTOMER_NO = :CustomerNo,ASSORTMENT_ID = :AssortmentId,PART_NO = :PartNo";
   }

   attribute PartNo Text {
      fetch = "part_no";
      label = "Part No";
      maxlength = 100;
      editable = [false];
      format = uppercase;
   }
   attribute PartDescription Text {
      fetch = "Part_Catalog_API.Get_Description(part_no)";
      label = "Part Description";
      maxlength = 100;
      editable = [false];
   }
   attribute AssortmentId Text {
      label = "Assortment";
      maxlength = 100;
      editable = [false];
   }
   attribute AssortmentNodeId Text {
      fetch = "assortment_node_id";
      label = "Assortment Node";
      maxlength = 50;
      editable = [false];
      format = uppercase;
   }
   attribute ClosestNode Text {
      fetch = "closest_node";
      label = "Closest Parent Node";
      maxlength = 100;
      editable = [false];
   }
   attribute CustomerName Text {
      fetch = "Cust_Ord_Customer_API.Get_Name(customer_no)";
      label = "Customer Name";
      maxlength = 2000;
      editable = [false];
   }
   attribute LimitSalesToAssortmentsDb Boolean("TRUE", "FALSE") {
      fetch = "limit_sales_to_assortments_db";
      label = "Limit Sales to Assortment";
      required = [true];
   }
   reference AssortmentStructureRef(AssortmentId) to AssortmentStructure(AssortmentId);
   reference PartNoRef(PartNo) to PartCatalog(PartNo) {
      label = "Part";
   }
   reference AssortmentIdRef(AssortmentId) to AssortmentStructure(AssortmentId) {
      label = "Assortment";
   }
   reference AssortmentNodeIdRef(AssortmentId, AssortmentNodeId) to AssortmentNode(AssortmentId, AssortmentNodeId) {
      label = "Assortment Node";
   }
   reference CustomerNoRef(CustomerNo) to CustOrdCustomer(CustomerNo) {
      label = "Customer";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------

