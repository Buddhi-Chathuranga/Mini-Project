----------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------
-- 190626      SBalLK  SCUXXW4-21590, Adjusted the UI changes recommended though the reported issue.
-- 190329      JaBalk  SCUXXW4-18224, Corrected reported issues.
-- 181204      RAKUSE  SCUXXW4-8655, Converted dialog 'dlgPSheetMoveCOReserveWithTransTask' using MTG Version: 1.34
----------------------------------------------------------------------------------------------------
projection MoveCustomerOrderReservationswithTransportTaskHandling;
component ORDER;
layer Core;
description "Scheduled Task Assistant handling ''Move Customer Order Reservations with Transport Task''";
category Users;
include fragment ScheduledTasksCommon;
include fragment UserAllowedSiteLovSelector;
include fragment WarehouseLov2Selector;
include fragment WarehouseBayLov2Selector;
include fragment WarehouseBayRowLov2Selector;
include fragment WarehouseBayTierLov2Selector;
include fragment WarehouseBayBinLovSelector;
include fragment InventoryLocation17Selector;
include fragment OrdersPerSiteLovSelector;
include fragment OrderCoordinatorLovSelector;
include fragment CustOrdCust1Selector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset OrdersPerSiteLovLovListSet for OrdersPerSiteLov;
entityset CustOrderTypeLovListSet for CustOrderType;
entityset OrderCoordinatorLovLovListSet for OrderCoordinatorLov;
entityset DeliveryRouteLovListSet for DeliveryRoute;
entityset WorkTimePeriodLovListSet for WorkTimePeriod;
entityset InventoryPartLovListSet for InventoryPart;
entityset MpccomShipViaLovListSet for MpccomShipVia;
entityset ForwarderInfoLovListSet for ForwarderInfo;
entityset CustOrdCust1LovListSet for CustOrdCust1;

-------------------------------- STRUCTURES ---------------------------------

@Override
structure ParametersStructure {
   attribute Contract Text;
   attribute Warehouse Text;
   attribute Bay Text;
   attribute RowValue Text;
   attribute Tier Text;
   attribute Bin Text;
   attribute StorageZone Text;
   attribute ToLocation Text;
   attribute OrderNo Text;
   attribute OrderType Text;
   attribute Coordinator Text;
   attribute Priority Number;
   attribute RouteId Text;
   attribute PlannedShipPeriod Text;
   attribute PartNo Text;
   attribute ShipViaCode Text;
   attribute PlannedDueDate Date;
   attribute ExecutionOffset Number;
   attribute ForwarderId Text;
   attribute CustomerNo Text;
   attribute IncludeFullQtyOfTopHu Boolean;
   attribute ExcludeStockAttachedToHu Boolean;
   attribute ExcludeStockNotAttachToHu Boolean;
   attribute ExcludeHuToPickInOneStep Boolean;
}

--------------------------------- VIRTUALS ----------------------------------

@Override
virtual TaskVirtual using BatchSchedule {
   -- Parameters
   attribute Contract Text {
      required = [true];
      label = "Site";
      maxlength = 100;
      format = uppercase;

   }
   attribute Warehouse Text {
      label = "Warehouse ID";
      maxlength = 100;
      format = uppercase;
      // searchable = false;
   }
   attribute Bay Text {
      label = "Bay ID";
      maxlength = 100;
      format = uppercase;
      // searchable = false;
   }
   attribute RowValue Text {
      label = "Row ID";
      maxlength = 100;
      format = uppercase;
      // searchable = false;
   }
   attribute Tier Text {
      label = "Tier ID";
      maxlength = 100;
      format = uppercase;
      // searchable = false;
   }
   attribute Bin Text {
      label = "Bin ID";
      maxlength = 100;
      format = uppercase;
      // searchable = false;
   }
   attribute StorageZone Text {
      label = "Storage Zone ID";
      maxlength = 100;
      format = uppercase;
      // searchable = false;
   }
   attribute ToLocation Text {
      label = "Location No";
      maxlength = 100;
      required = [true];
      format = uppercase;
      // searchable = false;
   }
   attribute OrderNo Text {
      label = "Order No";
      maxlength = 100;
      // searchable = false;
      format = uppercase;
   }
   attribute OrderType Text {
      label = "Order Type";
      maxlength = 100;
      // searchable = false;
      format = uppercase;
   }
   attribute Coordinator Text {
      label = "Coordinator";
      maxlength = 100;
      // searchable = false;
      format = uppercase;
   }
   attribute Priority Number {
      label = "Priority";
      // searchable = false;
   }
   attribute RouteId Text {
      label = "Route ID";
      maxlength = 100;
      // searchable = false;
      format = uppercase;
   }
   attribute PlannedShipPeriod Text {
      label = "Planned Ship Period";
      maxlength = 100;
      // searchable = false;
      format = uppercase;
   }
   attribute PartNo Text {
      label = "Part No";
      maxlength = 100;
      // searchable = false;
      format = uppercase;
   }
   attribute ShipViaCode Text {
      label = "Ship Via Code";
      maxlength = 100;
      // searchable = false;
      format = uppercase;
   }
   attribute PlannedDueDate Date {
      label = "Until Planned Due Date";
      // searchable = false;
   }
   attribute ExecutionOffset Number;
   attribute ForwarderId Text {
      label = "Forwarder ID";
      maxlength = 100;
      // searchable = false;
      format = uppercase;
   }
   attribute CustomerNo Text {
      label = "Deliver to Customer No";
      maxlength = 100;
      // searchable = false;
      format = uppercase;
   }

   attribute IncludeFullQtyOfTopHu Boolean("TRUE", "FALSE") {
      label = "Full Qty of Top Handling Unit";
      required = [true];
      // searchable = false;
   }
   attribute ExcludeStockAttachedToHu Boolean("TRUE", "FALSE") {
      label = "Stock Attached to Handling Unit";
      required = [true];
      // searchable = false;
   }
   attribute ExcludeStockNotAttachToHu Boolean("TRUE", "FALSE") {
      label = "Stock Not Attached to Handling Unit";
      required = [true];
      // searchable = false;
   }
   attribute ExcludeHuToPickInOneStep Boolean("TRUE", "FALSE") {
      label = "Handling Units to be Picked in One Step";
      required = [true];
      // searchable = false;
   }

   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference WarehouseRef(Contract, Warehouse) to WarehouseLov2(Contract, WarehouseId) {
      label = "Warehouse ID";
   }
   reference BayRef(Contract, Warehouse, Bay) to WarehouseBayLov2(Contract, WarehouseId, BayId) {
      label = "Bay ID";
   }
   reference RowRef(Contract, Warehouse, Bay, RowValue) to WarehouseBayRowLov2(Contract, WarehouseId, BayId, RowId) {
      label = "Row ID";
   }
   reference TierRef(Contract, Warehouse, Bay, Tier) to WarehouseBayTierLov2(Contract, WarehouseId, BayId, TierId) {
      label = "Tier ID";
   }
   reference BinRef(Contract, Warehouse, Bay, RowValue, Tier, Bin) to WarehouseBayBinLov(Contract, WarehouseId, BayId, RowId, TierId, BinId) {
      label = "Bin ID";
   }
   reference StorageZoneRef(Contract, StorageZone) to StorageZone(Contract, StorageZoneId) {
      label = "Storage Zone ID";
   }
   reference ToLocationRef(Contract, ToLocation) to InventoryLocation17(Contract, LocationNo) {
      label = "Location No";
   }

   reference OrderNoRef(Contract, OrderNo) to OrdersPerSiteLov(Contract, OrderNo) {
      label = "Order No";


   }
   reference OrderTypeRef(OrderType) to CustOrderType(OrderId) {
      label = "Order Type";
   }
   reference CoordinatorRef(Coordinator) to OrderCoordinatorLov(AuthorizeCode) {
      label = "Coordinator";
   }
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Route ID";
   }
   reference PlannedShipPeriodRef(PlannedShipPeriod) to WorkTimePeriod(Period) {
      label = "Planned Ship Period";
   }
   reference PartNoRef(Contract, PartNo) to InventoryPart(Contract, PartNo) {
      label = "Part No";
   }
   reference ShipViaRef(ShipViaCode) to MpccomShipVia(ShipViaCode) {
      label = "Ship Via";
   }
   reference ForwarderIdRef(ForwarderId) to ForwarderInfo(ForwarderId) {
      label = "Forwarder ID";
   }
   reference CustomerNoRef(CustomerNo) to CustOrdCust1(CustomerNo) {
      label = "Deliver to Customer No";
   }

   ---

}
