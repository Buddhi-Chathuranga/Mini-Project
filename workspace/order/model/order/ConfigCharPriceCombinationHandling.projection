projection ConfigCharPriceCombinationHandling;
component ORDER;
layer Core;
description "Create and maintain Configuration Characteristic Sales Price Combinations.";
category Users;

--------------------------------- FRAGMENTS ---------------------------------
@DynamicComponentDependency CFGCHR
include fragment ConfigFamCharacteristicLovSelector;
@DynamicComponentDependency CFGCHR
include fragment ConfigFamOptionValueLov2Selector;
----------------------------- MAIN ENTRY POINTS -----------------------------
entityset ConfigCharPriceCombinationSet for ConfigPriceCombination;
entityset ConfigPriceComboFactorSet for ConfigPriceComboFactor;
entityset ConfigPriceComboValueSet for ConfigPriceComboValue;
------------------------------ ENTITY DETAILS -------------------------------
@Override
entity ConfigPriceCombination {

   ludependencies = ConfigPriceComboFactor;

   attribute CombinationId Text {
      maxlength = 100;
      label = "Combination ID";
   }
   attribute ConfigFamilyId Text {
      label = "Config Family";
   }
   attribute ConfigReturnType Enumeration(ConfigPriceReturnType) {
      label = "Default Return Type";
   }
   attribute TextCombinationValue1 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Combination_Label(COMBINATION_ID,Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 1))";
   }
   attribute TextCombinationValue2 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Combination_Label(COMBINATION_ID,Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 2))";
   }
   attribute TextCombinationValue3 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Combination_Label(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 3))";
   }
   attribute TextCombinationValue4 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Combination_Label(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 4))";
   }
   attribute TextCombinationValue5 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Combination_Label(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 5))";
   }
   attribute TextCombinationValue6 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Combination_Label(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 6))";
   }
   attribute TextCombinationValue7 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Combination_Label(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 7))";
   }
   attribute TextCombinationValue8 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Combination_Label(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 8))";
   }
   attribute TextCombinationValue9 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Combination_Label(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 9))";
   }
   attribute TextCombinationValue10 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Combination_Label(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 10))";
   }
   attribute TextCombinationValue11 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Combination_Label(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 11))";
   }
   attribute TextCombinationValue12 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Combination_Label(COMBINATION_ID,  Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 12))";
   }
   attribute TextCombinationValue13 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Combination_Label(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 13))";
   }
   attribute TextCombinationValue14 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Combination_Label(COMBINATION_ID,Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 14))";
   }
   attribute TextCombinationValue15 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Combination_Label(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 15))";
   }

   @DynamicComponentDependency CFGCHR
   reference ConfigFamilyIdRef(ConfigFamilyId) to ConfigFamily(ConfigFamilyId) {
      label = "Configuration Family";
   }
   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Currency Code";
   }
   @DynamicComponentDependency CFGCHR
   reference ConfigFamCharacteristicRef(ConfigFamilyId, CharacteristicId) to ConfigFamCharacteristic(ConfigFamilyId, CharacteristicId) {
      label = "Characteristic ID";
   }
   reference DefaultCombinationRef(DefaultReturnCombo) to ConfigPriceCombination(CombinationId);

   array ConfigPriceComboFactorArray(CombinationId) to ConfigPriceComboFactor(CombinationId);
   array ConfigPriceComboValueArray(CombinationId) to ConfigPriceComboValue(CombinationId);
}

@Override
entity ConfigPriceComboFactor {

   ludependencies = ConfigPriceCombination, ConfigPriceComboFactor;

   attribute FactorType Enumeration(ConfigPriceFactType) {
      label = "Factor Type";
      editable = [ETag = null];
   }

   attribute FactorValue Text {
      fetch = "FACTOR_VALUE";
      format = uppercase;
      editable = [ETag = null];
      insertable = [true];
      updatable = [true];
   }

   attribute FactorDescription Text {
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Description(factor_type, factor_value)";
      label = "Description";
      maxlength = 100;
      editable = [false];
   }

   @DynamicComponentDependency CFGCHR
   attribute ConfigValueTypeDb Text {
      fetch = "Config_Characteristic_API.Get_Config_Value_Type_Db(factor_value)";
      label = "Value Type";
   }

   reference CombinationIdRef(CombinationId) to ConfigPriceCombination(CombinationId) {
      prefetch ConfigFamilyId as ParentConfigFamilyId;
   }
   @DynamicComponentDependency CFGCHR
   reference CharacteristicRef(ParentConfigFamilyId, FactorValue) to ConfigFamCharacteristicLov(ConfigFamilyId, CharacteristicId) {
      where = "objstate = 'Active'";
      copy Description to FactorDescription;
   }

   @DynamicComponentDependency CFGCHR
   reference CharValueRef(ParentConfigFamilyId, FactorValue, TestValue) to ConfigFamOptionValueLov2(ConfigFamilyId, CharacteristicId, OptionValueId) {
      where = "objstate = 'Active'";
   }
}

@Override
entity ConfigPriceComboValue {

   ludependencies = ConfigPriceCombinationTable, ConfigPriceComboFactor, ConfigPriceComboValue;

   attribute CombinationNo Number {
      editable = [false];
   }
   attribute ParentConfigFamilyId Text {
      fetch = "Config_Price_Combination_API.Get_Config_Family_Id(COMBINATION_ID)";
   }
   attribute ReturnType Enumeration(ConfigPriceReturnType) {
      default = "config_price_return_type_api.DB_AMOUNT";
   }
   -- Display operator values
   attribute DisplayOperatorValue1 Enumeration(ConfigRelationalOper) {
      fetch = "Config_Price_Combo_Value_API.Get_Config_Relational_Operator(COMBINATION_ID, COMBINATION_NO, 1)";
      default = "config_relational_oper_api.DB_EQUAL_TO";
   }
   attribute DisplayOperatorValue2 Enumeration(ConfigRelationalOper) {
      fetch = "Config_Price_Combo_Value_API.Get_Config_Relational_Operator(COMBINATION_ID, COMBINATION_NO, 2)";
      default = "config_relational_oper_api.DB_EQUAL_TO";
   }
   attribute DisplayOperatorValue3 Enumeration(ConfigRelationalOper) {
      fetch = "Config_Price_Combo_Value_API.Get_Config_Relational_Operator(COMBINATION_ID, COMBINATION_NO, 3)";
      default = "config_relational_oper_api.DB_EQUAL_TO";
   }
   attribute DisplayOperatorValue4 Enumeration(ConfigRelationalOper) {
      fetch = "Config_Price_Combo_Value_API.Get_Config_Relational_Operator(COMBINATION_ID, COMBINATION_NO, 4)";
      default = "config_relational_oper_api.DB_EQUAL_TO";
   }
   attribute DisplayOperatorValue5 Enumeration(ConfigRelationalOper) {
      fetch = "Config_Price_Combo_Value_API.Get_Config_Relational_Operator(COMBINATION_ID, COMBINATION_NO, 5)";
      default = "config_relational_oper_api.DB_EQUAL_TO";
   }
   attribute DisplayOperatorValue6 Enumeration(ConfigRelationalOper) {
      fetch = "Config_Price_Combo_Value_API.Get_Config_Relational_Operator(COMBINATION_ID, COMBINATION_NO, 6)";
      default = "config_relational_oper_api.DB_EQUAL_TO";
   }
   attribute DisplayOperatorValue7 Enumeration(ConfigRelationalOper) {
      fetch = "Config_Price_Combo_Value_API.Get_Config_Relational_Operator(COMBINATION_ID, COMBINATION_NO, 7)";
      default = "config_relational_oper_api.DB_EQUAL_TO";
   }
   attribute DisplayOperatorValue8 Enumeration(ConfigRelationalOper) {
      fetch = "Config_Price_Combo_Value_API.Get_Config_Relational_Operator(COMBINATION_ID, COMBINATION_NO, 8)";
      default = "config_relational_oper_api.DB_EQUAL_TO";
   }
   attribute DisplayOperatorValue9 Enumeration(ConfigRelationalOper) {
      fetch = "Config_Price_Combo_Value_API.Get_Config_Relational_Operator(COMBINATION_ID, COMBINATION_NO, 9)";
      default = "config_relational_oper_api.DB_EQUAL_TO";
   }
   attribute DisplayOperatorValue10 Enumeration(ConfigRelationalOper) {
      fetch = "Config_Price_Combo_Value_API.Get_Config_Relational_Operator(COMBINATION_ID, COMBINATION_NO, 10)";
      default = "config_relational_oper_api.DB_EQUAL_TO";
   }
   attribute DisplayOperatorValue11 Enumeration(ConfigRelationalOper) {
      fetch = "Config_Price_Combo_Value_API.Get_Config_Relational_Operator(COMBINATION_ID, COMBINATION_NO, 11)";
      default = "config_relational_oper_api.DB_EQUAL_TO";
   }
   attribute DisplayOperatorValue12 Enumeration(ConfigRelationalOper) {
      fetch = "Config_Price_Combo_Value_API.Get_Config_Relational_Operator(COMBINATION_ID, COMBINATION_NO, 12)";
      default = "config_relational_oper_api.DB_EQUAL_TO";
   }
   attribute DisplayOperatorValue13 Enumeration(ConfigRelationalOper) {
      fetch = "Config_Price_Combo_Value_API.Get_Config_Relational_Operator(COMBINATION_ID, COMBINATION_NO, 13)";
      default = "config_relational_oper_api.DB_EQUAL_TO";
   }
   attribute DisplayOperatorValue14 Enumeration(ConfigRelationalOper) {
      fetch = "Config_Price_Combo_Value_API.Get_Config_Relational_Operator(COMBINATION_ID, COMBINATION_NO, 14)";
      default = "config_relational_oper_api.DB_EQUAL_TO";
   }
   attribute DisplayOperatorValue15 Enumeration(ConfigRelationalOper) {
      fetch = "Config_Price_Combo_Value_API.Get_Config_Relational_Operator(COMBINATION_ID, COMBINATION_NO, 15)";
      default = "config_relational_oper_api.DB_EQUAL_TO";
   }
    -- Display Combination Values
   attribute DisplayCombinationValue1 Text {
      fetch = "Config_Price_Combo_Value_API.Get_Combination_Value(COMBINATION_ID, COMBINATION_NO, 1)";
   }
   attribute DisplayCombinationValue2 Text {
      fetch = "Config_Price_Combo_Value_API.Get_Combination_Value(COMBINATION_ID, COMBINATION_NO, 2)";
   }
   attribute DisplayCombinationValue3 Text {
      fetch = "Config_Price_Combo_Value_API.Get_Combination_Value(COMBINATION_ID, COMBINATION_NO, 3)";
   }
   attribute DisplayCombinationValue4 Text {
      fetch = "Config_Price_Combo_Value_API.Get_Combination_Value(COMBINATION_ID, COMBINATION_NO, 4)";
   }
   attribute DisplayCombinationValue5 Text {
      fetch = "Config_Price_Combo_Value_API.Get_Combination_Value(COMBINATION_ID, COMBINATION_NO, 5)";
   }
   attribute DisplayCombinationValue6 Text {
      fetch = "Config_Price_Combo_Value_API.Get_Combination_Value(COMBINATION_ID, COMBINATION_NO, 6)";
   }
   attribute DisplayCombinationValue7 Text {
      fetch = "Config_Price_Combo_Value_API.Get_Combination_Value(COMBINATION_ID, COMBINATION_NO, 7)";
   }
   attribute DisplayCombinationValue8 Text {
      fetch = "Config_Price_Combo_Value_API.Get_Combination_Value(COMBINATION_ID, COMBINATION_NO, 8)";
   }
   attribute DisplayCombinationValue9 Text {
      fetch = "Config_Price_Combo_Value_API.Get_Combination_Value(COMBINATION_ID, COMBINATION_NO, 9)";
   }
   attribute DisplayCombinationValue10 Text {
      fetch = "Config_Price_Combo_Value_API.Get_Combination_Value(COMBINATION_ID, COMBINATION_NO, 10)";
   }
   attribute DisplayCombinationValue11 Text {
      fetch = "Config_Price_Combo_Value_API.Get_Combination_Value(COMBINATION_ID, COMBINATION_NO, 11)";
   }
   attribute DisplayCombinationValue12 Text {
      fetch = "Config_Price_Combo_Value_API.Get_Combination_Value(COMBINATION_ID, COMBINATION_NO, 12)";
   }
   attribute DisplayCombinationValue13 Text {
      fetch = "Config_Price_Combo_Value_API.Get_Combination_Value(COMBINATION_ID, COMBINATION_NO, 13)";
   }
   attribute DisplayCombinationValue14 Text {
      fetch = "Config_Price_Combo_Value_API.Get_Combination_Value(COMBINATION_ID, COMBINATION_NO, 14)";
   }
   attribute DisplayCombinationValue15 Text {
      fetch = "Config_Price_Combo_Value_API.Get_Combination_Value(COMBINATION_ID, COMBINATION_NO, 15)";
   }

   -- Real combination values
   attribute CharCombinationValue1 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Value_By_Index(COMBINATION_ID, 1)";
   }
   attribute CharCombinationValue2 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Value_By_Index(COMBINATION_ID, 2)";
   }
   attribute CharCombinationValue3 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Value_By_Index(COMBINATION_ID, 3)";
   }
   attribute CharCombinationValue4 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Value_By_Index(COMBINATION_ID, 4)";
   }
   attribute CharCombinationValue5 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Value_By_Index(COMBINATION_ID, 5)";
   }
   attribute CharCombinationValue6 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Value_By_Index(COMBINATION_ID, 6)";
   }
   attribute CharCombinationValue7 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Value_By_Index(COMBINATION_ID, 7)";
   }
   attribute CharCombinationValue8 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Value_By_Index(COMBINATION_ID, 8)";
   }
   attribute CharCombinationValue9 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Value_By_Index(COMBINATION_ID, 9)";
   }
   attribute CharCombinationValue10 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Value_By_Index(COMBINATION_ID, 10)";
   }
   attribute CharCombinationValue11 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Value_By_Index(COMBINATION_ID, 11)";
   }
   attribute CharCombinationValue12 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Value_By_Index(COMBINATION_ID, 12)";
   }
   attribute CharCombinationValue13 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Value_By_Index(COMBINATION_ID, 13)";
   }
   attribute CharCombinationValue14 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Value_By_Index(COMBINATION_ID, 14)";
   }
   attribute CharCombinationValue15 Text {
      format = uppercase;
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Value_By_Index(COMBINATION_ID, 15)";
   }

      -- Combination Value Types - need to use in Lov switch
   attribute CharCombinationValue1Type Text {
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Lov_Info(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 1),1)";
   }
   attribute CharCombinationValue2Type Text {
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Lov_Info(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 2),2)";
   }
   attribute CharCombinationValue3Type Text {
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Lov_Info(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 3),3)";
   }
   attribute CharCombinationValue4Type Text {
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Lov_Info(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 4),4)";
   }
   attribute CharCombinationValue5Type Text {
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Lov_Info(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 5),5)";
   }
   attribute CharCombinationValue6Type Text {
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Lov_Info(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 6),6)";
   }
   attribute CharCombinationValue7Type Text {
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Lov_Info(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 7),7)";
   }
   attribute CharCombinationValue8Type Text {
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Lov_Info(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 8),8)";
   }
   attribute CharCombinationValue9Type Text {
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Lov_Info(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 9),9)";
   }
   attribute CharCombinationValue10Type Text {
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Lov_Info(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 10),10)";
   }
   attribute CharCombinationValue11Type Text {
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Lov_Info(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 11),11)";
   }
   attribute CharCombinationValue12Type Text {
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Lov_Info(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 12),12)";
   }
   attribute CharCombinationValue13Type Text {
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Lov_Info(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 13),13)";
   }
   attribute CharCombinationValue14Type Text {
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Lov_Info(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 14),14)";
   }
   attribute CharCombinationValue15Type Text {
      fetch = "Config_Price_Combo_Factor_API.Get_Factor_Lov_Info(COMBINATION_ID, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(COMBINATION_ID, 15),15)";
   }

   -- References for Display Combination Values - These are the displayed values in client
   @DynamicComponentDependency CFGCHR
   reference DispCombinationValue1Ref(ParentConfigFamilyId, CharCombinationValue1, DisplayCombinationValue1) to ConfigFamOptionValueLov2(ConfigFamilyId, CharacteristicId, OptionValueId);
   @DynamicComponentDependency CFGCHR
   reference DispCombinationValue2Ref(ParentConfigFamilyId, CharCombinationValue2, DisplayCombinationValue2) to ConfigFamOptionValueLov2(ConfigFamilyId, CharacteristicId, OptionValueId);
   @DynamicComponentDependency CFGCHR
   reference DispCombinationValue3Ref(ParentConfigFamilyId, CharCombinationValue3, DisplayCombinationValue3) to ConfigFamOptionValueLov2(ConfigFamilyId, CharacteristicId, OptionValueId);
   @DynamicComponentDependency CFGCHR
   reference DispCombinationValue4Ref(ParentConfigFamilyId, CharCombinationValue4, DisplayCombinationValue4) to ConfigFamOptionValueLov2(ConfigFamilyId, CharacteristicId, OptionValueId);
   @DynamicComponentDependency CFGCHR
   reference DispCombinationValue5Ref(ParentConfigFamilyId, CharCombinationValue5, DisplayCombinationValue5) to ConfigFamOptionValueLov2(ConfigFamilyId, CharacteristicId, OptionValueId);
   @DynamicComponentDependency CFGCHR
   reference DispCombinationValue6Ref(ParentConfigFamilyId, CharCombinationValue6, DisplayCombinationValue6) to ConfigFamOptionValueLov2(ConfigFamilyId, CharacteristicId, OptionValueId);
   @DynamicComponentDependency CFGCHR
   reference DispCombinationValue7Ref(ParentConfigFamilyId, CharCombinationValue7, DisplayCombinationValue7) to ConfigFamOptionValueLov2(ConfigFamilyId, CharacteristicId, OptionValueId);
   @DynamicComponentDependency CFGCHR
   reference DispCombinationValue8Ref(ParentConfigFamilyId, CharCombinationValue8, DisplayCombinationValue8) to ConfigFamOptionValueLov2(ConfigFamilyId, CharacteristicId, OptionValueId);
   @DynamicComponentDependency CFGCHR
   reference DispCombinationValue9Ref(ParentConfigFamilyId, CharCombinationValue9, DisplayCombinationValue9) to ConfigFamOptionValueLov2(ConfigFamilyId, CharacteristicId, OptionValueId);
   @DynamicComponentDependency CFGCHR
   reference DispCombinationValue10Ref(ParentConfigFamilyId, CharCombinationValue10, DisplayCombinationValue10) to ConfigFamOptionValueLov2(ConfigFamilyId, CharacteristicId, OptionValueId);
   @DynamicComponentDependency CFGCHR
   reference DispCombinationValue11Ref(ParentConfigFamilyId, CharCombinationValue11, DisplayCombinationValue11) to ConfigFamOptionValueLov2(ConfigFamilyId, CharacteristicId, OptionValueId);
   @DynamicComponentDependency CFGCHR
   reference DispCombinationValue12Ref(ParentConfigFamilyId, CharCombinationValue12, DisplayCombinationValue12) to ConfigFamOptionValueLov2(ConfigFamilyId, CharacteristicId, OptionValueId);
   @DynamicComponentDependency CFGCHR
   reference DispCombinationValue13Ref(ParentConfigFamilyId, CharCombinationValue13, DisplayCombinationValue13) to ConfigFamOptionValueLov2(ConfigFamilyId, CharacteristicId, OptionValueId);
   @DynamicComponentDependency CFGCHR
   reference DispCombinationValue14Ref(ParentConfigFamilyId, CharCombinationValue14, DisplayCombinationValue14) to ConfigFamOptionValueLov2(ConfigFamilyId, CharacteristicId, OptionValueId);
   @DynamicComponentDependency CFGCHR
   reference DispCombinationValue15Ref(ParentConfigFamilyId, CharCombinationValue15, DisplayCombinationValue15) to ConfigFamOptionValueLov2(ConfigFamilyId, CharacteristicId, OptionValueId);

   reference CombinationListRef(ReturnValue) to ConfigPriceCombination(CombinationId);

}

------------------------------- ENUMERATIONS --------------------------------


---------------------------------- QUERIES ----------------------------------


---------------------------------- ACTIONS ----------------------------------


--------------------------------- FUNCTIONS ---------------------------------
@DynamicComponentDependency CFGCHR
function GetValueTypeDb Text {
   parameter FactorValue Text;
}

function GetAvailCombination List<Entity(ConfigPriceCombination)> {
   ludependencies = ConfigPriceCombination;
   parameter CurrentCombinationId Text;
   parameter ConfigFamilyId Text;
   parameter CurrencyCode  Text;
   where = "Config_Family_Id = :ConfigFamilyId AND Currency_Code = :CurrencyCode AND Combination_Id != :CurrentCombinationId AND Objstate != 'Obsolete'";
}

action TestCombination Structure(TestResultStructure) {
   initialcheck none;
   parameter CombinationId Text;
}

-------------------------------- STRUCTURES ---------------------------------
structure TestResultStructure {
   attribute TestResult Text;
   attribute TestReturnType Enumeration(ConfigPriceReturnType);
   attribute TestSequence Number;
}

--------------------------------- VIRTUALS ----------------------------------


--------------------------------- SUMMARIES ---------------------------------


-------------------------------- SINGLETONS ---------------------------------
