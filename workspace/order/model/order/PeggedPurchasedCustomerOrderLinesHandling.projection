--------------------------------------------------------------------------------------
-- Date        Sign     History
-- ----------  ------   --------------------------------------------------------------
-- 2019-03-12  Kubalk   SCUXXW4-17247, Dependency annotations added.
-- 2018-05-16  JeLise   SCUXXW4-1189, Converted from tbwOvwPeggedPurchasedCustOrdLine using MTG Version: 1.17
--------------------------------------------------------------------------------------

projection PeggedPurchasedCustomerOrderLinesHandling;
component ORDER;
layer Core;
description "Use this API to view the customer order lines that have been pegged against purchase order lines,
regardless of whether they were manually or automatically pegged. Note that a single customer order line can be
pegged to more than one purchase order lines.";
category Users;
include fragment CustomerOrderLineInitialCheck;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset CustomerOrderPurOrders for CustomerOrderPurOrder;

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity CustomerOrderPurOrder {
   crud = Read;
   from = "cust_order_pur_order_peg";
   keys = OeOrderNo, OeLineNo, OeRelNo, PoOrderNo, PoLineNo, PoRelNo, OeLineItemNo {
      where = "OE_ORDER_NO = :OeOrderNo and OE_LINE_NO = :OeLineNo and OE_REL_NO = :OeRelNo and PO_ORDER_NO = :PoOrderNo and PO_LINE_NO = :PoLineNo and PO_REL_NO = :PoRelNo and OE_LINE_ITEM_NO = :OeLineItemNo";
   }
   attribute Contract Text {
      fetch = "CONTRACT";
      label = "Site";
      maxlength = 5;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute PartNo Text {
      fetch = "PART_NO";
      label = "Inventory Part No";
      maxlength = 25;
      editable = [ETag = null];
      format = uppercase;
   }
   attribute InvPartDescription Text {
      fetch = "Inventory_Part_API.Get_Description(CONTRACT, PART_NO)";
      label = "Inv Part Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute ConfigurationId Text {
      fetch = "CONFIGURATION_ID";
      label = "Configuration ID";
      maxlength = 50;
      required = [true];
   }
   attribute CustomerNo Text {
      fetch = "CUSTOMER_NO";
      label = "Customer No";
      maxlength = 20;
      editable = [false];
      format = uppercase;
   }
   attribute CustomerName Text {
      fetch = "Cust_Ord_Customer_API.Get_Name(CUSTOMER_NO)";
      label = "Customer Name";
      maxlength = 253;
      required = [true];
      editable = [ETag = null];
   }
   attribute OeOrderNo Text {
      label = "CO No";
   }
   attribute OeLineNo Text {
      label = "CO Line No";
   }
   attribute OeRelNo Text {
      label = "CO Del No";
   }
   attribute CopoQtyOnOrder Number {
      fetch = "COPO_QTY_ON_ORDER";
      label = "CO Pegged Qty";
      required = [true];
   }
   attribute POQtyPegged Number {
      fetch = "COPO_QTY_ON_ORDER";
      label = "PO Pegged Qty";
   }
   attribute RemainingCOQtyToPeg Number {
      fetch = "REVISED_QTY_DUE -(QTY_ASSIGNED + QTY_ON_ORDER + QTY_SHIPPED)";
      label = "Remaining CO Qty to Peg";
      editable = [false];
   }
   attribute RevisedQtyDue Number {
      fetch = "REVISED_QTY_DUE";
      label = "CO Line Qty";
      required = [true];
   }
   attribute PlannedDeliveryDate Timestamp {
      fetch = "PLANNED_DELIVERY_DATE";
      label = "CO Planned Del Date/Time";
      required = [true];
   }
   attribute PromisedDeliveryDate Timestamp {
      fetch = "PROMISED_DELIVERY_DATE";
      label = "CO Promised Del Date/Time";
   }
   attribute PlannedShipDate Timestamp {
      fetch = "PLANNED_SHIP_DATE";
      label = "CO Planned Ship Date/Time";
      editable = [ETag != null];
   }
   attribute PoOrderNo Text {
      label = "Purch Order No";
   }
   attribute PoRelNo Text {
      label = "PO Release No";
   }
   @DynamicComponentDependency PURCH
   attribute AvailablePOQtyToPeg Number {
      fetch = "Purchase_Order_Line_Part_API.Get_Due_In_Stores(PO_ORDER_NO,PO_LINE_NO,PO_REL_NO) - Purchase_Order_Line_Part_API.Get_Qty_On_Order(PO_ORDER_NO,PO_LINE_NO,PO_REL_NO)";
      label = "Available PO Qty to Peg";
      editable = [false];
   }
   attribute OeLineItemNo Number {
      label = "Line Item No";
   }
   attribute SupplyCodeDb Text {
      fetch = "SUPPLY_CODE_DB";
      label = "Supply Code";
      maxlength = 253;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute CustomerOrderLineState Text {
      fetch = "Objstate";
      label = "CO Line Status";
   }
   reference InventoryPartRef(Contract, PartNo) to InventoryPart(Contract, PartNo);
   @DynamicComponentDependency PURCH
   reference PurchaseOrderLinePartRef(PoOrderNo, PoLineNo, PoRelNo) to PurchaseOrderLinePart(OrderNo, LineNo, ReleaseNo);
   @DynamicComponentDependency CFGCHR
   reference ConfigurationIdRef(PartNo, ConfigurationId) to ConfigurationSpec(PartNo, ConfigurationId) {
      label = "Configuration ID";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

action UnpegCustomerOrderLine {
   initialcheck CustomerOrderLineInitialCheck(OrderNo, LineNo, RelNo, LineItemNo);
   supportwarnings = [true];
   ludependencies = CustomerOrderPurOrder;
   parameter OrderNo Text;
   parameter LineNo Text;
   parameter RelNo Text;
   parameter LineItemNo Number;
}

--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

