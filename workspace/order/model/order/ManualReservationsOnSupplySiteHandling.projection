
--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-09-12  RoJalk  SCUXXW4-16686, Removed temp order reference values(TEUXX-14586).
-- 2019-07-31  SeJalk  SCUXXW4-23383, Added attribute RentalDb to the query ManualReservationsOnSupplySite.
-- 2019-07-22  RoJalk  SCUXXW4-22002, Moved CalculatedQuantityStruct, CalculatedQuantity to ManualReservationsOnSupplySiteBase.
-- 2019-02-15  KuBalk  SCUXXW4-1577,  Added code review corrections.
-- 2018-04-10  RoJalk  SCUXXW4-9572, Converted from frmSupplyReservation/tbwSingleSupplyReservations using MTG Version: 1.16
--------------------------------------------------------------------------------------

projection ManualReservationsOnSupplySiteHandling;
component ORDER;
layer Core;
description "Use this API to make manual reservations for sourced customer orders at a specific inventory location on the supplying site using the internal order flow.";
category Users;
include fragment UserAllowedSiteLovSelector;
include fragment CustOrdCust1Selector;
include fragment IntorderPartLovSelector;
include fragment ManualReservationsOnSupplySiteBase;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset ManualReservationsOnSupplySiteSet for ManualReservationsOnSupplySite;
entityset InventoryPartInStocks for InventoryPartInStock;

------------------------------ ENTITY DETAILS -------------------------------

query ManualReservationsOnSupplySite {
   from = "customer_order_join";
   lu = CustomerOrderLine;
   where = "OBJSTATE = 'Released' AND RELEASE_PLANNING_DB = 'RELEASED' AND LINE_ITEM_NO >= 0 AND SUPPLY_CODE_DB IN ('IPT', 'IPD') AND Site_To_Site_Reserve_Setup_API.Connection_Allowed(Customer_Order_Line_API.Get_Vendor_Contract__(VENDOR_NO, NULL, NULL, NULL, 'FALSE'), CONTRACT) = 1";
   keys = OrderNo, LineNo, RelNo, LineItemNo;

   attribute OrderNo Text {
      fetch = "ORDER_NO";
      format = uppercase;
   }
   attribute LineNo Text {
      fetch = "LINE_NO";
   }
   attribute RelNo Text {
      fetch = "REL_NO";
      label = "Del No";
   }
   attribute LineItemNo Number {
      fetch = "LINE_ITEM_NO";
   }
   attribute SupplySite Text {
      fetch = "SUPPLY_SITE";
      format = uppercase;
   }
   attribute Objstate Enumeration(CustomerOrderLineState) {
      fetch = "OBJSTATE";
   }
   attribute CustomerOrderLineState Text {
      fetch = "OBJSTATE";
   }
   attribute CustomerNo Text {
      fetch = "CUSTOMER_NO";
      format = uppercase;
   }
   attribute CustomerName Text {
      fetch = "CUSTOMER_NAME";
      label = "Customer Name";
   }
   attribute PartNo Text {
      fetch = "NVL(PART_NO,PURCHASE_PART_NO)";
      format = uppercase;
   }
   @DynamicComponentDependency PURCH
   attribute PartDescription Text {
      fetch = "Inventory_Part_API.Get_Description(Supplier_API.Get_Acquisition_Site(VENDOR_NO), NVL(PART_NO,PURCHASE_PART_NO))";
      label = "Part Description";
   }
   attribute ConfigurationId Text {
      fetch = "CONFIGURATION_ID";
      label = "Configuration ID";
   }
   attribute ConditionCode Text {
      fetch = "CONDITION_CODE";
      format = uppercase;
   }
   attribute Priority Number {
      fetch = "PRIORITY";
      label = "Priority";
   }
   attribute RouteId Text;
   attribute ReservedQty Number {
      fetch = "Co_Supply_Site_Reservation_API.Get_Qty_Reserved(ORDER_NO,LINE_NO,REL_NO,LINE_ITEM_NO)";
      label = "Reserved Qty";
   }
   attribute QtytoReserve Number {
      fetch = "Inventory_Part_API.Get_Site_Converted_Qty(contract, part_no, REVISED_QTY_DUE - QTY_SHIPPED, supply_site, 'ADD')";
      label = "Qty to Reserve";
   }
   attribute CatchUoM Text {
      fetch = "Inventory_Part_API.Get_Enabled_Catch_Unit_Meas(SUPPLY_SITE,PART_NO)";
      label = "Catch UoM";
   }
   attribute PlannedDeliveryDate Timestamp;
   attribute PromisedDeliveryDate Timestamp;
   attribute PlannedShipDate Timestamp {
      label = "Planned Ship Date/Time";
   }
   attribute PlannedShipPeriod Text;
   attribute PartOwnership Text {
      fetch = "PART_OWNERSHIP";
      label = "Ownership";
   }
   attribute Owner Text {
      fetch = "Customer_Order_Line_API.Get_Owner_For_Part_Ownership(ORDER_NO,LINE_NO,REL_NO,LINE_ITEM_NO,PART_OWNERSHIP_DB)";
      label = "Owner";
   }
   attribute ConfirmDeliveriesDb Text {
      fetch = "CONFIRM_DELIVERIES_DB";
   }
   attribute ConsignmentStockDb Text {
      fetch = "CONSIGNMENT_STOCK_DB";
   }
   attribute Contract Text;
   attribute PartOwnershipDb Text;
   attribute RentalDb Text {
      fetch = "RENTAL_DB";
   }
   reference ConditionCodeRef(ConditionCode) to ConditionCode(ConditionCode);
   reference InventoryPartRef(SupplySite, PartNo) to InventoryPart(Contract, PartNo);
   reference CustomerInfoRef(Owner) to CustomerInfo(CustomerId);
   reference OrderNoRef(OrderNo) to CustomerOrder(OrderNo) {
      label = "Order No";
   }
   reference SupplySiteRef(SupplySite) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference CustomerNoRef(CustomerNo) to CustOrdCust1(CustomerNo) {
      label = "Customer No";
   }
   reference PartNoRef(Contract, PartNo) to IntorderPartLov(Contract, PartNo) {
      label = "Part No";
   }
   @DynamicComponentDependency CFGCHR
   reference ConfigurationIdRef(ConfigurationId) to ConfigurationSpec(ConfigurationId) {
      label = "Configuration ID";
   }
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Route";
   }
   reference PlannedShipPeriodRef(PlannedShipPeriod) to WorkTimePeriod(Period) {
      label = "Planned Ship Period";
   }
}

@Override
entity InventoryPartInStock {
   crud = Read, Update;
   from = "inventory_part_in_stock_res";
   where = "QTY_ONHAND > 0 AND LOCATION_TYPE_DB IN ('PICKING', 'F') AND ACTIVITY_SEQ = 0";
   keys = LocationNo, HandlingUnitId, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, Contract, PartNo, ConfigurationId, ActivitySeq;
   supportwarnings = [true];
   use attributes = QtyReserved, QtyOnhand, CatchQtyOnhand, ExpirationDate, ReceiptDate, PartOwnership, Warehouse, BayNo, RowNo, TierNo, BinNo, AvailabilityControlId;

   attribute QtyReserved Number {
      label = "Reserved Qty";
      fetch = "0";
      required = [false];
      editable = [true];
      insertable = [false];
      updatable = [true];
   }
   attribute TotalQtyReserved Number {
      fetch = "QTY_RESERVED";
      label = "Tot Res Qty";
      editable = [false];
      insertable = [false];
      updatable = [false];
   }
   attribute QtyOnhand Number {
      label = "On Hand Qty";
      editable = [false];
      insertable = [false];
      updatable = [false];
   }
   attribute CatchQtyOnhand Number {
      label = "On Hand Catch Qty";
      editable = [false];
   }
   attribute OldQtyReserved Number {
      fetch = "0";
      editable = [true];
      insertable = [false];
      updatable = [false];
   }
   attribute QtyReserveDiff Number {
      fetch = "0";
      editable = [true];
      insertable = [false];
      updatable = [true];
   }
   attribute QtyAvailable Number {
      fetch = "0";
      editable = [true];
      insertable = [false];
      updatable = [false];
   }
   attribute HandlingUnitId Number {
      editable = [false];
   }
   attribute LineQtyToReserve Number {
      fetch = "0";
   }
   attribute LineQtyReserved Number {
      fetch = "0";
   }
   attribute ParentOrderNo Text {
      fetch = "''";
   }
   attribute ParentLineNo Text {
      fetch = "''";
   }
   attribute ParentRelNo Text {
      fetch = "''";
   }
   attribute ParentLineItemNo Number {
      fetch = "''";
   }
   attribute TypeDescription Text {
      fetch = "HANDLING_UNIT_TYPE_API.Get_Description(Handling_Unit_API.Get_Handling_Unit_Type_Id(HANDLING_UNIT_ID))";
      label = "Type Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute LotBatchNo Text {
      label = "Lot/Batch No";
      editable = [false];
      updatable = [false];
   }
   attribute EngChgLevel Text {
      label = "Revision No";
   }
   attribute AvailabilityControlDescription Text {
      fetch = "PART_AVAILABILITY_CONTROL_API.Get_Description(INVENTORY_PART_IN_STOCK_API.Get_Availability_Control_Id(CONTRACT,PART_NO,CONFIGURATION_ID,LOCATION_NO,LOT_BATCH_NO,SERIAL_NO,ENG_CHG_LEVEL,WAIV_DEV_REJ_NO,0,HANDLING_UNIT_ID))";
      label = "Availability Control Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute ExpirationDate Date {
      label = "Expires";
      editable = [false];
   }
   attribute ReceiptDate Date {
      editable = [false];
   }
   attribute PartOwnership Text {
      fetch = "PART_OWNERSHIP";
      label = "Ownership";
      maxlength = 100;
      editable = [false];
   }
   attribute Owner Text {
      fetch = "DECODE(PART_OWNERSHIP_API.Encode(PART_OWNERSHIP), 'CUSTOMER OWNED', OWNING_CUSTOMER_NO, 'CONSIGNMENT', OWNING_VENDOR_NO, 'SUPPLIER LOANED', OWNING_VENDOR_NO, 'SUPPLIER RENTED', OWNING_VENDOR_NO )";
      label = "Owner";
      editable = [false];
   }
   attribute ConditionCode Text {
      fetch = "CONDITION_CODE";
      label = "Condition Code";
      maxlength = 100;
      editable = [false];
      format = uppercase;
   }
   attribute ActivitySeq Number {
      editable = [false];
   }
   attribute TopParentHandlingUnitID Number {
      fetch = "Handling_Unit_API.Get_Top_Parent_Handl_Unit_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Handling Unit ID";
      maxlength = 2000;
      editable = [false];
   }
   attribute TopParentHandlingUnitTypeID Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Hu_Type_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Handling Unit Type ID";
      maxlength = 2000;
      editable = [false];
   }
   attribute TopParentHandlingUnitTypeDesc Text {
      fetch = "Handling_Unit_Type_API.Get_Description(Handling_Unit_API.Get_Top_Parent_Hu_Type_Id(HANDLING_UNIT_ID))";
      label = "Top Parent Handling Unit Type Desc";
      maxlength = 2000;
      editable = [false];
   }
   attribute TopParentSSCC Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Sscc(HANDLING_UNIT_ID)";
      label = "Top Parent SSCC";
      maxlength = 2000;
      editable = [false];
   }
   attribute TopParentAltHandlingUnitLabelID Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Alt_Hu_Label_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Alt Handling Unit Label ID";
      maxlength = 2000;
      editable = [false];
   }
   reference HandlingUnitRef(HandlingUnitId) to HandlingUnit(HandlingUnitId);
   reference InventoryPartInStockRef(Contract, PartNo, ConfigurationId, LocationNo, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq, HandlingUnitId) to InventoryPartInStock(Contract, PartNo, ConfigurationId, LocationNo, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq, HandlingUnitId);
   reference CustomerInfoRef(Owner) to CustomerInfo(CustomerId);
   reference HandlingUnitIdRef(HandlingUnitId) to HandlingUnit(HandlingUnitId) {
      label = "Handling Unit ID";
   }
   reference PartNoRef(Contract, PartNo) to IntorderPartLov(Contract, PartNo) {
      label = "Part No";
   }
   reference ConfigurationIdRef(Contract, PartNo, ConfigurationId) to InventoryPartConfig(Contract, PartNo, ConfigurationId) {
      label = "Configuration ID";
   }

   action ReserveManually {
      supportwarnings = [true];
      ludependencies = ManualReservationsOnSupplySite, InventoryPartInStock;

      parameter QtyReserved Number;
      parameter QtyReserveDiff     Number;
      parameter ParentOrderNo      Text;
      parameter ParentLineNo       Text;
      parameter ParentRelNo        Text;
      parameter ParentLineItemNo   Number;

   }
}

---------------------------- GENERATED FROM APF -----------------------------

function GetManualReservationsOnSupplySiteLine List<Entity(InventoryPartInStock)> {

   basedon InventoryPartInStocks;

   parameter OrderNo Text;
   parameter LineNo Text;
   parameter RelNo Text;
   parameter LineItemNo Number;
   parameter ConditionCode Text;
   parameter PartOwnershipDb Text;
   parameter Owner Text;
   parameter SupplySite Text;
   parameter PartNo Text;
   parameter ConfigurationId Text;
   parameter ConfirmDeliveriesDb Text;
   parameter ConsignmentStockDb Text;
   parameter RentalDb Text;
   parameter QtyToReserve Number;
   parameter QtyReserved Number;


   alterattribute LineQtyToReserve {
      fetch = ":QtyToReserve";
   }
   alterattribute LineQtyReserved {
      fetch = ":QtyReserved";
   }
   alterattribute ParentOrderNo {
      fetch = ":OrderNo";
   }
   alterattribute ParentLineNo {
      fetch = ":LineNo";
   }
   alterattribute ParentRelNo {
      fetch = ":RelNo";
   }
   alterattribute ParentLineItemNo {
      fetch = ":LineItemNo";
   }
   alterattribute QtyReserved {
      fetch = "Co_Supply_Site_Reservation_API.Get_Qty_Assigned(:OrderNo, :LineNo, :RelNo, :LineItemNo, CONTRACT, PART_NO, CONFIGURATION_ID, LOCATION_NO, LOT_BATCH_NO, SERIAL_NO, ENG_CHG_LEVEL, WAIV_DEV_REJ_NO, ACTIVITY_SEQ, HANDLING_UNIT_ID)";
   }
   alterattribute OldQtyReserved {
      fetch = "Co_Supply_Site_Reservation_API.Get_Qty_Assigned(:OrderNo, :LineNo, :RelNo, :LineItemNo, CONTRACT, PART_NO, CONFIGURATION_ID, LOCATION_NO, LOT_BATCH_NO, SERIAL_NO, ENG_CHG_LEVEL, WAIV_DEV_REJ_NO, ACTIVITY_SEQ, HANDLING_UNIT_ID)";
   }
   alterattribute QtyAvailable {
      fetch = "QTY_ONHAND - QTY_RESERVED + NVL(Co_Supply_Site_Reservation_API.Get_Qty_Assigned(:OrderNo, :LineNo, :RelNo, :LineItemNo, CONTRACT, PART_NO, CONFIGURATION_ID, LOCATION_NO, LOT_BATCH_NO, SERIAL_NO, ENG_CHG_LEVEL, WAIV_DEV_REJ_NO, ACTIVITY_SEQ, HANDLING_UNIT_ID), 0)";
   }

}










