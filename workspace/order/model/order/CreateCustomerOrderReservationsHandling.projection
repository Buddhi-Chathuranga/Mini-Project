----------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------
-- 181204      RAKUSE  SCUXXW4-8640, Converted dialog 'dlgPSheetCreateOrderReservations' using MTG Version: 1.34
----------------------------------------------------------------------------------------------------
projection CreateCustomerOrderReservationsHandling;
component ORDER;
layer Core;
description "Scheduled Task Assistant handling ''Create Customer Order Reservations''";
category Users;
include fragment ScheduledTasksCommon;
include fragment UserAllowedSiteLovSelector;
include fragment OrderCoordinatorLovSelector;
include fragment CustOrdCust1Selector;
include fragment CustAddressShipLovSelector;

-------------------------------- STRUCTURES----------------------------------

@Override
structure ParametersStructure {
   attribute PlannedDueDate Date;
   attribute Contract Text;
   attribute ExecutionOffset Number;
   attribute OrderType Text;
   attribute Coordinator Text;
   attribute Priority Text;
   attribute DeliverToCustomerNo Text;
   attribute DeliveryAddress Text;
   attribute RouteId Text;
   attribute ForwardAgentId Text;
   attribute PartNo Text;
   attribute ShipVia Text;

   attribute ReserveAllLinesCo Boolean;
   attribute FairShareRes Boolean;

   attribute CatalogType Enumeration(SalesPartType);
}

--------------------------------- VIRTUALS ----------------------------------
@Override
virtual TaskVirtual using BatchSchedule {
   -- Parameters

   attribute PlannedDueDate Date {
      label = "Due Date";
      // searchable = false;
   }
   attribute Contract Text {
      label = "Site";
      maxlength = 5;
      // searchable = false;
      format = uppercase;
   }
   attribute ExecutionOffset Number {
      label = "Execution Offset";
   }
   attribute OrderType Text {
      maxlength = 3;
      // searchable = false;
      format = uppercase;
   }
   attribute Coordinator Text {
      maxlength = 20;
      // searchable = false;
      format = uppercase;
   }
   attribute Priority Text {
      maxlength = 10;
      // searchable = false;
   }
   attribute DeliverToCustomerNo Text {
      maxlength = 20;
      // searchable = false;
      format = uppercase;
   }
   attribute DeliveryAddress Text {
      maxlength = 40;
      // searchable = false;
      format = uppercase;
   }
   attribute RouteId Text {
      maxlength = 12;
      // searchable = false;
      format = uppercase;
   }
   attribute ForwardAgentId Text {
      maxlength = 20;
      // searchable = false;
      format = uppercase;
   }
   attribute PartNo Text {
      maxlength = 25;
      // searchable = false;
      format = uppercase;
   }
   attribute ShipVia Text {
      maxlength = 3;
      // searchable = false;
      format = uppercase;
   }

   attribute ReserveAllLinesCo Boolean("TRUE", "FALSE") {
      label = "Reserve all the lines in CO";
      required = [true];
   }

   attribute FairShareRes Boolean("TRUE", "FALSE") {
      label = "";
      required = [true];
   }

   attribute CatalogType Enumeration(SalesPartType) {
      label = "Type of Sales Part";
   }

   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
      // TODO: This reference will have to be one that can take additional "static" values like %.
      // Uncomment the attribute below once the TEUXX-15075/TEUXX-15266 are available.
      // existcheck = [false];
   }
   reference OrderTypeRef(OrderType) to CustOrderType(OrderId) {
      label = "Order Type";
      // TODO: This reference will have to be one that can take additional "static" values like %.
      // Uncomment the attribute below once the TEUXX-15075/TEUXX-15266 are available.
      // existcheck = [false];
   }
   reference AuthorizeCodeRef(Coordinator) to OrderCoordinatorLov(AuthorizeCode) {
      label = "Coordinator";
      // TODO: This reference will have to be one that can take additional "static" values like %.
      // Uncomment the attribute below once the TEUXX-15075/TEUXX-15266 are available.
      // existcheck = [false];
   }
   reference CustomerNoRef(DeliverToCustomerNo) to CustOrdCust1(CustomerNo) {
      label = "Del-to-Cust No";
      // TODO: This reference will have to be one that can take additional "static" values like %.
      // Uncomment the attribute below once the TEUXX-15075/TEUXX-15266 are available.
      // existcheck = [false];
   }
   reference DeliverAddressRef(DeliverToCustomerNo, DeliveryAddress) to CustAddressShipLov(CustomerNo, AddrNo) {
      label = "Delivery Address";
      // TODO: This reference will have to be one that can take additional "static" values like %.
      // Uncomment the attribute below once the TEUXX-15075/TEUXX-15266 are available.
      // existcheck = [false];
   }
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Route ID";
      // TODO: This reference will have to be one that can take additional "static" values like %.
      // Uncomment the attribute below once the TEUXX-15075/TEUXX-15266 are available.
      // existcheck = [false];
   }
   reference ForwardAgentIdRef(ForwardAgentId) to ForwarderInfo(ForwarderId) {
      label = "Forwarder ID";
      // TODO: This reference will have to be one that can take additional "static" values like %.
      // Uncomment the attribute below once the TEUXX-15075/TEUXX-15266 are available.
      // existcheck = [false];
   }
   reference PartNoRef(Contract, PartNo) to InventoryPart(Contract, PartNo) {
      label = "Part No";
      // TODO: This reference will have to be one that can take additional "static" values like %.
      // Uncomment the attribute below once the TEUXX-15075/TEUXX-15266 are available.
      // existcheck = [false];
   }
   reference ShipViaRef(ShipVia) to MpccomShipVia(ShipViaCode) {
      label = "Ship Via";
      // TODO: This reference will have to be one that can take additional "static" values like %.
      // Uncomment the attribute below once the TEUXX-15075/TEUXX-15266 are available.
      // existcheck = [false];
   }

   ---

}

--------------------------------- FUNCTIONS ---------------------------------

function ValidatePriority Boolean {
   parameter PriorityVal Text;
}

------------------------------- ENUMERATIONS --------------------------------

@Override
enumeration SalesPartType {
   enumerationtype = Standard;
   exec = "Sales_Part_Type_API";
   value = "INV" {
      identifier = "InventoryPart";
      label = "Inventory part";
   }
   value = "NON" {
      identifier = "NonInventoryPart";
      label = "Non inventory part";
   }
   value = "PKG" {
      identifier = "PackagePart";
      label = "Package part";
   }
}