-----------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------
-- 2021-01-15  JeLise  SC2020R1-7320, Added global TreeId to fix population issues.
-- 2020-11-12  RavDlk  SC2020R1-11228, Handled the enumerations for some attrbutes
-- 2019-06-25  YasMlk  SCUXXW4-21684, Added contact widgets and filter attributes to the page level search.
-- 2019-01-23  ShKolk  SCUXXW4-2646, Created from frmCustomerOrderAnalysis using MTG Version: 1.34
-----------------------------------------------------------------------------
client SupplyChainCustomerOrderAnalysis;
component ORDER;
layer Core;
projection SupplyChainCustomerOrderAnalysis;

--------------------------------- FRAGMENTS ---------------------------------
include fragment SupplyChainOrderAnalysisBase;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry SupplyChainCustomerOrderAnalysisNavEntry parent OrderNavigator.SalesOrder at index 950 {
      label = "Supply Chain Customer Order Analysis";
      tree Tree;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using CustomerOrderLineAnalysisSet {
   label = "Supply Chain Customer Order Analysis";
   stateindicator CustomerOrderLineAnalysisStateIndicator;
   selector CustomerOrderLineAnalysisSelector;
   group CustomerOrderLineHeaderGroup;
   group CustomerOrderLineGeneralGroup;
   list SupplyOrderAnalysisList using FetchNodesList(component.global.TreeId);
   global TreeId Number = 0;
}

--------------------------------- COMMANDS ----------------------------------
command GenerateTreeCommand for CustomerOrderLineAnalysis {
   execute {
      call GenerateTree(OrderNo, LineNo, RelNo, LineItemNo, "CUSTOMER_ORDER") into TreeId;
      set component.global.TreeId = TreeId;
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector CustomerOrderLineAnalysisSelector for CustomerOrderLineAnalysis {
   selectionchanged command GenerateTreeCommand;
   static OrderNo;
   static LineNo;
   static RelNo;
   static LineItemNo {
      visible = [false];
   }
   badge Objstate {
      style = TextOnly;
      label = "State";
      emphasis Progress3 = [Objstate = "Released"];
      emphasis Progress5 = [Objstate = "Reserved"];
      emphasis Progress7 = [Objstate = "Picked"];
      emphasis Progress8 = [Objstate = "PartiallyDelivered"];
      emphasis Progress10 = [Objstate = "Delivered"];
      emphasis Progress12 = [Objstate = "Invoiced"];
      emphasis StateCancelled = [Objstate = "Cancelled"];
   }
   field ContractRef;
   field AuthorizeCodeRef {
      visible = [false];
   }
   field ShipAddrNo {
      label = "Ship Addr";
      visible = [false];
   }
   field CustomerNoRef {
      visible = [false];
   }
   field CustomerName {
      label = "Customer Name";
      visible = [false];
   }
   field CatalogNoRef {
      visible = [false];
   }
   field CatalogDesc {
      label = "Sales Part Description";
      visible = [false];
   }
   field AddrFlag {
      label = "Single Occurrence";
      visible = [false];
   }
}
---------------------------------- GROUPS -----------------------------------

group CustomerOrderLineHeaderGroup for CustomerOrderLineAnalysis {
   label = "";
   field OrderNo {
      size = Small;
   }
   field LineNo {
      size = Small;
   }
   field RelNo {
      size = Small;
   }
   lov ContractRef with ReferenceUserAllowedSiteLovSelector {
      preview = UserAllowedSiteLovCard;
      size = Small;
   }
   lov CustomerNoRef with ReferenceCustOrdCust7Selector {
      size = Small;
      contactwidget {
         enabled = [CustomerNo != null];
         source = Customer;
      }
   }
   field TreeId {
      visible = [false];
   }
   field NodeId {
      visible = [false];
   }
}

group CustomerOrderLineGeneralGroup for CustomerOrderLineAnalysis {
   label = "General";
   lov AuthorizeCodeRef with ReferenceOrderCoordinatorLovSelector {
      size = Small;
      contactwidget {
         enabled = [AuthorizeCode != null];
         source = Person;
      }
   }
   lov ShipAddrNoRef with ReferenceCustAddressBillLovSelector {
      preview = CustAddressBillLovCard;
      size = Small;
   }
   lov CatalogNoRef with ReferenceSalesPartSelector {
      description = CatalogNoRef.CatalogDesc;
   }
   field AddrFlag {
      label = "Single Occurrence";
      size = Small;
      enumerationtrue = "Yes";
      enumerationfalse = "No";
      truelabel = "Yes";
      falselabel = "No";
   }
}

----------------------------------- LISTS -----------------------------------


----------------------------------- TREES -----------------------------------
tree Tree using CustomerOrderLineAnalysisSet {
   label = "Tree";
   selector CustomerOrderLineAnalysisSelector;
   rootnode RootNode {
      label = "Customer Order - ${OrderNo} - ${CustomerNo}";
      navigate {
         page Form {
            filter(OrderNo, OrderNo);
            filter(LineNo, LineNo);
            filter(RelNo, RelNo);
            filter(LineItemNo, LineItemNo);
         }
      }
      iconset {
         icon "document-dollarsign";
      }
      connections {
         node Node using FetchChildNode(TreeId, NodeId);
      }
   }
   node Node for SupplyOrderAnalysis {
      label = "${OrderType} - ${OrderRef} ${CustomerSupplier}";
      iconset {
         icon "document-dollarsign" {
            expression = [OrderTypeDb = "CUSTOMER_ORDER"];
         }
         icon "document-cart" {
            expression = [OrderTypeDb = "PURCHASE_ORDER"];
         }
         icon "document-lightbulb" {
            expression = [OrderTypeDb = "PURCHASE_REQUISITION"];
         }
         icon "document-gear" {
            expression = [OrderTypeDb = "SHOP_ORDER"];
         }
         icon "document-structure" {
            expression = [OrderTypeDb = "DOP_ORDER"];
         }
         icon "document-alt" {
            expression = [OrderTypeDb in("ORDERS", "ORDCHG")];
         }
      }
      connections {
         node Node using FetchChildNode(TreeId, NodeId);
      }
   }
}

----------------------------- STATE INDICATORS ------------------------------
stateindicator CustomerOrderLineAnalysisStateIndicator for CustomerOrderLineAnalysis {
   state "Released" {
      completed = 25%;
      emphasis Progress3 = [Objstate = "Released"];
   }
   state "Reserved" {
      completed = 42%;
      emphasis Progress5 = [Objstate = "Reserved"];
   }
   state "Picked" {
      completed = 58%;
      emphasis Progress7 = [Objstate = "Picked"];
   }
   state "PartiallyDelivered" {
      completed = 57%;
      emphasis Progress8 = [Objstate = "PartiallyDelivered"];
   }
   state "Delivered" {
      completed = 83%;
      emphasis Progress10 = [Objstate = "Delivered"];
   }
   state "Invoiced" {
      completed = 100%;
      emphasis Progress12 = [Objstate = "Invoiced"];
   }
   state "Cancelled" {
      completed = 100%;
      emphasis StateCancelled = [Objstate = "Cancelled"];
   }
}
