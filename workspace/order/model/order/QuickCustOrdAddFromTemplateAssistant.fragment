-------------------------------------------------------------------------------------------------
-- Date        Sign     History
-- ----------  ------   -------------------------------------------------------------------------
-- 2021-11-11  DhAplk   SC21R2-5066, Created.
-------------------------------------------------------------------------------------------------

fragment QuickCustOrdAddFromTemplateAssistant;
component ORDER;
layer Core;
description "Add Parts from Template in Quick Customer Order Registration";

--------------------------------- FRAGMENTS ---------------------------------

include fragment SalesPartActiveLovSelector;

----------------------------- CLIENT FRAGMENTS ------------------------------

-------------------------------- ASSISTANTS ---------------------------------

assistant AddFromTemplateAssistant using AddFromTemplateSet {
   label = "Add from Template";
   savemode = OnLostFocus;
   input(Contract, CustomerNo);
   output(Objkey);

   init command {
      execute {
         call FetchDefaultTemplate(CustomerNo) into TemplateId;
      }
   }
   steps {
      step {
         group AddFromTemplateGroup;
         markdowntext {
            text = "All lines shown here will be added to the Customer Order.";
            emphasis Info = [true];
         }
         list CoTemplateLinesList(CoTemplateLines);
      }
      final step {
      }
   }
   finish command {
      enabled = [component.CoTemplateLinesList.RowCount > 0];
      execute {
         exit OK;
      }
   }
   cancel command {
      execute {
         exit CANCEL;
      }
   }
}

---------------------------------- GROUPS -----------------------------------

group AddFromTemplateGroup for AddFromTemplateVirtual {
   label = "";
   lov TemplateIdRef with ReferenceCustomerOrderTemplateSelector;
}

----------------------------------- LISTS -----------------------------------

list CoTemplateLinesList for CoTemplateLineVirtual {
   label = "Lines to Add";
   editmode = MultiRowEdit;
   multiselect = [true];
   crudactions {
      new {
         enabled = [false];
      }
   }
   field CatalogNoRef;
   field CatalogDescription {
      size = Large;
   }
   field Quantity {
      validate command {
         execute {
            if [Quantity <= 0] {
               warning("Part line with zero qty will not be added to the Customer Order");
            }
         }
      }
   }
   field SalesUnitMeas;
}


--------------------------- PROJECTION FRAGMENTS ----------------------------

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset AddFromTemplateSet for AddFromTemplateVirtual;

--------------------------------- VIRTUALS ----------------------------------

virtual AddFromTemplateVirtual {
   ludependencies = CoTemplateLineVirtual;

   attribute TemplateId Text;
   attribute Contract Text;
   attribute CustomerNo Text;

   array CoTemplateLines() to CoTemplateLineVirtual();

   reference TemplateIdRef(TemplateId) to CustomerOrderTemplate(TemplateId) {
      label = "Template ID";
   }
}

virtual CoTemplateLineVirtual {
   ludependencies = AddFromTemplateVirtual;
   crud = Read, Update, Delete;

   attribute Contract Text;
   attribute CatalogNo Text {
      label = "Sales Part No";
      maxlength = 25;
      editable = [false];
   }
   attribute CatalogDescription Text {
      label = "Sales Part Description";
      maxlength = 200;
      editable = [false];
   }
   attribute Quantity Number;
   attribute SalesUnitMeas Text {
      label = "Sales UoM";
      maxlength = 10;
      editable = [false];
   }

   reference CatalogNoRef(Contract, CatalogNo) to SalesPartActiveLov(Contract, CatalogNo) {
      label = "Sales Part";
   }
}

---------------------------------- ACTIONS ----------------------------------


--------------------------------- FUNCTIONS ---------------------------------

function FetchDefaultTemplate Text {
   parameter CustomerNo Text;
}
