-------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2020-11-17  RavDlk  SC2020R1-11227, Replaced boolean fields FixedCommissionAmount and CommissionCalcStatus with enumerations
-- 2019-01-25  SATGLK  SCUXXW4-9265, Converted from frmOrderCommission  using MTG Version: 1.34
--------------------------------------------------------------------------------------
projection CommissionsPerReceiverAndPeriodHandling;
component ORDER;
layer Core;
description "Use this API to to enter, process and view the information on Commissions Per Receiver And Period";
category Users;
include fragment CommissionCalculationInfoAssistant;
include fragment DocumentText;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset OrderCommissionSet for OrderCommission;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity OrderCommission {
   ludependencies = DocumentText;
   crud = Read, Update;
   from = "order_commission";
   exec = "ORDER_COMMISSION_API";
   keys = CommissionNo {
      where = "COMMISSION_NO = :CommissionNo";
   }
   supportwarnings = [true];
   use attributes = CommissionReceiver, Contract, PeriodFrom, PeriodUntil, LastCalculationDate, NoteText, NoteId;
   attribute CommissionNo Number {
      fetch = "commission_no";
      label = "Commission No";
      editable = [false];
   }
   attribute CommissionReceiver Text {
      fetch = "commission_receiver";
      label = "Commission Receiver";
      maxlength = 20;
      editable = [false];
   }
   attribute Contract Text {
      fetch = "contract";
      label = "Site";
      maxlength = 5;
      editable = [false];
      format = uppercase;
   }
   attribute PeriodFrom Date {
      fetch = "period_from";
      label = "From Date";
      editable = [false];
   }
   attribute PeriodUntil Date {
      fetch = "period_until";
      label = "To Date";
      editable = [false];
   }
   attribute CommissionCalcStatus Enumeration(CommissionCalcStatus) {
      fetch = "commission_calc_status_db";
      label = "Final Calculated";
      editable = [false];
      required = [true];
   }
   attribute DocumentText Boolean {
      fetch = "DECODE(Document_Text_API.Note_Id_Exist(note_id), '1', 'TRUE', 'FALSE')";
      label = "Document Text";
      editable = [false];
   }
   attribute TotalBaseAmount Number {
      fetch = "Order_Commission_API.Get_Total_Base_Amount(commission_no)";
      label = "Total Base Amount";
      editable = [false];
      format = ifscurrency;
   }
   attribute BaseCurr Text {
      fetch = "Company_Finance_API.Get_Currency_Code(Site_API.Get_Company(contract))";
      label = "Base Curr";
      maxlength = 2000;
      editable = [false];
   }
   attribute TotalCurrAmount Number {
      fetch = "Order_Commission_API.Get_Total_Curr_Amount(commission_no)";
      label = "Total Curr Amount";
      editable = [false];
      format = ifscurrency;
   }
   attribute NextFrom Date {
      fetch = "Commission_Receiver_API.Get_Period_Date_From( commission_receiver, period_until + 1 )";
      label = "Next From";
      editable = [false];
   }
   attribute NextUntil Date {
      fetch = "Commission_Receiver_API.Get_Period_Date_Until( commission_receiver, period_until + 1 )";
      label = "Next Until";
      editable = [false];
   }
   attribute LastCalculationDate Timestamp {
      fetch = "last_calculation_date";
      label = "Last Calculation Date";
      editable = [false];
   }
   attribute NoteText Text {
      fetch = "note_text";
      label = "Notes";
      maxlength = 2000;
   }
   attribute NoteId Number {
      fetch = "note_id";
      maxlength = 10;
      editable = [ETag = null];
   }
   attribute Currency Text {
      fetch = "COMMISSION_RECEIVER_API.Get_Currency_Code(COMMISSION_RECEIVER)";
   }
   attribute CurrentDateTime Timestamp {
      fetch = "sysdate";
   }
   reference CommissionReceiverRef(CommissionReceiver) to CommissionReceiver(CommissionReceiver) {
      label = "Commission Receiver";
   }
   reference ContractRef(Contract) to Site(Contract) {
      label = "Site";
   }
   array OrderLineCommissions(CommissionNo) to OrderLineCommission(CommissionNo);
   action CloseOrderCommission;
   action GetResultKey Number {
      parameter Contract Text;
      parameter CommissionReceiver Text;
   }

   action GetResultKeyforLine Number {
      parameter CommissionReceiver Text;
   }
   action UpdateCalcCommission {
      parameter OverwriteManualData Text;
      supportwarnings = [true];
      ludependencies = OrderLineCommission;
   }
}
@Override
entity OrderLineCommission {
   ludependencies = DocumentText;
   crud = Read, Update, Delete;
   from = "order_line_commission";
   exec = "ORDER_LINE_COMMISSION_API";
   keys = OrderNo, LineNo, RelNo, LineItemNo, CommissionLineNo, CommissionNo {
      where = "ORDER_NO = :OrderNo and LINE_NO = :LineNo and REL_NO = :RelNo and LINE_ITEM_NO = :LineItemNo and COMMISSION_LINE_NO = :CommissionLineNo and COMMISSION_NO = :CommissionNo";
   }
   supportwarnings = [true];
   use attributes = CommissionPercentage, CommissionPercentageCalc, CommissionAmount, CommissionAmountCalc, TotalCommissionAmount, CommissionCalcBase, CommissionLineSource, CalculationDate, AgreementId, RevisionNo, Contract, NoteId, NoteText;
   attribute OrderNo Text {
      fetch = "order_no";
      label = "Order No";
      maxlength = 12;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute LineNo Text {
      fetch = "line_no";
      label = "Line No";
      maxlength = 4;
      required = [true];
      editable = [ETag = null];
   }
   attribute RelNo Text {
      fetch = "rel_no";
      label = "Del No";
      maxlength = 4;
      required = [true];
      editable = [ETag = null];
   }
   attribute LineItemNo Number {
      fetch = "line_item_no";
      label = "Line Item No";
      required = [true];
      editable = [ETag = null];
   }
   attribute CommissionLineNo Number {
      fetch = "commission_line_no";
      label = "Commission Line No";
      editable = [false];
   }
   attribute CommissionPercentage Number {
      fetch = "commission_percentage";
      label = "Commission (%)";
   }
   attribute CommissionPercentageCalc Number {
      fetch = "commission_percentage_calc";
      label = "Calculated Commission (%)";
      editable = [false];
   }
   attribute CommissionAmount Number {
      fetch = "commission_amount";
      label = "Fixed Commission Amount in Base Currency";
      format = ifscurrency;
   }
   attribute CommissionAmountCalc Number {
      fetch = "commission_amount_calc";
      label = "Calculated Commission Amount";
      editable = [false];
      format = ifscurrency;
   }
   attribute FixedCommissionAmount Enumeration(FixedCommissionAmount) {
      fetch = "fixed_commission_amount_db";
      label = "Fixed Commission";
      editable = [ETag = null];
      required = [true];
   }
   attribute TotalCommissionAmount Number {
      fetch = "total_commission_amount";
      label = "Total Commission Amount";
      editable = [ETag = null];
      format = ifscurrency;
   }
   attribute TotalDueCommissionAmount Number {
      fetch = "Order_Line_Commission_API.Get_Total_Due_Com_Amount(order_no, line_no, rel_no, line_item_no, commission_line_no,'TRUE')";
      label = "Total Due Commission Amount";
      editable = [ETag = null];
      format = ifscurrency;
   }
   attribute Currency Text {
      fetch = "COMMISSION_RECEIVER_API.Get_Currency_Code(COMMISSION_RECEIVER)";
      editable = [false];
   }
   attribute CommissionCalcBase Enumeration(CommissionCalcBase) {
      fetch = "commission_calc_base_db";
      label = "Commission Calculation Base";
      editable = [ETag = null];
   }
   attribute CommissionLineSource Enumeration(CommissionLineSource) {
      fetch = "commission_line_source_db";
      label = "Line Source";
      editable = [ETag = null];
   }
   attribute CommissionRecalcFlag Boolean {
      fetch = "DECODE(commission_recalc_flag_db, 'NEEDCALCULATION', 'TRUE', 'FALSE')";
      label = "Need Recalculation";
      editable = [ETag = null];
   }
   attribute CalculationDate Date {
      fetch = "calculation_date";
      label = "Last Calculation Date";
      editable = [ETag = null];
   }
   attribute CommissionNo Number {
      fetch = "commission_no";
      label = "Commission No";
      editable = [ETag = null];
   }
   attribute AgreementId Text {
      fetch = "agreement_id";
      label = "Agreement ID";
      maxlength = 12;
      editable = [ETag = null];
      format = uppercase;
   }
   attribute RevisionNo Number {
      fetch = "revision_no";
      label = "Revision No";
      editable = [ETag = null];
   }
   attribute Contract Text {
      fetch = "contract";
      label = "Site";
      maxlength = 5;
      editable = [ETag = null];
      format = uppercase;
   }
   attribute DocumentText Boolean {
      fetch = "DECODE(Document_Text_API.Note_Id_Exist(note_id), '1', 'TRUE', 'FALSE')";
      label = "Document Text";
      editable = [false];
   }
   attribute NoteId Number {
      fetch = "note_id";
      label = "Note ID";
      maxlength = 10;
      editable = [ETag = null];
   }
   attribute NoteText Text {
      fetch = "note_text";
      label = "Note";
      maxlength = 2000;
   }
   attribute Amount Number {
      fetch = "amount";
   }
   attribute Discount Number {
      fetch = "discount";
   }
   attribute Quantity Number {
      fetch = "qty";
   }
   reference CommissionAgreeRef(AgreementId, RevisionNo) to CommissionAgree(AgreementId, RevisionNo);
   reference LineItemNoRef(OrderNo, LineNo, RelNo, LineItemNo) to CustomerOrderLine(OrderNo, LineNo, RelNo, LineItemNo) {
      label = "Line Item No";
   }
   reference CommissionNoRef(CommissionNo) to OrderCommission(CommissionNo) {
      label = "Commission No";
   }
   reference AgreementIdRef(AgreementId, AgreementId) to CommissionAgree(AgreementId, RevisionNo) {
      label = "Agreement ID";
   }
   reference RevisionNoRef(AgreementId, RevisionNo) to CommissionAgree(AgreementId, RevisionNo) {
      label = "Revision No";
   }
}

---------------------------------- ACTIONS ----------------------------------





