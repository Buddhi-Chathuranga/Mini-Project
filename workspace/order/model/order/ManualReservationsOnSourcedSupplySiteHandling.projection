-------------------------------------------------------------------------------------------------
-- Date        Sign     History
-- ----------  ------   -------------------------------------------------------------------------
-- 2021-12-28  DhAplk   SCTA-11073, Added DynamicComponentDependency for SiteRef reference in ManualReservationsOnSourcedSupplySite query because site has dynamiC dependency for PURCH.
-- 2019-09-12  RoJalk   SCUXXW4-16686, Removed temp order reference values(TEUXX-14586).
-- 2019-07-22  RoJalk   SCUXXW4-22002, Moved CalculatedQuantityStruct, CalculatedQuantity to ManualReservationsOnSupplySiteBase.
-- 2018-12-25  RasDlk   SCUXXW4-9575, Converted from frmSupplyReserveSource, tbwSingleSupplyReserveSource using MTG Version: 1.34
-------------------------------------------------------------------------------------------------

projection ManualReservationsOnSourcedSupplySiteHandling;
component ORDER;
layer Core;
description "Use this API to make manual reservations for sourced customer orders at a specific inventory location on the supplying site using the internal order flow.";
category Users;
include fragment IntorderPartLovSelector;
include fragment CustOrdCust1Selector;
include fragment UserAllowedSiteLovSelector;
include fragment ManualReservationsOnSupplySiteBase;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset ManualReservationsOnSourcedSupplySiteSet for ManualReservationsOnSourcedSupplySite;
entityset InventoryPartInStockSet for InventoryPartInStock;

------------------------------ ENTITY DETAILS -------------------------------
query ManualReservationsOnSourcedSupplySite {
   from = "supply_site_reserve_source";
   lu = SourcedCustOrderLine;
   where = "LINE_OBJSTATE = 'Released' AND RELEASE_PLANNING_DB = 'RELEASED' AND LINE_ITEM_NO >= 0 ";
   keys = OrderNo, LineNo, RelNo, LineItemNo, SourceId;
   ludependencies = InventoryPartInStock;

   attribute OrderNo Text {
      fetch = "ORDER_NO";
      maxlength = 100;
      editable = [false];
   }
   attribute LineNo Text {
      fetch = "LINE_NO";
      editable = [false];
   }
   attribute RelNo Text {
      fetch = "REL_NO";
      label = "Del No";
      editable = [false];
   }
   attribute LineItemNo Number {
      fetch = "LINE_ITEM_NO";
      editable = [false];
   }
   attribute SourceId Number {
      fetch = "SOURCE_ID";
      label = "Source ID";
      editable = [false];
   }
   attribute CustomerNo Text {
      fetch = "CUSTOMER_NO";
      format = uppercase;
   }
   @DynamicComponentDependency PURCH
   attribute Site Text {
      fetch = "NVL(Supplier_API.Get_Acquisition_Site(VENDOR_NO),CONTRACT)";
      label = "Site";
      maxlength = 2000;
      editable = [false];
      format = uppercase;
   }
   attribute PartNo Text {
      fetch = "NVL(PART_NO, PURCHASE_PART_NO)";
      label = "Part No";
      maxlength = 25;
      editable = [false];
      format = uppercase;
   }
   @DynamicComponentDependency PURCH
   attribute PartDescription Text {
      fetch = "Inventory_Part_API.Get_Description(NVL(Supplier_API.Get_Acquisition_Site(VENDOR_NO),CONTRACT), NVL(PART_NO,PURCHASE_PART_NO))";
      label = "Part Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute LineState Text {
      fetch = "LINE_STATE";
      label = "Status";
      maxlength = 253;
      editable = [false];
   }
   attribute ConditionCode Text {
      fetch = "CONDITION_CODE";
      label = "Condition Code";
      maxlength = 10;
      editable = [false];
      format = uppercase;
   }
   @DynamicComponentDependency PURCH
   attribute Uom Text {
      fetch = "Inventory_Part_API.Get_Unit_Meas(NVL(Supplier_API.Get_Acquisition_Site(VENDOR_NO),CONTRACT), PART_NO)";
      label = "UoM";
      maxlength = 2000;
      editable = [false];
   }
   attribute RouteId Text {
      fetch = "ROUTE_ID";
      label = "Route ID";
      maxlength = 12;
      editable = [false];
   }
   attribute ReservedQty Number {
      fetch = "Sourced_Co_Supply_Site_Res_API.Get_Qty_Reserved(ORDER_NO,LINE_NO,REL_NO,LINE_ITEM_NO,SOURCE_ID)";
      label = "Reserved Qty";
      editable = [false];
   }
   @DynamicComponentDependency PURCH
   attribute QtyToReserve Number {
      fetch = "Inventory_Part_API.Get_Site_Converted_Qty(CONTRACT, PART_NO, SOURCED_QTY - QTY_SHIPPED, NVL(Supplier_API.Get_Acquisition_Site(VENDOR_NO),CONTRACT), 'ADD')";
      label = "Qty to Reserve";
      editable = [false];
   }
   attribute PlannedDeliveryDate Timestamp {
      fetch = "PLANNED_DELIVERY_DATE";
      label = "Planned Delivery Date";
      editable = [false];
   }
   attribute PromisedDeliveryDate Timestamp {
      fetch = "PROMISED_DELIVERY_DATE";
      label = "Promised Delivery Date";
      editable = [false];
   }
   attribute PlannedShipDate Timestamp {
      fetch = "PLANNED_SHIP_DATE";
      label = "Planned Ship Date/Time";
      editable = [false];
   }
   attribute PlannedShipPeriod Text {
      fetch = "PLANNED_SHIP_PERIOD";
      label = "Planned Ship Period";
      maxlength = 10;
      editable = [false];
      format = uppercase;
   }
   attribute PartOwnership Text {
      fetch = "PART_OWNERSHIP";
      label = "Ownership";
      maxlength = 20;
      editable = [false];
   }
   attribute Owner Text {
      fetch = "Customer_Order_Line_API.Get_Owner_For_Part_Ownership(ORDER_NO,LINE_NO,REL_NO,LINE_ITEM_NO,PART_OWNERSHIP_DB)";
      label = "Owner";
      maxlength = 10;
      editable = [false];
   }
   attribute Contract Text {
      fetch = "CONTRACT";
   }
   attribute PartOwnershipDb Text {
      fetch = "PART_OWNERSHIP_DB";
   }
   attribute ConfirmDeliveriesDb Text {
      fetch = "CONFIRM_DELIVERIES_DB";
   }
   attribute ConsignmentStockDb Text {
      fetch = "CONSIGNMENT_STOCK_DB";
   }
   attribute CustomerOrderLineState Text {
      fetch = "LINE_OBJSTATE";
   }

   reference CustomerOrderRef(OrderNo) to CustomerOrder(OrderNo);
   reference ConditionCodeRef(ConditionCode) to ConditionCode(ConditionCode);
   reference OrderNoRef(OrderNo) to CustomerOrder(OrderNo) {
      label = "Order No";
   }
   @DynamicComponentDependency PURCH
   reference SiteRef(Site) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference CustomerNoRef(CustomerNo) to CustOrdCust1(CustomerNo) {
      label = "Customer";
   }
   reference PartNoRef(Contract, PartNo) to IntorderPartLov(Contract, PartNo) {
      label = "Part No";
   }
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Route";
   }
   reference PlannedShipPeriodRef(PlannedShipPeriod) to WorkTimePeriod(Period) {
      label = "Planned Ship Period";
   }
}

@Override
entity InventoryPartInStock {
   crud = Read, Update;
   from = "inventory_part_in_stock_res";
   where = "QTY_ONHAND > 0 AND LOCATION_TYPE_DB IN ('PICKING', 'F') AND ACTIVITY_SEQ = 0";
   keys = LocationNo, HandlingUnitId, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, Contract, PartNo, ConfigurationId, ActivitySeq;
   supportwarnings = [true];
   use attributes = QtyReserved, QtyOnhand, ExpirationDate, PartOwnership, Warehouse, BayNo, RowNo, TierNo, BinNo, AvailabilityControlId, ReceiptDate;

   attribute QtyReserved Number {
      fetch = "0";
      label = "Reserved Qty";
      required = [false];
      editable = [true];
      insertable = [false];
      updatable = [true];
   }
   attribute TotalQtyReserved Number {
      fetch = "QTY_RESERVED";
      label = "Tot Res Qty";
      editable = [false];
      insertable = [false];
      updatable = [false];
   }
   attribute QtyOnhand Number {
      label = "On Hand Qty";
      editable = [false];
      insertable = [false];
      updatable = [false];
   }
   attribute OldQtyReserved Number {
      fetch = "0";
      editable = [true];
      insertable = [false];
      updatable = [false];
   }
   attribute QtyReserveDiff Number {
      fetch = "0";
      editable = [true];
      insertable = [false];
      updatable = [true];
   }
   attribute QtyAvailable Number {
      fetch = "0";
      editable = [true];
      insertable = [false];
      updatable = [false];
   }
   attribute HandlingUnitId Number {
      editable = [false];
   }
   attribute LineQtyToReserve Number {
      fetch = "0";
   }
   attribute LineQtyReserved Number {
      fetch = "0";
   }
   attribute ParentOrderNo Text {
      fetch = "''";
   }
   attribute ParentLineNo Text {
      fetch = "''";
   }
   attribute ParentRelNo Text {
      fetch = "''";
   }
   attribute ParentLineItemNo Number {
      fetch = "''";
   }
   attribute ParentSourceId Number {
      fetch = "''";
   }
   attribute TypeDescription Text {
      fetch = "Handling_Unit_Type_API.Get_Description(Handling_Unit_API.Get_Handling_Unit_Type_Id(handling_unit_id))";
      label = "Type Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute LotBatchNo Text {
      label = "Lot/Batch No";
   }
   attribute EngChgLevel Text {
      label = "Revision No";
   }
   attribute AvailabilityControlDescription Text {
      fetch = "Part_Availability_Control_API.Get_Description(Inventory_Part_In_Stock_API.Get_Availability_Control_Id(contract,part_no,configuration_id,location_no,lot_batch_no,serial_no,eng_chg_level,waiv_dev_rej_no,0,handling_unit_id))";
      label = "Availability Control Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute ExpirationDate Date {
      label = "Expires";
      editable = [ETag = null];
   }
   attribute PartOwnership Text {
      fetch = "part_ownership";
      label = "Ownership";
      maxlength = 100;
      // searchable = false;
      editable = [false];
   }
   attribute Owner Text {
      fetch = "DECODE(Part_Ownership_API.Encode(part_ownership), 'customer owned', owning_customer_no, 'CONSIGNMENT', owning_vendor_no, 'supplier loaned', owning_vendor_no )";
      label = "Owner";
      maxlength = 10;
      // searchable = false;
      editable = [false];
   }
   attribute ConditionCode Text {
      fetch = "condition_code";
      label = "Condition Code";
      maxlength = 100;
      // searchable = false;
      editable = [false];
      format = uppercase;
   }
   attribute ConfigurationId Text {
      // searchable = false;
      editable = [false];
   }
   attribute ActivitySeq Number {
      // searchable = false;
      editable = [false];
   }
   attribute TopParentHandlingUnitID Number {
      fetch = "Handling_Unit_API.Get_Top_Parent_Handl_Unit_Id(handling_unit_id)";
      label = "Top Parent Handling Unit ID";
      maxlength = 2000;
      editable = [false];
   }
   attribute TopParentHandlingUnitTypeID Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Hu_Type_Id(handling_unit_id)";
      label = "Top Parent Handling Unit Type ID";
      maxlength = 2000;
      editable = [false];
   }
   attribute TopParentHandlingUnitTypeDesc Text {
      fetch = "Handling_Unit_Type_API.Get_Description(Handling_Unit_API.Get_Top_Parent_Hu_Type_Id(handling_unit_id))";
      label = "Top Parent Handling Unit Type Desc";
      maxlength = 2000;
      editable = [false];
   }
   attribute TopParentSSCC Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Sscc(handling_unit_id)";
      label = "Top Parent SSCC";
      maxlength = 2000;
      editable = [false];
   }
   attribute TopParentAltHandlingUnitLabelID Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Alt_Hu_Label_Id(handling_unit_id)";
      label = "Top Parent Alt Handling Unit Label ID";
      maxlength = 2000;
      editable = [false];
   }
   reference HandlingUnitRef(HandlingUnitId) to HandlingUnit(HandlingUnitId);
   reference InventoryPartInStockRef(Contract, PartNo, ConfigurationId, LocationNo, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq, HandlingUnitId) to InventoryPartInStock(Contract, PartNo, ConfigurationId, LocationNo, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq, HandlingUnitId);

   reference CustomerInfoRef(Owner) to CustomerInfo(CustomerId);
   reference HandlingUnitIdRef(HandlingUnitId) to HandlingUnit(HandlingUnitId) {
      label = "Handling Unit ID";
   }
   reference PartNoRef(Contract, PartNo) to IntorderPartLov(Contract, PartNo) {
      label = "Part No";
   }

   action ReserveManually {
      supportwarnings = [true];
      ludependencies = ManualReservationsOnSourcedSupplySite;

      parameter QtyReserved        Number;
      parameter QtyReserveDiff     Number;
      parameter ParentOrderNo      Text;
      parameter ParentLineNo       Text;
      parameter ParentRelNo        Text;
      parameter ParentLineItemNo   Number;
      parameter ParentSourceId     Number;

   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------
function GetManualReservationsOnSourcedSupplySiteLine List<Entity(InventoryPartInStock)> {

   basedon InventoryPartInStockSet;

   parameter OrderNo Text;
   parameter LineNo Text;
   parameter RelNo Text;
   parameter LineItemNo Number;
   parameter SourceId Number;
   parameter ConditionCode Text;
   parameter PartOwnershipDb Text;
   parameter Owner Text;
   parameter SupplySite Text;
   parameter PartNo Text;
   parameter ConfirmDeliveriesDb Text;
   parameter ConsignmentStockDb Text;
   parameter QtyToReserve Number;
   parameter QtyReserved Number;

   alterattribute LineQtyToReserve {
      fetch = ":QtyToReserve";
   }
   alterattribute LineQtyReserved {
      fetch = ":QtyReserved";
   }
   alterattribute ParentOrderNo {
      fetch = ":OrderNo";
   }
   alterattribute ParentLineNo {
      fetch = ":LineNo";
   }
   alterattribute ParentRelNo {
      fetch = ":RelNo";
   }
   alterattribute ParentLineItemNo {
      fetch = ":LineItemNo";
   }
   alterattribute ParentSourceId {
      fetch = ":SourceId";
   }
   alterattribute QtyReserved {
      fetch = "Sourced_Co_Supply_Site_Res_API.Get_Qty_Assigned(:OrderNo, :LineNo, :RelNo, :LineItemNo, :SourceId, CONTRACT, PART_NO, CONFIGURATION_ID, LOCATION_NO, LOT_BATCH_NO, SERIAL_NO, ENG_CHG_LEVEL, WAIV_DEV_REJ_NO, ACTIVITY_SEQ, HANDLING_UNIT_ID)";
   }
   alterattribute OldQtyReserved {
      fetch = "Sourced_Co_Supply_Site_Res_API.Get_Qty_Assigned(:OrderNo, :LineNo, :RelNo, :LineItemNo, :SourceId, CONTRACT, PART_NO, CONFIGURATION_ID, LOCATION_NO, LOT_BATCH_NO, SERIAL_NO, ENG_CHG_LEVEL, WAIV_DEV_REJ_NO, ACTIVITY_SEQ, HANDLING_UNIT_ID)";
   }
   alterattribute QtyAvailable {
      fetch = "QTY_ONHAND - QTY_RESERVED + NVL(Sourced_Co_Supply_Site_Res_API.Get_Qty_Assigned(:OrderNo, :LineNo, :RelNo, :LineItemNo, :SourceId, CONTRACT, PART_NO, CONFIGURATION_ID, LOCATION_NO, LOT_BATCH_NO, SERIAL_NO, ENG_CHG_LEVEL, WAIV_DEV_REJ_NO, ACTIVITY_SEQ, HANDLING_UNIT_ID), 0)";
   }

}

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------