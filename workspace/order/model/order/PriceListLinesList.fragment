--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-12-15  MaEelk  SCUXXW4-1141,Created  OverviewPriceListLinesBaseList
--------------------------------------------------------------------------------------

fragment PriceListLinesList;
component ORDER;
layer Core;
description "Use this API to view a list of the price list lines that are recorded on part based price and rental lists.";

----------------------------- CLIENT FRAGMENTS ------------------------------

list PriceListPartLinesList for SalesPriceListPart {
   lov SalesPriceListRef with ReferenceSalesPriceListSelector {
      description = SalesPriceListRef.Description;
   }
   field OwningCompanyRef;
   field SalesPriceListRef.CurrencyCode {
      size = Small;
   }
   field SalesPriceListRef.SalesPriceGroupId;
   field Contract;
   field SalesPriceListRef.ValidToDate;
   field CatalogNo;
   field SalesPartDescription {
      size = Small;
   }
   measure MinQuantity(SalesPartRef.PriceUnitMeas);
   daterangefield {
      startdate ValidFromDate;
      enddate PartValidToDate;
      label = "Line Valid Dates";
   }
   field BasePriceSite;
   field BasePrice;
   field PercentageOffset;
   field AmountOffset;
   field SalesPrice;
   field Rounding;
   field DiscountType;
   field Discount;
   badge Objstate {
      label = "Status";
      emphasis StatePlanned = [Objstate = "Planned"];
      emphasis StateActive = [Objstate = "Active"];
      emphasis StateOpen = [Objstate = "Pending"];
      style = TextOnly;
   }
   field LastUpdated;
   field BasePriceInclTax;
   field SalesPriceInclTax;
   field SalesPartRef.TaxCode {
      label = "Tax Code";
   }
   field NetSalesPrice;
   field GrossSalesPrice;
   field UseInventoryValueDb;
   field CostSet {
      searchable = false;
   }
   field Cost {
      searchable = false;
   }
   field ContrMargin;
   field SalesPartRef.Taxable {
      label = "Taxable";
   }
   field PriceBreakTemplateIdRef;
   field SalesGroupRef;
   fieldranking PriceListNoRef, Description, OwningCompanyRef, CurrencyCode, SalesPriceGroupId, Contract, ValidToDate, CatalogNo, SalesPartDescription, MinQuantity;
}

--------------------------- PROJECTION FRAGMENTS ----------------------------
@Override
entity SalesPriceListPart {
   keys = PriceListNo, CatalogNo, MinQuantity, ValidFromDate, MinDuration, Contract;
   crud = Read;
   from = "sales_price_part_join  main";
   where = "SALES_PRICE_TYPE_DB = 'SALES PRICES'";
   attribute PriceListNo Text;
   attribute OwningCompany Text {
      fetch = "owning_company";
      label = "Owning Company";
      format = uppercase;
   }
   attribute Contract Text {
      fetch = "contract";
      label = "Valid for Site";
      format = uppercase;
   }
   attribute CatalogNo Text {
      label = "Sales Part No";
   }
   attribute SalesPartDescription Text {
      fetch = "Sales_Part_API.Get_Catalog_Desc(contract, catalog_no)";
      label = "Sales Part Description";
   }
   attribute MinQuantity Number {
      label = "Min Qty";
      editable = [false];
   }
   attribute MinDuration Text;
   attribute ValidFromDate Date {
      label = "Line Valid From";
      editable = [false];
   }
   attribute PartValidToDate Date {
      fetch = "part_valid_to_date";
      label = "Line Valid To";
   }
   attribute BasePriceSite Text;
   attribute BasePrice Number {
      format = ifscurrency;
   }
   attribute PercentageOffset Number;
   attribute AmountOffset Number {
      format = ifscurrency;
   }
   attribute SalesPrice Number {
      format = ifscurrency;
   }
   attribute Rounding Number;
   attribute DiscountType Text;
   attribute Discount Number {
      label = "Discount (%)";
   }
   attribute BasePriceInclTax Number {
      label = "Base Price incl Tax";
      format = ifscurrency;
   }
   attribute SalesPriceInclTax Number {
      label = "Sales Price Incl Tax";
      format = ifscurrency;
   }
   attribute NetSalesPrice Number {
      fetch = "Sales_Price_List_Part_API.Calc_Net_And_Gross_Price(NVL(discount,0),sales_price,sales_price_incl_tax,base_price_site,price_list_no,catalog_no, rounding, 'NET')";
      label = "Net Sales Price";
      format = ifscurrency;
   }
   attribute GrossSalesPrice Number {
      fetch = "Sales_Price_List_Part_API.Calc_Net_And_Gross_Price(NVL(discount,0),sales_price,sales_price_incl_tax,base_price_site,price_list_no,catalog_no, rounding, 'GROSS')";
      label = "Gross Amount";
      format = ifscurrency;
   }
   attribute Cost Number {
      fetch = "Customer_Order_Pricing_API.Get_Sales_Price_List_Cost__(Pricing_Contri_Margin_Ctrl_API.Get_Valid_Use_Inv_Value_Db(base_price_site, valid_from_date),Pricing_Contri_Margin_Ctrl_API.Get_Valid_Cost_Set(base_price_site, valid_from_date), base_price_site, valid_from_date, catalog_no, min_quantity, price_list_no)";
      label = "Cost";
      format = ifscurrency;
   }
   attribute ContrMargin Text {
      fetch = "Sales_Price_List_Part_API.Get_Contribution_Margin__(price_list_no, base_price_site, catalog_no, min_quantity, valid_from_date, min_duration)";
      label = "Contr Margin (%)";
   }
   attribute TaxCodeDescription Text {
      fetch = "Statutory_Fee_API.Get_Description(Site_API.Get_Company(base_price_site), Sales_Part_API.Get_Tax_Code(base_price_site, catalog_no))";
      label = "Tax Code Description";
      format = uppercase;
   }
   attribute PriceBreakTemplateId Text;
   attribute TaxPercentage Number {
      fetch = "Statutory_Fee_API.Get_Fee_Rate(Site_API.Get_Company(base_price_site), Sales_Part_API.Get_Tax_Code(base_price_site, catalog_no))";
      label = "Tax Percentage";
   }
   attribute SalesPriceTypeDb Text {
      fetch = "sales_price_type_db";
      label = "Sales Price Type";
   }
   attribute UseInventoryValueDb Boolean("TRUE", "FALSE") {
      fetch = "NVL(Pricing_Contri_Margin_Ctrl_API.Get_Valid_Use_Inv_Value_Db(base_price_site, valid_from_date), 'FALSE')";
      label = "Use Inventory Value";
      required = [true];
   }
   attribute CostSet Number {
      fetch = "Pricing_Contri_Margin_Ctrl_API.Get_Valid_Cost_Set(base_price_site, valid_from_date)";
      label = "Cost Set";
   }
   reference SalesPartRef(BasePriceSite, CatalogNo) to SalesPart(Contract, CatalogNo) {
      prefetch CatalogGroup as CatalogGroup;
   }
   reference SalesPriceListRef(PriceListNo) to SalesPriceList(PriceListNo) {
      label = "Price List";
   }
   reference OwningCompanyRef(OwningCompany) to CompanyFinance(Company) {
      label = "Owning Company";
   }
   reference PriceBreakTemplateIdRef(PriceBreakTemplateId) to PriceBreakTemplate(TemplateId) {
      label = "Price Break Template ID";
   }
   reference SalesGroupRef(CatalogGroup) to SalesGroup(CatalogGroup) {
      label = "Sales Group";
   }
}