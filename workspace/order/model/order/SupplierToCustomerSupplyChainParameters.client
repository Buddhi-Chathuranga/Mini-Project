-------------------------------------------------------------------------------------------------------
--  Date        Sign    History
--  ----------  ------  --------------------------------------------------------------------------------
--  2020-11-12  RavDlk  SC2020R1-11228, Handled booleans and enumerations for some attrbutes
--  2020-04-02  ChBnlk  SCXTEND-4255, Enabled duplicate for CustomerAddressLeadtimeList and CustomerAddressPartLeadtimeList.
--  2019-10-31  Hairlk  SCXTEND-1326, Set the startupmode to search.
--  2018-11-21  henlse  SCUXXW4-9560, Converted from frmSupplierToCustomerParameters using MTG Version 1.33.
--  ----------  ------  --------------------------------------------------------------------------------
client SupplierToCustomerSupplyChainParameters;
component ORDER;
layer Core;
projection SupplierToCustomerSupplyChainParametersHandling;
@DynamicComponentDependency PURCH
include fragment ExternalSupplierLovSelector;
@DynamicComponentDependency PURCH
include fragment SuppAddressMatrixLovSelector;
include fragment ExternalCustomerLovSelector;
include fragment CustAddressMatrixLovSelector;
include fragment FreightZoneSuppLovSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry SuppliertoCustomerSupplyChainParametersNavEntry parent OrderNavigator.TransportationAdministrationSupplyChainRelations at index 300 {
      label = "Supplier to Customer Supply Chain Parameters";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page List using SupplierToCustomerLeadtimeSet {
   label = "Supplier to Customer Supply Chain Parameters";
   startupmode = search;
   list SupplierToCustomerLeadtimeList;
   list SupplierToCustomerPartLeadtimeList(SupplierToCustomerPartLeadtimeArray) bind SupplierToCustomerLeadtimeList {
      display = Nested;
   }
}

--------------------------------- COMMANDS ----------------------------------
command SetasDefaultShipViaCommand for SupplierToCustomerLeadtime {
   mode = SingleRecord;
   label = "Set as Default Ship Via";
   enabled = [VendorNo != null and SupplierAddress != null and CustomerNo != null and AddrNo != null and ShipViaCode != null and DefaultShipVia = "No"];
   execute {
      set DefaultShipVia = "Yes";
      refresh;
   }
}
command SetasDefaultShipViaCommand for SupplierToCustomerPartLeadtime {
   mode = SingleRecord;
   label = "Set as Default Ship Via";
   enabled = [SupplyChainPartGroup != null and DefaultShipVia = "No"];
   execute {
      set DefaultShipVia = "Yes";
      refresh;
   }
}

----------------------------------- LISTS -----------------------------------
list SupplierToCustomerLeadtimeList for SupplierToCustomerLeadtime {
   label = "";
   @DynamicComponentDependency PURCH
   lov VendorNoRef with ReferenceExternalSupplierLovSelector {
      size = Large;
      description = VendorNoRef.Name;
      contactwidget {
         enabled = [VendorNo != null];
         source = Supplier;
      }
      validate command {
         execute {
            set FreightMapId = null;
            set ManuallyAssignedZone = false;
         }
      }
   }
   @DynamicComponentDependency PURCH
   lov SupplierAddressRef with ReferenceSuppAddressMatrixLovSelector {
      size = Large;
      description = SupplierAddressRef.CompanyName2;
   }
   field DefaultAddress2 {
      size = Small;
      required = [true];
   }
   lov CustomerNoRef with ReferenceExternalCustomerLovSelector {
      size = Large;
      description = CustomerNoRef.Name;
      contactwidget {
         enabled = [CustomerNo != null];
         source = Customer;
      }
   }
   lov AddrNoRef with ReferenceCustAddressMatrixLovSelector {
      size = Large;
      description = AddrNoRef.CompanyName2;
   }
   field DefaultAddress3 {
      size = Small;
      required = [true];
   }
   lov ShipViaCodeRef with ReferenceMpccomShipViaSelector {
      description = ShipViaCodeRef.Description;
      validate command {
         execute {
            set FreightMapId = null;
            set ManuallyAssignedZone = false;
         }
      }
   }
   field DefaultShipVia {
      size = Small;
      editable = [false];
      required = [true];
      enumerationtrue = "Yes";
      enumerationfalse = "No";
      truelabel = "Yes";
      falselabel = "No";
   }
   field ExceptionDb {
      size = Small;
      required = [true];
   }
   lov DeliveryTermsRef with ReferenceOrderDeliveryTermSelector {
      size = Large;
      description = DeliveryTermsRef.Description;
   }
   field DelTermsLocation;
   field DeliveryLeadtime;
   field Distance;
   field ExpectedAdditionalCost;
   field CurrencyCodeRef {
      size = Small;
   }
   lov ZoneIdRef with ReferenceFreightZoneSuppLovSelector {
      size = Large;
      description = ZoneIdRef.Description;
      validate command {
         execute {
            call SetFreightMapId(ShipViaCode, VendorNo, ZoneId) into FreightMapId;
            set ManuallyAssignedZone = true;
            if [ZoneId = null and FreightMapId = null] {
               set ManuallyAssignedZone = false;
            }
         }
      }
   }
   lov FreightMapIdRef with ReferenceFreightMapSelector {
      size = Large;
      description = FreightMapIdRef.Description;
      editable = [false];
   }
   field ManuallyAssignedZone {
      size = Small;
      required = [true];
      editable = [false];
   }
   fieldranking VendorNoRef, SupplierAddressRef, CustomerNoRef, AddrNoRef, ShipViaCodeRef, ExceptionDb, DeliveryLeadtime;

   commandgroup CommandGroupCmdGroup {

      command SetasDefaultShipViaCommand;
   }
}
list SupplierToCustomerPartLeadtimeList for SupplierToCustomerPartLeadtime {
   label = "Exceptions for Supplier Address: ${parent.VendorNo} - ${parent.SupplierAddress}, Customer Address: ${parent.CustomerNo} - ${parent.AddrNo}";
   lov SupplyChainPartGroupRef with ReferenceSupplyChainPartGroupSelector {
      size = Large;
      description = SupplyChainPartGroupRef.Description;
   }
   lov ShipViaCodeRef with ReferenceMpccomShipViaSelector {
      description = ShipViaCodeRef.Description;
      validate command {
         execute {
            set FreightMapId = null;
            set ManuallyAssignedZone = false;
         }
      }
   }
   field DefaultShipVia {
      size = Small;
      enumerationtrue = "Yes";
      enumerationfalse = "No";
      truelabel = "Yes";
      falselabel = "No";
      editable = [false];
      required = [true];
   }
   lov DeliveryTermsRef with ReferenceOrderDeliveryTermSelector {
      size = Large;
      description = DeliveryTermsRef.Description;
   }
   field DelTermsLocation;
   field DeliveryLeadtime;
   field Distance;
   field ExpectedAdditionalCost;
   field CurrencyCodeRef {
      size = Small;
   }
   lov ZoneIdRef with ReferenceFreightZoneSuppLovSelector {
      size = Large;
      description = ZoneIdRef.Description;
      validate command {
         execute {
            call SetFreightMapId(ShipViaCode, VendorNo, ZoneId) into FreightMapId;
            set ManuallyAssignedZone = true;
            if [ZoneId = null and FreightMapId = null] {
               set ManuallyAssignedZone = false;
            }
         }
      }
   }
   lov FreightMapIdRef with ReferenceFreightMapSelector {
      size = Large;
      description = FreightMapIdRef.Description;
      editable = [false];
   }
   field ManuallyAssignedZone {
      size = Small;
      required = [true];
      editable = [false];
   }
   fieldranking SupplyChainPartGroupRef, ShipViaCodeRef, DefaultShipVia, DeliveryLeadtime, DeliveryTermsRef, DelTermsLocation, Distance;

   commandgroup CommandGroupCmdGroup {

      command SetasDefaultShipViaCommand;
   }
}

