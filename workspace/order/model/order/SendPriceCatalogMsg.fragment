-------------------------------------------------------------------------------------------------------
--  Date        Sign    History
--  ----------  ------  --------------------------------------------------------------------------------
--  2021-07-30  DhAplk  SC21R2-2110, Added maxlengths for some attributes.
--  2021-05-25  DhAplk  SC21R2-136 SC21R2-137, Modified attribute descriptions related to CustomerAgreementStruct & SalesPriceListStruct
--  2020-11-18  DhAplk  SC2020R1-11412, Created to maintain modelling structures related to Send Price catalog messages.
-----------------------------------------------------------------------------

fragment SendPriceCatalogMsg;
component ORDER;
layer Core;
description "This fragment contains the structures to support the Send PRICAT messages";

--------------------------------- FRAGMENTS ---------------------------------


----------------------------- CLIENT FRAGMENTS ------------------------------


--------------------------- PROJECTION FRAGMENTS ----------------------------
@apidoc {
   @description : Data structure for Send Agreement
}
structure CustomerAgreementStruct using CustomerAgreement {
   nestedwithcrud {
      crud = ReadAndWrapWithJson;
      usetables = true;
      additionalparameters {
         parameter ValidFrom Date;
      }

      wrapperexcludes {
         exclude AgreementSent for CustomerAgreement;
         exclude AgreementId, BasePriceSite for AgreementSalesPartDeal;
         exclude Contract, CatalogNo, PartNo for SalesPart;
         exclude Contract, PartNo for InventoryPart;
      }
   }
   implementation = "Utility";
}

@apidoc {
   @description : Data structure for Send Price List
}
structure SalesPriceListStruct using SalesPriceList {
   nestedwithcrud {
      crud = ReadAndWrapWithJson;
      usetables = true;
      wrapperexcludes {
         exclude PriceListNo, MinDuration, BasePriceSite  for SalesPriceListPart;
         exclude Contract, CatalogNo, PartNo for SalesPart;
         exclude Contract, PartNo for InventoryPart;
      }
   }
   implementation = "Utility";
}

@Override
@apidoc {
   @description : Overridden CustomerAgreement entity
   @attribute AgreementId : This field displays the customer agreement identity  i.e. what the supplier calls the agreement.
   @attribute Company : The identity of the company to which the supplier is linked.
   @attribute CustomerNo : The short name or identification number of the customer who will receive the price catalog message.
   @attribute DeliveryTerms : The agreed terms of delivery.
   @attribute UsePriceInclTax : Defines the basis of the tax calculation. If the basis for tax calculation is the price or price including tax.
   @attribute AgreementDate : This column displays the date when the agreement was published by the supplier.
   @attribute ValidFrom : <<This column displays the date from which the price catalog is valid. If the message is going to update a supplier agreement,
   you may not approve the message before the date displayed here because the prices will be valid immediately when the message has been approved.>>
   @attribute ValidUntil : This field displays the end date for the price catalog. This is only used if the prices are not valid until further notice.
   @attribute Currency : The short code for the currency used.
   @attribute ShipVia : The agreed transportation method, e.g. by air, vessel, or road.
   @attribute SupplierAgreementId : This column displays a reference to an earlier agreement, if a replacement line is sent through the message.
   @attribute CustomerAgreementId : The identity the customer uses for the current customer agreement, which is used if you send price catalog (PRICAT) messages.
   @attribute AgreementStatus : Displays the status of the price sent via the agreement i.e. whether it is an original, replacement or changes within an existing agreement.
   @attribute EanLocation : <<This is the company's own ID for an address (sometimes referred to as EAN). This field provides a possibility to recognize addresses between sites
   and companies in an ITS communication as well as in the inter-site order communication.
   When entering the site's address, be sure this ID is identical to the ID entered for the internal customer's address on the Customer/Address tab.>>
   @attribute SupplierId : The short name or identification number of the supplier who has sent the message.
   @attribute CustomerEanLocation : This refers to the customer's own ID for an address (sometimes referred to as EAN).
   @attribute CompanyAssociationNo : This displays the company's association number.
   @attribute CustomerAssociationNo : This displays the association number linked to the customer identity.
   @attribute SequenceNo : The sequence number used to monitor sent and received messages created for each message class.
   @attribute VersionNo : The ID used by the application to distinguish among the different versions of messages belonging to a particular message class.
   @attribute DeliveryTermsDescription : The description of the delivery terms.
   @attribute ShipViaDescription : <<The ship-via-code description in the corporate language. For translated descriptions, use the translation functionality.
   If there is no translated description in the session's language, the corporate description will be shown.>>
   @navigation PartDeals : Include part information of the specific customer agreement in IFS Cloud.
}
entity CustomerAgreement {
   use attributes = Company, CustomerNo, DeliveryTerms, UsePriceInclTax,
   AgreementDate, ValidFrom, ValidUntil, AgreementSent;

   attribute CurrencyCode Text {
      maxlength = 3;
      alias = "Currency";
   }
   attribute ShipViaCode Text {
      maxlength = 3;
      alias = "ShipVia";
   }
   attribute SupAgreementId  Text {
      maxlength = 10;
      alias = "SupplierAgreementId";
   }
   attribute CustAgreementId  Text {
      maxlength = 25;
      alias = "CustomerAgreementId";
   }
   attribute AgreementStatus Text {
      maxlength = 20;
      fetch = "''";
   }
   attribute EanLocation Text {
      maxlength = 100;
      fetch = "''";
   }
   attribute SupplierId Text {
      maxlength = 20;
      fetch = "''";
   }
   attribute CustomerEanLocation Text {
      maxlength = 100;
      fetch = "''";
   }
   attribute CompanyAssociationNo Text {
      maxlength = 50;
      fetch = "''";
   }
   attribute CustomerAssociationNo Text {
      maxlength = 50;
      fetch = "''";
   }
   attribute SequenceNo Number {
      fetch = "''";
   }
   attribute VersionNo Number {
      fetch = "''";
   }
   attribute DeliveryTermsDescription Text {
      maxlength = 35;
      fetch = "''";
   }
   attribute ShipViaDescription Text {
      maxlength = 35;
      fetch = "''";
   }

   array PartDeals(AgreementId) to AgreementSalesPartDeal(AgreementId);
}

@Override
@apidoc {
   @description : Overridden AgreementSalesPartDeal entity
   @attribute MinQuantity : The minimum price quantity that must be ordered by the customer in order to receive the price.
   @attribute ValidFromDate : The date from which the customer agreement line is valid.
   @attribute ValidToDate : The date through which the customer agreement is valid.
   @attribute DealPrice : The sales price of the ordered part in the order currency, i.e., the currency in which the customer is being charged.
   @attribute DealPriceInclTax : The price including tax, expressed in the order currency.
   @attribute Discount : Any applicable discount, expressed as a percentage.
   @attribute SalesPartNo : The sales part number or ID.
   @attribute MessageLineStatus : Indicates whether the line is added, removed, or changed from the price catalog. This column is used only for informational purposes; you cannot change anything.
   @attribute CustomerPartNo : The customer's part number corresponding to the sales part number in IFS Cloud.
   @attribute GtinNo : <<The default Global Trade Item Number (GTIN) of the sales part, non-inventory sales part or package part. The default GTIN can either be on stock keeping unit level or on package level
   i.e., a default GTIN-14 for Input UoM and quantity used on this record. Several GTINs can be used for identifying the same part, when possible to enter GTIN any of these can be used to find the part, but the default GTIN is shown as soon as the part is identified.>>
   @attribute ClassificationPartNo : A unique identifier to define a part according to the classification standard. The classification part number helps to identify a part based on the industry it belongs to.
   @attribute ClassificationUnitMeas : The classification unit of measure used only with the classification part number. This should be an ISO unit of measure. However this value does not necessarily have a connection with the other units of measures used for this sales part.
   @navigation SalesPart : This represents detailed sales part information connected to the specific customer agreement in IFS Cloud.
}
entity AgreementSalesPartDeal {
   keys = AgreementId, MinQuantity, ValidFromDate, CatalogNo;
   use attributes = BasePriceSite, ValidToDate, DealPrice, DealPriceInclTax, Discount;
   where = "((valid_from_ IS NULL) OR
            (agreement_sales_part_deal_tab.valid_from_date = ((SELECT MAX(valid_from_date)
                                      FROM   agreement_sales_part_deal_tab a
                                      WHERE  agreement_sales_part_deal_tab.agreement_id = a.agreement_id
                                      AND    agreement_sales_part_deal_tab.catalog_no = a.catalog_no
                                      AND    agreement_sales_part_deal_tab.min_quantity = a.min_quantity
                                      AND    a.valid_to_date IS NOT NULL
                                      AND    TRUNC(a.valid_from_date) <= TRUNC(valid_from_)
                                      AND    TRUNC(a.valid_to_date) >= TRUNC(valid_from_)
                                      GROUP BY a.catalog_no, a.min_quantity)
                                      UNION ALL
                                     (SELECT MAX(valid_from_date)
                                      FROM   agreement_sales_part_deal_tab b
                                      WHERE  agreement_sales_part_deal_tab.agreement_id = b.agreement_id
                                      AND    agreement_sales_part_deal_tab.catalog_no = b.catalog_no
                                      AND    agreement_sales_part_deal_tab.min_quantity = b.min_quantity
                                      AND    b.valid_to_date IS NULL
                                      AND    TRUNC(b.valid_from_date) <= TRUNC(valid_from_)
                                      AND    (b.min_quantity, b.catalog_no) NOT IN (SELECT c.min_quantity, c.catalog_no
                                                                                    FROM   agreement_sales_part_deal_tab c
                                                                                    WHERE  agreement_sales_part_deal_tab.agreement_id = c.agreement_id
                                                                                    AND    agreement_sales_part_deal_tab.catalog_no = c.catalog_no
                                                                                    AND    agreement_sales_part_deal_tab.min_quantity = c.min_quantity
                                                                                    AND    c.valid_to_date IS NOT NULL
                                                                                    AND    TRUNC(c.valid_from_date) <= TRUNC(valid_from_)
                                                                                    AND    TRUNC(c.valid_to_date) >= TRUNC(valid_from_))
                                      GROUP BY b.catalog_no, b.min_quantity))))";


   attribute CatalogNo Text {
      alias = "SalesPartNo";
   }
   attribute MessageLineStatus Text {
      maxlength = 20;
      fetch = "''";
   }
   attribute CustomerPartNo Text {
      maxlength = 45;
      fetch = "''";
   }
   attribute GtinNo Text {
      maxlength = 14;
      fetch = "''";
   }
   attribute ClassificationPartNo Text {
      maxlength = 25;
      fetch = "''";
   }
   attribute ClassificationUnitMeas Text {
      maxlength = 30;
      fetch = "''";
   }

   reference SalesPart(BasePriceSite, CatalogNo) to SalesPart(Contract, CatalogNo);
}


@Override
@apidoc {
   @description : Overridden SalesPriceList entity
   @attribute PriceListNo : The supplier's price list number from which the price originates.
   @attribute UsePriceInclTax : Defines the basis of the tax calculation. If the basis for tax calculation is the price or price including tax.
   @attribute SupPriceListNo : This column displays a reference to an earlier price list, if a replacement line is sent through the message.
   @attribute Currency : The short code for the currency used.
   @attribute PriceListStatus : Displays the status of the price sent via the price list i.e. whether it is an original, replacement or changes within an existing price list.
   @attribute EanLocation : <<This is the company's own ID for an address (sometimes referred to as EAN).
   This field provides a possibility to recognize addresses between sites and companies in an ITS communication as well as in the inter-site order communication.
   When entering the site's address, be sure this ID is identical to the ID entered for the internal customer's address on the Customer/Address tab.>>
   @attribute SupplierId : The short name or identification number of the supplier who has sent the message.
   @attribute Company : The identity of the company to which the supplier is linked.
   @attribute CustomerEanLocation : This refers to the customer's own ID for an address (sometimes referred to as EAN).
   @attribute CustomerNo : The short name or identification number of the customer who will receive the price catalog message.
   @attribute CompanyAssociationNo : This displays the company's association number.
   @attribute CustomerAssociationNo : This displays the association number linked to the customer identity.
   @attribute PublishDate : This column displays the date when the price  list was published by the supplier.
   @attribute ValidFrom : This column displays the date from which the price catalog is valid.
   @attribute ValidTo : This field displays the end date for the price catalog. This is only used if the prices are not valid until further notice.
   @navigation SalesPriceListParts : Include part information of the specific sales price list in IFS Cloud.
}
entity SalesPriceList {
   keys = PriceListNo;
   use attributes = UsePriceInclTax, SupPriceListNo;

   attribute CurrencyCode  Text {
      maxlength = 3;
      alias = "Currency";
   }
   attribute PriceListStatus Text {
      maxlength = 20;
      fetch = "''";
   }
   attribute EanLocation Text {
      maxlength = 100;
      fetch = "''";
   }
   attribute SupplierId Text {
      maxlength = 35;
      fetch = "''";
   }
   attribute Company Text {
      maxlength = 20;
      fetch = "''";
   }
   attribute CustomerEanLocation Text {
      maxlength = 100;
      fetch = "''";
   }
   attribute CustomerNo Text {
      maxlength = 20;
      fetch = "''";
   }
   attribute CompanyAssociationNo Text {
      maxlength = 200;
      fetch = "''";
   }
   attribute CustomerAssociationNo Text {
      maxlength = 200;
      fetch = "''";
   }
   attribute PublishDate Date {
      fetch = "''";
   }
   attribute ValidFrom Date {
      fetch = "''";
   }
   attribute ValidTo Date {
      fetch = "''";
   }

   array SalesPriceListParts(PriceListNo) to SalesPriceListPart(PriceListNo);
}

@Override
@apidoc {
   @description : Overridden SalesPriceListPart entity
   @attribute SalesPrice : The sales price of the ordered part in the order currency, i.e., the currency in which the customer is being charged.
   @attribute SalesPriceInclTax : The price including tax, expressed in the price list currency.
   @attribute Discount : Any applicable discount, expressed as a percentage.
   @attribute LastUpdated : The date on which the record was last changed. This value is set automatically when the record is changed.
   @attribute SalesPartNo : The sales part number or ID.
   @attribute MinQty : The minimum price quantity that must be ordered by the customer in order to receive the price.
   @attribute ValidFrom : The date from which the price list line is valid.
   @attribute ValidTo : The date through which the price list is valid.
   @attribute PriceCatalogActionType : Indicates whether the line is added, removed, or changed from the price catalog. This column is used only for informational purposes; you cannot change anything.
   @attribute CustomerPartNo : The customer's part number corresponding to the sales part number in IFS Cloud.
   @attribute CurrencyCode : The code for the currency used for the price list.
   @attribute GtinNo : <<The default Global Trade Item Number (GTIN) of the sales part, non-inventory sales part or package part.
   The default GTIN can either be on stock keeping unit level or on package level i.e., a default GTIN-14 for Input UoM and quantity used on this record.
   Several GTINs can be used for identifying the same part, when possible to enter GTIN any of these can be used to find the part, but the default GTIN is shown as soon as the part is identified.>>
   @navigation SalesPart : This represents detailed sales part information connected to the specific sales price list in IFS Cloud.
}
entity SalesPriceListPart {
   keys = PriceListNo, MinDuration;
   use attributes = SalesPrice, SalesPriceInclTax, Discount, LastUpdated, BasePriceSite;

   attribute CatalogNo  Text {
      maxlength = 25;
      alias = "SalesPartNo";
   }
   attribute MinQuantity  Number {
      alias = "MinQty";
   }
   attribute ValidFromDate  Date {
      alias = "ValidFrom";
   }
   attribute ValidToDate  Date {
      alias = "ValidTo";
   }
   attribute PriceCatalogActionType Text {
      maxlength = 12;
      fetch = "''";
   }
   attribute CustomerPartNo Text {
      maxlength = 45;
      fetch = "''";
   }
   attribute CurrencyCode Text {
      maxlength = 3;
      fetch = "''";
   }
   attribute GtinNo Text {
      maxlength = 14;
      fetch = "''";
   }

   reference SalesPart(BasePriceSite, CatalogNo) to SalesPart(Contract, CatalogNo);
}

@Override
@apidoc {
   @description : Overridden SalesPart entity
   @attribute Uom : The code value for the price unit of measure, e.g., piece, meter, or kilo
   @attribute SalesPriceGroup : Sales price groups are used to group parts with the same characteristics regarding pricing. The sales price groups are entered as basic data for customer orders. Sales parts are connected to a sales price group in the Sales Part page. This is the sales price group ID of the selected sales price list.
   @attribute SalesGroup : The short code of the sales group connected to the sales part. A sales group is a logical grouping of the sales parts. All sales parts are connected to a sales group. The sales groups are used for statistical purposes, such as queries and reports. The sales part is connected to a sales group when entering basic data for the sales part.
   @attribute SalesGroupDescription : The description of the sales group.
   @attribute SalesPriceGroupDescription : The description corresponding to the sales price group.
   @navigation InventoryPart : This represents detailed inventory part information connected to the sales part.
}
entity SalesPart {
   use attributes = PartNo;

   attribute PriceUnitMeas Text {
      maxlength = 10;
      alias = "Uom";
   }
   attribute SalesPriceGroupId Text {
      maxlength = 10;
      alias = "SalesPriceGroup";
   }
   attribute CatalogGroup Text {
      maxlength = 10;
      alias = "SalesGroup";
   }
   attribute SalesGroupDescription Text {
      maxlength = 35;
      fetch = "''";
   }
   attribute SalesPriceGroupDescription Text {
      maxlength = 35;
      fetch = "''";
   }

   reference InventoryPart(Contract, PartNo) to InventoryPart(Contract, PartNo);
}

@Override
@apidoc {
   @description : Overridden InventoryPart entity
   @attribute PartProductCode : The product code value of the part. Product codes are used to group parts in product structures. This information is retrieved from the inventory part register.
   @attribute PartProductFamily : Specifies to which product family the part belongs. Product family codes are used to group parts in product structures.
   @attribute CommodityGroup1 : Commodity Group 1 is used for grouping inventory parts. The commodity group and its description are entered as basic data in Inventory.
   @attribute CommodityGroup2 : Commodity Group 2 is used to control the part's inventory interest, the minimum number of statistical periods, service rate, and ordering cost used for planning data calculation. The commodity group and its description are entered as basic data in Inventory.
   @attribute CommodityGroup1Description : The description of commodity group 1 as defined on the inventory part. The commodity group and its description are entered as basic data in Inventory.
   @attribute CommodityGroup2Description : <<The description of commodity group 2 defined on the inventory part. Commodity Group 2 is used to control the part's inventory interest, the minimum number of statistical periods, service rate,
   and ordering cost used for planning data calculation. The commodity group and its description are entered as basic data in Inventory.>>
   @attribute ProductCodeDescription : The description corresponding to the product code.
   @attribute ProductFamilyDescription : The description corresponding to the product family.
}
entity InventoryPart {
   use attributes = PartProductCode, PartProductFamily;

   attribute PrimeCommodity Text {
      maxlength = 5;
      alias = "CommodityGroup1";
   }
   attribute SecondCommodity Text {
      maxlength = 5;
      alias = "CommodityGroup2";
   }
   attribute PrimeCommodityGroupDescription Text {
      alias = "CommodityGroup1Description";
      maxlength = 35;
      fetch = "''";
   }
   attribute SecondCommodityGroupDescription Text {
      alias = "CommodityGroup2Description";
      maxlength = 35;
      fetch = "''";
   }
   attribute ProductCodeDescription Text {
      maxlength = 35;
      fetch = "''";
   }
   attribute ProductFamilyDescription Text {
      maxlength = 35;
      fetch = "''";
   }
}
