--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-10-25  Satglk  SCXTEND-963, Salesman renamed to Salesperson
-- 2018-07-20  MalLlk  SCUXXW4-1356, Converted from tbwReleaseCustOrder using MTG Version: 1.22
--------------------------------------------------------------------------------------

projection HandleBlockedCustomerOrders;
component ORDER;
layer Core;
description "Use this API to view, release and/or proceed with reservation of the customer orders that are manually blocked, failed the executed credit checks
             or having unpaid advance invoices or prepayments. Customer orders can be manually blocked and can hold the orders from further processing.";
category Users;

include fragment SalesPartSalesmanLovSelector;
include fragment CustOrdCust1Selector;
include fragment OrderCoordinatorLovSelector;
include fragment CustomerOrderInitialCheck;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset CustomerOrderSet for CustomerOrder;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity CustomerOrder {
   crud = Read;
   where = "objstate = 'Blocked'";

   attribute OrderNo Text {
      editable = [false];
   }
   attribute Contract Text {
      editable = [false];
   }
   attribute OrderId Text {
      editable = [false];
   }
   attribute CustomerNo Text {
      editable = [false];
   }
   attribute AuthorizeCode Text {
      label = "Coordinator";
      editable = [false];
   }
   attribute SalesmanCode Text {
      label = "Salesperson";
      editable = [false];
   }
   @DynamicComponentDependency PAYLED
   attribute CreditLimit Number {
      fetch = "Cust_Credit_Info_Util_API.Fetch_Credit_Limit(Site_API.Get_Company(contract), customer_no)";
      label = "Credit Limit";
      editable = [false];
      format = ifscurrency;
   }
   attribute TotalGrossinclChrgBase Number {
      fetch = "Customer_Order_API.Get_Gross_Amount(order_no) + Customer_Order_API.Get_Charge_Gross_Amount(order_no)";
      label = "Total Gross incl Chrg/Base";
      editable = [false];
      format = ifscurrency;
   }
   attribute BaseCurr Text {
      fetch = "Company_Finance_API.Get_Currency_Code(Site_API.Get_Company(contract))";
      label = "Base Curr";
      editable = [false];
   }
   attribute Priority Number {
      editable = [false];
   }
   attribute DescriptionofBlockingProblem Text {
      fetch = "Customer_Order_API.Get_Blocked_Reason_Desc(order_no)";
      label = "Description of Blocking Problem";
      maxlength = 200;
      editable = [false];
   }
   attribute TotalGrossinclChrgCurr Number {
      fetch = "Customer_Order_API.Get_Gross_Amt_Incl_Charges(order_no)";
      label = "Total Gross incl Chrg/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute ProposedPrepaymentAmount Number {
      label = "Required Prepay Amt";
      editable = [false];
      format = ifscurrency;
   }
   attribute AdvanceInvExists Boolean("TRUE", "FALSE") {
      fetch = "Customer_Invoice_Pub_Util_API.Has_Adv_Inv(order_no)";
      label = "Advance Inv. Exists";
      editable = [false];
   }
   attribute BlockedTypeDb Text {
      fetch = "blocked_type_db";
      label = "Block Type";
      editable = [false];
   }
   attribute PrepaymentInvMethodDb Text {
      fetch = "Company_Order_Info_API.Get_Prepayment_Inv_Method_Db(Site_API.Get_Company(Contract))";
   }
   reference OrderNoRef(OrderNo) to CustomerOrder(OrderNo) {
      label = "Order No";
   }
   reference ContractRef(Contract) to Site(Contract) {
      label = "Site";
   }
   reference OrderIdRef(OrderId) to CustOrderType(OrderId) {
      label = "Order Type";
   }
   reference CustomerNoRef(CustomerNo) to CustOrdCust1(CustomerNo) {
      label = "Customer";
   }
   reference AuthorizeCodeRef(AuthorizeCode) to OrderCoordinatorLov(AuthorizeCode) {
      label = "Coordinator";
   }
   reference SalesmanCodeRef(SalesmanCode) to SalesPartSalesmanLov(SalesmanCode) {
      label = "Salesperson";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------
action ReleaseCustomerOrder {
   initialcheck implementation;
   parameter Selection Text;
   ludependencies = CustomerOrder;
}

action ReleaseCreditCheck {
   initialcheck implementation;
   parameter Selection Text;
   ludependencies = CustomerOrder;
}


--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------


