----------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------
-- 2021-05-20  MiKulk  SCZ-14777, Added list SalesPartBasePriceDescLovList and enabled Multilov for CatalogNoRef.
-- 2019-08-27  Chlelk  SCUXXW4-24088, format was set to uppercase for fields in the Filerted by group
-- 2019-01-07  MaEelk  SCUXXW4-1446, Added SalePriceTypeDb to supprt the RMB fro Sales Part Base Prices and Sales Part Rental Prices.
-- 2018-10-24  MalLlk  SCUXXW4-11242, Converted dlgAddNewSalesPartsToSPLists using MTG Version: 1.32
----------------------------------------------------------------------------------------------------

client AddNewSalesPartsToSalesPriceLists;
component ORDER;
layer Core;

include fragment SalesPriceListPartLovSelector;
include fragment SalesPartBasePriceDescLovSelector;
include fragment UserAllowedSiteLovSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry AddNewSalesPartsToSPListsNavEntry parent OrderNavigator.PricingPriceList at index 900 {
      label = "Add New Sales Parts to Sales Price Lists";
      assistant AddNewSalesPartsToSPListsAssistant;
   }
}

-------------------------------- MAIN PAGES ---------------------------------

-------------------------------- ASSISTANTS ---------------------------------
assistant AddNewSalesPartsToSPListsAssistant using AddNewSalesPartsToSPListsSet {
   label = "Add New Sales Parts to Sales Price Lists";
   setup SetupDefaultValues {
      variable SalesPriceTypeDbVar {
         type = Text;
      }
      execute {
         set SalesPriceTypeDb = SalesPriceTypeDbVar;
      }
   }
   init command {
      execute {
         if [SalesPriceTypeDb = null or SalesPriceTypeDb = "SALES PRICES"] {
            set AddToSalesPrices = true;
         }
         else {
            if [SalesPriceTypeDb = "RENTAL PRICES"] {
               set AddToRentalPrices = true;
            }
         }
      }
   }
   steps {
      step {
         group ExecuteGroup;
         group FilteredByGroup;
         group PriceTypeGroup;
      }
      final step {
      }
      cancelled step {
      }
   }
   finish command {
      variable NumberOfNewLinesVar {
         type = Number;
      }
      enabled = [SalesPartNo != null and Site != null];
      execute {
         confirm("Do you want to add new Sales Part(s) to subscribed Sales Price List(s)?") {
            when OK {
               call AddSalesPartsToPriceLists(RunBackground, ValidFrom, ValidTo, PriceListNo, Company, SalesPartNo, Site, SalesPriceGroupId, AddToSalesPrices, AddToRentalPrices) into NumberOfNewLinesVar;
               if [RunBackground = false] {
                  if [NumberOfNewLinesVar > 0] {
                     alert("${NumberOfNewLinesVar} new line(s) added to the price list(s).");
                  }
                  else {
                     alert("No records have been added to the sales price lists.");
                  }
               }
               navigate back;
            }
         }
      }
   }
   cancel command {
      execute {
         navigate back;
      }
   }
   restart command {
      visible = [false];
   }
}

--------------------------------- COMMANDS ----------------------------------

--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------
group ExecuteGroup for AddNewSalesPartsToSPListsVirtual {
   label = "Execute";

   field RunBackground {
      required = [true];
      defaulttoprevious = [true];
   }
   field ValidFrom;
   field ValidTo;
}

group FilteredByGroup for AddNewSalesPartsToSPListsVirtual {
   label = "Filtered by";

   lov PriceListNoRef with ReferenceSalesPriceListPartLovSelector {
      format = uppercase;
   }
   lov OwningCompanyRef with ReferenceCompanyFinanceSelector {
      format = uppercase;
   }
   multilov SalesPartNoRef with SalesPartBasePriceDescLovList using SalesPartBasePriceDescLovListSet;
   lov BasePriceSiteRef with ReferenceUserAllowedSiteLovSelector {
      format = uppercase;
   }
   lov SalesPriceGroupRef with ReferenceSalesPriceGroupSelector {
      format = uppercase;
   }
}

group PriceTypeGroup for AddNewSalesPartsToSPListsVirtual {
   label = "Price Type";
   field AddToSalesPrices {
      required = [true];
   }
   field AddToRentalPrices {
      required = [true];
   }
}

----------------------------------- LISTS -----------------------------------
list SalesPartBasePriceDescLovList for SalesPartBasePriceDescLov {
   label = "";
   static CatalogNo;
   static CatalogDesc;
   static BasePriceSite;
   static BasePrice;
   static BasePriceInclTax;
   static SalesPriceOrigin;

   fieldranking CatalogNo, CatalogDesc, BasePriceSite, BasePrice, BasePriceInclTax, SalesPriceTypeDb;
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

