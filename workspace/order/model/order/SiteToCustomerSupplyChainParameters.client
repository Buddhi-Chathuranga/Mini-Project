-------------------------------------------------------------------------------------------------------
--  Date        Sign    History
--  ----------  ------  --------------------------------------------------------------------------------
-- 2020-11-12   RavDlk  SC2020R1-11228, Handled the enumerations for some attrbutes
--  2020-04-02  ChBnlk  SCXTEND-4255, Enabled duplicate for CustomerAddressLeadtimeList and CustomerAddressPartLeadtimeList.
--  2020-01-27  Aabalk  SCSPRING20-1687, Excluded remote warehouse shipment locations from ShipInventoryLocationNoRef.
--  2019-10-31  Hairlk  SCXTEND-1326, Set the startupmode to search.
--  2018-11-22  henlse  SCUXXW4-9510, Converted from frmSiteToCustomerParameters using MTG Version 1.33.
--  ----------  ------  --------------------------------------------------------------------------------
client SiteToCustomerSupplyChainParameters;
component ORDER;
layer Core;
projection SiteToCustomerSupplyChainParametersHandling;
include fragment SiteUivSelector;
include fragment ExternalCustomerLovSelector;
include fragment CustAddressMatrixLovSelector;
include fragment NonRemoteWhseShipLocationSelector;
include fragment FreightZoneJoinSelector;
include fragment ShipmentTypeSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry SitetoCustomerSupplyChainParametersNavEntry parent OrderNavigator.TransportationAdministrationSupplyChainRelations at index 200 {
      label = "Site to Customer Supply Chain Parameters";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page List using CustomerAddressLeadtimeSet {
   label = "Site to Customer Supply Chain Parameters";
   startupmode = search;
   list CustomerAddressLeadtimeList;
   list CustomerAddressPartLeadtimeList(CustomerAddressPartLeadtimeArray) bind CustomerAddressLeadtimeList {
      display = Nested;
   }
}

--------------------------------- COMMANDS ----------------------------------
command SetasDefaultShipViaCommand for CustomerAddressLeadtime {
   mode = SingleRecord;
   label = "Set as Default Ship Via";
   enabled = [Contract != null and CustomerNo != null and AddrNo != null and ShipViaCode != null and DefaultShipVia = "No"];
   execute {
      set DefaultShipVia = "Yes";
      refresh;
   }
}
command SetasDefaultShipViaCommand for CustomerAddressPartLeadtime {
   mode = SingleRecord;
   label = "Set as Default Ship Via";
   enabled = [SupplyChainPartGroup != null and ShipViaCode != null and DefaultShipVia = "No"];
   execute {
      set DefaultShipVia = "Yes";
      refresh;
   }
}

----------------------------------- LISTS -----------------------------------
list CustomerAddressLeadtimeList for CustomerAddressLeadtime {
   label = "";
   lov ContractRef with ReferenceSiteUivSelector {
      description = ContractRef.Description;
      validate command {
         execute {
            set FreightMapId = null;
            set ManuallyAssignedZoneDb = false;
         }
      }
   }
   lov CustomerNoRef with ReferenceExternalCustomerLovSelector {
      size = Large;
      description = CustomerNoRef.Name;
      contactwidget {
         enabled = [CustomerNo != null];
         source = Customer;
      }
   }
   lov AddrNoRef with ReferenceCustAddressMatrixLovSelector {
      size = Large;
      description = AddrNoRef.CompanyName2;
   }
   field DefaultAddress {
      size = Small;
      required = [true];
   }
   lov ShipViaCodeRef with ReferenceMpccomShipViaSelector {
      description = ShipViaCodeRef.Description;
      validate command {
         execute {
            set FreightMapId = null;
            set ManuallyAssignedZoneDb = false;
         }
      }
   }
   field DefaultShipVia {
      size = Small;
      enumerationtrue = "Yes";
      enumerationfalse = "No";
      truelabel = "Yes";
      falselabel = "No";
      required = [true];
      editable = [false];
   }
   field ExceptionDb {
      size = Small;
      required = [true];
   }
   lov DeliveryTermsRef with ReferenceOrderDeliveryTermSelector {
      size = Large;
      description = DeliveryTermsRef.Description;
   }
   field DelTermsLocation;
   lov RouteIdRef with ReferenceDeliveryRouteSelector {
      description = RouteIdRef.Description;
   }
   lov ForwardAgentIdRef with ReferenceForwarderInfoSelector {
      description = ForwardAgentIdRef.Name;
      contactwidget {
         enabled = [ForwardAgentId != null];
         source = Person;
      }
   }
   field PickingLeadtime;
   lov ShipmentTypeRef with ShipmentTypeCoLovSelector {
      advancedview ShipmentTypeCoLovList;
      size = Large;
      description = ShipmentTypeRef.Description;
   }
   lov ShipInventoryLocationNoRef with ReferenceNonRemoteWhseShipLocationSelector {
      size = Small;
   }
   field DeliveryLeadtime;
   field Distance;
   field ExpectedAdditionalCost;
   field CurrencyCodeRef {
      size = Small;
   }
   lov ZoneIdRef with ReferenceFreightZoneJoinSelector {
      size = Large;
      description = ZoneIdRef.Description;

      validate command {
         execute {
            call FreightMapId(ShipViaCode, Contract, ZoneId) into FreightMapId;
            set ManuallyAssignedZoneDb = true;
            if [ZoneId = null and FreightMapId = null] {
               set ManuallyAssignedZoneDb = false;
            }
         }
      }
   }
   lov FreightMapIdRef with ReferenceFreightMapSelector {
      size = Large;
      description = FreightMapIdRef.Description;
      editable = [false];
   }
   field ManuallyAssignedZoneDb {
      size = Small;
      required = [true];
      editable = [false];
   }
   fieldranking ContractRef, CustomerNoRef, AddrNoRef, ShipViaCodeRef, DefaultShipVia, Exception, DeliveryLeadtime;

   commandgroup CommandGroupCmdGroup {

      command SetasDefaultShipViaCommand;
   }
}
list CustomerAddressPartLeadtimeList for CustomerAddressPartLeadtime {
   label = "Exceptions for Site: ${parent.Contract}, Customer Address: ${parent.CustomerNo} - ${parent.AddrNo}";
   lov SupplyChainPartGroupRef with ReferenceSupplyChainPartGroupSelector {
      size = Large;
      description = SupplyChainPartGroupRef.Description;
   }
   lov ShipViaCodeRef with ReferenceMpccomShipViaSelector {
      description = ShipViaCodeRef.Description;
      validate command {
         execute {
            set FreightMapId = null;
            set ManuallyAssignedZoneDb = false;
         }
      }

   }
   field DefaultShipVia {
      size = Small;
      editable = [false];
      enumerationtrue = "Yes";
      enumerationfalse = "No";
      truelabel = "Yes";
      falselabel = "No";
      required = [true];
   }
   lov RouteIdRef with ReferenceDeliveryRouteSelector {
      description = RouteIdRef.Description;
   }
   field PickingLeadtime;
   lov ShipmentTypeRef with ShipmentTypeCoLovSelector {
      advancedview ShipmentTypeCoLovList;
      size = Large;
      description = ShipmentTypeRef.Description;
   }
   field DeliveryLeadtime;
   field Distance;
   field ExpectedAdditionalCost;
   field CurrencyCodeRef {
      size = Small;
   }
   lov ZoneIdRef with ReferenceFreightZoneJoinSelector {
      size = Large;
      description = ZoneIdRef.Description;

      validate command {
         execute {
            call FreightMapId(ShipViaCode, Contract, ZoneId) into FreightMapId;
            set ManuallyAssignedZoneDb = true;
            if [ZoneId = null and FreightMapId = null] {
               set ManuallyAssignedZoneDb = false;
            }
         }
      }
   }
   lov FreightMapIdRef with ReferenceFreightMapSelector {
      size = Large;
      description = FreightMapIdRef.Description;
      editable = [false];
   }
   field ManuallyAssignedZoneDb {
      size = Small;
      required = [true];
      editable = [false];
   }
   fieldranking SupplyChainPartGroupRef, ShipViaCodeRef, DefaultShipVia, DeliveryLeadtime;

   commandgroup CommandGroupCmdGroup {

      command SetasDefaultShipViaCommand;
   }
}


