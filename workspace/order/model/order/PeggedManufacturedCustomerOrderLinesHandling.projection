------------------------------------------------------------------------------------------------------------
-- Date        Sign       History
-- ----------  ------   ------------------------------------------------------------------------------------
-- 2021-04-22  JoAnSe   MF21R2-1485, Added attribute SoSupplyDate and remapped the methods for SOTardinessInWorkDays and SOTardinessInCalendarDays.
-- 2020-12-21  MaEelk   SC2020R1-11773, Renamed OeLineItemNoRef as CustomerOrderLineRef.
-- 2019-03-12  Kubalk   SCUXXW4-17245, Dependency annotations added.
-- 2018-09-26  HaPulk   SCUXXW4-1144, Converted from tbwOverviewPegManufacOrdLines using MTG Version: 1.29
------------------------------------------------------------------------------------------------------------

projection PeggedManufacturedCustomerOrderLinesHandling;
component ORDER;
layer Core;
description "Use this API to display the customer order lines that have been pegged against shop orders, regardless of whether they were manually or automatically pegged.";
category Users;
include fragment CustomerOrderLineInitialCheck;
include fragment CustomerOrderLineStateBadge;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset CustomerOrderShopOrderSet for CustomerOrderShopOrder;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity CustomerOrderShopOrder {
   crud = Read, Update;
   from = "cust_order_shop_order_peg";

   //use attributes = Contract, PartNo, ConfigurationId, CustomerNo, RemainingCOQtyToPeg, OeRevisedQtyDue, PlannedDeliveryDate, PromisedDeliveryDate, PlannedShipDate, OePlannedDueDate, SupplyCode, QtyOnOrder, SupplyCodeDb;

   attribute Contract Text {
      fetch = "contract";
      label = "Site";
      maxlength = 5;
      editable = [ETag = null];
      format = uppercase;
   }
   attribute PartNo Text {
      fetch = "part_no";
      label = "Inventory Part No";
      maxlength = 25;
      editable = [ETag = null];
      format = uppercase;
   }
   attribute InvPartDescription Text {
      fetch = "Inventory_Part_API.Get_Description(contract,part_no)";
      label = "Inv Part Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute ConfigurationId Text {
      fetch = "configuration_id";
      label = "Configuration ID";
      maxlength = 50;
      required = [true];
      editable = [ETag = null];
   }
   attribute CustomerNo Text {
      fetch = "customer_no";
      label = "Customer No";
      maxlength = 20;
      editable = [false];
      format = uppercase;
   }
   attribute CustomerName Text {
      fetch = "Cust_Ord_Customer_API.Get_Name(customer_no)";
      label = "Customer Name";
      maxlength = 4000;
      editable = [false];
   }
   attribute OeOrderNo Text {
      label = "CO No";
      editable = [false];
   }
   attribute OeLineNo Text {
      label = "CO Line No";
      editable = [false];
   }
   attribute OeRelNo Text {
      label = "CO Del No";
      editable = [false];
   }
   attribute OeLineItemNo Number {
      label = "CO Line Item No";
      editable = [false];
   }
   attribute RemainingCOQtyToPeg Number {
      fetch = "oe_revised_qty_due-(oe_qty_assigned+oe_qty_shipped+oe_qty_on_order )";
      label = "Remaining CO Qty to Peg";
      editable = [false];
   }
   attribute OeRevisedQtyDue Number {
      fetch = "oe_revised_qty_due";
      label = "CO Line Qty";
      editable = [false];
   }
   attribute PlannedDeliveryDate Timestamp {
      fetch = "planned_delivery_date";
      label = "CO Planned Del Date/Time";
      editable = [false];
   }
   attribute PromisedDeliveryDate Timestamp {
      fetch = "promised_delivery_date";
      label = "CO Promised Del Date/Time";
      editable = [false];
   }
   attribute PlannedShipDate Timestamp {
      fetch = "planned_ship_date";
      label = "CO Planned Ship Date/Time";
      editable = [false];
   }
   attribute OePlannedDueDate Timestamp {
      fetch = "oe_planned_due_date";
      label = "CO Planned Due Date";
      required = [true];
      editable = [ETag = null];
   }
   attribute SupplyCode Enumeration(OrderSupplyType) {
      fetch = "supply_code_db";
      label = "CO Supply Code";
      required = [true];
      editable = [ETag = null];
   }
   @DynamicComponentDependency SHPORD
   attribute SoSupplyDate Date {
      fetch = "Shop_Ord_API.Get_So_Supply_Date(so_order_no, so_release_no, so_sequence_no)";
      label = "SO Supply Date";
      editable = [false];
   }

   attribute SoOrderNo Text {
      label = "SO No";
      editable = [false];
   }
   attribute SoReleaseNo Text {
      editable = [false];
   }
   attribute SoSequenceNo Text {
      label = "SO Seq No";
      editable = [false];
   }
   @DynamicComponentDependency SHPORD
   attribute SOTardinessInWorkDays Number {
      fetch = "Shop_Ord_Util_API.Get_SO_Tardiness_In_Work_Days(so_order_no, so_release_no, so_sequence_no, oe_planned_due_date)";
      label = "SO Tardiness in Work Days";
      maxlength = 2000;
      editable = [false];
   }
   @DynamicComponentDependency SHPORD
   attribute SOTardinessInCalendarDays Number {
      fetch = "Shop_Ord_Util_API.Get_SO_Tardiness_In_Days(so_order_no, so_release_no, so_sequence_no, oe_planned_due_date)";
      label = "SO Tardiness in Calendar Days";
      maxlength = 2000;
      editable = [false];
   }
   attribute QtyOnOrder Number {
      label = "SO Pegged Qty";
      editable = [ETag != null];
   }
   @DynamicComponentDependency SHPORD
   attribute AvailableSOQtyToPeg Number {
      fetch = "Shop_Ord_API.Get_Qty_To_Peg(so_order_no, so_release_no,so_sequence_no )";
      label = "Available SO Qty to Peg";
      editable = [false];
   }
   attribute SupplyCodeDb Text {
      fetch = "supply_code_db";
      label = "Supply Code";
      maxlength = 3;
      required = [true];
   }
   reference InventoryPartRef(Contract, PartNo) to InventoryPart(Contract, PartNo);
   @DynamicComponentDependency SHPORD
   reference ShopOrdRef(SoOrderNo, SoReleaseNo, SoSequenceNo) to ShopOrd(OrderNo, ReleaseNo, SequenceNo);
   @DynamicComponentDependency CFGCHR
   reference ConfigurationIdRef(PartNo, ConfigurationId) to ConfigurationSpec(PartNo, ConfigurationId) {
      label = "Configuration ID";
   }
   reference CustomerOrderLineRef(OeOrderNo, OeLineNo, OeRelNo, OeLineItemNo) to CustomerOrderLine(OrderNo, LineNo, RelNo, LineItemNo);

   action CreateSoPegging {
      parameter QtyOnOrder Number;
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------
action UnpegCustomerOrderLine {
   initialcheck CustomerOrderLineInitialCheck(OrderNo, LineNo, RelNo, LineItemNo);
   supportwarnings = [true];

   ludependencies = CustomerOrderShopOrder;
   parameter OrderNo Text;
   parameter LineNo Text;
   parameter RelNo Text;
   parameter LineItemNo Number;
}
--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------


