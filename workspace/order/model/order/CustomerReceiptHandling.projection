--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-05-02  MAHPLK  SCUXXW4-811, Converted from tbwCustomerReceiptLocation using MTG Version: 1.16
-- 2018-05-01  MAHPLK  SCUXXW4-9102, Converted from frmCustomerReceipt using MTG Version: 1.16
-- 2018-04-19  MAHPLK  SCUXXW4-1411, Converted from tbwReturnMaterialScrap using MTG Version: 1.16
--------------------------------------------------------------------------------------

projection CustomerReceiptHandling;
component ORDER;
layer Core;
description "Use this API to view the receipts done by return material authorization process. The system will display the received parts in to inventory locations and the parts that have been scrapped through the return process.";
category Users;
include fragment UserAllowedSiteLovSelector;
include fragment AllSalesPartActiveLovSelector;
include fragment InventoryLocation11Selector;
@DynamicComponentDependency PURCH
include fragment CreateCustomerSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset CustomerReturnReceipts for CustomerReturnReceipt;
entityset CustomerReceiptLocations for CustomerReceiptLocation;
entityset ReturnMaterialScraps for ReturnMaterialScrap;

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity CustomerReturnReceipt {
   crud = Read;
   from = "customer_return_receipt_info";
   attribute CatalogNo Text {
      fetch = "CATALOG_NO";
      label = "Sales Part No";
      maxlength = 25;
      format = uppercase;
   }
   attribute CatalogDesc Text {
      fetch = "CATALOG_DESC";
      label = "Sales Part Description";
      maxlength = 200;
   }
   attribute ScrappedQty Number {
      fetch = "CUSTOMER_RETURN_RECEIPT_API.Get_Total_Qty_Scrapped(RMA_NO, RMA_LINE_NO, RECEIPT_NO)";
      label = "Scrapped Qty";
   }
   attribute ReturnedInvQty Number {
      fetch = "CUSTOMER_RETURN_RECEIPT_API.Get_Total_Qty_Returned_Inv(RMA_NO, RMA_LINE_NO, RECEIPT_NO)";
      label = "Returned Inv Qty";
      editable = [false];
   }
   attribute ReturnedSalesQty Number {
      fetch = "CUSTOMER_RETURN_RECEIPT_API.Get_Total_Qty_Returned(RMA_NO, RMA_LINE_NO, RECEIPT_NO)";
      label = "Returned Sales Qty";
   }
   attribute SalesUoM Text {
      fetch = "RETURN_MATERIAL_LINE_API.Get_Sales_Unit_Meas(RMA_NO, RMA_LINE_NO)";
      label = "Sales UoM";
   }
   attribute InventoryUoM Text {
      fetch = "Inventory_Part_API.Get_Unit_Meas(CONTRACT, PART_NO)";
      label = "Inventory UoM";
   }
   attribute CreatedDate Date {
      fetch = "TRUNC(created_date)";
   }
   attribute ConfigurationId Text {
      fetch = "CONFIGURATION_ID";
      label = "Configuration ID";
      maxlength = 50;
   }
   attribute PartNo Text {
      fetch = "PART_NO";
      maxlength = 25;
      format = uppercase;
   }
   reference InventoryPartRef(Contract, PartNo) to InventoryPart(Contract, PartNo);

   reference RmaLineNoRef(RmaNo, RmaLineNo) to ReturnMaterialLine(RmaNo, RmaLineNo) {
      label = "RMA Line No";
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference CatalogNoRef(Contract, CatalogNo) to AllSalesPartActiveLov(Contract, CatalogNo) {
      label = "Sales Part No";
   }
   reference InventoryUoMRef(InventoryUoM) to IsoUnit(UnitCode) {
      label = "Inventory UoM";
   }
   reference SalesUoMRef(SalesUoM) to IsoUnit(UnitCode) {
      label = "Sales UoM";
   }
   @DynamicComponentDependency CFGCHR
   reference ConfigurationIdRef(PartNo, ConfigurationId) to ConfigurationSpec(PartNo, ConfigurationId) {
      label = "Configuration ID";
   }

   array DetailReturnMaterialScrap(RmaNo, RmaLineNo, ReceiptNo) to ReturnMaterialScrap(RmaNo, RmaLineNo, ReceiptNo);
   array DetailCustomerReceiptLocation(RmaNo, RmaLineNo, ReceiptNo) to CustomerReceiptLocation(RmaNo, RmaLineNo, ReceiptNo);

}

@Override
entity CustomerReceiptLocation {
   crud = Read;
   keys = RmaNo, RmaLineNo, ReceiptNo, Contract, PartNo, LocationNo, HandlingUnitId, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq, ConfigurationId {
      where = "RMA_NO = :RmaNo and RMA_LINE_NO = :RmaLineNo and RECEIPT_NO = :ReceiptNo and CONTRACT = :Contract and PART_NO = :PartNo and LOCATION_NO = :LocationNo and HANDLING_UNIT_ID = :HandlingUnitId and LOT_BATCH_NO = :LotBatchNo and SERIAL_NO = :SerialNo and ENG_CHG_LEVEL = :EngChgLevel and WAIV_DEV_REJ_NO = :WaivDevRejNo and ACTIVITY_SEQ = :ActivitySeq and CONFIGURATION_ID = :ConfigurationId";
   }
   attribute QtyReturned Number {
      label = "Returned Sales Qty";
   }
   attribute QtyReturnedInv Number {
      label = "Returned Inv Qty";
   }
   attribute CatchQtyReturned Number {
      label = "Returned Catch Qty";
   }
   attribute LocationNo Text {
      label = "Location Number";
   }
   attribute TypeDescription Text {
      fetch = "Handling_Unit_Type_API.Get_Description(Handling_Unit_API.Get_Handling_Unit_Type_Id(HANDLING_UNIT_ID))";
      label = "Type Description";
      maxlength = 2000;
   }
   attribute LotBatchNo Text {
      label = "Lot/Batch No";
   }
   attribute EngChgLevel Text {
      label = "Revision No";
   }
   attribute WaivDevRejNo Text {
      label = "W/D/R Number";
   }
   attribute ConditionCode Text {
      fetch = "Condition_Code_Manager_API.Get_Condition_Code(RETURN_MATERIAL_LINE_API.Get_Catalog_No(RMA_NO, RMA_LINE_NO),SERIAL_NO,LOT_BATCH_NO)";
      label = "Condition Code";
      maxlength = 2000;
   }
   attribute PartOwnership Enumeration(PartOwnership) {
      label = "Ownership";
   }
   attribute OwningVendorNo Text {
      label = "Owner";
   }
   attribute TopParentHandlingUnitID Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Handl_Unit_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Handling Unit ID";
      maxlength = 2000;
   }
   attribute TopParentHandlingUnitTypeID Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Hu_Type_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Handling Unit Type ID";
      maxlength = 2000;
   }
   attribute TopParentHandlingUnitTypeDesc Text {
      fetch = "Handling_Unit_Type_API.Get_Description(Handling_Unit_API.Get_Top_Parent_Hu_Type_Id(HANDLING_UNIT_ID))";
      label = "Top Parent Handling Unit Type Desc";
      maxlength = 2000;
   }
   attribute TopParentSSCC Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Sscc(HANDLING_UNIT_ID)";
      label = "Top Parent SSCC ";
      maxlength = 2000;
   }
   attribute TopParentAltHandlingUnitLabelID Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Alt_Hu_Label_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Alt Handling Unit Label ID";
      maxlength = 2000;
   }
   reference HandlingUnitRef(HandlingUnitId) to HandlingUnit(HandlingUnitId);

   reference InventoryPartInStockRef(Contract, PartNo, ConfigurationId, LocationNo, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq, HandlingUnitId) to InventoryPartInStock(Contract, PartNo, ConfigurationId, LocationNo, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq, HandlingUnitId);

   reference ReceiptNoRef(RmaNo, RmaLineNo, ReceiptNo) to CustomerReturnReceipt(RmaNo, RmaLineNo, ReceiptNo) {
      label = "Receipt No";
   }
   reference RmaLineNoRef(RmaNo, RmaLineNo) to ReturnMaterialLine(RmaNo, RmaLineNo);
   reference LocationNoRef(Contract, LocationNo) to InventoryLocation11(Contract, LocationNo) {
      label = "Location Number";
   }
   @DynamicComponentDependency PURCH
   reference OwningVendorNoRef(OwningVendorNo) to CreateCustomer(SupplierId) {
      label = "Owner";
   }
   reference ActivitySeqRef(Contract, PartNo, ConfigurationId, LocationNo, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq) to InventoryPartInStock(Contract, PartNo, ConfigurationId, LocationNo, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq) {
      label = "Activity Sequence";
   }
   reference ConditionCodeRef(ConditionCode) to ConditionCode(ConditionCode) {
      label = "Condition Code";
   }
}

@Override
entity ReturnMaterialScrap {
   crud = Read;
   keys = RmaNo, RmaLineNo, RejectReason, LotBatchNo, ReceiptNo, SerialNo, EngChgLevel, WaivDevRejNo {
      where = "RMA_NO = :RmaNo and RMA_LINE_NO = :RmaLineNo and REJECT_REASON_DB = :RejectReason and LOT_BATCH_NO = :LotBatchNo and RECEIPT_NO = :ReceiptNo and SERIAL_NO = :SerialNo and ENG_CHG_LEVEL = :EngChgLevel and WAIV_DEV_REJ_NO = :WaivDevRejNo";
   }
   attribute QtyScrapped Number {
      label = "Scrapped Qty";
   }
   attribute LotBatchNo Text {
      label = "Lot/Batch No";
   }
   attribute ConditionCode Text {
      fetch = "Condition_Code_Manager_API.Get_Condition_Code(RETURN_MATERIAL_LINE_API.Get_Catalog_No(RMA_NO, RMA_LINE_NO),SERIAL_NO,LOT_BATCH_NO)";
      label = "Condition Code";
   }
   attribute EngChgLevel Text {
      label = "Revision No";
   }
   attribute WaivDevRejNo Text {
      label = "W/D/R Number";
   }

   reference ReceiptNoRef(RmaNo, RmaLineNo, ReceiptNo) to CustomerReturnReceipt(RmaNo, RmaLineNo, ReceiptNo) {
      label = "Receipt No";
   }
   reference RmaLineNoRef(RmaNo, RmaLineNo) to ReturnMaterialLine(RmaNo, RmaLineNo);
   reference RejectReasonRef(RejectReason) to ScrappingCause(RejectReason) {
      label = "Scrapping Cause";
   }
   reference ConditionCodeRef(ConditionCode) to ConditionCode(ConditionCode) {
      label = "Condition Code";
   }

}
