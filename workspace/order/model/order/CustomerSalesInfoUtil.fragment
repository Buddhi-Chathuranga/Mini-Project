-------------------------------------------------------------------------------------------------------
--  Date        Sign    History
--  ----------  ------  --------------------------------------------------------------------------------
--  2021-12-20  DhAplk  SC21R2-6792, Added AssociationNo attribute for CustOrdCustomer overriden entity.
--  2021-08-11  DhAplk  SC21R2-2278, Added maxlength for NoteText in CustomerInfoHeaderContact and CustomerInfoAddrContact entities.
--  2021-07-30  NiDalk  SC21R2-2119, Added missing maxlengths to Text attributes.
--  2021-07-29  NiDalk  SC21R2-2154, Updated InCity field descriptions.
--  2021-07-08  ChBnlk  SC21R2-1518, Mark mandatory attributes in CustomerParamsStruct.
--  2021-07-08  ChBnlk  SC21R2-1518, Modified attribute descriptions in CustOrdCustomer
--  2021-07-07  ChBnlk  SC21R2-1394, Modified CustOrdCustomer by adding attribute ErrorText.
--  2021-07-07  NiDalk  SC21R2-1723, Maked mandatory attributes for CustomerStruct.
--  2021-06-28  ChBnlk  SC21R2-1518, Marked mandatory attributes for GetCustomers.
--  2021-06-28  ChBnlk  SC21R2-1413, Added attribute error_text_ to the stucture CustOrdCustomerStruct.
--  2021-06-16  ChBnlk  SC21R2-1413, Increased the length of the ErrorText in CreatedCustomerStruct.
--  2021-05-25  DhAplk  SC21R2-1283, SC21R2-143 Added array and reference related descriptions.
--  2021-05-13  ChBnlk  SC21R2-1188, Added CRUD = none to the entities to remove unnecessary projection entity actions grants.
--  2021-01-13  NiDalk  SC2020R1-11411, Removes temporary correction done for DXDEV-855 and modelled PersonalInterest, CampaignInterest, DecisionPowerType and Department.
--  2021-01-06  MiKulk  SC2020R1-11275, added the PersonID and Guid for Contacts, Added CommId for CustomerInfoAddress, and hanges DefaultLanguageDb as DefaultLanguage.
--  2020-11-28  MiKulk  SC2020R1-11275, Fixed issues in Send Customers
--  2020-11-28  MiKulk  SC2020R1-11047, Added the response payload of the CreateCustomerFromTemplate, i.e.CreatedCustomerStruct
--  2020-11-17  DhAplk  SC2020R1-10990 & SC2020R1-10992, Added attribute descriptions for structures and overridden entities related to GetCustOrdCustomer api.
--  2020-11-03  DhAplk  SC2020R1-11049, Added attribute descriptions for CustomerStruct and CustomerAddressStruct.
--  2020-11-03  DhAplk  SC2020R1-11226, Changed DefaultLanguageDb, CountryDb attributes names as DefaultLanguageCode, CountryCode in CustomerStruct.
--  2020-08-31  MiKulk  SC2020R1-207, Added more structures for GetCustoer and SendCustomer support.
--  2020-07-22  MiKulk  SC2020R1-206, Created.
--  ----------  ------  --------------------------------------------------------------------------------

fragment CustomerSalesInfoUtil;
component ORDER;
layer Core;
description "This will keep the models and structures for Integration related to Customer's Sales Information.";

--------------------------------- FRAGMENTS ---------------------------------


----------------------------- CLIENT FRAGMENTS ------------------------------


--------------------------- PROJECTION FRAGMENTS ----------------------------
------ structures for GetCustomer/SendCutomer actions -----
@apidoc {
   @description : CreatedCustomerStruct the response payload of CreateCustomerFromTemplate.
   @attribute CustomerNo : The short name or identification number of the customer.
   @attribute CustomerName : The name of the customer displayed in the Customer No field.
   @attribute AssociationNo : The association number of the customer.
   @attribute DefaultLanguageCode : The language valid for the customer.
   @attribute DelAddressId : The address to which the goods will be delivered. This attribute will refer to the delivery address identity.
   @attribute DocAddressId : The address to which documents will be sent. This attribute will refer to the document address identity.
   @attribute CustomerCreated : This attribute indicates if the customer record was created successfully or not.  Valid values for this attribute is True or False.
   @attribute ErrorText : This attribute indicates if there are any errors connected to this operation.
}
structure CreatedCustomerStruct {
   implementation = "Utility";
   attribute       CustomerNo               Text {
      maxlength = 20;
   }
   attribute       CustomerName             Text {
      maxlength = 100;
   }
   attribute       AssociationNo            Text {
      maxlength = 50;
   }
   attribute       DefaultLanguageCode      Lookup(IsoLanguage) {
      maxlength = 2;
   }
   attribute       DelAddressId             Text {
      maxlength = 50;
   }
   attribute       DocAddressId             Text {
      maxlength = 50;
   }
   attribute       CustomerCreated          Text {
      maxlength = 5;
   }
   attribute       ErrorText                Text {
      maxlength = 20000;
   }
}
@apidoc {
   @description : This contains the address information of the customer
	@attribute AddressCustomerName : The name of the customer which is specific to the address ID. This field is required to have a value only when the general name of the customer is not valid for a particular address ID.
	@attribute CustOwnAddressId : This is the customer's own ID for an address (sometimes referred to as EAN).
	@attribute Street : This field refers to the Address1 of the defined Address ID.
	@attribute Address2 : This field refers to the Address2 of the defined Address ID.
	@attribute City : The city part of the address.
	@attribute ZipCode : This field refers to the postal (or zip) code of customer's address.
	@attribute County : This field refers to the county within the specified state.
	@attribute State : This field refers to the state in the customer address.
	@attribute CountryCode : The country applicable for the customer.
	@attribute Phone : The phone number of the contact person.
	@attribute MobilePhone : The mobile phone number of the contact person.
	@attribute Fax : The fax number of the new contact.
	@attribute Email : The e-mail address of the new contact.
	@attribute WebAddress : The URL of the web page to be linked.
}
structure CustomerAddressStruct {
   implementation = "Utility";
   attribute       AddressCustomerName      Text {
      maxlength = 100;
   }
   attribute       CustOwnAddressId         Text {
      maxlength = 100;
   }
   attribute       Street                   Text {
      maxlength = 35;
   }
   attribute       Address2                 Text {
      maxlength = 35;
   }
   attribute       City                     Text {
      maxlength = 35;
   }
   attribute       ZipCode                  Text {
      maxlength = 35;
   }
   attribute       County                   Text {
      maxlength = 35;
   }
   attribute       State                    Text {
      maxlength = 35;
   }
   attribute       CountryCode              Text {
      maxlength = 2;
   }
   attribute       Phone                    Text {
      maxlength = 50;
   }
   attribute       MobilePhone              Text {
      maxlength = 50;
   }
   attribute       Fax                      Text {
      maxlength = 50;
   }
   attribute       Email                    Text {
      maxlength = 200;
   }
   attribute       WebAddress               Text {
      maxlength = 200;
   }
}

@apidoc {
   @description : This structure contacts the attributes to be used in the customer created using the template.
	@attribute CustomerNo : The short name or identification number of the customer.
	@attribute CustomerName : The name of the customer displayed in the Customer No field.
	@attribute AssociationNo : The association number of the customer.
	@attribute CustomerTemplateId : This field refers to the ID of the customer that is used as a template for the new customer record. Only customers marked as template customers may be selected.
	@attribute DefaultLanguageCode : The language valid for the customer.
	@attribute ShipViaCode : This field refers to the ID of default delivery mode, used for transporting goods to the particular customer address.
	@attribute DocumentAddress : This represents the document address information to be connected to the new customer created in IFS Cloud.
	@attribute DeliveryAddress : This represents the delivery address information to be connected to the new customer created in IFS Cloud.
}
structure CustomerStruct {
   implementation = "Utility";
   attribute       CustomerNo               Text {
      maxlength = 20;
   }
   attribute       CustomerName             Text {
      maxlength = 100;
      required = [true];
   }
   attribute       AssociationNo            Text {
      maxlength = 50;
   }
   attribute       CustomerTemplateId       Text {
      maxlength = 20;
      required = [true];
   }
   attribute       DefaultLanguageCode      Lookup(IsoLanguage) {
      maxlength = 2;
   }
   attribute       ShipViaCode              Text {
      maxlength = 3;
   }
   attribute       DocumentAddress          List < Structure(CustomerAddressStruct) > ;
   attribute       DeliveryAddress          List < Structure(CustomerAddressStruct) > ;
}



---------- Structures for GetCustomers----------------
@apidoc {
   @description : CustomerParamsStruct is used to pass the query information about the customers you wanted to retrive.
   @attribute CustomerNo : The short name or identification number of the customer. Based on the value specified for either customer No, customer Group, customer price group ID, CustGrpInCondCondition or CustPriceGrpInCondition, the system will fetch sales information of particular customers in IFS Cloud.
   @attribute CustomerGroup : The short code for the customer statistical group to which the current customer is connected. Customer statistical groups are used for statistical purposes and based on the value specified for either customer No, customer Group, customer price group ID, CustGrpInCondCondition or CustPriceGrpInCondition, the system will fetch sales information of particular customers in IFS Cloud.
   @attribute CustPriceGroupId : This field refers to the identity of the customer price group to which the current customer is connected. The Customer price group is used to group customers with similar characteristics regarding pricing. Based on the value specified for either customer No, customer Group, customer price group ID, CustGrpInCondCondition or CustPriceGrpInCondition, the system will fetch sales information of particular customers in IFS Cloud.
   @attribute CustGrpInCondition : Used as a parameter where a list of customer groups can be entered as a search criteria. Based on the value specified for either customer No, customer Group, customer price group ID, CustGrpInCondCondition or CustPriceGrpInCondition, the system will fetch sales information of particular customers in IFS Cloud.
   @attribute CustPriceGrpInCondition : Used as a parameter where a list of customer price groups can be entered as a search criteria. Based on the value specified for either customer No, customer Group, customer price group ID, CustGrpInCondCondition or CustPriceGrpInCondition, the system will fetch sales information of particular customers in IFS Cloud.
   @attribute IncludeCustAgreement : Used as a parameter to retrieve customer agreement information connected to particular customers. Valid values for this field is true or false.
   @attribute IncludeCustInfoContact : Used as a parameter to retrieve customer contact information connected to particular customers. Valid values for this field is true or false.
   @attribute IncludePriceList : Used as a parameter to retrieve sales price list information connected to particular customers. Valid values for this field is true or false.
   @attribute IncludeCustInfoComm : Used as a parameter to retrieve customer communication details connected to  particular customers. Valid values for this field is true or false.
   @attribute ChangedSinceNumberOfDays : This attribute can be used to set a criteria to only retrieve records that has been changed during a certain time frame.
   @attribute IncludeExpiredCustomers : This parameter is used to filter out expired customers. Valid values for this field is true or false.
   @attribute IncludeAddresses : Used as a parameter to retrieve customer address information connected to particular customers. Valid values for this field is true or false.
   @attribute IncludeAttributes : Used as a parameter to include extra atrributes in the generated response file. Valid values for this field is true or false.
}
structure CustomerParamsStruct {
   implementation = "Utility";
   attribute       CustomerNo               Text {
      maxlength = 20;
      required = [true];
   }
   attribute       CustomerGroup            Text {
      maxlength = 10;
      required = [true];
   }
   attribute       CustPriceGroupId         Text {
      maxlength = 10;
      required = [true];
   }
   attribute       CustGrpInCondition   Text {
      maxlength = 200;
      required = [true];
   }
   attribute       CustPriceGrpInCondition  Text {
      maxlength = 200;
      required = [true];
   }
   attribute       IncludeCustAgreement    Text {
      maxlength = 5;
   }
   attribute       IncludeCustInfoContact   Text {
      maxlength = 5;
   }
   attribute       IncludePriceList         Text {
      maxlength = 5;
   }
   attribute       IncludeCustInfoComm      Text {
      maxlength = 5;
   }
   attribute       ChangedSinceNumberOfDays Integer;
   attribute       IncludeExpiredCustomers  Text {
      maxlength = 5;
   }
   attribute       IncludeAddresses         Text {
      maxlength = 5;
   }
   attribute       IncludeAttributes        Text {
      maxlength = 5;
   }
}

@apidoc {
   @description : This structure is used to retrive the queried customer's information.
}
structure CustOrdCustomerStruct using CustOrdCustomer {
   nestedwithcrud {
      crud = ReadAndWrapWithJson;
   }
   implementation = "Utility";

}

@Override
@apidoc {
   @description : Overridden CustOrdCustomer entity
   @attribute CustomerNo : The short name or identification number of the customer.
   @attribute CustomerNoPay : The ID of the customer to be invoiced instead of the ordering customer, when the customer order is invoiced to a company other than the customer's. For example, the parent company.
   @attribute CustGrp : The short code for the customer statistical group to which the current customer is connected. Customer statistical groups are used for statistical purposes
   @attribute CustPriceGroupId : The identity of the customer price group to which the sales price list is connected.
   @attribute SalesmanCode : Identity of the salesperson responsible for the prospect, customer, or a specific order.
   @attribute MarketCode : The short code for the market to which the specific customer is connected.
   @attribute PrintControlCode : The code for the print control assigned to the current order. It controls whether the components of the package part or configuration will be displayed on the external documents/printouts.
   @attribute CustRef : This attribute displays the customer's reference.
   @attribute CyclePeriod : The interval between the invoices, expressed in days. The cycle interval is entered as customer data. This is only valid for collective invoicing.
   @attribute DateDel : The end date for customer transactions.
   @attribute LastIvcDate : This attribute displays the latest invoice date for customers using the invoicing type collective invoice.
   @attribute NoteText : This is a free-text field of up to 2000 characters. Notes are object-linked text, but they are never printed like document texts; instead they function as your own notes and comments for internal reference only. A note can be used as a means of forwarding information to someone who will process the object later.
   @attribute AcquisitionSite : The site to which the internal customer is connected. The internal customer is used for order management and inventory refilling. If you use the EDI message function, this information is not needed.
   @attribute CurrencyCode : The short code for the currency used.
   @attribute OrderId : <<The order type used for the current order. The order type controls the order flow for both manually-entered and generated customer orders by defining which steps will be automatically performed and which steps will be manually performed.
   The order type also controls whether priority reservations and shipment inventory will be used. The company's business processes determine how the order types should be defined. If a shipment is created, the control of the progress is handed over from the order type to the shipment type.>>
   @attribute Name : The name from the invoice address ID of the item is shown. When an item has no invoice address ID (e.g. a payment on account) or when the invoice address has no specific name, the general name of the customer appears.
   @attribute EdiSite : If you are transferring messages, you must indicate on what site the customer order should be generated, even though it is not needed for the customer order management function.
   @attribute CrStop : This attribute determines if the customer has been put on hold or not.
   @attribute InvoiceSort : This attribute determines if the customer will receive a normal invoice or a collective invoice.
   @attribute OrderConfFlag : Determines whether an order confirmation must be printed for this customer.
   @attribute Category : This attribute determines if the customer is an internal customer or not. The internal customer is used for order management, distribution orders, and inventory refilling.
   @attribute TemplateCustomer : This attribute is used to set the customer as a template customer.
   @attribute BackorderOption : This attribute determines how the order will be treated when performing reservations, when creating the pick list and when reporting picking. This applies only to inventory sales parts. There are 4 options: 1. No Partial Deliveries Allowed, 2. Incomplete Lines Not Allowed, 3. Incomplete Packages Not Allowed, and 4. Allow Incomplete Lines and Packages. The default value is taken from the customer basic data, but it can be changed on the order.
   @attribute TemplateId : The code that will be used to identify the customer order template.
   @attribute PackListFlag : This attribute determines whether delivery notes must be printed for this customer.
   @attribute AdvInvFullPay : <<If the value is true, the advance invoice full payment check will be activated. This implies that upon releasing the order and upon reserving the lines through the Create Customer Order Reservations and Reserve Customer Orders windows, a check will be performed to ensure that all connected advance invoices are fully paid before you can proceed with the processing of the order.
   If the check is failed, the order will be blocked. But, if the value is false, no control will be performed. For the inter-site order flow, this will be checked for the external order as well, as long as the external customer has this option enabled and the external credit check is true on the credit control group attached to the internal customer.>>
   @attribute ReleaseInternalOrder : The value in this field determines the status of the customer orders created from incoming messages. Possible values are; Automatic: customer orders created from incoming messages will automatically assume the Released status. Manual: customer orders created from incoming messages will automatically assume the Planned status.
   @attribute Discount : Any applicable discount, expressed as a percentage.
   @attribute DiscountType : The discount type that is used used by the customer. It is a unique identifier for each discount entered, identifying the kind of discount that is entered on an order line
   @attribute MinSalesAmount : The minimum net amount that should be sold to the customer per order (expressed in the base currency). This amount is excluding the charges and taxes. If the total order value is less than this amount, a message appears when you release the customer order or sales quotation.
   @attribute TemplateCustomerDesc : This is the name of the current template customer.
   @attribute ForwardAgentId : The ID of the forwarder that will handle the transportation
   @attribute Priority : The order priority that is used by default when creating new orders. Priority can be entered per site or per site-customer combination i.e. per supply site and internal customer, or customer as a default. A default priority defined per site-customer combination has the highest priority, default priority defined on the site has the next and default priority defined on customer has the least priority. The default priority will be retrieved to customer orders but it can be changed manually if required.
   @attribute CreditControlGroupId : The ID of the credit control group. The credit control group controls when the credit check is done in the order flow.
   @attribute ConfirmDeliveries : This attribute indicates that the deliveries created for a customer order has to be confirmed by the customer before the order can be invoiced.
   @attribute CheckSalesGrpDelivConf : If the value is true, the system will check the delivery confirmation setting on sales groups when adding order lines.
   @attribute Status : This value refers to the status of the customer. By default it is set as "True" within IFS Cloud.
   @attribute DefaultLanguageCode : The language valid for the customer.
   @attribute AssociationNo : <<The association number is linked to the customer identity. For some countries, this field can be validated according to national validation rules by using the Validation per Company window.
   If an error message is received, change the tax number to a correct one, according to the validation rule, or remove the validation item in the Validation per Company window.>>
   @attribute ErrorText : This attribute indicates if there are any errors connected to this operation.
   @navigation Agreements : Include agreement information connected to the specified customer/customers in IFS Cloud.
   @navigation PriceLists : Include pricelist information connected to the specified customer/customers in IFS Cloud.
   @navigation CommMethods : Include communication method information connected to the specified customer/customers in IFS Cloud.
   @navigation Attributes : Include information related to custom fields created for the specified customer/customers in IFS Cloud.
   @navigation Contacts : Include contact person information connected to the specified customer/customers in IFS Cloud.
   @navigation Addresses : Include address information connected to the specified customer/customers in IFS Cloud.
}
entity CustOrdCustomer {
   crud = None;
   use attributes = CustomerNoPay, CustGrp, CustPriceGroupId, SalesmanCode, MarketCode, PrintControlCode, CustRef, CyclePeriod,
   DateDel, LastIvcDate, NoteText, AcquisitionSite, CurrencyCode, OrderId, Name, EdiSite, CrStop, InvoiceSort,
   OrderConfFlag, Category, TemplateCustomer, BackorderOption, TemplateId, PackListFlag, AdvInvFullPay, ReleaseInternalOrder,
   Discount, DiscountType, MinSalesAmount, TemplateCustomerDesc, ForwardAgentId, Priority, CreditControlGroupId, ConfirmDeliveries, CheckSalesGrpDelivConf;

   attribute Status Text {
      maxlength = 5;
      fetch = "Customer_Sales_Info_Util_API.Get_Customer_Status(customer_no)";
   }
   attribute DefaultLanguageCode Text {
      maxlength = 2;
      fetch = "Customer_Info_API.Get_Default_Language_Db(customer_no)";
   }
   attribute AssociationNo Text {
      maxlength = 50;
      fetch = "Customer_Info_API.Get_Association_No(customer_no)";
   }
   attribute ErrorText Text {
      maxlength = 20000;
      fetch = "''";
   }

   array  Agreements(CustomerNo)  to CustomerAgreement(CustomerNo);
   array  PriceLists(CustomerNo)  to CustomerPricelist(CustomerNo);
   array  CommMethods(CustomerNo) to CommMethodForCustomer(CustomerId);
   array  Attributes(CustomerNo)  to CustomerAttributeStruct(CustomerNo);
   array  Contacts(CustomerNo)    to CustomerInfoHeaderContact(CustomerId);
   array  Addresses(CustomerNo)   to CustomerInfoAddress(CustomerId);

}

@Override
@apidoc {
   @description : Overridden CustomerPricelist entity
   @attribute CustomerNo : The short name or identification number of the customer.
   @attribute PriceListNo : This attribute refers to the ID number of the price list connected to the particular customer.
   @attribute PreferredPriceList : This attribute determines if the price list is preffered or not when there are several valid price lists exists for the same sales price group. Valid values for this attribute is Preferred or NotPreferred.
   @attribute SalesPriceGroupId : The ID of the sales price group. Sales price groups are used to group parts with the same characteristics regarding pricing.
   @attribute CurrencyCode : The code for the currency used for the price list.
}
entity CustomerPricelist {
   crud = None;
   keys = CustomerNo;
   use attributes = PriceListNo, PreferredPriceList, SalesPriceGroupId, CurrencyCode;
}

@Override
@apidoc {
   @description : Overridden CustomerAgreement entity
   @attribute CustomerNo : The short name or identification number of the customer.
   @attribute ValidFrom : The date from which the agreement will be valid.
   @attribute ValidUntil : The date to which the agreement is valid.
   @attribute Description : The description of the customer agreement.
   @attribute AgreementDate : The date on which the agreement record was created.
   @attribute CurrencyCode : The short code of the currency which is valid for this particular agreement.
   @attribute ShipViaCode : The agreed transportation method, e.g. by air, vessel, or road.
   @attribute DeliveryTerms : The agreed terms of delivery, i.e., which party should be responsible and charged for the freight.
   @attribute LanguageCode : This is the language code.
   @attribute NoteText : This is a free-text field of up to 2000 characters. Notes are object-linked text, but they are never printed like document texts; instead they function as your own notes and comments for internal reference only. A note can be used as a means of forwarding information to someone who will process the object later.
   @attribute AuthorizeCode : The ID of the coordinator usually responsible for the customer agreement.
   @attribute AgreementSent : This attribute determines if the current customer agreement has been sent via EDI/MHS/ITS. Valid values for this field is Yes or No.
   @attribute CustAgreementId : The identity the customer uses for the current customer agreement.
   @attribute SupAgreementId : This is the superseded agreement identity.
   @attribute Company : The name of the company to which the issuing organization belongs.
   @attribute Comments : This attribute refers to the comments relevant to the customer agreement.
   @attribute AssortmentId : This attribute refers to the identity of the assortment.
   @attribute MsgSequenceNo : The sequence number used to monitor both outbox and inbox messages created for each message class.
   @attribute MsgVersionNo : The ID used by the application to distinguish among the different versions of messages belonging to a particular message class.
   @attribute RebateBuilder : This attribute is used to indicate if the customer order lines that use prices from the campaign are eligible for rebate or not. Valid values for this attribute is True or False.
   @attribute DelTermsLocation : The location referred to by the delivery terms. It is necessary for the delivery terms to define an exact location to be able to fully determine the extent of responsibility and the costs for transportation of goods. Depending on the delivery terms this can be, e.g., a port of shipment, port of destination or a named place.
   @attribute UsePriceBreakTemplates : This attribute is used to indicate if the price break templates are considered when the base price is decided. The price break template is used when several parts have the same characteristics regarding price depending on the ordered quantity. Valid values for this attribute is True or False.
   @attribute UsePriceInclTax : This attribute defines the basis of the tax calculation. If the value for this attribute is true, then the basis for tax calculation is the price including tax. If not, the basis for tax calculation is the price.
   @attribute AgreementId : This attribute refers to the ID number of the customer agreement connected to the particular customer.
   @attribute State : The current status of the agreement. Possible value are: Planned, Active, Negotiated and Closed
   @attribute ExcludeFromAutoPricing : If the value of this attribute is true, the corresponding customer agreement will be used exclusively in connection with the service contract. Else, the corresponding customer agreement will be used together with pricing logic also outside the service contract, e.g. when creating a customer order for the customer.
}
entity CustomerAgreement {
   crud = None;
   keys = CustomerNo;
   use attributes = ValidFrom, ValidUntil, Description, AgreementDate, CurrencyCode, ShipViaCode,
   DeliveryTerms, LanguageCode, NoteText, AuthorizeCode, AgreementSent, CustAgreementId, SupAgreementId,
   Company, Comments, AssortmentId, MsgSequenceNo, MsgVersionNo, RebateBuilder, DelTermsLocation, UsePriceBreakTemplates, UsePriceInclTax;

   attribute AgreementId Text {
      alias = "AgreementId";
      maxlength = 10;
   }

   attribute State Text {
      alias = "State";
      maxlength = 20;
   }

   attribute UseExplicit Enumeration(GenYesNo) {
      fetch = "use_explicit_db";
      alias = "ExcludeFromAutoPricing";
   }
}

@Override
@apidoc {
   @description : Overridden CommMethodForCustomer entity using CommMethod entity
   @attribute CustomerId : The short name or identification number of the customer.
   @attribute CommId : The ID of the communication method.
   @attribute Value : This attribute refers to the value entered for a particualr communication method. For example, the value can be a phone number or an e-mail address.
   @attribute Description : A description of the name that you entered in the Name field or the value that you entered in the Value field. For example, this description might be the title of the person associated with a phone number or an e-mail address.
   @attribute ValidFrom : The date from which the communication method is valid.
   @attribute ValidTo : The date until which the communication method is valid.
   @attribute MethodDefault : This attribute is used to indicate that the value in the Value field is default for the combination of communication method and time period, regardless of the address ID or not. Valid values for this attribute is True or False.
   @attribute AddressDefault : This attribute determines if the communication method value is default for the combination of communication method, address ID and time period specified.
   @attribute MethodId : This attribute refers to the the type of communication used. Possible values are: Phone, Mobile, Fax, Pager, E-mail, Intercom, Messagener, www.
   @attribute Name : The name of the contact person for a specific communication method, if relevant. If you have different communication methods for the same person, you must enter a new line for each communication method.
   @attribute ClientValue : This attribute refers to the client representation of the enumeration value.
}
entity CommMethodForCustomer using CommMethod {
   crud = None;
   keys = CustomerId;
   from = "CUSTOMER_INFO_COMM_METHOD";
   where = "ADDRESS_ID is NULL";

   use attributes = CommId, Value, Description, ValidFrom, ValidTo, MethodDefault, AddressDefault, MethodId, Name;
   attribute ClientValue Text {
      maxlength = 2000;
   }
}

@apidoc {
   @description : Additional attributes of CustOrdCustomer in CustOrdCustomerStruct.
   @attribute CustomerNo : The short name or identification number of the customer.
   @attribute AttributeName : This attribute refers to the custom field name.
   @attribute AttributeValue : This attribute refers to the custom field value.
}
query CustomerAttributeStruct {
   from = "CUST_ORD_CUSTOMER";
   keys = CustomerNo;

   attribute CustomerNo Text {
      maxlength = 20;
   }
   attribute AttributeName Text {
      fetch = "''";
      maxlength = 200;
   }
   attribute AttributeValue Text {
      fetch = "''";
      maxlength = 2000;
   }
}


@Override
@apidoc {
   @description : Overridden CustomerInfoAddressType entity
   @attribute CustomerId : The short name or identification number of the customer.
   @attribute AddressId : The address identity of the end customer you registered for this customer address.
   @attribute Party : The attribute refers to a system generated number.
   @attribute DefAddress : This attribute indicates if the address will be used as the default address for the corresponding address type. Valid values for this attribute is True or False.
   @attribute DefaultDomain : The attribute indicated if this search domain can be used to search for Customers in the system or not.
   @attribute AddressTypeCode : A code representing the address type used by the company. Possible values are: Delivery, Document, Pay, Primary, Secondary, Visit
}
entity CustomerInfoAddressType {
   crud = None;
   keys = CustomerId, AddressId;
   use attributes = Party, DefAddress, DefaultDomain, AddressTypeCode;
}


@Override
@apidoc {
   @description : Overridden CustomerInfoAddress entity
   @attribute CustomerId : The short name or identification number of the customer.
   @attribute AddressId : The address identity of the end customer you registered for this customer address.
   @attribute EanLocation : EAN (European Article Number) location for the document, delivery, and payer address.
   @attribute ValidFrom : The date from which this address should be valid.
   @attribute ValidTo : The date up to which the address is valid.
   @attribute Party : The attribute refers to a system generated number.
   @attribute DefaultDomain : The attribute indicates if this search domain can be used to search for Customers in the system or not.
   @attribute Country : The country code used for the specified address.
   @attribute SecondaryContact : The secondary contact for the specified address.
   @attribute PrimaryContact : The primary contact for the specified address.
   @attribute Address1 : The first line of the specified address.
   @attribute Address2 : The second line of the specified address.
   @attribute ZipCode : The Zip Code connected to the selected Address ID.
   @attribute City : The city part of the spcified address.
   @attribute County : The county connected to the specified address.
   @attribute State : The state code used in the  specified address.
   @attribute InCity : Indicates if the customer is located inside the city limits. If this value is True, city sales tax is calculated on tax lines for customer orders. Possible values for this attribute are: TRUE or FALSE.
   @attribute JurisdictionCode : The jurisdiction code is retrieved only when saving a customer address and Quantum for Sales and Use Tax from Vertex Inc. is installed. It is a nine-digit code.
   @attribute Name : The name of the customer which is specific to the address ID.
   @attribute EndCustomerId : The ID of the end customer connected to the delivery address.
   @attribute EndCustAddrId : The address identity of the end customer you would like to register for this customer.
   @attribute CommId : The ID of the communication method.
   @navigation AddressTypes : Include address types connected to a specific address of a customer/customers in IFS Cloud.
   @navigation CustomerContacts : Include contact person information connected to a specific address of a customer/customers in IFS Cloud.
   @navigation CommMethods : Include communication method information connected to a specific address of a customer/customers in IFS Cloud.
   @navigation SalesAddressInfo : Include delivery information connected to a specific address of a customer/customers in IFS Cloud.
}
entity CustomerInfoAddress {
   crud = None;
   keys = CustomerId, AddressId;
   use attributes = EanLocation, ValidFrom, ValidTo, Party, DefaultDomain, Country,
   SecondaryContact, PrimaryContact, Address1, Address2, ZipCode, City, County, State, InCity,
   JurisdictionCode, Name, EndCustomerId, EndCustAddrId, CommId;

   reference SalesAddressInfo(CustomerId, AddressId) to CustOrdCustomerAddress(CustomerNo, AddrNo);
   array     AddressTypes(CustomerId, AddressId) to CustomerInfoAddressType(CustomerId, AddressId);
   array     CustomerContacts(CustomerId, AddressId) to CustomerInfoAddrContact(CustomerId, CustomerAddress);
   array     CommMethods(CustomerId, AddressId) to CommMethodForAddress(CustomerId, AddressId);
}

@Override
@apidoc {
   @description : Overridden CustOrdCustomerAddress entity
   @attribute CustomerNo : The short name or identification number of the customer.
   @attribute AddrNo : The address identity of the customer you registered for this customer address.
   @attribute DeliveryTerms : The agreed terms of delivery, i.e., which party should be responsible and charged for the freight.
   @attribute DistrictCode : The district location of the address.
   @attribute RegionCode : The regional location of the address.
   @attribute ShipViaCode : The agreed transportation method, e.g. by air, vessel, or road.
   @attribute Contact : The contact person for the customer address identity.
   @attribute RouteId : The route ID to which you want to connect the customer and the particular address ID. A route contains information about route departure days and shipping times. Route planning is used to coordinate frequent deliveries of goods to customers who order quantities smaller than a full cargo space. It is useful when having several customers with similar delivery requirements, located close enough together to be serviced by the same delivery route.
   @attribute DeliveryTime : The time when the customer with this address identity usually wants the goods to be delivered.
   @attribute IntrastatExempt : This attribute indicates if goods sent to this address should be excluded from the Intrastat report or not. Valid values for this attribute is Include or Exempt.
   @attribute CustCalendarId : The customer calendar defining work days for the customer address.
   @attribute ShipmentType : The shipment type which is connected to the customer address. Shipment type is used to control the shipment flow and the shipment processes of your company determine how the shipment type should be defined to get a streamlined and effective process.
   @attribute DelTermsLocation : The location referred to by the delivery terms. Depending on the delivery terms this can be, e.g., a port of shipment, port of destination or a named place.
}
entity CustOrdCustomerAddress {
   crud = None;
   use attributes = DeliveryTerms, DistrictCode, RegionCode, ShipViaCode, Contact, RouteId, DeliveryTime, IntrastatExempt, CustCalendarId, ShipmentType, DelTermsLocation;
}


@Override
@apidoc {
   @description : Overridden CustomerInfoHeaderContact entity using CustomerInfoContact entity
   @attribute CustomerId : The short name or identification number of the customer.
   @attribute ContactAddress : The identity of the contact person's address.
   @attribute CustomerPrimary : This attribute indicates if the contact is a primary contact for the customer or not. Only one customer primary contact can exist per customer. Valid values for this attribute is True or False.
   @attribute CustomerSecondary : This attribute indicates if the contact is a secondary contact for the customer or not. Only one customer secondary contact can exist per customer. Valid values for this attribute is True or False.
   @attribute AddressPrimary : This attribute indicates if the contact is the primary contact for the specified address ID or not. Valid values for this attribute is True or False.
   @attribute AddressSecondary : This attribute indicates if the contact is the secondary contact for the specified address ID or not. Valid values for this attribute is True or False.
   @attribute Created : The date on which the record was created. This value is set automatically when the record is created.
   @attribute Changed : The date on which the record was last changed. This value is set automatically when the record is changed.
   @attribute NoteText : This is a free-text field of up to 2000 characters. Notes are object-linked text, but they are never printed like document texts; instead they function as your own notes and comments for internal reference only. A note can be used as a means of forwarding information to someone who will process the object later.
   @attribute CreatedBy : The user ID of the person who created the record. This value is set automatically when the record is created.
   @attribute ChangedBy : The identity of the user who performed the last change of this record. This field is entered automatically and cannot be updated.
   @attribute BlockedForCrmObjects : This attribute prevent users from adding a particular person as a customer contact to any new customer. Valid values for this attribute is True or False.
   @attribute PersonId : A user ID defined by the system administrator.
   @attribute Guid : This attribute refers to the guid of the contact. It is a system generated number.
   @attribute Manager : The manager of the contact in regard to this customer. The manager is another contact of this customer.
   @attribute ManagerGuid : This attribute refers to the guid of the manager. It is a system generated number.
   @attribute ManagerCustAddress : The customer address ID of the manager.
   @attribute MainRepresentativeId : The user responsible for the customer.
   @attribute Role : The role of the contact in regard to the specified customer.
   @attribute PersonalInterest : The description of the personal interest of a person.
   @attribute CampaignInterest : The description of the campaign interest of a person.
   @attribute DecisionPowerType : The description of the decision power type.
   @attribute Department : The department of the contact that he/she works at this customer.
   @attribute Name : The name connected to the person ID.
   @attribute Title : The persons title, e.g., Mr., Mrs.
   @attribute Phone : The general default phone number entered on the Person record. If a contact address has been specified, the default value for the particular address is displayed.
   @attribute Mobile : The general default mobile number entered on the Person record. If a contact address has been specified, the default value for the particular address is displayed.
   @attribute Email : The general default E-mail address entered on the Person record. If a contact address has been specified, the default value for the particular address is displayed.
   @attribute Fax : The general default fax number entered on the Person record. If a contact address has been specified, the default value for the particular address is displayed.
   @attribute Pager : The general default pager number entered on the Person record. If a contact address has been specified, the default value for the particular address is displayed.
   @attribute Intercom : The general default intercom number entered on the Person record. If a contact address has been specified, the default value for the particular address is displayed.
}
entity CustomerInfoHeaderContact using CustomerInfoContact {
   crud = None;
   keys = CustomerId;
   where = "Customer_Address is null";

   use attributes = ContactAddress, CustomerPrimary, CustomerSecondary, AddressPrimary, AddressSecondary, Created, Changed, NoteText,
   CreatedBy, ChangedBy, BlockedForCrmObjects, PersonId, Guid, Manager, ManagerGuid, ManagerCustAddress, MainRepresentativeId;

   attribute Role Text {
      fetch = "Contact_Role_API.Decode_List(role_db)";
      maxlength = 4000;
   }
   @DynamicComponentDependency CRM
   attribute PersonalInterest Text {
      fetch = "Personal_Interest_API.Decode_List(personal_interest_db)";
      maxlength = 4000;
   }
   @DynamicComponentDependency CRM
   attribute CampaignInterest Text {
      fetch = "Business_Campaign_Interest_API.Decode_List(campaign_interest_db)";
      maxlength = 4000;
   }
   @DynamicComponentDependency RMCOM
   attribute DecisionPowerType Text {
      fetch = "Decision_Power_Type_API.Decode_List(decision_power_type_db)";
      maxlength = 4000;
   }
   @DynamicComponentDependency RMCOM
   attribute Department Text {
      fetch = "Contact_Department_API.Decode_List(department_db)";
      maxlength = 4000;
   }
   attribute Name Text {
      fetch = "Person_Info_API.Get_Name(person_id)";
      maxlength = 100;
   }
   attribute Title Text {
      fetch = "Person_Info_API.Get_Title(person_id)";
      maxlength = 100;
   }
   attribute Phone Text {
      fetch = "Comm_Method_API.Get_Value('PERSON', person_id, Comm_Method_Code_API.Decode('PHONE'), 1, contact_address, sysdate)";
      maxlength = 200;
   }
   attribute Mobile Text {
      fetch = "Comm_Method_API.Get_Value('PERSON', person_id, Comm_Method_Code_API.Decode('MOBILE'), 1, contact_address, sysdate)";
      maxlength = 200;
   }
   attribute Email Text {
      fetch = "Comm_Method_API.Get_Value('PERSON', person_id, Comm_Method_Code_API.Decode('E_MAIL'), 1, contact_address, sysdate)";
      maxlength = 200;
   }
   attribute Fax Text {
      fetch = "Comm_Method_API.Get_Value('PERSON', person_id, Comm_Method_Code_API.Decode('FAX'), 1, contact_address, sysdate)";
      maxlength = 200;
   }
   attribute Pager Text {
      fetch = "Comm_Method_API.Get_Value('PERSON', person_id, Comm_Method_Code_API.Decode('PAGER'), 1, contact_address, sysdate)";
      maxlength = 200;
   }
   attribute Intercom  Text {
      fetch = "Comm_Method_API.Get_Value('PERSON', person_id, Comm_Method_Code_API.Decode('INTERCOM'), 1, contact_address, sysdate)";
      maxlength = 200;
   }
   attribute NoteText Text {
      maxlength = 2000;
   }
}

@Override
@apidoc {
   @description : Overridden CustomerInfoAddrContact entity using CustomerInfoContact entity
   @attribute CustomerId : The short name or identification number of the customer.
   @attribute CustomerAddress : The identity of the customer address.
   @attribute CustomerPrimary : This attribute indicates if the contact is a primary contact for the customer or not. Only one customer primary contact can exist per customer. Valid values for this attribute is True or False.
   @attribute CustomerSecondary : This attribute indicates if the contact is a secondary contact for the customer or not. Only one customer secondary contact can exist per customer. Valid values for this attribute is True or False.
   @attribute AddressPrimary : This attribute indicates if the contact is the primary contact for the specified address ID or not. Valid values for this attribute is True or False.
   @attribute AddressSecondary : This attribute indicates if the contact is the secondary contact for the specified address ID or not. Valid values for this attribute is True or False.
   @attribute Created : The date on which the record was created. This value is set automatically when the record is created.
   @attribute Changed : The date on which the record was last changed. This value is set automatically when the record is changed.
   @attribute NoteText : This is a free-text field of up to 2000 characters. Notes are object-linked text, but they are never printed like document texts; instead they function as your own notes and comments for internal reference only. A note can be used as a means of forwarding information to someone who will process the object later.
   @attribute ContactAddress : The identity of the contact person's address.
   @attribute CreatedBy : The user ID of the person who created the record. This value is set automatically when the record is created.
   @attribute ChangedBy : The identity of the user who performed the last change of this record. This field is entered automatically and cannot be updated.
   @attribute BlockedForCrmObjects : This attribute prevent users from adding a particular person as a customer contact to any new customer. Valid values for this attribute is True or False.
   @attribute PersonId : A user ID defined by the system administrator.
   @attribute Guid : This attribute refers to the guid of the contact. It is a system generated number.
   @attribute Manager : The manager of the contact in regard to this customer. The manager is another contact of this customer.
   @attribute ManagerGuid : This attribute refers to the guid of the manager. It is a system generated number.
   @attribute ManagerCustAddress : The customer address ID of the manager.
   @attribute MainRepresentativeId : The user responsible for the customer.
   @attribute Role : The role of the contact in regard to the specified customer.
   @attribute PersonalInterest : The description of  personal interests of a person.
   @attribute CampaignInterest : The description of campaign interests of a person.
   @attribute DecisionPowerType : The description of the decision power type.
   @attribute Department : The department of the contact that he/she works at this customer.
   @attribute Name : The name connected to the person ID.
   @attribute Title : The persons title, e.g., Mr., Mrs.
   @attribute Phone : The general default phone number entered on the Person record. If a contact address has been specified, the default value for the particular address is displayed.
   @attribute Mobile : The general default mobile number entered on the Person record. If a contact address has been specified, the default value for the particular address is displayed.
   @attribute Email : The general default E-mail address entered on the Person record. If a contact address has been specified, the default value for the particular address is displayed.
   @attribute Fax : The general default fax number entered on the Person record. If a contact address has been specified, the default value for the particular address is displayed.
   @attribute Pager : The general default pager number entered on the Person record. If a contact address has been specified, the default value for the particular address is displayed.
   @attribute Intercom : The general default intercom number entered on the Person record. If a contact address has been specified, the default value for the particular address is displayed.
}
entity CustomerInfoAddrContact using CustomerInfoContact {
   crud = None;
   keys = CustomerId, CustomerAddress;
   use attributes = CustomerPrimary, CustomerSecondary, AddressPrimary, AddressSecondary, Created, Changed, NoteText, ContactAddress,
   CreatedBy, ChangedBy, BlockedForCrmObjects, PersonId, Guid, Manager, ManagerGuid, ManagerCustAddress, MainRepresentativeId;

   attribute Role Text {
      fetch = "Contact_Role_API.Decode_List(role_db)";
      maxlength = 4000;
   }
   @DynamicComponentDependency CRM
   attribute PersonalInterest Text {
      fetch = "Personal_Interest_API.Decode_List(personal_interest_db)";
      maxlength = 4000;
   }
   @DynamicComponentDependency CRM
   attribute CampaignInterest Text {
      fetch = "Business_Campaign_Interest_API.Decode_List(campaign_interest_db)";
      maxlength = 4000;
   }
   @DynamicComponentDependency RMCOM
   attribute DecisionPowerType Text {
      fetch = "Decision_Power_Type_API.Decode_List(decision_power_type_db)";
      maxlength = 4000;
   }
   @DynamicComponentDependency RMCOM
   attribute Department Text {
      fetch = "Contact_Department_API.Decode_List(department_db)";
      maxlength = 4000;
   }
   attribute Name Text {
      fetch = "Person_Info_API.Get_Name(person_id)";
      maxlength = 100;
   }
   attribute Title Text {
      fetch = "Person_Info_API.Get_Title(person_id)";
      maxlength = 100;
   }
   attribute Phone Text {
      fetch = "Comm_Method_API.Get_Value('PERSON', person_id, Comm_Method_Code_API.Decode('PHONE'), 1, contact_address, sysdate)";
      maxlength = 200;
   }
   attribute Mobile Text {
      fetch = "Comm_Method_API.Get_Value('PERSON', person_id, Comm_Method_Code_API.Decode('MOBILE'), 1, contact_address, sysdate)";
      maxlength = 200;
   }
   attribute Email Text {
      fetch = "Comm_Method_API.Get_Value('PERSON', person_id, Comm_Method_Code_API.Decode('E_MAIL'), 1, contact_address, sysdate)";
      maxlength = 200;
   }
   attribute Fax Text {
      fetch = "Comm_Method_API.Get_Value('PERSON', person_id, Comm_Method_Code_API.Decode('FAX'), 1, contact_address, sysdate)";
      maxlength = 200;
   }
   attribute Pager Text {
      fetch = "Comm_Method_API.Get_Value('PERSON', person_id, Comm_Method_Code_API.Decode('PAGER'), 1, contact_address, sysdate)";
      maxlength = 200;
   }
   attribute Intercom  Text {
      fetch = "Comm_Method_API.Get_Value('PERSON', person_id, Comm_Method_Code_API.Decode('INTERCOM'), 1, contact_address, sysdate)";
      maxlength = 200;
   }
   attribute NoteText Text {
      maxlength = 2000;
   }

}

@Override
@apidoc {
   @description : Overridden CommMethodForAddress entity using CommMethod entity
   @attribute CustomerId : The short name or identification number of the customer.
   @attribute AddressId : The address ID connected to the communication method.
   @attribute CommId : The ID of the communication method.
   @attribute Value : This attribute refers to the value entered for a particualr communication method. For example, the value can be a phone number or an e-mail address.
   @attribute Description : A description of the name that you entered in the Name field or the value that you entered in the Value field. For example, this description might be the title of the person associated with a phone number or an e-mail address.
   @attribute ValidFrom : The date from which the communication method is valid.
   @attribute ValidTo : The date until which the communication method is valid.
   @attribute MethodDefault : This attribute is used to indicate that the value in the Value field is default for the combination of communication method and time period, regardless of the address ID or not. Valid values for this attribute is True or False.
   @attribute AddressDefault : This attribute determines if the communication method value is default for the combination of communication method, address ID and time period specified.
   @attribute MethodId : This attribute refers to the the type of communication used. Possible values are: Phone, Mobile, Fax, Pager, E-mail, Intercom, Messagener, www.
   @attribute Name : The name of the contact person for a specific communication method, if relevant. If you have different communication methods for the same person, you must enter a new line for each communication method.
   @attribute ClientValue : This attribute refers to the client representation of the enumeration value.
}
entity CommMethodForAddress using CommMethod {
   crud = None;
   keys = CustomerId, AddressId;
   from = "CUSTOMER_INFO_COMM_METHOD";
   use attributes = CommId, Value, Description, ValidFrom, ValidTo, MethodDefault, AddressDefault, MethodId, Name;

   attribute ClientValue Text {
      fetch = "Comm_Method_Code_API.Decode(method_id_db)";
      maxlength = 2000;
   }
}
