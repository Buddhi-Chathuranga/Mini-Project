----------------------------------------------------------------------------------------
-- Date        Sign       History
--  ----------  ------  ----------------------------------------------------------------
--  2019-08-17  MalLlk  SCUXXW4-22978, Rename the client HandleCloseCustomerOrderAssistant to CloseCustomerOrder.
--  2019-08-16  MalLlk  SCUXXW4-22978, Supporting to move fragment CloseCustomerOrderAssistant to a seperate projection.
--  2019-02-13  MAHPLK  SCUXXW4-15294, Handled "Close" operation of Customer Order.
--  2019-02-08  MAHPLK  SCUXXW4-15246, Handled "Close" operation of Customer Order Line.
----------------------------------------------------------------------------------------

client CloseCustomerOrder;
component ORDER;
layer Core;
projection CloseCustomerOrderHandling;


-------------------------------- ASSISTANTS ---------------------------------
assistant CloseCustomerOrderAssistant using CloseCustomerOrderSet {
   label = "${AssistantTitle}";
   savemode = OnLostFocus;

   input(OrderSelection, Source, AssistantTitle);

   singlestep {
      label = "";

      list CloseOrderWarningList(InfoWarningArray) {
         visible = [Exist and State in("Warning", "Info/Warning")];
      }
      list CloseOrderInformationList(InfoWarningArray) {
         visible = [Exist and State in("Information", "Info/Warning")];
      }

   }
   command Ok;
   command Cancel;
}

----------------------------------- LISTS -----------------------------------
list CloseOrderWarningList for CloseOrderMessageVirtual {

   label = "Warnings";
   editmode = SingleCellEdit;
   preselect = [false];

   defaultfilter = [MessageType = "Warning"];
   preselect = [false];
   crudactions {
      new {
         enabled = [false];
      }
   }
   badge MessageType {
      style = IconOnly;
      icon = "information";
      emphasis Warning = [true];
      size = Small;
   }
   field OrderNo {
      size = Small;
   }
   field LineNo {
      size = Small;
      columnexclude = [parent.Source != "COL"];
   }
   field RelNo {
      size = Small;
      columnexclude = [parent.Source != "COL"];
   }
   field Message {
      size = Large;
      multiline = true;
   }
   field Answer {
      size = Small;
   }

   command YesToAllCommand;
   command NoToAllCommand;
}


list CloseOrderInformationList for CloseOrderMessageVirtual {
   label = "Information";
   defaultfilter = [MessageType = "Information"];
   preselect = [false];
   multiselect = [false];

   crudactions {
      new {
         enabled = [false];
      }
      edit {
         enabled = [false];
      }
   }
   badge MessageType {
      style = IconOnly;
      icon = "information";
      emphasis Info = [true];
      size = Small;
   }
   field OrderNo {
      size = Small;
   }
   field LineNo {
      size = Small;
      columnexclude = [parent.Source != "COL"];
   }
   field RelNo {
      size = Small;
      columnexclude = [parent.Source != "COL"];
   }
   field Message {
      size = Large;
      multiline = true;
   }
}

---------------------------------- GROUPS -----------------------------------

--------------------------------- COMMANDS ----------------------------------
command Ok for CloseOrderVirtual {
   label = "Proceed";

   execute {

      call ProcessCloseOrder(OrderSelection, Source);
      exit OK;
   }
}

command Cancel for CloseOrderVirtual {
   label = "Discard";
   execute {
      exit CANCEL;
   }
}


command YesToAllCommand for CloseOrderMessageVirtual {
   label = "Yes to All";
   visible = [component.CloseOrderWarningList.RowCount > 1];

   execute {
      call AnswerAllCloseOrder(parent.Objkey, 1);
   }
}

command NoToAllCommand for CloseOrderMessageVirtual {
   label = "No to All";
   visible = [component.CloseOrderWarningList.RowCount > 1];

   execute {
      call AnswerAllCloseOrder(parent.Objkey, 0);
   }
}
