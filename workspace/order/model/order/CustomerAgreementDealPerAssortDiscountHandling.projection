--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-07-24  IzShlk  SCUXXW4-8117, Converted from dlgAgreementDealAssortDiscount using MTG Version: 1.23
--------------------------------------------------------------------------------------

projection CustomerAgreementDealPerAssortDiscountHandling;
component ORDER;
layer Core;
description "Use this API to add multiple discount lines to a deal-per-part line.";
category Users;
include fragment AgreementAssortmentDealInitialCheck;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset AgreementDealAssortDiscountSet for AgreementAssortmentDealVirtual;


------------------------------ ENTITY DETAILS -------------------------------
virtual AgreementAssortmentDealVirtual {
   crud = Create, Read;
   ludependencies = AgreementAssortmentDealVirtual;

   attribute AssortmentId Text {
      label = "Assortment Identity";

   }
   attribute AssortmentNodeId Text {
      label = "Assortment Node";

   }
   attribute DealPrice Number {
      label = "Sales Price/Curr";
      format = ifscurrency;
   }
   attribute PriceUnitMeas Text {
      label = "Price UoM";
   }
   attribute Discount Number {
      label = "Acc Disc";
      format = percentage;
   }
   attribute CurrencyCode Text {
      label = "Curr";
   }
   attribute MinQuantity Number {
      label = "Min Sales Qty";

   }
   attribute AgreementId Text {
      label = "Agreement Id";
   }
   attribute ValidFrom Date;
   attribute ValidTo Date;
   attribute UpdAllowed Boolean;
   attribute AccDiscountAmount Number {
      label = "Acc Discount Net Amt";
      format = ifscurrency;
   }

   reference AssortmentIdRef(AssortmentId) to AssortmentStructure(AssortmentId) {
      label = "Assortment Identity";
   }
   reference AssortmentNodeIdRef(AssortmentId, AssortmentNodeId) to AssortmentNode(AssortmentId, AssortmentNodeId) {
      label = "Assortment Node Identity";
   }
   reference CustomerAgreementRef(AgreementId) to CustomerAgreement(AgreementId);
   array AgreementAssortDiscountArray(AgreementId, PriceUnitMeas, AssortmentId, AssortmentNodeId, MinQuantity, ValidFrom) to AgreementAssortDiscount(AgreementId, PriceUnitMeas, AssortmentId, AssortmentNodeId, MinQuantity, ValidFrom);
}

@Override
entity AgreementAssortDiscount {
   keys = AgreementId, MinQuantity, ValidFrom, AssortmentId, AssortmentNodeId, PriceUnitMeas, DiscountNo {
      where = "AGREEMENT_ID = :AgreementId and MIN_QUANTITY = :MinQuantity and VALID_FROM = :ValidFrom and ASSORTMENT_ID = :AssortmentId and ASSORTMENT_NODE_ID = :AssortmentNodeId and PRICE_UNIT_MEAS = :PriceUnitMeas and DISCOUNT_NO = :DiscountNo";
   }

   attribute DiscountType Text {
      editable = [ETag = null];
      format = uppercase;
   }
   attribute CalculationBasis Number {
      editable = [false];
      format = ifscurrency;
   }
   attribute Discount Number {
      label = "Discount (%)";
   }
   attribute DiscountAmount Number {
      label = "Discount Amt/Curr";
      format = ifscurrency;
   }
   attribute PriceCurrency Number {
      label = "Net Price/Curr";
      editable = [ETag = null];
      format = ifscurrency;
   }
   attribute DiscountLineNo Number {
      label = "Discount Line No";
   }
   reference DiscountTypeRef(DiscountType) to SalesDiscountType(DiscountType) {
      label = "Discount Type";
   }
}

--------------------------------- FUNCTIONS ---------------------------------
function DiscountType List<Entity(SalesDiscountType)> {
   parameter DiscountType Text;
   where = "OBJSTATE != 'Blocked' ";
}

---------------------------------- ACTIONS ----------------------------------

action CalcDiscount {
   initialcheck AgreementAssortmentDealInitialCheck(AgreementId, AssortmentId, AssortmentNodeId, MinQuantity, ValidFrom, PriceUnitMeas);
   parameter AgreementId Text;
   parameter MinQuantity Number;
   parameter ValidFrom Date;
   parameter PriceUnitMeas Text;
   parameter AssortmentId Text;
   parameter AssortmentNodeId Text;
   ludependencies = AgreementAssortDiscount;
}

action UpdateParent {
   initialcheck none;
   parameter ObjKey Text;
   ludependencies = AgreementAssortmentDealVirtual;
}

action UpdateDiscountLineNo {
   initialcheck AgreementAssortmentDealInitialCheck(AgreementId, AssortmentId, AssortmentNodeId, MinQuantity, ValidFrom, PriceUnitMeas);
   parameter AgreementId Text;
   parameter AssortmentId Text;
   parameter AssortmentNodeId Text;
   parameter MinQuantity Number;
   parameter ValidFrom Date;
   parameter PriceUnitMeas Text;
   parameter DiscountNo Number;
   parameter CreateDiscount Boolean;
   ludependencies = AgreementAssortDiscount, AgreementAssortmentDeal;
}