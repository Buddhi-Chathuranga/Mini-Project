-------------------------------------------------------------------------------------------------
-- Date        Sign     History
-- ----------  ------   -------------------------------------------------------------------------
-- 2021-11-15  ChBnlk   SC21R2-5075, Created.
-------------------------------------------------------------------------------------------------

fragment QuickCustOrdAddFromOrderAssistant;
component ORDER;
layer Core;
description "Use this assistant to add part lines from other orders in Quick Customer Order Registration.";

--------------------------------- FRAGMENTS ---------------------------------
include fragment OrdersPerSiteLovSelector;
include fragment SalesPartActiveLovSelector;

----------------------------- CLIENT FRAGMENTS ------------------------------
assistant AddFromOrderAssistant using AddFromOrderSet {
   label = "Add From Order";
   savemode = OnLostFocus;
   input(Contract, CustomerNo);
   output(Objkey);

   steps {
      step {
         group AddFromOrderGroup;
         markdowntext {
            text = "All lines shown here will be added to the Customer Order.";
            emphasis Info = [true];
         }
         list AddFromOrderLinesList(OrderLines);
      }
      final step {

      }
      cancelled step {

      }
   }
   finish command {

      enabled = [component.AddFromOrderLinesList.RowCount > 0];
      execute {
         call CheckOrderQuantity(Objkey) {
            when SUCCESS {
               exit OK;
            }
         }
      }
   }
   cancel command {
      execute {
         exit CANCEL;
      }
   }
}

group AddFromOrderGroup for  AddFromOrderVirtual {
   label = "";
   lov OrderNoRef with ReferenceOrdersPerSiteLovSelector using GetOrderNos(Contract, CustomerNo);
}

list AddFromOrderLinesList for AddFromOrderLinesVirtual {
   label = "Lines to Add";
   editmode = MultiRowEdit;
   multiselect = [true];
   crudactions {
      new {
         enabled = [false];
      }
   }

   field CatalogNoRef;

   field CatalogDescription {
      size = Large;
   }

   field ConditionCode;

   field BuyQtyDue {
      validate command {
         execute {
            if [BuyQtyDue <= 0] {
               warning("Part line with zero qty will not be added to the Customer Order.");
            }
         }
      }
   }

   field SalesUnitMeas;
}
--------------------------- PROJECTION FRAGMENTS ----------------------------

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset AddFromOrderSet for AddFromOrderVirtual;


--------------------------------- VIRTUALS ----------------------------------

virtual AddFromOrderVirtual {

   attribute OrderNo Text {
      maxlength = 12;
   }
   attribute CustomerNo Text {
      maxlength = 20;
   }
   attribute Contract Text {
      maxlength = 5;
   }

   reference OrderNoRef(OrderNo) to OrdersPerSiteLov(OrderNo) {
      label = "Order No";
   }

   array OrderLines() to AddFromOrderLinesVirtual();

}


virtual AddFromOrderLinesVirtual {
   ludependencies = AddFromOrderVirtual;

   attribute Contract Text {
      maxlength = 5;
   }
   attribute CatalogNo Text {
      maxlength = 25;
      format = uppercase;
      editable = [false];
   }
   attribute CatalogDescription Text {
      label = "Sales Part Description";
      maxlength = 200;
      editable = [false];
   }
   attribute BuyQtyDue Number {
      label = "Quantity";
   }
   attribute SalesUnitMeas Text {
      label = "Sales UoM";
      maxlength = 10;
      editable = [false];
   }
   attribute ConditionCode Text {
      maxlength = 10;
      format = uppercase;
      editable = [false];
   }

   reference CatalogNoRef(Contract, CatalogNo) to SalesPartActiveLov(Contract, CatalogNo) {
      label = "Sales Part No";
   }
}
--------------------------------- FUNCTIONS ---------------------------------

function GetOrderNos List < Entity(OrdersPerSiteLov) > {
   parameter Contract Text;
   parameter CustomerNo Text;
   where = "contract = :Contract AND customer_no = :CustomerNo AND rowstate != 'Cancelled'";
}

---------------------------------- ACTIONS ----------------------------------

action CheckOrderQuantity {
   initialcheck none;
   parameter ParentObjkey Text;
}
