----------------------------------------------------------------------------------------
-- Date        Sign       History
-- ----------  ------     --------------------------------------------------------------
-- 2020-05-11  AsZelk     SC2020R1-11118, Added OrderNoRef to enable zoom for Order No.
-- 2020-01-29  Kagalk     GESPRING20-1624, Added modify_date_applied functionality.
-- 2019-07-23  RaVdlk     SCUXXW4-21758, Removed  unused references and attributes
-- 2019-05-17  fgusse     SCUXXW4-20685, Added ludependencies DocumentText
-- 2018-03-11  ERRALK     SCUXXW4-17250, Added Dependency Annotation for the relevant fields.
-- 2018-08-30  Akhalk     SCUXXW4-1396, Converted from tbwReturnMaterialOverview using MTG Version: 1.23
----------------------------------------------------------------------------------------
projection ReturnMaterialAuthorizationLinesHandling;
component ORDER;
layer Core;
description "Use this window to search and view all return material authorization lines";
category Users;
include fragment SalesPartGtinNoLovSelector;
include fragment TaxCalcStructureActiveSelector;
include fragment AllSalesPartActiveLovSelector;
include fragment CustOrdCust2Selector;
include fragment OutputTypeLovSelector;
include fragment MpccomPhraseTextLovSelector;
include fragment DocumentText;
include fragment CoRmaLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset ReturnMaterialLineSet for ReturnMaterialLine;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity ReturnMaterialLine {
   crud = Read;
   from = "return_material_join_uiv";
   ludependencies = DocumentText;

   attribute RmaNo Number {
      editable = [false];
   }
   attribute RmaLineNo Number {
      editable = [false];
   }
   attribute DateRequested Date {
      fetch = "DATE_REQUESTED";
      label = "Date Requested";
      required = [true];
   }
   attribute CustomerNo Text {
      fetch = "CUSTOMER_NO";
      label = "Customer No";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute ConfigurationId Text {
      editable = [ETag = null];
   }
   attribute ReturnReasonCode Text {
      label = "Return Reason";
      required = [true];
      format = uppercase;
   }
   attribute QtyReceived Number {
      label = "Total Received Qty";
   }
   attribute ReturnUom Text {
      fetch = "RETURN_MATERIAL_LINE_API.Get_Sales_Unit_Meas(RMA_NO,RMA_LINE_NO)";
      label = "Return UoM";
      maxlength = 2000;
      editable = [false];
   }
   attribute QtyReturnedInv Number {
      label = "Returned Inv Qty";
   }
   attribute QtyScrapped Number {
      label = "Scrapped Qty";
   }
   attribute RelNo Text {
      label = "Del No";
   }
   attribute RentalNo Text {
      fetch = "CUSTOMER_ORDER_LINE_API.GET_PRIMARY_RENTAL_NO(ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO)";
      label = "Rental No";
      maxlength = 2000;
      editable = [false];
   }
   attribute FeeCode Text {
      label = "Tax Code";
      required = [true];
   }
   attribute TaxClassId Text {
      label = "Tax Class";
      editable = [ETag != null];
   }
   attribute TaxCalcStructureId Text {
      required = [true];
   }
   attribute DeliveryType Text {
      editable = [false];
   }
   attribute DebitInvoiceNo Text {
      label = "Debit/Corr Inv No";
   }
   attribute DateReturned Date {
      label = "Return Completed";
   }
   attribute CurrencyCode Text {
      fetch = "CURRENCY_CODE";
      label = "Currency Code";
      maxlength = 3;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute SaleUnitPrice Number {
      label = "Price/Curr";
      format = ifscurrency;
   }
   attribute BaseSaleUnitPrice Number {
      format = ifscurrency;
   }
   attribute UnitPriceInclTax Number {
      label = "Price Incl Tax/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute BaseUnitPriceInclTax Number {
      editable = [false];
      format = ifscurrency;
   }
   attribute GrossAmtBase Number {
      fetch = "RETURN_MATERIAL_LINE_API.Get_Total_Base_Price_Incl_Tax(RMA_NO, RMA_LINE_NO)";
      label = "Gross Amt/Base";
      editable = [false];
      format = ifscurrency;
   }
   attribute GrossAmtCurr Number {
      fetch = "RETURN_MATERIAL_LINE_API.Get_Line_Total_Price_Incl_Tax(RMA_NO, RMA_LINE_NO)";
      label = "Gross Amt/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute CurrencyRate Number {
      fetch = "Order_Currency_Rate_Util_API.Get_Fin_Curr_Rate(CURRENCY_RATE, COMPANY, CURRENCY_CODE)";
      label = "Currency Rate";
      required = [true];
   }
   attribute PurchaseOrderNo Text {
      label = "Customer's PO No";
   }
   attribute NetAmountBase Number {
      fetch = "RETURN_MATERIAL_LINE_API.Get_Line_Total_Base_Price(RMA_NO, RMA_LINE_NO)";
      label = "Net Amount/Base";
      editable = [false];
      format = ifscurrency;
   }
   attribute NetAmountCurr Number {
      fetch = "RETURN_MATERIAL_LINE_API.Get_Line_Total_Price(RMA_NO, RMA_LINE_NO)";
      label = "Net Amount/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute TaxAmountBase Number {
      fetch = "Return_Material_Line_API.Get_Total_Tax_Amount_Base(RMA_NO,RMA_LINE_NO)";
      label = "Tax Amount/Base";
      editable = [false];
      format = ifscurrency;
   }
   attribute TaxAmountCurr Number {
      fetch = "Return_Material_Line_API.Get_Total_Tax_Amount_Curr(RMA_NO,RMA_LINE_NO)";
      label = "Tax Amount/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute CreditApproverId Text {
      editable = [ETag = null];
   }
   attribute CreditCorrInvoiceNo Text {
      fetch = " Customer_Order_Inv_Head_api.get_invoice_no_by_id(CREDIT_INVOICE_NO)";
      label = "Credit/Corr Invoice No";
      maxlength = 50;
      editable = [false];
   }
   attribute CreditInvoiceItemId Number {
      label = "Credit/Corr Invoice Line Pos";
   }
   attribute ReturnApproverId Text {
      fetch = "RETURN_APPROVER_ID";
      label = "Coordinator";
      maxlength = 20;
      editable = [ETag = null];
      format = uppercase;
   }
   attribute CustRef Text {
      fetch = "CUST_REF";
      label = "Reference";
      maxlength = 30;
   }
   attribute ReferenceName Text {
      fetch = "Contact_Util_API.Get_Cust_Contact_Name(CUSTOMER_NO, CUSTOMER_NO_ADDR_NO, CUST_REF)";
      label = "Reference Name";
      maxlength = 200;
      editable = [false];
   }
   attribute HeadState Text {
      fetch = "HEAD_STATE";
      label = "Header Status";
      maxlength = 253;
   }
   attribute CancelReason Text {
      editable = [ETag != null];
   }
   attribute GTIN Text {
      fetch = "PART_GTIN_API.Get_Default_Gtin_No(CATALOG_NO)";
      label = "GTIN";
      maxlength = 14;
      editable = [false];
   }
   attribute RebateBuilderDb Boolean("TRUE", "FALSE") {
      fetch = "REBATE_BUILDER_DB";
      label = "Rebate Builder";
   }
   attribute Notes Boolean("TRUE", "FALSE") {
      fetch = "DECODE( note_text, NULL, 'FALSE', 'TRUE' )";
      label = "Notes";
      editable = [false];
   }
   attribute DocumentText Boolean("TRUE", "FALSE") {
      fetch = "DECODE(Document_Text_API.Note_Id_Exist(NOTE_ID), '1', 'TRUE', 'FALSE')";
      label = "Document Text";
      editable = [false];
   }
   attribute PartNo Text {
      label = "Inventory Part No";
      editable = [ETag != null];
   }
   attribute CustomersCompany2 Text {
      fetch = "Site_API.Get_Company(Cust_Ord_Customer_API.Get_Acquisition_Site(CUSTOMER_NO))";
      maxlength = 2000;
      editable = [false];
      format = uppercase;
   }
   attribute CustomersCompany3 Text {
      fetch = "Cust_Ord_Customer_API.Get_Acquisition_Site(CUSTOMER_NO)";
      maxlength = 2000;
      editable = [false];
   }
   attribute Company Text {
      editable = [ETag != null];
   }
   attribute RentalDb Boolean("TRUE", "FALSE") {
      fetch = "RENTAL_DB";
      label = "Rental";
      editable = [false];
   }
   attribute PartShortageExist Number {
      fetch = "Shortage_Demand_API.Shortage_Exists(CONTRACT, PART_NO)";
   }
   attribute PartShortageFlagDb Text {
      fetch = "Inventory_Part_API.Get_Shortage_Flag_Db(CONTRACT, PART_NO)";
   }
   attribute SystemParameterShortageFlag Text {
      fetch = "Mpccom_System_Parameter_API.Get_Parameter_Value1('SHORTAGE_HANDLING')";
      editable = [false];
   }
   @DynamicComponentDependency EXPCTR
   attribute ExportLicenseStatusForFindAndConnect Text {
      fetch = "EXP_LICENSE_CONNECT_HEAD_API.GET_STATE_BY_REF(RMA_NO,RMA_LINE_NO,NULL,NULL,'RMA')";
      label = "Export License Status for Find and Connect";
      editable = [false];
   }
   attribute Condition Text {
      fetch = "RETURN_MATERIAL_LINE_API.Get_Allowed_Operations__(RMA_NO, RMA_LINE_NO)";
      label = "Condition";
      maxlength = 2000;
      editable = [false];
   }
   attribute ReturnToContract Text {
      fetch = "RETURN_TO_CONTRACT";
      label = "Return to Site";
      maxlength = 5;
      editable = [ETag = null];
   }
   attribute ReturnToVendorNo Text {
      fetch = "RETURN_TO_VENDOR_NO";
      label = "Return to Supplier";
      maxlength = 20;
      editable = [ETag = null];
   }
   attribute OriginatingRmaNo Number {
      fetch = "ORIGINATING_RMA_NO";
      label = "Originating RMA No";
      editable = [ETag = null];
   }
   attribute ReceiptRmaNo Number {
      fetch = "RECEIPT_RMA_NO";
      label = "Receipt RMA No";
      editable = [ETag = null];
   }
   attribute QtyToReturnInv Number {
      fetch = "(QTY_TO_RETURN * CONV_FACTOR / INVERTED_CONV_FACTOR)";
   }
   attribute InventoryUom Text {
      fetch = "Inventory_Part_API.Get_Unit_Meas(CONTRACT, PART_NO)";
   }
   attribute SupplierReturnReason Text {
      fetch = "RETURN_MATERIAL_LINE_API.Get_Supplier_Return_Reason(RMA_NO, RMA_LINE_NO)";
   }
   -- gelr:modify_date_applied, begin
   attribute ArrivalDate Date;
   attribute ModifyDateAppliedEnabled Boolean("TRUE", "FALSE") {
      fetch = "Company_Localization_Info_API.Get_Parameter_Value_Db(COMPANY, 'MODIFY_DATE_APPLIED') ";
   }
   -- gelr:modify_date_applied, end
   reference ConditionCodeRef(ConditionCode) to ConditionCode(ConditionCode);
   reference InventoryPartRef(Contract, PartNo) to InventoryPart(Contract, PartNo);
   reference TaxClassRef(Company, TaxClassId) to TaxClass(Company, TaxClassId);
   reference DeliveryTypeRef(Company, DeliveryType) to DeliveryType(Company, DelivTypeId);
   reference SalesPartRef(Contract, CatalogNo) to SalesPart(Contract, CatalogNo);
   reference CustomerNoRef(CustomerNo) to CustOrdCust2(CustomerNo) {
      label = "Customer No";
   }
   reference CatalogNoRef(Contract, CatalogNo) to AllSalesPartActiveLov(Contract, CatalogNo) {
      label = "Sales Part No";
   }
   @DynamicComponentDependency CFGCHR
   reference ConfigurationIdRef(PartNo, ConfigurationId) to ConfigurationSpec(PartNo, ConfigurationId) {
      label = "Configuration ID";
   }
   reference ReturnReasonCodeRef(ReturnReasonCode) to ReturnMaterialReason(ReturnReasonCode) {
      label = "Return Reason";
   }
   reference ReturnUomRef(ReturnUom) to IsoUnit(UnitCode) {
      label = "Return UoM";
   }
   reference FeeCodeRef(Company, FeeCode) to StatutoryFee(Company, FeeCode) {
      label = "Tax Code";
   }
   reference TaxCalcStructureIdRef(Company, TaxCalcStructureId) to TaxCalcStructureActive(Company, TaxCalcStructureId) {
      label = "Tax Calculation Structure";
   }
   reference CreditApproverIdRef(CreditApproverId) to OrderCoordinator(AuthorizeCode) {
      label = "Credit Approver ID";
   }
   reference CancelReasonRef(CancelReason) to OrderCancelReason(CancelReason) {
      label = "Cancellation Reason";
   }
   reference GTINRef(Contract, GTIN) to SalesPartGtinNoLov(Contract, GtinNo) {
      label = "GTIN";

   }
   reference OrderNoRef(OrderNo) to CoRmaLov(OrderNo) {
      label = "Order No";
   }
}

