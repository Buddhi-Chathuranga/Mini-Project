
--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2021-02-10  RavDlk  SC2020R1-12320, Added ludependency for the action DeliverNonInvLineWithDiff to refersh the page.
-- 2020-12-02  MaRalk  SCZ-11882, Modified query names CustomerOrderLine, CustomerOrderReservation as
-- 2020-12-02          CustOrderLineForDelivLineWithDiff and CustOrdReservationForDelivLineWithDiff Respectively.
-- 2020-12-02          Removed references to CustomerOrderLine and instead used attributes defined in the queries.
-- 2019-07-08  KuBalk  SCUXXW4-22178, Actions DeliverNonInvLineWithDiffAndClose and DeliverInventoryLineWithDiffAndClose are removed.
-- 2019-06-06  JaBalk  SCUXXW4-21993, Corrected misc issues.
-- 2019-05-08  RasDlk  SCUXXW4-15857,15696,15695,18910, Implemented the code related to InputUoM.
-- 2018-10-01  RuLiLk  SCUXXW4-8400, Created the structure DeliverLineWithDiffStructure to use in the dialog DeliverNonInvLineWithDiffDialog.
-- 2018-09-21  Dinglk  SCUXXW4-9150, Converted form frmDeliverOrderLinesWithDiff using MTG Version: 1.24
--------------------------------------------------------------------------------------

projection DeliverCustomerOrderLineWithDifferences;
component ORDER;
layer Core;
description "Use this API to deliver the customer order lines according to a pick list with possible deviations in the quantity.";
category Users;
include fragment IntorderPartLovSelector;
include fragment NonRentalSalesPartLovSelector;
include fragment CustOrdCust1Selector;
include fragment CustomerOrderLineInitialCheck;
include fragment InputUnitOfMeasure;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset CustomerOrderLineSet for CustOrderLineForDelivLineWithDiff;
entityset CustomerOrderReservationSet for CustOrdReservationForDelivLineWithDiff;

------------------------------ ENTITY DETAILS -------------------------------

query CustOrderLineForDelivLineWithDiff {
   from = "customer_order_join";
   lu = CustomerOrderLine;
   keys = OrderNo, LineNo, RelNo, LineItemNo;
   where = "ORDER_OBJSTATE IN ('Released', 'Reserved', 'Picked', 'PartiallyDelivered') AND LINE_ITEM_NO >= 0 AND Cust_Order_Load_List_API.Get_Load_Id(ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO) IS NULL AND (QTY_PICKED > 0 OR (SUPPLY_CODE_DB != 'PD' AND QTY_TO_SHIP > 0)) AND SHIPMENT_CONNECTED_DB = 'FALSE' AND (USE_PRE_SHIP_DEL_NOTE_DB = 'FALSE' OR (CATALOG_TYPE_DB = 'NON' AND USE_PRE_SHIP_DEL_NOTE_DB = 'TRUE')) ";

   attribute OrderNo Text {
      maxlength = 100;
   }
   attribute CustomerOrderLineState Text {
      fetch = "objstate";
      label = "Status";
      maxlength = 50;
      editable = [false];
      insertable = [false];
      updatable = [false];
   }
   attribute LineNo Text;
   attribute RelNo Text {
      label = "Del No";
   }
   attribute LineItemNo Number {
      label = "Item No";
   }
   attribute Contract Text;
   attribute CustomerNo Text;
   attribute ProjectId Text {
      label = "Project ID";
   }
   attribute ConditionCode Text;
   attribute CloseTolerance Number;
   attribute SalesUnitMeas Text;
   attribute NonInventoryPart Boolean("TRUE", "FALSE") {
      fetch = "decode(PART_NO, NULL, 'TRUE', 'FALSE')";
      label = "Non-Inventory Part";
   }
   attribute InputUoM Boolean("TRUE", "FALSE") {
      fetch = "Customer_Order_Line_API.Is_Uom_Group_Connected(CONTRACT,PART_NO)";
      label = "Input UoM";
   }
   attribute PackageComponent Boolean("TRUE", "FALSE") {
      fetch = "decode(LINE_ITEM_NO, 0, 'FALSE', -1, 'FALSE' , 'TRUE')";
      label = "Package Component";
   }
   attribute CatalogNo Text;
   attribute CatalogDesc Text {
      label = "Description";
   }
   attribute ConfigurationId Text {
      label = "Configuration ID";
   }
   attribute PlannedDeliveryDate Timestamp {
      label = "Planned Date";
   }
   attribute PromisedDeliveryDate Timestamp {
      label = "Promised Date";
   }
   attribute PlannedShipDate Timestamp;
   attribute PlannedShipPeriod Text {
      label = "Period";
   }
   attribute PartOwnershipDb Enumeration(PartOwnership) {
      label = "Ownership";
   }
   attribute Owner Text {
      fetch = "Customer_Order_Line_API.Get_Owner_For_Part_Ownership(ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO, PART_OWNERSHIP_DB)";
      label = "Owner";
      maxlength = 2000;
   }
   attribute UsesShipmentInventory Number {
      fetch = "Customer_Order_API.Uses_Shipment_Inventory(ORDER_NO)";
      label = "Uses Shipment Inventory";
      maxlength = 5;
   }
   attribute OwningCustName Text {
      fetch = "CUST_ORD_CUSTOMER_API.Get_Name(OWNING_CUSTOMER_NO)";
      label = "Customer Name";
      maxlength = 2000;
   }
   attribute ActivitySeq Number {
      label = "Activity Sequence";
      maxlength = 10;
   }
   attribute SalesQtyPicked Number {
      fetch = "Customer_Order_Line_API.Calc_Sales_Qty_To_Deliver(ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO)";
      label = "Sales Qty Picked";
   }
   attribute SalesQtytoDeliver Number {
      fetch = "Customer_Order_Line_API.Calc_Sales_Qty_To_Deliver(ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO)";
      label = "Sales Qty to Deliver";
   }
   attribute CatchQtytoDeliver Number {
      fetch = "Deliver_Customer_Order_API.Get_Catch_Qty_To_Deliver(ORDER_NO,LINE_NO,REL_NO,LINE_ITEM_NO)";
      label = "Catch Qty to Deliver";
   }
   attribute CatchUnitMeas Text {
      fetch = "Inventory_Part_API.Get_Enabled_Catch_Unit_Meas(CONTRACT,PART_NO)";
      maxlength = 2000;
   }
   attribute RouteId Text;
   attribute RouteDescription Text {
      fetch = "Delivery_Route_API.Get_Description(ROUTE_ID)";
      maxlength = 2000;
   }
   attribute PartNo Text {
      label = "Unit Meas3";
   }
   attribute VendorNo Text {
      label = "Deliver-from Supplier";
      fetch = "vendor_no";
      editable = [false];
      insertable = [false];
      updatable = [false];
   }

   reference OrderNoRef(OrderNo) to CustomerOrder(OrderNo) {
      label = "Order No";
   }
   reference ContractRef(Contract) to Site(Contract) {
      label = "Site";
   }
   reference CustomerNoRef(CustomerNo) to CustOrdCust1(CustomerNo) {
      label = "Customer No";
   }
   reference CatalogNoRef(Contract, CatalogNo) to NonRentalSalesPartLov(Contract, CatalogNo) {
      label = "Sales Part No";
   }
   reference PlannedShipPeriodRef(PlannedShipPeriod) to WorkTimePeriod(Period) {
      label = "Period";
   }
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Route ID";
   }

   array DetailCustomerOrderReservation(OrderNo, LineNo, RelNo, LineItemNo) to CustOrdReservationForDelivLineWithDiff(OrderNo, LineNo, RelNo, LineItemNo);

   action CancelDeliverLine {
      supportwarnings = [true];
   }
}

---------------------------------- QUERIES ----------------------------------

query CustOrdReservationForDelivLineWithDiff {
   from = "deliver_customer_order_diff";
   keys = OrderNo, LineNo, RelNo, LineItemNo, Contract, PartNo, ConfigurationId, LocationNo, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq, HandlingUnitId;

   attribute QtyToDeliver  Number {
      label = "Qty to Deliver";
      fetch = "QTY_PICKED";
      editable = [true];
      updatable = [true];
   }
   attribute CatchQtyToDeliver  Number {
      editable = [true];
      fetch = "";
   }
   attribute OrderNo Text {
      fetch = "ORDER_NO";
      label = "Order No";
      maxlength = 12;
      editable = [false];
      format = uppercase;
   }
   attribute LineNo Text {
      fetch = "LINE_NO";
      label = "Line No";
      maxlength = 4;
      editable = [false];
   }
   attribute RelNo Text {
      fetch = "REL_NO";
      label = "Del No";
      maxlength = 4;
      editable = [false];
   }
   attribute LineItemNo Number {
      fetch = "LINE_ITEM_NO";
      label = "Line Item No";
      editable = [false];
   }
   attribute Contract Text {
      fetch = "CONTRACT";
      label = "Site";
      maxlength = 5;
      editable = [false];
      format = uppercase;
   }
   attribute QtyPicked Number {
      fetch = "QTY_PICKED";
      label = "Picked Inv Qty";
      editable = [false];
   }
   attribute CatchQty Number {
      fetch = "CATCH_QTY";
      label = "Picked Catch Qty";
      editable = [false];
   }
   attribute InputUomGroupId Text {
      fetch = "Inventory_Part_API.Get_Input_Unit_Meas_Group_Id(contract, part_no)";
      label = "Input UoM Group ID";
      maxlength = 30;
      editable = [false];
   }
   attribute InputUom Text {
      fetch = "input_unit_meas";
      label = "Input UoM";
      editable = [ETag != null];
   }
   attribute InputQty Number {
      fetch = "input_qty";
      label = "Input Qty";
      editable = [ETag != null];
   }
   attribute InputConversion Number {
      fetch = "input_conv_factor";
      label = "Input Conversion Factor";
      editable = [false];
   }
   attribute InputValue Text {
      fetch = "input_variable_values";
      label = "Input Values";
      maxlength = 2000;
      editable = [false];
   }
   attribute MultiplePicking Text {
      fetch = "multiple_picking";
      label = "Multiple Picking";
      editable = [false];
   }
   attribute PartNo Text {
      fetch = "PART_NO";
      label = "Inventory Part No";
      maxlength = 25;
      editable = [false];
      format = uppercase;
   }
   attribute ConfigurationId Text {
      fetch = "CONFIGURATION_ID";
      label = "Configuration ID";
      maxlength = 50;
      editable = [false];
      format = uppercase;
   }
   attribute CatchUoM Text {
      fetch = "Inventory_Part_API.Get_Enabled_Catch_Unit_Meas(CONTRACT,PART_NO)";
      label = "Catch UoM";
      maxlength = 2000;
      editable = [false];
   }
   attribute LocationNo Text {
      fetch = "LOCATION_NO";
      label = "Location No";
      maxlength = 35;
      editable = [false];
   }
   attribute HandlingUnitId Number {
      fetch = "HANDLING_UNIT_ID";
      label = "Handling Unit ID";
      editable = [false];
   }
   attribute TypeDescription Text {
      fetch = "Handling_Unit_Type_API.Get_Description(Handling_Unit_API.Get_Handling_Unit_Type_Id(HANDLING_UNIT_ID))";
      label = "Type Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute Warehouse Text {
      fetch = "INVENTORY_LOCATION_API.Get_Warehouse(CONTRACT,LOCATION_NO)";
      label = "Warehouse ID";
      maxlength = 2000;
      editable = [false];
   }
   attribute BayId Text {
      fetch = "INVENTORY_LOCATION_API.Get_Bay_No(CONTRACT,LOCATION_NO)";
      label = "Bay ID";
      maxlength = 2000;
      editable = [false];
   }
   attribute RowId Text {
      fetch = "INVENTORY_LOCATION_API.Get_Row_No(CONTRACT,LOCATION_NO)";
      label = "Row ID";
      maxlength = 2000;
      editable = [false];
   }
   attribute TierId Text {
      fetch = "INVENTORY_LOCATION_API.Get_Tier_No(CONTRACT,LOCATION_NO)";
      label = "Tier ID";
      maxlength = 2000;
      editable = [false];
   }
   attribute BinId Text {
      fetch = "INVENTORY_LOCATION_API.Get_Bin_No(CONTRACT,LOCATION_NO)";
      label = "Bin ID";
      maxlength = 2000;
      editable = [false];
   }
   attribute LotBatchNo Text {
      fetch = "LOT_BATCH_NO";
      label = "Lot/Batch No";
      maxlength = 20;
      editable = [false];
   }
   attribute SerialNo Text {
      fetch = "SERIAL_NO";
      label = "Serial No";
      maxlength = 50;
      editable = [false];
   }
   attribute ConditionCode Text {
      fetch = "Customer_Order_Line_API.Get_Condition_Code(ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO)";
      editable = [false];
   }
   attribute ConditionCodeDescription Text {
      fetch = "Condition_Code_API.Get_Description(Customer_Order_Line_API.Get_Condition_Code(ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO))";
      label = "Condition Code Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute WaivDevRejNo Text {
      fetch = "WAIV_DEV_REJ_NO";
      label = "W/D/R No";
      maxlength = 15;
      editable = [false];
   }
   attribute EngChgLevel Text {
      fetch = "ENG_CHG_LEVEL";
      label = "Ec";
      maxlength = 6;
      editable = [false];
   }
   attribute AvailabilityControlDescription Text {
      fetch = "PART_AVAILABILITY_CONTROL_API.Get_Description(INVENTORY_PART_IN_STOCK_API.Get_Availability_Control_Id(CONTRACT,PART_NO,CONFIGURATION_ID,LOCATION_NO,LOT_BATCH_NO,SERIAL_NO,ENG_CHG_LEVEL,WAIV_DEV_REJ_NO,ACTIVITY_SEQ,HANDLING_UNIT_ID))";
      label = "Availability Control Description";
      maxlength = 2000;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute SubProjectDescription Text {
      fetch = "ACTIVITY_API.Get_Sub_Project_Description(ACTIVITY_SEQ)";
      label = "Sub Project Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute ActivitySeq Number {
      fetch = "ACTIVITY_SEQ";
      label = "Activity Sequence";
      maxlength = 10;
      editable = [false];
   }
   attribute TopParentHandlingUnitID Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Handl_Unit_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Handling Unit ID";
      maxlength = 2000;
      editable = [false];
   }
   attribute TopParentHandlingUnitType Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Hu_Type_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Handling Unit Type ID";
      maxlength = 2000;
      editable = [false];
   }
   attribute TopParentTypeDescription Text {
      fetch = "Handling_Unit_Type_API.Get_Description(Handling_Unit_API.Get_Top_Parent_Hu_Type_Id(HANDLING_UNIT_ID))";
      label = "Top Parent Handling Unit Type Desc";
      maxlength = 2000;
      editable = [false];
   }
   attribute TopParentSSCC Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Sscc(HANDLING_UNIT_ID)";
      label = "Top Parent SSCC";
      maxlength = 2000;
      editable = [false];
   }
   attribute TopParentAltHandlingUnitLabelID Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Alt_Hu_Label_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Alt Handling Unit Label ID";
      maxlength = 2000;
      editable = [false];
   }
   attribute ConvFactor Number {
      fetch = "CUSTOMER_ORDER_LINE_API.Get_Conv_Factor(ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO)";
      maxlength = 2000;
      editable = [false];
   }
   attribute InvertedConvFactor Number {
      fetch = "CUSTOMER_ORDER_LINE_API.Get_Inverted_Conv_Factor(ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO)";
      maxlength = 2000;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute SubProjectId Text {
      fetch = "ACTIVITY_API.Get_Sub_Project_Id(ACTIVITY_SEQ)";
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ActivityNo Text {
      fetch = "ACTIVITY_API.Get_Activity_No(ACTIVITY_SEQ)";
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ActivityDescription Text {
      fetch = "Activity_API.Get_Description(ACTIVITY_SEQ)";
      editable = [false];
   }
   attribute CloseTolerance Number {
      fetch = "CUSTOMER_ORDER_LINE_API.Get_Close_Tolerance(ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO)";
      editable = [false];
   }

   reference InventoryPartRef(Contract, PartNo) to InventoryPart(Contract, PartNo);
   reference HandlingUnitRef(HandlingUnitId) to HandlingUnit(HandlingUnitId);
   reference InventoryPartInStockRef(Contract, PartNo, ConfigurationId, LocationNo, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq, HandlingUnitId) to InventoryPartInStock(Contract, PartNo, ConfigurationId, LocationNo, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq, HandlingUnitId);
   reference InputUomRef(InputUom) to InputUnitMeas(UnitCode) {
      label = "Input UoM";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- ACTIONS ----------------------------------

action DeliverNonInvLineWithDiff {
   initialcheck CustomerOrderLineInitialCheck(OrderNo, LineNo, RelNo, LineItemNo);
   ludependencies = CustOrderLineForDelivLineWithDiff, CustOrdReservationForDelivLineWithDiff;
   supportwarnings = [true];

   parameter OrderNo      Text;
   parameter LineNo       Text;
   parameter RelNo        Text;
   parameter LineItemNo   Number;
   parameter CloseLine    Number;
   parameter QtyToDeliver Number;
}

action DeliverInventoryLineWithDiff {
   initialcheck CustomerOrderLineInitialCheck(OrderNo, LineNo, RelNo, LineItemNo);
   ludependencies = CustOrderLineForDelivLineWithDiff, CustOrdReservationForDelivLineWithDiff;
   supportwarnings = [true];

   parameter OrderNo   Text;
   parameter LineNo    Text;
   parameter RelNo     Text;
   parameter LineItemNo Number;
   parameter CloseLine  Number;
   parameter Selection   LongText;
}

action ValidateQtyToDeliver {
   initialcheck none;
   parameter QtyToDeliver   Number;
   parameter QtyPicked      Number;
}

--------------------------------- FUNCTIONS ---------------------------------

function CheckAllLicenseConnected Number {
   parameter OrderNo   Text;
}

-------------------------------- STRUCTURES ---------------------------------

structure DeliverLineWithDiffStructure {
   attribute QuantityToDeliver Number {
      label = "Quantity To Deliver";
   }
   attribute CloseLine Boolean("TRUE", "FALSE") {
      label = "Close Line";
      required = [true];

   }
}
--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

