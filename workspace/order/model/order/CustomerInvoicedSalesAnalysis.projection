
--  Date       Sign    History
--  ------     ------  ---------------------------------------------------------
-- 2019-10-25  Satglk  SCXTEND-963, Salesman renamed to Salesperson
-- 2018-08-15  KhVese  SCUXXW4-12122, Renamed methods UniqueCurrencyForSelectedRec, GetAmountForSelectedRec and removed methods UniqueCurrencyForAllRec and GetAmountForAllRec
-- 2018-08-15          Also renamed structure AmountInfo to TotalCostAndDomAmountStruc
-- 2018-05-25  HPetse  SCUXXW4-924, Added description and category
-- 2018-05-25  RaVdlk  SCUXXW4-924, Overridden the CustomerOrder entity
-- 2018-05-24  KhVese  SCUXXW4-924, Removed structure CurrencyInfo and added methods UniqueCurrencyForAllRec and GetAmountForAllRec
-- 2018-05-24          And renamed old methods.
-- 2018-05-17  RaVdlk  SCUXXW4-924, Added the structure and function signatures
-- 2018-05-03  RaVdlk  SCUXXW4-924, Converted tbwInvoiceStatistics using MTG Version: 1.16
--  ------     ------  ---------------------------------------------------------

projection CustomerInvoicedSalesAnalysis;
component ORDER;
layer Core;
description "Use this API to view what has been invoiced per customer and invoice. Advanced invoices are not included.";
category Users;
include fragment CustOrdCust1Selector;
include fragment SalesPartLov2Selector;
include fragment UserAllowedSiteLovSelector;
include fragment CustOrdCust2Selector;
include fragment CustomerOrderInvHeadUivSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset CustomerOrderInvItems for CustomerOrderInvItem;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity CustomerOrderInvHead {
   crud = Read;

}
@Override
query CustomerOrderInvItem {
   from = "customer_order_inv_item_join";
   lu = CustomerOrderInvItem;
   keys = InvoiceId, ItemId, Company {
      where = "INVOICE_ID = :InvoiceId and ITEM_ID = :ItemId and COMPANY = :Company";
   }
   attribute DeliveryCustomer Text {
      fetch = "DELIVERY_CUSTOMER";
      label = "Customer";
   }
   attribute CustomerName Text {
      fetch = "CUST_ORD_CUSTOMER_API.Get_Name(DELIVERY_CUSTOMER)";
      label = "Customer Name";
   }
   attribute InvoiceId Number {
      fetch = "INVOICE_ID";
      label = "Preliminary Invoice No";
   }
   attribute SeriesId Text {
      fetch = "SERIES_ID";
      label = "Series ID";
   }
   attribute InvoiceNo Text {
      fetch = "INVOICE_NO";
      label = "Invoice No";
   }
   attribute ItemId Number {
      fetch = "ITEM_ID";
      label = "Pos";
   }
   attribute CatalogNo Text {
      fetch = "CATALOG_NO";
      label = "Invoice Item";
   }
   attribute Description Text {
      fetch = "DESCRIPTION";
      label = "Description";
   }
   attribute Contract Text {
      fetch = "CONTRACT";
      label = "Site";
   }
   attribute InvoicedQty Number {
      fetch = "INVOICED_QTY";
      label = "Invoiced Quantity";
   }
   attribute SaleUm Text {
      fetch = "SALE_UM";
      label = "Sales UoM";
   }
   attribute PriceQuantity Number {
      label = "Price Qty";
      fetch = "price_conv * NVL(invoiced_qty, 0)";
   }
   attribute PriceUm Text {
      fetch = "PRICE_UM";
      label = "Price UoM";
   }
   attribute SalesPriceBase Number {
      fetch = "DECODE(ORDER_NO,NULL,SALE_UNIT_PRICE*(CURR_RATE /DIV_FACTOR),DECODE(CHARGE_GROUP,NULL,NVL(SALE_UNIT_PRICE*(CURR_RATE / DIV_FACTOR),Sales_Part_API.Get_List_Price(CONTRACT, CATALOG_NO)),SALE_UNIT_PRICE*(CURR_RATE / DIV_FACTOR)))";
      label = "Sales Price/Base";
      format = ifscurrency;
   }
   attribute SaleUnitPrice Number {
      fetch = "SALE_UNIT_PRICE";
      label = "Sales Price/Curr";
      format = ifscurrency;
   }
   attribute InvoiceDate Date {
      fetch = "INVOICE_DATE";
      label = "Invoice Date";
   }
   attribute NetDomAmount Number {
      fetch = "NET_DOM_AMOUNT";
      label = "Net Amt/Base";
      format = ifscurrency;
   }
   attribute NetCurrAmount Number {
      fetch = "NET_CURR_AMOUNT";
      label = "Net Amt/Curr";
      format = ifscurrency;
   }
   attribute CurrencyCode Text {
      fetch = "CURRENCY_CODE";
      label = "Invoice Currency";
      maxlength = 3;
      required = [true];
   }
   attribute ConditionCode Text {
      fetch = "Customer_Order_Inv_Item_API.Get_Condition_Code(COMPANY, INVOICE_ID, ITEM_ID)";
      label = "Condition Code";
   }
   attribute ConditionCodeDescription Text {
      fetch = "Condition_Code_API.Get_Description(Customer_Order_Inv_Item_API.Get_Condition_Code(COMPANY, INVOICE_ID, ITEM_ID))";
      label = "Description";
   }
   attribute OrderNo Text {
      fetch = "ORDER_NO";
      label = "Order No";
   }
   attribute LineNo Text;
   attribute ReleaseNo Text;
   attribute LineItemNo Number;
   attribute CatalogGroup Text {
      fetch = "CATALOG_GROUP";
      label = "Sales Group";
   }
   attribute Region Text {
      fetch = "DECODE(LINE_NO, NULL,(DECODE(ORDER_NO,NULL,DECODE(Return_Material_API.Get_Ship_Addr_Flag_Db(RMA_NO),'N', Cust_Ord_Customer_Address_API.Get_Region_Code(DELIVERY_CUSTOMER, Return_Material_API.Get_Ship_Addr_No(RMA_NO)), ''),Customer_Order_API.Get_Region_Code(ORDER_NO))),Customer_Order_Line_API.Get_Region_Code(ORDER_NO, LINE_NO, RELEASE_NO, LINE_ITEM_NO))";
      label = "Region";
   }
   attribute District Text {
      fetch = "DECODE(LINE_NO, NULL,(DECODE(ORDER_NO, NULL,DECODE(Return_Material_API.Get_Ship_Addr_Flag_Db(RMA_NO),'N', Cust_Ord_Customer_Address_API.Get_District_Code(DELIVERY_CUSTOMER, Return_Material_API.Get_Ship_Addr_No(RMA_NO)), ''),Customer_Order_API.Get_District_Code(ORDER_NO))),Customer_Order_Line_API.Get_District_Code(ORDER_NO, LINE_NO, RELEASE_NO, LINE_ITEM_NO))";
      label = "District";
   }
   attribute Market Text {
      fetch = "DECODE(ORDER_NO, NULL, Cust_Ord_Customer_API.Get_Market_Code(DELIVERY_CUSTOMER), Customer_Order_API.Get_Market_Code(ORDER_NO))";
      label = "Market";
   }
   attribute Country Text {
      fetch = "DECODE(LINE_NO,NULL,(DECODE(ORDER_NO, NULL, DECODE(Return_Material_API.Get_Ship_Addr_Flag_Db(RMA_NO),'N', Customer_Info_Address_API.Get_Country_Code(DELIVERY_CUSTOMER,Return_Material_API.Get_Ship_Addr_No(RMA_NO)), Return_Material_API.Get_Ship_Addr_Country_Code(RMA_NO)),Customer_Order_Address_API.Get_Country_Code(ORDER_NO))),Cust_Order_Line_Address_API.Get_Country_Code(ORDER_NO, LINE_NO,RELEASE_NO,LINE_ITEM_NO))";
      label = "Country";
   }
   attribute Salesman Text {
      fetch = "DECODE(ORDER_NO, NULL, Cust_Ord_Customer_API.Get_Salesman_Code(DELIVERY_CUSTOMER), Customer_Order_API.Get_Salesman_Code(ORDER_NO))";
      label = "Salesperson";
   }
   attribute Coordinator Text {
      fetch = "DECODE(ORDER_NO, NULL, Return_Material_API.Get_Return_Approver_Id(RMA_NO), Customer_Order_API.Get_Authorize_Code(ORDER_NO))";
      label = "Coordinator";
   }
   attribute Party Text {
      fetch = "PARTY";
   }
   attribute PartyType Text {
      fetch = "PARTY_TYPE";
   }
   attribute Identity Text {
      fetch = "IDENTITY";
      label = "Invoice Customer ID";
   }
   attribute Name Text {
      fetch = "CUST_ORD_CUSTOMER_API.Get_Name(IDENTITY)";
      label = "Name";
   }
   attribute PriceAdjustment Boolean("TRUE", "FALSE") {
      fetch = "PRICE_ADJUSTMENT";
      label = "Price Adjustment";
   }
   attribute Company Text {
      fetch = "COMPANY";
      label = "Company";
   }
   attribute PriceConv Number {
      fetch = "PRICE_CONV";
      label = "Price Conv Factor";
   }
   attribute  RebateGroup  Text {
      fetch = "Sales_Part_API.Get_Sales_Part_Rebate_Group(CONTRACT, CATALOG_NO)";
      label = "Sales Part Rebate Group";
   }
   attribute PriceListNo Text {
      fetch = "Customer_Order_Line_API.Get_Price_List_No(ORDER_NO, LINE_NO, RELEASE_NO, LINE_ITEM_NO)";
      label = "Price ListNo";
   }
   attribute BaseCurr Text {
      fetch = " Company_Finance_API.Get_Currency_Code(COMPANY)";
      label = "Base Currency";
   }
   attribute CustomerStatisticGroup Text {
      fetch = "CUST_ORD_CUSTOMER_API.Get_Cust_Grp(DELIVERY_CUSTOMER)";
      label = "Customer Statistic Group";
   }
   reference SalesPartRef(Contract, CatalogNo) to SalesPart(Contract, CatalogNo);

   reference CompanyFinanceRef(Company) to CompanyFinance(Company);

   reference CustomerOrderRef(OrderNo) to CustomerOrder(OrderNo);

   reference CustOrdCustomerRef(DeliveryCustomer) to CustOrdCustomer(CustomerNo);

   reference CustomerOrderLineRef(OrderNo, LineNo, ReleaseNo, LineItemNo) to CustomerOrderLine(OrderNo, LineNo, RelNo, LineItemNo);

   reference DeliveryCustomerRef(DeliveryCustomer) to CustOrdCust1(CustomerNo) {
      label = "Customer";
   }

   reference InvoiceIdRef(InvoiceId) to CustomerOrderInvHeadUiv(InvoiceId) {
      label = "Preliminary Invoice No";
   }
   reference CatalogNoRef(Contract, CatalogNo) to SalesPartLov2(Contract, CatalogNo) {
      label = "Invoice Item";
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }

   reference RebateGroupRef(RebateGroup) to SalesPartRebateGroup(SalesPartRebateGroup) {
      label = "Rebate Group";
   }

   reference BaseCurrRef(BaseCurr) to IsoCurrency(CurrencyCode) {
      label = "Base Curr";
   }

   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Invoice Currency";
   }

   reference OrderNoRef(OrderNo) to CustomerOrder(OrderNo) {
      label = "Order No";
   }

   reference CustomerStatisticGroupRef(CustomerStatisticGroup) to CustomerGroup(CustGrp) {
      label = "Customer Statistic Group";
   }

   reference CatalogGroupRef(CatalogGroup) to SalesGroup(CatalogGroup) {
      label = "Sales Group";
   }

   reference RegionRef(Region) to SalesRegion(RegionCode) {
      label = "Region";
   }

   reference DistrictRef(District) to SalesDistrict(DistrictCode) {
      label = "District";
   }

   reference MarketRef(Market) to SalesMarket(MarketCode) {
      label = "Market";
   }

   reference CountryRef(Country) to IsoCountry(CountryCode) {
      label = "Country";
   }

   reference SalesmanRef(Salesman) to SalesPartSalesman(SalesmanCode) {
      label = "Salesperson";
   }

   reference CoordinatorRef(Coordinator) to OrderCoordinator(AuthorizeCode) {
      label = "Coordinator";
   }

   reference PriceListNoRef(PriceListNo) to SalesPriceList(PriceListNo) {
      label = "Price List No";
   }
   reference IdentityRef(Identity) to CustOrdCust2(CustomerNo) {
      label = "Invoice Customer ID";
   }
}

@Override
entity CustomerOrder {

   attribute AuthorizeCode Text {
      label = "Coordinator";

   }
   attribute BillAddrNo Text {
      label = "Doc Addr";

   }
   attribute FreightPriceListNo Text {
      label = "Price List No";

   }
   attribute VendorNo Text {
      label = "Deliver-from Supplier";

   }
}
-------------------------------- STRUCTURES ---------------------------------

structure StructDlgIvcStatistics {
   attribute InvoiceSum Number {
      label = "Total Invoiced";
      format = ifscurrency;
   }

   attribute ContrMargin Number {
      label = "Contribution Margin";
      format = ifscurrency;
   }
   attribute ContrMarginRate Number {
      format = decimal;

   }

   attribute BaseCurr Text {
      label = "BaseCurrCode";
   }
   attribute CurrCode Text {
      label = "CurrCode";
   }
}

structure TotalCostAndDomAmountStruc {
   attribute InvoiceAmount Number;
   attribute Total Number;
}

--------------------------------- FUNCTIONS ---------------------------------

action GetTotalCostAndDomAmount Structure(TotalCostAndDomAmountStruc) {
   initialcheck none;
   parameter Selection List<Text>;
}

action GetUniqueCurrencyCode Text {
   initialcheck none;
   parameter Selection List<Text>;
}
