--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-05-21  MaEelk  SCUXXW4-9357, Maded Export Visible work and Concatenated Descriptions.
-- 2018-05-11  MaEelk  SCUXXW4-9357, Added logic for RMBS and computed fields.
-- 2018-04-26  MaEelk  SCUXXW4-9357, Converted from frmRebateFinalSettlement using MTG Version: 1.16
--------------------------------------------------------------------------------------
projection RebateFinalSettlementHandling;
component ORDER;
layer Core;
description "Use this API to analyze and specify if the aggregated final rebate transactions shown in this API should be invoiced or not.";
category Users;
include fragment CustOrdCust2Selector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset RebateFinalAggHeads for RebateFinalAggHead {
   context Company(Company);

}

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity RebateFinalAggHead {
   crud = Read, Update;
   attribute AggregationNo Number {
      label = "Settlement";
      editable = [false];
   }
   attribute FromDate Date {
      editable = [false];
   }
   attribute ToDate Date {
      editable = [false];
   }
   attribute DateCreated Date {
      editable = [false];
   }
   attribute AgreementId Text {
      label = "Agreement";
      editable = [false];
   }
   attribute HierarchyId Text {
      label = "Hierarchy";
      editable = [false];
   }
   attribute Description Text {
      fetch = "CUSTOMER_HIERARCHY_API.Get_Description(HIERARCHY_ID)";
      label = "Description";
      editable = [false];
   }
   attribute CustomerLevel Number {
      label = "Level";
      editable = [false];
   }
   attribute HierarchyLevelName Text {
      fetch = "CUSTOMER_HIERARCHY_LEVEL_API.Get_Name(HIERARCHY_ID,CUSTOMER_LEVEL)";
      label = "Name";
      editable = [false];
   }
   attribute Invoiced Boolean("TRUE", "FALSE") {
      fetch = "REBATE_FINAL_AGG_HEAD_API.Get_Invoiced(AGGREGATION_NO)";
      label = "Invoiced";
      editable = [false];
      required = [true];
   }
   attribute DoNotInvoiceDb Boolean("TRUE", "FALSE") {
      fetch = "DO_NOT_INVOICE_DB";
      label = "Do Not Invoice";
      required = [true];
   }
   attribute Company Text {
      editable = [false];
   }
   computed TotalPeriodicRebateAmt Number {
      compute = sum(DetailFinalSettlementLine.InvoicedRebateAmount);
   }
   computed TotalFinalRebateAmt Number {
      compute = sum(DetailFinalSettlementLine.FinalRebateAmount);
   }
   computed TotalAmtToInvoice Number {
      compute = sum(DetailFinalSettlementLine.AmountToInvoice);
   }
   reference RebateAgreementRef(AgreementId) to RebateAgreement(AgreementId);
   reference CustomerNoRef(CustomerNo) to CustOrdCust2(CustomerNo) {
      label = "Customer";
   }
   reference HierarchyIdRef(HierarchyId) to CustomerHierarchy(HierarchyId);
   reference CustomerLevelRef(HierarchyId, CustomerLevel) to CustomerHierarchyLevel(HierarchyId, CustomerLevel);

   array DetailFinalSettlementLine(AggregationNo) to RebateFinalAggLine(AggregationNo);
   action CreateRebateCreditInvoce {
      parameter InvoiceCreationType Text;
   }
}

@Override
entity RebateFinalAggLine {
   crud = Read;
   attribute AggregationNo Number {
      label = "Settlement";
   }
   attribute LineNo Text;
   attribute Company Text {
      fetch = "REBATE_FINAL_AGG_HEAD_API.Get_Company(Aggregation_No)";
   }

   attribute RebateType Text;
   attribute SalesPartRebateGroup Text {
      label = "Rebate Group";
   }
   attribute AssortmentId Text {
      label = "Assortment";
   }
   attribute AssortmentNodeId Text {
      label = "Assortment Node";
   }
   attribute CustomerLevel Number {
      label = "Hierarchy Level";
   }
   attribute TaxCode Text;
   attribute InvoicedRebateAmount Number {
      label = "Periodic Rebate Amt/Curr";
      format = ifscurrency;
   }
   attribute InvoiceLineAmount Number {
      label = "Invoice Line Sales Amount/Base";
      format = ifscurrency;
   }
   attribute InvLineCurrAmount Number {
      label = "Invoice Line Sales Amount/Curr";
      format = ifscurrency;
   }
   attribute InvoiceLineGrossAmount Number {
      label = "Invoice Line Gross Amount/Base";
      format = ifscurrency;
   }
   attribute InvLineGrossCurrAmount Number {
      label = "Invoice Line Gross Amount/Curr";
      format = ifscurrency;
   }
   attribute FinalRebateRate Number {
      label = "Final Rebate";
   }
   attribute FinalRebateAmount Number {
      label = "Final Rebate Amt/Curr";
      format = ifscurrency;
   }
   attribute AmountToInvoice Number {
      label = "Left to Invoice/Curr";
      format = ifscurrency;
   }
}

--------------------------------- FUNCTIONS ---------------------------------
function MultipleTaxInAggrLines Text {
   parameter AggregationNo Number;
}

---------------------------------- ACTIONS ----------------------------------

