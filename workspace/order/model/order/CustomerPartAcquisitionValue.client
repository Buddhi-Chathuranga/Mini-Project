--------------------------------------------------------------------------------------
-- Date        Sign     History
-- ----------  ------   --------------------------------------------------------------
-- 2019-11-07  FRBESE   SCXTEND-1156, Changed CustPartAcqValueNavEntry entry to correct navigator parent.
-- 2019-06-26  MaAuse   SCUXXW4-21215, Added call to RefreshAfterNavigate() in UpdateCustomerPartAcquisitioCommand.
-- 2018-07-11  HaPulk   SCUXXW4-8867, Included fragment UpdateCustomerPartAcquisitionValue to load
-- 2018-07-11           dialog "Update Customer Part Acquisition Value"
-- 2018-05-18  MalLlk   SCUXXW4-11244, Converted from frmCustPartAcqValue using MTG Version: 1.18
--------------------------------------------------------------------------------------

client CustomerPartAcquisitionValue;
component ORDER;
layer Core;
projection CustomerPartAcquisitionValueHandling;
include fragment CustOrdCust1Selector;
-- This is used to load dialog "Update Customer Part Acquisition Value"
include fragment UpdateCustomerPartAcquisitionValue;


----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry CustPartAcqValueNavEntry parent OrderNavigator.CustomerCustomerOwnedStock at index 100 {
      label = "Customer Part Acquisition Value";
      page Form;
   }
}


-------------------------------- MAIN PAGES ---------------------------------
page Form using CustomerPartAcquisitionValues {
   label = "Customer Part Acquisition Value";
   startupmode = search;
   selector CustPartAcqValueSelector;
   group CustPartAcqValueGroup;
   list CustPartAcqValueHistList(CustPartAcqValueHistArray);

   commandgroup CommandGroupCmdGroup {

      command UpdateCustomerPartAcquisitioCommand;
   }
}


-------------------------------- ASSISTANTS ---------------------------------


--------------------------------- COMMANDS ----------------------------------
command UpdateCustomerPartAcquisitioCommand for CustPartAcqValue {
   label = "Update Customer Part Acquisition Value";
   enabled = [true];

   mode = SelectedRecords;

   variable VarAcquisitionValueNum {
      type = Number;
   }
   variable VarCustCurrencyCodeStr {
      type = Text;
   }
   variable VarCustPartAcqValueSourceStr {
      type = Text;
   }
   variable VarNoteTextStr {
      type = Text;
   }

   execute {
      set VarAcquisitionValueNum = AcquisitionValue;

      set VarCustPartAcqValueSourceStr = CustPartAcqValueSource;
      call GetCurrencyCode(CustomerNo) into VarCustCurrencyCodeStr;

      dialog UpdateCustPartAcqValueDialog(VarAcquisitionValueNum, VarCustCurrencyCodeStr, VarCustPartAcqValueSourceStr)
      into(VarAcquisitionValueNum, VarCustPartAcqValueSourceStr, VarNoteTextStr) {
         when OK {
            if [(VarAcquisitionValueNum != AcquisitionValue) or(VarCustCurrencyCodeStr != CurrencyCode) or(VarCustPartAcqValueSourceStr != CustPartAcqValueSource)] {
               call ModifyCustPartAcqValue(VarAcquisitionValueNum, VarCustCurrencyCodeStr, VarCustPartAcqValueSourceStr, VarNoteTextStr);
               navigate "page/CustomerPartAcquisitionValue/Form?$filter=CustomerNo eq $[CustomerNo] and PartNo eq $[PartNo] and SerialNo eq $[SerialNo] and LotBatchNo eq $[LotBatchNo]";
               call RefreshAfterNavigate();
            }
         }
         when CANCEL {
            exit;
         }
      }

   }

}
--------------------------------- SELECTORS ---------------------------------
@Override
selector CustPartAcqValueSelector for CustPartAcqValue {
   label = "${PartNo} - ${LotBatchNo} - ${SerialNo} - ${CustomerNo}";
   static PartNo;
   static LotBatchNo;
   static SerialNo;
   static CustomerNo;
}


---------------------------------- GROUPS -----------------------------------
group CustPartAcqValueGroup for CustPartAcqValue {
   label = "";
   field PartNoRef {
      size = Small;
   }
   field PartDescription;
   field LotBatchNo {

      size = Small;
   }

   field SerialNo;
   lov CustomerNoRef with ReferenceCustOrdCust1Selector {
      contactwidget {
         enabled = [true];
         source = Customer;
      }
      size = Small;
   }
   field CustomerName;
   measure AcquisitionValue(CurrencyCode);
   field CustPartAcqValueSource;
}


----------------------------------- LISTS -----------------------------------
list CustPartAcqValueHistList for CustPartAcqValueHist {
   label = "";
   orderby = HistoryNo desc;

   field DateChanged;
   field IdentityRef {
      contactwidget {
         enabled = [Identity != null];
         source = Person;
      }
   }
   measure AcquisitionValue(CurrencyCode);
   field CustPartAcqValueSource;
   field NoteText {
      size = Large;
   }
}


----------------------------------- CARDS -----------------------------------


---------------------------------- DIALOGS ----------------------------------


---------------------------------- CHARTS -----------------------------------


--------------------------------- CALENDARS ---------------------------------


---------------------------------- SHEETS -----------------------------------


----------------------------- STATE INDICATORS ------------------------------


----------------------------------- TREES -----------------------------------


---------------------------------- PLUGINS ----------------------------------


------------------------------- IMAGE VIEWERS -------------------------------
