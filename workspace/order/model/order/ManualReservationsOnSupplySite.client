
--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-03-12  Kubalk  SCUXXW4-17244, Dependency annotations added.
-- 2019-02-15  KuBalk  SCUXXW4-1577,  Added code review corrections.
-- 2018-12-31  KuBalk  SCUXXW4-14996, Implemented View configuration RMB
-- 2018-04-10  RoJalk  SCUXXW4-9572, Converted from frmSupplyReservation/tbwSingleSupplyReservations using MTG Version: 1.16
--------------------------------------------------------------------------------------

client ManualReservationsOnSupplySite;
component ORDER;
layer Core;
projection ManualReservationsOnSupplySiteHandling;
include fragment UserAllowedSiteLovSelector;
include fragment CustOrdCust1Selector;
include fragment IntorderPartLovSelector;
include fragment ManualReservationsOnSupplySiteBase;

warningsenabled = ReserveManually, InventoryPartInStock;
----------------------------- NAVIGATOR ENTRIES -----------------------------

navigator {
   entry ManualReservationsOnSupplySiteNavEntry parent OrderNavigator.SalesReservation at index 500 {
      label = "Manual Reservations on Supply Site";
      page Form;
   }
}

-------------------------------- MAIN PAGES ---------------------------------

page Form using ManualReservationsOnSupplySiteSet {
   label = "Manual Reservations on Supply Site";
   startupmode = search;
   stateindicator CustomerOrderLineStateIndicator;
   selector CustomerOrderLineSelector;

   arrange {
      group CustomerOrderInfoGroup;
      group DeliveryInfoGroup;
   }
   group PartInfoGroup;
   list ManualReservationsOnSupplySiteLineList using GetManualReservationsOnSupplySiteLine(OrderNo, LineNo, RelNo, LineItemNo, ConditionCode, PartOwnershipDb, Owner, SupplySite, PartNo, ConfigurationId, ConfirmDeliveriesDb, ConsignmentStockDb, RentalDb, QtytoReserve, ReservedQty);

   command ViewConfiguration;
}

@Override
stateindicator CustomerOrderLineStateIndicator for ManualReservationsOnSupplySite {
   state "Released" {
      completed = 25%;
      emphasis Progress3 = [Objstate = "Released"];
   }
   state "Reserved" {
      completed = 42%;
      emphasis Progress5 = [Objstate = "Reserved"];
   }
   state "Picked" {
      completed = 58%;
      emphasis Progress7 = [Objstate = "Picked"];
   }
   state "PartiallyDelivered" {
      completed = 57%;
      emphasis Progress8 = [Objstate = "PartiallyDelivered"];
   }
   state "Delivered" {
      completed = 83%;
      emphasis Progress10 = [Objstate = "Delivered"];
   }
   state "Invoiced" {
      completed = 100%;
      emphasis Progress12 = [Objstate = "Invoiced"];
   }
   state "Cancelled" {
      completed = 100%;
      emphasis StateCancelled = [Objstate = "Cancelled"];
   }
}

--------------------------------- SELECTORS ---------------------------------

@Override
selector CustomerOrderLineSelector for ManualReservationsOnSupplySite {
   label = "${PartNo}";
   static OrderNo;
   static LineNo;
   static RelNo;
   static PartNo;
   @DynamicComponentDependency PURCH
   static PartDescription;
   static ConfigurationId;
   badge Objstate {
      style = TextOnly;
      emphasis Progress3 = [Objstate = "Released"];
      emphasis Progress5 = [Objstate = "Reserved"];
      emphasis Progress7 = [Objstate = "Picked"];
      emphasis Progress8 = [Objstate = "PartiallyDelivered"];
      emphasis Progress10 = [Objstate = "Delivered"];
      emphasis Progress12 = [Objstate = "Invoiced"];
      emphasis StateCancelled = [Objstate = "Cancelled"];
   }
}

---------------------------------- GROUPS -----------------------------------

group CustomerOrderInfoGroup for ManualReservationsOnSupplySite {
   label = "Customer Order Information";
   field OrderNoRef;
   field LineNo {
      size = Small;
   }
   field RelNo {
      size = Small;
   }
   lov SupplySiteRef with UserAllowedSiteLovSelector {
      size = Small;
   }
   lov CustomerNoRef with CustOrdCust1Selector {
      description = CustomerNoRef.Name;
      contactwidget {
         enabled = [true];
         source = Customer;
      }
   }
   field Priority {
      size = Small;
   }
   field CustomerName {
      searchable = true;
      visible = [false];
   }
   field Owner {
      searchable = true;
      visible = [false];
   }
   field PartOwnership {
      searchable = true;
      visible = [false];
   }
   field CustomerInfoRef.Name {
      label = "Owning Customer Name";
      searchable = true;
      visible = [false];
   }
}
group DeliveryInfoGroup for ManualReservationsOnSupplySite {
   label = "Delivery Information";
   fieldset DeliveryInfoFieldSet;
}

group PartInfoGroup for ManualReservationsOnSupplySite {
   label = "Part Information";

   lov PartNoRef with IntorderPartLovSelector {
      size = Small;
   }
   @DynamicComponentDependency PURCH
   field PartDescription {
      searchable = false;
   }
   field ReservedQty {
      size = Small;
      searchable = false;
   }
   field QtytoReserve {
      size = Small;
      searchable = false;
   }
   field InventoryPartRef.UnitMeas {
      size = Small;
      label = "UoM";
      searchable = false;
   }
   field CatchUoM {
      size = Small;
      visible = [CatchUoM != null];
      searchable = false;
   }
   @DynamicComponentDependency CFGCHR
   field ConfigurationIdRef {
      size = Small;
   }
   lov ConditionCodeRef with ReferenceConditionCodeSelector {
      label = "Condition Code";
      size = Small;
      visible = [ConditionCode != null];
      description = ConditionCodeRef.Description;
   }
}

--------------------------------- COMMANDS ----------------------------------

command QtyReservedValidationCommand for InventoryPartInStock clone QtyReservedBaseValidationCommand {
   execute {
      super;
   }
}

command ViewConfiguration for ManualReservationsOnSupplySite {
   label = "View Configuration";
   mode = SingleRecord;
   enabled = [ConfigurationId != null and ConfigurationId != "*"];
   execute {
      set Usage = "CustomerOrder";
      set Mode = "View";
      navigate "assistant/PartConfigurationAssistant/EditConfiguration?$action=InitConfiguration{  VarUsage:$[Usage],
                                                                                                   VarMode:$[Mode],
                                                                                                   VarPartNo:$[PartNo],
                                                                                                   VarIdentity1: $[OrderNo],
                                                                                                   VarIdentity2:$[LineNo],
                                                                                                   VarIdentity3:$[RelNo],
                                                                                                   VarIdentity4:$[LineItemNo],
                                                                                                   VarConfigurationId:$[ConfigurationId],
                                                                                                   VarSupplySite:$[Contract]}";
   }
}

list ManualReservationsOnSupplySiteLineList clone ManualReservationsOnSupplySiteBaseList {
   crudactions {
      update action = ReserveManually;
   }
   field QtyReserved {
      validate command QtyReservedValidationCommand;
   }
   field CatchQtyOnhand;
   field PartOwnership {
      size = Large;
   }
   field Owner {
      size = Small;
   }

   fieldorder = QtyReserved, TotalQtyReserved, QtyOnhand, CatchQtyOnhand, LocationNo, HandlingUnitIdRef, HandlingUnitRef.HandlingUnitTypeId,
   TypeDescription, HandlingUnitRef.Sscc, HandlingUnitRef.AltHandlingUnitLabelId, Warehouse, BayNo, RowNo, TierNo, BinNo, LotBatchNo, SerialNo,
   EngChgLevel, WaivDevRejNo, InventoryPartInStockRef.AvailabilityControlId, AvailabilityControlDescription, ExpirationDate, ReceiptDate,
   PartOwnership, Owner, TopParentHandlingUnitID, TopParentHandlingUnitTypeID, TopParentHandlingUnitTypeDesc, TopParentSSCC,
   TopParentAltHandlingUnitLabelID;
}





