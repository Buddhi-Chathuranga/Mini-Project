------------------------------------------------------------------------------------------------------------
--
--  Logical unit: CreateCustomerRebateCreditInvoices
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
-- Date        Sign    History
-- ----------  ------  -------------------------------------------------------------------------------------
-- 2018-05-25  HPETSE  SCUXXW4-9365, Removed max length on number
-- 2018-05-24  STHOSE  SCUXXW4-9365, Added company to RebatePeriodicAggLine for export to Excel to work
-- 2018-05-21  KHVESE  SCUXXW4-9365, Converted from frmRebatePeriodicSettlement using MTG Version: 1.17
------------------------------------------------------------------------------------------------------------

projection RebatePeriodicSettlementHandling;
component ORDER;
layer Core;
description "Use this API to analyze and specify if the aggregated periodic rebate transactions shown in this window should be invoiced or not. It is possible
             to indicate this by selecting the Do Not Invoice check box. Further it is possible to create or create and print the rebate credit invoice.";
category Users;
include fragment CustOrdCust2Selector;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset RebatePeriodicAggHeads for RebatePeriodicAggHead {
   context Company(Company);
}

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity RebatePeriodicAggHead {
   crud = Read, Update;
   attribute AggregationNo Number {
      label = "Settlement No";
      editable = [false];
   }
   attribute CustomerNo Text {
      editable = [false];
   }
   attribute CustomerName Text {
      fetch = "CUST_ORD_CUSTOMER_API.Get_Name(CUSTOMER_NO)";
      label = "Name";
      maxlength = 2000;
      editable = [false];
   }
   attribute FromDate Date {
      editable = [false];
   }
   attribute ToDate Date {
      editable = [false];
   }
   attribute DateCreated Date {
      editable = [false];
   }
   attribute AgreementId Text {
      maxlength = 100;
      editable = [false];
   }
   attribute HierarchyId Text {
      editable = [false];
   }
   attribute Description Text {
      fetch = "CUSTOMER_HIERARCHY_API.Get_Description(HIERARCHY_ID)";
      label = "Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute CustomerLevel Number {
      label = "Level";
      editable = [false];
   }
   attribute LevelName Text {
      fetch = "CUSTOMER_HIERARCHY_LEVEL_API.Get_Name(HIERARCHY_ID,CUSTOMER_LEVEL)";
      label = "Level Name";
      maxlength = 2000;
      editable = [false];
   }
   attribute Invoiced Boolean("TRUE", "FALSE") {
      fetch = "REBATE_PERIODIC_AGG_HEAD_API.Get_Invoiced(AGGREGATION_NO)";
      label = "Invoiced";
      editable = [false];
   }
   attribute DoNotInvoiceDb Boolean("TRUE", "FALSE") {
      fetch = "DO_NOT_INVOICE_DB";
      label = "Do Not Invoice";
      required = [true];
   }
   attribute Company Text {
      maxlength = 100;
      editable = [false];
   }
   attribute InvoiceId Number {
      editable = [false];
   }
   computed TotalPeriodicRebateAmount1 Number {
      compute = sum(PeriodicSettlementLineArray.TotalRebateAmount);
      label = "Total Periodic Rebate Amt/Curr";
   }
   computed TotalRebateCostAmount Number {
      compute = sum(PeriodicSettlementLineArray.TotalRebateCostAmount);
      label = "Total Rebate Cost Amt/Curr";
   }
   reference RebateAgreementRef(AgreementId) to RebateAgreement(AgreementId);
   reference CustomerNoRef(CustomerNo) to CustOrdCust2(CustomerNo) {
      label = "Customer No";
   }
   reference HierarchyIdRef(HierarchyId) to CustomerHierarchy(HierarchyId);
   reference CustomerLevelRef(HierarchyId, CustomerLevel) to CustomerHierarchyLevel(HierarchyId, CustomerLevel);
   array PeriodicSettlementLineArray(AggregationNo) to RebatePeriodicAggLine(AggregationNo);

   action StartCreateRebateCreditInvoice {
      parameter StartEvent    Number;
   }

}

@Override
entity RebatePeriodicAggLine {
   crud = Read;
   attribute AggregationNo Number {
      editable = [false];
   }
   attribute LineNo Text {
      maxlength = 100;
      editable = [false];
   }
   attribute Company Text {
      fetch = "REBATE_PERIODIC_AGG_HEAD_API.Get_Company(Aggregation_No)";
   }
   attribute RebateType Text {
      editable = [false];
   }
   attribute SalesPartRebateGroup Text {
      editable = [false];
   }
   attribute AssortmentId Text {
      editable = [false];
   }
   attribute AssortmentNodeId Text {
      editable = [false];
   }
   attribute CustomerLevel Number {
      label = "Hierarchy Level";
      editable = [false];
   }
   attribute TaxCode Text {
      editable = [false];
   }
   attribute InvoiceAmount Number {
      label = "Invoice Amount/Base";
      editable = [false];
      format = ifscurrency;
   }
   attribute InvoiceCurrAmount Number {
      label = "Invoice Amount/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute InvoiceGrossAmount Number {
      label = "Invoice Gross Amount/Base";
      editable = [false];
      format = ifscurrency;
   }
   attribute InvoiceGrossCurrAmount Number {
      label = "Invoice Gross Amount/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute InvoicedQuantity Number {
      editable = [false];
   }
   attribute NetWeight Number {
      editable = [false];
   }
   attribute NetVolume Number {
      editable = [false];
   }
   attribute RebateRate Number {
      label = "Rebate %";
      editable = [false];
   }
   attribute RebateCostRate Number {
      label = "Rebate Cost %";
      editable = [false];
   }
   attribute PeriodicRebateAmount Number {
      label = "Rebate";
      editable = [false];
   }
   attribute RebateCostAmount Number {
      label = "Rebate Cost";
      editable = [false];
   }
   attribute TotalRebateAmount Number {
      label = "Rebate Amount/Curr";
   }
   attribute TotalRebateCostAmount Number {
      label = "Rebate Cost Amount/Curr";
   }
}

----------------------------------- QUERY -----------------------------------

--------------------------------- FUNCTION ----------------------------------

function CheckMultipleTaxInAggrLines Text {
   parameter AggregationNo Number;
}

---------------------------------- ACTION -----------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------


