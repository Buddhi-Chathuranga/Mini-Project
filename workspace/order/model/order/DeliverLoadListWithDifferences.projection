----------------------------------------------------------------------------------------
-- Date        Sign       History
-- ----------  ------     --------------------------------------------------------------
-- 2021-02-01  DhAplk     SC2020R1-11784, Replaced complex project views using Get methods if reference is read only.
-- 2018-02-11  KuBalk     SCUXXW4-15084, bug fixed.
-- 2018-12-10  ErRalk     SCUXXW4-1554, Converted from tbwShipInvPart using MTG Version 1.34
-- 2018-12-10  ErRalk     SCUXXW4-9490, Converted from frmShipInvDiff using MTG Version 1.34
-- 2018-12-04  KuBalk     SCUXXW4-9230, Converted from frmLoadListLineInv using MTG Version: 1.34
-- 2018-11-30  KuBalk     SCUXXW4-929, Converted from tbwLoadListLineNonInv using MTG Version: 1.34
-- 2018-11-30  KuBalk     SCUXXW4-9495, Converted from frmShipLoadListDiff using MTG Version: 1.34
----------------------------------------------------------------------------------------

projection DeliverLoadListWithDifferences;
component ORDER;
layer Core;
description "Manage CustOrderLoadListLine";
category Users;
include fragment IntorderPartAlternateLovSelector;
include fragment CoChargeJoinSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset CustOrderLoadListSet for CustOrderLoadList;
entityset CustOrderLoadListLineInvDetailsSet for CustOrderLoadListInventoryLineDetail;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity CustOrderLoadList {

   crud = Read;
   where = "LOAD_LIST_STATE_DB = 'NOTDEL'";
   supportwarnings = [true];
   ludependencies = CustOrderLoadList, CustOrderLoadListLine, CustomerOrderReservation;
   exclude attributes = Address1, Address2, Address3, Address4, Address5, Address6, Addr1, Addr2, Addr3, Addr4, Addr5, City, CountryCode, County, LoadListState, Name, State, NoteText, ZipCode;

   attribute LoadId Number {
      label = "Load List ID";
      required = [true];
   }
   attribute TotalVolume Number {
      fetch = "Cust_Order_Load_List_API.Sum_Total_Volume(load_id)";
      label = "Total Volume";
      editable = [false];
   }
   attribute GrossWeight Number {
      fetch = "Cust_Order_Load_List_API.Sum_Total_Weight_Gross(load_id)";
      label = "Gross Weight";
      editable = [false];
   }
   attribute NetWeight Number {
      fetch = "Cust_Order_Load_List_API.Sum_Total_Weight_Net(load_id)";
      label = "Net Weight";
      editable = [false];
   }

   computed InvListRowCount Number {
      compute = count(CustOrderLoadListLineInvArray);
   }

   computed NonInvListRowCount Number {
      compute = count(CustOrderLoadListLineArray);
   }

   array CustOrderLoadListLineArray(LoadId) to CustOrderLoadListNonInventoryLine(LoadId);
   array CustOrderLoadListLineInvArray(LoadId) to CustOrderLoadListInventoryLine(LoadId);
   action CancelDeliverLoadList {
      ludependencies = CustOrderLoadListLine, CustomerOrderReservation;
      supportwarnings = [true];
   }
   action DeliverLoadListWithDiff {
      ludependencies = CustOrderLoadListLine, CustomerOrderReservation;
      supportwarnings = [true];
   }
}
-- Non-Inventory tab
@Override
entity CustOrderLoadListNonInventoryLine using CustOrderLoadListLine {

   ludependencies = CustOrderLoadListLine, CustOrderLoadList;
   crud = Read, Update;
   where = "Customer_Order_Line_API.Get_Qty_To_Ship(ORDER_NO,LINE_NO,REL_NO,LINE_ITEM_NO) > 0";
   use attributes = QtyToDeliver, CloseLine, OrderNo, LineNo, RelNo, Volume, WeightGross, WeightNet, LineItemNo;

   attribute LoadId Number {
      label = "Load List ID";
   }
   attribute OrderNo Text {
      maxlength = 100;
   }
   attribute LineNo Text {
      maxlength = 100;
   }
   attribute CloseLine Boolean("TRUE", "FALSE") {
      fetch = "DECODE(close_line, 'TRUE', 'TRUE', 'FALSE')";
      label = "Close Line";
      editable = [true];
   }
   attribute RelNo Text {
      label = "Del No";
      maxlength = 100;
   }
   attribute WeightGross Number {
      label = "Gross Weight";
      editable = [false];
   }
   attribute WeightNet Number {
      label = "Net Weight";
   }
   @DynamicComponentDependency PROJ
   attribute ProgramID Text {
      fetch = "Project_API.Get_Program_Id(Customer_Order_Line_API.Get_Project_Id(order_no,line_no,rel_no,line_item_no))";
      label = "Program ID";
      maxlength = 10;
      editable = [false];
      format = uppercase;
   }
   @DynamicComponentDependency PROJ
   attribute ProgramDescription Text {
      fetch = "Project_Program_Global_API.Get_Description(Project_API.Get_Program_Id(Customer_Order_Line_API.Get_Project_Id(order_no,line_no,rel_no,line_item_no)))";
      label = "Program Description";
      maxlength = 2000;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute SubProjectDescription Text {
      fetch = "Activity_API.Get_Sub_Project_Description(Customer_Order_Line_API.Get_Activity_Seq(order_no,line_no,rel_no,line_item_no))";
      label = "Sub Project Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute ProjectID Text {
      fetch = "Customer_Order_Line_API.Get_Project_Id(ORDER_NO,LINE_NO,REL_NO,LINE_ITEM_NO)";
      label = "Project ID";
      maxlength = 10;
      editable = [false];
   }
   attribute ActivitySequence Number {
      fetch = "Customer_Order_Line_API.Get_Activity_Seq(ORDER_NO,LINE_NO,REL_NO,LINE_ITEM_NO)";
      label = "Activity Sequence";
      maxlength = 10;
      editable = [false];
   }
   attribute SalesPartNo Text {
      fetch = "Customer_Order_Line_API.Get_Catalog_No(ORDER_NO,LINE_NO,REL_NO,LINE_ITEM_NO)";
      label = "Sales Part No";
      maxlength = 2000;
      editable = [false];
   }
   attribute Contract Text {
      fetch = "Customer_Order_Line_API.Get_Contract(ORDER_NO,LINE_NO,REL_NO,LINE_ITEM_NO)";
      label = "Site";
      maxlength = 2000;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ProjectName Text {
      fetch = "Project_API.Get_Name(Customer_Order_Line_API.Get_Project_Id(order_no,line_no,rel_no,line_item_no))";
      label = "Project";
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ActivityNo Text {
      fetch = "Activity_API.Get_Activity_No(Customer_Order_Line_API.Get_Activity_Seq(order_no,line_no,rel_no,line_item_no))";
      label = "Activity ID";
   }
   @DynamicComponentDependency PROJ
   attribute SubProjectId Text {
      fetch = "Activity_API.Get_Sub_Project_Id(Customer_Order_Line_API.Get_Activity_Seq(order_no,line_no,rel_no,line_item_no))";
      label = "Sub Project ID";
   }
   @DynamicComponentDependency PROJ
   attribute ActivityDescription Text {
      fetch = "Activity_API.Get_Description(Customer_Order_Line_API.Get_Activity_Seq(order_no,line_no,rel_no,line_item_no))";
      label = "Activity Description";
   }
   reference CustomerOrderLineRef(OrderNo, LineNo, RelNo, LineItemNo) to CustomerOrderLine(OrderNo, LineNo, RelNo, LineItemNo);
   reference OrderNoRef(OrderNo) to CustomerOrderLine(OrderNo) {
      label = "Order No";
   }
   reference SalesPartNoRef(Contract, SalesPartNo) to SalesPart(Contract, CatalogNo) {
      label = "Sales Part No";
   }
   @DynamicComponentDependency PROJ
   reference ProjectIDRef(ProjectID) to Project(ProjectId) {
      label = "Project ID";
   }
   @DynamicComponentDependency PROJ
   reference ActivitySequenceRef(ActivitySequence) to Activity(ActivitySeq) {
      label = "Activity Sequence";
   }
}

-- Inventory tab
@Override
entity CustOrderLoadListInventoryLine using CustOrderLoadListLine {

   ludependencies = CustOrderLoadListLine, CustomerOrderReservation, CustOrderLoadList;
   crud = Read, Update;
   where = "Customer_Order_Line_API.Get_Qty_Picked( ORDER_NO,LINE_NO,REL_NO,LINE_ITEM_NO) > 0";
   use attributes = CloseLine, OrderNo, LineNo, RelNo, Volume, WeightGross, WeightNet, LineItemNo;

   attribute LoadId Number {
      label = "Load List ID";
   }
   attribute CloseLine Boolean("TRUE", "FALSE") {
      fetch = "DECODE(close_line, 'TRUE', 'TRUE', 'FALSE')";
      label = "Close Line";
      editable = [true];
   }
   attribute QtyToDeliver Number {
      fetch = "Deliver_Customer_Order_API.Get_Tot_Qty_To_Deliver(order_no,line_no,rel_no,line_item_no)";
      editable = [false];
   }
   attribute CatchQtyToDeliver Number {
      fetch = "Deliver_Customer_Order_API.Get_Tot_Catch_Qty_To_Deliver(order_no,line_no,rel_no,line_item_no)";
      label = "Catch Qty to Deliver";
      editable = [false];
   }
   attribute PickedCatchQty Number {
      fetch = "Deliver_Customer_Order_API.Get_Catch_Qty_To_Deliver(order_no,line_no,rel_no,line_item_no)";
      label = "Picked Catch Qty";
      editable = [false];
   }
   attribute InventoryUom Text {
      fetch = "Inventory_Part_API.Get_Unit_Meas(Customer_Order_Line_API.Get_Contract(order_no,line_no,rel_no,line_item_no),Customer_Order_Line_API.Get_Part_No(order_no,line_no,rel_no,line_item_no))";
      label = "Inventory UoM";
      maxlength = 2000;
      editable = [false];
   }
   attribute CatchUom Text {
      fetch = "Inventory_Part_API.Get_Enabled_Catch_Unit_Meas(Customer_Order_Line_API.Get_Contract(order_no,line_no,rel_no,line_item_no), Customer_Order_Line_API.Get_Part_No(order_no,line_no,rel_no,line_item_no))";
      label = "Catch UoM";
      maxlength = 10;
      editable = [false];
   }
   attribute OrderNo Text {
      maxlength = 100;
   }
   attribute LineNo Text {
      maxlength = 100;
   }
   attribute RelNo Text {
      label = "Del No";
      maxlength = 100;
   }
   attribute Description Text {
      fetch = "Inventory_Part_API.Get_Description(Customer_Order_Line_API.Get_Contract(order_no,line_no,rel_no,line_item_no),Customer_Order_Line_API.Get_Part_No(order_no,line_no,rel_no,line_item_no))";
      label = "Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute Volume Number {
      editable = [false];
   }
   attribute WeightGross Number {
      label = "Total Gross Weight";
      editable = [false];
   }
   attribute WeightNet Number {
      label = "Net Weight";
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ProgramID Text {
      fetch = "Project_API.Get_Program_Id(Customer_Order_Line_API.Get_Project_Id(order_no,line_no,rel_no,line_item_no))";
      label = "Program ID";
      maxlength = 10;
      editable = [false];
      format = uppercase;
   }
   @DynamicComponentDependency PROJ
   attribute ProgramDescription Text {
      fetch = "Project_Program_Global_API.Get_Description(Project_API.Get_Program_Id(Customer_Order_Line_API.Get_Project_Id(order_no,line_no,rel_no,line_item_no)))";
      label = "Program Description";
      maxlength = 2000;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute SubProjectID Text {
      fetch = "Activity_API.Get_Sub_Project_Id(Customer_Order_Line_API.Get_Activity_Seq(order_no,line_no,rel_no,line_item_no))";
      label = "Sub Project ID";
      maxlength = 2000;
      editable = [false];
      format = uppercase;
   }
   @DynamicComponentDependency PROJ
   attribute SubProjectDescription Text {
      fetch = "Activity_API.Get_Sub_Project_Description(Customer_Order_Line_API.Get_Activity_Seq(order_no,line_no,rel_no,line_item_no))";
      label = "Sub Project Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute UseShipmentInventory Number {
      fetch = "Customer_Order_API.Uses_Shipment_Inventory(order_no)";
      label = "Use Shipment Inventory";
      editable = [false];
   }
   attribute ProjectID Text {
      fetch = "Customer_Order_Line_API.Get_Project_Id(ORDER_NO,LINE_NO,REL_NO,LINE_ITEM_NO)";
      label = "Project Id";
      maxlength = 10;
      editable = [false];
   }
   attribute ActivitySeq Number {
      fetch = "Customer_Order_Line_API.Get_Activity_Seq(ORDER_NO,LINE_NO,REL_NO,LINE_ITEM_NO)";
      label = "Activity Sequence";
      maxlength = 10;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ProjectName Text {
      fetch = "Project_API.Get_Name(Customer_Order_Line_API.Get_Project_Id(order_no,line_no,rel_no,line_item_no))";
      label = "Project";
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ActivityNo Text {
      fetch = "Activity_API.Get_Activity_No(Customer_Order_Line_API.Get_Activity_Seq(order_no,line_no,rel_no,line_item_no))";
      label = "Activity ID";
   }
   @DynamicComponentDependency PROJ
   attribute ActivityDescription Text {
      fetch = "Activity_API.Get_Description(Customer_Order_Line_API.Get_Activity_Seq(order_no,line_no,rel_no,line_item_no))";
      label = "Activity Description";
   }
   reference CustomerOrderLineRef(OrderNo, LineNo, RelNo, LineItemNo) to CustomerOrderLine(OrderNo, LineNo, RelNo, LineItemNo);
   reference CatchUomRef(CatchUom) to IsoUnit(UnitCode) {
      label = "Catch UoM";
   }
   reference OrderNoRef(OrderNo) to CustomerOrderLine(OrderNo) {
      label = "Order No";
   }
   @DynamicComponentDependency PROJ
   reference ProjectIDRef(ProjectID) to Project(ProjectId) {
      label = "Project ID";
   }
   @DynamicComponentDependency PROJ
   reference ActivitySeqRef(ActivitySeq) to Activity(ActivitySeq) {
      label = "Activity Seq";
   }
   array ShipInvPartsArray(OrderNo, LineNo, RelNo, LineItemNo) to  CustOrderLoadListInventoryLineDetail(OrderNo, LineNo, RelNo, LineItemNo);
}

-- Inventory tab-Detail List
@Override
entity CustOrderLoadListInventoryLineDetail using CustomerOrderReservation {

   ludependencies = CustomerOrderReservation, CustOrderLoadListLine;
   crud = Read, Update;

   from = "deliver_customer_order";
   exec = "Customer_Order_Reservation_API";
   keys = OrderNo, LineNo, RelNo, LineItemNo, Contract, PartNo, ConfigurationId, LocationNo, HandlingUnitId, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq {
      where = "ORDER_NO = :OrderNo and LINE_NO = :LineNo and REL_NO = :RelNo and LINE_ITEM_NO = :LineItemNo and CONTRACT = :Contract and PART_NO = :PartNo and CONFIGURATION_ID = :ConfigurationId and LOCATION_NO = :LocationNo and HANDLING_UNIT_ID = :HandlingUnitId and LOT_BATCH_NO = :LotBatchNo and SERIAL_NO = :SerialNo and ENG_CHG_LEVEL = :EngChgLevel and WAIV_DEV_REJ_NO = :WaivDevRejNo and ACTIVITY_SEQ = :ActivitySeq";
   }
   use attributes = QtyPicked;
   crud = Read, Update;

   attribute PartNo Text {
      fetch = "part_no";
      label = "Part No";
      maxlength = 25;
      required = [true];
      editable = [false];
      format = uppercase;
   }
   attribute QtyToDeliver Number {
      fetch = "qty_to_deliver";
      label = "Qty to Deliver";
      required = [true];
   }
   attribute CatchQtyToDeliver Number {
      fetch = "catch_qty_to_deliver";
      label = "Catch Qty to Deliver";
      editable = [false];
   }
   attribute QtyPicked Number {
      fetch = "qty_picked";
      label = "Picked Qty";
      editable = [false];
   }
   attribute CatchQty Number {
      fetch = "catch_qty";
      label = "Picked Catch Qty";
      editable = [false];
   }
   attribute LocationNo Text {
      fetch = "location_no";
      label = "Location No";
      maxlength = 35;
      required = [true];
      editable = [false];
   }
   attribute HandlingUnitId Number {
      fetch = "handling_unit_id";
      label = "Handling Unit ID";
      required = [true];
      editable = [false];
   }
   attribute TypeDescription Text {
      fetch = "Handling_Unit_Type_API.Get_Description(Handling_Unit_API.Get_Handling_Unit_Type_Id(handling_unit_id))";
      label = "Type Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute LotBatchNo Text {
      fetch = "lot_batch_no";
      label = "Lot/Batch No";
      maxlength = 20;
      required = [true];
      editable = [false];
   }
   attribute SerialNo Text {
      fetch = "serial_no";
      label = "Serial No";
      maxlength = 50;
      required = [true];
      editable = [false];
   }
   attribute EngChgLevel Text {
      fetch = "eng_chg_level";
      label = "Rev No";
      maxlength = 6;
      required = [true];
      editable = [false];
   }
   attribute WaivDevRejNo Text {
      fetch = "waiv_dev_rej_no";
      label = "W/D/R No";
      maxlength = 15;
      required = [true];
      editable = [false];
   }
   attribute AvailabilityControlDescription Text {
      fetch = "Part_Availability_Control_API.Get_Description(Inventory_Part_In_Stock_API.Get_Availability_Control_Id(contract,part_no,configuration_id,location_no,lot_batch_no,serial_no,eng_chg_level,waiv_dev_rej_no,activity_seq,handling_unit_id))";
      label = "Availability Control Description";
      maxlength = 2000;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute SubProjectDescription Text {
      fetch = "Activity_API.Get_Sub_Project_Description(activity_seq)";
      label = "Sub Project Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute ActivitySeq Number {
      fetch = "activity_seq";
      label = "Activity Seq";
      required = [true];
      editable = [false];
   }
   attribute TopParentHandlingUnitID Number {
      fetch = "Handling_Unit_API.Get_Top_Parent_Handl_Unit_Id(handling_unit_id)";
      label = "Top Parent Handling Unit ID";
      maxlength = 2000;
      editable = [false];
   }
   attribute TopParentHandlingUnitTypeID Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Hu_Type_Id(handling_unit_id)";
      label = "Top Parent Handling Unit Type ID";
      maxlength = 2000;
      editable = [false];
   }
   attribute TopParentHandlingUnitTypeDesc Text {
      fetch = "Handling_Unit_Type_API.Get_Description(Handling_Unit_API.Get_Top_Parent_Hu_Type_Id(handling_unit_id))";
      label = "Top Parent Handling Unit Type Desc";
      maxlength = 2000;
      editable = [false];
   }
   attribute TopParentSSCC Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Sscc(handling_unit_id)";
      label = "Top Parent SSCC";
      maxlength = 2000;
      editable = [false];
   }
   attribute TopParentAltHandlingUnitLabelID Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Alt_Hu_Label_Id(handling_unit_id)";
      label = "Top Parent Alt Handling Unit Label ID";
      maxlength = 2000;
      editable = [false];
   }
   attribute CatchUnitEnable Text {
      fetch = "Part_Catalog_API.Get_Catch_Unit_Enabled_Db(PART_NO)";
   }
   @DynamicComponentDependency PROJ
   attribute ActivityNo Text {
      fetch = "Activity_API.Get_Activity_No(activity_seq)";
      label = "Activity ID";
   }
   @DynamicComponentDependency PROJ
   attribute SubProjectId Text {
      fetch = "Activity_API.Get_Sub_Project_Id(activity_seq)";
      label = "Sub Project ID";
   }
   @DynamicComponentDependency PROJ
   attribute ActivityDescription Text {
      fetch = "Activity_API.Get_Description(activity_seq)";
      label = "Activity Description";
   }

   reference HandlingUnitRef(HandlingUnitId) to HandlingUnit(HandlingUnitId);
   reference InventoryPartInStockRef(Contract, PartNo, ConfigurationId, LocationNo, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq, HandlingUnitId) to InventoryPartInStock(Contract, PartNo, ConfigurationId, LocationNo, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq, HandlingUnitId);
   @DynamicComponentDependency PROJ
   reference ActivityRef(ActivitySeq) to Activity(ActivitySeq);
   reference PartCatalogRef(PartNo) to PartCatalog(PartNo);
   reference LineItemNoRef(OrderNo, LineNo, RelNo, LineItemNo) to CustomerOrderLine(OrderNo, LineNo, RelNo, LineItemNo) {
      label = "Line Item No";
   }

   action ModifyQtyToDeliver {
      ludependencies = CustOrderLoadListLine;
      parameter QtyToDeliver Number;
      parameter CatchQtyToDeliver Number;
   }

}


------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

