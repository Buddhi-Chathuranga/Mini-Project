-------------------------------------------------------------------------------------------------
-- Date        Sign     History
-- ----------  ------   -------------------------------------------------------------------------
-- 2020-12-17  MaRalk   SC2020R1-11406, Handled attributes CommissionReceiver, Category, TemplateCustomer, QuickRegisteredCustomer
-- 2020-12-17           as enumerations instead of boolean.
-- 2019-10-25  Satglk   SCXTEND-963,  Salesman renamed to Salesperson
-- 2018-09-14  RasDlk   SCUXXW4-1046, Converted from tbwOverviewCust using MTG Version: 1.29
-------------------------------------------------------------------------------------------------

projection CustomersSalesSpecificInformationHandling;
component ORDER;
layer Core;
description "Use this API to view and to update customer's sales specific details.";
category Users;
include fragment OrderCoordinatorLovSelector;
include fragment SalesPartSalesmanLovSelector;
include fragment CustInfoContactLovPubSelector;
include fragment CustOrdCust2Selector;
include fragment CustomerInfoCustcategoryPubSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset CustOrdCustomerSet for CustOrdCustomer;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity CustOrdCustomer {
   crud = Read, Update;
   from = "cust_ord_customer_ent";
   keys = CustomerNo {
      where = "CUSTOMER_ID = :CustomerNo";
   }
   luname = "'CustomerInfo'";
   use attributes = Name, CurrencyCode, CustomerNoPay, CustGrp, CustPriceGroupId, DiscountType, Discount, MinSalesAmount, CrStop, CustRef, CyclePeriod, DateDel, InvoiceSort, LastIvcDate, OrderConfFlag, PackListFlag, PrintDeliveredLines, SalesmanCode, CommissionReceiver, MarketCode, PrintControlCode, BackorderOption, EdiAutoOrderApproval, EdiAutoChangeApproval, ReleaseInternalOrder, EdiAutoApprovalUser, EdiAuthorizeCode, EdiSite, ConfirmDeliveries, CheckSalesGrpDelivConf, OrderId, Category, AcquisitionSite, TemplateId, TemplateCustomer, TemplateCustomerDesc, QuickRegisteredCustomer, Priority;
   attribute CustomerId Text {
      fetch = "customer_id";
      label = "Customer No";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute CurrencyCode Text {
      label = "Currency";
      editable = [ETag != null];
   }
   attribute CustomerNoPay Text {
      label = "Invoice Customer";
      editable = [false];
   }
   attribute CustGrp Text {
      label = "Customer Statistic Group";
      editable = [ETag != null];
   }
   attribute CustPriceGroupId Text {
      editable = [ETag != null];
   }
   attribute Discount Number {
      label = "Discount (%)";
   }
   attribute MinSalesAmount Number {
      format = ifscurrency;
   }
   attribute CustRef Text {
      editable = [ETag != null];
      format = uppercase;
   }
   attribute CyclePeriod Number {
      maxlength = 3;
      editable = [false];
   }
   attribute DateDel Date {
      label = "Expire Date";
      editable = [ETag != null];
   }
   attribute InvoiceSort Enumeration(CustomerInvoiceType) {
      label = "Invoice Type";
      editable = [ETag = null];
   }
   attribute LastIvcDate Date {
      label = "Latest Invoice Date";
      editable = [false];
   }
   attribute OrderConfFlag Enumeration(PrintOrderConfirmation) {
      label = "Print Order Confirmation";
   }
   attribute PackListFlag Enumeration(PrintPackList) {
      label = "Delivery Notes";
   }
   attribute PrintDeliveredLines Enumeration(DeliveryNoteOptions) {
      label = "Show Only Delivered Lines in Delivery Note for";
   }
   attribute LanguageCode Text {
      fetch = "Cust_Ord_Customer_API.Get_Language_Code(customer_id)";
      label = "Language Code";
      maxlength = 2000;
      editable = [false];
   }
   attribute SalesmanCode Text {
      label = "Salesperson ID";
   }
   attribute CommissionReceiver Enumeration(CreateComReceiver) {
      fetch = "commission_receiver_db";
      label = "Commission Receiver";
      editable = [false];
   }
   attribute MarketCode Text {
      editable = [ETag != null];
   }
   attribute PrintControlCode Text {
      label = "Print Code";
   }
   attribute EdiAutoOrderApproval Text {
      fetch = "edi_auto_order_approval";
      label = "Incoming Order/Schedule Approval";
      maxlength = 100;
      editable = [false];
   }
   attribute EdiAutoChangeApproval Enumeration(ApprovalOption) {
      label = "Incoming Change Request";
      editable = [false];
   }
   attribute ReleaseInternalOrder Enumeration(ApprovalOption) {
      label = "Release Incoming Customer Order";
      editable = [false];
   }
   attribute EdiAutoApprovalUser Text {
      label = "Approval User";
      editable = [ETag = null];
   }
   attribute EdiAuthorizeCode Text {
      fetch = "edi_authorize_code";
      label = "EDI Coordinator";
      editable = [ETag != null];
   }
   attribute EdiSite Text {
      editable = [ETag != null];
   }
   attribute ConfirmDeliveries Boolean("TRUE", "FALSE") {
      fetch = "confirm_deliveries_db";
      label = "Confirm Deliveries";
      required = [true];
   }
   attribute CheckSalesGrpDelivConf Boolean("TRUE", "FALSE") {
      fetch = "check_sales_grp_deliv_conf_db";
      label = "Check Sales Group Setting";
      required = [true];
   }
   attribute OrderId Text {
      label = "Order Type";
      editable = [ETag != null];
   }
   attribute Category Enumeration(CustOrdCustomerCategory) {
      fetch = "category_db";
      label = "Internal Customer";
      required = [true];
      editable = [ETag = null];
   }
   attribute AcquisitionSite Text {
      label = "Customer Site";
      editable = [ETag = null];
   }
   attribute TemplateId Text {
      label = "CO Template ID";
   }
   attribute TemplateCustomer Enumeration(TemplateCustomer) {
      fetch = "template_customer_db";
      label = "Template Customer";
      required = [true];
   }
   attribute TemplateCustomerDesc Text {
      label = "Template Description";
   }
   attribute QuickRegisteredCustomer Enumeration(QuickRegisteredCustomer) {
      fetch = "quick_registered_customer_db";
      label = "Quickly Registered Customer";
      required = [true];
   }
   attribute Hierarchy Text {
      fetch = "Cust_Hierarchy_Struct_API.Get_Hierarchy_Id(customer_id)";
      label = "Hierarchy";
      maxlength = 2000;
      editable = [false];
      format = uppercase;
   }
   attribute HierarchyLevel Text {
      fetch = "Cust_Hierarchy_Struct_API.Get_Level_No(Cust_Hierarchy_Struct_API.Get_Hierarchy_Id(customer_id),customer_id)";
      label = "Hierarchy Level";
      maxlength = 2000;
      editable = [false];
      format = uppercase;
   }

   reference CustomerInfoRef(CustomerId) to CustomerInfo(CustomerId);
   reference CustomerIdRef(CustomerId) to CustomerInfoCustcategoryPub(CustomerId) {
      label = "Customer";
   }
   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Currency";
   }
   reference CustomerNoPayRef(CustomerNoPay) to CustOrdCust2(CustomerNo) {
      label = "Invoice Customer";
   }
   reference CustomerGroupRef(CustGrp) to CustomerGroup(CustGrp) {
      label = "Customer Statistic Group";
   }
   reference CustPriceGroupIdRef(CustPriceGroupId) to CustPriceGroup(CustPriceGroupId) {
      label = "Cust Price Group ID";
   }
   reference DiscountTypeRef(DiscountType) to SalesDiscountType(DiscountType) {
      label = "Discount Type";
   }
   reference CustomerReferenceRef(CustomerId, CustRef) to CustInfoContactLovPub(CustomerId, PersonId) {
      label = "Reference";
   }
   reference SalesmanCodeRef(SalesmanCode) to SalesPartSalesmanLov(SalesmanCode) {
      label = "Salesperson ID";
   }
   reference MarketCodeRef(MarketCode) to SalesMarket(MarketCode) {
      label = "Market Code";
   }
   reference PrintControlCodeRef(PrintControlCode) to CustOrdPrintControl(PrintControlCode) {
      label = "Print Code";
   }
   reference EdiAutoApprovalUserRef(EdiAutoApprovalUser) to FndUser(Identity) {
      label = "Approval User";
   }
   reference EdiAuthorizeCodeRef(EdiAuthorizeCode) to OrderCoordinatorLov(AuthorizeCode) {
      label = "EDI Coordinator";
   }
   reference EdiSiteRef(EdiSite) to Site(Contract) {
      label = "EDI Site";
   }
   reference OrderIdRef(OrderId) to CustOrderType(OrderId) {
      label = "Order Type";
   }
   reference AcquisitionSiteRef(AcquisitionSite) to Site(Contract) {
      label = "Customer Site";
   }
   reference TemplateIdRef(TemplateId) to CustomerOrderTemplate(TemplateId) {
      label = "CO Template ID";
   }
   reference HierarchyRef(Hierarchy) to CustomerHierarchy(HierarchyId) {
      label = "Hierarchy";
   }
   reference HierarchyLevelRef(Hierarchy, HierarchyLevel) to CustomerHierarchyLevel(HierarchyId, CustomerLevel) {
      label = "Hierarchy Level";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------
function GetReference List<Entity(CustInfoContactLovPub)> {
   where = "address_id is not null and person_id is not null";
}

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------