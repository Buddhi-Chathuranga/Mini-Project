--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2020-03-24  ChBnlk  SCXTEND-4079, Added SalesPriceListPart to the LuDependencies of
-- 2020-03-24          action AdjustOffset.
-- 2019-04-04  milise  SCUXXW4-18022, Replacing of label = "" with showlabel = false
-- 2018-08-31  IzShlk  SCUXXW4-8092, Converted from dlgAdjustOffset using MTG Version: 1.27
--------------------------------------------------------------------------------------

fragment AdjustOffsetsDialog;
component ORDER;
layer Core;
description "Use this API to make adjustments on the percentage offset and/or amount offset from the base price. It is possible to choose between two different types of adjustments, Add To Offset and Adjust Offset.";

include fragment SalesPriceListInitialCheck;

----------------------------- CLIENT FRAGMENTS ------------------------------

---------------------------------- DIALOGS ----------------------------------

dialog AdjustOffsetDialog for AdjustOffsetStructure {
   label = "Adjust Offsets";
   input(PriceListNo, CurrencyCode, ValidToDate);
   output(PercentOffset, AmountOffset, ValidToDate, AdjustmentType, IncludeBothDates);
   group AdjustOffsetGroup;
   group AdjustmentTypeGroup;
   group AdjustmentParametersGroup;

   command Ok {
      enabled = [PriceListNo != null and ValidToDate != null and(PercentOffset != null or AmountOffset != null)];
   }
   command Cancel;
}

---------------------------------- GROUPS -----------------------------------

group AdjustOffsetGroup for AdjustOffsetStructure {
   label = "";
   lov PriceListNoRef with ReferenceSalesPriceListSelector {
      description = PriceListNoRef.Description;
      editable = [false];
   }
   field CurrencyCode {
      size = Small;
      editable = [false];
   }
   field ValidToDate {

      validate command {
         variable ValidDate {
            type = Date;
         }
         variable ValidFlag {
            type = Boolean;
         }

         execute {
            set ValidFlag = false;

            call FetchValidToDate(PriceListNo) into ValidDate;
            if [ValidDate != null and ValidToDate <= ValidDate] {
               set ValidFlag = true;
            }
            if [ValidDate = null] {
               set ValidFlag = true;
            }

            if [ValidFlag = false] {
               info("Price List ${PriceListNo} will not be valid the date ${ValidToDate}");
            }
         }
      }
   }
   field IncludeBothDates {
      size = FullWidth;
      defaulttoprevious = [true];
   }
}

group AdjustmentTypeGroup for AdjustOffsetStructure {
   label = "Adjustment Type";
   radiogroup AdjustmentType {
      showlabel = false;
   }
}

group AdjustmentParametersGroup for AdjustOffsetStructure {
   label = "Adjustment Parameters";
   field PercentOffset {
      size = Small;
   }
   field AmountOffset {
      size = Small;
   }
}

--------------------------- PROJECTION FRAGMENTS ----------------------------

-------------------------------- STRUCTURES ---------------------------------

structure AdjustOffsetStructure {
   attribute PriceListNo Text {
      label = "Price List No";
      maxlength = 10;
      format = uppercase;
   }
   attribute CurrencyCode Text {
      label = "Currency";
   }
   attribute ValidToDate Date {
      label = "Valid From";
   }
   attribute IncludeBothDates Boolean("TRUE", "FALSE") {
      label = "Include lines with both Valid From and Valid To dates indicator";
      required = [true];
   }
   attribute AdjustmentType Enumeration(AdjustmentTypeEnum);
   attribute PercentOffset Number {
      label = "Percentage Offset";
   }
   attribute AmountOffset Number {
      label = "Amount Offset";
   }

   reference PriceListNoRef(PriceListNo) to SalesPriceList(PriceListNo) {
      label = "Price List";
   }
}

------------------------------- ENUMERATIONS --------------------------------
enumeration AdjustmentTypeEnum {
   value = "ADD" {
      label = "Add To Offset";
   }
   value = "ADJUST" {
      label = "Adjust Offset";
   }
}

---------------------------------- ACTIONS ----------------------------------
action AdjustOffset Number {
   initialcheck SalesPriceListInitialCheck(PriceListNo);
   ludependencies = SalesPriceList, SalesPriceListPart;
   parameter PriceListNo Text;
   parameter PercentOffset Number;
   parameter AmountOffset Number;
   parameter ValidToDate Date;
   parameter AdjustmentType Text;
   parameter IncludePeriod Text;
}

function FetchValidToDate Date {
   parameter PriceListNo Text;
}
