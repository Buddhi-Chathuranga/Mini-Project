--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-10-31  Hairlk  SCXTEND-1320, Set the startupmode to search.
-- 2018-05-04  IzShlk  SCUXXW4-1541, Converted from tbwShipCustOrd using MTG Version: 1.16
--------------------------------------------------------------------------------------

client DeliverCustomerOrders;
component ORDER;
layer Core;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry ShipCustOrdNavEntry parent OrderNavigator.ShippingOrderDelivery at index 100 {
      label = "Deliver Customer Orders";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page List using CustomerOrders {
   label = "Deliver Customer Orders";
   startupmode = search;
   list ShipCustOrdList;
}

--------------------------------- COMMANDS ----------------------------------
command Deliver for CustomerOrder {
   label = "Deliver";
   enabled = [true];
   mode = SelectedRecords;
   variable Continue {
      type = Number;
   }
   variable LicenseDetailsVar {
      type = Structure(LicenseInfo);
   }

   bulkexecute {
      set Continue = 1;
      confirm("The customer order(s) will be delivered") {
         when OK {
            call CheckAllLinesConnected(Selection) into LicenseDetailsVar;
            if [LicenseDetailsVar.LicenseConnected = 1] {
               confirm("There are order line(s) which are not connected to an export license. Do you want to proceed?") {
                  when OK {
                     set Continue = 1;
                  }
                  when CANCEL {
                     set Continue = 0;
                     exit CANCEL;
                  }
               }
            }
            if[LicenseDetailsVar.ExportControlled = 3] {
               alert("Export Licenses must be connected to order line(s) to proceed, please use the Find and Connect License.");
               set Continue = 0;
            }

            if [Continue = 1] {
               call StartDeliver(Selection);
            }
         }
      }
   }
}

command DeliverwithDifferences for CustomerOrder {
   label = "Deliver with Differences";
   enabled = [true];
   mode = SelectedRecords;
   bulkexecute {
      bulknavigate "page/DeliverCustomerOrderWithDifferences/Form?$filter=OrderNo eq $[OrderNo]";
   }
}

command AddCharges for CustomerOrder {
   label = "Add Charges";
   enabled = [true];
   mode = SelectedRecords;
   bulkexecute {
      bulknavigate "page/CustomerOrder/Form?$filter=OrderNo eq $[OrderNo]";
   }
}


----------------------------- VISUAL COMPONENTS -----------------------------

----------------------------------- LISTS -----------------------------------

list ShipCustOrdList for CustomerOrder {
   field OrderNo;
   field ContractRef;
   field Objstate {
      label = "Status";
   }
   field OrderIdRef;
   lov CustomerNoRef with ReferenceCustOrdCust2Selector {
      label = "Customer";
      contactwidget {
         enabled = [true];
         source = Customer;
      }
      description = CustomerNoRef.Name;
   }

   lov AuthorizeCodeRef with AuthorizeCodeRefSelector {
      contactwidget {
         enabled = [AuthorizeCode != null];
         source = Person;
      }
   }
   field SalesmanCodeRef {
      contactwidget {
         enabled = [SalesmanCode != null];
         source = Person;
      }
   }
   field WantedDeliveryDate;
   lov RouteIdRef with ReferenceDeliveryRouteSelector {
      label = "Route";
      description = RouteIdRef.Description;
   }

   field Priority;

   command Deliver;
   command DeliverwithDifferences;
   command AddCharges;
}

@Override
list CustOrdCust2LovList for CustOrdCust2 {
   label = "";
   static CustomerNo;
   static Name;
   static Category {
      label = "Customer Type";

   }

}
--------------------------------- SELECTORS ---------------------------------
@Override
selector ReferenceCustOrdCust2Selector for CustOrdCust2 {
   label = "";
   static CustomerNo;
   static Name;
   static Category;
}

selector AuthorizeCodeRefSelector for OrderCoordinatorLov {
   static AuthorizeCode;
   static Name;
   static State;
}

@Override
selector ReferenceSiteSelector for Site {
   label = "";
   static Contract;
   static Company;
   static DeliveryAddress {
      visible = [false];
   }
   static Description;
   static Offset {
      visible = [false];
   }
}
