--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-07-30  IzShlk  SCUXXW4-8122, Converted from dlgAgreementDealGroupDiscount using MTG Version: 1.24
--------------------------------------------------------------------------------------

projection CustomerAgreementDealPerSalesGroupDiscountHandling;
component ORDER;
layer Core;
description "Use this API to add multiple discount lines to a deal-per-sales group line.";
category Users;
include fragment AgreementSalesGroupDealInitialCheck;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset AgreementSalesGroupDealSet for AgreementSalesGroupDealVirtual;

------------------------------ ENTITY DETAILS -------------------------------
virtual AgreementSalesGroupDealVirtual {
   crud = Create, Read;
   ludependencies = AgreementSalesGroupDealVirtual;

   attribute AgreementId Text {
      label = "Agreement ID";
   }
   attribute CatalogGroup Text;
   attribute Discount Number {
      label = "Acc Disc";
      format = percentage;
   }
   attribute MinQuantity Number;
   attribute ValidFromDate Date;
   attribute ValidToDate Date;
   attribute UpdAllowed Boolean;
   reference SalesGroupIdRef(CatalogGroup) to SalesGroup(CatalogGroup) {
      label = "Sales Group";
   }
   array AgreementGroupDiscountArray(AgreementId, MinQuantity, ValidFromDate, CatalogGroup) to AgreementGroupDiscount(AgreementId, MinQuantity, ValidFromDate, CatalogGroup);
}

@Override
entity AgreementGroupDiscount {
   keys = AgreementId, MinQuantity, ValidFromDate, CatalogGroup, DiscountNo {
      where = "AGREEMENT_ID = :AgreementId and MIN_QUANTITY = :MinQuantity and VALID_FROM_DATE = :ValidFromDate and CATALOG_GROUP = :CatalogGroup and DISCOUNT_NO = :DiscountNo";
   }
   attribute DiscountType Text {
      editable = [ETag = null];
      format = uppercase;
   }
   attribute CalculationBasis Number {
      editable = [false];
      format = ifscurrency;
   }
   attribute Discount Number {
      label = "Discount %";
   }
   attribute DiscountLineNo Number {
      label = "Discount Line No";
   }
   reference DiscountTypeRef(DiscountType) to SalesDiscountType(DiscountType) {
      label = "Discount Type";
   }
}

--------------------------------- FUNCTIONS ---------------------------------
function DiscountType List<Entity(SalesDiscountType)> {
   parameter DiscountType Text;
   where = "OBJSTATE != 'Blocked' ";
}

---------------------------------- ACTIONS ----------------------------------

action CalcDiscount {
   initialcheck AgreementSalesGroupDealInitialCheck(AgreementId, CatalogGroup, ValidFromDate, MinQuantity);
   parameter AgreementId   Text;
   parameter MinQuantity   Number;
   parameter ValidFromDate Date;
   parameter CatalogGroup  Text;
   ludependencies = AgreementGroupDiscount;
}

action UpdateParent {
   initialcheck none;
   parameter ObjKey Text;
   ludependencies = AgreementSalesGroupDealVirtual;
}

action UpdateDiscountLineNo {
   initialcheck AgreementSalesGroupDealInitialCheck(AgreementId, CatalogGroup, ValidFromDate, MinQuantity);
   parameter AgreementId      Text;
   parameter MinQuantity      Number;
   parameter ValidFromDate    Date;
   parameter CatalogGroup     Text;
   parameter DiscountNo       Number;
   parameter CreateDiscount   Boolean;
   ludependencies = AgreementGroupDiscount, AgreementSalesGroupDealVirtua, AgreementSalesGroupDeal;
}
