-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-09-18  MaEelk  SCUXXW4-12948,  fragment RemoveInvalidPricesDialog to support the RMB Remove Invalid Prices.
-- 2018-08-28  IzShlk  SCUXXW4-8557, Implemented Print Sales Price List command
-- 2018-08-22  MaEelk  SCUXXW4-1496, Converted from tbwSalesPriceLists using MTG Version: 1.26
--------------------------------------------------------------------------------------

projection SalesPriceListsHandling;
component ORDER;
layer Core;
description "Use this API to view all the entered Sales Price Lists.";
category Users;
include fragment PrintSalesPriceListDialog;
include fragment AdjustOffsetsDialog;
include fragment RemoveInvalidPricesDialog;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset SalesPriceListSet for SalesPriceList;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity SalesPriceList {
   attribute Description Text {
      label = "Price List Description";
      maxlength = 35;
   }
   attribute ValidToDate Date {
      label = "Valid To";
   }
   attribute UsePriceBreakTemplatesDb Boolean("TRUE", "FALSE") {
      fetch = "USE_PRICE_BREAK_TEMPLATES_DB";
      label = "Use Price Break Templates";
      required = [true];
   }
   attribute AwaitReviewDb Boolean("TRUE", "FALSE") {
      fetch = "AWAIT_REVIEW_DB";
      label = "Await Review";
      required = [true];
   }
   attribute DefaultBasePriceSite Text {
      label = "Base Price Site";
      maxlength = 20;
   }
   attribute DefaultPercentageOffset Number {
      label = "Percentage Offset";
      format = ifscurrency;
   }
   attribute DefaultAmountOffset Number {
      label = "Amount Offset";
      format = ifscurrency;

   }
   attribute UsePriceInclTaxDb Boolean("TRUE", "FALSE") {
      fetch = "USE_PRICE_INCL_TAX_DB";
      label = "Use Price Incl Tax";
      editable = [false];
   }
   attribute SubscribeNewSalesPartsDb Boolean("TRUE", "FALSE") {
      fetch = "SUBSCRIBE_NEW_SALES_PARTS_DB";
      label = "Subscribe to New Sales Parts";
      required = [true];
   }
   attribute PriceListEditable Text {
      fetch = "Sales_Price_List_API.Get_Editable(PRICE_LIST_NO)";
      label = "Price List Editable";
      editable = [false];
   }
   attribute ServerDate Date {
      fetch = "SYSDATE";
      editable = [false];

   }
   reference SalesPriceGroupRef(SalesPriceGroupId) to SalesPriceGroup(SalesPriceGroupId) {
      label = "Sales Price Group";
   }
   reference OwningCompanyRef(OwningCompany) to CompanyFinance(Company) {
      label = "Owning Company";
   }
   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Currency";
   }
   reference SupPriceListNoRef(SupPriceListNo) to SalesPriceList(PriceListNo) {
      label = "Sup Price List No";
   }
   reference AssortmentIdRef(AssortmentId) to AssortmentStructure(AssortmentId) {
      label = "Assortment ID";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------


--------------------------------- FUNCTIONS ---------------------------------
function SupSalesPriceLists List<Entity(SalesPriceList)> {
   parameter PriceListNo Text;
   where = "PRICE_LIST_NO != :PriceListNo OR :PriceListNo IS NULL ";
}

function AssortmentIds List<Entity(AssortmentStructure)> {
   where = "OBJSTATE = 'Active'";
}

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------

