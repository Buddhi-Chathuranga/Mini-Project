--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2021-03-02  NiDalk  SC2020R1-12663, Modified ReturnMaterialLine to fetch data from RECEIVE_RETURN_INFO
-- 2020-03-06  MaRalk  SCXTEND-3466, Improved performance by modifying the from clause in the entity ReturnMaterialLine.
-- 2020-03-06          Used return_material_line view instead of return_material_join_uiv. Fetched more attributes from the pipeline function
-- 2020-03-06          and used them instead of some attributes which were fetching from return_material_join_uiv.
-- 2020-03-06          Removed SalesPartRef and instead used CatalogNoRef in the client file.
-- 2020-01-29  Kagalk  GESPRING20-1624, Added modify_date_applied functionality.
-- 2019-05-17  fgusse  SCUXXW4-20685, Added DocumentText in ludependencies
-- 2018-05-28  MaEelk  SCUXXW4-8762, Added SalesQtyToReturn
-- 2018-05-22  IzShlk  SCUXXW4-1349, Converted from tbwReceivableRMAOverview using MTG Version: 1.18
--------------------------------------------------------------------------------------

projection ReceiveAuthorizedReturns;
component ORDER;
layer Core;
description "Use this API to view all return material authorization lines that are ready to be received, i.e., those having a status of Released or Partially Received.";
category Users;
include fragment SalesPartGtinNoLovSelector;
include fragment AllSalesPartActiveLovSelector;
include fragment CustOrdCust2Selector;
include fragment MpccomPhraseTextLovSelector;
include fragment OutputTypeLovSelector;
include fragment DocumentText;
include fragment InventoryLocation11Selector;
include fragment InventoryPartInStockDelivSelector;
include fragment ReturnMaterialAuthorizationStateIndicator;


----------------------------- MAIN ENTRY POINTS -----------------------------
entityset ReturnMaterialLines for ReturnMaterialLine;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity ReturnMaterialLine {
   ludependencies = DocumentText;
   crud = Read, Update;
   from = "RECEIVE_RETURN_INFO";
   where = "objstate IN ('Released' , 'PartiallyReceived')";

   attribute RmaNo Number;
   attribute RmaLineNo Number;
   attribute DateRequested Date {
      label = "Date Requested";
      editable = [false];
   }
   attribute CustomerNo Text {
      label = "Customer No";
      format = uppercase;
      editable = [false];
   }
   attribute CatalogNo Text;
   attribute CatalogDesc Text {
      label = "Sales Part Description";
      editable = [false];
   }
   attribute CatalogTypeDb Text;
   attribute GtinNo Text {
      label = "GTIN";
      editable = [false];
   }
   attribute ConfigurationId Text;
   attribute ConditionCode Text;
   attribute ConditionCodeDesc Text;
   attribute ReturnReasonCode Text {
      label = "Return Reason";
      format = uppercase;
      editable = [false];
   }
   attribute InspectionInfo Text {
      editable = [false];
   }
   attribute QtyToReturn Number {
      editable = [false];
   }
   attribute QtyReceived Number {
      editable = [false];
   }
   attribute ReturnUM Text {
      fetch = "return_uom";
      label = "Return U/M";
      editable = [false];
   }
   attribute QtyReturnedInv Number {
      editable = [false];
   }
   attribute QtyScrapped Number {
      editable = [false];
   }
   attribute OrderNo Text {
      editable = [false];
   }
   attribute LineNo Text {
      editable = [false];
   }
   attribute RelNo Text {
      label = "Del No";
      editable = [false];
   }
   attribute RentalNo Number {
      label = "Rental No";
      editable = [false];
   }
   attribute FeeCode Text {
      label = "Tax Code";
      editable = [false];
   }
   attribute FeeCodeDesc Text;
   attribute LineItemNo Number;
   attribute DebitInvoiceNo Text {
      label = "Reference Invoice No";
      editable = [false];
   }
   attribute Contract Text {
      label = "Site";
   }
   attribute CurrencyCode Text {
      label = "Currency Code";
      format = uppercase;
      editable = [false];
   }
   attribute SaleUnitPrice Number {
      format = ifscurrency;
      editable = [false];
   }
   attribute BaseSaleUnitPrice Number {
      format = ifscurrency;
      editable = [false];
   }
   attribute PriceConvFactor Number {
      editable = [false];
   }
   attribute InvertedConvFactor Number {
      editable = [false];
   }
   attribute CurrencyRate Number {
      editable = [false];
   }
   attribute CurrencyRateFinal Number {
      label = "Currency Rate";
      editable = [false];
   }
   attribute PurchaseOrderNo Text {
      format = uppercase;
      editable = [false];
   }
   attribute TotalBase Number {
      label = "Total/Base";
      format = ifscurrency;
      editable = [false];
   }
   attribute GrossTotalBase Number {
      label = "Gross Total/Base";
      format = ifscurrency;
      editable = [false];
   }
   attribute TotalCurrency Number {
      label = "Total/Currency";
      format = ifscurrency;
      editable = [false];
   }
   attribute GrossTotalCurrency Number {
      label = "Gross Total/Currency";
      format = ifscurrency;
      editable = [false];
   }
   attribute CreditApproverId Text;
   attribute CreditCorrInvoiceNo Text {
      label = "Credit/Corr. Invoice No";
      editable = [false];
   }
   attribute CreditInvoiceItemId Number {
      label = "Credit/Corr. Invoice Item ID";
      editable = [false];
   }
   attribute ReturnApproverId Text {
      label = "Coordinator";
      format = uppercase;
      editable = [false];
   }
   attribute CustRef Text {
      label = "Cust Ref";
      editable = [false];
   }
   attribute HeadState Text {
      label = "Head Status";
      editable = [false];
   }
   attribute NoteText Text;
   attribute Note Boolean {
      fetch = "DECODE( NOTE_TEXT, NULL, 'FALSE', 'TRUE' )";
      label = "Note";
      required = [true];
      editable = [false];
   }
   attribute DocumentText Boolean {
      fetch = "DECODE(Document_Text_API.Note_Id_Exist(NOTE_ID),'0','FALSE','TRUE')";
      label = "Document Text";
      required = [true];
      editable = [false];
   }
   attribute DebitInvoiceItemId Number {
      label = "Debit Invoice Item Id";
      editable = [false];
   }
   attribute ReplacementOrderNo Text;
   attribute ConvFactor Number;
   attribute NoteId Number {
      maxlength = 100;
      editable = [false];
   }
   attribute PartNo Text {
      label = "Invntory Part No";
      editable = [false];
   }
   attribute CustomersCompany Text {
      label = "Customer's Company";
      format = uppercase;
      editable = [false];
   }
   attribute CustomersContract Text {
      label = "Customer's Contract";
      format = uppercase;
      editable = [false];
   }
   attribute Company Text;
   attribute CurrencyRounding Number {
      label = "Currency Rounding";
      editable = [false];
   }
   attribute RentalDb Text {
      fetch = "RENTAL_DB";
      label = "Rental";
      format = uppercase;
      editable = [false];
   }
   attribute Condition Text {
      label = "Condition";
      editable = [false];
   }
   attribute OriginatingRmaNo Number {
      label = "Originating RMA No";
      editable = [false];
   }
   attribute ReceiptRmaNo Number {
      fetch = "RECEIPT_RMA_NO";
      label = "Receipt RMA No";
      editable = [false];
   }
   attribute ShortageHandlingOn Text {
      editable = [false];
   }
   attribute ShortageExist Number {
      editable = [false];
   }
   attribute ShortageFlag Text;

   attribute SalesQtyToReturn Number {
      fetch = "QTY_TO_RETURN - DECODE(QTY_RECEIVED, NULL, 0, QTY_RECEIVED)";
      editable = [false];
   }
   attribute InventoryQtyToReturn Number {
      fetch = "DECODE(PART_NO, NULL, NULL, QTY_TO_RETURN_INV_UOM - DECODE(QTY_RECEIVED_INV_UOM, NULL, 0, QTY_RECEIVED_INV_UOM))";
      editable = [false];
   }
   attribute SupplierReturnReason Text;
   attribute QtyToReturnInv Number {
      fetch = "(QTY_TO_RETURN * CONV_FACTOR / INVERTED_CONV_FACTOR)";
   }
   attribute InventoryUom Text;
   attribute ReturnToVendorNo Text;
   -- gelr:modify_date_applied, begin
   attribute ArrivalDate Date {
      editable = [false];
   }
   attribute ModifyDateAppliedEnabled Boolean("TRUE", "FALSE") {
      fetch = "Company_Localization_Info_API.Get_Parameter_Value_Db(COMPANY, 'MODIFY_DATE_APPLIED') ";
   }
   -- gelr:modify_date_applied, end

   reference InventoryPartRef(Contract, PartNo) to InventoryPart(Contract, PartNo);
   reference CustomerNoRef(CustomerNo) to CustOrdCust2(CustomerNo) {
      label = "Customer No";
   }
   reference CatalogNoRef(Contract, CatalogNo) to AllSalesPartActiveLov(Contract, CatalogNo) {
      label = "Sales Part No";
   }
   reference GtinNoRef(Contract, GtinNo) to SalesPartGtinNoLov(Contract, GtinNo) {
      label = "GTIN";
   }
   @DynamicComponentDependency Cfgchr
   reference ConfigurationIdRef(PartNo, ConfigurationId) to ConfigurationSpec(PartNo, ConfigurationId) {
      label = "Configuration ID";
   }
   reference ConditionCodeRef(ConditionCode) to ConditionCode(ConditionCode) {
      label = "Condition Code";
   }
   reference ReturnReasonCodeRef(ReturnReasonCode) to ReturnMaterialReason(ReturnReasonCode) {
      label = "Supplier Return Reason";
   }
   reference ReturnUMRef(ReturnUM) to IsoUnit(UnitCode) {
      label = "Return U/M";
   }
   reference FeeCodeRef(Company, FeeCode) to StatutoryFee(Company, FeeCode) {
      label = "Tax Code";
   }
   reference LineItemNoRef(OrderNo, LineNo, RelNo, LineItemNo) to CustomerOrderLine(OrderNo, LineNo, RelNo, LineItemNo) {
      label = "Line Item No";
   }
   reference CreditApproverIdRef(CreditApproverId) to OrderCoordinator(AuthorizeCode) {
      label = "Credit Approver ID";
   }
   reference OriginatingRmaNoRef(OriginatingRmaNo) to ReturnMaterial(RmaNo) {
      label = "Originating RMA No";
   }
   reference ReceiptRmaNoRef(ReceiptRmaNo) to ReturnMaterial(RmaNo) {
      label = "Receipt RMA No";
   }
}

--------------------------------- FUNCTIONS ---------------------------------

function SalesPartGtinNumbers List<Entity(SalesPartGtinNoLov)> {
   where = "SALES_TYPE_DB IN ('SALES', 'SALES RENTAL')";
}

---------------------------------- ACTION -----------------------------------

action RefreshPage {
   initialcheck none;
   ludependencies = ReturnMaterialLine;
}

