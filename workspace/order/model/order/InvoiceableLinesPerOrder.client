--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2020-10-28  MaEelk  SC2020R1-10872, Status field was set to be a badge in InvoicableLinesList
-- 2018-05-28  StHose  SCUXXW4-9220, Concatenated delivery terms ID/description
-- 2018-05-18  RaVdlk  SCUXXW4-12104, Overridden the CustOrderTypeLovList and SiteLovList
-- 2018-05-21  KhVese  SCUXXW4-12066, Implemented command BlockfromInvoicingCommand and Modified condition for CustomerNo widget and also
-- 2018-05-18  RaVdlk  SCUXXW4-12104, Overridden the ReferenceCustOrderTypeSelector
-- 2018-05-04  StHose  SCUXXW4-9220, Converted from frmInvoicableLinesPerOrder using MTG Version: 1.16
--------------------------------------------------------------------------------------

client InvoiceableLinesPerOrder;
component ORDER;
layer Core;
projection InvoiceableLinesPerOrderHandling;
include fragment OrderDeliveryTermLovSelector;
include fragment CoChargeJoinSelector;
include fragment CustAddressShipLovSelector;
include fragment CustOrdCust1Selector;
include fragment CustomerOrderLineStateBadge;

----------------------------- NAVIGATOR ENTRIES -----------------------------

-------------------------------- MAIN PAGES ---------------------------------

page Form using InvoiceCustomerOrders {
   label = "Invoiceable Lines per Order";
   selector InvoiceCustomerOrderSelector;
   group InvoicableLinesPerOrderGroup;
   list InvoicableLinesList(DetailInvoicableLines);
   commandgroup InvoicableLinesCmdGroup {
      command CustomerOrderCommand;
   }
}
--------------------------------- COMMANDS ----------------------------------

command CustomerOrderCommand for InvoiceCustomerOrder {
   label = "Customer Order";
   enabled = [OrderNo != NULL];
   execute {
      navigate "page/CustomerOrder/Form?$filter=OrderNo eq $[OrderNo]";
   }
}

command BlockfromInvoicingCommand for InvoicableLines {
   label = "Block from Invoicing";
   mode = SelectedRecords;
   enabled = [true];
   execute {
      call ModifyBlockedForInvoicing(OrderNo, LineNo, RelNo, LineItemNo);
   }
}

--------------------------------- SELECTORS ---------------------------------

@Override
selector InvoiceCustomerOrderSelector for InvoiceCustomerOrder {
   label = "${OrderNo}";
   static OrderNo;
}

@Override
selector ReferenceCustOrderTypeSelector for CustOrderType {
   label = "";
   static OrderId;
   static Description;
   static PickInventoryType {
      label = "Shipment Inventory";
   }
   static OeAllocAssignFlag {
      label = "Priority Reservations";
   }
   static OnlineProcessing {
      label = "Online Execution";
   }
}

---------------------------------- GROUPS -----------------------------------

group InvoicableLinesPerOrderGroup for InvoiceCustomerOrder {
   label = "";
   lov OrderNoRef with CoChargeJoinSelector;
   lov CustomerNoRef with CustOrdCust1Selector {
      contactwidget {
         enabled = [CustomerNo != null];
         source = Customer;
      }
      description = CustomerNoRef.Name;
   }
   field OrderIdRef;
   field ContractRef;
   field DateEntered;
}

----------------------------------- LISTS -----------------------------------

list InvoicableLinesList for InvoicableLines {
   label = "Lines";

   field LineNo;
   field RelNo;
   fieldset CustomerOrderLineStateReferencedFieldSet;
   field CatalogNoRef;
   field CatalogDesc;
   field BuyQtyDue;
   field QtyOnInvoice;
   field SalesUnitMeasRef;
   field SaleUnitPrice {
      preserveprecision = [true];
   }
   field UnitPriceInclTax {
      preserveprecision = [true];
   }
   field CurrencyCodeRef;
   field FinCurrencyRate;
   field BaseSaleUnitPrice {
      preserveprecision = [true];
   }
   field BaseUnitPriceInclTax {
      preserveprecision = [true];
   }
   field NetAmountBase;
   field GrossAmtBase;
   field NetAmountCurr;
   field GrossAmtCurr;
   field WantedDeliveryDate;
   field PlannedDeliveryDate;
   field PromisedDeliveryDate;
   field TaxLiability;
   field PlannedShipDate;
   field SalesPartRef.Taxable {
      label = "Taxable";
   }
   lov FeeCodeRef with ReferenceStatutoryFeeSelector {
      label = "Tax Code";
      description = FeeCodeRef.Description;
   }
   field TaxAmountBase;
   lov ShipAddrNoRef with CustAddressShipLovSelector;
   lov DeliverToCustomerNoRef with CustOrdCust1Selector {
      contactwidget {
         enabled = [true];
         source = Customer;
      }
   }
   lov DeliveryTermsRef with OrderDeliveryTermLovSelector {
      description = DeliveryTermsDesc;
   }
   commandgroup InvoicableLinesCmdGroup {
      command BlockfromInvoicingCommand {
         mode = SelectedRecords;
      }
   }
}

@Override
list CustOrderTypeLovList for CustOrderType {
   label = "";
   static OrderId;
   static Description;
   static PickInventoryType {
      label = "Shipment Inventory";
   }
   static OeAllocAssignFlag {
      label = "Priority Reservations";
   }
   static OnlineProcessing {
      label = "Online Execution";
   }
   static AllowPartialPicking;
}
@Override
list SiteLovList for Site {
   label = "";
   static Contract;
   static Description {
      label = "Site Description";
   }
   static Company;
   static DeliveryAddress;

   static Offset;
   static DataCaptureMenuId;
}