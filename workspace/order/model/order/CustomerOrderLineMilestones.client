----------------------------------------------------------------------------------------
-- Date        Sign       History
-- ----------  ------     --------------------------------------------------------------
-- 2020-07-20  MaRalk     SC2020R1-7392, Removed parameters which were referring the search context from the label of the page 'List'
-- 2020-07-20             as order line information are displayed in the search context panel.
-- 2019-06-19  Khvese     SCUXXW4-23910, Defined type for variable TemplateIdVar in TemplateCommand.
-- 2019-06-19  Khvese     SCUXXW4-22584, Added command Ok and Cancle and validation for enabling/disabling command Ok.
-- 2018-12-14  Akhalk     SCUXXW4-8340, Added  dlgCustMilestoneTempl  using MTG Version: 1.23
-- 2018-08-08  Akhalk     SCUXXW4-9845, Converted from tbwCustMilestoneOverview using MTG Version: 1.23
----------------------------------------------------------------------------------------
client CustomerOrderLineMilestones;
component ORDER;
layer Core;
projection CustomerOrderLineMilestonesHandling;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry CustMilestoneOverviewNavEntry parent OrderNavigator.SalesOrder at index 700 {
      label = "Customer Order Line Milestones";
      page CustMilestoneOverviewPage;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page List using CustomerOrderMilestoneSet {
   label = "Milestones for Customer Order Line";

   searchcontext MilestoneSearchContext {
      defaults = GetSearchContextDefaults(OrderNo, LineNo, RelNo, LineItemNo, Contract);
   }
   list CustMilestoneList using GetustomerOrderMilestones(searchcontext.MilestoneSearchContext.OrderNo, searchcontext.MilestoneSearchContext.LineNo, searchcontext.MilestoneSearchContext.RelNo, searchcontext.MilestoneSearchContext.LineItemNo, searchcontext.MilestoneSearchContext.Contract) {
      copyoncruddefault(searchcontext.MilestoneSearchContext.OrderNo, searchcontext.MilestoneSearchContext.LineNo, searchcontext.MilestoneSearchContext.RelNo, searchcontext.MilestoneSearchContext.LineItemNo, searchcontext.MilestoneSearchContext.Contract) to(OrderNo, LineNo, RelNo, LineItemNo, Contract);
   }
   command TemplateCommand;

}

page CustMilestoneOverviewPage using CustomerOrderMilestoneSet {
   label = "Customer Order Line Milestones";
   list CustMilestoneOverviewList;
}

searchcontext MilestoneSearchContext for SearchContextStructure {
   label = "";
   field OrderNo;
   field LineNo;
   field RelNo;
   field LineItemNo;
   field Contract {
      label = "Site";
   }
}
-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------

command DeleteTreeCommand for CustomerOrderMilestone {
   label = "Delete Tree";

   enabled = [true];

   execute {

      confirm("Selected milestone and its descendents will be deleted") {

         when OK {
            call DeleteTree();
         }

      }
   }
}

command TemplateCommand for CustomerOrderMilestone {
   label = "Templates";
   mode = Global;
   enabled = [searchcontext.MilestoneSearchContext.OrderNo != null];
   variable TemplateIdVar Text;
   execute {
      assistant TemplatesAssistant into(TemplateIdVar) {
         when OK {
            messagebox("",
            question, "Do you want to add the milestones of the template to the customer order line?") {
               when "Yes" {
                  call InsertTemplates(searchcontext.MilestoneSearchContext.OrderNo, searchcontext.MilestoneSearchContext.LineNo, searchcontext.MilestoneSearchContext.RelNo, searchcontext.MilestoneSearchContext.LineItemNo, TemplateIdVar);
                  exit;
               }
               when "No" {
                  exit;
               }
            }
         }
      }
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector ReferenceCustomerOrderLinesSelector for CustomerOrderLine {
   label = "";
   static LineNo;
   static RelNo;
   static PartNo;
   badge Objstate {
      label = "Status";
   }
}
@Override
selector ReferenceCustomerOrderSelector for  CustomerOrder {
   label = "";
   static OrderNo;
   static AuthorizeCode {
      visible = [false];
   }
   static BillAddrNo {
      visible = [false];
   }
   static CustomerNo;
   static Contract;
   badge Objstate {
      label = "Status";
   }
}
@Override
selector ReferenceCustomerOrderLineSelector for CustomerOrderLine {
   label = "";
   static LineItemNo {
      visible = [false];
   }
   static ChargedItem {
      visible = [false];
   }
   static ConditionCode {
      visible = [false];
   }
   static PartOwnership {
      visible = [false];
   }
   static OwningCustomerNo {
      visible = [false];
   }
   static LineNo;
   static RelNo;
   static PartNo;
   badge Objstate {
      visible = [false];
   }
}
---------------------------------- GROUPS -----------------------------------
--------------------------------- FIELD SET ---------------------------------
fieldset CommonFields for CustomerOrderMilestone {

   field Description {
      size = Large;
   }
   field Progress;
   badge Objstate {
      label = "Status";
      style = TextOnly;
      emphasis Progress3 = [Objstate = "Released"];
      emphasis Progress12 = [Objstate = "Closed"];
   }
   field StartDate {
      validate command {
         execute {
            if [LeadTime = null] {
               set DateExpected = null;
            }
            else {
               set DateExpected = "#{toDate(addDays(StartDate, LeadTime))}";
            }

         }

      }

   }
   field LeadTime {
      validate command {
         execute {
            if [LeadTime = null] {
               set DateExpected = null;
            }
            else {
               set DateExpected = "#{toDate(addDays(StartDate, LeadTime))}";
            }
         }
      }
   }
   field DateExpected {
      validate command {
         execute {
            if [DateExpected = null] {
               set LeadTime = null;
            }
            if [DateExpected > StartDate] {
               call LeadTime(StartDate, DateExpected) into LeadTime;
            }
            else {
               set StartDate = "#{toDate(addDays(DateExpected, (-LeadTime)))}";
            }
         }
      }
   }
   field OriginDateExpected;
   field DateFinished;
   lov PreviousMilestoneRef with ReferenceCustomerOrderMilestoneParSelector {
      search = Description;
      validate command {
         execute {
            if [PreviousMilestone != null] {
               if [LeadTime = null] {
                  set DateExpected = null;
               }
               else {
                  call GetDateExpected(OrderNo, LineNo, RelNo, LineItemNo, PreviousMilestone) into StartDate;
                  set DateExpected = "#{toDate(addDays(StartDate, LeadTime))}";
               }
            }
            if [StartDate = null] {
               set StartDate = "#{toDate(today())}";
            }
         }
      }
   }

   field Note {
      size = Medium;
      multiline = true;
   }
}

----------------------------------- LISTS -----------------------------------

list CustMilestoneOverviewList for CustomerOrderMilestone {
   crudactions {
      new {
         enabled = [false];
      }
   }

   field OrderNo {
      editable = [false];
   }
   field LineNo {
      editable = [false];
      size = Small;
   }
   field RelNo {
      size = Small;
      editable = [false];
   }
   field LineItemNo {
      size = Small;
      columnvisible = [false];
      searchable = false;
      editable = [false];
   }
   field MilestoneId {
      editable = [false];
   }
   fieldset CommonFields;
   field PartNo {
      editable = [false];
   }
   field PartNoRef.CatalogDesc {
      size = Large;
      editable = [false];
   }

   field CustomerNo {
      contactwidget {
         enabled = [CustomerNo != null];
         source = Customer;
      }
      editable = [false];
   }
   field CustomerName {
      size = Medium;
      editable = [false];
   }

   field Coordinator {
      contactwidget {
         enabled = [Coordinator != null];
         source = Person;
      }
      editable = [false];
   }
   field Salesman {
      contactwidget {
         enabled = [Salesman != null];
         source = Person;
      }
      editable = [false];
   }
   field Site {
      editable = [false];
   }

   fieldranking OrderNo, LineNo, RelNo, MilestoneId, Description, CustomerName, PartNoRef.CatalogDesc, Objstate;
   commandgroup CommandGroupCmd1Group {

      command BulkRelease;
      command BulkClose;
   }
   commandgroup CommandGroup2CmdGroup {
      command DeleteTreeCommand;
   }
}

list CustMilestoneList for CustomerOrderMilestone {
   field MilestoneId;
   fieldset CommonFields;
   fieldranking OrderNo, LineNo, RelNo, MilestoneId, Description, Objstate;
   commandgroup CommandGroupCmd1Group {
      command BulkRelease;
      command BulkClose;
   }
   commandgroup CommandGroup2CmdGroup {
      command DeleteTreeCommand;
   }
}
-----------------------------------------------------------------------------
list TemplLineList for CustMilestoneTemplLine {
   label = "";
   multiselect = [false];
   preselect = [false];
   field MilestoneId {
      size = Small;
   }
   field Description;
   field Progress;
   field LeadTime;
   field PreviousMilestone {
      size = Small;
   }
   field Note {
      size = Large;
   }

}
----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------
assistant TemplatesAssistant using TemplateVirtualSet {
   label = "Milestone Templates for Customer Order Line";
   savemode = OnLostFocus;
   output(TemplateId);


   singlestep {

      group TemplateHeader;
      list TemplLineList(TemplatesArray);
   }
   command Ok {
      enabled = [TemplateId != null];
   }
   command Cancel;
}

group TemplateHeader for TemplatesVirtual {
   label = "";
   lov TemplateIdRef with ReferenceCustMilestoneTemplSelector using FillterTemplateId {
      description = TemplateIdRef.Description;
      size = Large;

   }


}
---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

