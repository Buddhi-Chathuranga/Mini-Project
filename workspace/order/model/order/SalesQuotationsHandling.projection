---------------------------------------------------------------------------------------------------------
-- Date        Sign     History
-- ----------  ------   ---------------------------------------------------------------------------------
-- 2020-11-12  RavDlk   SC2020R1-11228, Handled booleans and enumerations for some attrbutes
-- 2019-10-25  Satglk   SCXTEND-963, Salesman renamed to Salesperson
-- 2019-05-29  fgusse   SCUXXW4-21219, Changed Site(Contract) to UserAllowedSiteLov(Contract) and added
--                                     fragment UserAllowedSiteLovSelector.
-- 2018-10-05  JeLise   SCUXXW4-13352, Added where, supportwarnings and use attributes for entity OrderQuotation.
-- 2018-07-24  HaPulk   SCUXXW4-8185, Added fragment CancelSalesQuotationDialog to "Cancel Quotations".
-- 2018-05-29  JeLise   SCUXXW4-8497, Converted from dlgOrderQuotationEmailOvw using MTG Version: 1.19
-- 2018-05-24  JeLise   SCUXXW4-1001, Converted from tbwOrderQuotationOverview using MTG Version: 1.19
---------------------------------------------------------------------------------------------------------

projection SalesQuotationsHandling;
component ORDER;
layer Core;
description "Use this API for an overview of all the sales quotations.";
category Users;
include fragment UserAllowedSiteLovSelector;
include fragment LoseWinReasonLovSelector;
include fragment LostWonQuotationDialog;
include fragment CompanyHavingSiteSelector;
include fragment CustAddressBillLovSelector;
include fragment CustBillAddressLovSelector;
include fragment CustAddressShipLovSelector;
include fragment SalesPartAllSalesmanLovSelector;
include fragment OrderDeliveryTermLovSelector;
@DynamicComponentDependency PURCH
include fragment ValidSupplierLovSelector;
include fragment CustInfoContactLovPubSelector;
include fragment OrderCoordinatorLovSelector;
include fragment OutputTypeLovSelector;
include fragment MpccomPhraseTextLovSelector;
include fragment CloseSalesQuotationDialog;

-- Used to "Cancel Sales Quotations"
include fragment CancelSalesQuotationDialog;
include fragment OrderCancelReasonLovSelector;
-- Used to "Reject Quotation"
include fragment RejectSalesQuotationDialog;
include fragment OrderQuotationInitialCheck;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset OrderQuotationSet for OrderQuotation;
entityset SalesQuotationVirtualSet for SalesQuotationVirtual;

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity OrderQuotation {
   crud = Read, Update;
   ludependencies = DocumentText;
   where = "b2b_order_db = 'FALSE'";
   supportwarnings = [true];
   use attributes = RevisionNo, Contract, AuthorizeCode, AdditionalDiscount, CustomerQuoNo, CustomerNo, CustRef, ExternalRef, CurrencyCode, NoteText, DateEntered, WantedDeliveryDate, QuotationDate, ExpirationDate, FollowUpDate, RequestReceivedDate, AnsweringDate, PriceEffectivityDate, QuotationProbability, QuotationNote, LanguageCode, VendorNo, ShipViaCode, DeliveryTerms, DelTermsLocation, ForwardAgentId, FreightMapId, ZoneId, FreightPriceListNo, FixDelivFreight, AgreementId, PickingLeadtime, DeliveryLeadtime, ExtTransportCalendarId, PayTermId, MarketCode, DistrictCode, RegionCode, SalesmanCode, ShipAddrNo, SingleOccAddrFlag, BillAddrNo, CalcDiscFlag, TaxLiability, LabelNote, LostTo, ReasonId, LoseWinRejectNote, ClosedStatus, PrintControlCode, CancelReason, Company, NoteId;

   attribute QuotationNo Text {
      required = [true];
      editable = [false];
      format = uppercase;
   }
   attribute RevisionNo Number {
      editable = [ETag = null];
   }
   attribute Contract Text {
      editable = [false];
   }
   attribute AuthorizeCode Text {
      label = "Coordinator";
      editable = [false];
   }
   attribute AdditionalDiscount Number {
      label = "Additional Discount (%)";
      editable = [false];
   }
   attribute CustomerQuoNo Text {
      label = "Customer's RFQ No";
      editable = [false];
   }
   attribute CustomerNo Text {
      editable = [false];
   }
   attribute CustRef Text {
      label = "Customer Reference";
      editable = [false];
   }
   attribute ReferenceName Text {
      fetch = "Contact_Util_API.Get_Cust_Contact_Name(CUSTOMER_NO,BILL_ADDR_NO,CUST_REF)";
      label = "Reference Name";
      maxlength = 200;
      editable = [false];
   }
   attribute ExternalRef Text {
      label = "External ID";
      editable = [false];
   }
   attribute CurrencyCode Text {
      label = "Order Currency";
      editable = [false];
   }
   attribute DocumentText Boolean {
      fetch = "DECODE(Document_Text_API.Note_Id_Exist(NOTE_ID), '1', 'TRUE', 'FALSE')";
      label = "Document Text";
      editable = [false];
   }
   attribute DateEntered Timestamp {
      label = "Created";
      editable = [false];
   }
   attribute WantedDeliveryDate Timestamp {
      label = "Wanted Delivery Date/Time";
      editable = [false];
   }
   attribute QuotationDate Timestamp {
      editable = [false];
   }
   attribute ExpirationDate Date {
      editable = [false];
   }
   attribute FollowUpDate Date;
   attribute RequestReceivedDate Date {
      label = "Request Receipt Date";
      editable = [false];
   }
   attribute AnsweringDate Date {
      editable = [false];
   }
   attribute PriceEffectivityDate Date {
      label = "Price Effective Date";
      editable = [false];
   }
   attribute QuotationProbability Number {
      label = "Probability (%)";
      editable = [false];
   }
   attribute QuotationNote Text {
      label = "Quotation Notes";
      editable = [false];
   }
   attribute LanguageCode Text {
      editable = [false];
   }
   attribute VendorNo Text {
      label = "Deliver-from Supplier";
      editable = [false];
   }
   attribute ShipViaCode Text {
      label = "Ship-Via Code";
      editable = [false];
   }
   attribute DeliveryTerms Text {
      editable = [false];
   }
   attribute DelTermsLocation Text {
      editable = [false];
   }
   attribute ForwardAgentId Text {
      label = "Forwarder ID";
      editable = [false];
      format = uppercase;
   }
   attribute FreightMapId Text {
      editable = [false];
   }
   attribute ZoneId Text {
      label = "Freight Zone";
      editable = [false];
   }
   attribute FreightPriceListNo Text {
      label = "Price List No";
      editable = [false];
   }
   attribute ApplyFixDelivFreight Boolean {
      fetch = "APPLY_FIX_DELIV_FREIGHT_DB";
      label = "Apply Fixed Delivery Freight";
      required = [true];
      editable = [false];
   }
   attribute FixDelivFreight Number {
      label = "Fixed Delivery Freight Amt";
      editable = [false];
      format = ifscurrency;
   }
   attribute BaseCurrency Text {
      fetch = "Company_Finance_API.Get_Currency_Code(COMPANY)";
      label = "Base Currency";
      maxlength = 100;
      editable = [false];
      format = uppercase;
   }
   attribute AgreementId Text {
      editable = [false];
   }
   attribute DeliveryLeadtime Number {
      editable = [false];
   }
   attribute ExtTransportCalendarId Text {
      label = "External Transport Calendar";
      editable = [false];
   }
   attribute PayTermId Text {
      label = "Payment Terms";
      editable = [false];
   }
   attribute MarketCode Text {
      editable = [false];
   }
   attribute DistrictCode Text {
      editable = [false];
   }
   attribute RegionCode Text {
      editable = [false];
   }
   attribute SalesmanCode Text {
      label = "Salesperson ID";
      editable = [ETag = null];
   }
   attribute ShipAddrNo Text {
      label = "Delivery Address";
      editable = [ETag = null];
   }
   attribute SingleOccAddrFlag Boolean("TRUE", "FALSE") {
      label = "Single Occurrence";
      editable = [ETag = null];
   }
   attribute BillAddrNo Text {
      label = "Document Address";
      editable = [ETag = null];
   }
   attribute CalcDiscFlag Boolean("FALSE", "TRUE") {
      label = "Discount Calculated";
      editable = [false];
   }
   attribute Printed Enumeration(OrderQuotationPrinted) {
      fetch = "PRINTED_DB";
      label = "Printed";
      editable = [false];
      required = [true];
   }
   attribute UsePriceInclTax Boolean("TRUE", "FALSE") {
      fetch = "USE_PRICE_INCL_TAX_DB";
      label = "Use Price Incl Tax";
      editable = [false];
   }
   attribute TaxLiability Text {
      editable = [false];
   }
   attribute LostTo Text {
      editable = [false];
   }
   attribute ReasonId Text {
      editable = [false];
   }
   attribute LoseWinRejectNote Text {
      label = "Won/Lost/Rejected Note";
   }
   attribute ClosedStatus Text {
      fetch = "CLOSED_STATUS";
      label = "State";
      maxlength = 20;
      editable = [false];
   }
   attribute PrintControlCode Text {
      label = "Print Code";
      editable = [false];
   }
   attribute CancelReason Text {
      label = "Cancellation Reason";
   }
   attribute CancellationReasonDescription Text {
      fetch = "Order_Cancel_Reason_API.Get_Reason_Description(CANCEL_REASON)";
      label = "Cancellation Reason Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute TotalNetAmtBase Number {
      fetch = "Order_Quotation_API.Get_Total_Base_Price(QUOTATION_NO)";
      label = "Total Net Amt/Base";
      editable = [false];
      format = ifscurrency;
   }
   attribute TotalNetAmtCurr Number {
      fetch = "Order_Quotation_API.Get_Total_Sale_Price__(QUOTATION_NO)";
      label = "Total Net Amt/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute AddDiscountAmtCurr Number {
      fetch = "Order_Quotation_API.Get_Total_Add_Discount_Amount(QUOTATION_NO)";
      label = "Add Discount Amt/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute TotTaxAmtCurr Number {
      fetch = "Order_Quotation_API.Get_Total_Tax_Amount(QUOTATION_NO)";
      label = "Tot Tax Amt/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute TotalGrossAmtCurr Number {
      fetch = "Order_Quotation_API.Get_Gross_Amount(QUOTATION_NO)";
      label = "Total Gross Amt/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute TotalGrossinclChrgCurr Number {
      fetch = "Order_Quotation_API.Get_Gross_Amount(QUOTATION_NO)+Order_Quotation_API.Get_Total_Sale_Charge__(QUOTATION_NO)+Order_Quotation_API.Get_Tot_Charge_Sale_Tax_Amt(QUOTATION_NO)";
      label = "Total Gross incl Chrg/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute Company Text {
      editable = [false];
   }
   attribute Condition Text {
      fetch = "Order_Quotation_API.Get_Allowed_Operations__(QUOTATION_NO)";
      label = "Condition";
      maxlength = 12;
      editable = [false];
   }
   attribute NoteId Number {
      editable = [false];
   }
   attribute ClosedStatusDb Text {
      fetch = "CLOSED_STATUS_DB";
      label = "Closed Status";
      maxlength = 20;
      editable = [false];
   }
   reference CustomerInfoRef(CustomerNo) to CustomerInfo(CustomerId);
   reference WorkTimeCalendarRef(ExtTransportCalendarId) to WorkTimeCalendar(CalendarId);
   reference PaymentTermRef(Company, PayTermId) to PaymentTerm(Company, PayTermId);
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference AuthorizeCodeRef(AuthorizeCode) to OrderCoordinatorLov(AuthorizeCode) {
      label = "Coordinator";
   }
   reference CustomerNoRef(CustomerNo) to CustOrdCustomer(CustomerNo) {
      label = "Customer";
   }
   reference CustRefRef(CustomerNo, BillAddrNo, CustRef) to CustInfoContactLovPub(CustomerId, AddressId, PersonId) {
      label = "Customer Reference";
   }
   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Order Currency";
   }
   reference LanguageCodeRef(LanguageCode) to ApplicationLanguage(LanguageCode) {
      label = "Language Code";
   }
   @DynamicComponentDependency PURCH
   reference VendorNoRef(VendorNo) to ValidSupplierLov(VendorNo) {
      label = "Deliver-from Supplier";
   }
   reference ShipViaCodeRef(ShipViaCode) to MpccomShipVia(ShipViaCode) {
      label = "Ship-Via";
   }
   reference DeliveryTermsRef(DeliveryTerms) to OrderDeliveryTermLov(DeliveryTerms) {
      label = "Delivery Terms";
   }
   reference ForwardAgentIdRef(ForwardAgentId) to ForwarderInfo(ForwarderId) {
      label = "Forwarder ID";
   }
   reference FreightMapIdRef(FreightMapId) to FreightMap(FreightMapId) {
      label = "Freight Map ID";
   }
   reference ZoneIdRef(FreightMapId, ZoneId) to FreightZone(FreightMapId, ZoneId) {
      label = "Freight Zone";
   }
   reference FreightPriceListNoRef(FreightPriceListNo) to FreightPriceListBase(PriceListNo) {
      label = "Price List No";
   }
   reference AgreementIdRef(AgreementId) to CustomerAgreement(AgreementId) {
      label = "Agreement ID";
   }
   reference ExtTransportCalendarIdRef(ExtTransportCalendarId) to WorkTimeCalendar(CalendarId) {
      label = "External Transport Calendar";
   }
   reference PayTermIdRef(Company, PayTermId) to PaymentTerm(Company, PayTermId) {
      label = "Payment Terms";
      where = "COMPANY = :parent.Company";
   }
   reference MarketCodeRef(MarketCode) to SalesMarket(MarketCode) {
      label = "Market Code";
   }
   reference DistrictCodeRef(DistrictCode) to SalesDistrict(DistrictCode) {
      label = "District Code";
   }
   reference RegionCodeRef(RegionCode) to SalesRegion(RegionCode) {
      label = "Region Code";
   }
   reference SalesmanCodeRef(SalesmanCode) to SalesPartAllSalesmanLov(SalesmanCode) {
      label = "Salesperson ID";
   }
   reference ShipAddrNoRef(CustomerNo, ShipAddrNo) to CustAddressShipLov(CustomerNo, AddrNo) {
      label = "Delivery Address";
   }
   reference BillAddrNoRef(CustomerNo, BillAddrNo) to CustBillAddressLov(CustomerNo, AddrNo) {
      label = "Document Address";
   }
   reference LostToRef(LostTo) to Competitor(CompetitorId) {
      label = "Lost To";
   }
   reference ReasonIdRef(ReasonId) to LoseWinReason(ReasonId) {
      label = "Reason";
   }
   reference PrintControlCodeRef(PrintControlCode) to CustOrdPrintControl(PrintControlCode) {
      label = "Print Code";
   }
   reference CancelReasonRef(CancelReason) to OrderCancelReason(CancelReason) {
      label = "Cancellation Reason";
      copy ReasonDescription to CancellationReasonDescription;
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------
action EmailSalesQuotation {
   initialcheck implementation;
   parameter Selection Text;
}

action GetResultKeyList Text {
   initialcheck implementation;
   parameter FullSelection Text;
}



--------------------------------- FUNCTIONS ---------------------------------
function GetAmounts Structure(AmountStructure) {
   ludependencies = OrderQuotation;
   parameter Contract Text;
   parameter QuotationNo Text;
   parameter CustomerNo Text;
   parameter Company Text;
}

-------------------------------- STRUCTURES ---------------------------------

structure AmountStructure {
   attribute TotalValue Text;
   attribute CustomerMinSalesAmount Text;
   attribute CurrencyCode Text;
}

--------------------------------- VIRTUALS ----------------------------------

virtual SalesQuotationVirtual {
   attribute SelectionList Text;
   array SalesQuotationEmailArray() to SalesQuotationEmailVirtual();
}

virtual SalesQuotationEmailVirtual {
   crud = Read, Update;

   attribute QuotationNo Text {
      editable = [false];
   }
   attribute CustomerNo Text {
      editable = [false];
   }
   attribute CustRef Text {
      label = "Customer Contact";
      editable = [false];
   }
   attribute Email Text {
      label = "E-mail";
   }
}

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

