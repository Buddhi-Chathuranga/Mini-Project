--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-08-09  IzShlk  SCUXXW4-8125, Converted from dlgAgreementDealPartDiscount using MTG Version: 1.25
--------------------------------------------------------------------------------------

projection CustomerAgreementDealPerPartDiscountHandling;
component ORDER;
layer Core;
description "Use this API to add multiple discount lines to a deal-per-part line.";
category Users;
include fragment AgreementSalesPartDealInitialCheck;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset AgreementDealPartDiscountSet for AgreementSalesPartDealVirtual;

------------------------------ ENTITY DETAILS -------------------------------
@Override
virtual AgreementSalesPartDealVirtual {
   crud = Create, Read;
   ludependencies = AgreementSalesPartDealVirtual;

   attribute CatalogNo Text {
      label = "Sales Part No";
   }
   attribute SalesPartDescription Text {
      label = "Sales Part Description";
   }
   attribute AgreementId Text {
      label = "Agreement ID";
   }
   attribute DealPrice Number {
      label = "Sales Price";
      format = ifscurrency;
   }
   attribute DealPriceInclTax Number {
      label = "Sales Price Incl Tax";
      format = ifscurrency;
   }
   attribute CurrencyCode Text {
      label = "Curr";
   }
   attribute MinQuantity Number {
      label = "Min Sales Qty";
   }
   attribute Discount Number {
      label = "Acc Discount";
      format = percentage;
   }
   attribute AccDiscountNetAmount Number {
      label = "Acc Discount Net Amt";
      format = ifscurrency;
   }
   attribute AccDiscountGrossAmount Number {
      label = "Acc Discount Gross Amt";
      format = ifscurrency;
   }
   attribute ValidFromDate Date {
      label = "Valid From";
   }
   attribute ValidToDate Date {
      label = "Valid To";
   }
   attribute BasePriceSite Text;
   attribute UpdAllowed Boolean;
   reference CustomerAgreementRef(AgreementId) to CustomerAgreement(AgreementId);
   reference SalesPartRef(BasePriceSite, CatalogNo) to SalesPart(Contract, CatalogNo);
   array AgreementDealPartDiscountArray(AgreementId, MinQuantity, ValidFromDate, CatalogNo) to AgreementPartDiscount(AgreementId, MinQuantity, ValidFromDate, CatalogNo);
}
@Override
entity AgreementPartDiscount {
   keys = AgreementId, MinQuantity, ValidFromDate, CatalogNo, DiscountNo {
      where = "AGREEMENT_ID = :AgreementId and MIN_QUANTITY = :MinQuantity and VALID_FROM_DATE = :ValidFromDate and CATALOG_NO = :CatalogNo and DISCOUNT_NO = :DiscountNo";
   }
   attribute DiscountType Text {
      editable = [ETag = null];
      format = uppercase;
   }
   attribute Description Text {
      fetch = "SALES_DISCOUNT_TYPE_API.Get_Description(DISCOUNT_TYPE)";
      label = "Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute CalculationBasis Number {
      editable = [false];
      format = ifscurrency;
   }
   attribute Discount Number {
      label = "Discount %";
   }
   attribute DiscountAmount Number {
      format = ifscurrency;
   }
   attribute PriceCurrency Number {
      label = "Net Price/Curr";
      editable = [ETag = null];
      format = ifscurrency;
   }
   attribute PriceInclTaxCurrency Number {
      label = "Net Price Incl Tax/Curr";
      editable = [ETag = null];
      format = ifscurrency;
   }
   attribute DiscountLineNo Number {
      label = "Discount Line No";
   }
   reference DiscountTypeRef(DiscountType) to SalesDiscountType(DiscountType) {
      label = "Discount Type";
   }
}

--------------------------------- FUNCTIONS ---------------------------------
function DiscountType List<Entity(SalesDiscountType)> {
   parameter DiscountType Text;
   where = "OBJSTATE != 'Blocked' ";
}

---------------------------------- ACTIONS ----------------------------------
action CalcDiscount {
   initialcheck AgreementSalesPartDealInitialCheck(AgreementId, MinQuantity, ValidFrom, CatalogNo);
   parameter AgreementId Text;
   parameter MinQuantity Number;
   parameter ValidFrom Date;
   parameter CatalogNo Text;
   ludependencies = AgreementPartDiscount;
}

action UpdateParent {
   initialcheck none;
   parameter ObjKey Text;
   ludependencies = AgreementSalesPartDealVirtual;
}

action UpdateDiscountLineNo {
   initialcheck AgreementSalesPartDealInitialCheck(AgreementId, MinQuantity, ValidFrom, CatalogNo);
   parameter AgreementId Text;
   parameter MinQuantity Number;
   parameter ValidFrom Date;
   parameter CatalogNo Text;
   parameter DiscountNo Number;
   parameter CreateDiscount Boolean;
   ludependencies = AgreementPartDiscount, AgreementSalesPartDeal;
}