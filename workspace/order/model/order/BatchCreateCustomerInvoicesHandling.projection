----------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------
-- 200911      ApWilk  Bug 155540(SCZ-11357), Changed the parameter name ExcludeUncntdCharges as InvoiceUncntdCharges and added the function GetCompanyParam()
-- 191025      Satglk  SCXTEND-963 Salesman renamed to Salesperson
-- 181108      RAKUSE  SCUXXW4-8600, Converted dialog 'dlgPsheetBatchCreateCustomerInvoices' using MTG Version: 1.34
----------------------------------------------------------------------------------------------------
projection BatchCreateCustomerInvoicesHandling;
component ORDER;
layer Core;
description "Scheduled Task Assistant handling ''Batch Create Customer Invoices''";
category Users;
include fragment ScheduledTasksCommon;
include fragment UserSiteCompanyLovSelector;
include fragment CustOrdCust1Selector;
include fragment OrderCoordinatorLovSelector;
include fragment SalesPartSalesmanLovSelector;

-------------------------------- STRUCTURES----------------------------------

@Override
structure ParametersStructure {
   attribute Company Text;
   attribute Contract Text;
   attribute OrderId Text;
   attribute CustomerNo Text;
   attribute AuthorizeCode Text;
   attribute SalesmanCode Text;
   attribute Priority Number;
   attribute InvoiceUncntdCharges Boolean;
}

--------------------------------- VIRTUALS ----------------------------------

@Override
virtual TaskVirtual using BatchSchedule {
   -- Parameters
   //! TODO: Define the arguments and their data type, required flag and label here...

   attribute Company Text {
      required = [true];
   }
   attribute Contract Text {
      required = [true];
   }
   attribute OrderId Text {
      required = [true];
   }
   attribute CustomerNo Text {
      required = [true];
   }
   attribute AuthorizeCode Text {
      required = [true];
   }
   attribute SalesmanCode Text {
      label = "Salesperson";
      required = [true];
   }
   attribute Priority Number;
   attribute InvoiceUncntdCharges Boolean("0", "1") {
      required = [true];
   }


   reference CompanyRef(Company) to CompanyFinance(Company);
   reference ContractRef(Company, Contract) to UserSiteCompanyLov(Company, Contract);
   // TODO: This reference will have to be one that can take additional "static" values like %.
   // Uncomment the attribute below once the TEUXX-15075/TEUXX-15266 are available.
   // existcheck = [false];
   reference OrderIdRef(OrderId) to CustOrderType(OrderId);
   // TODO: This reference will have to be one that can take additional "static" values like %.
   // Uncomment the attribute below once the TEUXX-15075/TEUXX-15266 are available.
   // existcheck = [false];
   reference CustomerNoRef(CustomerNo) to CustOrdCust1(CustomerNo);
   // TODO: This reference will have to be one that can take additional "static" values like %.
   // Uncomment the attribute below once the TEUXX-15075/TEUXX-15266 are available.
   // existcheck = [false];
   reference AuthorizeCodeRef(AuthorizeCode) to OrderCoordinatorLov(AuthorizeCode);
   // TODO: This reference will have to be one that can take additional "static" values like %.
   // Uncomment the attribute below once the TEUXX-15075/TEUXX-15266 are available.
   // existcheck = [false];
   reference SalesmanCodeRef(SalesmanCode) to SalesPartSalesmanLov(SalesmanCode);
   // TODO: This reference will have to be one that can take additional "static" values like %.
   // Uncomment the attribute below once the TEUXX-15075/TEUXX-15266 are available.
   // existcheck = [false];

   ---

}

function AuthorizeCodeLovFilter List<Entity(OrderCoordinatorLov)> {
   where = "OBJSTATE in ('Active')";
}

function SalesmanCodeLovFilter List<Entity(SalesPartSalesmanLov)> {
   where = "OBJSTATE in ('Active')";
}

function GetCompanyParam Boolean {
   parameter Company Text;
}