-----------------------------------------------------------------------------
--
--  Fragment:     QuotationLineAddressDialog
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date       Sign    History
--  ------     ------  ---------------------------------------------------------
--  2020-07-10 NiDalk  SCXTEND-4445, Fixed type conversion error in TaxLiabilityType.
--  2020-06-10 KiSalk  Bug 154335(SCZ-10322), Added maxlength to ship address attributes in QuotationLineAddresStructure.
--  2019-02-14 SeJalk  SCUXXW4-8682, Converted from dlgQuotationLineAddress using MTG Version: 1.34
-----------------------------------------------------------------------------
fragment QuotationLineAddressDialog;
component ORDER;
layer Core;
description "Use this fragment to view or modify the delivery address and the delivery information for the sales quotation line.";

----------------------------- CLIENT FRAGMENTS ------------------------------

-------------------------------- ASSISTANTS ---------------------------------
dialog QuotationLineAddressDialog for QuotationLineAddresStructure {
   label = "Quotation Line Address";
   input(Company, QuotationNo, LineNo, RelNo, LineItemNo, CatalogNo, ShipAddrNo, DefaultAddrFlag, ShipViaCode, ExtTransportCalendarId, FreightMapId, ZoneId, FreightPriceListNo, ShipAddrInCity, SingleOccAddrFlag, ShipAddrName, ShipAddress1, ShipAddress2, ShipAddress3, ShipAddress4, ShipAddress5, ShipAddress6, ShipAddrZipCode, ShipAddrCity, ShipAddrState, ShipAddrCounty, ShipAddrCountryCode, CustomerNo, DelTermsLocation, DeliveryLeadtime, PickingLeadtime, ForwardAgentId, FreightPriceListNo, ShipViaCode, DeliveryTerms, Contract, PartNo, OrderSupplyType, VendorNo, TaxLiability, TaxLiabilityType)
      {
      command InitAddressCommand;
   }
   output(ShipAddrNo, DefaultAddrFlag, ShipViaCode, ExtTransportCalendarId, FreightMapId, ZoneId, FreightPriceListNo, ShipAddrInCity, SingleOccAddrFlag, ShipAddrName, ShipAddress1, ShipAddress2, ShipAddress3, ShipAddress4, ShipAddress5, ShipAddress6, ShipAddrZipCode, ShipAddrCity, ShipAddrState, ShipAddrCounty, ShipAddrCountryCode, DelTermsLocation, DeliveryLeadtime, PickingLeadtime, ForwardAgentId, FreightPriceListNo, ShipViaCode, DeliveryTerms, TaxLiability, TaxLiabilityType);

   group QuotationLineHeaderGroup;
   group DefaultAddressGroup;
   group DeliveryLineInfoGroup;
   group FreightGroup;
   command Ok;
   command Cancel;
   command SetDefaultInfoFlagCommand;

}

command Ok for QuotationLineAddresStructure {
   label = "OK";
   variable TaxMethodVar {
      type = Text;

   }
   execute {
      if [DefaultAddrFlagDb = "Yes"] {
         set ShipAddress1 = null;
         set ShipAddress2 = null;
         set ShipAddress3 = null;
         set ShipAddress4 = null;
         set ShipAddress5 = null;
         set ShipAddress6 = null;
         set ShipAddrCity = null;
         set ShipAddrCountryDesc = null;
         set ShipAddrCounty = null;
         set ShipAddrState = null;
         set ShipAddrZipCode = null;
         set ShipAddrCountryCode = null;
         set ShipAddrInCity = null;
         set ShipAddrName = null;
      }
      if[not SingleOccAddrFlag and ShipAddrNo = null]
         {
         error("Delivery Address is mandatory");
         exit;
      }
      if[SingleOccAddrFlag] {
         call GetExternalTaxCalMethodDb(Company) into TaxMethodVar;
         if [TaxMethodVar = "NOT_USED"] {
            alert("Tax lines have not been changed for the single occurrence address line(s). You may want to check the tax information.");
         }
      }
      exit OK;
   }

}
--------------------------------- COMMANDS ----------------------------------
command InitAddressCommand for QuotationLineAddresStructure {
   variable AddressVar {
      type = Structure(LineAddressStructure);
   }
   execute {
      call GetLineAddressInfo(QuotationNo, ShipAddrNo, DefaultAddrFlag, SingleOccAddrFlag) into AddressVar;
      set AddrInCity = AddressVar.AddrInCity;
      set AddressName = AddressVar.AddressName;
      set Address1 = AddressVar.Address1;
      set Address2 = AddressVar.Address2;
      set Address3 = AddressVar.Address3;
      set Address4 = AddressVar.Address4;
      set Address5 = AddressVar.Address5;
      set Address6 = AddressVar.Address6;
      set ZipCode = AddressVar.ZipCode;
      set City = AddressVar.City;
      set County = AddressVar.County;
      set State = AddressVar.State;
      set CountryCode = AddressVar.CountryCode;
      set CountryDesc = AddressVar.CountryDesc;
   }
}

command SetDefaultInfoFlagCommand for QuotationLineAddresStructure clone InitAddressCommand {
   label = "Set to Default Info";
   variable AddressDetailVar {
      type = Structure(AddressDetailStructure);
   }
   visible = [DefaultAddrFlag = "No"];
   execute {
      set DefaultAddrFlag = "Yes";
      call GetParentAddressDetails(QuotationNo) into AddressDetailVar;

      set ForwardAgentId = AddressDetailVar.ForwardAgentId;
      set ShipViaCode = AddressDetailVar.ShipViaCode;
      set DeliveryLeadtime = AddressDetailVar.DeliveryLeadtime;
      set PickingLeadtime = AddressDetailVar.PickingLeadtime;
      set ExtTransportCalendarId = AddressDetailVar.ExtTransportCalendarId;
      set DeliveryTerms = AddressDetailVar.DeliveryTerms;
      set DelTermsLocation = AddressDetailVar.DelTermsLocation;
      set FreightMapId = AddressDetailVar.FreightMapId;
      set ZoneId = AddressDetailVar.ZoneId;
      set FreightPriceListNo = AddressDetailVar.FreightPriceListNo;
      set ShipAddrNo = AddressDetailVar.ShipAddrNo;

      super;
      set SingleOccAddrFlag = AddressVar.ParentSingleOccAddrFlag;
      exit;
   }
}

command SetDefaultInfoCommand for QuotationLineAddresStructure clone InitAddressCommand {
   execute {
      set DefaultAddrFlag = "No";
      if [DefaultAddrFlag = "No"] {
         if [SingleOccAddrFlag] {
            if [ShipAddress1 = null and ShipAddress2 = null and ShipAddress3 = null and ShipAddress4 = null and ShipAddress5 = null and ShipAddress6 = null
            and ShipAddrCity = null and ShipAddrCounty = null and ShipAddrState = null and ShipAddrZipCode = null and ShipAddrCountryCode = null and ShipAddrName = null] {
               set ShipAddress1 = Address1;
               set ShipAddress2 = Address2;
               set ShipAddress3 = Address3;
               set ShipAddress4 = Address4;
               set ShipAddress5 = Address5;
               set ShipAddress6 = Address6;
               set ShipAddrCity = City;
               set ShipAddrCountryDesc = CountryDesc;
               set ShipAddrCounty = County;
               set ShipAddrState = State;
               set ShipAddrZipCode = ZipCode;
               set ShipAddrCountryCode = CountryCode;
               set ShipAddrInCity = AddrInCity;
               set ShipAddrName = AddressName;

            }
         }
      }
      super;
   }
}

command FetchDeliveryAttributesCommand for QuotationLineAddresStructure clone SetDefaultInfoCommand {
   execute {
      call FetchDeliveryAttributes(QuotationNo,
      LineNo,
      RelNo,
      Contract,
      CustomerNo,
      ShipAddrNo,
      ShipViaCode,
      PartNo,
      OrderSupplyType,
      VendorNo,
      SingleOccAddrFlag,
      DeliveryTerms,
      DelTermsLocation,
      ForwardAgentId,
      DeliveryLeadtime,
      PickingLeadtime,
      ShipAddrZipCode,
      ShipAddrCity,
      ShipAddrCounty,
      ShipAddrState,
      ShipAddrCountryCode,
      "FALSE") into DeliveryAttrVar;
      set FreightMapId = DeliveryAttrVar.FreightMapId;
      set ZoneId = DeliveryAttrVar.ZoneId;
      set FreightPriceListNo = DeliveryAttrVar.FreightPriceListNo;
      super;

   }
}

command ValidateShipViaCodeCommand for QuotationLineAddresStructure clone FetchDeliveryAttributesCommand {
   execute {
      set DefaultAddrFlag = "No";
      super;
      set  ExtTransportCalendarId = DeliveryAttrVar.ExtTransportCalendarId;
      set DeliveryLeadtime = DeliveryAttrVar.DeliveryLeadtime;
      set PickingLeadtime = DeliveryAttrVar.PickingLeadtime;
      set ForwardAgentId = DeliveryAttrVar.ForwardAgentId;
      set DeliveryTerms = DeliveryAttrVar.DeliveryTerms;
      set DelTermsLocation = DeliveryAttrVar.DelTermsLocation;

   }
}


command ValidateAddressCommand for QuotationLineAddresStructure clone FetchDeliveryAttributesCommand {
   execute {
      set DefaultAddrFlag = "No";
      if [ShipAddrCountryCode != original.ShipAddrCountryCode] {
         super;
      }
   }
}

command ValidateShipAddresNoCommand for QuotationLineAddresStructure clone InitAddressCommand {
   variable AddressDetailVar {
      type = Structure(AddressDetailStructure);
   }
   execute {
      set DefaultAddrFlag = "No";
      call ValidateAddressNo(
      CustomerNo,
      ShipAddrNo,
      Contract,
      CatalogNo,
      DeliveryLeadtime,
      PickingLeadtime,
      PartNo,
      OrderSupplyType,
      VendorNo,
      QuotationNo) into AddressDetailVar;

      set ForwardAgentId = AddressDetailVar.ForwardAgentId;
      set ShipViaCode = AddressDetailVar.ShipViaCode;
      set DeliveryLeadtime = AddressDetailVar.DeliveryLeadtime;
      set PickingLeadtime = AddressDetailVar.PickingLeadtime;
      set ExtTransportCalendarId = AddressDetailVar.ExtTransportCalendarId;
      set DeliveryTerms = AddressDetailVar.DeliveryTerms;
      set DelTermsLocation = AddressDetailVar.DelTermsLocation;
      set FreightMapId = AddressDetailVar.FreightMapId;
      set ZoneId = AddressDetailVar.ZoneId;
      set FreightPriceListNo = AddressDetailVar.FreightPriceListNo;
      set TaxLiability = AddressDetailVar.TaxLiability;
      set TaxLiabilityType = AddressDetailVar.TaxLiabilityType;
      super;

   }
}

---------------------------------- GROUPS -----------------------------------
group QuotationLineHeaderGroup for QuotationLineAddresStructure {
   label = "";
   field QuotationNo {
      size = Small;
   }
   field LineNo {
      size = Small;
   }
   field RelNo {
      size = Small;
   }

   field DefaultAddrFlag {
      size = Small;
      editable = [false];
      enumerationtrue = "Yes";
      enumerationfalse = "No";
      truelabel = "Yes";
      falselabel = "No";
   }

}

group DefaultAddressGroup for QuotationLineAddresStructure {
   label = "Address";
   lov ShipAddrNoRef with ReferenceCustAddressShipLovSelector {
      size = Small;
      visible = [not SingleOccAddrFlag];
      validate command ValidateShipAddresNoCommand;
   }
   -- default address name
   field AddressName {
      visible = [(DefaultAddrFlag = "Yes") or not SingleOccAddrFlag];
   }
    -- single occurance address name
   field ShipAddrName {
      visible = [(DefaultAddrFlag = "No") and SingleOccAddrFlag];
   }

   -- this address field is for showing default address details.
   addressfield {
      address1 Address1;
      address2 Address2;
      address3 Address3;
      address4 Address4;
      address5 Address5;
      address6 Address6;
      city City;
      country CountryDesc;
      county County;
      state State;
      zipcode ZipCode;
      countrycode CountryCode;
      label = "Address Details";
      size = Medium;
      visible = [(DefaultAddrFlag = "Yes") or not SingleOccAddrFlag];
      editable = [false];
   }

   -- This address field is for setting and showing Single occurence address details
   addressfield {
      address1 ShipAddress1;
      address2 ShipAddress2;
      address3 ShipAddress3;
      address4 ShipAddress4;
      address5 ShipAddress5;
      address6 ShipAddress6;
      city ShipAddrCity;
      country ShipAddrCountryDesc;
      county ShipAddrCounty;
      state ShipAddrState;
      zipcode ShipAddrZipCode;
      countrycode ShipAddrCountryCode;
      label = "Address Details";
      size = Medium;
      validate command ValidateAddressCommand;
      visible = [(DefaultAddrFlag = "No") and SingleOccAddrFlag];
   }

   -- default in city
   field AddrInCity {
      visible = [(DefaultAddrFlag = "Yes") or not SingleOccAddrFlag];
   }

   -- single occurance in city
   field ShipAddrInCity {
      visible = [(DefaultAddrFlag = "No") and SingleOccAddrFlag];
   }

   field SingleOccAddrFlag {
      validate command SetDefaultInfoCommand;

   }
}

group DeliveryLineInfoGroup for QuotationLineAddresStructure {
   label = "Delivery Information";
   lov ForwardAgentIdRef with ReferenceForwarderInfoSelector {
      description = ForwardAgentIdRef.Name;
      validate command SetDefaultInfoCommand;
   }

   lov ShipViaCodeRef with ReferenceMpccomShipViaSelector {
      description = ShipViaCodeRef.Description;
      validate command ValidateShipViaCodeCommand;
   }
   lov DeliveryTermsRef with ReferenceOrderDeliveryTermLovSelector {
      description = DeliveryTermsRef.Description;
      validate command SetDefaultInfoCommand;
   }

   lov ExtTransportCalendarIdRef with ReferenceWorkTimeCalendarSelector {
      description = ExtTransportCalendarIdRef.Description;
      validate command SetDefaultInfoCommand;
   }
   field DelTermsLocation {
      validate command SetDefaultInfoCommand;
   }
   field DeliveryLeadtime {
      label = "External Transport Lead Time";
      type = Number;
      validate command SetDefaultInfoCommand;
   }
   field PickingLeadtime {
      type = Number;
      validate command SetDefaultInfoCommand;
   }
}

group FreightGroup for QuotationLineAddresStructure {
   label = "Freight";
   lov FreightMapIdRef with ReferenceFreightMapSelector {
      description = FreightMapIdRef.Description;
   }
   lov ZoneIdRef with ReferenceFreightZoneSelector {
      description = ZoneIdRef.Description;
      validate command SetDefaultInfoCommand;
   }
   lov FreightPriceListNoRef with ReferenceFreightPriceListBaseSelector {
      description = FreightPriceListNoRef.Description;
   }
}
--------------------------- PROJECTION FRAGMENTS ----------------------------
--------------------------------- FUNCTIONS ---------------------------------
function GetLineAddressInfo Structure(LineAddressStructure) {
   parameter QuotationNo Text;
   parameter ShipAddrNo Text;
   parameter DefaultAddrFlagDb Enumeration(GenYesNo);
   parameter SingleOccAddrFlag Boolean;
}
function GetExternalTaxCalMethodDb Text {
   parameter Company Text;
}

function FetchDeliveryAttributes Structure(AddressDetailStructure) {
   parameter QuotationNo Text;
   parameter LineNo Text;
   parameter RelNo  Text;
   parameter Contract Text;
   parameter CustomerNo Text;
   parameter ShipAddrNo Text;
   parameter ShipViaCode Text;
   parameter PartNo Text;
   parameter OrderSupplyType  Enumeration(OrderSupplyType);
   parameter VendorNo Text;
   parameter SingleOccAddrFlag Boolean;
   parameter DeliveryTerms Text;
   parameter DelTermsLocation Text;
   parameter ForwardAgentId Text;
   parameter DeliveryLeadtime Number;
   parameter PickingLeadtime Number;
   parameter SoZipCode Text;
   parameter SoCity Text;
   parameter SoCounty Text;
   parameter SoState Text;
   parameter SoCountryCode Text;
   parameter ShipViaCodeChanged Text;
}

function ValidateAddressNo Structure(AddressDetailStructure) {
   parameter CustomerNo Text;
   parameter ShipAddrNo Text;
   parameter Contract Text;
   parameter CatalogNo Text;
   parameter DeliveryLeadtime Number;
   parameter PickingLeadtime Number;
   parameter PartNo Text;
   parameter OrderSupplyType  Enumeration(OrderSupplyType);
   parameter VendorNo Text;
   parameter QuotationNo Text;

}

function GetParentAddressDetails Structure(AddressDetailStructure) {
   parameter QuotationNo Text;
}
   -------------------------------- STRUCTURES ---------------------------------
structure QuotationLineAddresStructure {
   attribute Company Text;
   attribute Contract Text;
   attribute PartNo Text;
   attribute OrderSupplyType Enumeration(OrderSupplyType);
   attribute VendorNo Text;
   attribute QuotationNo Text {
      editable = [false];
   }
   attribute LineNo Text {
      editable = [false];
   }
   attribute RelNo Text {
      editable = [false];
   }
   attribute LineItemNo Number;
   attribute CatalogNo Text;

   attribute CustomerNo Text;
   attribute ShipAddrNo Text {
      label = "Delivery Address";
   }
   attribute DefaultAddrFlag Enumeration(GenYesNo) {
      label = "Default Info";
      required = [true];
   }
   attribute ShipViaCode Text {
      label = "Ship Via";
      format = uppercase;
   }
   attribute ForwardAgentId Text {
      label = "Forwarder";
      format = uppercase;

   }
   attribute DeliveryTerms Text {
      label = "Delivery Terms";
      format = uppercase;

   }
   attribute ExtTransportCalendarId Text {
      label = "External Transport Calendar";
      format = uppercase;
   }
   attribute FreightMapId Text {
      label = "Freight Map";
      maxlength = 100;
      editable = [false];
   }
   attribute ZoneId Text {
      label = "Freight Zone";
      format = uppercase;
      editable = [false];
   }
   attribute FreightPriceListNo Text {
      label = "Freight Price List";
      format = uppercase;
      editable = [false];
   }
   attribute ShipAddrInCity Boolean {
      label = "Within City Limit";
      required = [true];
   }
   attribute AddrInCity Boolean {
      label = "Within City Limit";
      required = [true];
      editable = [false];
   }
   attribute SingleOccAddrFlag Boolean("TRUE", "FALSE") {
      label = "Single Occurrence";
      required = [true];
   }
   attribute ShipAddrName Text {
      label = "Name";
   }
   attribute ShipAddress1 Text {
      label = "Address 1";
      maxlength = 35;
   }
   attribute ShipAddress2 Text {
      label = "Address 2";
      maxlength = 35;
   }
   attribute ShipAddress3 Text {
      label = "Address 3";
      maxlength = 100;
   }
   attribute ShipAddress4 Text {
      label = "Address 4";
      maxlength = 100;
   }
   attribute ShipAddress5 Text {
      label = "Address 5";
      maxlength = 100;
   }
   attribute ShipAddress6 Text {
      label = "Address 6";
      maxlength = 100;
   }
   attribute ShipAddrZipCode Text {
      label = "Zip Code";
      maxlength = 35;
   }
   attribute ShipAddrCity Text {
      label = "City";
      maxlength = 35;
   }
   attribute ShipAddrState Text {
      label = "State";
      maxlength = 35;
   }
   attribute ShipAddrCounty Text {
      label = "County";
      maxlength = 35;
   }
   attribute ShipAddrCountryCode Text {
      label = "Country Code";
   }
   attribute ShipAddrCountryDesc Text {
      label = "Country Desc";
   }

   attribute AddressName Text {
      label = "Name";
      editable = [false];
   }
   attribute Address1 Text;
   attribute Address2 Text;
   attribute Address3 Text;
   attribute Address4 Text;
   attribute Address5 Text;
   attribute Address6 Text;
   attribute ZipCode Text;
   attribute City Text;
   attribute County Text;
   attribute State Text;
   attribute CountryCode Text;
   attribute CountryDesc Text {
      label = "Country";
      maxlength = 2000;
   }
   attribute DelTermsLocation Text;
   attribute DeliveryLeadtime Number;
   attribute PickingLeadtime Number;
   attribute TaxLiability Text;
   attribute TaxLiabilityType Enumeration(TaxLiabilityType);


   reference ShipAddrNoRef(CustomerNo, ShipAddrNo) to CustAddressShipLov(CustomerNo, AddrNo) {
      label = "Delivery Address";
   }
   reference ForwardAgentIdRef(ForwardAgentId) to ForwarderInfo(ForwarderId) {
      label = "Forward Agent ID";
   }
   reference ShipViaCodeRef(ShipViaCode) to MpccomShipVia(ShipViaCode) {
      label = "Ship Via";
   }
   reference DeliveryTermsRef(DeliveryTerms) to OrderDeliveryTermLov(DeliveryTerms) {
      label = "Delivery Terms";
   }
   reference ExtTransportCalendarIdRef(ExtTransportCalendarId) to WorkTimeCalendar(CalendarId) {
      label = "External Transport Calendar";
   }
   reference FreightMapIdRef(FreightMapId) to FreightMap(FreightMapId) {
      label = "Freight Map";
   }

   reference ZoneIdRef(FreightMapId, ZoneId) to FreightZone(FreightMapId, ZoneId) {
      label = "Freight Zone";
   }
   reference FreightPriceListNoRef(FreightPriceListNo) to FreightPriceListBase(PriceListNo) {
      label = "Freight Price List";
   }
}


structure LineAddressStructure {
   attribute AddrInCity Boolean;
   attribute AddressName Text;
   attribute Address1 Text;
   attribute Address2 Text;
   attribute Address3 Text;
   attribute Address4 Text;
   attribute Address5 Text;
   attribute Address6 Text;
   attribute ZipCode Text;
   attribute City Text;
   attribute County Text;
   attribute State Text;
   attribute CountryCode Text;
   attribute CountryDesc Text;
   attribute ParentSingleOccAddrFlag Boolean;

}

structure AddressDetailStructure {
   attribute ForwardAgentId Text;
   attribute ShipViaCode Text;
   attribute DeliveryLeadtime Number;
   attribute PickingLeadtime Number;
   attribute ExtTransportCalendarId Text;
   attribute DeliveryTerms Text;
   attribute DelTermsLocation Text;
   attribute FreightMapId Text;
   attribute ZoneId Text;
   attribute FreightPriceListNo Text;
   attribute ShipViaDesc Text;
   attribute DeliveryTermsDesc Text;
   attribute ShipAddrNo Text;
   attribute TaxLiability Text;
   attribute TaxLiabilityType Enumeration(TaxLiabilityType);

}

