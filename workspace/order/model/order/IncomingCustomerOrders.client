--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2021-12-23  Skanlk  Bug 161134(SC21R2-6825), Modified command BulkValidateTaxIdNumberCommand by passing the TAX_ID_TYPE to validate Tax ID other than EU countires.
-- 2019-12-06  SatGlk  SCXTEND-885, Added Created, Receieved Date
-- 2019-11-01  chlelk  SCXTEND-1302, The startupmode was set to "Search"
-- 2019-09-30  chlelk  SCXTEND-413,  Field ranking was done for 40 fields.
-- 2019-07-15  MaEelk  SCUXXW4-215233, Set Data Validity Colours.
-- 2019-05-24  RaVdlk  SCUXXW4-21521, Concatenated Country Code and Ship Via Code
-- 2018-05-14  MAHPLK  SCUXXW4-1101, Converted from tbwOverviewExternalCustOrders using MTG Version: 1.16
--------------------------------------------------------------------------------------

client IncomingCustomerOrders;
component ORDER;
layer Core;
projection IncomingCustomerOrdersHandling;

include fragment TaxIdNumbersValidation;

----------------------------- NAVIGATOR ENTRIES -----------------------------

navigator {
   entry IncomingCustomerOrdersNavEntry parent OrderNavigator.OrderIncomingMessages at index 200 {
      label = "Incoming Customer Orders";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------

page List using IncomingCustomerOrders {
   label = "Incoming Customer Orders";
   startupmode = search;
   list IncomingCustomerOrdersList {
      details = "page/IncomingCustomerOrder/Form?$filter=MessageId eq $[MessageId]";
   }
}

--------------------------------- COMMANDS ----------------------------------

@Override
command BulkValidateTaxIdNumberCommand for IncomingCustomerOrder {

   enabled = [VatNo != null];
   bulkexecute {
      stringify(records, "${keyref}TAX_ID_NUMBER=${VatNo}^COUNTRY_CODE=${CountryCode}^TAX_ID_TYPE=${TaxIdType}^;") into TaxIdNumberSelectionVar;
      set ProjectionNameVar = "IncomingCustomerOrdersHandling";
      super;
   }
}
----------------------------------- LISTS -----------------------------------

list IncomingCustomerOrdersList for IncomingCustomerOrder {
   field MessageId;
   field ReceivedDate;
   field CreatedDate;
   field OrderNo;
   field Contract;
   badge Objstate {
      label = "Status";
      emphasis StateBlocked = [Objstate = "Stopped"];
      emphasis Progress1 = [Objstate = "RequiresApproval"];
      emphasis StateCancelled = [Objstate = "Cancelled"];
      emphasis Progress6 = [Objstate = "Changed"];
      emphasis Progress12 = [Objstate = "Created"];
      style = TextOnly;
   }
   field CustomerNo {
      contactwidget {
         enabled = [CustomerNo != null];
         source = Customer;
      }
   }
   field CustomerName;
   field DeliveryDate;
   field CurrencyCode;
   field DeliveryAddressName;
   field ShipAddress1;
   field ShipAddress2;
   field ShipAddress3;
   field ShipAddress4;
   field ShipAddress5;
   field ShipAddress6;

   field ShipZipCode;
   field ShipCity;
   field ShipState;
   field ShipCounty;
   lov CountryCodeRef with ReferenceIsoCountrySelector {
      description = CountryCodeRef.Description;
   }
   field VatNo;
   field TaxIdValidatedDate;
   field DeliveryTerms;
   field DeliveryTermsDesc;
   field DelTermsLocation;
   lov ShipViaCodeRef with ReferenceMpccomShipViaSelector {
      description = ShipViaCodeRef.Description;
   }
   field PayTermId;
   field RouteId;
   field ShipmentType;
   field DeliveryLeadtime;
   field PickingLeadtime;
   field CustRef;
   field InternalPoNo;
   field CustomerPoNo;
   field CustomerNoPay;
   field ForwardAgentId;
   field LanguageCode;
   field ExternalRef;
   field InternalCustomerSite;
   field LabelNote;
   field ErrorMessage;
   field EanLocationDocAddr;
   field EanLocationDelAddr;
   field EanLocationPayerAddr;
   field MessageType;
   field NoteText;
   field InternalDeliveryType;
   field BackorderOption;

   fieldranking MessageId, OrderNo, Contract, Objstate, CustomerNo, DeliveryDate, CurrencyCode, DeliveryAddressName, ShipAddress1, ShipAddress2, ShipZipCode, ShipCity, ShipState, ShipCounty, CountryCodeRef, VatNo, TaxIdValidatedDate, DeliveryTerms, ShipViaCodeRef, PayTermId, RouteId, ShipmentType, DeliveryLeadtime, PickingLeadtime, CustRef, InternalPoNo, CustomerPoNo, CustomerNoPay, ForwardAgentId, LanguageCode, InternalCustomerSite, LabelNote, ExternalRef, ErrorMessage, EanLocationDocAddr, EanLocationDelAddr, EanLocationPayerAddr, MessageType, InternalDeliveryType, BackorderOption, ReceivedDate, CreatedDate;
   fieldorder = MessageId, OrderNo, Contract, Objstate, CustomerNo, DeliveryDate, CurrencyCode, DeliveryAddressName, ShipAddress1, ShipAddress2, ShipZipCode, ShipCity, ShipState, ShipCounty, CountryCodeRef, VatNo, TaxIdValidatedDate, DeliveryTerms, ShipViaCodeRef, PayTermId, RouteId, ShipmentType, DeliveryLeadtime, PickingLeadtime, CustRef, InternalPoNo, CustomerPoNo, CustomerNoPay, ForwardAgentId, LanguageCode, InternalCustomerSite, LabelNote, ExternalRef, ErrorMessage, EanLocationDocAddr, EanLocationDelAddr, EanLocationPayerAddr, MessageType, InternalDeliveryType, BackorderOption;

   commandgroup IncomingCustomerOrdersCmdGroup {

      command BulkValidateTaxIdNumberCommand;
   }
}


