
--  Date       Sign    History
--  ------     ------  ---------------------------------------------------------
-- 2019-11-07  FRBESE  SCXTEND-1156, Changed InvoiceStatisticsNavEntry navigator entry index from 1600 to 1080.
-- 2018-08-15  KhVese  SCUXXW4-12122, Modified commands StatisticsSummarySelectedLines, StatisticsSummaryAllLines
-- 2018-05-28  StHose  SCUXXW4-924, Concatenated CustomerID/Name
-- 2018-05-25  HPetse  SCUXXW4-924, Added field ranking
-- 2018-05-25  RaVdlk  SCUXXW4-924, Removed the overriding of CustomerOrderLovList and ReferenceCustomerOrderSelector and changed
--                     labels of commands
-- 2018-05-24  KhVese  SCUXXW4-924, Implemented Command StatisticsSummaryAllLines. And modified command StatisticsSummaryForSelectedLines
-- 2018-05-17  RaVdlk  SCUXXW4-924, Created the dialog for 'Statistics summary for Selected lines'
-- 2018-05-03  RaVdlk  SCUXXW4-924, Changed the navigator entry
-- 2018-05-03  RaVdlk  SCUXXW4-924, Converted tbwInvoiceStatistics using MTG Version: 1.16
--  ------     ------  ---------------------------------------------------------

client CustomerInvoicedSales;
component ORDER;
layer Core;
projection CustomerInvoicedSalesAnalysis;
include fragment UserAllowedSiteLovSelector;
include fragment SalesPartLov2Selector;
include fragment CustomerOrderInvHeadUivSelector;
include fragment CustOrdCust1Selector;
include fragment CustOrdCust2Selector;

navigator {
   entry InvoiceStatisticsNavEntry parent OrderNavigator.SalesInvoicing at index 1080 {
      label = "Customer Invoiced Sales ";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------

page List using CustomerOrderInvItems {
   label = "Customer Invoiced Sales";
   startupmode = search;
   list InvoiceStatisticsList {
      details = "page/CustomerOrderInvoice/Form?$filter=Company eq $[Company] and InvoiceId eq $[InvoiceId]";
   }
}

--------------------------------- COMMANDS ----------------------------------

command StatisticsSummaryAllLines {
   label = "Statistics Summary All Lines";
   enabled = [true];
   mode = Global;
   variable InvoiceSumVar {
      type = Number;
   }
   variable TotalAmountVar {
      type = Number;
   }
   variable ContributionMarginVar {
      type = Number;
   }
   variable ContributionMarginRateVar {
      type = Number;
   }
   variable CurrencyCodeVar {
      type = Text;
   }
   variable KeyrefsVar;

   bulkexecute {
      stringify(InvoiceStatisticsList, keyref, JSON) into KeyrefsVar;
      call GetUniqueCurrencyCode(KeyrefsVar) into CurrencyCodeVar;

      if [CurrencyCodeVar != null] {
         call GetTotalCostAndDomAmount(KeyrefsVar) into TotalCostAndDomAmountStrucVar;
         set InvoiceSumVar = TotalCostAndDomAmountStrucVar.InvoiceAmount;
         set TotalAmountVar = TotalCostAndDomAmountStrucVar.Total;
         if [TotalAmountVar = 0] {
            set ContributionMarginVar = 0;
         }
         else {
            set ContributionMarginVar = "#{InvoiceSumVar - TotalAmountVar}";
         }

         if [TotalCostAndDomAmountStrucVar.InvoiceAmount != 0] {
            set ContributionMarginRateVar = "#{(ContributionMarginVar /InvoiceSumVar)*100}";
         }
         else {
            set ContributionMarginRateVar = 0;
         }
      }
      else {
         warning("The Currency values are not same. Summary cannot be executed !", "Warning");
         set InvoiceSumVar = 0;
         set ContributionMarginVar = 0;
         set ContributionMarginRateVar = 0;
      }
      dialog DlgIvcStatistics(InvoiceSumVar, ContributionMarginVar, CurrencyCodeVar, CurrencyCodeVar, ContributionMarginRateVar) {
         when OK {
            exit;
         }
      }
   }
}

command StatisticsSummarySelectedLines for CustomerOrderInvItem {
   label = "Statistics Summary Selected Lines";
   enabled = [true];
   mode = SelectedRecords;
   variable TotalCostAndDomAmountStrucVar {
      type = Structure(TotalCostAndDomAmountStruc);
   }
   variable InvoiceSumVar {
      type = Number;
   }
   variable TotalAmountVar {
      type = Number;
   }
   variable ContributionMarginVar {
      type = Number;
   }
   variable ContributionMarginRateVar {
      type = Number;
   }
   variable CurrencyCodeVar {
      type = Text;
   }
   variable KeyrefsVar;

   bulkexecute {
      stringify(records, keyref, JSON) into KeyrefsVar;

      call GetUniqueCurrencyCode(KeyrefsVar) into CurrencyCodeVar;

      if [CurrencyCodeVar != null] {
         call GetTotalCostAndDomAmount(KeyrefsVar) into TotalCostAndDomAmountStrucVar;
         set InvoiceSumVar = TotalCostAndDomAmountStrucVar.InvoiceAmount;
         set TotalAmountVar = TotalCostAndDomAmountStrucVar.Total;

         if [TotalAmountVar = 0] {
            set ContributionMarginVar = 0;
         }
         else {
            set ContributionMarginVar = "#{InvoiceSumVar - TotalAmountVar}";
         }

         if [TotalCostAndDomAmountStrucVar.InvoiceAmount != 0] {
            set ContributionMarginRateVar = "#{(ContributionMarginVar /InvoiceSumVar)*100}";
         }
         else {
            set ContributionMarginRateVar = 0;
         }
      }
      else {
         warning("The Currency values are not same. Summary cannot be executed !", "Warning");
         set InvoiceSumVar = 0;
         set ContributionMarginVar = 0;
         set ContributionMarginRateVar = 0;
      }
      dialog DlgIvcStatistics(InvoiceSumVar, ContributionMarginVar, CurrencyCodeVar, CurrencyCodeVar, ContributionMarginRateVar) {
         when OK {
            exit;
         }
      }
   }
}

command CustomerOrderDetails for CustomerOrderInvItem {
   label = "Customer Order";
   mode = SelectedRecords;
   enabled = [true];
   bulkexecute {
      bulknavigate "page/CustomerOrder/Form?$filter=OrderNo eq $[OrderNo]";
   }
}

----------------------------------- LISTS -----------------------------------

list InvoiceStatisticsList for CustomerOrderInvItem {
   lov DeliveryCustomerRef with ReferenceCustOrdCust1Selector {
      contactwidget {
         enabled = [DeliveryCustomerRef.CustomerNo != null];
         source = Customer;
      }
      size = Large;
      description = CustomerName;
   }
   lov InvoiceIdRef with CustomerOrderInvHeadUivSelector;
   field SeriesId;
   field InvoiceNo;
   field ItemId;
   lov CatalogNoRef with ReferenceSalesPartLov2Selector;
   field Description {
      size = Large;
   }
   field ContractRef;
   field RebateGroupRef;
   field InvoicedQty;
   field SaleUm;
   field PriceQuantity;
   field PriceUm;
   field SalesPriceBase {
      preserveprecision = [true];
   }
   field SaleUnitPrice {
      preserveprecision = [true];
   }
   field InvoiceDate;
   field NetDomAmount;
   field NetCurrAmount;
   field BaseCurrRef;
   field CurrencyCodeRef;
   field ConditionCode;
   field ConditionCodeDescription;
   field OrderNoRef;
   field CustomerOrderRef.AgreementId {
      label = "Agreement ID";
   }
   field CustomerStatisticGroupRef;
   field CatalogGroupRef;
   field RegionRef;
   field DistrictRef;
   field MarketRef;
   field CountryRef;
   field SalesmanRef {
      contactwidget {
         enabled = [SalesmanRef.SalesmanCode != null];
         source = Person;
      }
   }
   field CoordinatorRef {
      contactwidget {
         enabled = [CoordinatorRef.AuthorizeCode != null];
         source = Person;
      }
   }
   field PriceListNoRef;
   field IdentityRef {
      contactwidget {
         enabled = [IdentityRef.CustomerNo != null];
         source = Customer;
      }
   }
   field Name;
   field PriceAdjustment;
   fieldranking DeliveryCustomerRef, CustomerName, InvoiceNo, InvoicedQty, NetDomAmount, NetCurrAmount, InvoiceDate;

   commandgroup StatisticsSummaryCmdGroup {
      command StatisticsSummaryAllLines;
      command StatisticsSummarySelectedLines;
   }

   commandgroup DetailsCmdGroup {
      command CustomerOrderDetails;
   }
}

--------------------------------- SELECTORS ---------------------------------

@Override
selector CustomerOrderInvHeadUivSelector for CustomerOrderInvHeadUiv {
   static Company {
      label = "Company ID";
   }
   static InvoiceId {
      label = "Preliminary Invoice No";
   }
   static TaxIdType {
      label = "Tax ID Type";
   }
   static SbReferenceNo {
      label = "SBI Ref No";
   }
}

@Override
selector ReferenceSalesPartLov2Selector for SalesPartLov2 {
   label = "";
   static CatalogDesc {
      label = "Description";
   }
}

@Override
selector ReferenceSalesPriceListSelector for SalesPriceList {
   label = "";
   static SalesPriceGroupId {
      label = "Sales Price Group ID";
   }
}

@Override
selector ReferenceSalesPartRebateGroupSelector for SalesPartRebateGroup {
   label = "";
   static SalesPartRebateGroup {
      label = "Rebate Group";
   }
}

---------------------------------- DIALOG -----------------------------------

dialog DlgIvcStatistics for StructDlgIvcStatistics {
   label = "Statistics Summary";
   input(InvoiceSum, ContrMargin, CurrCode, BaseCurr, ContrMarginRate);
   group IvcStatistics;
   command Ok;

}

---------------------------------- GROUPS -----------------------------------

group IvcStatistics for StructDlgIvcStatistics {
   label = "Statistics Summary";

   currency InvoiceSum(CurrCode) {
      label = "Total Invoiced";
      editable = [false];
   }

   currency ContrMargin(BaseCurr) {
      label = "Contribution Margin";
      editable = [false];
   }

   field ContrMarginRate {
      label = "Contribution Margin %";
      editable = [false];
   }
}

----------------------------------- LISTS -----------------------------------
@Override
list CustomerOrderInvHeadUivLovList for CustomerOrderInvHeadUiv {
   label = "";
   static Company {
      label = "Company ID";
   }
   static TaxIdType {
      label = "Tax ID Type ";
   }
   static TaxCurrRate;
   static SbReferenceNo {
      label = "SBI Ref No";
   }
   static InvoiceId {
      label = "Preliminary Invoice No ";
   }
}