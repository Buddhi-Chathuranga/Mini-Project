------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------------------------------
-- 2020-05-15  MaEelk  SC2020R1-7060, Disabled New Crud Action in Sales and Message Defaults Tabs
-- 2019-03-29  MaEelk  SCUXXW4-18093, Added Dynamic Component Dependency to GbB2bGroup.
-- 2018-12-06  SeJalk  SCUXXW4-9107, created to place code needed in customer in Enterp.
--------------------------------------------------------------------------------------------------------
fragment CustomerSalesInfo;
component ORDER;
layer Core;
description "Use this fragment to add sales sub menu for customer";

include fragment CustOrdCustomer;
include fragment CustomerPricelistTab;
include fragment CustDefComReceiverTab;
include fragment CustomerChargeTab;
include fragment CustomerAssortmentStructTab;
@DynamicComponentDependency RENTAL
include fragment CustomerRentalInfoTab;
include fragment UserAllowedSiteLovSelector;
include fragment AssortmentClassificationLovSelector;
@DynamicComponentDependency RENTAL
include fragment ActiveRentalTransScheduleSelector;
include fragment SalesPriceListLovSelector;

----------------------------- CLIENT FRAGMENTS ------------------------------
page SalesInfo using CustomerInfoSet {
   label = "Sales";
   crudactions {
      new {
         enabled = [false];
      }
      edit {
         enabled = [false];
      }
      delete {
         enabled = [false];
      }
   }
   selector CustomerInfoSelector;
   markdowntext {
      visible = [OneTime or CustomerCategory = "EndCustomer"];
      text = "Sales information is not supported for one time customer and category end customer";
   }
   group CustomerHeaderGroup;
   tabs {
      tab {
         label = "General";
         visible = [CustomerCategory != "EndCustomer" and not OneTime];
         singleton CustOrdCustomerGeneralSingleton(CustOrdCustomers) bind CustomerInfoSelector;
         arrange {
            group Main1Group bind CustOrdCustomerGeneralSingleton;
            arrange {
               group Customer1Hierarchy bind CustOrdCustomerGeneralSingleton;
               group GbSalesmanGroup bind CustOrdCustomerGeneralSingleton;
            }
         }
         arrange {
            group GbCustomer_TemplateGroup bind CustOrdCustomerGeneralSingleton;
            group GbInternal_Customer_InfoGroup bind CustOrdCustomerGeneralSingleton;
         }
         arrange {
            group GbInvoiceGroup  bind CustOrdCustomerGeneralSingleton;
            arrange {
               group Customer1DiscountGroup bind CustOrdCustomerGeneralSingleton;
               group GbCustomer_Ow_ned_StockGroup bind CustOrdCustomerGeneralSingleton;
            }
         }
         arrange {
            list ClosingDatesList(ClosingDatesArray) bind CustOrdCustomerGeneralSingleton;
            list TaxCalculationBasisList(TaxCalculationBasisArray) bind CustOrdCustomerGeneralSingleton;
         }
      }
      tab {
         label = "Sales";
         visible = [CustomerCategory != "EndCustomer" and not OneTime];
         singleton CustOrdCustomerSalesSingleton(CustOrdCustomers) bind CustomerInfoSelector;
         arrange {
            arrange {
               group GbDefaultsGroup bind CustOrdCustomerSalesSingleton;
               list MultipleRebateCriteriaList(MultipleRebateCriteriaArray) bind CustOrdCustomerSalesSingleton;
            }
            arrange {
               group GbPrintGroup bind CustOrdCustomerSalesSingleton;
               group GbEmailGroup bind CustOrdCustomerSalesSingleton;
               group GbDelivery_ConfirmationGroup bind CustOrdCustomerSalesSingleton;
               @DynamicComponentDependency SALBB
               group GbB2bGroup bind CustOrdCustomerSalesSingleton;
            }
         }
      }
      tab {
         label = "Message Defaults";
         visible = [CustomerCategory = "Customer" and not OneTime];
         singleton CustOrdCustomerDefaultsSingleton(CustOrdCustomers) bind CustomerInfoSelector;
         arrange {
            arrange {
               group MessageDefaultsGroup bind CustOrdCustomerDefaultsSingleton;
            }
            arrange {
               group GbReceiving_AdviceGroup bind CustOrdCustomerDefaultsSingleton;
               group GbSelf_BillingGroup bind CustOrdCustomerDefaultsSingleton;
            }
         }
      }
      tab {
         label = "Pricelist per Price Group";
         visible = [CustomerCategory != "EndCustomer" and not OneTime];
         list CustomerPricelistList(CustomerPricelistArray) bind CustOrdCustomerGeneralSingleton;
      }
      tab {
         label = "Commission Receiver";
         visible = [CustomerCategory = "Customer" and not OneTime];
         list CustDefComReceiverList(CustDefComReceiverArray) bind CustOrdCustomerGeneralSingleton;
      }
      tab {
         label = "Charges";
         visible = [CustomerCategory != "EndCustomer" and not OneTime];
         list CustomerChargeList(CustomerChargeArray) bind CustOrdCustomerGeneralSingleton;
      }
      tab {
         label = "Assortments";
         visible = [CustomerCategory = "Customer" and not OneTime];
         list CustomerAssortmentStructList(CustomerAssortmentsArray) bind CustOrdCustomerGeneralSingleton;
      }
      @DynamicComponentDependency RENTAL
      tab {
         label = "Rental";
         visible = [CustomerCategory = "Customer" and not OneTime];
         list CustomerRentalInfoList(CustRentalTransScheduleArray) bind CustOrdCustomerGeneralSingleton;
      }
   }
}

--------------------------------- SELECTORS ---------------------------------


--------------------------------- SINGLETON ---------------------------------
singleton CustOrdCustomerGeneralSingleton for CustOrdCustomer {
   crudactions {
   }
   commandgroup CommandGroupCmdGroup {

      command DocumentTextCommand;
   }

   commandgroup CommandGroup2CmdGroup {

      command SupplyChainMatrixforSiteCommand;
      command SupplyChainMatrixforCustomeCommand;
   }
}

singleton CustOrdCustomerSalesSingleton for CustOrdCustomer {
   crudactions {
      new {
         enabled = [false];
      }
   }
   commandgroup CommandGroupCmdGroup {

      command DocumentTextCommand;
   }

   commandgroup CommandGroup2CmdGroup {

      command SupplyChainMatrixforSiteCommand;
      command SupplyChainMatrixforCustomeCommand;
   }
}

singleton CustOrdCustomerDefaultsSingleton for CustOrdCustomer {
   crudactions {
      new {
         enabled = [false];
      }
   }
   commandgroup CommandGroupCmdGroup {

      command DocumentTextCommand;
   }

   commandgroup CommandGroup2CmdGroup {

      command SupplyChainMatrixforSiteCommand;
      command SupplyChainMatrixforCustomeCommand;
   }
}

--------------------------- PROJECTION FRAGMENTS ----------------------------
