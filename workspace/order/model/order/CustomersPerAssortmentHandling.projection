-------------------------------------------------------------------------------------------------------
--  Date        Sign    History
--  ----------  ------  --------------------------------------------------------------------------------
--  2018-12-03   bajelk  SCUXXW4-1306, Converted from tbwQueryCustomerAssortmentStruct using MTG Version 1.34.
--  ----------  ------  --------------------------------------------------------------------------------
projection CustomersPerAssortmentHandling;
component ORDER;
layer Core;
description "View CustomerAssortmentStruct";
category Users;
include fragment CustOrdCust7Selector;
include fragment AssortmentClassificationLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------


------------------------------ ENTITY DETAILS -------------------------------


---------------------------- GENERATED FROM APF -----------------------------


----------------------------- MAIN ENTRY POINTS -----------------------------
entityset CustomerAssortmentStructSet for CustomerAssortmentStruct;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity CustomerAssortmentStruct {
   crud = Read;

   keys = AssortmentId, CustomerNo {
      where = "ASSORTMENT_ID = :AssortmentId and CUSTOMER_NO = :CustomerNo";
   }
   exclude attributes = DefaultAssortment, LimitSalesToAssortments;
   attribute AssortmentId Text {
      label = "Assortment";
      editable = [false];
   }
   attribute AssortmentDescription Text {
      fetch = "Assortment_Structure_API.Get_Description(assortment_id)";
      label = "Assortment Description";
      maxlength = 200;
      editable = [false];
   }
   attribute ClassificationStandardDescription Text {
      fetch = "Classification_Standard_API.Get_Description(Assortment_Structure_API.Get_Classification_Standard(assortment_id))";
      label = "Classification Standard Description";
      maxlength = 200;
      editable = [false];
   }
   attribute DefaultAssortmentDb Boolean("TRUE", "FALSE") {
      fetch = "default_assortment_db";
      label = "Default";
      required = [true];
      editable = [ETag = null];
   }
   reference AssortmentStructureRef(AssortmentId) to AssortmentStructure(AssortmentId);
   reference CustomerInfoRef(CustomerNo) to CustomerInfo(CustomerId);
   reference AssortmentIdRef(AssortmentId) to AssortmentStructure(AssortmentId) {
      label = "Assortment";
   }
   reference ClassificationStandardRef(ClassificationStandard) to AssortmentClassificationLov(AssortmentId) {
      label = "Classification Standard";

   }
   reference CustomerNoRef(CustomerNo) to CustOrdCust7(CustomerNo) {
      label = "Customer No";

   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------

