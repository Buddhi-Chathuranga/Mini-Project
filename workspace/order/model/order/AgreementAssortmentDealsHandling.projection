--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2020-09-25  DhAplk  SC2020R1-9888, Changed Objstate datatype to Enumeration(CustomerAgreementState) in AgreementAssortmentDeal entity.
-- 2018-06-29  IzShlk  SCUXXW4-1021, Converted from tbwOverviewAgrAssortDeal using MTG Version: 1.23
--------------------------------------------------------------------------------------

projection AgreementAssortmentDealsHandling;
component ORDER;
layer Core;
description "Use this API to view information on a deal-per-sales part that is connected to the customer agreement.";
category Users;
include fragment CustomerTemplateLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset AgreementAssortmentDealSet for AgreementAssortmentDeal {
   context Company(Company);
}

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity AgreementAssortmentDeal {
   crud = Read, Update, Delete;
   exclude attributes = ServerDataChange;

   from = "agreement_assort_deal_join";


   attribute CustomerNo Text {
      fetch = "CUSTOMER_NO";
      label = "Customer No";
      editable = [false];
      format = uppercase;
   }
   attribute CustomerName Text {
      fetch = "CUST_ORD_CUSTOMER_API.Get_Name(CUSTOMER_NO)";
      label = "Customer Name";
      editable = [false];
   }
   attribute CurrencyCode Text {
      fetch = "CURRENCY_CODE";
      label = "Currency Code";
      editable = [false];
      format = uppercase;
   }
   attribute AssortmentId Text {
      label = "Assortment";
   }
   attribute AssortmentNodeId Text {
      label = "Assortment Node Identity";
   }
   attribute MinQuantity Number {
      label = "Min Qty";
   }
   attribute ValidTo Date {
      editable = [ETag = null];
   }
   attribute PriceUnitMeas Text {
      label = "Price UoM";
      required = [true];
   }
   attribute DealPrice Number {
      label = "Price/Curr";
      format = ifscurrency;
   }
   attribute ProvisionalPriceDb Boolean("TRUE", "FALSE") {
      fetch = "PROVISIONAL_PRICE_DB";
      label = "Provisional Price";
      editable = [false];
      required = [true];
   }
   attribute NetPriceDb Boolean("TRUE", "FALSE") {
      fetch = "NET_PRICE_DB";
      label = "Net Price";
      editable = [false];
      required = [true];
   }
   attribute DiscountLinesExist Boolean("TRUE", "FALSE") {
      fetch = "DECODE(Agreement_Assortment_Deal_API.Get_Disc_Line_Count_Per_Deal__( AGREEMENT_ID,MIN_QUANTITY, VALID_FROM, PRICE_UNIT_MEAS, ASSORTMENT_ID, ASSORTMENT_NODE_ID), 0, 'FALSE','TRUE')";
      label = "Discount Lines Exist";
      editable = [false];
   }
   attribute LastUpdate Date {
      label = "Last Updated";
      editable = [false];
   }
   attribute NoteText Text {
      label = "Notes";
   }
   attribute Company Text {
      fetch = "COMPANY";
      label = "Company";
      editable = [false];
   }
   attribute Objstate Enumeration(CustomerAgreementState) {
      label = "Customer Agreement Status";
      editable = [false];
   }

   reference CustomerNoRef(CustomerNo) to CustomerTemplateLov(TemplateCustomerId) {
      label = "Customer No";
   }
   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Currency Code";
   }
   reference AssortmentNodeIdRef(AssortmentId, AssortmentNodeId) to AssortmentNode(AssortmentId, AssortmentNodeId) {
      label = "Assortment Node Identity";
   }
   reference PriceUnitMeasRef(PriceUnitMeas) to IsoUnit(UnitCode) {
      label = "Price UoM";
   }
   reference DiscountTypeRef(DiscountType) to SalesDiscountType(DiscountType) {
      label = "Discount Type";
   }
   reference CustomerAgreementRef(AgreementId) to CustomerAgreement(AgreementId) {
      label = "Customer Agreement";
   }

}

