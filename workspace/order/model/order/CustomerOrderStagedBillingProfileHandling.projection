
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2020-09-22  DhAplk  SC2020R1-9896, Changed Objstate datatype to Enumeration(CustomerOrderLineState) in CustomerOrderStagedBillingProfile Query.
-- 2019-06-27  KhVese  SCUXXW4-20571, Modified where clause in query CustomerOrderStagedBillingProfile
-- 2019-05-24  SBalLK  SCUXXW4-21137, UI Changes.
-- 2019-05-21  SBalLK  SCUXXW4-21149, Modified CreateInvoice method by adding ludependencies to refresh once invoice created.
-- 2019-05-16  fgusse  SCUXXW4-20685, Added ludependencies for DocumentText
-- 2019-04-30  SBalLK  SCUXXW4-19236, Resolved the issue relate to navigate to customer Invoice window.
-- 2019-03-13  SBalLK  SCUXXW4-9552, Restructed with new Aurena changes.
-- 2018-05-31  RoJalk  SCUXXW4-9552, Converted from frmStagedBilling using MTG Version: 1.20
--------------------------------------------------------------------------------------

projection CustomerOrderStagedBillingProfileHandling;
component ORDER;
layer Core;
description "This projection will expose the services for customer order stage billing profile related functionalities.";
category Users;

include fragment NonRentalSalesPartLovSelector;
include fragment DocumentText;
include fragment CustomerOrderInitialCheck;


----------------------------- MAIN ENTRY POINTS -----------------------------
entityset CustomerOrderStagedBillingProfileSet for CustomerOrderStagedBillingProfile;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity OrderLineStagedBilling {
   use attributes = Description, TotalPercentage, Amount, AmountInclTax, MilestoneId, ExpectedApprovalDate, ApprovalDate, ApprovalType, Objstate, InvoiceDate, InvoiceNo, DocumentText, NoteText, NoteId;

   ludependencies = DocumentText;
   attribute Stage Number {
      required = [false];
   }
   attribute TotalPercentage Number {
      label = "% of Total";
   }
   attribute Amount Number {
      label = "Net Amt/Curr";
      format = ifscurrency;
   }
   attribute AmountInclTax Number {
      label = "Gross Amt/Curr";
      format = ifscurrency;
   }
   attribute ApprovalDate Date {
      fetch = "TRUNC(approval_date)";
      editable = [false];
   }
   attribute InvoiceDate Date {
      fetch = "Customer_Order_Inv_Head_API.Get_Invoice_Date(company, invoice_id)";
      editable = [false];
   }
   attribute InvoiceNo Text {
      fetch = "Customer_Order_Inv_Head_API.Get_Invoice_No_By_Id(invoice_id)";
      editable = [false];
   }
   attribute DocumentText Boolean {
      fetch = "DECODE(Document_Text_API.Note_Id_Exist(note_id), '1', 'TRUE', 'FALSE')";
      editable = [false];
   }
   attribute AmountValidationInitiated Boolean("TRUE", "FALSE") {
      fetch = "'FALSE'";
      editable = [false];
      required = [false];
      insertable = [false];
      updatable = [false];

   }
   attribute Company Text {
      editable = [false];
   }
   attribute InvoiceId Number {
      editable = [false];
   }

   reference CustomerOrderRef(OrderNo) to CustomerOrder(OrderNo);
   reference MilestoneIdRef(OrderNo, LineNo, RelNo, LineItemNo, MilestoneId) to CustomerOrderMilestone(OrderNo, LineNo, RelNo, LineItemNo, MilestoneId) {
      label = "Milestone";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------
@Override
query CustomerOrderStagedBillingProfile {
   from = "customer_order_line";
   lu = CustomerOrderLine;
   where = "LINE_ITEM_NO <= 0 AND (SELF_BILLING_DB ='NOT SELF BILLING') AND (CHARGED_ITEM_DB = 'CHARGED ITEM')";
   keys = OrderNo, LineNo, RelNo, LineItemNo;
   ludependencies = OrderLineStagedBilling;

   attribute OrderNo Text {
      format = uppercase;
      maxlength = 12;
   }
   attribute LineNo Text {
      maxlength = 4;
   }
   attribute RelNo Text {
      maxlength = 4;
   }
   attribute LineItemNo Number {
      maxlength = 4;
   }
   attribute Objstate Enumeration(CustomerOrderLineState) {
      label = "Status";
   }
   attribute NetTotalAmount Number {
      label = "Net Amt/Curr";
      fetch = "Customer_Order_Line_API.Get_Sale_Price_Total(order_no, line_no, rel_no, line_item_no)";
      format = ifscurrency;
   }
   attribute GrossTotalAmount Number {
      label = "Gross Amt/Curr";
      fetch = "Customer_Order_Line_API.Get_Sale_Price_Incl_Tax_Total(order_no, line_no, rel_no, line_item_no)";
      format = ifscurrency;
   }
   attribute CatalogNo Text {
      label = "Sales Part No";
      format = uppercase;
   }
   attribute CatalogDesc Text {
      label = "Sales Part Description";
   }
   attribute Contract Text;

   reference CatalogNoRef(Contract, CatalogNo) to NonRentalSalesPartLov(Contract, CatalogNo) {
      label = "Sales Part";
   }
   reference OrderNoRef(OrderNo) to CustomerOrder(OrderNo) {
      label = "Order No";
   }

   array OrderLineStagedBillingArray(OrderNo, LineNo, RelNo, LineItemNo) to OrderLineStagedBilling(OrderNo, LineNo, RelNo, LineItemNo);
}

---------------------------------- ACTIONS ----------------------------------
action CreateInvoice {
   initialcheck CustomerOrderInitial_Check(OrderNo);
   ludependencies = OrderLineStagedBilling;
   parameter OrderNo Text;
}

--------------------------------- FUNCTIONS ---------------------------------
function GetExpectedApprovalDate Date {
   parameter OrderNo     Text;
   parameter LineNo      Text;
   parameter RelNo       Text;
   parameter LineItemNo  Number;
   parameter MilestoneId Text;
}

function GetCalculatedAmounts Structure(AmountStructure) {
   ludependencies = OrderLineStagedBilling;
   parameter Amount Number;
   parameter AmountInclTax Number;
   parameter SourceRefType Text;
   parameter OrderNo     Text;
   parameter LineNo      Text;
   parameter RelNo       Text;
   parameter LineItemNo  Number;
}

function CheckAllMilestoneClosed Text {
   parameter FullSelection Text;
}
-------------------------------- STRUCTURES ---------------------------------
structure AmountStructure {
   attribute TaxAmountBase Number;
   attribute NetAmountBase Number;
   attribute GrossAmountBase Number;
   attribute TaxAmountCurrency Number;
   attribute NetAmountCurrency Number;
   attribute GrossAmountCurrency Number;
}

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------

---------------------------- GENERATED FROM APF -----------------------------








