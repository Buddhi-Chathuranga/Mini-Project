-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2021-08-16  ThKrlk  Bug 160471(SCZ-15944), Modified FreightZoneDetailsList to replace duplicated FreightZoneBasis County by FreightZoneBasis Country.
-- 2021-04-21  Skanlk  Bug 158879(SCZ-14471), Modified FreightZoneDetailsList by replacing FreightZoneBasisDb into FreightZoneBasis and
-- 2021-04-21          checking with the identifier to solve the issue in adding Freight Zone Details for Zip.
-- 2019-10-31  chlelk  SCXTEND-1324, The startupmode was set to "Search"
-- 2019-01-02  ChJalk  SCUXXW4-9200, Added frmFreightZoneGenaral using MTG Version: 1.33
-- 2018-11-28  pipelk  SCUXXW4-906, Added tbwFreightZoneValidSite using MTG Version: 1.33
-- 2018-11-26  NiNilk  SCUXXW4-909, Added tbwFreightZoneValidSupp using MTG Version: 1.33
-- 2018-11-24  ChJalk  SCUXXW4-9180, Converted from frmFreightMap using MTG Version: 1.33
--------------------------------------------------------------------------------------

client FreightMap;
component ORDER;
layer Core;
projection FreightMapHandling;
include fragment CompanySitePubSelector;
include fragment MpccomShipViaLovSelector;
include fragment SiteClusteDialog;
include fragment SiteClusterNodeJoinSelector;
include fragment SiteClusterLevelLovSelector;
include fragment StateCodes2Selector;
include fragment IsoCountryLovSelector;
include fragment ApplicationCountrySelector;
include fragment CountyCode2LovSelector;
include fragment CityName1LovSelector;


warningsenabled = FreightMap;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry FreightMapNavEntry parent OrderNavigator.TransportationAdministrationFreight at index 100 {
      label = "Freight Map";
      page Form home FreightMap;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using FreightMapSet {
   label = "Freight Map";
   startupmode = search;
   selector FreightMapSelector;
   group FreightMapGroup;
   tabs {
      tab {
         label = "General";
         arrange {
            list FreightZoneList(FreightZoneArray);
            list FreightZoneDetailsList(FreightZoneDetailsListArray) bind FreightZoneList {
               copyoncruddefault(FreightMapId, ZoneId) to(FreightMapId, ZoneId);
            }
         }
      }
      tab {
         label = "Valid for Sites";
         list FreightZoneValidSiteList(FreightMapArray);
      }

      tab {
         label = "Valid for Suppliers";
         list FreightZoneValidSuppList(DetailFreightZoneValidSuppliers);
      }
   }
   commandgroup CommandGroupCmdGroup {

      command TranslationCommand;
   }
}


-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command TranslationCommand for FreightMap {
   label = "Translation";
   enabled = [true];
   mode = Global;
   execute {
      navigate "page/BasicDataTranslation/Form?$filter=Lu eq 'FreightMap' and Module eq 'ORDER'";
   }
}

-- Freight Map Valid for Site Commands
command AddSitesfromSiteClusterCommand for FreightMap {
   label = "Add Sites from Site Cluster";
   mode = Global;
   enabled = [true];
   variable SiteClusterIdVar {
      type = Text;
   }
   variable SiteClusterNodeIdVar {
      type = Text;
   }
   execute {
      dialog SiteClusterDialog into(SiteClusterIdVar, SiteClusterNodeIdVar) {
         when OK {
            call AddSitesFromSiteCluster(SiteClusterIdVar, SiteClusterNodeIdVar);
            exit OK;
         }
         when CANCEL {
            exit CANCEL;
         }
      }
   }
}
--------------------------------- SELECTORS ---------------------------------
@Override
selector FreightMapSelector for FreightMap {
   label = "${FreightMapId} - ${Description} - ${ShipViaCode} - ${OwningSite}";
   static FreightMapId;
   static Description;
   static ShipViaCode;
   static OwningSite;
}
@Override
selector SupplierInfoSelector for SupplierInfo {
   static Name;
}
---------------------------------- GROUPS -----------------------------------
group FreightMapGroup for FreightMap {
   label = "";

   field FreightMapId {
      size = Small;
   }
   field Description;
   lov ShipViaCodeRef with ReferenceMpccomShipViaLovSelector {
      size = Small;
      description = ShipViaCodeRef.Description;
   }
   lov OwningSiteRef with ReferenceCompanySiteSelector using ContractFilter(OwningSite) {
      size = Small;
   }
}
----------------------------------- LISTS -----------------------------------
list FreightZoneList for FreightZone {

   field ZoneId {
      size = Small;
   }

   field Description;
   lov BaseCountryRef with ReferenceIsoCountryLovSelector {
      description = BaseCountryRef.Description;
   }
   field FreightZoneBasis;
}

list FreightZoneDetailsList for FreightZoneDetails {
   crudactions {
      new {
         enabled = [component.FreightZoneList.SelectionCount = 1];
      }
   }

   field ZoneId {
      size = Small;
      editable = [false];
   }

   field DiscreteValue {
      lovswitch {
         when [parent.FreightZoneBasis = "State"] {
            lov DiscreteValueRef with ReferenceStateCodes2Selector using StateCodeFilter(parent.BaseCountry) {
               description = DiscreteValueRef.StateName;
            }
         }
         when [parent.FreightZoneBasis = "Country"] {
            lov DiscreteValueRef1 with ReferenceApplicationCountrySelector {
               description = DiscreteValueRef1.Description;
            }
         }
         when [parent.FreightZoneBasis = "County"] {
            lov DiscreteValueRef2 with ReferenceCountyCode2LovSelector using CountyFilter(parent.BaseCountry) {
               description = DiscreteValueRef2.CountyName;
            }
         }
         when [parent.FreightZoneBasis = "City"] {
            lov DiscreteValueRef3 with ReferenceCityName1LovSelector using CityFilter(parent.BaseCountry) {
               description = DiscreteValueRef3.CityCode;
            }
         }
      }
      editable = [parent.FreightZoneBasis != "ZipCode"];
   }

   field FromZipCode {
      editable = [parent.FreightZoneBasis = "ZipCode"];
   }
   field ToZipCode {
      editable = [parent.FreightZoneBasis = "ZipCode"];
   }

   fieldranking ZoneIdRef, DiscreteValueRef, DiscreteValueDescription, FromZipCode, ToZipCode;
}


list FreightZoneValidSuppList for FreightZoneValidSupp {
   lov SupplierIdRef with SupplierInfoSelector {
      contactwidget {
         enabled = [true];
         source = Supplier;
      }
      description = SupplierIdRef.Name;
   }
}

list FreightZoneValidSiteList for FreightZoneValidSite {
   lov ContractRef with ReferenceCompanySiteSelector using ContractFilter(parent.Company) {
      description = ContractRef.Description;
   }

   commandgroup CommandGroupCmdGroup {

      command AddSitesfromSiteClusterCommand;
   }
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

--------------------------------- CHECKLIST ---------------------------------

//! TODO: Take necessary steps to handle following construct(s) found in 'frmFreightMap'

// --- Navigation Actions ---
// Following code templates can be verified and used to define the 'execute' section of a command:
// 1. navigate "page/Site/Form";
//    Hint: In Enterprise Explorer identified as 'frmCompanySite' (ENTERP)
// 2. navigate "page/BasicDataTranslation/Form";
//    Hint: In Enterprise Explorer identified as 'frmBasicDataTranslation' (FNDBAS)

// --- Event Handlers ---
// 1. frmFreightMap_WindowActions
//    Action: Investigate method content and reimplement logic
// 2. frmFreightMap_OnPM_DataSourceSave
//    Action: Investigate method content and reimplement logic
// 3. cmbFreightMapId_WindowActions
//    Action: Investigate method content and reimplement logic
// 4. cmbFreightMapId_OnPM_DataItemZoom
//    Action: Investigate method content and reimplement logic
// 5. dfsOwningSite_WindowActions
//    Action: Investigate method content and reimplement logic
// 6. dfsOwningSite_OnPM_DataItemZoom
//    Action: Investigate method content and reimplement logic
// 7. menuItem__Translation_Inquire
//    Action: Investigate method content and reimplement logic
//    Hint: Handling menu item "Translation"(reimplement in TranslationCommand)
// 8. menuItem__Translation_Execute
//    Action: Investigate method content and reimplement logic
//    Hint: Handling menu item "Translation"(reimplement in TranslationCommand)

// --- Methods ---
// 1. GetItemValue
//    Action: Investigate method content and reimplement logic
// 2. RefreshRecord
//    Action: Investigate method content and reimplement logic
// 3. InvalidateTab
//    Action: Investigate method content and reimplement logic

// --- Messages ---
// 1. PM_DataSourceSave
//    Action: Investigate message content and reimplement logic
//    Hint: Found in InvalidateTab
// 2. PM_DataSourceSave
//    Action: Investigate message content and reimplement logic
//    Hint: Found in frmFreightMap_OnPM_DataSourceSave
// 3. PM_DataItemZoom
//    Action: Investigate message content and reimplement logic
//    Hint: Found in dfsOwningSite_OnPM_DataItemZoom
// 4. PM_DataSourceSave
//    Action: Investigate message content and reimplement logic
//    Hint: Found in menuItem__Translation_Inquire
// 5. PAM_VALIDGetItemValue
//    Action: Investigate message content and reimplement logic
//    Hint: Found in frmFreightMap_WindowActions
// 6. PM_DataSourceSave
//    Action: Investigate message content and reimplement logic
//    Hint: Found in frmFreightMap_WindowActions
// 7. PM_DataItemZoom
//    Action: Investigate message content and reimplement logic
//    Hint: Found in cmbFreightMapId_WindowActions
// 8. PM_DataItemLovUserWhere
//    Action: Investigate message content and reimplement logic
//    Hint: Found in dfsOwningSite_WindowActions
// 9. PM_DataItemZoom
//    Action: Investigate message content and reimplement logic
//    Hint: Found in dfsOwningSite_WindowActions

