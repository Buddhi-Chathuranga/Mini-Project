------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -------------------------------------------------------------------
-- 2021-12-23  Skanlk  Bug 161134(SC21R2-6825), Added the attribute TaxIdType for the entity IncomingCustomerOrder to validate Tax ID other than EU countires.
-- 2021-10-01  PrRtlk  SC21R2-2966, Used the Subset Customer Order in ShipmentCreation Enumeration for Customer Order related Shipment Creation types.
-- 2020-11-09  RavDlk  SC2020R1-11228, Handled booleans with possible enumerations
-- 2019-11-07  Satglk  SCXTEND-886, Added Received date.
-- 2019-10-25  Satglk  SCXTEND-963, Salesman renamed to Salesperson
-- 2019-10-03  Satglk  SCXTEND-886, Added created date timestamp.
-- 2019-03-11  RasDlk  SCUXXW4-17241, Added Dependency Annotation for the relevant fields.
-- 2018-11-27  Akhalk  SCUXXW4-8430, Added dlgExternalCustOrderChar Assistant using MTG Version: 1.23
-- 2018-04-09  SeJalk  SCUXXW4-9170, Changes done acording to standards using MTG Version: 1.15
-- 2017-12-08  SeJalk  SCUXXW4-659, created from frmExternalCustomerOrder.
------------------------------------------------------------------------------------------
projection IncomingCustomerOrderHandling;
component ORDER;
layer Core;
description "Use this API to study or correct the incoming ORDER message, which can contain a quotation request or a customer order. This API is relevant if you are running the inter-site order management when your customer sends you orders electronically, such as EDI or XML, or when you receive orders and quotations from the IFS/Sales Configurator.";
category Users;

include fragment UserAllowedSiteLovSelector;
include fragment OrderCoordinatorLovSelector;
include fragment OrderDeliveryTermLovSelector;
include fragment CustOrdCust5Selector;
include fragment CustOrdCust2Selector;
include fragment SalesPartSalesmanLovSelector;
include fragment CityCode1LovSelector;
include fragment StateCodeLovSelector;
include fragment CountyCode1LovSelector;
include fragment TaxIdNumbersValidation;
include fragment ShipmentTypeSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset IncomingCustomerOrders for IncomingCustomerOrder;
entityset ViewConfigurationInputVirtualSet for ViewConfigurationInputVirtual;
------------------------------ ENTITY DETAILS -------------------------------

@Override
entity IncomingCustomerOrder using ExternalCustomerOrder {
   crud = Read, Update;
   from = "external_customer_order";
   exec = "EXTERNAL_CUSTOMER_ORDER_API";
   ludependencies = ExternalCustOrderLine;
   keys = MessageId {
      where = "MESSAGE_ID = :MessageId";
   }
   attribute MessageId Number {
      fetch = "MESSAGE_ID";
      label = "Message ID";
      required = [true];
      editable = [false];
   }
   attribute MessageType Text {
      fetch = "Order_Config_Import_Mode_API.Decode(IMPORT_MODE)";
      label = "Message Type";
      editable = [false];
   }
   attribute OrderNo Text {
      fetch = "ORDER_NO";
      label = "Quot/Order No";
      maxlength = 2000;
      editable = [ETag != null];
      format = uppercase;
   }
   attribute Contract Text {
      fetch = "CONTRACT";
      label = "Site";
      maxlength = 2000;
      editable = [ETag != null];
      format = uppercase;
   }
   attribute CustomerNo Text {
      fetch = "CUSTOMER_NO";
      label = "Customer No";
      maxlength = 2000;
      editable = [ETag != null];
      format = uppercase;
   }
   attribute CustomerName Text {
      fetch = "Cust_Ord_Customer_API.Get_Name(CUSTOMER_NO)";
      label = "Customer Name";
      maxlength = 2000;
      editable = [false];
   }
   attribute DeliveryDate Timestamp {
      fetch = "DELIVERY_DATE";
      label = "Wanted Delivery Date/Time";
      editable = [ETag != null];
   }
   attribute CurrencyCode Text {
      fetch = "CURRENCY_CODE";
      label = "Currency";
      maxlength = 2000;
      editable = [ETag != null];
      format = uppercase;
   }
   attribute LanguageCode Text {
      fetch = "LANGUAGE_CODE";
      label = "Language";
      maxlength = 2000;
   }
   attribute CustRef Text {
      fetch = "CUST_REF";
      label = "Cust Reference";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute InternalPoNo Text {
      fetch = "INTERNAL_PO_NO";
      label = "Internal PO No";
      maxlength = 2000;
      editable = [false];
   }
   attribute CustomerPoNo Text {
      fetch = "CUSTOMER_PO_NO";
      label = "Customer PO No";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute CustomerNoPay Text {
      fetch = "CUSTOMER_NO_PAY";
      label = "Invoice Customer";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute ExternalRef Text {
      fetch = "EXTERNAL_REF";
      label = "External ID";
      maxlength = 2000;
   }
   attribute SalesmanCode Text {
      fetch = "SALESMAN_CODE";
      label = "Salesperson";
      maxlength = 2000;
      format = uppercase;
   }
   attribute SalesmanName Text {
      label = "Salesperson Name";
      fetch = "Sales_Part_Salesman_API.Get_Name(SALESMAN_CODE)";
      maxlength = 2000;
      editable = [false];
   }
   attribute ForwardAgentId Text {
      fetch = "FORWARD_AGENT_ID";
      label = "Forwarder ID";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute BackorderOption Enumeration(CustomerBackorderOption) {
      fetch = "BACKORDER_OPTION_DB";
      label = "Backorder Option";
   }
   attribute InternalCustomerSite Text {
      fetch = "INTERNAL_CUSTOMER_SITE";
      label = "Internal Cust Site";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute LabelNote Text {
      fetch = "LABEL_NOTE";
      label = "External CO Label Note";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute NoteText Text {
      fetch = "NOTE_TEXT";
      label = "Note";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute InternalRef Text {
      fetch = "INTERNAL_REF";
      label = "Internal PO Ref";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute InternalPoLabelNote Text {
      fetch = "INTERNAL_PO_LABEL_NOTE";
      label = "Internal PO Label Note";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute ErrorMessage Text {
      fetch = "ERROR_MESSAGE";
      label = "Error Message";
      maxlength = 2000;
      editable = [false];
   }
   attribute DeliveryAddressName Text {
      fetch = "DELIVERY_ADDRESS_NAME";
      label = "Name";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute ShipAddress1 Text {
      fetch = "SHIP_ADDRESS1";
      label = "Address 1";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute ShipAddress2 Text {
      fetch = "SHIP_ADDRESS2";
      label = "Address 2";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute ShipAddress3 Text {
      fetch = "SHIP_ADDRESS3";
      label = "Address 3";
      maxlength = 2000;
   }
   attribute ShipAddress4 Text {
      fetch = "SHIP_ADDRESS4";
      label = "Address 4";
      maxlength = 2000;
   }
   attribute ShipAddress5 Text {
      fetch = "SHIP_ADDRESS5";
      label = "Address 5";
      maxlength = 2000;
   }
   attribute ShipAddress6 Text {
      fetch = "SHIP_ADDRESS6";
      label = "Address 6";
      maxlength = 2000;
   }
   attribute ShipZipCode Text {
      fetch = "SHIP_ZIP_CODE";
      label = "Zip Code";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute ShipCity Text {
      fetch = "SHIP_CITY";
      label = "City";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute ShipState Text {
      fetch = "SHIP_STATE";
      label = "State";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute ShipCounty Text {
      fetch = "SHIP_COUNTY";
      label = "County";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute CountryCode Text {
      fetch = "COUNTRY_CODE";
      maxlength = 2000;
      editable = [ETag != null];
      format = uppercase;
   }
   attribute VatNo Text {
      fetch = "VAT_NO";
      label = "Tax ID";
      maxlength = 50;
      format = uppercase;
   }
   attribute TaxIdValidatedDate Date {
      fetch = "TAX_ID_VALIDATED_DATE";
      label = "Tax ID Validated Date";
      editable = [false];
   }
   attribute EanLocationDocAddr Text {
      fetch = "EAN_LOCATION_DOC_ADDR";
      label = "Document";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute EanLocationDelAddr Text {
      fetch = "EAN_LOCATION_DEL_ADDR";
      label = "Delivery";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute EanLocationPayerAddr Text {
      fetch = "EAN_LOCATION_PAYER_ADDR";
      label = "Invoice";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute DeliveryTerms Text {
      fetch = "DELIVERY_TERMS";
      label = "Delivery Terms";
      maxlength = 2000;
      format = uppercase;
   }
   attribute DeliveryTermsDesc Text {
      fetch = "DELIVERY_TERMS_DESC";
      maxlength = 2000;
      editable = [ETag = null];
   }
   attribute DelTermsLocation Text {
      fetch = "DEL_TERMS_LOCATION";
      label = "Del Terms Location";
      maxlength = 100;
   }
   attribute ShipViaCode Text {
      fetch = "SHIP_VIA_CODE";
      label = "Ship-Via";
      maxlength = 2000;
      format = uppercase;
   }
   attribute ShipViaDesc Text {
      fetch = "SHIP_VIA_DESC";
      maxlength = 2000;
      editable = [ETag = null];
   }
   attribute PayTermId Text {
      fetch = "PAY_TERM_ID";
      label = "Payment Terms";
      maxlength = 2000;
      format = uppercase;
   }
   attribute RouteId Text {
      fetch = "ROUTE_ID";
      label = "Route ID";
      maxlength = 2000;
      format = uppercase;
   }
   attribute RouteDesc Text {
      fetch = "Delivery_Route_API.Get_Description(ROUTE_ID)";
      maxlength = 2000;
      editable = [false];
   }
   attribute ShipmentType Text {
      fetch = "SHIPMENT_TYPE";
      label = "Shipment Type";
      maxlength = 3;
      editable = [ETag = null];
      format = uppercase;
   }
   attribute ShipmentTypeDesc Text {
      fetch = "Shipment_Type_API.Get_Description(SHIPMENT_TYPE)";
      maxlength = 2000;
      editable = [false];
   }
   attribute DeliveryLeadtime Number {
      fetch = "DELIVERY_LEADTIME";
      label = "External Transport Lead Time";
   }
   attribute PickingLeadtime Number {
      fetch = "PICKING_LEADTIME";
      label = "Picking Lead Time";
      editable = [ETag = null];
   }
   attribute JinsuiInvoice Boolean("TRUE", "FALSE") {
      fetch = "JINSUI_INVOICE_DB";
      label = "Jinsui Invoice";
      required = [true];
   }
   attribute ImportMode Text {
      fetch = "IMPORT_MODE";
      maxlength = 2000;
      editable = [false];
   }
   attribute InternalDeliveryType Text {
      fetch = "INTERNAL_DELIVERY_TYPE";
      label = "Internal Delivery Type";
      maxlength = 10;
   }

   attribute CustomerDescription Text {
      fetch = "Cust_Ord_Customer_API.Get_Name(CUSTOMER_NO)";

   }

   attribute Company Text {
      label = "";
      fetch = "Site_API.Get_Company(CONTRACT)";
   }
   attribute Country Text {
      fetch = "Iso_Country_API.Get_Description(country_code)";
      label = "Country";
      maxlength = 2000;
   }
   attribute CreatedDate Timestamp {
      label = "Created Date";
   }
   attribute ReceivedDate Timestamp {
      fetch = "In_Message_API.Get_ReceivedTime(message_id)";
      editable = [false];
   }
   attribute TaxIdType Text {
      fetch = "External_Customer_Order_API.Get_Tax_Id_Type(message_id)";
      label = "Tax Id Type";
      editable = [false];
   }
   reference ForwarderInfoRef(ForwardAgentId) to ForwarderInfo(ForwarderId);
   reference SiteRef(Contract) to Site(Contract);
   reference ShipmentTypeRef(ShipmentType) to ShipmentType(ShipmentType) {
      label = "Shipment Type";
   }

   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }

   reference ConmpanyRef(Contract) to Site(Contract) {
      label = "Company";
   }
   reference CustomerNoRef(Company, CustomerNo) to CustOrdCust5(Company, CustomerNo) {
      label = "Customer";
   }
   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Currency";
   }
   reference LanguageCodeRef(LanguageCode) to ApplicationLanguage(LanguageCode) {
      label = "Language";
   }
   reference CustomerNoPayRef(CustomerNoPay) to CustOrdCust2(CustomerNo) {
      label = "Invoice Customer";
   }
   reference SalesmanCodeRef(SalesmanCode) to SalesPartSalesmanLov(SalesmanCode) {
      label = "Salesperson";
   }
   reference ForwardAgentIdRef(ForwardAgentId) to ForwarderInfo(ForwarderId) {
      label = "Forward Agent ID";
   }

   reference DeliveryTermsRef(DeliveryTerms) to OrderDeliveryTermLov(DeliveryTerms) {
      label = "Delivery Terms";
   }
   reference ShipViaCodeRef(ShipViaCode) to MpccomShipVia(ShipViaCode) {
      label = "Ship Via";
   }
   reference PayTermIdRef(Company, PayTermId) to PaymentTerm(Company, PayTermId) {
      label = "Payment Terms";
   }
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Route ID";
   }
   array IncomingCustomerOrderLineArray(MessageId) to IncomingCustomerOrderLine(MessageId);

   action ApproveCustOrder {
      parameter AuthorizeCode Text;
      parameter OrderId Text;
      parameter LimitSalesToAssortments Boolean;

      ludependencies = ExternalCustomerOrder;
   }

}

@Override
entity IncomingCustomerOrderLine using ExternalCustOrderLine {
   crud = Read, Update;
   from = "EXTERNAL_CUST_ORDER_LINE_ALL";
   exec = "EXTERNAL_CUST_ORDER_LINE_API";
   keys = MessageLine, MessageId {
      where = "MESSAGE_LINE = :MessageLine and MESSAGE_ID = :MessageId";
   }
   attribute MessageLine Number {
      fetch = "MESSAGE_LINE";
      label = "Message Line";
      required = [true];
      editable = [false];
   }
   attribute LineNo Number {
      fetch = "LINE_NO";
      label = "Line No";
      //maxlength = 2000;
      editable = [ETag != null];
   }
   attribute RelNo Number {
      fetch = "REL_NO";
      label = "Del No";
      //maxlength = 2000;
      editable = [ETag != null];
   }
   attribute Rental Boolean("TRUE", "FALSE") {
      fetch = "RENTAL_DB";
      label = "Rental";
      editable = [false];

   }
   attribute CustomerPONo Text {
      fetch = "External_Customer_Order_API.Get_Customer_Po_No(MESSAGE_ID)";
      label = "Customer PO No";
      maxlength = 100;
      editable = [false];
   }
   attribute CustomerPoLineNo Text {
      fetch = "CUSTOMER_PO_LINE_NO";
      label = "Customer PO Line No";
      maxlength = 2000;
      editable = [ETag = null];
   }
   attribute CustomerPoRelNo Text {
      fetch = "CUSTOMER_PO_REL_NO";
      label = "Customer PO Rel No";
      maxlength = 2000;
      editable = [ETag = null];
   }
   attribute CustomerPartNo Text {
      fetch = "CUSTOMER_PART_NO";
      label = "Customer's Part No";
      maxlength = 100;
      editable = [ETag != null];
   }
   attribute CustomerQuantity Number {
      fetch = "CUSTOMER_QUANTITY";
      label = "Customer Sales Qty";
      editable = [ETag != null];
   }
   attribute CatalogNo Text {
      fetch = "CATALOG_NO";
      label = "Sales Part No";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute GtinNo Text {
      fetch = "GTIN_NO";
      label = "GTIN";
      maxlength = 14;
   }
   attribute BuyQtyDue Number {
      fetch = "BUY_QTY_DUE";
      label = "Sales Qty";
      editable = [ETag != null];
   }
   attribute WantedDeliveryDate Timestamp {
      fetch = "WANTED_DELIVERY_DATE";
      label = "Wanted Delivery Date/Time";
      editable = [ETag != null];
   }
   attribute PlannedRentalStartDate Timestamp {
      fetch = "PLANNED_RENTAL_START_DATE";
      label = "Planned Rental Start Date";
   }
   attribute PlannedRentalEndDate Timestamp {
      fetch = "PLANNED_RENTAL_END_DATE";
      label = "Planned Rental End Date";
   }
   attribute InputUoM Text {
      fetch = "Part_Gtin_Unit_Meas_API.Get_Unit_Code_For_Gtin14(GTIN_NO)";
      label = "Input UoM";
      maxlength = 2000;
      editable = [false];
   }
   attribute InputQty Number {
      fetch = "INPUT_QTY";
      label = "Input Qty";
   }
   attribute InputConvFactor Text {
      fetch = "Input_Unit_Meas_API.Get_Conversion_Factor(Part_Catalog_API.Get_Input_Unit_Meas_Group_Id(Part_Gtin_Unit_Meas_API.Get_Part_Via_Identified_Gtin(GTIN_NO)), Part_Gtin_Unit_Meas_API.Get_Unit_Code_For_Gtin14(GTIN_NO))";
      label = "Input Conv Factor";
      maxlength = 2000;
      editable = [false];
   }
   attribute Objstate Enumeration(ExternalCustOrderLineState) {
      label = "Status";
      editable = [false];
   }
   attribute ErrorMessage Text {
      fetch = "ERROR_MESSAGE";
      label = "Error Message";
      maxlength = 2000;
      editable = [false];
   }
   attribute Notes Text {
      fetch = "NOTES";
      label = "Note";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute Contact Text {
      fetch = "CONTACT";
      label = "Contact";
      maxlength = 90;
   }
   attribute DeliveryAddressName Text {
      fetch = "DELIVERY_ADDRESS_NAME";
      label = "Delivery Address Name";
      maxlength = 2000;
   }
   attribute ShipAddress1 Text {
      fetch = "SHIP_ADDRESS1";
      label = "Address 1";
      maxlength = 2000;
   }
   attribute ShipAddress2 Text {
      fetch = "SHIP_ADDRESS2";
      label = "Address 2";
      maxlength = 2000;
   }
   attribute ShipAddress3 Text {
      fetch = "SHIP_ADDRESS3";
      label = "Address 3";
      maxlength = 2000;
   }
   attribute ShipAddress4 Text {
      fetch = "SHIP_ADDRESS4";
      label = "Address 4";
      maxlength = 2000;
   }
   attribute ShipAddress5 Text {
      fetch = "SHIP_ADDRESS5";
      label = "Address 5";
      maxlength = 2000;
   }
   attribute ShipAddress6 Text {
      fetch = "SHIP_ADDRESS6";
      label = "Address 6";
      maxlength = 2000;
   }
   attribute ShipZipCode Text {
      fetch = "SHIP_ZIP_CODE";
      label = "Zip Code";
      maxlength = 2000;
   }
   attribute ShipCity Text {
      fetch = "SHIP_CITY";
      label = "City";
      maxlength = 2000;
   }
   attribute ShipState Text {
      fetch = "SHIP_STATE";
      label = "State";
      maxlength = 2000;
   }
   attribute ShipCounty Text {
      fetch = "SHIP_COUNTY";
      label = "County";
      maxlength = 2000;
   }
   attribute CountryCode Text {
      fetch = "COUNTRY_CODE";
      label = "Country Code";
      maxlength = 2000;
   }
   attribute DeliverToCustomerNo Text {
      fetch = "DELIVER_TO_CUSTOMER_NO";
      label = "Deliver-to-Customer No";
      maxlength = 20;
      format = uppercase;
   }
   attribute DeliveryTerms Text {
      fetch = "DELIVERY_TERMS";
      label = "Delivery Terms";
      maxlength = 5;
      format = uppercase;
   }

   reference DeliveryTermsDescref(DeliveryTerms) to OrderDeliveryTerm(DeliveryTerms);

   attribute DeliveryTermsDesc Text {
      fetch = "DELIVERY_TERMS_DESC";
      label = "Delivery Terms Description";
      maxlength = 35;
   }
   attribute DelTermsLocation Text {
      fetch = "DEL_TERMS_LOCATION";
      label = "Del Terms Location";
      maxlength = 100;
   }
   attribute ShipViaCode Text {
      fetch = "SHIP_VIA_CODE";
      label = "Ship-Via Code";
      maxlength = 3;
      format = uppercase;
   }
   attribute ShipViaDesc Text {
      fetch = "SHIP_VIA_DESC";
      label = "Ship Via Description";
      maxlength = 35;
   }
   attribute EanLocationDelAddr Text {
      fetch = "EAN_LOCATION_DEL_ADDR";
      label = "Cust Own Del Addr ID";
      maxlength = 2000;
   }
   attribute PickingLeadtime Number {
      fetch = "PICKING_LEADTIME";
      label = "Picking Lead Time";
      editable = [ETag = null];
   }
   attribute DeliveryLeadtime Number {
      fetch = "DELIVERY_LEADTIME";
      label = "External Transport Lead Time";
   }
   attribute ShipmentType Text {
      fetch = "SHIPMENT_TYPE";
      label = "Shipment Type";
      maxlength = 3;
      editable = [ETag = null];
   }
   attribute RouteId Text {
      fetch = "ROUTE_ID";
      label = "Route ID";
      maxlength = 2000;
   }
   attribute DistrictCode Text {
      fetch = "DISTRICT_CODE";
      label = "District Code";
      maxlength = 30;
   }
   attribute RegionCode Text {
      fetch = "REGION_CODE";
      label = "Region Code";
      maxlength = 30;
   }
   attribute ForwardAgentId Text {
      fetch = "FORWARD_AGENT_ID";
      label = "Forwarder ID";
      maxlength = 2000;
   }
   attribute IntrastatExempt Enumeration(IntrastatExempt) {
      fetch = "NVL(INTRASTAT_EXEMPT_DB,'EXEMPT')";
      label = "Intrastat Exempt";
      required = [true];
   }
   attribute DockCode Text {
      fetch = "DOCK_CODE";
      label = "Dock Code";
      maxlength = 2000;
   }
   attribute SubDockCode Text {
      fetch = "SUB_DOCK_CODE";
      label = "Sub Dock Code";
      maxlength = 2000;
   }
   attribute Location Text {
      fetch = "LOCATION";
      label = "To Location No";
      maxlength = 2000;
   }
   attribute OriginalBuyQtyDue Number {
      fetch = "ORIGINAL_BUY_QTY_DUE";
      label = "Original Sales Qty";
      editable = [false];
   }
   attribute OriginalPlanDelivDate Timestamp {
      fetch = "ORIGINAL_PLAN_DELIV_DATE";
      label = "Original Planned Delivery Date";
      editable = [false];
   }

   attribute OriginalRentalStartDate Timestamp {
      fetch = "ORIGINAL_RENTAL_START_DATE";
      label = "Original Planned Rental Start Date";
      editable = [false];
   }
   attribute OriginalRentalEndDate Timestamp {
      fetch = "ORIGINAL_RENTAL_END_DATE";
      label = "Original Planned Rental End Date";
      editable = [false];
   }
   attribute SaleUnitPrice Number {
      fetch = "SALE_UNIT_PRICE";
      label = "Original Sales Price";
      editable = [false];
   }
   attribute Discount Number {
      fetch = "DISCOUNT";
      label = "Original Discount";
      editable = [false];
   }
   attribute UnitPriceInclTax Number {
      fetch = "UNIT_PRICE_INCL_TAX";
      label = "Original Sales Price Incl Tax";
      editable = [ETag = null];
   }
   attribute CatalogDesc Text {
      fetch = "CATALOG_DESC";
      label = "Original Customer Part Desc";
      maxlength = 200;
      editable = [false];
   }
   attribute MessageId Number {
      fetch = "MESSAGE_ID";
      label = "Message ID";
      required = [true];
      editable = [false];
   }
   attribute VendorPartDesc Text {
      fetch = "VENDOR_PART_DESC";
      label = "Original Sales Part Desc";
      maxlength = 200;
      editable = [false];
   }
   attribute HasConfiguration Number {
      fetch = "EXTERNAL_CUST_ORDER_CHAR_API.HAS_CONFIGURATION(MESSAGE_ID, LINE_NO, REL_NO)";
      label = "(Untitled)";
      editable = [false];
   }
   attribute VatNo Text {
      fetch = "VAT_NO";
      label = "Tax ID";
      maxlength = 50;
      editable = [false];
   }
   attribute VatFreeVatCode Text {
      fetch = "VAT_FREE_VAT_CODE";
      label = "Tax Free Code";
      maxlength = 20;
      editable = [false];
   }

   attribute TaxLiability Text {
      fetch = "TAX_LIABILITY";
      label = "Tax Liability";
      maxlength = 20;
      editable = [ETag = null];
   }
   attribute ConditionCode Text {
      fetch = "CONDITION_CODE";
      label = "Condition Code";
      maxlength = 2000;
      format = uppercase;
   }
   attribute ClassificationStandard Text {
      fetch = "CLASSIFICATION_STANDARD";
      label = "Classification Standard";
      maxlength = 25;
      editable = [false];
      format = uppercase;
   }
   attribute ClassificationPartNo Text {
      fetch = "CLASSIFICATION_PART_NO";
      label = "Classification Part No";
      maxlength = 25;
      editable = [false];
      format = uppercase;
   }
   attribute CustCalendarId Text {
      fetch = "CUST_CALENDAR_ID";
      label = "Customer Calendar";
      maxlength = 10;
      editable = [ETag = null];
      format = uppercase;
   }
   attribute ExtTransportCalendarId Text {
      fetch = "EXT_TRANSPORT_CALENDAR_ID";
      label = "External Transport Calendar";
      maxlength = 10;
   }
   attribute ClassificationUnitMeas Text {
      fetch = "CLASSIFICATION_UNIT_MEAS";
      label = "Classification UoM";
      maxlength = 10;
      editable = [false];
   }
   attribute ShipmentCreation Enumeration(ShipmentCreation.CustomerOrder) {
      fetch = "SHIPMENT_CREATION_DB";
      label = "Shipment Creation Method";
      editable = [ETag = null];
   }


   reference CountryCodeRef(CountryCode) to IsoCountry(CountryCode) {
      label = "Country Code";
   }

   reference DeliveryTermsRef(DeliveryTerms) to OrderDeliveryTermLov(DeliveryTerms) {
      label = "Delivery Terms";
   }

   reference ShipViaCodeRef(ShipViaCode) to MpccomShipVia(ShipViaCode) {
      label = "Ship-Via Code";
   }

   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Route ID";
   }

   reference DistrictCodeRef(DistrictCode) to SalesDistrict(DistrictCode) {
      label = "District Code";
   }

   reference RegionCodeRef(RegionCode) to SalesRegion(RegionCode) {
      label = "Region Code";
   }

   reference ForwardAgentIdRef(ForwardAgentId) to ForwarderInfo(ForwarderId) {
      label = "Forwarder ID";
   }

   reference MessageIdRef(MessageId) to ExternalCustomerOrder(MessageId) {
      label = "Message ID";
   }

   reference ConditionCodeRef(ConditionCode) to ConditionCode(ConditionCode) {
      label = "Condition Code";
   }

   reference ClassificationStandardRef(ClassificationStandard) to ClassificationStandard(ClassificationStandard) {
      label = "Classification Standard";
   }

   reference ExtTransportCalendarIdRef(ExtTransportCalendarId) to WorkTimeCalendar(CalendarId) {
      label = "External Transport Calendar";
   }



}
@Override
entity ExternalCustOrderChar {
   crud = Read;
   keys = MessageId, LineNo, ReleaseNo, MessageLine {
      where = "MESSAGE_ID = :MessageId and LINE_NO = :LineNo and RELEASE_NO = :ReleaseNo and MESSAGE_LINE = :MessageLine";
   }
   use attributes = CharacteristicId, CharacteristicIdDesc, CharacteristicValue, CharacteristicValueDesc, QtyOfOption, CharacteristicUom, LanguageCode, BaseItemNo, BaseItemDesc, ConfigurationId, SpecRevisionNo;
   attribute CharacteristicId Text {
      editable = [false];
   }
   attribute CharacteristicIdDesc Text {
      label = "Description";
      editable = [false];
   }
   attribute CharacteristicValue Text {
      editable = [false];
   }
   attribute CharacteristicValueDesc Text {
      label = "Description";
      editable = [false];
   }
   attribute QtyOfOption Number {
      label = "Characteristic Qty";
      editable = [false];
   }
   attribute CharacteristicUom Text {
      label = "UoM";
      editable = [false];
   }
   @DynamicComponentDependency CFGCHR
   attribute ConfigDataType Enumeration(ConfigDataType) {
      fetch = "characteristic_data_type";
      label = "Config Data Type";
      editable = [false];
   }
   @DynamicComponentDependency CFGCHR
   attribute ConfigValueType Enumeration(ConfigValueType) {
      fetch = "characteristic_value_type";
      label = "Config Value Type";
      editable = [false];
   }
   attribute LanguageCode Text {
      editable = [false];
   }
   attribute MessageId Number {
      // searchable = false;
      editable = [false];
   }
   attribute LineNo Text {
      editable = [false];
   }
   attribute ReleaseNo Text {
      label = "Rel No";
      editable = [false];
   }
   attribute MessageLine Number {
      // searchable = false;
      editable = [false];
   }
   attribute BaseItemNo Text {
      label = "Part No";
      editable = [ETag != null];
   }
   attribute BaseItemDesc Text {
      label = "Description";
      editable = [false];
   }
   attribute ConfigurationId Text {
      editable = [false];
   }
   attribute SpecRevisionNo Number {
      editable = [false];
   }
   reference MessageLineRef(MessageId, MessageLine) to ExternalCustOrderLine(MessageId, MessageLine) {
      label = "Message Line";
   }
}


---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

function GetInternalCustomerNo Text {
   parameter Site Text;
}

function GetCount Number {
   parameter External Text;

}

function GetDefaults  Structure(DefaultValStructure) {
   parameter CustomerNo Text
      {
      required = [false];
   }
   parameter Contract Text;

}

-------------------------------- STRUCTURES ---------------------------------
structure ApproveOrderStructure {

   attribute AuthorizeCode Text {
      label = "Coordinator";
      maxlength = 20;
      format = uppercase;
   }

   attribute CustOrderType Text {
      label = "Order Type";
      maxlength = 3;
      format = uppercase;
   }

   reference AuthorizeCodeRef(AuthorizeCode) to OrderCoordinatorLov(AuthorizeCode) {
      label = "Coordinator";
   }
   reference CustOrderTypeRef(CustOrderType) to CustOrderType(OrderId) {
      label = "Order Type";
   }
   attribute LimitSalesToAssortments Boolean("TRUE", "FALSE") {
      label = "Limit Sales to Assortments";
      required = [true];
   }

   attribute OverruleLimitSaleToAssort Text {
      required = [true];
   }

   attribute CustomerNo Text;
   attribute Contract Text;

}

structure DefaultValStructure {
   attribute AuthorizeCode Text;
   attribute OrderId Text;
   attribute LimitSalesToAssortments Text;
   attribute OverruleLimitSaleToAssort Text;
}
--------------------------------- VIRTUALS ----------------------------------

virtual ViewConfigurationInputVirtual {
   attribute RelNo Number;
   attribute LineNo Number;
   attribute MessageId Number;
   array ExternalCustOrderCharArray(MessageId, RelNo, LineNo) to ExternalCustOrderChar(MessageId, ReleaseNo, LineNo);
}