--------------------------------------------------------------------------------------
-- Date        Sign     History
-- ----------  ------   --------------------------------------------------------------
-- 2021-08-09  MiKulk   SC21R2-2227, Change the Overriden entity to a query to overcome the errors with mispatche attributes.
-- 2019-10-25  Satglk   SCXTEND-963 Salesman renamed to Salesperson
-- 2018-04-26  JeLise   SCUXXW4-9780, Converted from tbwCreateDeliveryNotes using MTG Version: 1.17
--------------------------------------------------------------------------------------

projection CreateDeliveryNoteForCustomerOrdersHandling;
component ORDER;
layer Core;
description "Use this API to perform creation of a delivery note from the delivered customer order.";
category Users;
include fragment SalesPartSalesmanLovSelector;
include fragment OrderCoordinatorLovSelector;
include fragment CustOrdCust1Selector;
include fragment UserAllowedSiteLovSelector;
include fragment CustomerOrderInitialCheck;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset CustomerOrdersForDeliveryNoteSet for CustomerOrdersForDeliveryNote;

------------------------------ ENTITY DETAILS -------------------------------

@Override
query CustomerOrdersForDeliveryNote {
   lu = CustomerOrder;
   keys = OrderNo;
   from = "customer_order_delivery_notes";
   attribute OrderNo Text {
      maxlength = 100;
   }
   attribute Contract Text;
   attribute OrderId Text;
   attribute CustomerNo Text;
   attribute CustomerName Text {
      fetch = "Cust_Ord_Customer_API.Get_Name(CUSTOMER_NO)";
      label = "Customer Name";
      maxlength = 2000;
   }
   attribute AuthorizeCode Text {
      label = "Coordinator";
   }
   attribute SalesmanCode Text {
      label = "Salesperson";
   }
   attribute WantedDeliveryDate Timestamp {
      label = "Wanted Delivery Date/Time";
   }
   attribute RouteId Text {
      format = uppercase;
   }
   attribute Description Text {
      fetch = "Delivery_Route_API.Get_Description(ROUTE_ID)";
      label = "Description";
      maxlength = 2000;
   }
   attribute Priority Text {
      maxlength = 100;
   }
   attribute Objstate Enumeration(CustomerOrderState);
   
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference OrderIdRef(OrderId) to CustOrderType(OrderId) {
      label = "Order Type";
   }
   reference CustomerNoRef(CustomerNo) to CustOrdCust1(CustomerNo) {
      label = "Customer No";
   }
   reference AuthorizeCodeRef(AuthorizeCode) to OrderCoordinatorLov(AuthorizeCode) {
      label = "Coordinator";
   }
   reference SalesmanCodeRef(SalesmanCode) to SalesPartSalesmanLov(SalesmanCode) {
      label = "Salesperson";
   }
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Route ID";
   }
}
------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

action StartCreateDeliveryNote {
   initialcheck implementation;
   parameter FullSelection Text;
   ludependencies = CustomerOrdersForDeliveryNote;
}

--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

