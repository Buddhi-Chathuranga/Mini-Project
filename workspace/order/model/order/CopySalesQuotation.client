---------------------------------------------------------------------------------------------------
-- Date       Sign   History
-- ---------- ------ ------------------------------------------------------------------------------
-- 2020-09-08 MalLlk SCXTEND-4779, Set max length of ToQuotationNo (Quotation No) as 12.
-- 2019-05-31 fgusse SCUXXW4-18565, Changed ToQuotationNo (Quotation No) to "uppercase".
-- 2018-05-31 HaPulk SCUXXW4-8290, Converted from dlgCopySalesQuotation using MTG Version: 1.20
----------------------------------------------------------------------------------------------------

client CopySalesQuotation;
component ORDER;
layer Core;
projection CopySalesQuotation;

-------------------------------- MAIN PAGES ---------------------------------
navigator {
   entry CopySalesQuotationAssistantNavEntry parent MpccomNavigator.SalesQuotation at index 400 {
      label = "Copy Sales Quotation";
      assistant Assistant;
   }
}

-------------------------------- ASSISTANTS ---------------------------------
assistant Assistant using CopySalesQuotationSet {
   label = "Copy Sales Quotation";


   setup SetupQuotationInfo {
      variable QuotationNoStr {
         type = Text;
      }
      variable WantedDeliveryDateDt {
         type = Timestamp;
      }
      variable RequestReceiptDateDt {
         type = Date;
      }
      variable AnsweringDateDt {
         type = Date;
      }
      variable ExpirationDateDt {
         type = Date;
      }
      variable PriceEffectiveDateDt {
         type = Date;
      }

      execute {
         call GetSystemDate() into SystemdateDt;

         set QuotationNo = QuotationNoStr;
         set WantedDeliveryDate = WantedDeliveryDateDt;
         set RequestReceiptDate = RequestReceiptDateDt;
         set AnsweringDate = AnsweringDateDt;
         set ExpirationDate = ExpirationDateDt;
         set PriceEffectiveDate = PriceEffectiveDateDt;

         if [WantedDeliveryDate < SystemdateDt] {
            set WantedDeliveryDate = null;
         }

         if [RequestReceiptDate < SystemdateDt] {
            set RequestReceiptDate = null;
         }

         if [AnsweringDate < SystemdateDt] {
            set AnsweringDate = null;
         }

         if [ExpirationDate < SystemdateDt] {
            set ExpirationDate = null;
         }

         if [PriceEffectivityDate < SystemdateDt] {
            set PriceEffectiveDate = null;
         }
      }

   }

   init command {
      execute {

         set CopyGeneral = true;
         set CopyQuotationLines = true;

         set CopyRentalQuoteLines = true;

         set CopyCharges = true;
         set CopyCompetitors = true;
         set CopyCustomerAddress = true;
         set CopyDeliveryInformation = true;
         set CopyMiscQuotationInfo = true;
         set CopyRepresentatives = true;
         set CopyContacts = true;
         set CopyPricesandDiscounts = false;
         set CopyDocumentText = false;
         set CopyNotes = false;
      }
   }

   steps {
      step {

         group FromQuotationGroup;
         group ToQuotationGroup;
         group CopyGroup;
      }
      final step {

      }
   }
   finish command {
      enabled = [QuotationNo != null];

      execute {

         call CopyQuotation(QuotationNo, ToQuotationNo, WantedDeliveryDate, RequestReceiptDate, AnsweringDate, ExpirationDate, PriceEffectiveDate,
         CopyGeneral, CopyQuotationLines, CopyRentalQuoteLines, CopyCharges, CopyCompetitors, CopyCustomerAddress,
         CopyDeliveryInformation, CopyMiscQuotationInfo, CopyRepresentatives, CopyPricesandDiscounts, CopyDocumentText,
         CopyNotes, CopyContacts) into ToQuotationNo;

         messagebox("",
         question, "Quotation No ${ToQuotationNo} has been created. Do you want to view it now ?") {
            when "Yes" {
               navigate "page/SalesQuotation/Form?$filter=QuotationNo eq $[ToQuotationNo]";
            }
            when "No" {
               navigate back;
            }
         }




//         confirm("Quotation No ${ToQuotationNo} has been created. Do you want to view it now ?") {
//            when OK {
//               navigate "page/SalesQuotation/Form?$filter=QuotationNo eq $[ToQuotationNo]";
//            }
//            when CANCEL {
//               navigate back;
//            }
//         }
      }
   }
   cancel command {
      execute {
         navigate back;
      }
   }
   restart command {
      visible = [false];
   }
}

---------------------------------- GROUPS -----------------------------------
group FromQuotationGroup for CopySalesQuotationVirtual {
   label = "From Quotation";

   lov QuotationNoRef with ReferenceQuotationsPerSiteLovSelector {

      label = "Quotation No";
      validate command {
         variable SystemdateDt {
            type = Date;
         }

         variable OrderQuotationStructureVar {
            type = Structure(OrderQuotationStructure);
         }

         execute {
            call GetSystemDate() into SystemdateDt;
            call GetOrderQuotationDetails(QuotationNo) into OrderQuotationStructureVar;

            if [OrderQuotationStructureVar.WantedDeliveryDate < SystemdateDt] {

               set WantedDeliveryDate = null;
            }
            else {
               set WantedDeliveryDate = OrderQuotationStructureVar.WantedDeliveryDate;
            }

            if [OrderQuotationStructureVar.RequestReceivedDate < SystemdateDt] {
               set RequestReceiptDate = null;
            }
            else {
               set RequestReceiptDate = OrderQuotationStructureVar.RequestReceivedDate;
            }

            if [OrderQuotationStructureVar.AnsweringDate < SystemdateDt] {
               set AnsweringDate = null;
            }
            else {
               set AnsweringDate = OrderQuotationStructureVar.AnsweringDate;
            }

            if [OrderQuotationStructureVar.ExpirationDate < SystemdateDt] {
               set ExpirationDate = null;
            }
            else {
               set ExpirationDate = OrderQuotationStructureVar.ExpirationDate;
            }

            if [OrderQuotationStructureVar.PriceEffectivityDate < SystemdateDt] {
               set PriceEffectiveDate = null;
            }
            else {
               set PriceEffectiveDate = OrderQuotationStructureVar.PriceEffectivityDate;
            }
         }
      }
   }
}

group ToQuotationGroup for CopySalesQuotationVirtual {
   label = "New Quotation Info";
   field ToQuotationNo {
      label = "Quotation No";
      format = uppercase;
      maxlength = 12;
   }
   field WantedDeliveryDate {
      label = "Wanted Delivery Date/Time";
   }
   field RequestReceiptDate {
      label = "Request Receipt Date";
   }
   field AnsweringDate {
      label = "Answering Date";
   }
   field ExpirationDate {
      label = "Expiration Date";
   }
   field PriceEffectiveDate {
      label = "Price Effective Date";
   }
}

group CopyGroup for CopySalesQuotationVirtual {
   label = "Copy Options";
   field CopyGeneral {
      size = Small;
      label = "Dates and General";

   }
   field CopyQuotationLines {
      size = Small;
      label = "Quotation Lines";

   }

   @DynamicComponentDependency RENTAL
   field CopyRentalQuoteLines {
      size = Small;
      label = "Rental Quotation Lines";

   }
   field CopyCharges {
      size = Small;
      label = "Charges";

   }
   field CopyCompetitors {
      size = Small;
      label = "Competitors";

   }
   field CopyCustomerAddress {
      size = Small;
      label = "Customer Address";

   }
   field CopyDeliveryInformation {
      size = Small;
      label = "Delivery Settings and Freight";

   }
   field CopyMiscQuotationInfo {
      size = Small;
      label = "Invoice and Miscellaneous";
   }

   @DynamicComponentDependency CRM
   field CopyRepresentatives {
      size = Small;
      label = "Representatives";
   }

   @DynamicComponentDependency CRM
   field CopyContacts {
      size = Small;
      label = "Contacts";

   }
   field CopyPricesandDiscounts {
      size = Small;
      label = "Prices and Discounts";

   }
   field CopyDocumentText {
      size = Small;
      label = "Document Text";

   }
   field CopyNotes {
      size = Small;
      label = "Notes";

   }
}
