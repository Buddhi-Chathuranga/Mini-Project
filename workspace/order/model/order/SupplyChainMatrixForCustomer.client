-------------------------------------------------------------------------------------------------------
--  Date        Sign    History
--  ----------  ------  --------------------------------------------------------------------------------
--  2020-11-12  RavDlk  SC2020R1-11228, Handled booleans and enumerations for some attrbutes
--  2020-01-27  Aabalk  SCSPRING20-1687, Excluded remote warehouse shipment locations from ShipInventoryLocationNoRef.
--  2019-10-31  Hairlk  SCXTEND-1326, Set the startupmode to search.
--  2018-11-24  niedlk  SCUXXW4-9565, Converted from frmSupplyChainMatrixForCust, frmFromSupplySiteToCust
--                      and frmFromExtSupplier using MTG Version 1.33.
--  ----------  ------  --------------------------------------------------------------------------------

client SupplyChainMatrixForCustomer;
component ORDER;
layer Core;
projection SupplyChainMatrixForCustomerHandling;
include fragment ExternalCustomerLovSelector;
include fragment SiteUivSelector;
include fragment NonRemoteWhseShipLocationSelector;
include fragment FreightZoneJoinSelector;
@DynamicComponentDependency PURCH
include fragment ExternalSupplierLovSelector;
@DynamicComponentDependency PURCH
include fragment SuppAddressMatrixLovSelector;
include fragment FreightZoneSuppLovSelector;
include fragment ShipmentTypeSelector;

warningsenabled = CustOrdCustomerAddress;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry SupplyChainMatrixforCustomerNavEntry parent OrderNavigator.TransportationAdministrationSupplyChainRelations at index 100 {
      label = "Supply Chain Matrix for Customer";
      page Form;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using CustOrdCustomerAddressSet {
   label = "Supply Chain Matrix for Customer";
   startupmode = search;
   selector CustOrdCustomerAddressSelector;
   group SupplyChainMatrixForCustGroup;

   tabs {
      tab {
         label = "From External Supplier";
         list SupplierToCustomerLeadtimeList(SupplierToCustomerLeadtimeArray);
         list SupplierToCustomerPartLeadTimeList(SupplierToCustomerPartLeadtimeArray) bind SupplierToCustomerLeadtimeList {
            display = Nested;
         }
      }

      tab {
         label = "From Supply Site";
         list CustAddressLeadTimeList(CustomerAddressLeadtimeArray);
         list CustAddressPartLeadTimeList(CustomerAddressPartLeadtimeArray) bind CustAddressLeadTimeList {
            display = Nested;
         }
      }
   }
}

--------------------------------- COMMANDS ----------------------------------
command SetasDefaultShipViaCommand for CustomerAddressLeadtime {
   label = "Set as Default Ship Via";
   enabled = [Contract != null and CustomerNo != null and AddrNo != null and ShipViaCode != null and DefaultShipVia = "No"];
   execute {
      set DefaultShipVia = "Yes";
      refresh;
   }
}
command SetasDefaultShipViaCommand for CustomerAddressPartLeadtime {
   label = "Set as Default Ship Via";
   enabled = [SupplyChainPartGroup != null and DefaultShipVia = "No"];
   execute {
      set DefaultShipVia = "Yes";
      refresh;
   }
}

command SetasDefaultShipViaCommand for SupplierToCustomerLeadtime {
   label = "Set as Default Ship Via";
   enabled = [VendorNo != null and CustomerNo != null and AddrNo != null and ShipViaCode != null and DefaultShipVia = "No"];
   execute {
      set DefaultShipVia = "Yes";
      refresh;
   }
}

command SetasDefaultShipViaCommand for SupplierToCustomerPartLeadTime {
   label = "Set as Default Ship Via";
   enabled = [VendorNo != null and CustomerNo != null and AddrNo != null and ShipViaCode != null and DefaultShipVia = "No"];
   execute {
      set DefaultShipVia = "Yes";
      refresh;
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector CustOrdCustomerAddressSelector for CustOrdCustomerAddress {
   label = "${CustomerNo} - ${AddrNo}";
   static CustomerNo;
   static AddrNo;
}

---------------------------------- GROUPS -----------------------------------
group SupplyChainMatrixForCustGroup for CustOrdCustomerAddress {
   label = "";
   lov CustomerNoRef with ReferenceExternalCustomerLovSelector {
      description = CustomerNoRef.Name;
      contactwidget {
         enabled = [CustomerNo != null];
         source = Customer;
      }
   }
   lov AddrNoRef with ReferenceCustomerInfoAddressSelector {
      description = AddrNoRef.Name;
      preview = CustomerAddressCard;
   }
   field DefaultAddress {
      size = Small;
      required = [true];
   }
}

----------------------------------- LISTS -----------------------------------
list CustAddressLeadTimeList for CustomerAddressLeadtime {
   label = "";

   lov ContractRef with ReferenceSiteUivSelector {
      description = ContractRef.Description;
      validate command {
         execute {
            set FreightMapId = null;
            set ManuallyAssignedZone = false;
         }
      }
   }
   lov ShipViaCodeRef with ReferenceMpccomShipViaSelector {
      description = ShipViaCodeRef.Description;
      validate command {
         execute {
            set FreightMapId = null;
            set ManuallyAssignedZone = false;
         }
      }
   }
   field DefaultShipVia {
      size = Small;
      required = [true];
      enumerationtrue = "Yes";
      enumerationfalse = "No";
      truelabel = "Yes";
      falselabel = "No";
      searchable = false;
      editable = [false];
   }
   field ExceptionDb {
      size = Small;
      required = [true];
   }
   lov DeliveryTermsRef with ReferenceOrderDeliveryTermSelector {
      size = Large;
      description = DeliveryTermsRef.Description;
   }
   field DelTermsLocation;
   lov RouteIdRef with ReferenceDeliveryRouteSelector {
      description = RouteIdRef.Description;
      validate command {
         enabled = [RouteId != null];
         execute {
            call ForwardAgentId(RouteId) into ForwardAgentId;
         }
      }
   }
   lov ForwardAgentIdRef with ReferenceForwarderInfoSelector {
      description = ForwardAgentIdRef.Name;
   }
   field PickingLeadtime;
   lov ShipmentTypeRef with ShipmentTypeCoLovSelector {
      advancedview ShipmentTypeCoLovList;
   }
   lov ShipInventoryLocationNoRef with ReferenceNonRemoteWhseShipLocationSelector;
   field DeliveryLeadtime;
   field Distance;
   field ExpectedAdditionalCost;
   field CurrencyCodeRef;
   lov ZoneIdRef with ReferenceFreightZoneJoinSelector {
      size = Large;
      description = ZoneIdRef.Description;

      validate command {
         execute {
            call FreightMapIdCust(ShipViaCode, Contract, ZoneId) into FreightMapId;
            set ManuallyAssignedZone = true;
            if [ZoneId = null and FreightMapId = null] {
               set ManuallyAssignedZone = false;
            }
         }
      }
   }
   lov FreightMapIdRef with ReferenceFreightMapSelector {
      size = Large;
      description = FreightMapIdRef.Description;
      editable = [false];
   }
   field ManuallyAssignedZone {
      size = Small;
      required = [false];
      editable = [false];
   }

   fieldranking ContractRef, ShipViaCodeRef, Description, DefaultShipVia, ExceptionDb, DeliveryTermsRef, DeliveryTermsDescription, DelTermsLocation, RouteIdRef, DeliveryLeadtime;

   commandgroup CommandGroupCmdGroup {

      command SetasDefaultShipViaCommand;
   }
}

list CustAddressPartLeadTimeList for CustomerAddressPartLeadtime {
   label = "Exceptions for Site: ${parent.Contract}";

   lov SupplyChainPartGroupRef with ReferenceSupplyChainPartGroupSelector {
      size = Large;
      description = SupplyChainPartGroupRef.Description;
   }
   lov ShipViaCodeRef with ReferenceMpccomShipViaSelector {
      description = ShipViaCodeRef.Description;
      validate command {
         execute {
            set FreightMapId = null;
            set ManuallyAssignedZone = false;
         }
      }
   }
   field DefaultShipVia {
      size = Small;
      required = [true];
      enumerationtrue = "Yes";
      enumerationfalse = "No";
      truelabel = "Yes";
      falselabel = "No";
      searchable = false;
      editable = [false];
   }
   lov DeliveryTermsRef with ReferenceOrderDeliveryTermSelector {
      size = Large;
      description = DeliveryTermsRef.Description;
   }
   field DelTermsLocation;
   lov RouteIdRef with ReferenceDeliveryRouteSelector {
      description = RouteIdRef.Description;
      validate command {
         enabled = [RouteId != null];
         execute {
            call ForwardAgentId(RouteId) into ForwardAgentId;
         }
      }
   }
   lov ForwardAgentIdRef with ReferenceForwarderInfoSelector {
      description = ForwardAgentIdRef.Name;
   }
   field PickingLeadtime;
   lov ShipmentTypeRef with ShipmentTypeCoLovSelector {
      advancedview ShipmentTypeCoLovList;
   }
   field DeliveryLeadtime;
   field Distance;
   field ExpectedAdditionalCost;
   field CurrencyCodeRef;
   lov ZoneIdRef with ReferenceFreightZoneJoinSelector {
      size = Large;
      description = ZoneIdRef.Description;

      validate command {
         execute {
            call FreightMapIdCust(ShipViaCode, Contract, ZoneId) into FreightMapId;
            set ManuallyAssignedZone = true;
            if [ZoneId = null and FreightMapId = null] {
               set ManuallyAssignedZone = false;
            }
         }
      }
   }
   lov FreightMapIdRef with ReferenceFreightMapSelector {
      size = Large;
      description = FreightMapIdRef.Description;
      editable = [false];
   }
   field ManuallyAssignedZone {
      size = Small;
      required = [false];
      editable = [false];
   }

   fieldranking SupplyChainPartGroupRef, Description2, ShipViaCodeRef, Description3, DefaultShipVia, DeliveryTermsRef, DeliveryTermsDescription, DelTermsLocation, RouteIdRef, DeliveryLeadtime;

   commandgroup CommandGroupCmdGroup {

      command SetasDefaultShipViaCommand;
   }
}

list SupplierToCustomerLeadtimeList for SupplierToCustomerLeadtime {
   label = "";

   @DynamicComponentDependency PURCH
   lov VendorNoRef with ReferenceExternalSupplierLovSelector {
      size = Large;
      description = VendorNoRef.Name;
      contactwidget {
         enabled = [VendorNo != null];
         source = Supplier;
      }
      validate command {
         execute {
            set FreightMapId = null;
            set ManuallyAssignedZone = false;
         }
      }
   }
   @DynamicComponentDependency PURCH
   lov SupplierAddressRef with ReferenceSuppAddressMatrixLovSelector {
      size = Large;
      description = SupplierAddressRef.CompanyName2;
   }
   field DefaultAddress {
      size = Small;
      searchable = false;
   }
   lov ShipViaCodeRef with ReferenceMpccomShipViaSelector {
      description = ShipViaCodeRef.Description;
      validate command {
         execute {
            set FreightMapId = null;
            set ManuallyAssignedZone = false;
         }
      }
   }
   field DefaultShipVia {
      size = Small;
      enumerationtrue = "Yes";
      enumerationfalse = "No";
      truelabel = "Yes";
      falselabel = "No";
      searchable = false;
      required = [true];
      editable = [false];
   }
   field ExceptionDb {
      size = Small;
      required = [true];
   }
   lov DeliveryTermsRef with ReferenceOrderDeliveryTermSelector {
      size = Large;
      description = DeliveryTermsRef.Description;
   }

   field DelTermsLocation;
   field DeliveryLeadtime;
   field Distance;
   field ExpectedAdditionalCost;
   field CurrencyCodeRef;
   lov ZoneIdRef with ReferenceFreightZoneSuppLovSelector {
      size = Large;
      description = ZoneIdRef.Description;

      validate command {
         execute {
            call FreightMapIdSupp(ShipViaCode, VendorNo, ZoneId) into FreightMapId;
            set ManuallyAssignedZone = true;
            if [ZoneId = null and FreightMapId = null] {
               set ManuallyAssignedZone = false;
            }
         }
      }
   }
   lov FreightMapIdRef with ReferenceFreightMapSelector {
      size = Large;
      description = FreightMapIdRef.Description;
      editable = [false];
   }
   field ManuallyAssignedZone {
      size = Small;
      required = [false];
      editable = [false];
   }

   fieldranking VendorNoRef, SupplierInfoRef.Name, SupplierAddressRef, DefaultAddress, ShipViaCodeRef, Description, DefaultShipVia, ExceptionDb, DeliveryTermsRef, DeliveryLeadtime;

   commandgroup CommandGroupCmdGroup {

      command SetasDefaultShipViaCommand;
   }
}

list SupplierToCustomerPartLeadTimeList for SupplierToCustomerPartLeadTime {
   label = "Exceptions for Supplier Address: ${parent.VendorNo} - ${parent.SupplierAddress}";

   lov SupplyChainPartGroupRef with ReferenceSupplyChainPartGroupSelector {
      size = Large;
      description = SupplyChainPartGroupRef.Description;
   }
   lov ShipViaCodeRef with ReferenceMpccomShipViaSelector {
      description = ShipViaCodeRef.Description;
      validate command {
         execute {
            set FreightMapId = null;
            set ManuallyAssignedZone = false;
         }
      }
   }
   field DefaultShipVia {
      size = Small;
      enumerationtrue = "Yes";
      enumerationfalse = "No";
      truelabel = "Yes";
      falselabel = "No";
      searchable = false;
      required = [true];
      editable = [false];
   }
   lov DeliveryTermsRef with ReferenceOrderDeliveryTermSelector {
      size = Large;
      description = DeliveryTermsRef.Description;
   }
   field DelTermsLocation;
   field DeliveryLeadtime;
   field Distance;
   field ExpectedAdditionalCost;
   field CurrencyCodeRef;
   lov ZoneIdRef with ReferenceFreightZoneSuppLovSelector {
      size = Large;
      description = ZoneIdRef.Description;

      validate command {
         execute {
            call FreightMapIdSupp(ShipViaCode, VendorNo, ZoneId) into FreightMapId;
            set ManuallyAssignedZone = true;
            if [ZoneId = null and FreightMapId = null] {
               set ManuallyAssignedZone = false;
            }
         }
      }
   }
   lov FreightMapIdRef with ReferenceFreightMapSelector {
      size = Large;
      description = FreightMapIdRef.Description;
      editable = [false];
   }
   field ManuallyAssignedZone {
      size = Small;
      required = [false];
      editable = [false];
   }

   fieldranking SupplyChainPartGroupRef, Description2, ShipViaCodeRef, Description3, DefaultShipVia, DeliveryTermsRef, DeliveryTermsDescription, DelTermsLocation, DeliveryLeadtime, Distance;

   commandgroup CommandGroupCmdGroup {

      command SetasDefaultShipViaCommand;
   }
}

----------------------------------- CARDS -----------------------------------
card CustomerAddressCard for CustomerInfoAddress {
   label = "";
   addressfield {
      address1 Address1;
      address2 Address2;
      address3 Address3;
      address4 Address4;
      address5 Address5;
      address6 Address6;
      city City;
      country CountryName;
      county County;
      state State;
      zipcode ZipCode;
      countrycode CountryCode;
   }
}