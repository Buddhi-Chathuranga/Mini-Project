-------------------------------------------------------------------------------------------------
-- Date        Sign     History
-- ----------  ------   -------------------------------------------------------------------------
-- 2019-11-01  chlelk   SCXTEND-1301, The startupmode was set to "Search"
-- 2019-07-24  Satglk   SCUXXW4-23257, Added BlockedForInvoicing.
-- 2019-07-02  MaAuse   SCUXXW4-21428, Modified stringify to use JSON formatting.
-- 2019-07-02  Satglk   SCUXXW4-21426, Description added for references of CustomerStatisticGroup, SalesGroup, RegionCode, DistrictCode, MarketCode, Country
-- 2018-08-27  JeLise   SCUXXW4-8547, Converted from dlgOrdStatistics using MTG Version: 1.26
-- 2018-08-24  JeLise   SCUXXW4-1006, Converted from tbwOrderStatistics using MTG Version: 1.26
-------------------------------------------------------------------------------------------------

client OutstandingCustomerOrders;
component ORDER;
layer Core;
projection OutstandingCustomerOrdersAnalysis;
include fragment CustOrdCust1Selector;
include fragment SalesPartLov2Selector;
include fragment UserAllowedSiteLovSelector;
include fragment SalesPartSalesmanLovSelector;
include fragment OrderCoordinatorLovSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry OutstandingCustomerOrderNavEntry parent OrderNavigator.OrderAnalysisNavEntry at index 500 {
      label = "Outstanding Orders";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page List using CustomerOrderLineSet {
   label = "Outstanding Orders";
   startupmode = search;
   list OutstandingCustomerOrderList;
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command StatisticsSummaryAllLinesCommand for CustomerOrderLine {
   label = "Statistics summary all lines";
   mode = Global;
   enabled = [true];
   variable KeyrefsVar {
      type = Text;
   }
   variable CurrencyCodeVar {
      type = Text;
   }
   variable StatisticsVar {
      type = StatisticsSummaryStructure;
   }
   bulkexecute {
      stringify(OutstandingCustomerOrderList, keyref, JSON) into KeyrefsVar;
      call GetUniqueCurrencyCode(KeyrefsVar) into CurrencyCodeVar;
      if [CurrencyCodeVar != null] {
         call CalculateStatisticsSummary(KeyrefsVar) into StatisticsVar;
         dialog StatisticsSummaryDialog(StatisticsVar.OutstandingOrders, StatisticsVar.ContributionMargin, StatisticsVar.ContributionMarginRate, CurrencyCodeVar) {
            when OK {
               exit;
            }
         }
      }
      else {
         warning("The Currency values are not same. Summary cannot be executed!", "Warning");
      }
   }
}
command StatisticsSummarySelectedLineCommand for CustomerOrderLine {
   label = "Statistics summary selected lines";
   mode = SelectedRecords;
   enabled = [true];
   variable KeyrefsVar {
      type = Text;
   }
   variable CurrencyCodeVar {
      type = Text;
   }
   variable StatisticsVar {
      type = StatisticsSummaryStructure;
   }
   bulkexecute {
      stringify(records, keyref, JSON) into KeyrefsVar;
      call GetUniqueCurrencyCode(KeyrefsVar) into CurrencyCodeVar;
      if [CurrencyCodeVar != null] {
         call CalculateStatisticsSummary(KeyrefsVar) into StatisticsVar;
         dialog StatisticsSummaryDialog(StatisticsVar.OutstandingOrders, StatisticsVar.ContributionMargin, StatisticsVar.ContributionMarginRate, CurrencyCodeVar) {
            when OK {
               exit;
            }
         }
      }
      else {
         warning("The Currency values are not same. Summary cannot be executed!", "Warning");
      }
   }
}

--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------
group StatisticsSummaryGroup for StatisticsSummaryStructure {
   label = "";
   currency OutstandingOrders(CurrencyCode) {
      editable = [false];
   }
   currency ContributionMargin(CurrencyCode) {
      editable = [false];
   }
   field ContributionMarginRate {
      label = "Contribution Margin (%)";
      editable = [false];
   }
}

----------------------------------- LISTS -----------------------------------

list OutstandingCustomerOrderList for CustomerOrderLine {
   lov CustomerNoRef with ReferenceCustOrdCust1Selector {
      contactwidget {
         enabled = [true];
         source = Customer;
      }
      description = CustomerName;
      size = Large;
   }
   field OrderNoRef;
   field LineNo {
      size = Small;
   }
   field RelNo {
      size = Small;
   }
   badge Objstate {
      label = "Status";
      style = TextOnly;
      emphasis Progress3 = [Objstate = "Released"];
      emphasis Progress5 = [Objstate = "Reserved"];
      emphasis Progress7 = [Objstate = "Picked"];
      emphasis Progress8 = [Objstate = "PartiallyDelivered"];
      emphasis Progress10 = [Objstate = "Delivered"];
   }
   field AgreementId;
   lov CatalogNoRef with ReferenceSalesPartLov2Selector {
      description = CatalogDesc;
      size = Large;
   }
   lov ConditionCodeRef with ReferenceConditionCodeSelector {
      description = ConditionCodeRef.Description;
      size = Large;
   }
   lov ContractRef with ReferenceUserAllowedSiteLovSelector {
      size = Small;
   }
   measure BuyQtyDue(SalesPartRef.SalesUnitMeas);
   measure PriceQty(SalesPartRef.PriceUnitMeas);
   field NetPriceBase {
      searchable = false;
   }
   field PlannedDeliveryDate;
   field NetAmtBase;
   field BaseCurrRef {
      size = Small;
   }
   lov CustomerStatisticGroupRef with ReferenceCustomerGroupSelector {
      description = CustomerStatisticGroupRef.Description;
   }
   lov SalesGroupRef with ReferenceSalesGroupSelector {
      description = SalesGroupRef.Description;
   }
   lov RegionCodeRef with ReferenceSalesRegionSelector {
      description = RegionCodeRef.Description;
   }
   lov DistrictCodeRef with ReferenceSalesDistrictSelector {
      description = DistrictCodeRef.Description;
   }
   lov MarketCodeRef with ReferenceSalesMarketSelector {
      description = MarketCodeRef.Description;
   }
   lov CountryRef with ReferenceIsoCountrySelector {
      description = CountryRef.Description;
   }
   lov SalesmanCodeRef with ReferenceSalesPartSalesmanLovSelector {
      contactwidget {
         enabled = [SalesmanCode != null];
         source = Person;
      }
   }
   lov AuthorizeCodeRef with ReferenceOrderCoordinatorLovSelector {
      contactwidget {
         enabled = [AuthorizeCode != null];
         source = Person;
      }
   }
   field PriceListNoRef {
      size = Small;
   }
   field PriceSourceId {
      size = Small;
   }
   field PriceSource;
   field Priority;
   field BlockedForInvoicing;

   fieldranking CustomerNoRef, OrderNoRef, LineNo, RelNo, Objstate, CatalogNoRef, AgreementId, PlannedDeliveryDate, NetAmtBase;

   command StatisticsSummaryAllLinesCommand;
   command StatisticsSummarySelectedLineCommand;
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------
dialog StatisticsSummaryDialog for StatisticsSummaryStructure {
   label = "Statistics Summary";
   input(OutstandingOrders, ContributionMargin, ContributionMarginRate, CurrencyCode);
   group StatisticsSummaryGroup;

   commandgroup ButtonCmdGroup {

      command Ok;
   }
}

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------
