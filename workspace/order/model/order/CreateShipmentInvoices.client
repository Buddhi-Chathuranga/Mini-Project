
--  Date        Sign    History
--  ----------  ------  ----------------------------------------------------------------------------
--  2019-11-07  FRBESE  SCXTEND-1156, Changed CreateShipmentInvoiceNavEntry navigator entry index from 800 to 600.
--  2019-10-28  Satglk  SCXTEND-963, Salesman renamed to Salesperson
--  2018-05-18  RoJalk  SCUXXW4-9795, Added the code to Create Shipment Invoice.
--  2018-05-02  Dinglk  SCUXXW4-9795,Converted from tbwCreateShipmentInvoice using MTG Version: 1.16.
--  ----------  ------  ----------------------------------------------------------------------------

client CreateShipmentInvoices;
component ORDER;
layer Core;
projection CreateShipmentInvoices;
include fragment CustOrdCust1Selector;
include fragment UserAllowedSiteLovSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------

navigator {
   entry CreateShipmentInvoiceNavEntry parent OrderNavigator.SalesInvoicing at index 600 {
      label = "Create Shipment Invoices";
      page List;
   }
}
-------------------------------- MAIN PAGES ---------------------------------

page List using InvoiceCustomerOrders {
   label = "Create Shipment Invoices";
   startupmode = search;
   list CreateShipmentInvoiceList;
}

--------------------------------- COMMANDS ----------------------------------

command CreateShipmentInvoice for InvoiceCustomerOrder {
   label = "Create Shipment Invoice";
   mode = SelectedRecords;
   enabled = [true];
   variable AdvancePrepaymentInvoiceInfo {
      type = AdvancePrepaymentInvoiceInfoStruct;
   }
   bulkexecute {
      confirm("Shipment(s) will be invoiced") {
         when OK {
            call MakeShipmentInvoice(Selection) into AdvancePrepaymentInvoiceInfo {
               when SUCCESS {
                  hideselection();
                  if [AdvancePrepaymentInvoiceInfo.AdvanceOrPrepaymentInvoiceExist = "TRUE"] {
                     if [AdvancePrepaymentInvoiceInfo.AdvanceInvoiceExist = "TRUE"] {
                        alert("An advance invoice exists for the order(s) ${AdvancePrepaymentInvoiceInfo.AdvanceInvoiceOrderNoList}, which will therefore not be included in the shipment invoice.");
                     }
                     if [AdvancePrepaymentInvoiceInfo.PrepaymentInvoiceExist = "TRUE"] {
                        alert("A prepayment invoice exists for the order(s) ${AdvancePrepaymentInvoiceInfo.PrepaymentInvoiceOrderNoList}, which will therefore not be included in the shipment invoice.");
                     }
                  }
               }
               when FAIL {
                  error("${error.Message}");
                  exit;
               }
            }
         }
      }
   }
}

----------------------------- VISUAL COMPONENTS -----------------------------

----------------------------------- LISTS -----------------------------------

list CreateShipmentInvoiceList for InvoiceCustomerOrder {
   field ShipmentIdRef;
   lov CustomerNoRef with CustomerNoRefSelector {
      contactwidget {
         enabled = [CustomerNo != null];
         source = Customer;
      }
   }
   field CustomerName {
      size = Large;
   }
   field ContractRef;
   field CustOrdCustomerRef.SalesmanCode {
      label = "Salesperson";
      contactwidget {
         enabled = [CustOrdCustomerRef.SalesmanCode != null];
         source = Person;
      }
   }
   field CurrencyCode;
   field PayTermId;
   field BillAddrNo;
   field JinsuiInvoice {
      size = Small;
   }
   field CurrencyRateType;
   field CurrencyRateTypeDescription;
   field Company;

   commandgroup CreateShipmentInvoiceCmdGroup {
      label = "";
      command CreateShipmentInvoice;
   }
}

--------------------------------- SELECTOR ----------------------------------

@Override
selector CustomerNoRefSelector for CustOrdCust1 {
   static CustomerNo;
   static Category;
   static Name;
}

@Override
selector ReferenceShipmentSelector for Shipment {
   label = "";
   static ShipmentId;
   static ReceiverType;
   static ReceiverId;
   static SourceRefType {
      visible = [false];
   }
   static Contract;
   badge Objstate;
}

