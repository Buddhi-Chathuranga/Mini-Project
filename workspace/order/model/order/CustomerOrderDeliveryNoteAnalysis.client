
-------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  --------------------------------------------------------------------------
-- 2021-02-24  WaSalk  SC2020R1-12591, Removed LocalizationControlCenterHandler fragment and InitLocalizationFunctionalitiesCommand and
-- 2021-02-24          modified enable command of PrintDeliveryNoteCommand and MiscDeliveryInfoCommand.
-- 2020-12-03  WaSalk  GESPRING20-6039, Added DelnoteNo to GetShipmentResultKeys() to support gelr functionalities.
-- 2020-11-27  DiJwlk  GESPRING20-6008, Removed ProceedAfterPrint call from PrintDeliveryNoteCommand
-- 2020-11-18  WaSalk  GESPRING20-6002, Modified MiscDeliveryInfoCommand get correct value to QtyEurPallets.
-- 2020-10-21  RasDlk  SC2020R1-10680, Removed CustomerNo from the DeliveryNoteSelector.
-- 2020-10-21  MaEelk  SC2020R1-19833, Modified the command MiscDeliveryInfoCommand and passed null to QtyEurPallets when calling the dialog ModifyMiscDeliveryInfoDialog.
-- 2020-09-10  RasDlk  SC2020R1-9757, Removed the ampersand from the label and replaced it with and in the group WeightAndVolumeTotalsGroup.
-- 2020-04-20  WaSalk  GESPRING20-4239, Modified PrintDeliveryNoteCommand to enable if delivered when AltDelnoteNoChronologicEnabled active.
-- 2020-02-05  Dihelk  GESPRING20-1791, Delivery note printing implementaion in Delivery note Analysis windows and Shipment.
-- 2020-01-14  WaSalk  GESPRING20-1622, Added command MiscDeliveryInfoCommand to navigate ModifyMiscDeliveryInfoDialog.
-- 2019-10-31  Hairlk  SCXTEND-1320, Set the startupmode to search.
-- 2019-06-12  RasDlk  SCUXXW4-21668, Added UoM in the Weight and Volume Totals Group Box.
-- 2019-05-28  ErRalk  SCUXXW4-21846, Added ShipReceiverAddrSelector for reference ReceiverIdRef
-- 2019-05-27  SBalLK  SCUXXW4-19318, Added success message when background job creates for Customer Order Pro Forma Invoice to print.
-- 2019-05-25  ErRalk  SCUXXW4-21662, Added OrderDeliveryTermLovSelector fragment.
-- 2019-04-23  Hpetse  SCUXXW4-4749, Changed status badges
-- 2019-01-02  RasDlk  SCUXXW4-14732, Implemented Total Net Weight, Gross Weight and Volume.
-- 2018-12-06  ErRalk  SCUXXW4-14588, Implement Address tab.
-- 2018-10-01  DiNglk  SCUXXW4-4750, Formatted the header layout
-- 2018-09-05  RaVdlk  SCUXXW4-4749, Implemented the RMBs
-- 2018-09-04  RaVdlk  SCUXXW4-4749, Handlied the population of header
-- 2018-09-03  RaVdlk  SCUXXW4-4889, Handlied the loading of Shipment line to the tab
-- 2018-09-03  RaVdlk  SCUXXW4-814, Handlied the loading of Customer Order line to the tab
-- 2018-09-03  Dinglk  SCUXXW4-814, Converted from tbwCustOrdDelivLine using MTG Version: 1.26
-------------------------------------------------------------------------------------------------

client CustomerOrderDeliveryNoteAnalysis;
component ORDER;
layer Core;
projection CustomerOrderDeliveryNoteAnalysis;
include fragment UserAllowedSiteLovSelector;
include fragment CustOrdCust1Selector;
include fragment CoChargeJoinSelector;
include fragment DeliveryNote;
include fragment OrderDeliveryTermLovSelector;
include fragment ShipReceiverAddrSelector;
-- gelr:modify_date_applied, begin
include fragment ModifyMiscDeliveryInfoDialog;
-- gelr:modify_date_applied, end
----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry QueryDeliveryNoteNavEntry parent OrderNavigator.ShippingOrderDelivery at index 600 {
      label = "Customer Order Delivery Note Analysis";
      page Form;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using DeliveryNoteSet {
   label = "Customer Order Delivery Note Analysis";
   startupmode = search;

   stateindicator DeliveryNoteStateIndicator;
   selector DeliveryNoteSelector;
   group DeliveryNoteGroup;
   group CustomerOrderGroup;
   group WeightAndVolumeTotalsGroup;

   tabs {

      tab {
         visible = [OrderNo != null];
         label = "Customer Order Lines";
         list CustOrdDelivLineList(DeliveryNoteCustomerOrderLineArray);
      }
      tab {
         visible = [ShipmentIdValue != "0"];
         label = "Shipment Lines";
         list ShipmentDelivLineList(DeliveryNoteShipmentLineLineArray);
      }
      tab {
         label = "Address";
         group ReceiverGroup;
         group SenderGroup;
         group ForwarderGroup;
      }

   }
   commandgroup DeliveryNoteCmdGroup {
      command PrintDeliveryNoteCommand;
      command OpenPrintDelNoteCommand;
   }
   command PrintProFormaCommand;
   -- gelr:modify_date_applied, begin
   command MiscDeliveryInfoCommand;
   -- gelr:modify_date_applied, end
}

--------------------------------- COMMANDS ----------------------------------
command PrintDeliveryNoteCommand for DeliveryNote {
   label = "Print";
   enabled = [(DelnoteNoRef.Objstate != "Invalid" and not "ALT_DELNOTE_NO_CHRONOLOGIC" in EnabledLccParams) or("ALT_DELNOTE_NO_CHRONOLOGIC" in EnabledLccParams)];
   -- gelr:modify_date_applied, begin
   variable OldDelNoteObjStateVar Text;
   -- gelr:modify_date_applied, end
   execute {
      if [OrderNo != null] {
         -- gelr:modify_date_applied, begin
         set OldDelNoteObjStateVar = DelnoteNoRef.Objstate;
         -- gelr:modify_date_applied, end
         call GetOrderResultKeys(CustomerNo, OrderNo, OldDelNoteObjStateVar) into ResultKeysStr;
         printdialog ResultKeysStr;
      }
      else {
         call GetShipmentResultKeys(Contract, ShipmentId, CustomerNo, ReceiverId, ReceiverTypeDb, DelnoteNo)into ResultKeysStr;
         printdialog ResultKeysStr;
      }
   }
}

command PrintProFormaCommand for DeliveryNote {
   label = "Print Customer Order Pro Forma Invoice";
   enabled = [DelnoteNoRef.Objstate != "Invalid" and OrderNo != null];
   execute {
      confirm("Customer Order Pro Forma Invoice will be printed") {
         when CANCEL {
            exit;
         }
         when OK {
            call PrintProformaInvoice() {
               when SUCCESS {
                  // Toast message for background job(18-06-29 Functional meeting).
                  success("This action will run as a background job.");
               }
            }
         }
      }
   }
}
command OpenPrintDelNoteCommand for DeliveryNote {
   label = "Print Delivery Note for Customer Orders";
   enabled = [DelnoteNoRef.Objstate != "Invalid" and OrderNo != null];
   execute {
      navigate "page/PrintDeliveryNoteForCustomerOrders/List?$filter=DelnoteNo eq $[DelnoteNo]";
   }
}

-- gelr:modify_date_applied, begin
command MiscDeliveryInfoCommand for DeliveryNote {
   label = "Misc Delivery Info";
   enabled = [("MODIFY_DATE_APPLIED" in EnabledLccParams and EnabledLccParams != "") or("WAREHOUSE_JOURNAL" in EnabledLccParams)];
   execute {
      dialog ModifyMiscDeliveryInfoDialog(Company, DelnoteNo, DelNotePrintDate, TransportDate, DeliveryReasonId, QtyEurPallets) {
         when CANCEL {
            exit CANCEL;
         }
      }
   }
}
-- gelr:modify_date_applied, end
--------------------------------- SELECTORS ---------------------------------
@Override
selector DeliveryNoteSelector for DeliveryNote {
   label = "";
   static DelnoteNo;
   static Contract {
      label = "Site";
   }
   static ReceiverId;
   static ShipmentId;
   static OrderNo;
   badge Objstate {
      label = "Status";
      emphasis Progress6 = [DelnoteNoRef.Objstate = "Created"];
      emphasis Progress12 = [DelnoteNoRef.Objstate = "Printed"];
      emphasis StateCancelled = [DelnoteNoRef.Objstate = "Invalid"];
      style = TextOnly;
   }
}

---------------------------------- GROUPS -----------------------------------
group CustomerOrderGroup for DeliveryNote {
   label = "Order Info";
   visible = [ShipmentId = null];
   field OrderNoRef;
   badge OrderNoRef.Objstate {
      label = "Status";
      emphasis Progress5 = [OrderNoRef.Objstate = "Reserved"];
      emphasis Progress7 = [OrderNoRef.Objstate = "Picked"];
      emphasis Progress8 = [OrderNoRef.Objstate = "PartiallyDelivered"];
      emphasis Progress10 = [OrderNoRef.Objstate = "Delivered"];
      emphasis Progress12 = [OrderNoRef.Objstate = "Invoiced"];
      emphasis StateBlocked = [OrderNoRef.Objstate = "Blocked"];
      emphasis StateCancelled = [OrderNoRef.Objstate = "Cancelled"];

      style = TextOnly;
      searchable = false;
   }
   lov CustomerNoRef with ReferenceCustOrdCust1Selector {
      description = CustomerNoRef.Name;
      label = "Customer";
      contactwidget {
         enabled = [CustomerNoRef.CustomerNo != null];
         source = Customer;
      }
   }
   field ExternalCOLabelNote;
}

group WeightAndVolumeTotalsGroup for DeliveryNote {
   label = "Weight and Volume Totals";
   lov DeliveryNoteWeightAndVolumeTotalRef with ReferenceDeliveryNoteWeightAndVolumeTotalSelector {
      label = "Total Net Weight";
      description = "${DeliveryNoteWeightAndVolumeTotalRef.TotalNetWeight} ${CompanyInventInfoRef.UomForWeight}";
      hidekey = [true];
   }
   lov DeliveryNoteWeightAndVolumeTotalRef with ReferenceDeliveryNoteWeightAndVolumeTotalSelector {
      label = "Total Gross Weight";
      description = "${DeliveryNoteWeightAndVolumeTotalRef.TotalGrossWeight} ${CompanyInventInfoRef.UomForWeight}";
      hidekey = [true];
   }
   lov DeliveryNoteWeightAndVolumeTotalRef with ReferenceDeliveryNoteWeightAndVolumeTotalSelector {
      label = "Total Volume";
      description = "${DeliveryNoteWeightAndVolumeTotalRef.TotalVolume} ${CompanyInventInfoRef.UomForVolume}";
      hidekey = [true];
   }
}

----------------------------- STATE INDICATORS ------------------------------
@Override
stateindicator DeliveryNoteStateIndicator for DeliveryNote {
   state "Created" {
      completed = 50%;
      emphasis Progress6 = [DelnoteNoRef.Objstate = "Created"];
   }
   state "Printed" {
      completed = 100%;
      emphasis Progress12 = [DelnoteNoRef.Objstate = "Printed"];
   }
   state "Invalid" {
      completed = 100%;
      emphasis StateCancelled = [DelnoteNoRef.Objstate = "Invalid"];
   }
}
----------------------------------- LISTS -----------------------------------

list CustOrdDelivLineList for DeliveryNoteCustomerOrderLine {
   lov OrderNoRef with ReferenceCustomerOrderSelector;
   field LineNo;
   field RelNo;
   field CatalogNoRef;
   field CatalogDesc {
      size = Large;
   }
   field BuyQtyDue;
   field RemainingQuantity;
   field SalesUnitMeasRef;
   field DeliveredQtySalesUom;
   field TotalDeliveredQty;
   field CustomerOrderLineRef.ClassificationStandard {
      label = "Classification Standard";
   }
   field CustomerOrderLineRef.ClassificationPartNo {
      label = "Classification Part No";
   }
   field CustomerOrderLineRef.ClassificationUnitMeas {
      label = "Classification UoM";
   }
   field GTIN;
   fieldranking OrderNoRef, LineNo, RelNo, CatalogNoRef, BuyQtyDue, RemainingQuantity;
}
@Override
list ShipmentLovList for Shipment {
   label = "";
   static ShipmentId;
   static ReceiverType;
   static ReceiverId;
   static SourceRefType;
   static Contract;
   static SenderName;
   static ShipmentType;
   static ParentConsolShipmentId {
      label = "Consolidate Shipment ID";
   }
}

