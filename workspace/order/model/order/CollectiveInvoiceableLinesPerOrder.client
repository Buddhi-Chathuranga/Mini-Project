--  Date       Sign    History
--  ------     ------  ---------------------------------------------------------
--  180920     Rulilk SCUXXW4-8985, Converted from frmColInvoicableLinesPerOrder using MTG Version: 1.29.
--  ------     ------  ---------------------------------------------------------

client CollectiveInvoiceableLinesPerOrder;
component ORDER;
layer Core;
projection CollectiveInvoiceableLinesPerOrder;

include fragment CoChargeJoinSelector;
include fragment CustOrdCust2Selector;
include fragment NonRentalSalesPartLovSelector;
include fragment CustAddressShipLovSelector;

-------------------------------- MAIN PAGES ---------------------------------
page Form using InvoiceCustomerOrderSet {
   label = "Invoiceable Lines per Order";
   selector InvoiceCustomerOrderSelector;
   group ColInvoicableLinesPerOrderGroup;
   list InvoicableLinesList(InvoicableLinesArray);

   commandgroup CommandGroupCmdGroup {

      command CustomerOrderCommand;
   }
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command CustomerOrderCommand for InvoiceCustomerOrder {
   label = "Customer Order";
   enabled = [OrderNo != null];
   execute {
      navigate "page/CustomerOrder/Form?$filter=OrderNo eq $[OrderNo]";
   }
}
command BlockfromInvoicingCommand for InvoicebleCustomerOrderLines {
   label = "Block From Invoicing";
   mode = SelectedRecords;
   enabled = [true];
   bulkexecute {
      bulkcall BlockFromInvoicing(OrderNo, LineNo, RelNo, LineItemNo);
      call RefreshLines();
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector InvoiceCustomerOrderSelector for InvoiceCustomerOrder {
   label = "${OrderNo}";
   static OrderNo;
}

---------------------------------- GROUPS -----------------------------------
group ColInvoicableLinesPerOrderGroup for InvoiceCustomerOrder {
   label = "";
   lov OrderNoRef with ReferenceCoChargeJoinSelector {
      size = Small;
   }
   lov CustomerNoRef with ReferenceCustOrdCust2Selector {
      label = "Customer";
      contactwidget {
         enabled = [true];
         source = Customer;
      }
      description = CustomerNoRef.Name;
   }
   field OrderIdRef {
      size = Small;
   }
   field ContractRef {
      size = Small;
   }
   field DateEntered;
   field TaxLiabilityCountry {
      size = Small;
   }
}
----------------------------------- LISTS -----------------------------------
list InvoicableLinesList for InvoicebleCustomerOrderLines {
   label = "Invoiceable Lines";
   field LineNo {
      size = Small;
      searchable = false;
   }
   field RelNo {
      size = Small;
      searchable = false;
   }

   badge Objstate {
      label = "Status";
      emphasis Progress3 = [ObjstateDb = "Released"];
      emphasis Progress5 = [ObjstateDb = "Reserved"];
      emphasis Progress7 = [ObjstateDb = "Picked"];
      emphasis Progress8 = [ObjstateDb = "PartiallyDelivered"];
      emphasis Progress10 = [ObjstateDb = "Delivered"];
      emphasis Progress12 = [ObjstateDb = "Invoiced"];
      emphasis StateCancelled = [ObjstateDb = "Cancelled"];
      searchable = false;
      style = TextOnly;
   }
   lov CatalogNoRef with ReferenceNonRentalSalesPartLovSelector {
      description = CatalogNoRef.CatalogDesc;
      size = Large;
   }

   field BuyQtyDue;
   field QtyOnInvoice;
   field SalesUnitMeasRef {
      size = Small;
   }
   currency SaleUnitPrice(CurrencyCode) {
      preserveprecision = [true];
   }
   currency UnitPriceInclTax(CurrencyCode) {
      preserveprecision = [true];
   }
   field CurrencyRate;
   field BaseSaleUnitPrice {
      preserveprecision = [true];
   }
   field BaseUnitPriceInclTax {
      preserveprecision = [true];
   }
   field NetAmountBase;
   field GrossAmtBase;
   currency NetAmountCurr(CurrencyCode);
   currency GrossAmtCurr(CurrencyCode);
   field WantedDeliveryDate;
   field PlannedDeliveryDate;
   field PromisedDeliveryDate;
   field TaxLiability {
      size = Small;
   }
   field PlannedShipDate;
   field Taxable {
      size = Small;
   }
   lov FeeCodeRef with ReferenceStatutoryFeeSelector {
      description = FeeCodeRef.Description;
   }
   field TaxAmountBase;
   field ShipAddrNoRef;
   field DeliverToCustomerNoRef;
   lov DeliveryTermsRef with ReferenceOrderDeliveryTermSelector {
      description = DeliveryTermsRef.Description;
      size = Large;
   }


   commandgroup CommandGroupCmdGroup {

      command BlockfromInvoicingCommand;
   }
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------
