
--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2021-07-27  ApWilk  Bug 160201(SCZ-15685), Added crud Delete for the entity.
-- 2020-11-10  RavDlk  SC2020R1-11228, Handled changes related to some boolean fields and enumerations
-- 2018-10-24  RaVdlk  SCUXXW4-1159, Converted from tbwOverviewSalesChargeType using MTG Version: 1.30
--------------------------------------------------------------------------------------

projection SalesChargeTypesHandling;
component ORDER;
layer Core;
description "Use this API to view information on sales charge types. A charge type is used to enter various information that should be connected to a specific charge";
category Users;
include fragment TaxCodeRestrictedSelector;
include fragment TaxCodeExemptRestrictedSelector;
include fragment UserAllowedSiteLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset SalesChargeTypeSet for SalesChargeType;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity SalesChargeType {
   crud = Read, Update, Delete;
   keys = ChargeType, Contract {
      where = "CHARGE_TYPE = :ChargeType and CONTRACT = :Contract";
   }
   use attributes = ChargeTypeDesc, SalesUnitMeas, ChargeGroup, SalesChgTypeCategory, TaxCode, TaxClassId, ChargeCost, ChargeCostPercent, ChargeAmount, Charge, ChargeAmountInclTax, Company;
   attribute SalesUnitMeas Text {
      label = "Sales UoM";
   }
   attribute ChargeGroup Text {
      label = "Sales Charge Group";
   }
   attribute SalesChgTypeCategory Enumeration(SalesChgTypeCategory) {
      label = "Charge Category";
      editable = [ETag = null];
   }
   attribute TaxClassId Text {
      label = "Tax Class";
   }
   attribute ChargeCost Number {
      format = ifscurrency;
   }
   attribute ChargeCostPercent Number {
      label = "Charge Cost (%)";
   }
   attribute ChargeAmount Number {
      label = "Charge Price";
      format = ifscurrency;
   }
   attribute Charge Number {
      label = "Charge (%)";
   }
   attribute ChargeAmountInclTax Number {
      label = "Charge Price incl Tax";
      format = ifscurrency;
   }
   attribute Taxable Boolean("TRUE", "FALSE") {
      fetch = "taxable_db";
      label = "Taxable";
      editable = [ETag != null];
      required = [true];
   }
   attribute IntrastatExempt Boolean("TRUE", "FALSE") {
      fetch = "intrastat_exempt_db";
      label = "Intrastat Exempt";
      editable = [ETag != null];
      required = [true];
   }
   attribute UnitCharge Boolean("TRUE", "FALSE") {
      fetch = "unit_charge_db";
      label = "Unit Charge";
      editable = [ETag != null];
      required = [true];
   }
   attribute UsePriceInclTax Boolean("TRUE", "FALSE") {
      fetch = "use_price_incl_tax_db";
      label = "Use Price Incl Tax";
      required = [true];
   }
   attribute PrintChargeType Enumeration(GenYesNo) {
      fetch = "print_charge_type_db";
      label = "Print Charge";
      editable = [ETag != null];
      required = [true];
   }
   attribute PrintCollectCharge Enumeration(PrintCollectCharge) {
      fetch = "print_collect_charge_db";
      label = "Print Collect Charge";
      editable = [ETag != null];
      required = [true];
   }
   attribute CurrDate Date {
      fetch = "trunc(Site_API.Get_Site_Date(Contract))";
   }
   reference SalesChargeGroupRef(ChargeGroup) to SalesChargeGroup(ChargeGroup);
   reference CompanyFinanceRef(Company) to CompanyFinance(Company);
   reference TaxClassRef(Company, TaxClassId) to TaxClass(Company, TaxClassId);
   reference StatutoryFeeRef(Company, TaxCode) to StatutoryFee(Company, FeeCode);
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference SalesUnitMeasRef(SalesUnitMeas) to IsoUnit(UnitCode) {
      label = "Sales UoM";
   }
   reference ChargeGroupRef(ChargeGroup) to SalesChargeGroup(ChargeGroup) {
      label = "Sales Charge Group";
   }
   reference TaxCodeRef(Company, TaxCode) to TaxCodeRestricted(Company, FeeCode) {
      label = "Tax Code";
   }
   reference TaxCodeExemptRef(Company, TaxCode) to TaxCodeExemptRestricted(Company, FeeCode) {
      label = "Tax Code Exempt";
   }
   reference TaxClassIdRef(Company, TaxClassId) to TaxClass(Company, TaxClassId) {
      label = "Tax Class";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

function CalculatePriceInclTax Number {
   parameter ChargeAmount   Number;
   parameter TaxableDb      Boolean;
   parameter TaxCode        Text;
   parameter Company        Text;
   parameter RefreshTaxCode Boolean;
}
function CalculatePrice Number {
   parameter ChargePriceInclTax   Number;
   parameter TaxableDb            Boolean;
   parameter TaxCode              Text;
   parameter Company              Text;
}

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------

