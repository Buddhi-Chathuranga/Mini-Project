--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-07-09  IzShlk  SCUXXW4-8822, Converted from dlgTransferAgreement using MTG Version: 1.23
--------------------------------------------------------------------------------------

fragment TransferAgreementDialog;
component ORDER;
layer Core;
description "Use this API to send a customer agreement using the EDI or MHS media codes.";
include fragment CustomerAgreementInitialCheck;


----------------------------- CLIENT FRAGMENTS ------------------------------

--------------------------------- COMMANDS ----------------------------------
command Ok1 {
   label = "Ok";
   enabled = [MediaCode != null];

   execute {
      if [CheckAgreementSent = "Y"] {
         confirm("This Customer Agreement has already been sent or printed. Do you want to resend it?") {
            when CANCEL {
               exit CANCEL;
            }
         }
      }

      call SendOrder(AgreementId, MediaCode, ValidDate);
      exit OK;
   }
}

---------------------------------- GROUPS -----------------------------------
group TransferAgreementGroup for TransferAgreementStructure {
   label = "";

   field AgreementId {
      editable = [false];
   }
   field ValidDate;
   lov ReceiverRef with ReferenceCustOrdCust2Selector {
      contactwidget {
         enabled = [true];
         source = Customer;
      }
      description = ReceiverRef.Name;
      editable = [false];
   }
   field MediaCodeRef;
   field MessageType {
      size = Small;
      editable = [false];
   }
}

---------------------------------- DIALOGS ----------------------------------
dialog TransferAgreementDialog for TransferAgreementStructure {
   label = "Send Customer Agreement";
   input(AgreementId, Receiver, ReceiverDesc, ValidDate, MessageType, MediaCode, CheckAgreementSent);

   group TransferAgreementGroup;

   commandgroup ButtonCmdGroup {
      
      command Ok1;
      command Cancel;
   }
}

--------------------------- PROJECTION FRAGMENTS ----------------------------


-------------------------------- STRUCTURES ---------------------------------
structure TransferAgreementStructure {
   attribute AgreementId Text {
      label = "Agreement ID";
   }
   attribute ValidDate Date {
      label = "Send with Valid Date";
   }
   attribute Receiver Text {
      label = "Receiver";
   }
   attribute ReceiverDesc Text;
   attribute MediaCode Text {
      label = "Media Code";
      maxlength = 30;
      required = [true];
      format = uppercase;
   }
   attribute MessageType Text {
      label = "Message Type";
   }
   attribute CheckAgreementSent Text {
      label = "Agreement Sent flag";
   }
   reference MediaCodeRef(MediaCode) to MessageMedia(MediaCode) {
      label = "Media Code";
   }
   reference ReceiverRef(Receiver) to CustOrdCust2(CustomerNo) {
      label = "Receiver";
   }
}

---------------------------------- ACTIONS ----------------------------------
action SendOrder {
   initialcheck CustomerAgreementInitialCheck(AgreementId);
   ludependencies = CustomerAgreement;

   parameter AgreementId Text;
   parameter MediaCode Text;
   parameter ValidDate Date;
}