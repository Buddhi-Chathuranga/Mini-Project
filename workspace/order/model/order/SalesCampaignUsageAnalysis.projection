--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2020-12-23  ErRalk  Bug 156647(SCZ-12849), Changed the Lu to CustomerOrderCharge as we have moved co_charge_join to CustomerOrderCharge view.
-- 2020-09-23  DhAplk  SC2020R1-9880, Changed Objstate datatype to Enumeration in SalesCampaignCustOrderLine and SalesCampaignPurchaseOrderLine queries.
-- 2019-05-15  MaEelk  SCUXXW4-20235, Contract was labeled as site in SalesCampaignCustOrderLine.
-- 2018-07-13  MAHPLK  SCUXXW4-3001, Converted from tbwCampaignPurchOrdLineOverview using MTG Version: 1.23
-- 2018-07-06  MAHPLK  SCUXXW4-9667, Converted from tbwCampaignCustOrdLineOverview using MTG Version: 1.23
-- 2018-07-06  MAHPLK  SCUXXW4-1516, Converted from tbwSalesPromotionCharges using MTG Version: 1.23
--------------------------------------------------------------------------------------

projection SalesCampaignUsageAnalysis;
component ORDER;
layer Core;
description "Use this API to analyze a Sales Campaign on Parts, Sales Promotion Charges, CO-Lines or PO-Lines ";
category Users;

include fragment UserAllowedSiteLovSelector;
include fragment CustOrdCust2Selector;
include fragment SalesPartActiveLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset SalesCampaignSet for Campaign;

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity Campaign {
   crud = Read;
   attribute CampaignIdStr Text {
      fetch = "to_char(campaign_id)";
   }
   array SalesPromotionChargeArray(CampaignId) to SalesPromotionCharge(CampaignId);
   array SalesCampaignCustOrderLineArray(CampaignIdStr) to SalesCampaignCustOrderLine(CampaignId);
   array SalesCampaignPartsByQuantityArray(CampaignIdStr) to SalesCampaignPartsByQuantity(CampaignId);
   array SalesCampaignPartsByGrossAmountArray(CampaignIdStr) to SalesCampaignPartsByGrossAmount(CampaignId);
   @DynamicComponentDependency PURCH
   array SalesCampaignPurchaseOrderLineArray(CampaignId) to SalesCampaignPurchaseOrderLine(CampaignId);
}

---------------------------------- QUERIES ----------------------------------

query SalesPromotionCharge {
   from = "co_charge_join";
   lu = CustomerOrderCharge;
   keys = CampaignId, DealId, OrderNo, SequenceNo {
      where = "CAMPAIGN_ID = :CampaignId";
   }
   where = "ORDER_STATUS != 'Cancelled'";
   attribute CampaignId Number {
      label = "Campaign";
   }
   attribute DealId Number;
   attribute OrderNo Text;
   attribute OrderStatus Text {
      label = "Order Status";
   }
   attribute SequenceNo Number;
   attribute CustomerNo Text {
      label = "Customer No";
   }
   attribute CustomerName Text {
      label = "Customer Name";
   }
   attribute Contract Text;
   attribute ChargeType Text;
   attribute ChargeTypeDesc Text {
      label = "Charge Type Description";
   }
   attribute ChargeAmount Number {
      label = "Charge Price/Curr";
      format = ifscurrency;
   }
   attribute ChargeAmountInclTax Number {
      label = "Charge Price incl Tax/Curr";
      format = ifscurrency;
   }
   attribute BaseChargeAmount Number {
      label = "Charge Price/Base";
      format = ifscurrency;
   }
   attribute BaseChargeAmtInclTax Number {
      label = "Charge Price incl Tax/Base";
      format = ifscurrency;
   }
   attribute ChargedQty Number {
      label = "Charge Quantity";
   }
   attribute InvoicedQty Number;
   attribute QtyReturned Number {
      label = "Returned Qty";
   }
   attribute PriceUnitMeas Text {
      label = "Price UoM";
   }
   attribute TotalBaseChargedAmount Number {
      label = "Net Amt/Base";
      format = ifscurrency;
   }
   attribute TotalChargedAmount Number {
      label = "Net Amt/Curr";
      format = ifscurrency;
   }
   attribute TotalGrossAmountBase Number {
      fetch = "Customer_Order_Charge_API.Get_Tot_Base_Chg_Amt_Incl_Tax(ORDER_NO, SEQUENCE_NO)";
      label = "Gross Amt/Base";
      format = ifscurrency;
   }
   attribute TotalGrossAmountCurr Number {
      fetch = "Customer_Order_Charge_API.Get_Total_Charged_Amt_Incl_Tax(ORDER_NO, SEQUENCE_NO)";
      label = "Gross Amt/Curr";
      format = ifscurrency;
   }
   attribute TaxCode Text;
   attribute Company Text;

   reference SalesPromotionDealRef(CampaignId, DealId) to SalesPromotionDeal(CampaignId, DealId);
   reference CustomerOrderRef(OrderNo) to CustomerOrder(OrderNo);
   reference OrderNoRef(OrderNo) to CustomerOrder(OrderNo) {
      label = "Order No";
   }
   reference CustomerNoRef(CustomerNo) to CustOrdCust2(CustomerNo) {
      label = "Customer No";
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference ChargeTypeRef(Contract, ChargeType) to SalesChargeType(Contract, ChargeType) {
      label = "Charge Type";
   }
   reference PriceUnitMeasRef(PriceUnitMeas) to IsoUnit(UnitCode) {
      label = "Price UoM";
   }
   reference TaxCodeRef(Company, TaxCode) to StatutoryFee(Company, FeeCode) {
      label = "Tax Code";
   }
}

query SalesCampaignCustOrderLine {
   from = "campaign_cust_ord_line";
   lu = CustomerOrderLine;
   keys = OrderNo, LineNo, RelNo, LineItemNo, CampaignId {
      where = "DECODE(DISCOUNT_SOURCE_ID, NULL, PRICE_SOURCE_ID, DISCOUNT_SOURCE_ID) = :CampaignId";
   }
   attribute CampaignId Text {
      label = "Campaign";
      fetch = "DECODE(DISCOUNT_SOURCE_ID, NULL, PRICE_SOURCE_ID, DISCOUNT_SOURCE_ID)";
   }
   attribute OrderNo Text;
   attribute LineNo Text;
   attribute RelNo Text;
   attribute LineItemNo Number;
   attribute State Text;
   attribute Objstate Enumeration(CustomerOrderLineState);
   attribute CustomerNo Text {
      label = "Customer";
   }
   attribute Contract Text {
      label = "Site";
   }
   attribute CatalogNo Text {
      label = "Sales Part";
   }
   attribute CatalogDesc Text {
      label = "Description";
   }
   attribute BuyQtyDue Number {
      label = "Sales Quantity";
   }
   attribute NetAmountCurr Number {
      fetch = "Customer_Order_Line_API.Get_Sale_Price_Total(ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO)";
      label = "Net Amount/Curr";
      format = ifscurrency;
   }
   attribute NetAmountBase Number {
      fetch = "Customer_Order_Line_API.Get_Base_Sale_Price_Total(ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO)";
      label = "Net Amount/Base";
      format = ifscurrency;
   }
   attribute GrossAmountCurr Number {
      fetch = "Customer_Order_Line_API.Get_Sale_Price_Incl_Tax_Total(ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO)";
      label = "Gross Amt/Curr";
      format = ifscurrency;
   }
   reference CustomerInfoRef(CustomerNo) to CustomerInfo(CustomerId);
   reference CustomerOrderLineRef(OrderNo, LineNo, RelNo, LineItemNo) to CustomerOrderLine(OrderNo, LineNo, RelNo, LineItemNo);
}

@DynamicComponentDependency PURCH
query SalesCampaignPurchaseOrderLine {
   from = "campaign_purch_ord_line";
   lu = PurchaseOrderLine;
   keys = OrderNo, LineNo, ReleaseNo, CampaignId {
      where = "CAMPAIGN_ID = :CampaignId";
   }
   attribute CampaignId Number {
      label = "Campaign";
   }
   attribute OrderNo Text {
      format = uppercase;
   }
   attribute LineNo Text;
   attribute ReleaseNo Text {
      label = "Rel No";
   }
   attribute Contract Text {
      label = "Site";
      format = uppercase;
   }
   attribute VendorNo Text {
      label = "Supplier";
   }
   attribute State Text;
   attribute Objstate Enumeration(PurchaseOrderLineState);
   attribute PartNo Text {
      label = "Part No";
      format = uppercase;
   }
   attribute Description Text {
      label = "Part Description";
   }
   attribute BuyQtyDue Number {
      label = "Quantity";
   }
   attribute Price Number {
      label = "Price per Purch Unit/Base";
      format = ifscurrency;
   }

   reference VendorNoRef(VendorNo) to Supplier(VendorNo) {
      label = "Supplier";
   }
   reference PurchaseOrderLineRef(OrderNo, LineNo, ReleaseNo) to PurchaseOrderLine(OrderNo, LineNo, ReleaseNo);
}

query SalesCampaignPartsByQuantity {
   from = "campaign_parts_by_quantity";
   lu = CustomerOrderLine;
   keys = CampaignId, CatalogNo;
   attribute CampaignId Text {
      label = "Campaign";
   }
   attribute Contract Text;
   attribute CatalogNo Text {
      label = "Sales Part";
   }
   attribute  CatalogDesc Text {
      label = "Description";
      fetch = "Sales_Part_API.Get_Catalog_Desc_For_Lang(contract, catalog_no, Fnd_Session_API.Get_Language())";
   }

   attribute TotalBuyQtyDue Number {
      label = "Sales Quantity";
   }
   reference CatalogNoRef(Contract, CatalogNo) to SalesPartActiveLov(Contract, CatalogNo) {
      label = "Sales Part";
   }

}

query SalesCampaignPartsByGrossAmount {
   from = "campaign_parts_by_gross_amount";
   lu = CustomerOrderLine;
   keys = CampaignId, CatalogNo;
   attribute CampaignId Text {
      label = "Campaign";
   }
   attribute Contract Text;
   attribute CatalogNo Text {
      label = "Sales Part";
   }
   attribute  CatalogDesc Text {
      label = "Description";
      fetch = "Sales_Part_API.Get_Catalog_Desc_For_Lang(contract, catalog_no, Fnd_Session_API.Get_Language())";
   }
   attribute TotalGrossAmountCurr Number {
      label = "Gross Amt/Curr";
      format = ifscurrency;
   }
}


