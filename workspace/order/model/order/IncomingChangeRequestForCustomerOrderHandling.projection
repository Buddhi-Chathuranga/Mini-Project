------------------------------------------------------------------------------------------------------------
-- Date        Sign       History
-- ----------  ------   ------------------------------------------------------------------------------------
-- 2021-12-23  Skanlk   Bug 161134(SC21R2-6825), Added the attribute TaxIdType for the entity ExtCustOrderChange to validate Tax ID other than EU countires.
-- 2021-10-01  PrRtlk   SC21R2-2966, Used the Subset Customer Order in ShipmentCreation Enumeration for Customer Order related Shipment Creation types.
-- 2019-11-07  Satglk   SCXTEND-887,  Added Received date.
-- 2019-10-25  Satglk   SCXTEND-963,  Salesman renamed to Salesperson
-- 2019-10-11  Satglk   SCXTEND-887,  Added created date.
-- 2018-12-11  Akhalk   SCUXXW4-8425, Added dlgExtCustOrderCharChange Assistant using MTG Version: 1.23
-- 2018-10-24  HaPulk   SCUXXW4-9165, Converted from frmExtCustOrderChange using MTG Version: 1.31
------------------------------------------------------------------------------------------------------------

projection IncomingChangeRequestForCustomerOrderHandling;
component ORDER;
layer Core;
description "Use this API to study the incoming ORDCHG messages, which contain changes for quotation requests or customer orders";
category Users;
include fragment OrderDeliveryTermLovSelector;
include fragment CountyCode1LovSelector;
include fragment StateCodeLovSelector;
include fragment CityCode1LovSelector;
include fragment SalesPartSalesmanLovSelector;
include fragment CustOrdCust2Selector;
include fragment CustOrdCust5Selector;
include fragment UserAllowedSiteLovSelector;
include fragment ItemsRequestedForChangeAssistant;
include fragment TaxIdNumbersValidation;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset ExtCustOrderChangeSet for ExtCustOrderChange;
entityset ViewConfigurationInputVirtualSet for ViewConfigurationInputVirtual;
------------------------------ ENTITY DETAILS -------------------------------
@Override
entity ExtCustOrderChange {
   crud = Read, Update;
   keys = MessageId {
      where = "MESSAGE_ID = :MessageId";
   }
   use attributes = OrderNo, Contract, CustomerNo, DeliveryDate, CurrencyCode, LanguageCode, CustRef, InternalPoNo, CustomerPoNo, CustomerNoPay, ExternalRef, SalesmanCode, ForwardAgentId, BackorderOption, InternalCustomerSite, LabelNote, NoteText, InternalRef, InternalPoLabelNote, ErrorMessage, DeliveryAddressName, CountryCode, ShipAddress1, ShipAddress2, ShipAddress3, ShipAddress4, ShipAddress5, ShipAddress6, ShipZipCode, ShipCity, ShipState, ShipCounty, VatNo, TaxIdValidatedDate, EanLocationDocAddr, EanLocationDelAddr, EanLocationPayerAddr, BillAddrNo, ShipAddrNo, DeliveryTerms, DeliveryTermsDesc, DelTermsLocation, ShipViaCode, ShipViaDesc, PayTermId, RouteId, DeliveryLeadtime, PickingLeadtime, ImportMode;

   attribute MessageId Number {
      editable = [false];
   }
   attribute MessageType Text {
      fetch = "Order_Config_Import_Mode_API.Decode(import_mode)";
      label = "Message Type";
      maxlength = 2000;
      editable = [false];
   }
   attribute OrderNo Text {
      editable = [false];
      format = uppercase;
   }
   attribute Contract Text {
      label = "Site";
      editable = [false];
      format = uppercase;
   }
   attribute CustomerNo Text {
      editable = [false];
      format = uppercase;
   }
   attribute DeliveryDate Timestamp {
      label = "Wanted Delivery Date/Time";
      editable = [ETag != null];
   }
   attribute CurrencyCode Text {
      label = "Currency";
      editable = [false];
      format = uppercase;
   }
   attribute LanguageCode Text {
      label = "Language";
      editable = [false];
   }
   attribute CustRef Text {
      label = "Cust Reference";
      editable = [ETag != null];
   }
   attribute InternalPoNo Text {
      editable = [false];
      format = uppercase;
   }
   attribute CustomerPoNo Text {
      label = "Customer's PO No";
      editable = [false];
   }
   attribute CustomerNoPay Text {
      label = "Invoice Customer";
      editable = [ETag != null];
   }
   attribute ExternalRef Text {
      label = "External ID";
   }
   attribute SalesmanCode Text {
      label = "Salesperson";
      format = uppercase;
   }
   attribute SalesmanName Text {
      label = "Salesperson Name";
      fetch = "Sales_Part_Salesman_API.Get_Name(salesman_code)";
      maxlength = 2000;
      editable = [ETag != null];
   }
   attribute ForwardAgentId Text {
      label = "Forwarder ID";
      editable = [ETag != null];
   }
   attribute InternalCustomerSite Text {
      label = "Internal Cust Site";
      editable = [false];
   }
   attribute LabelNote Text {
      label = "External CO Label Note";
      editable = [ETag != null];
   }
   attribute NoteText Text {
      label = "Note";
      editable = [ETag != null];
   }
   attribute InternalRef Text {
      label = "Internal PO Ref";
      editable = [ETag != null];
   }
   attribute InternalPoLabelNote Text {
      editable = [ETag != null];
   }
   attribute ErrorMessage Text {
      editable = [false];
   }
   attribute DeliveryAddressName Text {
      label = "Name";
      editable = [ETag != null];
   }
   attribute CountryCode Text {
      editable = [ETag != null];
      format = uppercase;
   }
   attribute Country Text {
      fetch = "Iso_Country_API.Get_Description(country_code)";
      label = "Country";
      maxlength = 2000;
   }
   attribute ShipAddress1 Text {
      label = "Address 1";
      editable = [ETag != null];
   }
   attribute ShipAddress2 Text {
      label = "Address 2";
      editable = [ETag != null];
   }
   attribute ShipAddress3 Text {
      label = "Address 3";
   }
   attribute ShipAddress4 Text {
      label = "Address 4";
   }
   attribute ShipAddress5 Text {
      label = "Address 5";
   }
   attribute ShipAddress6 Text {
      label = "Address 6";
   }
   attribute ShipZipCode Text {
      label = "Zip Code";
      editable = [ETag != null];
   }
   attribute ShipCity Text {
      label = "City";
      editable = [ETag != null];
   }
   attribute ShipState Text {
      label = "State";
      editable = [ETag != null];
   }
   attribute ShipCounty Text {
      label = "County";
      editable = [ETag != null];
   }
   attribute VatNo Text {
      label = "Tax ID";
      format = uppercase;
   }
   attribute TaxIdValidatedDate Date {
      editable = [false];
   }
   attribute EanLocationDocAddr Text {
      label = "Document";
      editable = [ETag != null];
   }
   attribute EanLocationDelAddr Text {
      label = "Delivery";
      editable = [ETag != null];
   }
   attribute EanLocationPayerAddr Text {
      label = "Invoice";
      editable = [ETag != null];
   }
   attribute BillAddrNo Text {
      label = "Document Address";
   }
   attribute ShipAddrNo Text {
      label = "Delivery Address";
   }
   attribute DeliveryTermsDesc Text {
      label = "Delivery Terms Desc";
      editable = [ETag = null];
   }
   attribute DelTermsLocation Text {
      maxlength = 100;
   }
   attribute ShipViaCode Text {
      label = "Ship-Via";
      format = uppercase;
   }
   attribute ShipViaDesc Text {
      label = "Ship Via Desc";
      editable = [ETag = null];
   }
   attribute PayTermId Text {
      label = "Payment Terms";
   }
   attribute PickingLeadtime Number {
      label = "Picking";
      editable = [ETag != null];
   }
   attribute ImportMode Text {
      editable = [false];
   }
   attribute B2bProcessOnlineDb Text {
      fetch = "b2b_process_online_db";
      maxlength = 20;
      editable = [false];
   }
   attribute Company Text {
      label = "";
      fetch = "Site_API.Get_Company(CONTRACT)";
   }
   attribute CreatedDate Timestamp {
      label = "Created Date";
      editable = [false];
   }
   attribute ReceivedDate Timestamp {
      fetch = "In_Message_API.Get_ReceivedTime(message_id)";
      editable = [false];
   }
   attribute TaxIdType Text {
      fetch = "Ext_Cust_Order_Change_API.Get_Tax_Id_Type(message_id)";
      label = "Tax Id Type";
      editable = [false];
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";

   }
   reference CustomerNoRef(Company, CustomerNo) to CustOrdCust5(Company, CustomerNo) {
      label = "Customer No";

   }
   reference CustomerNoPayRef(CustomerNoPay) to CustOrdCust2(CustomerNo) {
      label = "Invoice Customer";

   }
   reference SalesmanCodeRef(SalesmanCode) to SalesPartSalesmanLov(SalesmanCode) {
      label = "Salesperson";

   }
   reference ForwardAgentIdRef(ForwardAgentId) to ForwarderInfo(ForwarderId) {
      label = "Forwarder ID";
   }
   reference DeliveryTermsRef(DeliveryTerms) to OrderDeliveryTermLov(DeliveryTerms) {
      label = "Delivery Terms";

   }
   reference ShipViaCodeRef(ShipViaCode) to MpccomShipVia(ShipViaCode) {
      label = "Ship-Via";
   }
   reference PayTermIdRef(Company, PayTermId) to PaymentTerm(Company, PayTermId) {
      label = "Payment Terms";
   }
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Route ID";
   }
   attribute RouteIdDescription Text {
      fetch = "Delivery_Route_API.Get_Description(route_id)";
   }

   array ExtCustOrderLineChangeArray(MessageId) to ExtCustOrderLineChange(MessageId);

}

@Override
entity ExtCustOrderCharChange {
   crud = Read;
   keys = MessageId, LineNo, ReleaseNo, MessageLine {
      where = "MESSAGE_ID = :MessageId and LINE_NO = :LineNo and RELEASE_NO = :ReleaseNo and MESSAGE_LINE = :MessageLine";
   }
   use attributes = BaseItemNo, BaseItemDesc, ConfigurationId, SpecRevisionNo, CharacteristicId, CharacteristicIdDesc, CharacteristicValue, CharacteristicValueDesc, QtyOfOption, CharacteristicUom, CharacteristicDataType, CharacteristicValueType, LanguageCode;
   attribute BaseItemNo Text {
      label = "Part No";
   }
   attribute BaseItemDesc Text {
      label = "Description";
   }
   attribute ConfigurationId Text {
      editable = [ETag != null];
   }
   attribute CharacteristicId Text {
      label = "Char ID";
   }
   attribute CharacteristicIdDesc Text {
      label = "Description";
   }
   attribute CharacteristicValue Text {
      label = "Char Value";
   }
   attribute CharacteristicValueDesc Text {
      label = "Description";
   }
   attribute QtyOfOption Number {
      label = "Char Qty";
   }
   attribute CharacteristicUom Text {
      label = "UoM";
   }
   attribute CharacteristicDataType Text {
      label = "Config Data Type";
   }
   attribute CharacteristicValueType Text {
      label = "Config Value Type";
   }
   attribute ReleaseNo Text {
      label = "Rel No";
   }
   reference MessageLineRef(MessageId, MessageLine) to ExternalCustOrderLine(MessageId, MessageLine) {
      label = "Message Line";
   }
}
@Override
entity ExtCustOrderLineChange {
   crud = Read, Update;
   from = "EXT_CUST_ORDER_LINE_CHANGE_ALL";
   exec = "EXT_CUST_ORDER_LINE_CHANGE_API";
   keys = MessageLine {
      where = "MESSAGE_LINE = :MessageLine";
   }
   keys = MessageLine, MessageId {
      where = "MESSAGE_LINE = :MessageLine and MESSAGE_ID = :MessageId";
   }
   use attributes = OriginatingCoLangCode, LineNo, RelNo, CustomerPoLineNo, CustomerPoRelNo, CustomerPartNo, CustomerQuantity, CatalogNo, GtinNo, BuyQtyDue, WantedDeliveryDate, InputQty, ErrorMessage, Notes, DeliveryAddressName, ShipAddress1, ShipAddress2, ShipAddress3, ShipAddress4, ShipAddress5, ShipAddress6, ShipZipCode, ShipCity, ShipState, ShipCounty, CountryCode, DeliverToCustomerNo, DeliveryTerms, DeliveryTermsDesc, DelTermsLocation, ShipViaCode, ShipViaDesc, ShipAddrNo, EanLocationDelAddr, PickingLeadtime, DeliveryLeadtime, RouteId, DistrictCode, RegionCode, ForwardAgentId, DockCode, SubDockCode, Location, ShipmentType, OriginalBuyQtyDue, OriginalPlanDelivDate, SaleUnitPrice, Discount, UnitPriceInclTax, CatalogDesc, VendorPartDesc, VatNo, VatFreeVatCode, TaxLiability, OrdChgState, ClassificationStandard, CustCalendarId, ExtTransportCalendarId, ClassificationPartNo, ClassificationUnitMeas;

   attribute MessageLine Number {
      editable = [false];
   }
   attribute OriginatingCoLangCode Text {
      label = "Language Code";
      maxlength = 100;
      editable = [false];
   }
   attribute LineNo Text {
      editable = [ETag != null];
   }
   attribute RelNo Text {
      label = "Del No";
      editable = [ETag != null];
   }
   attribute RentalDb Boolean("TRUE", "FALSE") {
      fetch = "rental_db";
      label = "Rental";
      editable = [false];
   }
   attribute CustomerPoLineNo Text {
      editable = [ETag = null];
   }
   attribute CustomerPoRelNo Text {
      editable = [ETag = null];
   }
   attribute CustomerPartNo Text {
      label = "Customer's Part No";
      editable = [ETag != null];
      format = uppercase;
   }
   attribute CustomerQuantity Number {
      label = "Customer Sales Qty";
      editable = [ETag != null];
   }
   attribute CatalogNo Text {
      label = "Sales Part No";
      editable = [ETag != null];
      format = uppercase;
   }
   attribute GtinNo Text {
      label = "GTIN";
   }
   attribute BuyQtyDue Number {
      label = "Sales Qty";
      editable = [ETag != null];
   }
   attribute WantedDeliveryDate Timestamp {
      label = "Wanted Delivery Date/Time";
      editable = [ETag != null];
   }
   attribute PlannedRentalStartDate Timestamp {
      fetch = "planned_rental_start_date";
      label = "Planned Rental Start Date";
   }
   attribute PlannedRentalEndDate Timestamp {
      fetch = "planned_rental_end_date";
      label = "Planned Rental End Date";
   }
   attribute InputUom Text {
      fetch = "Part_Gtin_Unit_Meas_API.Get_Unit_Code_For_Gtin14(gtin_no)";
      label = "Input UoM";
      maxlength = 2000;
      editable = [false];
   }
   attribute InputQty Number {
      editable = [ETag != null];
   }
   attribute InputConvFactor Text {
      fetch = "Input_Unit_Meas_API.Get_Conversion_Factor(Part_Catalog_API.Get_Input_Unit_Meas_Group_Id(Part_Gtin_Unit_Meas_API.Get_Part_Via_Identified_Gtin(gtin_no)), Part_Gtin_Unit_Meas_API.Get_Unit_Code_For_Gtin14(gtin_no))";
      label = "Input Conv Factor";
      maxlength = 2000;
      editable = [false];
   }
   attribute ErrorMessage Text {
      editable = [false];
   }
   attribute Notes Text {
      label = "Note";
      editable = [ETag != null];
   }
   attribute OrgChgStatus Text {
      fetch = "Order_Change_Line_State_API.Decode(ord_chg_state)";
      label = "Ord Chg State";
      editable = [false];
   }
   attribute ShipAddress1 Text {
      label = "Address 1";
   }
   attribute ShipAddress2 Text {
      label = "Address 2";
   }
   attribute ShipAddress3 Text {
      label = "Address 3";
   }
   attribute ShipAddress4 Text {
      label = "Address 4";
   }
   attribute ShipAddress5 Text {
      label = "Address 5";
   }
   attribute ShipAddress6 Text {
      label = "Address 6";
   }
   attribute ShipZipCode Text {
      label = "Zip Code";
   }
   attribute ShipCity Text {
      label = "City";
   }
   attribute ShipState Text {
      label = "State";
   }
   attribute ShipCounty Text {
      label = "County";
   }

   attribute DeliverToCustomerNo Text {
      label = "Deliver-to-Customer No";
   }
   attribute DeliveryTerms Text {
      format = uppercase;
   }
   attribute DeliveryTermsDesc Text {
      label = "Delivery Terms Description";
      editable = [ETag = null];
   }
   attribute DelTermsLocation Text {
      maxlength = 100;
   }
   attribute ShipViaCode Text {
      label = "Ship-Via Code";
      format = uppercase;
   }
   attribute ShipViaDesc Text {
      label = "Ship Via Description";
      editable = [ETag = null];
   }
   attribute ShipAddrNo Text {
      label = "Delivery Address";
   }
   attribute EanLocationDelAddr Text {
      label = "Cust Own Del Addr ID";
   }
   attribute PickingLeadtime Number {
      editable = [ETag = null];
   }
   attribute RouteId Text {
      maxlength = 36;
   }
   attribute DistrictCode Text {
      maxlength = 30;
   }
   attribute RegionCode Text {
      maxlength = 30;
   }
   attribute IntrastatExemptDb Boolean("TRUE", "FALSE") {
      fetch = "DECODE(intrastat_exempt_db, 'EXEMPT', 'TRUE', 'FALSE')";
      label = "Intrastat Exempt";
      editable = [false];
   }
   attribute ForwardAgentId Text {
      label = "Forwarder ID";
   }
   attribute Location Text {
      label = "To Location No";
   }
   attribute OriginalBuyQtyDue Number {
      label = "Original Sales Qty";
      editable = [false];
   }
   attribute OriginalPlanDelivDate Date {
      editable = [false];
   }
   attribute OriginalRentalStartDate Timestamp {
      fetch = "original_rental_start_date";
      label = "Original Planned Rental Start Date";
      editable = [false];
   }
   attribute OriginalRentalEndDate Timestamp {
      fetch = "original_rental_end_date";
      label = "Original Planned Rental End Date";
      editable = [false];
   }
   attribute SaleUnitPrice Number {
      label = "Original Sales Price";
      editable = [false];
      format = ifscurrency;
   }
   attribute Discount Number {
      label = "Original Discount";
      editable = [false];
   }
   attribute UnitPriceInclTax Number {
      label = "Original Sales Price Incl Tax";
      editable = [false];
      format = ifscurrency;
   }
   attribute CatalogDesc Text {
      label = "Original Customer Part Description";
      editable = [false];
   }
   attribute VendorPartDesc Text {
      label = "Original Sales Part Description";
      editable = [false];
   }
   attribute MessageId Number {
      editable = [false];
   }
   attribute VatNo Text {
      label = "Tax ID";
      editable = [false];
   }
   attribute VatFreeVatCode Text {
      label = "Tax Free Code";
   }
   attribute TaxCodeDescription Text {
      fetch = "Statutory_Fee_API.Get_Description(Site_API.Get_Company(Ext_Cust_Order_Change_API.Get_Contract(Message_Id)), vat_free_vat_code)";
      label = "Tax Code Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute TaxLiability Text {
      editable = [false];
   }
   attribute ClassificationStandard Text {
      maxlength = 25;
      editable = [false];
   }
   attribute CustCalendarId Text {
      label = "Customer Calendar";
      editable = [false];
   }
   attribute ExtTransportCalendarId Text {
      label = "External Transport Calendar";
   }
   attribute ClassificationPartNo Text {
      maxlength = 25;
      editable = [false];
   }
   attribute ClassificationUnitMeas Text {
      label = "Classification UoM";
      maxlength = 10;
      editable = [false];
   }
   attribute ShipmentCreation Enumeration(ShipmentCreation.CustomerOrder) {
      fetch = "Shipment_Creation_API.Encode(shipment_creation)";
      label = "Shipment Creation";
   }
   attribute HasConfiguration Number {
      fetch = "External_Cust_Order_Char_API.Has_Configuration(message_id, line_no, rel_no)";
      editable = [false];
   }
   attribute HasConfigurations Number {
      fetch = "Ext_Cust_Order_Char_Change_API.Has_Configuration(message_id, line_no, rel_no)";
      editable = [false];
   }
   reference ExtCustOrderChangeRef(MessageId) to ExtCustOrderChange(MessageId);
   reference CountryCodeRef(CountryCode) to IsoCountry(CountryCode) {
      label = "Country Code";
   }
   reference DeliveryTermsRef(DeliveryTerms) to OrderDeliveryTermLov(DeliveryTerms) {
      label = "Delivery Terms";
   }
   reference ShipViaCodeRef(ShipViaCode) to MpccomShipVia(ShipViaCode) {
      label = "Ship-Via Code";
   }
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Route ID";
   }
   reference DistrictCodeRef(DistrictCode) to SalesDistrict(DistrictCode) {
      label = "District Code";
   }
   reference RegionCodeRef(RegionCode) to SalesRegion(RegionCode) {
      label = "Region Code";
   }
   reference ShipmentTypeRef(ShipmentType) to ShipmentType(ShipmentType) {
      label = "Shipment Type";
   }
   reference ClassificationStandardRef(ClassificationStandard) to ClassificationStandard(ClassificationStandard) {
      label = "Classification Standard";
   }
   reference CustCalendarIdRef(CustCalendarId) to WorkTimeCalendar(CalendarId) {
      label = "Customer Calendar";
   }
   reference ExtTransportCalendarIdRef(ExtTransportCalendarId) to WorkTimeCalendar(CalendarId) {
      label = "External Transport Calendar";
   }

}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------


--------------------------------- FUNCTIONS ---------------------------------
function GetSalesmanName Text {
   parameter SalesmanCode Text;
}

function GetRouteDescription Text {
   parameter RouteId Text;
}

function GetExtTransportCalendarId Text {
   parameter ShipViaCode Text;
}

function ChangedAttributes Text {
   parameter MessageId Number;
}

function LineChangedAttributes Text {
   parameter MessageId Number;
   parameter MessageLine Number;
}
-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------
virtual ViewConfigurationInputVirtual {
   attribute RelNo Text;
   attribute LineNo Text;
   attribute MessageId Number;
   array ExternalCustOrderCharArray(MessageId, LineNo) to ExtCustOrderCharChange(MessageId, LineNo);
}
--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------


