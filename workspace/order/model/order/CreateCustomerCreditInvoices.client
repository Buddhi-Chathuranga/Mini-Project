--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2021-10-01  NiRalk  SC21R2-2867, Modified ViewRMALines to navigate to ReturnMaterialAuthorizationLines instead of
-- 2021-10-01          CustomerReturnMaterialAuthorizationLines.
-- 2019-05-31  RasDlk  SCUXXW4-21933, Removed the command button Customer Invoice and replaced it with the Details icon.
-- 2018-09-24  HpEtse  SCUXXW4-9770, Added badge colors on Order and Invoice State
-- 2018-05-28  HpEtse  SCUXXW4-9770, Added field ranking
-- 2018-05-04  RoJalk  SCUXXW4-9770, Converted from tbwCreateCreditInvoice using MTG Version: 1.16
--------------------------------------------------------------------------------------

client CreateCustomerCreditInvoices;
component ORDER;
layer Core;
projection CreateCustomerCreditInvoices;

------------------------------ NAVIGATOR ENTRY ------------------------------

navigator {
   entry CreateCustomerCreditInvoiceNavEntry parent OrderNavigator.SalesInvoicing at index 700 {
      label = "Create Customer Credit Invoices";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------

page List using CustomerOrderInvHeads {
   label = "Create Customer Credit Invoices";
   startupmode = search;
   list CreateCreditInvoiceList {
      details = "page/CustomerOrderInvoice/Form?$filter=Company eq $[Company] and InvoiceId eq $[InvoiceId]";
   }
}

--------------------------------- COMMANDS ----------------------------------

command CreateCreditInvoice for CustomerOrderInvHead {
   label = "Create Credit Invoice";
   mode = SelectedRecords;
   enabled = [true];
   variable SelectionVar {
      type = Text;
   }
   variable DebitInvHasInvFeeVar {
      type = Boolean;
   }
   variable AllowCreditInvFeeVar {
      type = Text;
   }
   variable ValidateInfoVar {
      type = Structure(ValidateInfoStruct);
   }
   variable UseDebitInvRateVar Number;

   bulkexecute {
      confirm("Do you want to create credit invoices for the selected invoices/orders?") {
         when OK {
            assistant CreateCustomerCreditInvoice(Selection) into(SelectionVar) {
               when OK {
                  if[SelectionVar != null] {
                     call GetValidateInfo(SelectionVar) into ValidateInfoVar;
                     set AllowCreditInvFeeVar = "FALSE";
                     if [ValidateInfoVar.DebitInvHasInvFee] {
                        inquire("Do you want to credit the invoice fee of the debit invoice as well?") {
                           when YES {
                              set AllowCreditInvFeeVar = "TRUE";
                           }
                        }
                     }
                     set UseDebitInvRateVar = 0;
                     if [ValidateInfoVar.NotBaseCurrency] {
                        inquire("Do you want to use the currency rate from the Debit Invoice? If Yes - the system will use the currency rate from the Debit Invoice.If No -  the system will use the currency rate valid for the Invoice Date.") {
                           when YES {
                              set UseDebitInvRateVar = 1;
                           }
                           when CANCEL {
                              exit CANCEL;
                           }
                        }

                     }
                     call CreateCreditInvoices(SelectionVar, UseDebitInvRateVar, AllowCreditInvFeeVar) {
                        when SUCCESS {
                           hideselection();
                        }
                        when FAIL {
                           error("${error.Message}");
                           exit;
                        }
                     }
                  }
               }
               when CANCEL {
                  exit CANCEL;
               }
            }
         }
      }
   }
}

command ViewRMALines for CustomerOrderInvHead {
   label = "View RMA Lines";
   mode = SelectedRecords;
   enabled = [RmaLines = "TRUE"];
   bulkexecute {
      bulknavigate "page/ReturnMaterialAuthorizationLines/List?$filter=OrderNo eq $[CreatorsReference]";
   }
}

----------------------------- VISUAL COMPONENTS -----------------------------

list CreateCreditInvoiceList for CustomerOrderInvHead {
   orderby = InvoiceId, CreatorsReference;
   lov SeriesIdRef with OrdInvoiceSeriesLovSelector;
   field InvoiceNo;
   field CreatorsReferenceRef;
   field OrderTypeRef;
   lov ContractRef with UserAllowedSiteLovSelector;
   field CustomerNo {
      contactwidget {
         enabled = [true];
         source = Customer;
      }
   }
   field CustomerName {
      size = Large;
   }
   field Currency;
   field GrossAmount;
   field InvoiceType;
   field InvoiceTypeDescription {
      size = Large;
   }
   field AdvancePrepaymInvoice;
   field Company;
   field CreditedAmount {
      searchable = false;
   }
   badge CustomerOrderInvoiceState {
      emphasis Progress1 = [CustomerOrderInvoiceState = "Preliminary"];
      emphasis Progress3 = [CustomerOrderInvoiceState = "Printed"];
      emphasis StateCancelled = [CustomerOrderInvoiceState = "Cancelled"];
      emphasis Progress5 = [CustomerOrderInvoiceState = "Posted"];
      emphasis Progress7 = [CustomerOrderInvoiceState = "PostedAuth"];
      emphasis Progress9 = [CustomerOrderInvoiceState = "PartlyPaidPosted"];
      emphasis Progress12 = [CustomerOrderInvoiceState = "PaidPosted"];
      style = TextOnly;
   }
   badge CustomerOrderRef.Objstate {
      label = "Order Status";
      emphasis Progress1 = [CustomerOrderRef.Objstate = "Planned"];
      emphasis Progress3 = [CustomerOrderRef.Objstate = "Released"];
      emphasis Progress5 = [CustomerOrderRef.Objstate = "Reserved"];
      emphasis Progress7 = [CustomerOrderRef.Objstate = "Picked"];
      emphasis Progress8 = [CustomerOrderRef.Objstate = "PartiallyDelivered"];
      emphasis Progress10 = [CustomerOrderRef.Objstate = "Delivered"];
      emphasis Progress12 = [CustomerOrderRef.Objstate = "Invoiced"];
      emphasis StateBlocked = [CustomerOrderRef.Objstate = "Blocked"];
      emphasis StateCancelled = [CustomerOrderRef.Objstate = "Cancelled"];
      style = TextOnly;
   }
   field Identity {
      contactwidget {
         enabled = [true];
         source = Customer;
      }
   }
   field Name {
      size = Large;
   }
   field InvoiceDate;

   fieldranking InvoiceNo, CreatorsReferenceRef, CustomerNo, CustomerName, GrossAmount, AdvancePrepaymInvoice, CreditedAmount, CustomerOrderInvoiceState, Identity, Name;

   commandgroup CommandGroup {

      command CreateCreditInvoice;
      command ViewRMALines;
   }
}

assistant CreateCustomerCreditInvoice using CreateCustomerCreditInvoiceVirtuals {
   label = "";
   input(Selection);
   output(Selection);

   steps {
      step {
         markdowntext {
            text = "Some of the selected invoices get below warnings. Choose how you want to proceed.";
         }
         list CreateCustomerCreditInvoiceWarningList(Warnings) {
            label = "Warnings";
         }
      }
      final step {
      }
   }
   finish command {
      execute {
         call Finish() into SelectionListVar;
         set Selection = SelectionListVar;
         exit OK;
      }
   }
   cancel command {
      execute {
         exit CANCEL;
      }
   }
}

list CreateCustomerCreditInvoiceWarningList for CreateCustomerCreditInvoiceWarningVirtual {
   editmode = SingleCellEdit;

   field Company {
      size = Small;
   }
   field InvoiceNo;
   field Warning {
      size = Large;
   }
   field Answer {
      label = "Proceed";
      size = Small;
   }
}

---------------------------- GENERATED FROM APF -----------------------------




