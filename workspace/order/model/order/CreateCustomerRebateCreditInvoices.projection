------------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -------------------------------------------------------------------------------------
-- 2018-05-25  HpEtse  SCUXXW4-9775, Added category
-- 2018-05-07  KHVESE  SCUXXW4-9775, Converted from tbwCreateCustomerRebateCreditInv using MTG Version: 1.16
------------------------------------------------------------------------------------------------------------

projection CreateCustomerRebateCreditInvoices;
component ORDER;
layer Core;
description "Use this API to create rebate credit invoices. Once the rebate transactions are settled, rebate credit invoices can be created based on them.";
category Users;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset RebateTransAggUtils for RebateTransAggUtil;

------------------------------ ENTITY DETAILS -------------------------------

----------------------------------- QUERY -----------------------------------

@Override
query RebateTransAggUtil {
   from = "rebate_settlement_heads";
   keys = AggregationNo, FinalSettlement {
      where = "AGGREGATION_NO = :AggregationNo AND FINAL_SETTLEMENT = :FinalSettlement";
   }
   where = "INVOICE_ID IS NULL AND DO_NOT_INVOICE_DB = 'FALSE' AND TOTAL_REBATE_AMOUNT > 0";
   attribute Company Text {
      fetch = "COMPANY";
      label = "Company";
      maxlength = 20;
      required = [true];
      format = uppercase;
   }
   attribute AggregationNo Number {
      fetch = "AGGREGATION_NO";
      label = "Settlement";
      required = [true];
      editable = [ETag = null];
   }
   attribute CustomerNo Text {
      fetch = "CUSTOMER_NO";
      label = "Customer No";
      maxlength = 20;
      required = [true];
      format = uppercase;
   }
   attribute CustomerName Text {
      fetch = "CUSTOMER_NAME";
      label = "Customer Name";
      maxlength = 100;
      required = [true];
      // searchable = false;
   }
   attribute FromDate Date {
      fetch = "FROM_DATE";
      label = "From Date";
      required = [true];
   }
   attribute ToDate Date {
      fetch = "TO_DATE";
      label = "To Date";
      required = [true];
   }
   attribute AgreementId Text {
      fetch = "AGREEMENT_ID";
      label = "Agreement";
      maxlength = 10;
      required = [true];
      format = uppercase;
   }
   attribute AgreementDescription Text {
      fetch = "AGREEMENT_DESCRIPTION";
      label = "Agreement Description";
      maxlength = 100;
      required = [true];
      // searchable = false;
   }
   attribute HierarchyId Text {
      fetch = "HIERARCHY_ID";
      label = "Hierarchy";
      maxlength = 10;
      required = [true];
      format = uppercase;
   }
   attribute HierarchyDescription Text {
      fetch = "HIERARCHY_DESCRIPTION";
      label = "Hierarchy Description";
      maxlength = 100;
      required = [true];
      // searchable = false;
   }
   attribute CustomerLevel Number {
      fetch = "CUSTOMER_LEVEL";
      label = "Level";
      required = [true];
   }
   attribute LevelName Text {
      fetch = "LEVEL_NAME";
      label = "Hierarchy Level Name";
      maxlength = 100;
      required = [true];
      // searchable = false;
   }
   attribute TotalRebateAmount Number {
      fetch = "TOTAL_REBATE_AMOUNT";
      label = "Total Rebate Amt/Base";
      editable = [false];
      format = ifscurrency;
   }
   attribute CurrencyCode Text {
      fetch = "CURRENCY_CODE";
      label = "Base Currency";
      maxlength = 100;
      editable = [false];
      format = uppercase;
   }
   attribute FinalSettlement Boolean("TRUE", "FALSE") {
      fetch = "FINAL_SETTLEMENT";
      label = "Final";
   }
   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Base Currency";
   }
}

--------------------------------- FUNCTION ----------------------------------
action StartCreateRebateCreditInvoice {
   initialcheck RebateSettlementHeadsInitialCheck(AggregationNo, FinalSettlement);
   parameter AggregationNo    Number;
   parameter FinalSettlement  Boolean;
   parameter StartEvent       Number;
}

function CheckMultipleTaxInAggrLines Text {
   parameter Selection Text;
}

---------------------------------- ACTION -----------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------


