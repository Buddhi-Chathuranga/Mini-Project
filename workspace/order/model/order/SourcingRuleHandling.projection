--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-05-27  MaEelk  SCUXXW4-21322, Added key attribute to SourcingRuleUsage.
-- 2019-04-17  MaEelk  SCUXXW4-18538, Added WHERE clause to VendorNumbers.
-- 2019-03-29  MaEelk  SCUXXW4-18242, Added Dynamic Component Dependency to SupplySiteRef
-- 2019-03-12  Kubalk  SCUXXW4-17259, Dependency annotations added.
-- 2018-04-24  MaEelk  SCUXXW4-9542, Converted frmSourcingRule and tbwSourcingAlternative using MTG Version 1.16
-- 2018-04-19  IzShlk  SCUXXW4-1596, Converted from tbwSourceRuleWhereUsed using MTG Version: 1.16
--------------------------------------------------------------------------------------

projection SourcingRuleHandling;
component ORDER;
layer Core;
description "Use this API to enter different sourcing rules. These rules are connected to sales parts and used for automatic sourcing on customer order lines.";
category Users;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset SourcingRules for SourcingRule;

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity SourcingRule {
   attribute RuleId Text {
      maxlength = 100;
   }
   array SourcingAlternatives(RuleId) to SourcingAlternative(RuleId);
   array SourcingObjectives(RuleId) to SourcingObjective(RuleId);
   array SourcingRuleUsages(RuleId) to SourcingRuleUsage(RuleId);
}

@Override
entity SourcingAlternative {
   attribute SupplierSelection Enumeration(SourcingSuppSelection) {
      label = "Supplier Selection Method";
   }
   attribute VendorNo Text {
      label = "Supplier No";
   }
   @DynamicComponentDependency PURCH
   attribute SupplierName Text {
      fetch = "Supplier_API.Get_Vendor_Name(VENDOR_NO)";
      label = "Supplier Name";
   }
   @DynamicComponentDependency PURCH
   attribute SupplySite Text {
      fetch = "Supplier_API.Get_Acquisition_Site(VENDOR_NO)";
      label = "Supply Site";
   }
   @DynamicComponentDependency PURCH
   reference VendorNoRef(VendorNo) to Supplier(VendorNo) {
      label = "Supplier";
      copy AcquisitionSite to SupplySite;

   }
   @DynamicComponentDependency PURCH
   reference SupplySiteRef(SupplySite) to Site(Contract) {
      label = "Supply Site";
   }

}

@Override
entity SourcingObjective {
   keys = SequenceNo, RuleId {
      where = "SEQUENCE_NO = :SequenceNo and RULE_ID = :RuleId";
   }
   attribute SourcingCriterion Enumeration(SourcingCriterion) {
      label = "Criterion";
   }
}

query SourcingRuleUsage {
   from = "sourcing_rule_usages";
   lu = SourcingRule;
   keys = RuleId, NewKey;

   attribute RuleId Text {
      label = "Sales Sourcing Rule";
   }
   attribute CatalogNo Text {
      fetch = "CATALOG_NO";
      label = "Sales Part";
      format = uppercase;
   }
   attribute CatalogDesc Text {
      fetch = "CATALOG_DESC";
      label = "Description";
   }
   attribute CustomerNo Text {
      fetch = "CUSTOMER_NO";
      label = "Customer No";
      format = uppercase;
   }
   attribute AddrNo Text {
      fetch = "ADDR_NO";
      label = "Delivery Address";
   }
   attribute PartNo Text {
      fetch = "PART_NO";
      label = "Inventory Part";
      format = uppercase;
   }
   attribute Contract Text {
      fetch = "CONTRACT";
      label = "Site";
      format = uppercase;
   }
   attribute NewKey Text {
      fetch = "RULE_ID || CATALOG_NO || CONTRACT || CUSTOMER_NO || ADDR_NO";
   }
}

@Override
enumeration OrderSupplyType {
   enumerationtype = Standard;
   exec = "Order_Supply_Type_API";
   value = "IO" {
      identifier = "InventOrder";
      label = "Invent Order";
   }
   value = "SO" {
      identifier = "ShopOrder";
      label = "Shop Order";
   }
   value = "PT" {
      identifier = "PurchOrderTrans";
      label = "Purch Order Trans";
   }
   value = "PD" {
      identifier = "PurchOrderDir";
      label = "Purch Order Dir";
   }
   value = "IPT" {
      identifier = "IntPurchTrans";
      label = "Int Purch Trans";
   }
   value = "IPD" {
      identifier = "IntPurchDir";
      label = "Int Purch Dir";
   }
   value = "CRE" {
      identifier = "ComponentRepairExchange";
      label = "Component Repair Exchange";
   }
   value = "RCO" {
      identifier = "ReplacementCustomerOrder";
      label = "Replacement Customer Order";
   }
   value = "RPO" {
      identifier = "ReplacementPurchaseOrder";
      label = "Replacement Purchase Order";
   }
   value = "IPT_RO" {
      identifier = "IntPurchReplacementOrder";
      label = "Int Purch Replacement Order";
   }
   value = "PM" {
      identifier = "Pm";
      label = "PM Action";
   }
   value = "PJD" {
      identifier = "ProjectDeliverables";
      label = "Project Deliverables";
   }
   value = "EST" {
      identifier = "CostEstimation";
      label = "Estimate";
   }
   value = "FSM" {
      identifier = "FieldServiceManagement";
      label = "Field Service Management";
   }
   value = "DP" {
      identifier = "DemandPlan";
      label = "Demand Plan";
   }
}

--------------------------------- FUNCTIONS ---------------------------------
@DynamicComponentDependency PURCH
function VendorName Text {
   parameter VendorNo Text;
}

@DynamicComponentDependency PURCH
function VendorNumbers List<Entity(Supplier)> {
   parameter SupplyCode Enumeration(OrderSupplyType);
   where = ":SupplyCode IN ('PT','PD','IPT','IPD') AND category_db = CASE(:SupplyCode)
                                                                     WHEN 'PT' THEN 'E'
                                                                     WHEN 'PD' THEN 'E'
                                                                     ELSE 'I'
                                                                     END";
}
