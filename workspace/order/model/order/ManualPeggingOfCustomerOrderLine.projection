--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-03-12  Kubalk  SCUXXW4-17243, Dependency annotations added.
-- 2018-08-20  MalLlk  SCUXXW4-9252, Converted from frmManualPeg, tbwPurchOrdManualPeg
-- 2018-08-20          and tbwShopOrdManualPeg using MTG Version: 1.26
--------------------------------------------------------------------------------------

projection ManualPeggingOfCustomerOrderLine;
component ORDER;
layer Core;
description "This API is used to perform manual pegging of customer order lines. This API provides the relevant customer order line information,
including the quantity that has already been pegged and the quantity that can be pegged to the customer order line. Quantities can be pegged
from purchase orders or shop orders using the Purch Order tab or the Shop Order tab.";
category Users;
include fragment IntorderPartAlternateLovSelector;
include fragment CoChargeJoinSelector;
include fragment UserAllowedSiteLovSelector;


----------------------------- MAIN ENTRY POINTS -----------------------------
entityset CustomerOrderLineSet for CustomerOrderLine;
@DynamicComponentDependency PURCH
entityset PurchaseOrderLinePartSet for PurchaseOrderLinePart;
@DynamicComponentDependency SHPORD
entityset ShopOrdSet for ShopOrd;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity CustomerOrderLine {
   crud = Read;

   where = "supply_code_db = 'IO' AND part_no IS NOT NULL AND objstate NOT IN ('Cancelled', 'Delivered', 'Invoiced')";

   supportwarnings = [true];
   attribute OrderNo Text {
      maxlength = 100;
      editable = [false];
   }
   attribute LineNo Text {
      editable = [false];
   }
   attribute RelNo Text {
      label = "Del No";
      editable = [false];
   }
   attribute Contract Text {
      editable = [false];
   }
   attribute PartNo Text {
      label = "Inventory Part";
      editable = [false];
   }
   attribute Description Text {
      fetch = "Inventory_Part_API.Get_Description(contract, part_no)";
      label = "Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute PlannedDeliveryDate Timestamp {
      editable = [ETag != null];
   }
   attribute PromisedDeliveryDate Timestamp {
      editable = [false];
   }
   attribute PlannedShipDate Timestamp {
      label = "Planned Ship Date/Time";
      editable = [false];
   }
   attribute CustomerName Text {
      fetch = "Cust_Ord_Customer_API.Get_Name(customer_no)";
      label = "Customer Name";
      maxlength = 2000;
      editable = [false];
   }
   attribute ConfigurationId Text {
      editable = [false];
   }
   attribute ConditionCode Text {
      editable = [false];
   }
   attribute RevisedQtyDue Number {
      label = "Inventory Qty";
      editable = [ETag != null];
   }
   attribute QtyOnOrder Number {
      label = "Pegged Qty";
      editable = [false];
   }
   attribute RemainingQtyToPeg Number {
      fetch = "revised_qty_due -(qty_on_order + qty_assigned + qty_shipped)";
      label = "Remaining Qty to Peg";
      editable = [false];
   }
   attribute InvUom Text {
      fetch = "Sales_Part_API.Get_Unit_Meas(contract, catalog_no)";
      label = "Inv UoM";
      maxlength = 2000;
      editable = [false];
   }
   attribute PartOwnership Enumeration(PartOwnership) {
      label = "Ownership";
      editable = [false];
   }
   attribute PartOwnershipDb Text;
   attribute Owner Text {
      fetch = "Customer_Order_Line_API.Get_Owner_For_Part_Ownership(order_no, line_no, rel_no, line_item_no, part_ownership_db)";
      label = "Owner";
      maxlength = 2000;
      editable = [false];
   }
   attribute OwningCustomerName Text {
      fetch = "Cust_Ord_Customer_API.Get_Name(owning_customer_no)";
      label = "Owning Customer Name";
      maxlength = 2000;
      editable = [false];
   }
   attribute LineItemNo Number {
      editable = [false];
   }
   attribute SupplyCodeDb Text {
      fetch = "supply_code_db";
      maxlength = 3;
      editable = [false];
   }
   attribute RentalDb Text {
      fetch = "rental_db";
      maxlength = 5;
      editable = [false];
   }
   attribute DemandCodeDb Text {
      fetch = "demand_code_db";
      maxlength = 3;
      editable = [false];
   }
   attribute POExist Number {
      fetch = "Customer_Order_Pur_Order_API.Get_Connected_Peggings(order_no, line_no, rel_no, line_item_no)";
      editable = [false];
   }
   attribute SOExist Number {
      fetch = "Customer_Order_Shop_Order_API.Get_Connected_Peggings(order_no, line_no, rel_no, line_item_no)";
      editable = [false];
   }
   reference InventoryPartRef(Contract, PartNo) to InventoryPart(Contract, PartNo);
   reference OrderNoRef(OrderNo) to CoChargeJoin(OrderNo) {
      label = "Order No";
   }
   reference PartNoRef(Contract, PartNo) to IntorderPartAlternateLov(Contract, PartNo) {
      label = "Inventory Part";
   }
   @DynamicComponentDependency CFGCHR
   reference ConfigurationIdRef(PartNo, ConfigurationId) to ConfigurationSpec(PartNo, ConfigurationId) {
      label = "Configuration ID";
   }
   reference ConditionCodeRef(ConditionCode) to ConditionCode(ConditionCode) {
      label = "Condition Code";
   }
}

@Override
@DynamicComponentDependency PURCH
entity PurchaseOrderLinePart {
   crud = Read, Update;

   attribute PeggedQty Number {
      fetch = "1";
      label = "Pegged Qty";
      editable = [true];
   }
   attribute OldPeggedQty Number {
      fetch = "1";
      editable = [false];
      updatable = [false];
   }
   attribute AvailableQtyToPeg Number {
      fetch = "Purchase_Order_Line_Part_API.Get_Due_In_Stores(order_no,line_no,release_no) - qty_on_order";
      label = "Available Qty to Peg";
      editable = [false];
      updatable = [false];
   }
   attribute QtyOnOrder Number {
      label = "Total Pegged Qty";
      maxlength = 0;
      editable = [false];
      updatable = [false];

   }
   attribute RevisedQty Number {
      label = "Qty";
      maxlength = 0;
      editable = [false];
   }
   attribute PartNo Text {
      editable = [false];
   }
   attribute Contract Text {
      editable = [false];
   }
   attribute DemandCodeDb Text {
      fetch = "DEMAND_CODE_DB";
      label = "Demand code";
      maxlength = 3;
   }
   attribute ConditionCode Text {
      editable = [false];
   }
   attribute ConfigurationId Text {
      editable = [false];
   }
   attribute PlannedDeliveryDate Timestamp {
      editable = [false];
   }
   attribute PlannedReceiptDate Timestamp {
      editable = [false];
   }
   attribute PartOwnership Enumeration(PartOwnership) {
      label = "Ownership";
      editable = [false];
   }
   attribute Owner Text {
      fetch = "DECODE(part_ownership_db, 'CUSTOMER OWNED', owning_customer_no, 'CONSIGNMENT', Purchase_Order_API.Get_Vendor_No(order_no), 'SUPPLIER LOANED', Purchase_Order_API.Get_Vendor_No(order_no), 'SUPPLIER RENTED', Purchase_Order_API.Get_Vendor_No(order_no) )";
      label = "Owner";
      maxlength = 2000;
      editable = [false];
      format = uppercase;
   }
   attribute OwningCustomerName Text {
      fetch = "Cust_Ord_Customer_API.Get_Name(owning_customer_no)";
      label = "Owning Customer Name";
      maxlength = 2000;
      editable = [false];
      format = uppercase;
   }
   attribute EngChgLevel Text {
      label = "Revision No";
      editable = [false];
   }
   attribute CoOrderNo Text {
      fetch = "1";
   }
   attribute CoLineNo Text {
      fetch = "1";
   }
   attribute CoRelNo Text {
      fetch = "1";
   }
   attribute CoLineItemNo Number {
      fetch = "1";
   }
   reference OrderNoRef(OrderNo) to PurchaseOrder(OrderNo) {
      label = "Order No";
   }
   reference PartNoRef(Contract, PartNo) to PurchasePart(Contract, PartNo) {
      label = "Part No";
   }
   reference ContractRef(Contract) to Site(Contract) {
      label = "Site";
   }
   @DynamicComponentDependency CFGCHR
   reference ConfigurationIdRef(PartNo, ConfigurationId) to ConfigurationSpec(PartNo, ConfigurationId) {
      label = "Configuration ID";
   }

   action CreatePOPegging {
      parameter CoOrderNo Text;
      parameter CoLineNo Text;
      parameter CoRelNo Text;
      parameter CoLineItemNo Number;
      parameter PeggedQty Number;

      ludependencies = CustomerOrderLine;
   }
}

@Override
@DynamicComponentDependency SHPORD
entity ShopOrd {
   crud = Read, Update;
   from = "shop_ord_pub";

   attribute Contract Text {
      editable = [false];
   }
   attribute PeggedQty Number {
      fetch = "1";
      label = "Pegged Qty";
   }
   attribute OldPeggedQty Number {
      fetch = "1";
      updatable = [false];
   }
   attribute AvailableQtyToPeg Number {
      fetch = "Shop_Ord_API.Get_Qty_To_Peg(order_no, release_no, sequence_no)";
      label = "Available Qty to Peg";
      editable = [false];
      updatable = [false];
   }
   attribute QtyOnOrder Number {
      label = "Total Pegged";
      maxlength = 12;
      editable = [false];
      updatable = [false];
   }
   attribute RevisedQtyDue Number {
      label = "Lot Size";
      maxlength = 12;
      editable = [false];
   }
   attribute OrderNo Text {
      required = [true];
   }
   attribute RevisedDueDate Timestamp {
      label = "Finish Date";
      editable = [false];
   }
   attribute PartOwnership Enumeration(PartOwnership) {
      label = "Ownership";
      editable = [false];
   }
   attribute OwningCustomerNo Text {
      label = "Owner";
      editable = [false];
   }
   attribute OwningCustomerName Text {
      fetch = "Cust_Ord_Customer_API.Get_Name(owning_customer_no)";
      label = "Owning Customer Name";
      maxlength = 2000;
      editable = [false];
      format = uppercase;
   }
   attribute EngChgLevel Text {
      editable = [false];
   }
   attribute CoOrderNo Text {
      fetch = "1";
   }
   attribute CoLineNo Text {
      fetch = "1";
   }
   attribute CoRelNo Text {
      fetch = "1";
   }
   attribute CoLineItemNo Number {
      fetch = "1";
   }
   reference ShopOrdRef(OrderNo, ReleaseNo, SequenceNo) to ShopOrd(OrderNo, ReleaseNo, SequenceNo);
   reference PartNoRef(Contract, PartNo) to IntorderPartAlternateLov(Contract, PartNo) {
      label = "Part No";
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference ConditionCodeRef(ConditionCode) to ConditionCode(ConditionCode) {
      label = "Condition Code";
   }
   @DynamicComponentDependency CFGCHR
   reference ConfigurationIdRef(PartNo, ConfigurationId) to ConfigurationSpec(PartNo, ConfigurationId) {
      label = "Configuration ID";
   }

   action CreateSOPegging {
      parameter CoOrderNo Text;
      parameter CoLineNo Text;
      parameter CoRelNo Text;
      parameter CoLineItemNo Number;
      parameter PeggedQty Number;

      ludependencies = CustomerOrderLine;
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

@DynamicComponentDependency PURCH
function FetchPurchOrdManualPegLines List<Entity(PurchaseOrderLinePart)> {
   parameter OrderNo Text;
   parameter LineNo Text;
   parameter RelNo Text;
   parameter LineItemNo Number;
   parameter Contract Text;
   parameter PartNo Text;
   parameter ConfigurationId Text;
   parameter ConditionCode Text;
   parameter SupplyCodeDb Text;
   parameter PartOwnershipDb Text;
   parameter Owner Text;
   parameter RentalDb Text;


   alterattribute PeggedQty {
      fetch = "Customer_Order_Pur_Order_API.Get_Qty_On_Order(:OrderNo, :LineNo, :RelNo, :LineItemNo, order_no, line_no, release_no)";
   }
   alterattribute OldPeggedQty {
      fetch = "Customer_Order_Pur_Order_API.Get_Qty_On_Order(:OrderNo, :LineNo, :RelNo, :LineItemNo, order_no, line_no, release_no)";
   }
   alterattribute CoOrderNo {
      fetch = ":OrderNo";
   }
   alterattribute CoLineNo {
      fetch = ":LineNo";
   }
   alterattribute CoRelNo {
      fetch = ":RelNo";
   }
   alterattribute CoLineItemNo {
      fetch = ":LineItemNo";
   }

   where = " contract         = :Contract
      AND    part_no          = :PartNo
      AND    configuration_id = :ConfigurationId
      AND    rental_db        = :RentalDb
      AND    part_no          IS NOT NULL
      AND    objstate NOT IN ('Cancelled', 'Closed')
      AND    ((:ConditionCode IS NULL AND condition_code IS NULL)
              OR (:ConditionCode IS NOT NULL AND condition_code = :ConditionCode))
      AND    ((:SupplyCodeDb = 'RCO' AND demand_code_db IN ('IO', 'RPO'))
              OR (:SupplyCodeDb != 'RCO' AND demand_code_db = 'IO'))
      AND    ((:PartOwnershipDb = 'COMPANY OWNED' AND part_ownership_db IN ('COMPANY OWNED', 'CONSIGNMENT'))
              OR (:PartOwnershipDb = 'CUSTOMER OWNED' AND part_ownership_db = :PartOwnershipDb AND (:Owner IS NULL OR owning_customer_no = :Owner))
              OR (:PartOwnershipDb = 'SUPPLIER LOANED' AND part_ownership_db = :PartOwnershipDb AND (:Owner IS NULL OR Purchase_Order_API.Get_Vendor_No(:OrderNo) = :Owner))
              OR (:PartOwnershipDb IN ('SUPPLIER RENTED', 'COMPANY RENTAL ASSET') AND part_ownership_db = 'SUPPLIER RENTED'))";

   basedon PurchaseOrderLinePartSet;
}

@DynamicComponentDependency SHPORD
function FetchShopOrdManualPegLines List<Entity(ShopOrd)> {
   parameter OrderNo Text;
   parameter LineNo Text;
   parameter RelNo Text;
   parameter LineItemNo Number;
   parameter Contract Text;
   parameter PartNo Text;
   parameter ConfigurationId Text;
   parameter ConditionCode Text;
   parameter PartOwnershipDb Text;
   parameter Owner Text;

   alterattribute PeggedQty {
      fetch = "Customer_Order_Shop_Order_API.Get_Qty_On_Order(:OrderNo, :LineNo, :RelNo, :LineItemNo, order_no, release_no, sequence_no)";
   }
   alterattribute OldPeggedQty {
      fetch = "Customer_Order_Shop_Order_API.Get_Qty_On_Order(:OrderNo, :LineNo, :RelNo, :LineItemNo, order_no, release_no, sequence_no)";
   }
   alterattribute CoOrderNo {
      fetch = ":OrderNo";
   }
   alterattribute CoLineNo {
      fetch = ":LineNo";
   }
   alterattribute CoRelNo {
      fetch = ":RelNo";
   }
   alterattribute CoLineItemNo {
      fetch = ":LineItemNo";
   }

   where = "EXISTS (SELECT 1 FROM user_allowed_site_pub u WHERE u.site = contract)
            AND   contract         = :Contract
            AND   part_no          = :PartNo
            AND   configuration_id = :ConfigurationId
            AND   demand_code_db   = 'IO'
            AND   objstate NOT IN ('Cancelled', 'Closed')
            AND   ((:ConditionCode IS NULL AND condition_code IS NULL)
                   OR (:ConditionCode IS NOT NULL AND condition_code = :ConditionCode))
            AND   ((:PartOwnershipDb = 'CUSTOMER OWNED' AND part_ownership_db = :PartOwnershipDb AND (:Owner IS NULL OR owning_customer_no = :Owner))
                   OR (:PartOwnershipDb != 'CUSTOMER OWNED' AND part_ownership_db = :PartOwnershipDb AND include_as_supply_db = 'TRUE'))";

   basedon ShopOrdSet;
}


-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------
