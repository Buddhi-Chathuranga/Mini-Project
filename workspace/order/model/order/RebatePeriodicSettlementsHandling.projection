--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-06-22  MaEelk  SCUXXW4-1331, Converted frmSourcingRule and tbwRebatePeriodicSettlement using MTG Version 1.22
--------------------------------------------------------------------------------------
projection RebatePeriodicSettlementsHandling;
component ORDER;
layer Core;
description "Use this API to view all aggregated, periodic settlement details.";
category Users;
include fragment CustOrdCust2Selector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset RebatePeriodicAggHeadSet for RebatePeriodicAggHead {
   context Company(Company);
}

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity RebatePeriodicAggHead {
   crud = Read, Update;
   attribute AggregationNo Number {
      label = "Settlement";
      required = [true];
   }
   attribute TotalPeriodicRebateAmtCurr Number {
      fetch = "REBATE_PERIODIC_AGG_HEAD_API.Get_Total_Rebate_Amt(AGGREGATION_NO)";
      label = "Total Periodic Rebate Amt/Curr";
      editable = [false];
      format = ifscurrency;
   }
   attribute FromDate Date {
      editable = [ETag = null];
   }
   attribute ToDate Date {
      editable = [ETag = null];
   }
   attribute AgreementId Text {
      label = "Agreement";
      editable = [ETag = null];
   }
   attribute Invoiced Boolean("TRUE", "FALSE") {
      fetch = "REBATE_PERIODIC_AGG_HEAD_API.Get_Invoiced(AGGREGATION_NO)";
      label = "Invoiced";
      editable = [false];
      required = [true];

   }
   attribute DoNotInvoiceDb Boolean("TRUE", "FALSE") {
      fetch = "DO_NOT_INVOICE_DB";
      label = "Do Not Invoice";
      required = [true];
   }
   attribute Company Text {
      editable = [ETag = null];
   }
   reference RebateAgreementRef(AgreementId) to RebateAgreement(AgreementId);
   reference CustomerNoRef(CustomerNo) to CustOrdCust2(CustomerNo) {
      label = "Customer No";
   }
   reference HierarchyIdRef(HierarchyId) to CustomerHierarchy(HierarchyId);
   reference CustomerLevelRef(HierarchyId, CustomerLevel) to CustomerHierarchyLevel(HierarchyId, CustomerLevel);

}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

