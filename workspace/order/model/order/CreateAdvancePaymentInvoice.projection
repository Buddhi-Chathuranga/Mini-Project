--------------------------------------------------------------------------------------
-- Date        Sign     History
-- ----------  ------   --------------------------------------------------------------
-- 2021-12-10  NiDalk   Bug 161670(SC21R2-6164), Modified Check_Order_Tax_Combination___ to consider delivery type as well.
-- 2021-07-01  ApWilk   SC2020R1-13070, Added the action UpdateInvoiceText().
-- 2021-04-30  Skanlk   Bug 158631(SCZ-14565), Added new function Get_Tax_Percentage to retrieve tax percentage to enable the done button in the Create Advance Invoice window.
-- 2020-10-22  RaVdlk   SC2020R1-10512, Reverted the earlier correction and added the CreateAndPrintInvoice method
-- 2020-10-13  RaVdlk   SC2020R1-10512, Added the parameter PrintInvoice to PopulateTableAndUpdateAmounts method
-- 2019-08-17  MalLlk   SCUXXW4-22978, Supporting to move fragment CreateAdvancePaymentInvoiceAssistant to a seperate projection
-- 2019-08-17           and renamed the projection ManageAdvancePaymentInvoiceAssistant to CreateAdvancePaymentInvoice.
-- 2018-09-05  JeLise   SCUXXW4-8302, Converted from dlgCreateAdvancePaymentInvoice using MTG Version: 1.27
--------------------------------------------------------------------------------------

projection CreateAdvancePaymentInvoice;
component ORDER;
layer Core;
description "Use this fragment to create an advance payment invoice before the delivery has been made. This invoice does not contain any
             of the ordered goods or services, but is merely a request for the payment. It is possible to create several advance
             invoices for the same customer order. Since it is not a real delivery, customer order statistics will not reflect any
             of these invoices or payments.";
category Users;

--------------------------------- FRAGMENTS ---------------------------------
include fragment TaxCalcStructureActiveSelector;
include fragment TaxCodeRestrictedSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset CreateAdvancePaymentInvoiceSet for CreateAdvancePaymentInvoiceVirtual;

--------------------------------- VIRTUALS ----------------------------------
virtual CreateAdvancePaymentInvoiceVirtual {
   attribute OrderNo Text;
   attribute InvoicingCustomer Text;
   attribute InvoiceCustomerName Text;
   attribute CustomerNo Text;
   attribute CustomerName Text;
   attribute WantedDeliveryDate Date;
   attribute CurrencyCode Text;
   attribute CurrencyRounding Number;
   attribute PayTermBaseDate Date;
   attribute PayTermId Text;
   attribute PayTermDescription Text;
   attribute Contract Text;
   attribute TotalSalesCharge Number {
      format = ifscurrency;
   }
   attribute OrderSalesChargeTax Number {
      format = ifscurrency;
   }
   attribute BaseForAdvInvoice Text;
   attribute BaseForAdvInvoiceDb Text;
   attribute BaseForAdvInvoiceGross Boolean;
   attribute DefTaxCode Text;
   attribute OrderInvoicedGross Number {
      format = ifscurrency;
   }
   attribute ShipAddrNo Text;
   attribute SupplyCountryDb Text;
   attribute SiteDate Date;
   attribute InvoicedNetAmount Number {
      format = ifscurrency;
   }
   attribute InvoicedGrossAmount Number {
      format = ifscurrency;
   }
   attribute TotalSalesChargeGross Number {
      format = ifscurrency;
   }
   attribute TaxLiabilityTypeDb Text;
   attribute OrderAmount Number {
      format = ifscurrency;
   }
   attribute MaxAllowedAmtAdvInv Number {
      format = ifscurrency;
   }
   attribute MaxAmtAdvInvPercentage Number;
   attribute AdvanceInvoiceAmount Number {
      format = ifscurrency;
   }
   attribute InvoiceNetPercentage Number;
   attribute AdvanceInvoiceGrossAmount Number {
      format = ifscurrency;
   }
   attribute InvoiceGrossPercentage Number;
   attribute InvoiceText Text;
   attribute DueDate Date;
   attribute ApplyTax Boolean;
   attribute TaxCalcStructureId Text;
   attribute TaxCalcStrDescription Text;
   attribute Company Text;
   attribute OrderTotalNet Number {
      format = ifscurrency;
   }
   attribute OrderTotalGross Number {
      format = ifscurrency;
   }
   attribute OrderTotalNetCharge Number {
      format = ifscurrency;
   }
   attribute OrderTotalGrossCharge Number {
      format = ifscurrency;
   }
   attribute TotalAdvanceNet Number {
      format = ifscurrency;
   }
   attribute TotalAdvanceGross Number {
      format = ifscurrency;
   }
   attribute LineLevelTaxRounding Text;
   attribute TaxEdited Boolean;
   attribute TaxStructureEdited Boolean;
   attribute SameTaxCombination Text;
   attribute StructureWithGross Boolean;
   attribute WithCharges Text;
   attribute PrintInvoice Boolean {
      required = [true];
   }
   attribute TotalInvoiceAmount Number;

   reference OrderNoRef(OrderNo) to CreateAdvancePaymentInvoiceVirtual(OrderNo) {
      label = "Order No";
   }
   reference PayTermIdRef(Company, PayTermId) to PaymentTerm(Company, PayTermId) {
      label = "Payment Terms";
   }
   reference TaxCalcStructureRef(Company, TaxCalcStructureId) to TaxCalcStructureActive(Company, TaxCalcStructureId) {
      label = "Tax Calc Structure";
   }

   array TaxLinesArray() to TaxLinesVirtual();
}

virtual TaxLinesVirtual {
   attribute Company Text;
   attribute TaxBaseAmount Number;
   attribute TaxCode Text {
      editable = [true];
      required = [true];
   }
   attribute TaxPercentage Number;
   attribute TaxCurrAmount Number;
   attribute TaxCalcStructId Text {
      editable = [false];
   }
   attribute TaxCalcStructDescription Text;
   attribute TaxCalcStructureItemId Text;

   reference TaxCodeRef(Company, TaxCode) to TaxCodeRestricted(Company, FeeCode) {
      label = "Tax Code";
   }
}

---------------------------------- ACTIONS ----------------------------------
action PopulateTableAndUpdateAmounts {
   initialcheck none;
   ludependencies = TaxLinesVirtual, CreateAdvancePaymentInvoiceVirtual;
   supportwarnings = [true];
   parameter Objkey Text;
   parameter TaxEdited Boolean;
   parameter TaxStructureEdited Boolean;
   parameter AdvanceInvoiceAmount Number;
   parameter InvoiceNetPercentage Number;
   parameter AdvanceInvoiceGrossAmount Number;
   parameter InvoiceGrossPercentage Number;
   parameter TaxCalcStructureId Text;
   parameter ApplyTax Boolean;
}

action UpdateTaxAndAmounts {
   initialcheck none;
   ludependencies = TaxLinesVirtual, CreateAdvancePaymentInvoiceVirtual;
   parameter Objkey Text;
   parameter TaxEdited Boolean;
   parameter TaxStructureEdited Boolean;
}

action CreateInvoice {
   initialcheck CreateAdvancePaymentInvoiceInitialCheck(Objkey);
   parameter Objkey Text;
}
action CreateAndPrintInvoice {
   initialcheck CreateAdvancePaymentInvoiceInitialCheck(Objkey);
   parameter Objkey Text;
}

action ControlCreateInvoice {
   initialcheck none;
   supportwarnings = [true];
   parameter BaseForAdvInvoiceDb Text;
   parameter AdvanceInvoiceGrossAmount Number;
   parameter TotalAdvanceGross Number;
   parameter AdvanceInvoiceAmount Number;
   parameter InvoicedGrossAmount Number;
   parameter OrderAmount Number;
   parameter OrderNo Text;
}

action UpdateTaxInfo {
   initialcheck none;
   ludependencies = TaxLinesVirtual;
   parameter Objkey Text;
   parameter ParentObjkey Text;
   parameter Company Text;
   parameter TaxCode Text;
}

function Get_Tax_Percentage Number {
   parameter Company Text;
   parameter TaxCode Text;
}

action CheckTaxCombination {
   initialcheck none;
   supportwarnings = [true];
   parameter BaseForAdvInvoiceDb Text;
   parameter Company Text;
   parameter OrderNo Text;
   parameter TaxLiabilityTypeDb Text;

}

action GetDueDate Date {
   initialcheck none;
   parameter Company Text;
   parameter CustomerNo Text;
   parameter PayTermId Text;
   parameter PayTermBaseDate Date;
   parameter Objkey Text {
      required = [false];
   }
}

action UpdateInvoiceText {
   initialcheck none;
   parameter Objkey Text;
   parameter InvoiceText Text;
}

--------------------------------- FUNCTIONS ---------------------------------

function FetchDefaults Structure(DefaultStructure) {
   parameter OrderNo Text;
}

function CalcAdvInvoicePercentage Number {
   parameter BaseForAdvInvoiceDb Text;
   parameter OrderAmount Number;
   parameter AdvanceInvoiceAmount Number;
   parameter OrderTotalNet Number;
   parameter OrderTotalNetCharge Number;
}

function CalculateInvoiceAmount Number {
   parameter InvoiceNetPercentage Number;
   parameter OrderAmount Number;
   parameter CurrencyRounding Number;
}

function CalcAdvInvGrossPercentage Number {
   parameter BaseForAdvInvoiceDb Text;
   parameter OrderAmount Number;
   parameter AdvanceInvoiceGrossAmount Number;
   parameter OrderTotalGross Number;
   parameter OrderTotalGrossCharge Number;
}

function CalculateInvoiceGrossAmount Number {
   parameter InvoiceGrossPercentage Number;
   parameter OrderAmount Number;
   parameter CurrencyRounding Number;
}

function CheckGrossBaseInv Boolean {
   parameter BaseForAdvInvoiceDb Text;
}

function ValidTaxCodes List<Entity(TaxCodeRestricted)> {
   parameter Company Text;
   parameter ApplyTax Boolean;
   parameter SiteDate Date;
   where = "(COMPANY = :Company AND VALID_FROM <= :SiteDate AND VALID_UNTIL >= :SiteDate)
            AND ((:ApplyTax = 'TRUE' AND fee_type_db = 'TAX')
               OR (:ApplyTax = 'FALSE' AND (fee_type_db IN ('CALCTAX','NOTAX') OR (fee_type_db IN ('TAX') AND fee_rate = 0))))";
}

-------------------------------- STRUCTURES ---------------------------------
structure DefaultStructure {
   attribute InvoicingCustomer Text;
   attribute InvoiceCustomerName Text;
   attribute CustomerNo Text;
   attribute CustomerName Text;
   attribute WantedDeliveryDate Date;
   attribute CurrencyCode Text;
   attribute CurrencyRounding Number;
   attribute PayTermBaseDate Date;
   attribute PayTermId Text;
   attribute PayTermDescription Text;
   attribute Contract Text;
   attribute TotalSalesCharge Number;
   attribute OrderSalesChargeTax Number;
   attribute BaseForAdvInvoice Text;
   attribute BaseForAdvInvoiceDb Text;
   attribute BaseForAdvInvoiceGross Boolean;
   attribute DefTaxCode Text;
   attribute OrderInvoicedGross Number;
   attribute ShipAddrNo Text;
   attribute SupplyCountryDb Text;
   attribute SiteDate Date;
   attribute InvoicedNetAmount Number;
   attribute InvoicedGrossAmount Number;
   attribute TotalSalesChargeGross Number;
   attribute TaxLiabilityTypeDb Text;
   attribute OrderAmount Number;
   attribute MaxAllowedAmtAdvInv Number;
   attribute MaxAmtAdvInvPercentage Number;
   attribute AdvanceInvoiceAmount Number;
   attribute InvoiceNetPercentage Number;
   attribute AdvanceInvoiceGrossAmount Number;
   attribute InvoiceGrossPercentage Number;
   attribute InvoiceText Text;
   attribute DueDate Date;
   attribute ApplyTax Boolean;
   attribute TaxCalcStructureId Text;
   attribute TaxCalcStrDescription Text;
   attribute Company Text;
   attribute OrderTotalNet Number;
   attribute OrderTotalGross Number;
   attribute OrderTotalNetCharge Number;
   attribute OrderTotalGrossCharge Number;
   attribute TotalAdvanceNet Number;
   attribute TotalAdvanceGross Number;
   attribute LineLevelTaxRounding Text;
   attribute SameTaxCombination Text;
   attribute StructureWithGross Boolean;
   attribute WithCharges Text;
}


