--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-07-26  IzShlk  SCUXXW4-1026, Converted from tbwOverviewAgrSalesGroupDeal using MTG Version: 1.24
--------------------------------------------------------------------------------------

projection AgreementSalesGroupDealsHandling;
component ORDER;
layer Core;
description "Use this API to view information on a deal-per-sales group that is connected to the customer agreement.";
category Users;
include fragment CustomerTemplateLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset AgreementSalesGroupDealSet for AgreementSalesGroupDeal {
   context Company(Company);
}

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity AgreementSalesGroupDeal {
   crud = Read, Update, Delete;
   exclude attributes = ServerDataChange;

   from = "agreement_sales_grp_deal_join";
   keys = AgreementId, CatalogGroup, MinQuantity, ValidFromDate {
      where = "AGREEMENT_ID = :AgreementId and CATALOG_GROUP = :CatalogGroup and MIN_QUANTITY = :MinQuantity and VALID_FROM_DATE = :ValidFromDate";
   }

   attribute CustomerNo Text {
      fetch = "CUSTOMER_NO";
      label = "Customer No";
      editable = [false];
      format = uppercase;
   }
   attribute CustomerName Text {
      fetch = "CUST_ORD_CUSTOMER_API.Get_Name(CUSTOMER_NO)";
      label = "Customer Name";
      editable = [false];
   }
   attribute CurrencyCode Text {
      fetch = "CURRENCY_CODE";
      label = "Currency Code";
      editable = [ETag = null];
      format = uppercase;
   }
   attribute DiscountType Text {
      required = [true];
   }
   attribute NoteText Text {
      label = "Notes";
   }
   attribute Company Text {
      fetch = "COMPANY";
      label = "Company";
      editable = [false];
   }
   attribute State Text {
      label = "Customer Agreement Status";
      editable = [false];
   }
   reference CustomerNoRef(CustomerNo) to CustomerTemplateLov(TemplateCustomerId) {
      label = "Customer No";
   }
   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Currency Code";
   }
   reference CatalogGroupRef(CatalogGroup) to SalesGroup(CatalogGroup) {
      label = "Sales Group";
   }
   reference DiscountTypeRef(DiscountType) to SalesDiscountType(DiscountType) {
      label = "Discount Type";
   }
   reference CustomerAgreementRef(AgreementId) to CustomerAgreement(AgreementId) {
      label = "Customer Agreement";
   }
}

--------------------------------- FUNCTIONS ---------------------------------
function DiscountType List<Entity(SalesDiscountType)> {
   parameter DiscountType Text;
   where = "OBJSTATE != 'Blocked' ";
}

