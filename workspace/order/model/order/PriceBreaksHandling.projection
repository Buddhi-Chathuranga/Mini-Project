------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -------------------------------------------------------------------
-- 2018-06-26  SeJalk  SCUXXW4-8502, created from dlgOrderQuotationGradPrice using MTG Version: 1.23
------------------------------------------------------------------------------------------
projection PriceBreaksHandling;
component ORDER;
layer Core;
description "Use this API to indicate the different price breaks used for a quotation line";
category Users;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset OrderQuotationGradPriceSet for OrderQuotationGradPriceVirtual;

------------------------------ ENTITY DETAILS -------------------------------
virtual OrderQuotationGradPriceVirtual {
   crud = Create, Read;
   ludependencies = OrderQuotationGradPriceVirtual;

   attribute CatalogNo Text {
      label = "Sales Part No";
   }
   attribute SalesPartDescription Text {
      label = "Sales Part Description";
      maxlength = 2000;
   }
   attribute QuotationNo Text;
   attribute LineNo Text;
   attribute RelNo Text {
      label = "Del No";
   }
   attribute EffectivityDate Date;
   attribute PriceListNo Text;
   attribute ConditionCode Text;
   attribute RentalDb Boolean;

   attribute BuyQtyDue Number {
      label = "Sales Qty";
   }

   attribute CurrencyCode Text {
      label = "Curr";
      editable = [false];
   }
   attribute SalesUnitMeasure Text {
      label = "UoM";
   }
   attribute SaleUnitPrice Number {
      label = "Price/Curr";
      format = ifscurrency;
   }
   attribute UnitPriceInclTax Number {
      label = "Price Incl Tax/Curr";
      format = ifscurrency;
   }
   attribute TaxCode Text;
   attribute ChargeableDays Number;
   attribute LineItemNo Number;
   attribute Contract Text;
   attribute Company Text;

   attribute InsUpdAllowed Boolean {
      required = [true];
   }
   attribute UsePriceInclTax Boolean {
      required = [true];
   }
   reference TaxCodeRef(Company, TaxCode) to StatutoryFee(Company, FeeCode) {
      label = "Tax Code";
   }
   reference CatalogNoRef(Contract, CatalogNo) to SalesPart(Contract, CatalogNo) {
      label = "Sales Part";
   }

   array PriceBreaksArray(QuotationNo, LineNo, RelNo, LineItemNo) to OrderQuotationGradPrice(QuotationNo, LineNo, RelNo, LineItemNo);
}

@Override
entity OrderQuotationGradPrice {
   use attributes = MinDuration, BaseSaleUnitPrice, BaseUnitPriceInclTax, SaleUnitPrice, UnitPriceInclTax, CalcSaleUnitPrice, CalcUnitPriceInclTax,
   CalculatedSalesPriceCurr, CalcSalesPriceInclTaxCurr, SalesPriceInclTax, AmountOffset, PercentageOffset, SalesPrice;

   attribute MinQuantity Number {
      label = "Min Qty";
      fetch = "Min_Quantity";
   }
   attribute MinDuration Number {
      label = "Min Duration";
   }
   attribute BaseSaleUnitPrice Number {
      label = "Base Price/Base";
   }
   attribute BaseUnitPriceInclTax Number {
      label = "Base Price incl Tax/Base";
   }
   attribute SaleUnitPrice Number {
      label = "Base Price/Curr";
   }
   attribute UnitPriceInclTax Number {
      label = "Base Price incl Tax/Curr";
   }
   attribute CalcSaleUnitPrice Number {
      label = "Calculation Base Price/Curr";
   }
   attribute CalcUnitPriceInclTax Number {
      label = "Calculation Base Price incl Tax/Curr";
   }
   attribute CalculatedSalesPriceCurr Number {
      fetch = "Order_Quotation_Grad_Price_Api.Get_Calc_Sales_Price(SALES_PRICE,  'FALSE', QUOTATION_NO, LINE_NO, REL_NO , LINE_ITEM_NO,
                                 '', SALES_PRICE_INCL_TAX, CALC_SALE_UNIT_PRICE, AMOUNT_OFFSET, PERCENTAGE_OFFSET, CALC_UNIT_PRICE_INCL_TAX, ROUNDING)";

      label = "Calculated Sales Price/Curr";
      format = ifscurrency;
   }
   attribute CalcSalesPriceInclTaxCurr Number {
      fetch = "Order_Quotation_Grad_Price_Api.Get_Calc_Sales_Price_Incl_Tax(SALES_PRICE, 'FALSE', QUOTATION_NO, LINE_NO, REL_NO , LINE_ITEM_NO,
                                 '', SALES_PRICE_INCL_TAX, CALC_SALE_UNIT_PRICE, AMOUNT_OFFSET, PERCENTAGE_OFFSET, CALC_UNIT_PRICE_INCL_TAX, ROUNDING)";
      label = "Calculated Sales Price incl Tax/Curr";
      format = ifscurrency;
   }

   attribute SalesPriceInclTax Number {
      label = "Sales Price incl Tax/Base";
   }
   attribute PriceLineNo Number {
      label = "Price List No";
   }
   attribute Rounding Number {
      label = "Rounding";
      fetch = "rounding";
   }
}

-------------------------------- STRUCTURES ---------------------------------

structure PriceInfoStruct {
   attribute SaleUnitPrice          Number;
   attribute UnitPriceInclTax       Number;
   attribute BaseSaleUnitPrice      Number;
   attribute BaseUnitPriceInclTax   Number;
   attribute CurrencyRate           Number;
   attribute Discount               Number;
   attribute PriceSource            Text;
   attribute PriceSourceId          Text;
   attribute NetPriceFetched        Text;
   attribute PartLevelDb            Text;
   attribute PartLevelId            Text;
   attribute CustomerLevelDb        Text;
   attribute CustomerLevelId        Text;
}

structure CalcPriceStruct {
   attribute SaleUnitPrice          Number;
   attribute UnitPriceInclTax       Number;
   attribute CalculatedSalesPrice   Number;
   attribute CalcSalesPriceInclTax  Number;
   attribute SalesPrice             Number;
   attribute SalesPriceInclTax      Number;
   attribute SetSalesPrice          Text;
}

structure SalesPriceStruct {
   attribute SalesPrice             Number;
   attribute SalesPriceInclTax      Number;
}

--------------------------------- FUNCTIONS ---------------------------------

function GetSalesPrices Structure(SalesPriceStruct) {
   parameter SalesPrice             Number;
   parameter SalesPriceInclTax      Number;
   parameter QuotationNo         Text;
   parameter LineNo              Text;
   parameter RelNo               Text;
   parameter LineItemNo          Number;
}


function GetQuoteLinePriceInfo Structure(PriceInfoStruct) {
   parameter SaleUnitPrice       Number;
   parameter UnitPriceInclTax    Number;
   parameter CustomerLevelDb     Text;
   parameter CustomerLevelId     Text;
   parameter QuotationNo         Text;
   parameter LineNo              Text;
   parameter RelNo               Text;
   parameter LineItemNo          Number;
   parameter CatalogNo           Text;
   parameter BuyQtyDue           Number;
   parameter PriceListNo         Text;
   parameter ConditionCode       Text;
   parameter UsePriceInclTax     Boolean;
   parameter RentalChargableDays Number;
}

function CalculatePrices Structure(CalcPriceStruct) {
   parameter SetSalesPrice            Text;
   parameter QuotationNo              Text;
   parameter LineNo                   Text;
   parameter RelNo                    Text;
   parameter LineItemNo               Number;
   parameter CalcSaleUnitPrice        Number;
   parameter AmountOffset             Number;
   parameter PercentageOffset         Number;
   parameter CalcSaleUnitPriceInclTax Number;
   parameter Rounding                 Number;
   parameter GetPrice                 Boolean;

}