--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-08-09  IzShlk  SCUXXW4-8127, Converted from dlgAgreementDealPartDiscount using MTG Version: 1.25
--------------------------------------------------------------------------------------

client CustomerAgreementDealPerPartDiscount;
component ORDER;
layer Core;
projection CustomerAgreementDealPerPartDiscountHandling;

-------------------------------- ASSISTANTS ---------------------------------
assistant CustomerAgreementDealPerPartDiscountAssistant using AgreementDealPartDiscountSet {
   label = "Customer Agreement Deal per Part Discount";

   setup SetupSourceInfo {
      variable CatalogNoVar {
         type = Text;
      }
      variable CatalogNoDescVar {
         type = Text;
      }
      variable AgreementIdVar {
         type = Text;
      }
      variable MinQuantityVar {
         type = Number;
      }
      variable ValidFromVar {
         type = Date;
      }
      variable DealPriceVar {
         type = Number;
      }
      variable DealPriceInclTaxVar {
         type = Number;
      }
      variable ValidToVar {
         type = Date;
      }
      variable CurrencyCodeVar {
         type = Text;
      }
      variable BasePriceSiteVar {
         type = Text;
      }
      variable UpdAllowedVar {
         type = Boolean;
      }
      execute {
         set CatalogNo = CatalogNoVar;
         set SalesPartDescription = CatalogNoDescVar;
         set AgreementId = AgreementIdVar;
         set MinQuantity = MinQuantityVar;
         set ValidFromDate = ValidFromVar;
         set DealPrice = DealPriceVar;
         set DealPriceInclTax = DealPriceInclTaxVar;
         set ValidToDate = ValidToVar;
         set CurrencyCode = CurrencyCodeVar;
         set BasePriceSite = BasePriceSiteVar;
         set UpdAllowed = UpdAllowedVar;
      }
   }

   steps {
      step {
         group AgreementDealPartDiscountGroup;
         list AgreementDealPartDiscountList(AgreementDealPartDiscountArray);
      }
      final step {

      }
      cancelled step {

      }
   }
   finish command {
      execute {
         navigate back;
      }
   }
   cancel command {
      execute {
         navigate back;
      }
   }
   restart command {
      visible = [false];
   }
}

--------------------------------- COMMANDS ----------------------------------
command AfterCrud for AgreementPartDiscount {
   bulkexecute {
      call CalcDiscount(parent.AgreementId, parent.MinQuantity, parent.ValidFromDate, parent.CatalogNo);
      call UpdateParent(parent.Objkey);
      if [CreateCount = 1] {
         call UpdateDiscountLineNo(parent.AgreementId, parent.MinQuantity, parent.ValidFromDate, parent.CatalogNo, Record.DiscountNo, true);
      }
      if [DeleteCount = 1] {
         call UpdateDiscountLineNo(parent.AgreementId, parent.MinQuantity, parent.ValidFromDate, parent.CatalogNo, Record.DiscountNo, false);
      }
   }
}
--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------
group AgreementDealPartDiscountGroup for AgreementSalesPartDealVirtual {
   label = "";
   field CatalogNo {
      size = Small;
   }
   field SalesPartDescription;
   field AgreementId {
      size = Small;
   }
   field DealPrice {
      preserveprecision = [true];
   }
   field DealPriceInclTax {
      preserveprecision = [true];
   }
   field CustomerAgreementRef.CurrencyCode {
      size = Small;
      label = "Currency";
   }
   field MinQuantity {
      size = Small;
   }
   field Discount;
   field AccDiscountNetAmount;
   field AccDiscountGrossAmount;
   daterangefield {
      startdate ValidFromDate;
      enddate ValidToDate;
      label = "Validity Period";
   }
}

----------------------------------- LISTS -----------------------------------
list AgreementDealPartDiscountList for AgreementPartDiscount {
   label = "Discount Lines";
   editmode = SingleCellEdit;
   orderby = DiscountLineNo;

   crudactions {
      new {
         enabled = [parent.UpdAllowed];
      }
      edit {
         enabled = [parent.UpdAllowed];
      }
      delete {
         enabled = [parent.UpdAllowed];
      }
      after command AfterCrud;
   }

   field DiscountLineNo;
   lov DiscountTypeRef with ReferenceSalesDiscountTypeSelector using DiscountType(DiscountType) {
      description = DiscountTypeRef.Description;
      validate command {
         execute {
            set Discount = DiscountTypeRef.Discount;
         }
      }
   }
   field CalculationBasis;
   field Discount;
   field DiscountAmount {
      searchable = false;
   }
   field PriceCurrency {
      searchable = false;
      preserveprecision = [true];
      editable = [false];
   }
   field PriceInclTaxCurrency {
      preserveprecision = [true];
      editable = [false];
   }
}
