-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2021-10-01  PrRtlk  SC21R2-2966, Used the Subset Customer Order in ShipmentCreation Enumeration for Customer Order related Shipment Creation types.
-- 2021-07-30  NiDalk  SC21R2-2123, Added missing maxlength property to Text attributes.
-- 2021-07-29  NiDalk  SC21R2-2154, Updated InCity field descriptions.
-- 2021-07-08  NiDalk  SC21R2-1521, Marked mandatory attributes for CustomerOrderStructure.
-- 2021-07-07  ChBnlk  SC21R2-1394, Modified CustOrderHeader by adding attribute ErrorText.
-- 2021-06-17  MiKulk  SC21R2-224, Create a seperate Structure OrderHeaderStructure to support GetCustomerOrders.
-- 2021-06-17          entity CustomerOrder will be overriden in a duplicate manner with this correction sinc ethe entity cloning is not supported.
-- 2021-05-25  DhAplk  SC21R2-1283, Added array and reference related descriptions.
-- 2021-05-13  ChBnlk  SC21R2-1188, Added CRUD = none to the entities to remove unnecessary projection entity actions grants.
-- 2021-03-04  NiDalk  SC2020R1-12800, Removed some unwanted attributes and added ErrorMessage to CustomerOrderStructure.
-- 2021-02-03  NiDalk  SC2020R1-11691, Modified model of CustomerOrderLine to set LineAddress as reference.
-- 2020-12-03  NiDalk  SC2020R1-11067, Added Marble descriptions to OrderStructure
-- 2020-10-15  NiDalk  SC2020R1-10592, Remodelled data structures used in CreateCustomerOrder to use relevent entities.
-- 2020-08-17  NiDalk  SC2020R1-9303, Fixed an error in where clause of SourceTaxItemOrder.
-- 2020-05-12  Erlise  SC2020R1-57, Conversion of BizApi GetCustomerOrder and GetCustomerOrderOverview.
--------------------------------------------------------------------------------------

fragment CustomerOrderUtil;
component ORDER;
layer Core;
description "Put some useful description here ...";

--------------------------------- FRAGMENTS ---------------------------------


----------------------------- CLIENT FRAGMENTS ------------------------------


--------------------------- PROJECTION FRAGMENTS ----------------------------
// modelling support for  GetCustomerOrder action, start
@Override
@apidoc {
   @description : Overriden entity of CustomerOrder for OrderStructure
   @attribute OrderNo : The customer order number from which the goods are delivered to the customer.
   @attribute AuthorizeCode : The ID of the person responsible for coordinating the handling of the customer orders.
   @attribute BillAddrNo : The identity for the customer's document address to which documents will be sent.
   @attribute Company : The name or description of the company.
   @attribute CountryCode : The country code.
   @attribute CurrencyCode : The short code for the currency used.
   @attribute CustomerNo : The short name or identification number of the customer.
   @attribute CustomerNoPay : The ID of the customer to be invoiced instead of the ordering customer, when the customer order is invoiced to a company other than the customer's. For example, the parent company.
   @attribute CustomerNoPayAddrNo : The address identity of the customer to whom the invoice will be sent. An invoice customer is defined when the customer orders should be invoiced to a company other than the ordering customer's, e.g., the parent company.
   @attribute DeliveryTerms : The delivery term ID.
   @attribute DistrictCode : The code for the sales district.
   @attribute LanguageCode : The language code.
   @attribute MarketCode : The code for the sales market.
   @attribute OrderCode : This is the order code (this value is always O=Order).
   @attribute OrderId : The order type used for the current order. The order type controls the order flow for both manually-entered and generated orders by defining which steps will be automatically performed and which steps will be manually performed. If a shipment is created, the control of the progress is handed over from the order type to the shipment type.
   @attribute PayTermId : The payment terms of the invoice.
   @attribute PreAccountingId : Reference to Pre Accounting information.
   @attribute RegionCode : The code of the ordering region.
   @attribute SalesmanCode : The salesperson responsible for the prospect, customer, or a specific order.
   @attribute ShipAddrNo : The address to which the goods will be delivered.
   @attribute ShipViaCode : The ship via code identifies which delivery mode will be used for transporting goods from one node in a supply chain to another.
   @attribute AddrFlag : Indicates that the delivery address is a single occurrence address, i.e., a temporary delivery address.
   @attribute GrpDiscCalcFlag : Indicates if the sales part group discount has been calculated for the current order.
   @attribute CustomerPoNo : The customer's purchase order number.
   @attribute DateEntered : The date on which the record was created.
   @attribute DeliveryLeadtime : The external transport lead time when shipping parts. The external transport lead time is expressed in working days according to the external transport calendar.
   @attribute LabelNote : Used to mark the goods. The information originates from the customer and is communicated to the supplier, e.g., via the orders message. When the supplier delivers the goods back to the customer, the label note should be stated on the goods as a reference.
   @attribute NoteText : This is a free-text field. A note can be used as a means of forwarding information to someone who will process the object later.
   @attribute OrderConf : Show whether an order confirmation has been printed for the current customer order or not.
   @attribute OrderConfFlag : Determines whether an order confirmation will be printed for the current customer order.
   @attribute PackListFlag : Indicates if a delivery note should be printed for this customer order.
   @attribute PickListFlag : Determines whether an pick list will be printed for the current customer order.
   @attribute TaxLiability : The tax liability specification for the customer. Possible values for customers in all countries are Taxable and Exempt.
   @attribute DeliveryCountryCode : The country code.
   @attribute WantedDeliveryDate : The date on which the customer wants the order to be delivered at the customer's delivery address.
   @attribute InternalPoNo : The order number of the corresponding internal purchase order, for internal customer orders.
   @attribute RouteId : The ID of the customer order route. The ID works as a short code when working with customer order routes. A route contains information about route departure days and shipping times.
   @attribute AgreementId : The ID of the customer agreement referred to by the customer order header.
   @attribute ForwardAgentId : The name or ID of the forwarder that will handle the transportation.
   @attribute InternalDeliveryType : The delivery type is used to decide the type of transaction that will be created when an internal customer order is delivered.
   @attribute ExternalRef : A reference that is used to refer to the customer's system. It is used to keep track of the incoming data. For instance, if an event has been received from another system, the original identity is saved as an external identity.
   @attribute ProjectId : The project id connected to the customer order.
   @attribute StagedBilling : This value indicates that the order line uses staged billing.
   @attribute SmConnection : The value is Connected when the customer order, or any of its order lines, is connected to service requests in IFS Maintenance. Otherwise the value will be NotConnected.
   @attribute SchedulingConnection : Indicates if the customer order is connected to IFS/Customer Schedules.
   @attribute Priority : The priority of the order as defined on the customer order.
   @attribute IntrastatExempt : Indicates if goods sent to this address should be excluded from the Intrastat report. This is used for geographical locations that are situated in a country within the European Union (EU), but do not have to report Intrastat.
   @attribute AdditionalDiscount : The additional discount percentage entered for the whole order. The additional discount percentage is manually entered on the order header and never retrieved automatically.
   @attribute PayTermBaseDate : The date on which the invoice payment terms are based. This date is specified when the invoice is created.
   @attribute SummarizedSourceLines : This value indicates whether all sourced order lines originating from one order line should be shown in the order confirmation, or if the sourced order lines should be summarized. Sourced order lines with the same line number, delivery date, price, and discount will be summarized. Value can be YES or NO.
   @attribute CaseId : The unique identity of the case from where the customer order was created as a handover reference.
   @attribute TaskId : The identity of the case task from where the customer order was created as a handover reference.
   @attribute ConfirmDeliveries : Indicates that the deliveries created for a customer order has to be confirmed by the customer before the order can be invoiced.
   @attribute CheckSalesGrpDelivConf : Indicates if delivery confirmation setting on sales groups should be checked when adding order lines.
   @attribute DelayCogsToDelivConf : Indicates if the cost of the sold goods can be posted at delivery confirmation or not.
   @attribute CancelReason : The ID of the cancellation reason. The cancellation reason can optionally be used when, for instance, a customer order is cancelled.
   @attribute JinsuiInvoice : Indicates if the Jinsui processing functionality is activated for this customer order.
   @attribute BlockedReason : The message stating the reason why the order could not be released or reserved.
   @attribute SalesContractNo : The customer order header's sales contract number.
   @attribute ContractRevSeq : The revision number of the sales contract.
   @attribute ContractLineNo : The sales contract line number.
   @attribute ContractItemNo : The sales contract line item number.
   @attribute ReleasedFromCreditCheck : The blocked customer order is released and can be further processed and will not be blocked again in any of the steps where a credit check occurs.
   @attribute ProposedPrepaymentAmount : The amount required as a prepayment, expressed in the order currency. It cannot be larger than the customer order gross amount including charges.
   @attribute PrepaymentApproved : Indicates that the customer has agreed on paying the required prepayment amount. Value can be TRUE or FALSE.
   @attribute BackorderOption : Option which determines how the order will be treated when performing reservations, when creating the pick list and when reporting picking. This applies only to inventory sales parts.
   @attribute ExpectedPrepaymentDate : The date on which the prepayment is expected to be recieved from the customer.
   @attribute ShipmentCreation : This parameter specifies whether shipments should be created automatically when releasing a customer order or when creating pick list.
   @attribute UsePreShipDelNote : The value indicates that the material on the customer order will first be picked and transferred to a shipment inventory, and next, will be packed and delivered using a pre-shipment delivery note. The delivery note is printed before reporting the delivery
   @attribute PickInventoryType : Indicates if the parts processed in the order flow will be handled in shipment inventory when picked and before being delivered. Shipment inventory is used for gathering goods ready for dispatch.
   @attribute TaxIdNo : Displays the customer or supplier's Tax number for this address.
   @attribute TaxIdValidatedDate : The date the tax identity number was validated. This field will be empty if the number has not been validated or if the tax identity number is invalid. Note:This field will only be validated for EU member countries.
   @attribute ClassificationStandard : A unique identifier used to classify parts based on the nature of the industry.
   @attribute MsgSequenceNo : The sequence number used to monitor both outbox and inbox messages created for each message class.
   @attribute MsgVersionNo : The ID used by the application to distinguish among the different versions of messages belonging to a particular message class.
   @attribute CurrencyRateType : The code for the currency rate type.
   @attribute DelTermsLocation : The location referred to by the delivery terms. It is necessary for the delivery terms to define an exact location to be able to fully determine the extent of responsibility and the costs for transportation of goods. Depending on the delivery terms this can be, e.g., a port of shipment, port of destination or a named place.
   @attribute InternalRef : The reference of the corresponding internal purchase order, for internal customer orders.
   @attribute InternalPoLabelNote : Used to mark the goods. The information originates from the internal customer and is communicated to the supplier, e.g., via the orders message. When the supplier delivers the goods back to the customer, the label note should be stated on the goods as a reference. For this reason, the label note is included in the dispatch advice message and on printed delivery documents.
   @attribute SupplyCountry : The country from which the goods or services are to be delivered. The site country is default.
   @attribute RebateCustomer : The ID of an additional customer that is entitled to rebates, besides the ordering customer.
   @attribute FreightMapId :   The identity of the freight map. A freight map is a set of freight zones, defined per transport means (ship via code). This is used for freight calculations.
   @attribute ZoneId : The identity of the freight zone. Zones are used for freight calculations. Customer addresses are connected to different zones depending on the ship via code used for the transport.
   @attribute FreightPriceListNo : The identity of the freight price list valid for this customer order.
   @attribute SummarizedFreightCharges : Indicates that the order confirmation will show all the freight charge lines for the order, summarized by charge type.
   @attribute ApplyFixDelivFreight : Indicates that a fixed freight charge is applied irrespective of the weight or volume of the customer order lines.
   @attribute FixDelivFreight : The fixed delivery freight amount expressed in base currency, applied for each set of customer order lines that have the same delivery terms, zone ID of customer address, supply method, supplier, ship-via-code, and delivery date.
   @attribute PrintDeliveredLines : This value decides whether or not the delivery note will contain only the delivered lines, or all customer order lines, including those that have been delivered earlier, and those that have not been delivered at all. A not delivered line must have the same delivery address to be included.
   @attribute CustCalendarId : The customer calendar defining work days for the customer address. If no value is shown, an all day calendar will be used in calculations to check if the delivery day is a working day at the customer.
   @attribute ExtTransportCalendarId : The external transport calendar that defines work days for transport. If no value is shown, an all-day calendar will be used. The calendar will be used in lead time calculations which include external transport lead times.
   @attribute CustomsValueCurrency : The currency for the customs value entered for the customer order lines, if applicable. Note: if no currency is defined for the field, the base currency will be used to reflect the values on a pro forma invoice created as a customer order pro forma invoice or a shipment pro forma invoice.
   @attribute UsePriceInclTax : Determines the basis for tax calculation for IFS/Sales from a given customer.
   @attribute ShipmentType : The shipment type which is used to control the shipment flow. The shipment processes of your company determine how the shipment type should be defined to get a streamlined and effective process. The shipment type decides and controls e.g. If an event in the main flow of the shipment process should be executed automatically or manually, if and when an optional event should be executed etc.
   @attribute VendorNo : The identity of the supplier.
   @attribute BusinessOpportunityNo : The opportunity number, if the customer order was created from a business opportunity.
   @attribute PickingLeadtime : The picking time to be considered when shipping parts to the customer using the delivery mode specified by the ship-via code. The picking lead time is expressed in working days according to the distribution calendar of the site.
   @attribute FreeOfChgTaxPayParty : Defines how tax is paid for free of charge customer order lines. The following options are available. No Tax, Customer and Company.
   @attribute BlockedType :  Indicates the reason why this order was credit blocked. Blocked type can be Credit, Adv/Prepay, Manual, None.
   @attribute B2bOrder : This check box is selected if the customer order is initiated from a shopping cart in the B2B process.
   @attribute MainRepresentativeId : The ID of the main representative for this customer order.
   @attribute LimitSalesToAssortments : Indicates if the customer is limited to only sale of parts that are connected to the limited assortments.
   @attribute Site : The site ID in IFS Cloud. When specified it will retrieve order information only for orders connected to this specific site.
   @attribute CustomerRef : The customer's reference. When specified it will retrieve order information only for orders connected to this specific customer reference.
   @attribute OrderStatus : The status of the customer order in the order flow indicates what has been done and what the next activity should be. Different operations are available depending on the status. As the order moves through the order flow, the order status changes automatically.
   @navigation Lines : Include customer order line details connected to a specific customer order record in IFS Cloud.
   @navigation Charges : Include charge lines connected to a specific customer order record in IFS Cloud.
   @navigation Address : This represents the delivery address of the specific customer order.
}
entity DetailCustOrder using CustomerOrder {
   crud = None;
   use attributes = AuthorizeCode, BillAddrNo, Company, CountryCode, CurrencyCode, CustomerNo, CustomerNoPay,
   CustomerNoPayAddrNo, DeliveryTerms, DistrictCode, LanguageCode, MarketCode, OrderCode, OrderId,
   PayTermId, PreAccountingId, RegionCode, SalesmanCode, ShipAddrNo, ShipViaCode, AddrFlag,
   GrpDiscCalcFlag, CustomerPoNo, DateEntered, DeliveryLeadtime, LabelNote, NoteText, OrderConf, OrderConfFlag,
   PackListFlag, PickListFlag, TaxLiability, DeliveryCountryCode, WantedDeliveryDate, InternalPoNo, RouteId, AgreementId,
   ForwardAgentId, InternalDeliveryType, ExternalRef, ProjectId, StagedBilling, SmConnection, SchedulingConnection, Priority,
   IntrastatExempt, AdditionalDiscount, PayTermBaseDate, SummarizedSourceLines, CaseId, TaskId, ConfirmDeliveries,
   CheckSalesGrpDelivConf, DelayCogsToDelivConf, CancelReason, JinsuiInvoice, BlockedReason, SalesContractNo, ContractRevSeq,
   ContractLineNo, ContractItemNo, ReleasedFromCreditCheck, ProposedPrepaymentAmount, PrepaymentApproved, BackorderOption,
   ExpectedPrepaymentDate, ShipmentCreation, UsePreShipDelNote, PickInventoryType, TaxIdNo, TaxIdValidatedDate,
   ClassificationStandard, MsgSequenceNo, MsgVersionNo, CurrencyRateType, DelTermsLocation, InternalRef, InternalPoLabelNote,
   SupplyCountry, RebateCustomer, FreightMapId, ZoneId, FreightPriceListNo, SummarizedFreightCharges, ApplyFixDelivFreight,
   FixDelivFreight, PrintDeliveredLines, CustCalendarId, ExtTransportCalendarId, CustomsValueCurrency, UsePriceInclTax,
   ShipmentType, VendorNo, BusinessOpportunityNo, PickingLeadtime, FreeOfChgTaxPayParty,
   BlockedType, B2bOrder, MainRepresentativeId, LimitSalesToAssortments;

   attribute Contract Text {
      alias = "Site";
      maxlength = 5;
   }
   attribute CustRef Text {
      alias = "CustomerRef";
      maxlength = 100;
   }
   attribute OrderStatus Text {
      fetch = "state";
      maxlength = 20;
   }

   array Lines(OrderNo) to CustomerOrderLine(OrderNo);
   array Charges(OrderNo) to CustomerOrderCharge(OrderNo);
   reference Address(OrderNo) to CustomerOrderAddress(OrderNo);
}


@Override
@apidoc {
   @description : Overriden entity of CustomerOrderLine for OrderStructure
   @attribute OrderNo : The customer order number from which the goods are delivered to the customer.
   @attribute LineNo : The ID number of the order line is displayed.
   @attribute RelNo : The number of each delivery, if the order or order line has partial deliveries.
   @attribute LineItemNo : The component line number of the customer order line for a package part.
   @attribute Company : The name or description of the company.
   @attribute CatalogNo : The sales part number or ID.
   @attribute OrderCode : This is the order code (this value is always O=Order).
   @attribute PartNo : The sales part number or ID.
   @attribute PreAccountingId : When the material requisistion, purchase requisition, purchase order or customer order was pre-posted, the unique sequence number of the specific pre-posting code string created.
   @attribute SalesUnitMeas : The code value for the sales unit of measure, e.g., piece, meter, or kilo.
   @attribute BaseSaleUnitPrice : The sales price of the current part expressed in base currency, i.e., the currency used by your company.
   @attribute BuyQtyDue : The ordered quantity, expressed in sales unit of measure.
   @attribute CatalogDesc : The name or description corresponding to the sales part number.
   @attribute CatalogType : This column displays the sales part type. The sales part type can be inventory part, non inventory part, component part, or package part.
   @attribute ConvFactor : This is the conversion factor between the input UoM and the inventory UoM.
   @attribute Cost : This is the unit cost for the part.
   @attribute CurrencyRate : The exchange rate of the currency.
   @attribute DateEntered : The date on which the record was created.
   @attribute Discount : The line discount percentage that is retrieved automatically by the system, based on the pricing functionality. Discounts in campaigns, agreements, price lists, customer basic data and customer hierarchy (if applicable) are taken into consideration. This discount can be single (follows only the discount priority hierarchy) or multiple (follows both the price and the discount priority hierarchy), depending on the setting of the site.
   @attribute LineTotalQty : The volume of the ordered parts when packed, expressed in site's volume unit of measure.
   @attribute LineTotalWeight : The net weight of the ordered parts per order line. This information is retrieved from the sales part. If it is an inventory registered sales part, the information on the sales part can originate from the inventory part. The net weight is used to calculate the gross weight.
   @attribute NoteText : This is a free-text field of up to 2000 characters, connected to the customer order line.
   @attribute OrderDiscount : The order line's group discount amount. It is calculated by multiplying the corresponding group discount rate times the net order line amount. The applicable discount rate depends on the order's amount/volume/weight.
   @attribute PlannedDeliveryDate : The date/time on which the goods are planned to be delivered to the customer's address.
   @attribute PlannedDueDate : The date on which the goods are planned to be available for reservation in stock.
   @attribute SupplySiteDueDate : Displays the date on which the ordered parts must be in stock at supply site, and available for reservation, to be delivered in time to the customer. This date is calculated and displayed when the supply code is Internal Purchase Transit or Internal Purchase Direct.
   @attribute PriceConvFactor : The conversion factor between the price and sales units. The formula is: Sales unit = Price unit * Price conversion factor.
   @attribute PromisedDeliveryDate : The date/time on which the goods are promised to be delivered to the customer's address.
   @attribute QtyAssigned : The quantity of parts reserved either manually or via the reserve function. This quantity is expressed in inventory unit of measureThe quantity of parts reserved either manually or via the reserve function. This quantity is expressed in inventory unit of measure
   @attribute QtyInvoiced : The quantity of units to be invoiced or that have been invoiced.
   @attribute QtyOnOrder : The quantity of the ordered part that is pegged.This implies a fixed connection between a demand and a supply (sometimes called fixed booking). The pegged supply quantity, (when the parts are received into stock) will be automatically reserved for the demand.
   @attribute QtyPicked : The quantity of ordered parts that has been reported as picked from stock. This quantity is expressed in the inventory unit of measure.
   @attribute QtyReturned : The quantity of the ordered part, expressed in inventory unit of measure, that has been returned from the customer.
   @attribute QtyShipdiff : The difference between the quantity of parts that has been picked from stock and the quantity that has actually been delivered. If, for example, you have pick reported 100 parts, but only delivered 50, the Qty Diff field will display -50. This indicates that you have delivered 50 units less than pick reported. Observe that this only applies if the order is closed after the delivery, i.e., the order has acquired the Delivered status, not the Partially Delivered status.
   @attribute QtyShipped : The quantity of the ordered part that has been shipped to the customer, i.e., a previous partial delivery of the same order line, expressed in sales unit of measure. Note that the quantity shipped for the specific shipment will also be included.
   @attribute QtyToShip : The number of parts that remains to be delivered, expressed in the inventory unit of measure.
   @attribute QtyShort : The shortage quantity, displayed in the inventory unit of measure. A shortage quantity will arise when you reserve parts for an order and there is not enough available quantity. It is the difference between the quantity of demanded parts and the reserved parts.
   @attribute RealShipDate : The date on which the goods actually depart from the senders premises. If there have been several partial deliveries, the date of the last delivery is taken as the last actual ship date.
   @attribute RevisedQtyDue : The quantity of ordered parts, expressed in inventory unit of measure
   @attribute SaleUnitPrice : The price per unit, expressed in the invoice currency.
   @attribute SupplyCode : The supply code for the line. The supply code specifies how a part should be supplied.
   @attribute WantedDeliveryDate : The date on which the customer wants the order line to be delivered at the customer's delivery address.
   @attribute DeliveryType : The delivery type for invoices applying to trade within the European Union (EU).
   @attribute VendorNo : The identity of the supplier.
   @attribute TaxCode : The tax code for the particular line.
   @attribute TaxClassId : The tax class that will be used to derive a tax code for calculating tax for the sales part.
   @attribute CustomerPartNo : The customer's part number corresponding to the sales part number in the application.
   @attribute CustomerPartConvFactor : <<The conversion factor used to convert the customer sales quantity expressed in customer unit of measure (UoM) to the sales quantity expressed in sales UoM.
The conversion formula is as follows:
   Sales Quantity = (Customer Sales Quantity * Conv. Factor)
Example:
   The customer sales in gram [g] and the sales in kilogram [kg].
   To convert the customer sales quantity of 2000 [g] into sales quantity [kg], use inventory conversion factor 0,001, i.e., (2000 g customer sales * 0,001 Conv. Factor) = 2 kg sales When modifying the unit of measure the conversion factor will automatically be displayed as found in IFS/Application Services, in the Conversion tab of the Unit Relationships window, when the units of measure belong to the same base unit. Otherwise the conversion factor will be set to blank or zero forcing you to enter a correct value.>>
   @attribute CustomerPartUnitMeas : The customer's unit of measure, e.g., piece, meter, or kilo. A sales part cross-reference must have been established.
   @attribute CustomerPartBuyQty : The customer's unit of measure, e.g., piece, meter, or kilo. A sales part cross-reference must have been established.
   @attribute PlannedShipDate : This is the date/time of the intended departure from the seller's premises and is calculated as the day after the final picking day. If the customer is connected to a route, the system will suggest a suitable departure date of the route in order to fulfill the promised delivery date.
   @attribute PlannedShipPeriod : The planned period for the parts to be shipped. The period is defined for each day in the calendar.
   @attribute CustomerNo : The short name or identification number of the customer.
   @attribute ConsignmentStock : This value indicates if consignment stock management is active for the combination of customer, delivery address, and sales part.
   @attribute CloseTolerance : The closing tolerance for the customer order line. The customer order line will automatically be closed after delivery if the difference between the quantity ordered and the quantity delivered is within the specified close tolerance. For instance, if the closing tolerance is set to 10% the order line will be closed if at least 90% of the ordered quantity has been delivered.
   @attribute PriceListNo : In this field, the ID number of the price list is displayed
   @attribute ChargedItem : This value indicates if the customer order line is to be invoiced.
   @attribute DemandOrderRef1 : Depending on the type of order, a reference to the origin is displayed. The order number is displayed for shop orders, work orders, customer orders, purchase orders, and material requisitions. The RMA (Return Material Authorization) number is displayed for RMA authorizations, and the project ID is displayed if the origin is a project.
   @attribute DemandOrderRef2 : Depending on the type of order, a reference to the origin is displayed. The release number is displayed for customer orders, purchase orders, material requisitions and shop orders, the line number is displayed for supplier shipments, and the RMA line number is displayed for RMA authorizations.
   @attribute DemandOrderRef3 : Depending on the type of order, a reference to the origin is displayed. The release number is displayed for purchase orders, material requisitions, and RMA authorizations. The sequence number is displayed for shop orders, the delivery number is displayed for customer orders, and the activity ID is displayed for projects.
   @attribute DemandOrderRef4 : Depending on the type of order, a reference to the origin is displayed. The line item number is displayed for shop orders, and work orders. The miscellaneous demand sequence number is displayed for projects, and the item number is displayed for project delivery items.
   @attribute DemandCode : This value shows from where the customer order was created.
   @attribute DopConnection : In this column the nature of the connection to DOP orders is displayed. Possible values are: Automatic DOP, Manual DOP or Release DOP. The value in this field is used as the default value when a customer order is created for a sales part connected to this inventory part. The DOP connection decides whether a DOP header should be created automatically from the customer order, or not.
   @attribute CreateSmObjectOption : Displays whether or not a service manager object should be created in IFS Maintenance when customer orders are delivered
   @attribute DefaultAddrFlag : This value indicates if this address will be used as the default address for the corresponding address type. The default address is automatically used in instances where no specific address ID is stated for the specific address type. The same address can be used as default for different address types. An address type can have more than one address as default as long as the valid from/valid to dates for the addresses do not overlap. This field can be edited after the record is saved.
   @attribute AddrFlag : Indicates that the delivery address is a single occurrence address, i.e., a temporary delivery address.
   @attribute ShipAddrNo : The address to which the customer wants the parts to be delivered.
   @attribute RouteId : A route contains information about route departure days and shipping times. Route planning is used to coordinate frequent deliveries of goods to customers who order quantities smaller than a full cargo space. It is useful when having several customers with similar delivery requirements, located close enough together to be serviced by the same delivery route. Route planning is also used for the purpose of planning the load sequence of the cargo space, based on the delivery addresses along the route.
   @attribute ForwardAgentId : The name or ID of the forwarder that will handle the transportation.
   @attribute ShipViaCode : The ship via code identifies which delivery mode will be used for transporting goods from one node in a supply chain to another.
   @attribute DeliveryTerms : The delivery term ID.
   @attribute DeliveryLeadtime : The external transport lead time when shipping parts. The external transport lead time is expressed in working days according to the external transport calendar.
   @attribute DistrictCode : The code for the sales district.
   @attribute RegionCode : The code for the region.
   @attribute DesiredQty : The quantity actually desired by the customer, expressed in sales unit of measure, is automatically displayed. The value is retrieved from Sales Quantity. A change of the sales quantity does not affect the desired quantity. The information can be used to log differences between the quantity of parts that the customer wants to buy and the quantity of parts that is actually entered as sales quantity on the order line, e.g., on account of a shortage of parts in stock. The information about desired quantity can be used for forecasting or statistical purposes.
   @attribute PurchasePartNo : The part number or identifier of the purchase part. The part number can be both alphabetic and numeric.
   @attribute StagedBilling : This value indicates whether the line is invoiced by the customer via Self Billing.
   @attribute TaxLiability : The name of the tax liability.
   @attribute DeliveryCountryCode : Displays the country connected to the Delivery Address on the invoice.
   @attribute OriginalPartNo : The sales part number of the part that was originally requested. The original sales part number is displayed if a sales part is superseded by a replacement part at the line registration.
   @attribute SupSmContract : This column is only used if IFS/Maintenance is installed. If a superior service management object has been selected, this column displays the site for the object.
   @attribute SupSmObject : Only used if IFS Maintenance is installed. In this column the connection between a sales part and an existing service management object at the customer is displayed. If this column is used in connection with the Create SM Object column, a new service management object will be created below the service management object in the structure.
   @attribute SmConnection : This value indicates if the customer order line is connected to service requests in IFS Maintenance.
   @attribute PartPrice : The sales price of the ordered part in the order currency, i.e., the currency in which the customer is being charged.
   @attribute CalcCharPrice : The sum of all the applicable characteristics and all options for the configured sales part, expressed in the currency of the customer order.
   @attribute CharPrice : The price for the characteristic and selected option for the configured sales part, expressed in the currency of the customer order.
   @attribute PriceSource : The ID of the price source, i.e., the ID of the campaign, customer agreement, or price list from which the part's price has been retrieved. The price source ID is only displayed for system-generated prices that have been retrieved from a campaign, customer agreement, or a sales price list.
   @attribute PriceFreeze : This value indicates if the Price/Currency will be recalculated or not even though the quantity changes. This is useful when a price has already been agreed upon between you and the customer, and you do not want the recalculation of Calculated Price/Currency to change the agreed price.
   @attribute DockCode : Specifies detailed delivery information and defines an area (dock) where the parts are to be delivered, i.e., a cargo bay.
   @attribute SubDockCode : Specifies detailed delivery information and defines an area within the dock where the parts are to be delivered, i.e., a gate in the cargo bay.
   @attribute RefId : The customer-provided reference ID for a specific demand.
   @attribute LocationNo : The identification number of the inventory location to where this line should be delivered.
   @attribute ConfigurationId : The configuration ID of the line.
   @attribute PriceEffectivityDate : The date which will be used when retrieving price and discount from a price list or an agreement.
   @attribute ConfiguredLinePriceId : This field displays the configured line price identity.
   @attribute LatestReleaseDate : The latest date on which this line should be released, in order to deliver the goods on time. This field is relevant only if the order line is subjected to a capability check.
   @attribute CtpPlanned : If this check box is selected, it indicates that the order promising for this line is based on a capability check, and that interim orders are saved.
   @attribute JobId : The project ID created in the accounting project.
   @attribute PriceSourceId : The ID of the price source, i.e., the ID of the campaign, customer agreement, or price list from which the part's price has been retrieved. The price source ID is only displayed for system-generated prices that have been retrieved from a campaign, customer agreement, or a sales price list.
   @attribute CustWarrantyId : The identity of the customer warranty, if one exists.
   @attribute IntrastatExempt : This value indicates if the goods sent to this address should be excluded from the Intrastat report. This is used for geographical locations that are situated in a country within the European Union (EU), but do not have to report Intrastat.
   @attribute PriceUnitMeas : The code value for the price unit of measure, e.g., piece, meter, or kilo.
   @attribute ConditionCode : The condition code for the part, if any.
   @attribute AdditionalDiscount : The additional discount expressed as a percentage.
   @attribute PartOwnership : Identifies the type of ownership for the parts.
   @attribute OwningCustomerNo : The id of the owning customer.
   @attribute ExchangeItem : This vale indicates if the customer order line is created from a purchase order exchange component line.
   @attribute SupplySiteReserveType : The reservation type applicable when reserving parts on the supplying site. If the supply code is not Internal Purchase Transit or Direct, this field is set to Not Allowed.
   @attribute OriginatingRelNo : The former customer order delivery number, if any. This field provides you a way of keeping track of the delivery number for the customer order line that has been replaced by sourced order lines.
   @attribute OriginatingLineItemNo : The originating line item number of the customer order.
   @attribute ReleasePlanning : Indicates that the quotation line is considered for planning and included in supply and demand views. In the case of MS-handled parts or MRP spare parts, it also indicates that the  line will consume forecast during the forecast consumption process.
   @attribute ReplicateChanges : Used to replicate the date or quantity changes made to a customer order line with pegged supply orders.
   @attribute ChangeRequest : Indicates if you can send order change request EDI messages to the pegged order.
   @attribute SupplierShipViaTransit : The short code that indicates how the goods will be shipped (e.g., by air or by road). Note, that if delivery mode is Direct and the address on the order line is a single occurrence address, the ship via will be fetched from the supplier record since the supply chain data is not defined for single occurrence addresses.
   @attribute SupplierShipViaTransitDesc : The description for the supplier's ship via code for transit order lines
   @attribute SupplySite : The site from which the parts will be delivered.
   @attribute ShipmentConnected : Indicates if there is a connected shipment.
   @attribute SelfBilling : Defines if self-billing is used for the customer for this part, or not. If selected, the part will not be invoiced, but the customer will himself make sure to invoice the parts using self-billing functionality. Package parts cannot be used in the self-billing flow.
   @attribute ActivitySeq : The activity sequence number. This is a unique system generated number that identifies a particular activity.
   @attribute ProjectId : The project identification.
   @attribute DeliverToCustomerNo : The identity of the customer to whom the items specified on the order line should be delivered.
   @attribute Contact : The ID or name of the customer's contact person.
   @attribute InputQty : If an input unit of measure (UoM) is used, the quantity of the sales part, expressed in the input unit of measure as entered on the Customer Order line.
   @attribute InputUnitMeas : The input unit of measure (UoM) that is used to enter a quantity of a part. The input UoM can be used to enter quantities of parts by using alternative units of measure, other than the inventory and sales unit of measure.
   @attribute InputConvFactor : This is the conversion factor between the input UoM and the inventory UoM.
   @attribute InputVariableValues : The unit of measure used by the variable.
   @attribute DopNewQtyDemand : The default value for this field equals the current Qty Demand of each DOP header.
   @attribute ShipmentCreation : This parameter specifies whether shipments should be created automatically when releasing a customer order or when creating pick list.
   @attribute ManufacturingDepartment : The manufacturing department to which the delivery should be made, as specified by the customer. This information is printed on a delivery note that is used when the delivery is received at the customer site, i.e., the receiver then knows to which department this specific delivery is intended.
   @attribute InvertedConvFactor : <<Inverted conversion factor used to convert sales quantity expressed in the sales unit of measure (UoM) to quantity expressed in the inventory UoM.
   The inverted conversion formula is as follows:
   Inventory Quantity = [Sales Quantity * (1 /Inverted Conversion Factor)]
   Example: The sales in [pcs] and the inventory in kilogram [kg]. To convert the sales quantity of 410 [pcs] into inventory quantity [kg], use inverted conversion factor 4.1, i.e., [410 pcs Sales * (1/4.1 Invert. Conv. Factor)] = 100kg Inventory When entering the inverted conversion factor the conversion factor is automatically set to 1 and when entering a conversion factor the inverted conversion factor is automatically set to 1. This means both the conversion factor and the inverted conversion factor cannot have a value which is not equal to one at the same time.>>
   @attribute DeliverySequence : Information received from the customer regarding the order in which the deliveries should be made. Typically, this information is received for firm demands with the same Wanted Delivery Time.
   @attribute CancelReason : The ID of the cancellation reason. This ID indicates the reason why an order line was cancelled.
   @attribute DeliveryConfirmed : This check box is selected when the order line is fully delivered, and when all deliveries have been confirmed.
   @attribute CustomerPoLineNo : The line number of the customer's purchase order.
   @attribute CustomerPoRelNo : The release number of the line, in the customer's purchase order. If a purchase order has several purchase order lines with identical part numbers, all lines receive the same line number but a different release number. On the other hand, if a purchase order has several purchase order lines with different part numbers, each purchase order line is assigned its own line number, e.g., 1 for the first, 2 for the second, etc.
   @attribute UpdatePeggedOrders : The quantity of the ordered part that is pegged to another supply, for instance, a purchase order line or a shop order.
   @attribute QtyConfirmeddiff : This quantity represents the difference between what was delivered to the customer, and what the customer had received and approved. This quantity is displayed in the sales unit of measure.
   @attribute BlockedForInvoicing : This value indicates if the order line is invoice blocked. This means that the order line cannot be invoiced.
   @attribute ProvisionalPrice : Indicates whether the provisional price was selected when the change occured.
   @attribute ReceivingAdviceType : Indicates the receiving advice type. The receiving advice can be of two different types: Arrived Goods: This type is used by the customer for reporting back to the supplier about the receipts that have arrived. It includes information about the arrived quantities and arrival dates. Approved Goods: This type is used by the customer for reporting back to the supplier only about the receipts that have been received into stock. It includes information about the arrived quantities as well as the approved quantities after quality inspections. Also the arrival and approval dates are included.
   @attribute DefaultCharges : If this indicator is true, charges from the sales part are copied to the line.
   @attribute FirstActualShipDate : The date of the first delivery. If there are no partial deliveries for the order line, the last actual ship date becomes the first actual ship date.
   @attribute TaxIdNo : The column displays the customer or supplier's Tax number for this address.
   @attribute TaxIdValidatedDate : The column displays the customer or supplier's Tax number for this address.
   @attribute PriceSourceNetPrice : If this check box is selected, it indicates that the price fetched should not be used in combination with any discounts.
   @attribute TargetDate : The estimated sales target date. This is the date used by the system for any recalculation, e.g., when changing the ship-via code. Initially this date is set to the same date as the wanted delivery date, and if the wanted delivery date gets updated, so will the sales target date. The target date can also be manually updated. It will then trigger a recalculation of planned delivery date where the system will try to meet the target date. Manually updating the target date to a different date than the wanted delivery date can be useful if there is a reschedule of dates. The purpose of this is to keep the original wanted delivery date unchanged as per when the customer originally requested the parts to be delivered on. The target date may be set to a date earlier than the wanted delivery date. It can be a non-working day.
   @attribute AllocationId : The distribution allocation number, which is automatically generated by the system when the distribution allocation header is saved.
   @attribute DelTermsLocation : The location referred to by the delivery terms. It is necessary for the delivery terms to define an exact location to be able to fully determine the extent of responsibility and the costs for transportation of goods. Depending on the delivery terms this can be, e.g., a port of shipment, port of destination or a named place.
   @attribute ClassificationPartNo : A unique identifier to define a part according to the classification standard. The classification part number helps to identify a part based on the industry it belongs to.
   @attribute ClassificationUnitMeas : The classification unit of measure used only with the classification part number. This should be an ISO unit of measure. However this value does not necessarily have a connection with the other units of measures used for this sales part.
   @attribute ClassificationStandard : A unique identifier used to classify parts based on the nature of the industry.
   @attribute RebateBuilder : This value indicates that the customer order line will generate rebates once invoiced.
   @attribute LineTotalWeightGross : The line gross weight, calculated as the line net weight plus the weight of the packages or pallets needed for the sales quantity, rounded up to a whole number.
   @attribute FreightMapId : The identity of the freight map. A freight map is a set of freight zones, defined per transport means (ship via code). This is used for freight calculations.
   @attribute ZoneId : The identity of the freight zone. Zones are used for freight calculations. Customer addresses are connected to different zones depending on the ship via code used for the transport.
   @attribute FreightPriceListNo : The identity of the freight price list. It can be alphanumeric.
   @attribute AdjustedWeightNet : The line net weight multiplied by the freight factor of the part.
   @attribute AdjustedWeightGross : The line net weight multiplied by the freight factor of the part plus the weight of the needed packages (outer case).
   @attribute AdjustedVolume : The line volume multiplied by the freight factor. This is used for freight calculations.
   @attribute FreightFree : If the net amounts of customer order lines, which are in the same consolidated group, sum up to a value which exceeds this amount, then the charge price of connected freight charge lines will be zero and the charge cost will be calculated as usual. The freight free amount applies to customer orders.
   @attribute PartLevel : The origin of the price expressed in part level. There are three alternatives, Part: The price entered on the part level (applicable when the price source is Agreement, Campaign, or Price List), Assortment: The price entered on the assortment node level (applicable when the price source is Agreement or Campaign), Unit: The price entered on the unit level (applicable when the price source is Price List).
   @attribute PartLevelId : The identity of the price part level. This represents the part number having the specified price when price part level equals Part. When the price part level equals Assortment, the value of this becomes the assortment ID followed by the assortment node (separated by '-'). This also represents the unit of the price when price part level equals Unit.
   @attribute CustomerLevel : The number of the customer hierarchy level. A customer hierarchy can have an unlimited number of levels. The hierarchy level number has to be an integer.
   @attribute CustomerLevelId : The number of the customer hierarchy level. A customer hierarchy can have an unlimited number of levels. The hierarchy level number has to be an integer.
   @attribute LoadId : The identification number of the current load list.
   @attribute CustomsValue : The customs value refers to the declared price of a sales item used at customs in trade for deliveries made between countries/states.
   @attribute AbnormalDemand : This value indicates that the quantity sold on this customer order line differs significantly from the normal. By indicating a customer order line as being an abnormal demand, that demand is excluded from calculations for demand deviation and inventory part classification.
   @attribute UpdatePriceEffectiveDate : This value indicates if the price effective date is automatically updated when you change the wanted delivery date on the customer order line.
   @attribute CustCalendarId : The customer calendar defining work days for the customer address.
   @attribute ExtTransportCalendarId : The external transport calendar defining work days for the transport.
   @attribute RelMtrlPlanning : Indicates if this line should be included in material planning or not.
   @attribute QtyPerAssembly : The required number of parts per main part.
   @attribute NewCompAfterDelivery : This is the identification code of the company.
   @attribute Rental : Indicates if this is a rental line or not.
   @attribute EndCustomerId : The ID of the end customer connected to the delivery address.
   @attribute PickingLeadtime : The picking time (in workdays) to be used for the site.
   @attribute ShipmentType : The shipment processes of your company determine how the shipment type should be defined to get a streamlined and effective process.
   @attribute OpenShipmentQty : The quantity connected to an open shipment that has not been delivered yet. The quantity is the summation of all quantities connected to different shipments for this specific order line minus the delivered quantity. This quantity is expressed in the inventory unit of measure.
   @attribute PackingInstructionId : The ID of the packing instruction. This instruction describes how to pack goods in the shipment process and is retrieved automatically based on the default packing instructions defined in the Default Packing Instructions window.
   @attribute OriginatingCoLangCode : The language code.
   @attribute ShipmentCreationSent : This parameter specifies whether shipments should be created automatically when releasing a customer order or when creating pick list.
   @attribute ShipmentTypeSent : The shipment type which is used to control the shipment flow. The shipment processes of your company determine how the shipment type should be defined to get a streamlined and effective process.
   @attribute ConnectedShipmentId : The ID of the connected shipment.
   @attribute CustPartInvertConvFact : The inverted conversion factor.
   @attribute BaseUnitPriceInclTax : Sales unit price including tax expressed in the base currency.
   @attribute UnitPriceInclTax : The unit price including tax.
   @attribute CountryCode : The country code.
   @attribute TaxLiabilityType : The tax liability specification for the customer. Available values for customers in all countries are TAX and EXEMPT.
   @attribute FreeOfCharge : This value indicates if the customer order line should be free of charge or not.
   @attribute FreeOfChargeTaxBasis : Tax will be calculated based on this value for free of charge lines.
   @attribute OriginalOrderNo : Depending on the type of order, a reference to the origin is displayed.
   @attribute OriginalLineNo : Depending on the type of order, a reference to the origin is displayed.
   @attribute OriginalRelNo : Depending on the type of order, a reference to the origin is displayed.
   @attribute OriginalItemNo : The sales part number for the part that was originally ordered. The original sales part number is displayed if a sales part is superseded by a replacement part at order line registration, or substituted due to shortage of the desired part.
   @attribute TaxCalcStructureId : The id of tax calculation structure used on the customer order line.
   @attribute Site : The site ID in IFS Cloud.
   @attribute OrderStatus : The status of the customer order in the order flow indicates what has been done and what the next activity should be. Different operations are available depending on the status. As the order moves through the order flow, the order status changes automatically.
   @navigation Discounts : Include discount information connected to the specific custome order line.
   @navigation TaxLines : Include tax information connected to the specific customer order line.
   @navigation LineAddress : This represents the delivery address connected to the specific customer order line.
}
entity CustomerOrderLine {
   crud = None;
   use attributes = Company, CatalogNo, OrderCode, PartNo, PreAccountingId, SalesUnitMeas, BaseSaleUnitPrice,
   BuyQtyDue, CatalogDesc, CatalogType, ConvFactor, Cost, CurrencyRate, DateEntered, Discount, LineTotalQty, LineTotalWeight, NoteText,
   OrderDiscount, PlannedDeliveryDate, PlannedDueDate, SupplySiteDueDate, PriceConvFactor, PromisedDeliveryDate, QtyAssigned, QtyInvoiced, QtyOnOrder,
   QtyPicked, QtyReturned, QtyShipdiff, QtyShipped, QtyToShip, QtyShort, RealShipDate, RevisedQtyDue, SaleUnitPrice, SupplyCode, WantedDeliveryDate,
   DeliveryType, VendorNo, TaxCode, TaxClassId, CustomerPartNo, CustomerPartConvFactor, CustomerPartUnitMeas, CustomerPartBuyQty, PlannedShipDate,
   PlannedShipPeriod, CustomerNo, ConsignmentStock, CloseTolerance, PriceListNo, ChargedItem, DemandOrderRef1, DemandOrderRef2, DemandOrderRef3,
   DemandOrderRef4, DemandCode, DopConnection, CreateSmObjectOption, DefaultAddrFlag, AddrFlag, ShipAddrNo, RouteId, ForwardAgentId, ShipViaCode,
   DeliveryTerms, DeliveryLeadtime, DistrictCode, RegionCode, DesiredQty, PurchasePartNo, StagedBilling, TaxLiability, DeliveryCountryCode,
   OriginalPartNo, SupSmContract, SupSmObject, SmConnection, PartPrice, CalcCharPrice, CharPrice, PriceSource, PriceFreeze, DockCode, SubDockCode,
   RefId, LocationNo, ConfigurationId, PriceEffectivityDate, ConfiguredLinePriceId, LatestReleaseDate, CtpPlanned, JobId, PriceSourceId, CustWarrantyId,
   IntrastatExempt, PriceUnitMeas, ConditionCode, AdditionalDiscount, PartOwnership, OwningCustomerNo, ExchangeItem, SupplySiteReserveType,
   OriginatingRelNo, OriginatingLineItemNo, ReleasePlanning, ReplicateChanges, ChangeRequest, SupplierShipViaTransit, SupplierShipViaTransitDesc,
   SupplySite, ShipmentConnected, SelfBilling, ActivitySeq, ProjectId, DeliverToCustomerNo, Contact, InputQty, InputUnitMeas,
   InputConvFactor, InputVariableValues, DopNewQtyDemand, ShipmentCreation, ManufacturingDepartment, InvertedConvFactor, DeliverySequence,
   CancelReason, DeliveryConfirmed, CustomerPoLineNo, CustomerPoRelNo, UpdatePeggedOrders, QtyConfirmeddiff, BlockedForInvoicing, ProvisionalPrice,
   ReceivingAdviceType, DefaultCharges, FirstActualShipDate, TaxIdNo, TaxIdValidatedDate, PriceSourceNetPrice, TargetDate, AllocationId, DelTermsLocation,
   ClassificationPartNo, ClassificationUnitMeas, ClassificationStandard, RebateBuilder, LineTotalWeightGross, FreightMapId, ZoneId,
   FreightPriceListNo, AdjustedWeightNet, AdjustedWeightGross, AdjustedVolume, FreightFree, PartLevel, PartLevelId, CustomerLevel, CustomerLevelId,
   LoadId, CustomsValue, AbnormalDemand, UpdatePriceEffectiveDate, CustCalendarId, ExtTransportCalendarId, RelMtrlPlanning, QtyPerAssembly,
   NewCompAfterDelivery, Rental, EndCustomerId, PickingLeadtime, ShipmentType, OpenShipmentQty, PackingInstructionId, OriginatingCoLangCode,
   ShipmentCreationSent, ShipmentTypeSent, ConnectedShipmentId, CustPartInvertConvFact, BaseUnitPriceInclTax, UnitPriceInclTax,
   CountryCode, TaxLiabilityType, FreeOfCharge, FreeOfChargeTaxBasis, OriginalOrderNo, OriginalLineNo, OriginalRelNo, OriginalItemNo, TaxCalcStructureId;

   attribute Contract Text {
      alias = "Site";
      maxlength = 5;
   }
   attribute OrderStatus Text {
      fetch = "state";
      maxlength = 20;
   }

   reference LineAddress(OrderNo, LineNo, RelNo, LineItemNo) to CustOrderLineAddress(OrderNo, LineNo, RelNo, LineItemNo);
   array Discounts(OrderNo, LineNo, RelNo, LineItemNo) to CustOrderLineDiscount(OrderNo, LineNo, RelNo, LineItemNo);
   array TaxLines(Company, OrderNo, LineNo, RelNo, LineItemNo) to SourceTaxItemOrder(Company, SourceRef1, SourceRef2, SourceRef3, SourceRef4);
}

@Override
@apidoc {
   @description : Overridden entity of CustomerOrderCharge used in OrderStructure
   @attribute OrderNo : The order number of the customer order.
   @attribute SequenceNo : This is key and used for internal use.
   @attribute LineNo : The line number of the received or created order line.
   @attribute ChargeType : The charge type that is used when charging for freights for the specified ship via code. It can be for a fixed amount or charge per unit.
   @attribute ChargePriceCurr : The charge price, expressed in the customer order currency.
   @attribute ChargeAmountInclTax : The charge price including tax, expressed in the customer's currency.
   @attribute ChargedQty : The number of charges to be used on the customer order.
   @attribute UnitCharge : It indicates, if the charge amount refers to one single unit of the sales part.
   @attribute PriceListNo : The identity of the freight price list. It can be alphanumeric.
   @attribute Charge : The sales charge, expressed as a percentage. This value is entered as an alternative to the charge price.
   @attribute ChargePercentBasisCurr : The amount expressed in the order currency, which is the calculation basis for the charge percentage or the charge cost percentage. If the charge line is connected to an order line, the value in this field is equal to the net amount of the order line. If not, this value is equal to the total net amount of the order. However, if a unit charge is applied, the value in this field is equal to the net amount of the connected order line divided by the quantity.
   @attribute ChargePriceBase : The charge price expressed in base currency.
   @attribute ChrgPriceInclTaxBase : The charge price including tax in base currency.
   @attribute ChargeCost : attribThe cost for the charge in base currency. ute_description
   @attribute Collect : Indicates if the charge is not to be invoiced. It is mandatory to specify a shipment ID for every collect charge.
   @attribute ShipmentId : The ID of the shipment.
   @attribute ChargeCostPercent : aThe sales charge cost, expressed as a percentage. This value is entered as an alternative to the charge cost. ttribute_description
   @attribute CampaignId : The identification number of the connected campaign.
   @attribute DealId : The identification number of the sales promotion deal.
}
entity CustomerOrderCharge {
   crud = None;
   use attributes = LineNo, ChargeType, ChargeAmount, ChargeAmountInclTax, ChargedQty, UnitCharge, ChargePriceListNo, Charge,
   ChargePercentBasis, BaseChargeAmount, BaseChargeAmtInclTax, ChargeCost, Collect, ShipmentId, ChargeCostPercent, CampaignId, DealId;

   attribute ChargeAmount Number {
      alias = "ChargePriceCurr";
   }
   attribute ChargePriceListNo Text {
      alias = "PriceListNo";
      maxlength = 10;
   }
   attribute ChargePercentBasis Number {
      alias = "ChargePercentBasisCurr";
   }
   attribute BaseChargeAmount Number {
      alias = "ChargePriceBase";
   }
   attribute BaseChargeAmtInclTax Number {
      alias = "ChrgPriceInclTaxBase";
   }
}

@Override
@apidoc {
   @description : Overridden entity of CustomerOrderAddress used in OrderStructure
   @attribute OrderNo : The order number of the customer order.
   @attribute CountryCode : The customer's country code.
   @attribute Address1 : The first line of the delivery address.
   @attribute Address2 : The second line of the delivery address. Extra address field.
   @attribute Address3 : This is an additional text field in which the user can input delivery address information. This also shows the Address 3 information connected to the default Document Address.
   @attribute Address4 : This is an additional text field in which the user can input delivery address information. This also shows the Address 4 information connected to the default Document Address.
   @attribute Address5 : This is an additional text field in which the user can input delivery address information. This also shows the Address 5 information connected to the default Document Address.
   @attribute Address6 : This is an additional text field in which the user can input delivery address information. This also shows the Address 6 information connected to the default Document Address.
   @attribute ZipCode : Displays the Zip Code connected to the address ID.
   @attribute City : The city part of the address.
   @attribute State : The code for the state.
   @attribute County : The county connected to the address.
   @attribute InCity : Indicates if the customer is located inside the city limits. If this value is True, city sales tax is calculated on tax lines for customer orders. Possible values for this attribute are: TRUE or FALSE.
   @attribute Company : The company ID.
   @attribute VatFreeVatCode : The tax free tax code that will be used instead of the sales part tax code, in the case where no taxes are applied when delivering to the single occurrence address, and the customer is normally tax liable.
   @attribute CustomerNo : The short code or id of the customer.
   @attribute BillAddrNo : The identity for the customer's document address to which documents will be sent.
   @attribute ShipAddrNo : The identity for the customer's delivery address to which goods will be sent.
   @attribute SingleOccurrence : The value in this field indicates that the delivery address is a single occurrence address, i.e., a temporary delivery address.
}
entity CustomerOrderAddress {
   crud = None;
   from = "CUSTOMER_ORDER_ADDRESS_2";
   exec = "Customer_Order_Address_API";
   keys = OrderNo;
   use attributes = CountryCode, Address1, Address2, Address3, Address4, Address5, Address6, ZipCode, City, State, County, InCity, Company, VatFreeVatCode, CustomerNo, BillAddrNo, ShipAddrNo;

   attribute AddrFlag Enumeration(GenYesNo) {
      alias = "SingleOccurrence";
      fetch = "addr_flag_db";
   }
}


@Override
@apidoc {
   @description : Overridden entity of CustOrderLineAddress used in OrderStructure
   @attribute OrderNo : The number of the current customer order.
   @attribute LineNo : The line number of the received or created order line.
   @attribute RelNo : The number of each delivery, if the order or order line has partial deliveries.
   @attribute LineItemNo : The item number connected to the address.
   @attribute CountryCode : The customer's country code.
   @attribute Address1 : The first row in the delivery address to which the customer wishes the ordered goods to be sent.
   @attribute Address2 : The second row in the delivery address to which the customer wishes the ordered goods to be sent.
   @attribute Address3 : Additional row in the delivery address to which the customer wishes the ordered goods to be sent.
   @attribute Address4 : Additional row in the delivery address to which the customer wishes the ordered goods to be sent.
   @attribute Address5 : Additional row in the delivery address to which the customer wishes the ordered goods to be sent.
   @attribute Address6 : Additional row in the delivery address to which the customer wishes the ordered goods to be sent.
   @attribute ZipCode : The postal (or zip) code of customer's address is displayed.
   @attribute City : The city part of the address.
   @attribute State : The state used for the address.
   @attribute County : The county that the specified address belongs to.
   @attribute InCity : <<Value indicating if the customer is located inside the city limits, which means that city sales tax is calculated on tax lines for customer orders.
   Possible values are:
   TRUE - Customer's address is located within city limits.
   FALSE - Customer's address is located outside of city limits.>>
   @attribute Company : The ID of the company.
}
entity CustOrderLineAddress {
   crud = None;
   use attributes = CountryCode, Address1, Address2, Address3, Address4, Address5, Address6, ZipCode, City, State, County, InCity, Company;
}


@Override
@apidoc {
   @description : Overridden entity of CustOrderLineDiscount used for OrderStructure
   @attribute OrderNo : The number of the current customer order.
   @attribute LineNo : The line number of the received or created order line.
   @attribute RelNo : The number of each delivery, if the order or order line has partial deliveries.
   @attribute LineItemNo : The item number connected to the discount.
   @attribute DiscountNo : The identifier for the discount record.
   @attribute DiscountType : The unique identifier for each discount entered, identifying the kind of discount that is entered on an order line. This enables a detailed control of the different types of discounts that are used.
   @attribute Discount : Any applicable discount, expressed as a percentage.
   @attribute DiscountAmount : The line discount amount.
   @attribute DiscountSource : The origin of the discount on the selected discount line.
   @attribute CreatePartialSum : Indicate whether a discount should be calculated on the original price.
   @attribute DiscountLineNo : The discount line number.
   @attribute CalculationBasis : The price used as the basis for calculating the discount for the current discount line. The price which is used depends on whether the Create Partial Sum check box is selected.
   @attribute PriceCurrency : The applicable price found using the pricing logic, which searches agreements, price lists, sales part records, price breaks from quotations,condition code pricing.
   @attribute PriceBase : The sales price of the current discount line expressed in base currency, i.e., the currency used by your company. This price is inlucding tax.
   @attribute DiscountSourceId : The ID of the discount source, i.e., the ID of the campaign, agreement, price list, or customer from which the discount has been retrieved.
   @attribute PartLevel : <<The origin of the price expressed in part level. There are three alternatives:
   Part: The price entered on the part level (applicable when the price source is Agreement, Campaign, or Price List).
   Assortment: The price entered on the assortment node level (applicable when the price source is Agreement or Campaign).
   Unit: The price entered on the unit level (applicable when the price source is Price List).>>
   @attribute PartLevelId : The identity of the price part level. This represents the part number having the specified price when price part level equals Part. When the price part level equals Assortment, the value of this becomes the assortment ID followed by the assortment node (separated by '-'). This also represents the unit of the price when price part level equals Unit.
   @attribute CustomerLevel : The number of the customer hierarchy level. A customer hierarchy can have an unlimited number of levels. The hierarchy level number has to be an integer.
   @attribute CustomerLevelId : The number of the customer hierarchy level. A customer hierarchy can have an unlimited number of levels. The hierarchy level number has to be an integer.
   @attribute PriceCurrencyInclTax : The applicable price found using the pricing logic, which searches agreements, price lists, sales part records, price breaks from quotations,condition code pricing. THis price is including tax.
   @attribute PriceBaseInclTax : The sales price of the current discount line expressed in base currency, i.e., the currency used by your company. This price is inlucding tax.
}
entity CustOrderLineDiscount {
   crud = None;
   use attributes = DiscountType, Discount, DiscountAmount, DiscountSource, CreatePartialSum, DiscountLineNo, CalculationBasis,
   PriceCurrency, PriceBase, DiscountSourceId, PartLevel, PartLevelId, CustomerLevel, CustomerLevelId, PriceCurrencyInclTax, PriceBaseInclTax;
}


@Override
@apidoc {
   @description : description
   @attribute Company : This is a key and used for internal use
   @attribute SourceRefType : This is a key and used for internal use
   @attribute SourceRef1 : The number of the current customer order.
   @attribute SourceRef2 : The line number of the received or created order line.
   @attribute SourceRef3 : This is a key and used for internal use
   @attribute SourceRef4 : This is a key and used for internal use
   @attribute SourceRef5 : This is a key and used for internal use
   @attribute TaxItemId : This is a key and used for internal use
   @attribute TaxCode : The tax id for this customer order line.
   @attribute TaxPercentage : The tax percentage for this customer order line.
   @attribute TaxCurrAmount : The tax amount expressed in the order currency.
   @attribute TaxType : The type of the tax code.
}
entity SourceTaxItemOrder {
   crud = None;
   from = "source_tax_item_order";
   where = "source_ref5 = '*' AND source_ref_type_db = 'CUSTOMER_ORDER_LINE'";

   use attributes = TaxCode, TaxPercentage, TaxCurrAmount;

   attribute TaxType Text {
      fetch = "Statutory_Fee_API.Get_Fee_Type(COMPANY, TAX_CODE)";
      maxlength = 2000;
   }
}
// modelling support for  GetCustomerOrder action, ends

// modelling support for  GetCustomerOrders action, start
// This is a duplicate of the overriden entity DetailCustOrder , since the entity Cloning is NOT supporte we need to do this duplciate definition
@Override
@apidoc {
   @description : Overriden entity of CustomerOrder for OrderStructure
   @attribute OrderNo : The customer order number from which the goods are delivered to the customer.
   @attribute AuthorizeCode : The ID of the person responsible for coordinating the handling of the customer orders.
   @attribute BillAddrNo : The identity for the customer's document address to which documents will be sent.
   @attribute Company : The name or description of the company.
   @attribute CountryCode : The country code.
   @attribute CurrencyCode : The short code for the currency used.
   @attribute CustomerNo : The short name or identification number of the customer.
   @attribute CustomerNoPay : The ID of the customer to be invoiced instead of the ordering customer, when the customer order is invoiced to a company other than the customer's. For example, the parent company.
   @attribute CustomerNoPayAddrNo : The address identity of the customer to whom the invoice will be sent. An invoice customer is defined when the customer orders should be invoiced to a company other than the ordering customer's, e.g., the parent company.
   @attribute DeliveryTerms : The delivery term ID.
   @attribute DistrictCode : The code for the sales district.
   @attribute LanguageCode : The language code.
   @attribute MarketCode : The code for the sales market.
   @attribute OrderCode : This is the order code (this value is always O=Order).
   @attribute OrderId : The order type used for the current order. The order type controls the order flow for both manually-entered and generated orders by defining which steps will be automatically performed and which steps will be manually performed. If a shipment is created, the control of the progress is handed over from the order type to the shipment type.
   @attribute PayTermId : The payment terms of the invoice.
   @attribute PreAccountingId : Reference to Pre Accounting information.
   @attribute RegionCode : The code of the ordering region.
   @attribute SalesmanCode : The salesperson responsible for the prospect, customer, or a specific order.
   @attribute ShipAddrNo : The address to which the goods will be delivered.
   @attribute ShipViaCode : The ship via code identifies which delivery mode will be used for transporting goods from one node in a supply chain to another.
   @attribute AddrFlag : Indicates that the delivery address is a single occurrence address, i.e., a temporary delivery address.
   @attribute GrpDiscCalcFlag : Indicates if the sales part group discount has been calculated for the current order.
   @attribute CustomerPoNo : The customer's purchase order number.
   @attribute DateEntered : The date on which the record was created.
   @attribute DeliveryLeadtime : The external transport lead time when shipping parts. The external transport lead time is expressed in working days according to the external transport calendar.
   @attribute LabelNote : Used to mark the goods. The information originates from the customer and is communicated to the supplier, e.g., via the orders message. When the supplier delivers the goods back to the customer, the label note should be stated on the goods as a reference.
   @attribute NoteText : This is a free-text field. A note can be used as a means of forwarding information to someone who will process the object later.
   @attribute OrderConf : Show whether an order confirmation has been printed for the current customer order or not.
   @attribute OrderConfFlag : Determines whether an order confirmation will be printed for the current customer order.
   @attribute PackListFlag : Indicates if a delivery note should be printed for this customer order.
   @attribute PickListFlag : Determines whether an pick list will be printed for the current customer order.
   @attribute TaxLiability : The tax liability specification for the customer. Possible values for customers in all countries are Taxable and Exempt.
   @attribute DeliveryCountryCode : The country code.
   @attribute WantedDeliveryDate : The date on which the customer wants the order to be delivered at the customer's delivery address.
   @attribute InternalPoNo : The order number of the corresponding internal purchase order, for internal customer orders.
   @attribute RouteId : The ID of the customer order route. The ID works as a short code when working with customer order routes. A route contains information about route departure days and shipping times.
   @attribute AgreementId : The ID of the customer agreement referred to by the customer order header.
   @attribute ForwardAgentId : The name or ID of the forwarder that will handle the transportation.
   @attribute InternalDeliveryType : The delivery type is used to decide the type of transaction that will be created when an internal customer order is delivered.
   @attribute ExternalRef : A reference that is used to refer to the customer's system. It is used to keep track of the incoming data. For instance, if an event has been received from another system, the original identity is saved as an external identity.
   @attribute ProjectId : The project id connected to the customer order.
   @attribute StagedBilling : This value indicates that the order line uses staged billing.
   @attribute SmConnection : The value is Connected when the customer order, or any of its order lines, is connected to service requests in IFS Maintenance. Otherwise the value will be NotConnected.
   @attribute SchedulingConnection : Indicates if the customer order is connected to IFS/Customer Schedules.
   @attribute Priority : The priority of the order as defined on the customer order.
   @attribute IntrastatExempt : Indicates if goods sent to this address should be excluded from the Intrastat report. This is used for geographical locations that are situated in a country within the European Union (EU), but do not have to report Intrastat.
   @attribute AdditionalDiscount : The additional discount percentage entered for the whole order. The additional discount percentage is manually entered on the order header and never retrieved automatically.
   @attribute PayTermBaseDate : The date on which the invoice payment terms are based. This date is specified when the invoice is created.
   @attribute SummarizedSourceLines : This value indicates whether all sourced order lines originating from one order line should be shown in the order confirmation, or if the sourced order lines should be summarized. Sourced order lines with the same line number, delivery date, price, and discount will be summarized. Value can be YES or NO.
   @attribute CaseId : The unique identity of the case from where the customer order was created as a handover reference.
   @attribute TaskId : The identity of the case task from where the customer order was created as a handover reference.
   @attribute ConfirmDeliveries : Indicates that the deliveries created for a customer order has to be confirmed by the customer before the order can be invoiced.
   @attribute CheckSalesGrpDelivConf : Indicates if delivery confirmation setting on sales groups should be checked when adding order lines.
   @attribute DelayCogsToDelivConf : Indicates if the cost of the sold goods can be posted at delivery confirmation or not.
   @attribute CancelReason : The ID of the cancellation reason. The cancellation reason can optionally be used when, for instance, a customer order is cancelled.
   @attribute JinsuiInvoice : Indicates if the Jinsui processing functionality is activated for this customer order.
   @attribute BlockedReason : The message stating the reason why the order could not be released or reserved.
   @attribute SalesContractNo : The customer order header's sales contract number.
   @attribute ContractRevSeq : The revision number of the sales contract.
   @attribute ContractLineNo : The sales contract line number.
   @attribute ContractItemNo : The sales contract line item number.
   @attribute ReleasedFromCreditCheck : The blocked customer order is released and can be further processed and will not be blocked again in any of the steps where a credit check occurs.
   @attribute ProposedPrepaymentAmount : The amount required as a prepayment, expressed in the order currency. It cannot be larger than the customer order gross amount including charges.
   @attribute PrepaymentApproved : Indicates that the customer has agreed on paying the required prepayment amount. Value can be TRUE or FALSE.
   @attribute BackorderOption : Option which determines how the order will be treated when performing reservations, when creating the pick list and when reporting picking. This applies only to inventory sales parts.
   @attribute ExpectedPrepaymentDate : The date on which the prepayment is expected to be recieved from the customer.
   @attribute ShipmentCreation : This parameter specifies whether shipments should be created automatically when releasing a customer order or when creating pick list.
   @attribute UsePreShipDelNote : The value indicates that the material on the customer order will first be picked and transferred to a shipment inventory, and next, will be packed and delivered using a pre-shipment delivery note. The delivery note is printed before reporting the delivery
   @attribute PickInventoryType : Indicates if the parts processed in the order flow will be handled in shipment inventory when picked and before being delivered. Shipment inventory is used for gathering goods ready for dispatch.
   @attribute TaxIdNo : Displays the customer or supplier's Tax number for this address.
   @attribute TaxIdValidatedDate : The date the tax identity number was validated. This field will be empty if the number has not been validated or if the tax identity number is invalid. Note:This field will only be validated for EU member countries.
   @attribute ClassificationStandard : A unique identifier used to classify parts based on the nature of the industry.
   @attribute MsgSequenceNo : The sequence number used to monitor both outbox and inbox messages created for each message class.
   @attribute MsgVersionNo : The ID used by the application to distinguish among the different versions of messages belonging to a particular message class.
   @attribute CurrencyRateType : The code for the currency rate type.
   @attribute DelTermsLocation : The location referred to by the delivery terms. It is necessary for the delivery terms to define an exact location to be able to fully determine the extent of responsibility and the costs for transportation of goods. Depending on the delivery terms this can be, e.g., a port of shipment, port of destination or a named place.
   @attribute InternalRef : The reference of the corresponding internal purchase order, for internal customer orders.
   @attribute InternalPoLabelNote : Used to mark the goods. The information originates from the internal customer and is communicated to the supplier, e.g., via the orders message. When the supplier delivers the goods back to the customer, the label note should be stated on the goods as a reference. For this reason, the label note is included in the dispatch advice message and on printed delivery documents.
   @attribute SupplyCountry : The country from which the goods or services are to be delivered. The site country is default.
   @attribute RebateCustomer : The ID of an additional customer that is entitled to rebates, besides the ordering customer.
   @attribute FreightMapId :   The identity of the freight map. A freight map is a set of freight zones, defined per transport means (ship via code). This is used for freight calculations.
   @attribute ZoneId : The identity of the freight zone. Zones are used for freight calculations. Customer addresses are connected to different zones depending on the ship via code used for the transport.
   @attribute FreightPriceListNo : The identity of the freight price list valid for this customer order.
   @attribute SummarizedFreightCharges : Indicates that the order confirmation will show all the freight charge lines for the order, summarized by charge type.
   @attribute ApplyFixDelivFreight : Indicates that a fixed freight charge is applied irrespective of the weight or volume of the customer order lines.
   @attribute FixDelivFreight : The fixed delivery freight amount expressed in base currency, applied for each set of customer order lines that have the same delivery terms, zone ID of customer address, supply method, supplier, ship-via-code, and delivery date.
   @attribute PrintDeliveredLines : This value decides whether or not the delivery note will contain only the delivered lines, or all customer order lines, including those that have been delivered earlier, and those that have not been delivered at all. A not delivered line must have the same delivery address to be included.
   @attribute CustCalendarId : The customer calendar defining work days for the customer address. If no value is shown, an all day calendar will be used in calculations to check if the delivery day is a working day at the customer.
   @attribute ExtTransportCalendarId : The external transport calendar that defines work days for transport. If no value is shown, an all-day calendar will be used. The calendar will be used in lead time calculations which include external transport lead times.
   @attribute CustomsValueCurrency : The currency for the customs value entered for the customer order lines, if applicable. Note: if no currency is defined for the field, the base currency will be used to reflect the values on a pro forma invoice created as a customer order pro forma invoice or a shipment pro forma invoice.
   @attribute UsePriceInclTax : Determines the basis for tax calculation for IFS/Sales from a given customer.
   @attribute ShipmentType : The shipment type which is used to control the shipment flow. The shipment processes of your company determine how the shipment type should be defined to get a streamlined and effective process. The shipment type decides and controls e.g. If an event in the main flow of the shipment process should be executed automatically or manually, if and when an optional event should be executed etc.
   @attribute VendorNo : The identity of the supplier.
   @attribute BusinessOpportunityNo : The opportunity number, if the customer order was created from a business opportunity.
   @attribute PickingLeadtime : The picking time to be considered when shipping parts to the customer using the delivery mode specified by the ship-via code. The picking lead time is expressed in working days according to the distribution calendar of the site.
   @attribute FreeOfChgTaxPayParty : Defines how tax is paid for free of charge customer order lines. The following options are available. No Tax, Customer and Company.
   @attribute BlockedType :  Indicates the reason why this order was credit blocked. Blocked type can be Credit, Adv/Prepay, Manual, None.
   @attribute B2bOrder : This check box is selected if the customer order is initiated from a shopping cart in the B2B process.
   @attribute MainRepresentativeId : The ID of the main representative for this customer order.
   @attribute LimitSalesToAssortments : Indicates if the customer is limited to only sale of parts that are connected to the limited assortments.
   @attribute Site : The site ID in IFS Cloud. When specified it will retrieve order information only for orders connected to this specific site.
   @attribute CustomerRef : The customer's reference. When specified it will retrieve order information only for orders connected to this specific customer reference.
   @attribute OrderStatus : The status of the customer order in the order flow indicates what has been done and what the next activity should be. Different operations are available depending on the status. As the order moves through the order flow, the order status changes automatically.
   @attribute ErrorText : This attribute indicates if there are any errors connected to this operation.
}
entity CustOrderHeader using CustomerOrder {
   crud = None;
   use attributes = AuthorizeCode, BillAddrNo, Company, CountryCode, CurrencyCode, CustomerNo, CustomerNoPay,
   CustomerNoPayAddrNo, DeliveryTerms, DistrictCode, LanguageCode, MarketCode, OrderCode, OrderId,
   PayTermId, PreAccountingId, RegionCode, SalesmanCode, ShipAddrNo, ShipViaCode, AddrFlag,
   GrpDiscCalcFlag, CustomerPoNo, DateEntered, DeliveryLeadtime, LabelNote, NoteText, OrderConf, OrderConfFlag,
   PackListFlag, PickListFlag, TaxLiability, DeliveryCountryCode, WantedDeliveryDate, InternalPoNo, RouteId, AgreementId,
   ForwardAgentId, InternalDeliveryType, ExternalRef, ProjectId, StagedBilling, SmConnection, SchedulingConnection, Priority,
   IntrastatExempt, AdditionalDiscount, PayTermBaseDate, SummarizedSourceLines, CaseId, TaskId, ConfirmDeliveries,
   CheckSalesGrpDelivConf, DelayCogsToDelivConf, CancelReason, JinsuiInvoice, BlockedReason, SalesContractNo, ContractRevSeq,
   ContractLineNo, ContractItemNo, ReleasedFromCreditCheck, ProposedPrepaymentAmount, PrepaymentApproved, BackorderOption,
   ExpectedPrepaymentDate, ShipmentCreation, UsePreShipDelNote, PickInventoryType, TaxIdNo, TaxIdValidatedDate,
   ClassificationStandard, MsgSequenceNo, MsgVersionNo, CurrencyRateType, DelTermsLocation, InternalRef, InternalPoLabelNote,
   SupplyCountry, RebateCustomer, FreightMapId, ZoneId, FreightPriceListNo, SummarizedFreightCharges, ApplyFixDelivFreight,
   FixDelivFreight, PrintDeliveredLines, CustCalendarId, ExtTransportCalendarId, CustomsValueCurrency, UsePriceInclTax,
   ShipmentType, VendorNo, BusinessOpportunityNo, PickingLeadtime, FreeOfChgTaxPayParty,
   BlockedType, B2bOrder, MainRepresentativeId, LimitSalesToAssortments;

   attribute Contract Text {
      alias = "Site";
      maxlength = 5;
   }
   attribute CustRef Text {
      alias = "CustomerRef";
      maxlength = 100;
   }
   attribute OrderStatus Text {
      fetch = "state";
   }
   attribute ErrorText Text {
      maxlength = 20000;
      fetch = "''";
   }
}

// modelling support for  GetCustomerOrders action, start


//modelling support for startCreateCustomerOrder request structure, start
@Override
@apidoc {
   @description : Overridden CustomerOrder entity for CustomerOrderStructure
   @attribute OrderNo : The field displays the assigned identification number of the created customer order header.
   @attribute DeliveryTerms : This code determines the responsibility and costs for transportation of goods to a particualr address.
   @attribute LanguageCode : This is the language code. All order documents will be printed in this language.
   @attribute CustomerPoNo : The customer's purchase order number.
   @attribute InternalPoNo : The order number of the corresponding internal purchase order, for internal customer orders.
   @attribute AgreementId : This field refers to the identification of the customer agreement, if such an agreement has been connected to the order.
   @attribute ForwarderId : The ID of the forwarder who will handle the transportation.
   @attribute TaxLiability : The tax liability specification for the customer. Possible values for customers in all countries are TAX and EXEMPT. Additional values can be defined for certain countries.
   @attribute StagedBilling : This option indicates that the order line uses staged billing.
   @attribute Priority : The priority of the order as defined on the customer order.
   @attribute AdditionalDiscount : The additional discount percentage entered for the whole order.
   @attribute PayTermBaseDate : The date to be used as the base for payment term calculations to calculate the due date, i.e. Due Date = Payment Term Base Date + Number of Days in Payment Term. Unless the payment term base date is transferred from a customer order, it will, by default, be the same as the invoice date.
   @attribute CaseId : The unique identity of the case from where the customer order was created as a handover reference.
   @attribute TaskId : The identity of the case task from where the customer order was created as a handover reference.
   @attribute ConfirmDeliveries : This option indicates that the deliveries created for a customer order has to be confirmed by the customer before the order can be invoiced.
   @attribute SalesContractNo : The customer order header's sales contract number.
   @attribute ProposedPrepaymentAmount : The amount required as a prepayment, expressed in the order currency. It cannot be larger than the customer order gross amount including charges.
   @attribute TaxIdValidatedDate : The date the tax identity number was validated. This field will be empty if the number has not been validated or if the tax identity number is invalid. Note:This field will only be validated for EU member countries.
   @attribute ClassificationStandard : A unique identifier used to classify parts based on the nature of the industry.
   @attribute CurrencyRateType : The code for the currency rate type used for this project.
   @attribute DelTermsLocation : The location referred to by the delivery terms. It is necessary for the delivery terms to define an exact location to be able to fully determine the extent of responsibility and the costs for transportation of goods. Depending on the delivery terms this can be, e.g., a port of shipment, port of destination or a named place.
   @attribute InternalPoLabelNote : Used to mark the goods. The information originates from the internal customer and is communicated to the supplier, e.g., via the orders message.
   @attribute CustomsValueCurrency : The currency for the customs value entered for the customer order lines, if applicable. Note: if no currency is defined for the field, the base currency will be used to reflect the values on a pro forma invoice created as a customer order pro forma invoice or a shipment pro forma invoice.
   @attribute BusinessOpportunityNo : The opportunity number, if the customer order was created from a business opportunity.
   @attribute ShipmentType : <<The shipment type which is used to control the shipment flow. The shipment processes of your company determine how the shipment type should be defined to get a streamlined and effective process. The shipment type decides and controls the following:

If an event in the main flow of the shipment process should be executed automatically or manually.
If and when an optional event should be executed e.g., Print Handling Unit Labels, Print Shipment Delivery Note, Print Consignment Note.
How to consolidate source lines into shipments by defining additional consolidation parameters. For instance, you can define that source lines with the same source ref 1, planned ship date and route, are also restrictions to consider when attaching lines to an existing shipment.   If and when a shipment should be created automatically at order release or pick list creation.
If a shipment inventory should be used.
If the flow should be executed online or in the background.>>
   @attribute QuotationNo : The quotation number, if the customer order was created from a sales quotation.
   @attribute SummarizedFreightCharges : The value for this field is used to indicate that, all  freight charge lines for the order is summarized by charge type in the order confirmation.
   @attribute BackorderOption : <<This option determines on how the order will be treated when performing reservations, when creating the pick list and when reporting picking. This applies only to inventory sales parts. There are 4 options:
1. No Partial Deliveries Allowed
2. Incomplete Lines Not Allowed
3. Incomplete Packages Not Allowed
4. Allow Incomplete Lines and Packages >>
   @attribute ShipmentCreation : << This parameter specifies whether shipments should be created automatically when releasing a customer order or when creating pick list. The possible values are:

Not Automatic - No shipment will be created automatically.

At Order Release - The customer order lines will be connected to an appropriate shipment with the same deliver-to-customer, address, ship-via-code, delivery terms and shipment type when the order is released, or when a new line is added to an already released order. If an appropriate shipment does not exist, a new one will be created.

At Pick List Creation - The customer order lines will be connected to an appropriate shipment with the same deliver-to-customer, address, ship-via-code, delivery terms and shipment type when pick-list is created. If an appropriate shipment does not exist, a new one will be created.
>>
   @attribute UsePriceInclTax : The value of this option refers to the basis of the tax calculation. If this option is enabled, then the basis for tax calculation will be the price including tax. If not, the basis for tax calculation will be the price.
   @attribute SupplyCountry : The country from which the goods or services are to be delivered.
   @attribute Coordinator : The ID of the person responsible for handling this customer order.
   @attribute DocumentAddress : The identity for the customer's document address to which documents will be sent.
   @attribute Site : The short code for the site. If no value is specified, the customer order will be created in the default site connected to the logged in user in IFS Cloud.
   @attribute Country : The country code of the customer's delivery address to which the goods or services are delivered.
   @attribute Currency : The short code for the currency in which the customer is being charged.
   @attribute Customer : The short name or identification number of the customer.
   @attribute InvoiceCustomer : The ID of the customer to be invoiced instead of the ordering customer, when the customer order is invoiced to a company other than the customer's. For example, the parent company.
   @attribute AddrId : The address identity of the customer to whom the invoice will be sent. An invoice customer is defined when the customer orders should be invoiced to a company other than the ordering customer's, e.g., the parent company.
   @attribute InvoiceCustReference : The ID or name of the invoice customer's contact person.
   @attribute OrderingDistrict : The district connected to the customer who has placed the order.
   @attribute Market : The market connected to the customer who has placed the order.
   @attribute OrderType : The order type controls the order flow for both manually-entered and generated customer orders by defining which steps will be automatically performed and which steps will be manually performed. The order type also controls whether priority reservations and shipment inventory will be used. The company's business processes determine how the order types should be defined. If a shipment is created, the control of the progress is handed over from the order type to the shipment type. When specified, the priority will be given to the value on the request payload. If no value is defined for the site or customer in IFS Cloud, then this field requires a valid order type.
   @attribute PaymentTerms : The payment conditions of the invoice.
   @attribute OrderingRegion : The region connected to the customer who has placed the order.
   @attribute SalesPerson : The salesperson responsible for the prospect, customer, or a specific order.
   @attribute DeliveryAddress : The identity of the customer's delivery address to which the goods will be sent.
   @attribute ShipVia : The default delivery mode, used for transporting goods to the particular customer address.
   @attribute Reference : <<This column displays the customer's reference. If no value is passed, the following hiararchy will be used in fetching the referance within IFS Applications.
1. Look at the Customer/Address/Order Address Info tab for the document address.
2. If it is empty, take the primary contact for the customer address defined on the Customer/Contact tab.
3. If that is empty, take the primary contact for the customer in general defined on the Customer/Contact tab.
4. If it is empty, then it takes the value from the Reference field on the Customer/Order/General tab.
   >>
   @attribute ExternalTransportLeadtime : The external transport lead time when shipping parts. The external transport lead time is expressed in working days according to the external transport calendar.
   @attribute ExternalCoLabelNote : Used to mark the goods. The information originates from the customer and is communicated to the supplier, e.g., via the orders message.
   @attribute Notes : This is a free-text field up to 2000 characters, connected to customer order header.
   @attribute WantedDeliveryDateTime : The date on which the customer wants the order to be delivered at the customer's delivery address.
   @attribute Route : This field contains information about route departure days and shipping times. Route planning is used to coordinate frequent deliveries of goods to customers who order quantities smaller than a full cargo space. It is useful when having several customers with similar delivery requirements, located close enough together to be serviced by the same delivery route. Route planning is also used for the purpose of planning the load sequence of the cargo space, based on the delivery addresses along the route.
   @attribute ExternalId : A reference that is used to refer to the customer's system. It is used to keep track of the incoming data. For instance, if an event has been received from another system, the original identity is saved as an external identity.
   @attribute CheckSalesGroupSetting : This option is used to check delivery confirmation setting on sales groups when adding order lines.
   @attribute DelayCostOfGoodsSoldToDeliveryConfirmation : This option indicates if the cost of the sold goods can be posted at delivery confirmation or not.
   @attribute Revision : The revision number of the connected contract.
   @attribute LineNo : The line number of the connected contract.
   @attribute ItemNo : The line item number of the connected contract.
   @attribute UseTwoStagePicking : This option is used to determine on how the picking process is executed. If this option is enabled, material picking will be processed in two stages. This means that the material on the customer order will first be picked and transferred to a shipment inventory, and next, will be packed and delivered using a pre-shipment delivery note. The delivery note is printed before reporting the delivery.
   @attribute UseShipmentInventory : Shipment inventory is used for gathering goods ready for dispatch. If this option is enabled, the parts processed in the order flow will be handled in shipment inventory when picked and before being delivered.
   @attribute TaxId : The customer's tax identity number for this address. The value is normally retrieved from the document address of the ordering customer but may also be received from customers using EDI or other means of electronic communication.
   @attribute InternalPoRef : The reference of the corresponding internal purchase order, for internal customer orders.
   @attribute AddRebateCustomer : The ID of an additional customer that is entitled to rebates, besides the ordering customer.
   @attribute FreightMap : The identity of the freight map. A freight map is a set of freight zones, defined per transport means (ship via code) and is used for freight calculations.
   @attribute FreightZone : The identity of the freight zone that is used for freight calculations.
   @attribute FreightPriceList : The identity of the freight price list. It can be alphanumeric.
   @attribute ApplyFixedDeliveryFreight : The value for this field is used to indicate that, a fixed freight charge is applied irrespective of the weight or volume of the customer order lines.
   @attribute FixedDeliveryFreightAmt : The fixed amount of the freight charge expressed in base currency for the shipment, irrespective of the weight or volume of the shipment's content.
   @attribute CustomerCalendar : The customer calendar refers to the working days for the customer address.
   @attribute ExternalTransportCalendar : The external transport calendar defining work days for the transport.
   @attribute DeliveryFromSupplier : The identity of the supplier who delivers the items specified on the order line in a  Internal Purchase Direct or Purchase Direct flow.
   @attribute TaxPayingPartyForFoc : <<Defines how tax is paid for free of charge customer order lines. The following options are available.

No Tax - Tax is not applied for free of charge customer order lines.
Customer - Tax should be paid by the customer for free of charge customer order lines.
Company - Tax should not be paid by the customer for free of charge customer order lines instead company will bear the cost of tax amount.
   >>
   @attribute MainRepresentative : The user responsible for the customer order.
   @attribute SingleOccurance : The value in this field indicates that the delivery address is a single occurrence address, i.e., a temporary delivery address.
   @attribute Info : An attribute used for internal use.
   @navigation Lines : Include order lines that connects to a specific customer order record in IFS Cloud.
   @navigation Charges : Include charge lines that connects to a specific customer order record in IFS Cloud.
   @navigation Attributes : Include information related to custom fields created for a customer order in IFS Cloud.
   @navigation DeliverAddress : This represents the delivery address of the specific customer order.
}
entity CustOrder using CustomerOrder {
   crud = None;
   use attributes = CustomerPoNo, InternalPoNo, AgreementId, Priority, AdditionalDiscount, PayTermBaseDate, CaseId, TaskId,
   ConfirmDeliveries, SalesContractNo, TaxIdValidatedDate, ClassificationStandard, CurrencyRateType, DelTermsLocation, InternalPoLabelNote,
   CustomsValueCurrency, BusinessOpportunityNo, QuotationNo, UsePriceInclTax;

   attribute CustomerNo Text {
      alias = "Customer";
      maxlength = 20;
      required = [true];
   }
   attribute OrderId Text {
      alias = "OrderType";
      maxlength = 3;
      required = [true];
   }
   attribute AuthorizeCode Text {
      alias = "Coordinator";
      maxlength = 20;
   }
   attribute LanguageCode Text {
      maxlength = 2;
      required = [false];
   }
   attribute DeliveryTerms Text {
      maxlength = 5;
      required = [false];
   }
   attribute TaxLiability Text {
      maxlength = 20;
      required = [false];
   }
   attribute ConfirmDeliveries Boolean("TRUE", "FALSE") {
      required = [false];
   }
   attribute ProposedPrepaymentAmount Number {
      required = [false];
   }
   attribute BillAddrNo Text {
      alias = "DocumentAddress";
      maxlength = 50;
   }
   attribute Contract Text {
      alias = "Site";
      maxlength = 5;
   }
   attribute CountryCode Text {
      alias = "Country";
      maxlength = 2;
   }
   attribute SupplyCountry Text {
      maxlength = 2;
      required = [false];
   }
   attribute ForwardAgentId Text {
      alias = "ForwarderId";
      maxlength = 20;
   }
   attribute CurrencyCode Text {
      alias = "Currency";
      maxlength = 3;
   }
   attribute UsePriceInclTax Boolean("TRUE", "FALSE") {
      required = [false];
   }
   attribute CustomerNoPay Text {
      alias = "InvoiceCustomer";
      maxlength = 20;
   }
   attribute CustomerNoPayAddrNo Text {
      alias = "AddrId";
      maxlength = 50;
   }
   attribute CustomerNoPayRef Text {
      alias = "InvoiceCustReference";
      maxlength = 30;
   }
   attribute DistrictCode Text {
      alias = "OrderingDistrict";
      maxlength = 10;
   }
   attribute MarketCode Text {
      alias = "Market";
      maxlength = 10;
   }
   attribute PayTermId Text {
      alias = "PaymentTerms";
      maxlength = 20;
   }
   attribute RegionCode Text {
      alias = "OrderingRegion";
      maxlength = 10;
   }
   attribute SalesmanCode Text {
      alias = "SalesPerson";
      maxlength = 20;
   }
   attribute ShipAddrNo Text {
      alias = "DeliveryAddress";
      maxlength = 50;
   }
   attribute ShipViaCode Text {
      alias = "ShipVia";
      maxlength = 3;
   }
   attribute ShipmentType Text {
      maxlength = 3;
      required = [false];
   }
   attribute CustRef Text {
      alias = "Reference";
      maxlength = 30;
   }
   attribute DeliveryLeadtime Number {
      alias = "ExternalTransportLeadtime";
   }
   attribute LabelNote Text {
      alias = "ExternalCoLabelNote";
      maxlength = 50;
   }
   attribute NoteText Text {
      alias = "Notes";
      maxlength = 2000;
   }
   attribute WantedDeliveryDate Timestamp {
      alias = "WantedDeliveryDateTime";
   }
   attribute RouteId Text {
      alias = "Route";
      maxlength = 12;
   }
   attribute ExternalRef Text {
      alias = "ExternalId";
      maxlength = 25;
   }
   attribute CheckSalesGrpDelivConf Boolean("TRUE", "FALSE") {
      fetch = "check_sales_grp_deliv_conf_db";
      alias = "CheckSalesGroupSetting";
      maxlength = 20;
   }
   attribute DelayCogsToDelivConf  Boolean("TRUE", "FALSE") {
      fetch = "delay_cogs_to_deliv_conf_db";
      alias = "DelayCostOfGoodsSoldToDeliveryConfirmation";
      maxlength = 20;
   }
   attribute ContractRevSeq Number {
      alias = "Revision";
   }
   attribute ContractLineNo Number {
      alias = "LineNo";
   }
   attribute ContractItemNo Number {
      alias = "ItemNo";
   }
   attribute UsePreShipDelNote  Boolean("TRUE", "FALSE") {
      fetch = "use_pre_ship_del_note_db";
      alias = "UseTwoStagePicking";
      maxlength = 20;
   }
   attribute PickInventoryType Enumeration(PickInventoryType) {
      alias = "UseShipmentInventory";
      maxlength = 20;
   }
   attribute TaxIdNo Text {
      alias = "TaxId";
      maxlength = 50;
   }
   attribute InternalRef Text {
      alias = "InternalPoRef";
      maxlength = 30;
   }
   attribute RebateCustomer Text {
      alias = "AddRebateCustomer";
      maxlength = 20;
   }
   attribute FreightMapId Text {
      alias = "FreightMap";
      maxlength = 15;
   }
   attribute ZoneId Text {
      alias = "FreightZone";
      maxlength = 15;
   }
   attribute FreightPriceListNo Text {
      alias = "FreightPriceList";
      maxlength = 10;
   }
   attribute ApplyFixDelivFreight Boolean("TRUE", "FALSE") {
      fetch = "apply_fix_deliv_freight_db";
      alias = "ApplyFixedDeliveryFreight";
      maxlength = 20;
   }
   attribute FixDelivFreight Number {
      alias = "FixedDeliveryFreightAmt";
   }
   attribute CustCalendarId Text {
      alias = "CustomerCalendar";
      maxlength = 10;
   }
   attribute ExtTransportCalendarId Text {
      alias = "ExternalTransportCalendar";
      maxlength = 10;
   }
   attribute VendorNo Text {
      alias = "DeliveryFromSupplier";
      maxlength = 20;
   }
   attribute FreeOfChgTaxPayParty Enumeration(TaxPayingParty) {
      alias = "TaxPayingPartyForFoc";
      maxlength = 20;
   }
   attribute MainRepresentativeId Text {
      alias = "MainRepresentative";
      maxlength = 20;
   }
   attribute AddrFlag Enumeration(GenYesNo) {
      alias = "SingleOccurance";
      maxlength = 1;
   }
   attribute Info Text {
      fetch = "''";
      maxlength = 4000;
   }
   attribute StagedBilling Enumeration(StagedBillingType) {
      required = [false];
   }
   attribute BackorderOption Enumeration(CustomerBackorderOption) {
      required = [false];
   }
   attribute ShipmentCreation Enumeration(ShipmentCreation.CustomerOrder) {
      required = [false];
   }
   attribute SummarizedFreightCharges Enumeration(GenYesNo) {
      required = [false];
   }

   // arrays and aggregates
   array Lines(OrderNo) to CustOrderLine(OrderNo);
   array Charges(OrderNo) to OrderCharge(OrderNo);
   reference DeliverAddress(OrderNo) to HeaderAddress(OrderNo);
   array Attributes(OrderNo) to HeaderAttribute(OrderNo);
}

@Override
@apidoc {
   @description : Overridden CustomerOrderLine entity for CustomerOrderStructure
   @attribute OrderNo : An attribute used for internal use
   @attribute LineNo : An attribute used for internal use
   @attribute RelNo : An attribute used for internal use
   @attribute LineItemNo : An attribute used for internal use
   @attribute Discount : The line discount percentage.
   @attribute WantedDeliveryDate : The date on which the customer wants the order to be delivered at the customer's delivery address.
   @attribute DeliveryType : The delivery type which defines the necessary data on the invoices used for trade within the European Union (EU).
   @attribute TaxCode : The tax code that represents the tax percentage applied to the line.
   @attribute CustomerPartNo : The customer's part number corresponding to the sales part number in IFS applications.
   @attribute CustomerPartBuyQty : The ordered quantity, expressed in the customer's unit of measure.
   @attribute PriceListNo : In this field, the ID number of the price list is displayed.
   @attribute DeliveryTerms : This code determines the responsibility and costs for the transportation of goods.
   @attribute DistrictCode : The code for the sales district.
   @attribute RegionCode : The code for the region.
   @attribute TaxLiability : The tax liability specification for the customer. Possible values for customers in all countries are Taxable and Exempt. Additional values can be defined for certain countries.
   @attribute PriceFreeze : This value controls the price/currency recalculation during a line quantity change. I the value is true, the price/currency will not be recalculated even though the quantity changes. This is useful when a price has already been agreed upon between you and the customer, and you do not want the recalculation of calculated price/currency to change from the agreed price.
   @attribute DockCode : Specifies detailed delivery information and defines an area (dock) where the parts are to be delivered, i.e., a cargo bay. If the customer order line is derived from a customer schedule, this information is retrieved from the customer schedule line.
   @attribute SubDockCode : Specifies detailed delivery information and defines an area within the dock where the parts are to be delivered, i.e., a gate in the cargo bay. If the customer order line is derived from a customer schedule, this information is retrieved from the customer schedule line.
   @attribute ConditionCode : This field refers to the condition code specified for the part. It is only applicable for codition code enabled serial and lot/batch parts.
   @attribute AdditionalDiscount : The additional discount percentage entered for the whole order.
   @attribute PartOwnership : Identifies the type of ownership for the parts.
   @attribute OwningCustomerNo : The name of the owning customer, if the ownership type is Customer Owned.
   @attribute InputQty : The quantity of the sales part, expressed in the input unit of measure (UoM). The corresponding sales UoM will be displayed in the Sales Quantity field.
   @attribute CustomerPoLineNo : The line number of customer's purchase order. If a purchase order has several purchase order lines with identical part numbers, all lines receive the same line number. On the other hand, if a purchase order has several purchase order lines with different part numbers, each purchase order line is assigned its own line number, e.g., 1 for the first, 2 for the second, etc.
   @attribute CustomerPoRelNo : The release number of the line, in the customer's purchase order. If a purchase order has several purchase order lines with identical part numbers, all lines receive the same line number but a different release number. On the other hand, if a purchase order has several purchase order lines with different part numbers, each purchase order line is assigned its own line number, e.g., 1 for the first, 2 for the second, etc.
   @attribute DelTermsLocation : The location referred to by the delivery terms. It is necessary for the delivery terms to define an exact location to be able to fully determine the extent of responsibility and the costs for transportation of goods. Depending on the delivery terms this can be, e.g., a port of shipment, port of destination or a named place.
   @attribute ReceivingAdviceType : <<
   A receiving advice can be of two different types. It specifies which type is used for the particular order line or whether both types are used.

Do Not Use: The receiving advice is not used at all.

Arrived Goods: Only the receiving advice of type Arrived Goods is expected from the customer.

Receiving advice of type Arrived Goods will perform the delivery confirmation.

Approved Goods: Only the receiving advice of type Approved Goods is expected from the customer.
   Receiving advice of type Approved Goods will perform the delivery confirmation.

Arrived and Approved Goods: Both receiving advices of types Arrived Goods and Approved Goods are expected from the customer. Receiving advice of type Approved Goods will perform the delivery confirmation.>>
   @attribute RebateBuilder : If the value in this field is true, it indicates that the customer order line will generate rebates once invoiced.
   @attribute FreightFree : The value in this field is used for the calculation of freight charges. Its purpose is to adjust the real net weight or net volume for freight calculation purposes, e.g. large items with a light overall weight can be charged according to a higher weight than its real weight.
   @attribute CustomsValue : The customs value refers to the declared price of a sales item used at customs in trade for deliveries made between countries/states. The value is displayed for one unit in the customer's unit of measure, and reflects the base currency, if no customs value currency is defined in the customer order header.
   @attribute AbnormalDemand : The value in this field indicates that the quantity sold on this customer order line differs significantly from the normal. By indicating a customer order line as being an abnormal demand, that demand is excluded from calculations for demand deviation and inventory part classification.
   @attribute ShipmentType : <<The shipment type which is used to control the shipment flow. The shipment processes of your company determine how the shipment type should be defined to get a streamlined and effective process. The shipment type decides and controls the following:

If an event in the main flow of the shipment process should be executed automatically or manually.
If and when an optional event should be executed e.g., Print Handling Unit Labels, Print Shipment Delivery Note, Print Consignment Note.
How to consolidate source lines into shipments by defining additional consolidation parameters. For instance, you can define that source lines with the same source ref 1, planned ship date and route, are also restrictions to consider when attaching lines to an existing shipment.
If and when a shipment should be created automatically at order release or pick list creation.
If a shipment inventory should be used.
If the flow should be executed online or in the background.>>
   @attribute PackingInstructionId : The ID of the packing instruction. This instruction describes how to pack goods in the shipment process.
   @attribute FreeOfCharge : This value indicates if the customer order line should be free of charge. If this option is enabled, price will be set to zero.
   @attribute SupplyCode : The supply code specifies how a part should be supplied i.e. Invent Order, Int Purch Trans, Int Purch Dir etc.
   @attribute SalesPartNo : This field refers to the identity number of the sales part the customer desires to purchase.
   @attribute PriceBase : The sales price of the current part expressed in base currency.
   @attribute PriceInclTaxBase : The price including tax, calculated using the tax code and price of the part; expressed in the company's base currency.
   @attribute SalesQty : The ordered quantity, expressed in sales unit of measure.
   @attribute Note : This is a free-text field up to 2000 characters, connected to customer order line.
   @attribute PriceCurr : This field refers to the price per unit in the customer's currency
   @attribute PriceInclTaxCurr : The price including tax, expressed in the order currency. This is only relevant when the customer is tax liable.
   @attribute Supplier : The identification number of the internal or external supplier.
   @attribute TaxClass : The tax class that will be used to derive a tax code for calculating tax for the sales part.
   @attribute ClosingTolerance : The closing tolerance for the customer order line. The customer order line will automatically be closed after delivery if the difference between the quantity ordered and the quantity delivered is within the specified close tolerance. For instance, if the closing tolerance is set to 10% the order line will be closed if at least 90% of the ordered quantity has been delivered.
   @attribute SingleOccurance : Indicates that the delivery address is a single occurrence address, i.e., a temporary delivery address.
   @attribute DeliveryAddress : The identity of the customer's delivery address to which the goods will be sent.
   @attribute Route : A route contains information about route departure days and shipping times. Route planning is used to coordinate frequent deliveries of goods to customers who order quantities smaller than a full cargo space. It is useful when having several customers with similar delivery requirements, located close enough together to be serviced by the same delivery route.
   @attribute ShipVia : The default delivery mode, used for transporting goods to the particular customer address. Usually, the ship via code is retrieved from the appropriate supply chain parameters within IFS Applications.
   @attribute ReferanceId : The customer-provided reference ID for a specific demand. If the customer order line is derived from a customer schedule, the reference ID is also retrieved from the customer schedule.
   @attribute PriceEffectiveDate : The date which will be used when retrieving price and discount from a price list or an agreement.
   @attribute InputUom : The input unit of measure (UoM) that is used to enter a quantity of the sales part.
   @attribute ShipmentCreationMethod : << This parameter specifies whether shipments should be created automatically when releasing a customer order or when creating pick list. The possible values are:

Not Automatic - No shipment will be created automatically.

At Order Release - The customer order lines will be connected to an appropriate shipment with the same deliver-to-customer, address, ship-via-code, delivery terms and shipment type when the order is released, or when a new line is added to an already released order. If an appropriate shipment does not exist, a new one will be created.

At Pick List Creation - The customer order lines will be connected to an appropriate shipment with the same deliver-to-customer, address, ship-via-code, delivery terms and shipment type when pick-list is created. If an appropriate shipment does not exist, a new one will be created.
 >>
   @attribute InvoiceBlocked : It indicates the order lines which are blocked for invoicing.
   @attribute TaxId : The customer's tax identity number for this address. The value is normally retrieved from the document address of the ordering customer but may also be received from customers using EDI or other means of electronic communication.
   @attribute NetPrice : If this option is enabled, it indicates that the price fetched should not be used in combination with any discounts.
   @attribute FreightMap : The identity of the freight map. A freight map is a set of freight zones, defined per transport means (ship via code) and is used for freight calculations.
   @attribute FreightZone : The identity of the freight zone that is used for freight calulations.
   @attribute FreightPriceList : The identity of the freight price list. It can be alphanumeric.
   @attribute TaxBasisForFocCurr : Tax will be calculated based on this value for free of charge lines. The default value is the cost of the part multiplied by the quantity.
   @attribute Info : An attribute used for internal use.
   @navigation LineCharges : Include charge lines that connects to a specific customer order line in IFS Cloud.
   @navigation LineAttributes : Include information related to custom field created for the connected customer order lines in IFS Cloud.
   @navigation Discounts : Include discount information connected to the specific customer order line.
   @navigation TaxLines :  Include tax information connected to the specific customer order line.
   @navigation LineAddress : This represents the delivery address of the specific customer order line.
}
entity CustOrderLine using CustomerOrderLine {
   crud = None;
   use attributes = DeliveryType, TaxCode, CustomerPartNo, CustomerPartBuyQty, PriceListNo, DistrictCode, RegionCode, DockCode,
   SubDockCode, ConditionCode, AdditionalDiscount, OwningCustomerNo, InputQty, CustomerPoLineNo, CustomerPoRelNo, DelTermsLocation,
   RebateBuilder, FreightFree, CustomsValue, AbnormalDemand, PackingInstructionId, FreeOfCharge;

   attribute CatalogNo Text {
      alias = "SalesPartNo";
      maxlength = 25;
      required = [true];
   }
   attribute BaseSaleUnitPrice Number {
      alias = "PriceBase";
   }
   attribute BaseUnitPriceInclTax Number {
      alias = "PriceInclTaxBase";
   }
   attribute BuyQtyDue Number {
      alias = "SalesQty";
      required = [true];
   }
   attribute NoteText Text {
      alias = "Note";
      maxlength = 2000;
   }
   attribute SaleUnitPrice Number {
      alias = "PriceCurr";
   }
   attribute UnitPriceInclTax Number {
      alias = "PriceInclTaxCurr";
   }
   attribute Discount Number {
      required = [false];
   }
   attribute WantedDeliveryDate Timestamp {
      required = [false];
   }
   attribute DeliveryTerms Text {
      maxlength = 5;
      required = [false];
   }
   attribute VendorNo Text {
      alias = "Supplier";
      maxlength = 20;
   }
   attribute TaxClassId Text {
      alias = "TaxClass";
      maxlength = 20;
   }
   attribute TaxLiability Text {
      maxlength = 20;
      required = [false];
   }
   attribute CloseTolerance Number {
      alias = "ClosingTolerance";
   }
   attribute AddrFlag Enumeration(GenYesNo) {
      alias = "SingleOccurance";
      maxlength = 1;
   }
   attribute ShipAddrNo Text {
      alias = "DeliveryAddress";
      maxlength = 50;
   }
   attribute RouteId Text {
      alias = "Route";
      maxlength = 12;
   }
   attribute ShipViaCode Text {
      alias = "ShipVia";
      maxlength = 3;
   }
   attribute RefId Text {
      alias = "ReferanceId";
      maxlength = 35;
   }
   attribute PriceEffectivityDate Date {
      alias = "PriceEffectiveDate";
   }
   attribute InputUnitMeas Text {
      alias = "InputUom";
      maxlength = 30;
   }
   attribute ShipmentCreation Enumeration(ShipmentCreation.CustomerOrder) {
      alias = "ShipmentCreationMethod";
      maxlength = 20;
   }
   attribute ShipmentType Text {
      maxlength = 3;
      required = [false];
   }
   attribute BlockedForInvoicing  Boolean("TRUE", "FALSE") {
      fetch = "blocked_for_invoicing_db";
      alias = "InvoiceBlocked";
      maxlength = 20;
   }
   attribute TaxIdNo Text {
      alias = "TaxId";
      maxlength = 50;
   }
   attribute PriceSourceNetPrice  Boolean("TRUE", "FALSE") {
      fetch = "price_source_net_price_db";
      alias = "NetPrice";
      maxlength = 20;
   }
   attribute FreightMapId Text {
      alias = "FreightMap";
      maxlength = 15;
   }
   attribute ZoneId Text {
      alias = "FreightZone";
      maxlength = 15;
   }
   attribute FreightPriceListNo Text {
      alias = "FreightPriceList";
      maxlength = 10;
   }
   attribute FreeOfChargeTaxBasis Number {
      alias = "TaxBasisForFocCurr";
   }
   attribute RebateBuilder Boolean("TRUE", "FALSE") {
      required = [false];
   }
   attribute FreightFree Boolean("TRUE", "FALSE") {
      required = [false];
   }
   attribute AbnormalDemand Boolean("TRUE", "FALSE") {
      required = [false];
   }
   attribute FreeOfCharge Boolean("TRUE", "FALSE") {
      required = [false];
   }
   attribute SupplyCode Enumeration(OrderSupplyType) {
      required = [false];
   }
   attribute PriceFreeze Enumeration(FreezeFlag) {
      required = [false];
   }
   attribute PartOwnership Enumeration(PartOwnership) {
      required = [false];
   }
   attribute ReceivingAdviceType Enumeration(ReceivingAdviceType) {
      required = [false];
   }
   attribute Info Text {
      fetch = "''";
      maxlength = 4000;
   }

   // Line arrays and aggregates
   array LineCharges(OrderNo, LineNo, RelNo, LineItemNo) to LineOrderCharge(OrderNo, LineNo, RelNo, LineItemNo);
   reference LineAddress(OrderNo, LineNo, RelNo, LineItemNo) to LineAddress(OrderNo, LineNo, RelNo, LineItemNo);
   array LineAttributes(OrderNo, LineNo, RelNo, LineItemNo) to LineAttribute(OrderNo, LineNo, RelNo, LineItemNo);

   array Discounts(OrderNo, LineNo, RelNo, LineItemNo) to CustOrdLineDiscount(OrderNo, LineNo, RelNo, LineItemNo);
   array TaxLines(OrderNo, LineNo, RelNo, LineItemNo) to SourceTaxItemOrd(SourceRef1, SourceRef2, SourceRef3, SourceRef4);
}

@Override
@apidoc {
   @description : Overridden CustomerOrderCharge entity for CustomerOrderStructure. Stores order connected charge information.
   @attribute OrderNo : An attribute used for internal use
   @attribute SequenceNo : An attribute used for internal use
   @attribute ChargeType : The charge type that is used when charging for freights for the specified ship via code. It can be for a fixed amount or charge per unit. A charge type is required when connecting a charge to the order.
   @attribute ChargeCost : The cost for the charge in base currency.
   @attribute Collect : Indicates if the charge is not to be invoiced. It is mandatory to specify a shipment ID for every collect charge.
   @attribute UnitCharge : It indicates, if the charge amount refers to one single unit of the sales part.
   @attribute Charge : The sales charge, expressed as a percentage. This value is entered as an alternative to the charge price.
   @attribute ChargeCostPercent : The sales charge cost, expressed as a percentage. This value is entered as an alternative to the charge cost. You cannot specify the charge cost and the charge cost percentage together and vice versa.
   @attribute DealId : The identification number of the sales promotion deal.
   @attribute ShipmentId : The ID of the shipment.
   @attribute ChargePriceCurr : The charge price, expressed in the customer order currency.
   @attribute ChrgPriceInclTaxCurr : The charge price including tax, expressed in the customer's currency.
   @attribute ChargePriceBase : The charge price expressed in base currency.
   @attribute ChrgPriceInclTaxBase : The charge price including tax, expressed in the customer's currency.
   @attribute ChargeQty : The number of charges to be used on the customer order.
   @attribute PriceListNo : The identity of the freight price list. It can be alphanumeric.
   @attribute ChargePercentBasisCurr : The amount expressed in the order currency, which is the calculation basis for the charge percentage or the charge cost percentage. If the charge line is connected to an order line, the value in this field is equal to the net amount of the order line. If not, this value is equal to the total net amount of the order. However, if a unit charge is applied, the value in this field is equal to the net amount of the connected order line divided by the quantity. If the Use Price Incl Tax option is enabled in the Customer Order/Misc Order Info tab and if the charge line is also connected to an order line, then the value in this field is equal to the gross amount of the order line. Otherwise, this value is equal to the total gross amount of the order. However, if a unit charge is applied, the value in this field is equal to the gross amount of the connected order line divided by the price quantity.
   @attribute Campaign : The identification number of the connected campaign.
   @attribute Info : An attribute used for internal use
}
entity OrderCharge using CustomerOrderCharge {
   crud = None;
   use attributes = ChargeCost, Charge, UnitCharge, ChargeCostPercent, DealId, ShipmentId;

   attribute ChargeType Text {
      maxlength = 25;
      required = [false];
   }
   attribute ChargeAmount Number {
      alias = "ChargePriceCurr";
   }
   attribute ChargeAmountInclTax Number {
      alias = "ChrgPriceInclTaxCurr";
   }
   attribute BaseChargeAmount Number {
      alias = "ChargePriceBase";
   }
   attribute BaseChargeAmtInclTax Number {
      alias = "ChrgPriceInclTaxBase";
   }
   attribute ChargedQty Number {
      alias = "ChargeQty";
   }
   attribute UnitCharge Boolean("TRUE", "FALSE") {
      required = [false];
   }
   attribute ChargePriceListNo Text {
      alias = "PriceListNo";
      maxlength = 10;
   }
   attribute ChargePercentBasis Number {
      alias = "ChargePercentBasisCurr";
   }
   attribute CampaignId Number {
      alias = "Campaign";
   }
   attribute Collect Enumeration(Collect) {
      required = [false];
   }
   attribute Info Text {
      fetch = "''";
      maxlength = 4000;
   }
}

@Override
@apidoc {
   @description : Overridden CustomerOrderCharge entity for CustomerOrderStructure. Stores order line connected charge information.
   @attribute OrderNo : An attribute used for internal use
   @attribute SequenceNo : An attribute used for internal use
   @attribute LineNo : An attribute used for internal use
   @attribute RelNo : An attribute used for internal use
   @attribute LineItemNo : An attribute used for internal use
   @attribute ChargeType : The charge type that is used when charging for freights for the specified ship via code. It can be for a fixed amount or charge per unit. A Charge type is required when connecting a charge to the order line.
   @attribute ChargeCost : The cost for the charge in base currency.
   @attribute Collect : Indicates if the charge is not to be invoiced. It is mandatory to specify a shipment ID for every collect charge.
   @attribute UnitCharge : It indicates, if the charge amount refers to one single unit of the sales part.
   @attribute Charge : The sales charge, expressed as a percentage. This value is entered as an alternative to the charge price.
   @attribute ChargeCostPercent : The sales charge cost, expressed as a percentage. This value is entered as an alternative to the charge cost. You cannot specify the charge cost and the charge cost percentage together and vice versa.
   @attribute DealId : The identification number of the sales promotion deal.
   @attribute ShipmentId : The ID of the shipment.
   @attribute ChargePriceCurr : The charge price, expressed in the customer order currency.
   @attribute ChrgPriceInclTaxCurr : The charge price including tax, expressed in the customer's currency.
   @attribute ChargePriceBase : The charge price expressed in base currency.
   @attribute ChrgPriceInclTaxBase : The charge price including tax, expressed in the customer's currency.
   @attribute ChargeQty : The number of charges to be used on the customer order.
   @attribute PriceListNo : The identity of the freight price list. It can be alphanumeric.
   @attribute ChargePercentBasisCurr : The amount expressed in the order currency, which is the calculation basis for the charge percentage or the charge cost percentage. If the charge line is connected to an order line, the value in this field is equal to the net amount of the order line. If not, this value is equal to the total net amount of the order. However, if a unit charge is applied, the value in this field is equal to the net amount of the connected order line divided by the quantity. If the Use Price Incl Tax option is enabled in the Customer Order/Misc Order Info tab and if the charge line is also connected to an order line, then the value in this field is equal to the gross amount of the order line. Otherwise, this value is equal to the total gross amount of the order. However, if a unit charge is applied, the value in this field is equal to the gross amount of the connected order line divided by the price quantity.
   @attribute Campaign : The identification number of the connected campaign.
   @attribute Info : An attribute used for internal use
}
entity LineOrderCharge using CustomerOrderCharge {
   crud = None;
   use attributes = LineNo, RelNo, LineItemNo, ChargeCost, UnitCharge, Charge, ChargeCostPercent, DealId, ShipmentId;

   attribute ChargeType Text {
      maxlength = 25;
      required = [false];
   }
   attribute ChargeAmount Number {
      alias = "ChargePriceCurr";
   }
   attribute ChargeAmountInclTax Number {
      alias = "ChrgPriceInclTaxCurr";
   }
   attribute BaseChargeAmount Number {
      alias = "ChargePriceBase";
   }
   attribute BaseChargeAmtInclTax Number {
      alias = "ChrgPriceInclTaxBase";
   }
   attribute ChargedQty Number {
      alias = "ChargeQty";
   }
   attribute UnitCharge Boolean("TRUE", "FALSE") {
      required = [false];
   }
   attribute ChargePriceListNo Text {
      alias = "PriceListNo";
      maxlength = 10;
   }
   attribute ChargePercentBasis Number {
      alias = "ChargePercentBasisCurr";
   }
   attribute CampaignId Number {
      alias = "Campaign";
   }
   attribute Collect Enumeration(Collect) {
      required = [false];
   }
   attribute Info Text {
      fetch = "''";
      maxlength = 4000;
   }
}

@Override
@apidoc {
   @description : Overridden CustomerOrderAddress entity to store address of the cutomer order when address is Single Occurance.
   @attribute OrderNo : An attribute used for internal use.
   @attribute Address1 : The first line of the delivery address.
   @attribute Address2 : The second line of the delivery address. Extra address field.
   @attribute Address3 : This is an additional text field in which the user can input delivery address information. This also shows the Address 3 information connected to the default Document Address.
   @attribute Address4 : This is an additional text field in which the user can input delivery address information. This also shows the Address 4 information connected to the default Document Address.
   @attribute Address5 : This is an additional text field in which the user can input delivery address information. This also shows the Address 5 information connected to the default Document Address.
   @attribute Address6 : This is an additional text field in which the user can input delivery address information. This also shows the Address 6 information connected to the default Document Address.
   @attribute ZipCode : Displays the Zip Code connected to the selected delivery address ID.
   @attribute City : The city part of the address.
   @attribute State : The code for the state.
   @attribute County : The county connected to the address.
   @attribute Country : The customer's country code.
   @attribute WithinCityLimit : Indicates if the customer is located inside the city limits. If this value is True, city sales tax is calculated on tax lines for customer orders. Possible values for this attribute are: TRUE or FALSE.
   @attribute TaxFreeTaxCode : The tax free tax code that will be used instead of the sales part tax code, in scenarios where no taxes are applied when delivering to the single occurrence address, and the customer is normally tax liable.
   @attribute Name : The name of the customer, i.e., the recipient. This is the name that will be used for this particular delivery address.
}
entity HeaderAddress using CustomerOrderAddress {
   crud = None;
   use attributes = Address1, Address2, Address3, Address4, Address5, Address6, ZipCode, City, State, County;

   attribute CountryCode Text {
      alias = "Country";
      maxlength = 2;
   }
   attribute InCity Text {
      alias = "WithinCityLimit";
      maxlength = 5;
   }
   attribute VatFreeVatCode Text {
      alias = "TaxFreeTaxCode";
      maxlength = 20;
   }
   attribute Addr1 Text {
      alias = "Name";
      maxlength = 100;
   }
}

@Override

@apidoc {
   @description : Overridden CustomerOrderAddress entity to store address of the cutomer order line when address is Single Occurance.
   @attribute OrderNo : An attribute used for internal use
   @attribute LineNo : An attribute used for internal use
   @attribute RelNo : An attribute used for internal use
   @attribute LineItemNo : An attribute used for internal use
   @attribute Address1 : The first line of the delivery address.
   @attribute Address2 : The second line of the delivery address. Extra address field.
   @attribute Address3 : This is an additional text field in which the user can input delivery address information. This also shows the Address 3 information connected to the default Document Address.
   @attribute Address4 : This is an additional text field in which the user can input delivery address information. This also shows the Address 4 information connected to the default Document Address.
   @attribute Address5 : This is an additional text field in which the user can input delivery address information. This also shows the Address 5 information connected to the default Document Address.
   @attribute Address6 : This is an additional text field in which the user can input delivery address information. This also shows the Address 6 information connected to the default Document Address.
   @attribute ZipCode : Displays the Zip Code connected to the selected delivery address ID.
   @attribute City : The city part of the address.
   @attribute State : The code for the state.
   @attribute County : The county connected to the address.
   @attribute Country : The customer's country code.
   @attribute WithinCityLimit : Indicates if the customer is located inside the city limits. If this value is True, city sales tax is calculated on tax lines for customer orders. Possible values for this attribute are: TRUE or FALSE.
   @attribute Name : The name of the customer, i.e., the recipient. This is the name that will be used for this particular delivery address.
}
entity LineAddress  using CustOrderLineAddress {
   crud = None;
   use attributes = Address1, Address2, Address3, Address4, Address5, Address6, ZipCode, City, State, County;

   attribute CountryCode Text {
      alias = "Country";
      maxlength = 20;
   }
   attribute InCity Text {
      alias = "WithinCityLimit";
      maxlength = 20;
   }
   attribute Addr1 Text {
      alias = "Name";
      maxlength = 20;
   }
}

@Override
@apidoc {
   @description : Overridden CustOrderLineDiscount entity to store line discount information.
   @attribute OrderNo : An attribute used for internal use
   @attribute LineNo : An attribute used for internal use
   @attribute RelNo : An attribute used for internal use
   @attribute LineItemNo : An attribute used for internal use
   @attribute DiscountNo : An attribute used for internal use
   @attribute Discount : Any applicable discount, expressed as a percentage. Either a discount or discount amount is required when connecting a discount to the order line.
   @attribute CreatePartialSum : Indicate whether a discount should be calculated on the original price. If this option is disabled, all discounts are calculated on the original price in the header. Else, all discount lines below will use the net price for the checked line as the basis for discount calculations. Partial sums may be checked on several lines. If so, the net price from the latest checked line is used in the calculation. Indicate whether a discount should be calculated on the original price. If this option is disabled, all discounts are calculated on the original price in the header. Else, all discount lines below will use the net price for the checked line as the basis for discount calculations. Partial sums may be checked on several lines. If so, the net price from the latest checked line is used in the calculation.
   @attribute DiscountType : The unique identifier for each discount entered, identifying the kind of discount that is entered on an order line. This enables a detailed control of the different types of discounts that are used. A discount type is required when connecting a discount to the order line.
   @attribute DiscountAmountCurr : The line discount amount that is retrieved automatically by IFS Applications, based on the pricing functionality, expressed in the order currency. Either a discount or discount amount is required when connecting a discount to the order line.
}
entity CustOrdLineDiscount using CustOrderLineDiscount {
   crud = None;
   use attributes = Discount;
   attribute DiscountType Text {
      maxlength = 20;
   }
   attribute Discount Number;
   attribute DiscountAmount Number {
      alias = "DiscountAmountCurr";
   }
   attribute CreatePartialSum Enumeration(CreatePartialSum) {
      required = [false];
   }
}

@Override

@apidoc {
   @description : Overridden SourceTaxItemOrder entity to store line line tax information.
   @attribute Company : An attribute used for internal use
   @attribute SourceRefType : An attribute used for internal use
   @attribute SourceRef1 : An attribute used for internal use
   @attribute SourceRef2 : An attribute used for internal use
   @attribute SourceRef3 : An attribute used for internal use
   @attribute SourceRef4 : An attribute used for internal use
   @attribute SourceRef5 : An attribute used for internal use
   @attribute TaxItemId : An attribute used for internal use
   @attribute TaxCode : The tax code that represents the tax percentage applied to the line. A tax code is required when connecting a tax to the order line.
   @attribute TaxPercentage : The percentage of tax applicable for the order line. A tax percentage is required when connecting a tax to the order line.
   @attribute TaxAmountBase : The total tax amount per line, expressed in the base currency. This amount is calculated based on the tax code percentages where different tax codes can have different percentages.
}
entity SourceTaxItemOrd using SourceTaxItemOrder {
   crud = None;
   use attributes = TaxCode, TaxPercentage;

   attribute TaxCode Text {
      maxlength = 20;
      required = [false];
   }
   attribute TaxAmount Number {
      alias = "TaxAmountBase";
   }
   attribute TaxPercentage Number {
      required = [false];
   }
}

@apidoc {
   @description : Additional attributes of Customer Order in CustomerOrderStructure.
   @attribute OrderNo : An attribute used for internal use.
   @attribute Name : Name of the attribute.
   @attribute Value : Value of the attribute.
}
query HeaderAttribute {
   from = "dual";
   keys = OrderNo, Name;
   attribute OrderNo Text {
      maxlength = 12;
   }
   attribute Name Text {
      maxlength = 100;
   }
   attribute Value Text {
      maxlength = 4000;
   }
}

@apidoc {
   @description : Additional attributes of Customer Order Line in CustomerOrderStructure.
   @attribute OrderNo : An attribute used for internal use.
   @attribute LineNo : An attribute used for internal use.
   @attribute RelNo : An attribute used for internal use.
   @attribute LineItemNo : An attribute used for internal use.
   @attribute Name : Name of the attribute.
   @attribute Value : Value of the attribute.
}
query LineAttribute {
   from = "dual";
   keys = OrderNo, LineNo, RelNo, LineItemNo, Name;
   attribute OrderNo Text {
      maxlength = 12;
   }
   attribute LineNo Text {
      maxlength = 4;
   }
   attribute RelNo Text {
      maxlength = 4;
   }
   attribute LineItemNo Number;
   attribute Name Text {
      maxlength = 100;
   }
   attribute Value Text {
      maxlength = 4000;
   }
}
//modelling support for  CreateCustomerOrder action, ends



-------------------------------- STRUCTURES ---------------------------------
-- Structure definitions for GetCustomerOrder
@apidoc {
   @description : Response structure of action GetCustomerOrder
}
structure OrderStructure using DetailCustOrder {
   nestedwithcrud = Read;
   implementation = "Utility";

}

@apidoc {
   @description : Request structure for GetCustomerOrder
   @attribute OrderNo : The order number for which to retrive information. When specified it will retrieve detailed order information and structure like defined in IFS Cloud.
}
structure CustomerOrderQueryStructure {
   implementation = "Utility";
   attribute OrderNo Text {
      maxlength = 12;
   }
}


-- Structure definitions for GetCustomerOrders
@apidoc {
   @description : Response structure of action GetCustomerOrders
}
structure OrderHeaderStructure using CustOrderHeader {
   nestedwithcrud = Read;
   implementation = "Utility";

}
@apidoc {
   @description : Request data structure for GetCustomerOrders
   @attribute CustomerNo : The short name or identification number of the ordering customer in IFS cloud. When specified it will retrieve order information only for orders connected to this customer ID.
   @attribute CustomerNoPay : The ID of the customer to be invoiced instead of the ordering customer. When specified it will retrieve order information only for orders connected to this paying customer ID.
   @attribute Site : The site ID in IFS Cloud. When specified it will retrieve order information only for orders connected to this specific site.
   @attribute OrderNo : The order number for which to retrive information. When specified it will retrieve detailed order information and structure like defined in IFS Cloud.
   @attribute CustomerPoNo : The Customers order number for which to retrive information. When specified it will retrieve detailed order information and structure like defined in IFS Cloud.
   @attribute CustomerRef : The customer's reference. When specified it will retrieve order information only for orders connected to this specific customer reference.
   @attribute ExternalRef : A reference that is used to refer to the customer's system. It is used to keep track of the incoming data. For instance, if an event has been received from another system, the original identity is saved as an external identity. When specified it will retrieve order information only for orders connected to this specific reference.
   @attribute MaxRecords : Defines the max number of records in the response payload.
}
structure CustomerOrderOverviewQueryStructure {
   implementation = "Utility";
   attribute CustomerNo Text {
      maxlength = 20;
   }
   attribute CustomerNoPay Text {
      maxlength = 20;
   }
   attribute Site Text {
      maxlength = 5;
   }
   attribute OrderNo Text {
      maxlength = 20;
   }
   attribute CustomerPoNo Text {
      maxlength = 20;
   }
   attribute CustomerRef Text {
      maxlength = 200;
   }
   attribute ExternalRef Text {
      maxlength = 30;
   }
   attribute MaxRecords Integer;
}


 -- Structure definitions for CreateCustomerOrder
@apidoc {
   @description : Request data structure for CreateCustomerOrder
}
structure CustomerOrderStructure using CustOrder {
   nestedwithcrud
      {
      crud = Create;
      excludefromschema {
         exclude Info for CustOrder;
         exclude OrderNo, LineNo, RelNo, LineItemNo, Info for CustOrderLine;
         exclude OrderNo, SequenceNo, Info for OrderCharge;
         exclude OrderNo for HeaderAttribute;
         exclude OrderNo for HeaderAddress;
         exclude OrderNo, SequenceNo, LineNo, RelNo, LineItemNo, Info for LineOrderCharge;
         exclude OrderNo, LineNo, RelNo, LineItemNo for LineAttribute;
         exclude OrderNo, LineNo, RelNo, LineItemNo, DiscountNo for CustOrdLineDiscount;
         exclude Company, SourceRef1, SourceRef2, SourceRef3, SourceRef4, SourceRef5, TaxItemId, SourceRefType for SourceTaxItemOrd;
         exclude OrderNo, LineNo, RelNo, LineItemNo for LineAddress;
      }
   }
   implementation = "Utility";
}

// CreateCustomerOrder response structure, start
@apidoc {
   @description : Response structure for CreateCustomerOrder
   @attribute OrderNo : The assigned identification number of the order is displayed when the order header has been entered and saved.
   @attribute Site : This field refers to the short code for the site used to create the order. A site is normally referred to as a geographic site, where, for instance, one company can have several sites; each one with a separate address
   @attribute Info : Additional information related to creation of the order header.
   @attribute OrderCreated : Indicates whether the order is created or not.
   @attribute ErrorMessage : Indicates errors  related to creation of the order.
   @attribute Lines : Include order lines that connects to the specific customer order record in IFS Cloud.
}
structure OrderResponseStructure {
   implementation = "Utility";
   attribute OrderNo Text {
      maxlength = 100;
   }
   attribute Site Text {
      maxlength = 5;
   }
   attribute Info Text {
      maxlength = 4000;
   }
   attribute OrderCreated  Boolean("TRUE", "FALSE");
   attribute ErrorMessage Text {
      maxlength = 32000;
   }
   attribute Lines List < Structure(OrderLineResponseStructure) > ;
}

@apidoc {
   @description : Structure for line information in the response of CreateCustomerOrder
   @attribute LineNo : The ID number of the order line is displayed.
   @attribute RelNo : The delivery number for the line item. The delivery number is used if an order contains several order lines having the same sales part but with different delivery times/dates for every line. If the entire order line has been sent at once, the delivery number 1 is displayed. A delivery number is automatically created at order line registration.
   @attribute LineItemNo : The number of the package structure line. Used to sequentially number the components.
   @attribute SalesPartNo : The identity number of the sales part the customer desires to purchase.
   @attribute SalesQty : The identity number of the sales part the customer desires to purchase.
   @attribute DesiredQty : The quantity actually desired by the customer, expressed in sales unit of measure, is automatically displayed. The value is retrieved from Sales Quantity. A change of the sales quantity does not affect the desired quantity.
   @attribute PlannedDeliveryDateTime : The date/time on which the goods are planned to be delivered to the customer's address.
   @attribute Info : Additional information related to creation of the order line.
}
structure OrderLineResponseStructure {
   implementation = "Utility";
   attribute LineNo Text {
      maxlength = 4;
   }
   attribute RelNo Text {
      maxlength = 4;
   }
   attribute LineItemNo Number;
   attribute SalesPartNo Text {
      maxlength = 25;
   }
   attribute SalesQty Number;
   attribute DesiredQty Number;
   attribute PlannedDeliveryDateTime Date;
   attribute Info Text {
      maxlength = 4000;
   }
}
// CreateCustomerOrder response structure, end
---------------------------------------------------------------------------


