------------------------------------------------------------------------------------------------------------
-- Date        Sign       History
-- ----------  ------   ------------------------------------------------------------------------------------
-- 2021-04-22  JoAnSe   MF21R2-1485, Added SoSupplyDate.
-- 2020-12-21  MaEelk   SC2020R1-11773, Renamed OeLineItemNoRef as CustomerOrderLineRef.
-- 2020-12-21           Correct colors were set for Order Line Status and SO Status.
-- 2019-10-31  Hairlk   SCXTEND-1303, Set the startupmode to search.
-- 2019-03-12  Kubalk    SCUXXW4-17245, Dependency annotations added.
-- 2018-09-26  HaPulk   SCUXXW4-1144, Converted from tbwOverviewPegManufacOrdLines using MTG Version: 1.29
------------------------------------------------------------------------------------------------------------

client PeggedManufacturedCustomerOrderLines;
component ORDER;
layer Core;
projection PeggedManufacturedCustomerOrderLinesHandling;
include fragment CustomerOrderLineStateBadge;
warningsenabled = UnpegCustomerOrderLine;


----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry PeggedManufacturedCustomerOrderLinesNavEntry parent OrderNavigator.OrderManualPegging at index 200 {
      label = "Pegged Manufactured Customer Order Lines";
      page List home CustomerOrderShopOrder;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page List using CustomerOrderShopOrderSet {
   label = "Pegged Manufactured Customer Order Lines";
   startupmode = search;
   list OverviewPegManufacOrdLinesList;
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command CustomerOrderCommand for CustomerOrderShopOrder {

   label = "Customer Order";
   enabled = [true];
   mode = SelectedRecords;
   bulkexecute {
      bulknavigate "page/CustomerOrder/Form?$filter=OrderNo eq $[OeOrderNo]";
   }
}
command ShopOrderCommand for CustomerOrderShopOrder {
   label = "Shop Order";
   enabled = [true];
   mode = SelectedRecords;
   bulkexecute {
      bulknavigate "page/ShopOrder/Form?$filter=OrderNo eq $[SoOrderNo] and ReleaseNo eq $[SoReleaseNo] and SequenceNo eq $[SoSequenceNo]";
   }
}
command ManualPeggingCommand for CustomerOrderShopOrder {
   label = "Manual Pegging";
   enabled = [SupplyCodeDb = "IO" or SupplyCodeDb = "PS"];
   mode = SelectedRecords;
   bulkexecute {
      bulknavigate "page/ManualPeggingOfCustomerOrderLine/Form?$filter=OrderNo eq $[OeOrderNo] and LineNo eq $[OeLineNo] and RelNo eq $[OeRelNo] and LineItemNo eq $[OeLineItemNo]";
   }
}
command UnpegCommand for CustomerOrderShopOrder {
   label = "Unpeg";
   enabled = [QtyOnOrder > 0 and(CustomerOrderLineRef.Objstate = "Reserved" or CustomerOrderLineRef.Objstate = "Released") and SupplyCodeDb = "SO"];

   mode = SingleRecord;

   execute {
      confirm("The order line will be un-pegged.")
         {
         when OK {
            call UnpegCustomerOrderLine(OeOrderNo, OeLineNo, OeRelNo, OeLineItemNo);
         }
         when CANCEL {
            exit;
         }
      }
   }
}

--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------

----------------------------------- LISTS -----------------------------------

list OverviewPegManufacOrdLinesList for CustomerOrderShopOrder {

   crudactions {
      update action = CreateSoPegging;
   }

   field Contract;

   field PartNo;
   field InvPartDescription;

   field InventoryPartRef.UnitMeas {
      size = Small;
      label = "Inv UoM";
   }

   @DynamicComponentDependency CFGCHR
   field ConfigurationIdRef;

   field CustomerNo {
      contactwidget {
         enabled = [CustomerNo != null];
         source = Customer;
      }
   }

   field OeOrderNo;

   field OeLineNo;

   field OeRelNo;
   fieldset CustomerOrderLineStateReferencedFieldSet;
   field RemainingCOQtyToPeg;
   field OeRevisedQtyDue;
   field PlannedDeliveryDate;
   field PromisedDeliveryDate;
   field PlannedShipDate;
   field OePlannedDueDate;
   field SupplyCode {
      size = Small;
   }
   field SoOrderNo {
      size = Small;
   }
   field SoReleaseNo {
      size = Small;
   }
   field SoSequenceNo {
      size = Small;
   }

   @DynamicComponentDependency SHPORD
   fieldset ShopOrderLineStateFieldSet;
   @DynamicComponentDependency SHPORD
   field ShopOrdRef.RevisedDueDate {
      label = "SO Finish Date";
   }
   @DynamicComponentDependency SHPORD
   field SoSupplyDate;

   @DynamicComponentDependency SHPORD
   field SOTardinessInWorkDays;
   @DynamicComponentDependency SHPORD
   field SOTardinessInCalendarDays;
   @DynamicComponentDependency SHPORD
   field ShopOrdRef.OrderCode {
      label = "SO Type";
   }
   field QtyOnOrder;
   @DynamicComponentDependency SHPORD
   field AvailableSOQtyToPeg;
   @DynamicComponentDependency SHPORD
   field ShopOrdRef.RevisedQtyDue {
      label = "SO Lot Size";
   }

   // fieldranking Contract, ConfigurationIdRef, OeOrderNo, OeLineNo, OeRelNo, OePlannedDueDate, SupplyCode, SoOrderNo, SoReleaseNo, SoSequenceNo;

   commandgroup CommandGroupCmdGroup {

      command CustomerOrderCommand;
      command ShopOrderCommand;
      command ManualPeggingCommand;
      command UnpegCommand;
   }
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------
@DynamicComponentDependency SHPORD
fieldset ShopOrderLineStateFieldSet {
   badge ShopOrdRef.Objstate {
      label = "SO Status";
      emphasis Progress1 = [ShopOrdRef.Objstate = "Planned"];
      emphasis Progress3 = [ShopOrdRef.Objstate = "Released"];
      emphasis Progress6 = [ShopOrdRef.Objstate = "Reserved"];
      emphasis Progress9 = [ShopOrdRef.Objstate = "Started"];
      emphasis Progress12 = [ShopOrdRef.Objstate = "Closed"];
      emphasis StateCancelled = [ShopOrdRef.Objstate = "Cancelled"];
      emphasis StateBlocked = [ShopOrdRef.Objstate = "Parked"];
      style = TextOnly;
   }
}
----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

