------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------------------------------
-- 2019-10-25  Satglk  SCXTEND-963, Salesman renamed to Salesperson
-- 2019-01-09  RasDlk  SCUXXW4-13341, Handled the dialog dlgShipmentLocation in 'Report Reserved Quantities as Picked' RMB.
-- 2018-09-07  SeJalk  SCUXXW4-8487, Converted from dlgOrderConfEmail using MTG Version: 1.28
-- 2018-08-30  SeJalk  SCUXXW4-9697, Converted from tbwChooseAll using MTG Version: 1.27
--------------------------------------------------------------------------------------------------------
projection QuickOrderFlowHandling;
component ORDER;
layer Core;
description "Use this API to handle the entire customer order flow from the release to the creation of the customer invoice";
category Users;
include fragment CustAddressBillLovSelector;
include fragment CompanyHavingSiteSelector;
include fragment CustomerTemplateLovSelector;
include fragment CustBillAddressLovSelector;
include fragment SalesPartSalesmanLovSelector;
include fragment OrderCoordinatorLovSelector;
include fragment CustOrdCust1Selector;
include fragment UserAllowedSiteLovSelector;
include fragment CustomerOrderMessageHandlerDialog;
include fragment MovePartsIntoShipmentInventoryDialog;

include fragment CustomerOrderInitialCheck;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset CustomerOrderSet for CustomerOrder;
entityset SelectedOrdersVirtuals for SelectedOrdersVirtual;
entityset OrderConfEmailSet for OrderConfEmailVirtual;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity CustomerOrder {
   crud = Read;
   where = "OBJSTATE in ('Blocked','Delivered','Invoiced','PartiallyDelivered','Picked', 'Planned','Quoted','Released','Reserved')";
   attribute OrderNo Text {
      editable = [false];
   }
   attribute Contract Text {
      editable = [false];
   }
   attribute Company Text {
      fetch = "Site_API.Get_Company(CONTRACT)";
   }
   attribute OrderId Text {
      editable = [false];
   }
   attribute CustomerNo Text {
      editable = [false];
   }

   attribute AuthorizeCode Text {
      label = "Coordinator";
      editable = [false];
   }
   attribute SalesmanCode Text {
      label = "Salesperson";
      editable = [false];
   }
   attribute WantedDeliveryDate Timestamp {
      label = "Wanted Delivery Date/Time";
      editable = [false];
   }
   attribute NextStepInOrderFlow Text {
      fetch = "Customer_Order_Flow_API.Get_Allowed_Operations_Desc__ (ORDER_NO)";
      label = "Next Step in Order Flow";
      maxlength = 200;
      editable = [false];
   }
   attribute OrderConfFlag Enumeration(PrintOrderConfirmation) {
      label = "Print Confirmation";
      editable = [false];
   }
   attribute OrderConf Text {
      fetch = "order_conf";
      label = "Confirmation";
      maxlength = 20;
      editable = [false];
   }
   attribute PickListFlag Enumeration(PrintPickList) {
      editable = [false];
   }
   attribute PackListFlag Enumeration(PrintPackList) {
      label = "Delivery Note";
      editable = [false];
   }
   attribute RouteId Text {
      editable = [false];
   }
   attribute RouteDescription Text {
      fetch = "Delivery_Route_API.Get_Description(route_id)";
      label = "Route Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute Priority Number {
      editable = [false];
   }

   attribute PickReservedQty Text {
      fetch = "Customer_Order_Flow_API.Reserved_As_Picked_Allowed__(order_no)";
      label = "Pick Reserved Qty";
      maxlength = 100;
      // searchable = false;
      editable = [false];
   }

   attribute OrderConfDb Text {
      fetch = "order_conf_db";
      label = "Order Confirmation";
      maxlength = 20;
      // searchable = false;
      editable = [false];
   }
   attribute ShipmentConnected Text {
      fetch = "Shipment_Line_API.Shipment_Connected_Lines_Exist(order_no, 'CUSTOMER_ORDER')";
      label = "Shipment Connected";
      maxlength = 2000;
      // searchable = false;
      editable = [false];
   }

   attribute Condition Text {
      fetch = "Customer_Order_Flow_API.Get_Allowed_Operations__( ORDER_NO)";
   }

   attribute AllowedToSend Number {
      fetch = "Customer_Order_Transfer_API.Allowed_To_Send(ORDER_NO, 'ORDRSP')";
   }

   reference OrderNoRef(OrderNo) to CustomerOrder(OrderNo) {
      label = "Order No";
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }

   reference OrderIdRef(OrderId) to CustOrderType(OrderId) {
      label = "Order Type";
   }
   reference CustomerNoRef(CustomerNo) to CustOrdCust1(CustomerNo) {
      label = "Customer";
   }
   reference AuthorizeCodeRef(AuthorizeCode) to OrderCoordinatorLov(AuthorizeCode) {
      label = "Coordinator";
   }
   reference SalesmanCodeRef(SalesmanCode) to SalesPartSalesmanLov(SalesmanCode) {
      label = "Salesperson";
   }
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Route ID";
   }
   reference BillAddrNoRef(CustomerNo, BillAddrNo) to CustBillAddressLov(CustomerNo, AddrNo) {
      label = "Bill Addr No";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------
action ProcessOrders {
   initialcheck implementation;
   parameter Selection Text;
   parameter StartEvent Number;
   parameter CreateRentalTrans Text;
   ludependencies = CustomerOrder;
}

action PrintOrderConfirmationReport Structure(ReportKeyListStructure) {
   initialcheck implementation;
   parameter FullSelection Text;
   ludependencies = CustomerOrder;
}

action ReportReservedAsPicked {
   initialcheck implementation;
   parameter Selection Text;
   parameter LocationNo Text;
   ludependencies = CustomerOrder;
}

action ProceedAfterPrintConf Boolean {
   initialcheck implementation;
   parameter FullSelection Text;
}

action CheckAllLinesConected Number {
   initialcheck implementation;
   parameter Selection Text;
}
--------------------------------- FUNCTIONS ---------------------------------
function ValidateAttributes Structure(ValidateAttrStructure) {
   parameter Selection Text;
}

function GetNotPrintedOrderList Text {
   parameter Selection Text;
}

function CheckUseShipmentInventory Structure(ReportPickStructure) {
   parameter Selection Text;
}

-------------------------------- STRUCTURES ---------------------------------
structure ValidateAttrStructure {
   attribute MinSalesAmountExceed Boolean;
   attribute RentalTransactionExist Boolean;
   attribute AllLinesConnected Number;
   attribute DistOrdersExist Boolean;
}

structure ReportPickStructure {
   attribute Contract Text;
   attribute OrderNo Text;
   attribute AllLinesConnected Number;
   attribute ShipmentLinesExist Boolean;
}

structure ReportKeyListStructure {
   attribute OrderConfRepKey Text;
   attribute StageBillingRepKey Text;
}
--------------------------------- VIRTUALS ----------------------------------
virtual SelectedOrdersVirtual {
   attribute Selection Text;
   attribute Operation Text;
   array MessageListArray() to MessageListVirtual();

   function Finish Text {
      parameter Selection Text;
   }
}

virtual MessageListVirtual {
   crud = Read;
   attribute OrderNo Text {
      editable = [false];
   }
   attribute CustomerNo Text {
      editable = [false];
   }
   attribute Message Text {
      editable = [false];
   }
}

virtual OrderConfEmailVirtual {
   attribute Selection Text;
   array EmailConfirmationArray() to CustomerOrdersVirtual();
   action EmailOrderReport;
}

virtual CustomerOrdersVirtual {
   crud = Read;

   attribute OrderNo Text;
   attribute CustomerNo Text {
      label = "Customer";

   }
   attribute CustomerContact Text;
   attribute EMail Text;
   attribute Contract Text;
}
