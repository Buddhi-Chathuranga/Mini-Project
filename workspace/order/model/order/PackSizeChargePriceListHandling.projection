--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2020-02-13  MaEelk  SCUXXW4-2218, Renamed UsePriceInclTaxDb as UsePriceInclTax and changed it to an enumeration
-- 2020-02-13          in order to handle Duplicate Functionality correctly in the page.
-- 2018-07-26  MaEelk  SCUXXW4-1201, Added RMB Add Sites from Site Cluster. Added AddSitesFromSiteCluster.
-- 2018-07-11  MaEelk  SCUXXW4-1201, Converted from tbwPackSizeChargeListSites using MTG Version: 1.22
-- 2018-07-10  MaEelk  SCUXXW4-1196, Converted tbwPackSizeChargeListCharges using MTG Version: 1.22
-- 2018-07-03  MaEelk  SCUXXW4-9292, Converted from frmPackSizeChargeList using MTG Version: 1.22
--------------------------------------------------------------------------------------

projection PackSizeChargePriceListHandling;
component ORDER;
layer Core;
description "Use this API to create pack size charge price lists.";
category Users;
include fragment SiteClusterLevelLovSelector;
include fragment SiteClusterNodeJoinSelector;
include fragment SiteClusteDialog;
include fragment PackSizeChargeListInitialCheck;


----------------------------- MAIN ENTRY POINTS -----------------------------
entityset PackSizeChargeListSet for PackSizeChargeList {
   context Company(Company);

}

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity PackSizeChargeList {
   attribute ChargeListNo Text {
      label = "Price List No";
      maxlength = 10;
      format = uppercase;
   }
   attribute Contract Text {
      label = "Site";
      editable = [ETag = null];
   }
   attribute CreatedDate Date {
      label = "Created";
   }
   attribute UsePriceInclTax Enumeration(FndBoolean) {
      fetch = "USE_PRICE_INCL_TAX_DB";
      label = "Use Price Incl Tax";
      required = [true];
   }
   attribute UsageType Text {
      fetch = "Pack_Size_Charge_List_API.Check_Usage(CHARGE_LIST_NO, CHARGE_TYPE)";
      editable = [false];
   }

   reference SalesChargeTypeRef(Contract, ChargeType) to SalesChargeType(Contract, ChargeType);
   reference ContractRef(Contract) to CompanySite(Contract) {
      label = "Site";
   }
   reference ChargeTypeRef(Contract, ChargeType) to SalesChargeType(Contract, ChargeType) {
      label = "Charge Type";
   }
   reference CompanyRef(Company) to CompanyFinance(Company) {
      label = "Company";
      prefetch CurrencyCode as CurrencyCode;
   }
   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode);

   array PackSizeCharges(ChargeListNo) to PackSizeChargeListLine(ChargeListNo);
   array PackSizeValidSites(ChargeListNo) to PackSizeChargeListSite(ChargeListNo);
}

@Override
entity PackSizeChargeListLine {

   keys = InputUnitMeasGroupId, UnitCode, ValidFromDate, ChargeListNo {
      where = "INPUT_UNIT_MEAS_GROUP_ID = :InputUnitMeasGroupId and UNIT_CODE = :UnitCode and VALID_FROM_DATE = :ValidFromDate and CHARGE_LIST_NO = :ChargeListNo";
   }
   attribute UnitCode Text {
      label = "Input UoM";
   }
   attribute ChargeAmount Number {
      label = "Charge Price";
   }
   attribute ChargePercentage Number {
      label = "Charge%";
   }
   attribute ChargeListNo Text {
      label = "Price List No";
      maxlength = 100;
   }
   reference InputUnitMeasGroupIdRef(InputUnitMeasGroupId) to InputUnitMeasGroup(InputUnitMeasGroupId) {
      label = "Input UoM Group ID";
   }
   reference ChargeListNoRef(ChargeListNo) to PackSizeChargeList(ChargeListNo) {
      label = "Price List No";
   }
   reference UnitCodeRef(InputUnitMeasGroupId, UnitCode) to InputUnitMeas(InputUnitMeasGroupId, UnitCode) {
      label = "Input UoM";
   }
}

@Override
entity PackSizeChargeListSite {
   attribute Contract Text {
      label = "Site";
   }
   attribute ChargeListNo Text {
      label = "Price List No";
      maxlength = 100;
   }
   reference ContractRef(Contract) to CompanySite(Contract) {
      label = "Site";
   }
   reference ChargeListNoRef(ChargeListNo) to PackSizeChargeList(ChargeListNo) {
      label = "Price List No";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------
action CopyChargeType {
   initialcheck UserAllowedSite(FromContract);
   parameter ChargeType Text;
   parameter FromContract Text;
   parameter ToContract Text;
}

action AddSitesFromSiteCluster {
   initialcheck PackSizeChargeListInitialCheck(ChargeListNo);
   initialcheck UserAllowedSite(FromContract);
   parameter Company Text;
   parameter ChargeListNo Text;
   parameter ChargeType Text;
   parameter FromContract Text;
   parameter SiteClusterId Text;
   parameter SiteClusterNodeId Text;
   parameter CopyChargeType Boolean;
   ludependencies = PackSizeChargeListSite;
}

--------------------------------- FUNCTIONS ---------------------------------
function ChargeTypes List<Entity(SalesChargeType)> {
   parameter Contract Text;
   where = "CONTRACT = :Contract AND SALES_CHG_TYPE_CATEGORY_DB = 'PACK_SIZE'";
}

function ValidContracts List<Entity(CompanySite)> {
   parameter Company Text;
   where = "COMPANY = :Company AND CONTRACT IN(SELECT SITE FROM User_Allowed_Site_Pub)";
}

function FetchUsePriceInclTaxOrdDb Boolean {
   parameter Contract Text;

}

function UnitCodes List<Entity(InputUnitMeas)> {
   parameter InputUnitMeasGroupId Text;
   where = "INPUT_UNIT_MEAS_GROUP_ID = :InputUnitMeasGroupId AND CUST_USAGE_ALLOWED = 1";
}

function SiteExist Boolean {
   parameter Contract Text;
}

function SalesChargeTypeExist Boolean {
   parameter Contract Text;
   parameter ChargeType Text;
}
