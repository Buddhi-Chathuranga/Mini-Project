-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-06-12  MaEelk  SCUXXW4-21911, Removed Price List No, Sales Price Group,Owning Comapany, Assortment Id
-- 2019-06-12          and Assortment Node Id from the Default Value Structure.
-- 2018-10-20  MaEelk  SCUXXW4-8847, Converted from dlgUpdateAssortBasedPriceLists using MTG Version: 1.31
--------------------------------------------------------------------------------------

projection UpdateAssortmentNodeBasedPrices;
component ORDER;
layer Core;
description "Use this API to update assortment-node-based prices.";
category Users;
include fragment SalesPriceListAuthReadSelector;
include fragment AssortmentNodeLov2Selector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset UpdateAssortBasedPriceListsSet for UpdateAssortBasedPriceListsVirtual;
entityset CompanyFinanceLovListSet for CompanyFinance;

------------------------------ ENTITY DETAILS -------------------------------

------------------------------- ENUMERATIONS --------------------------------
enumeration ExecutionTypeEnum {
   value = "ONLINE" {
      label = "Online";
   }
   value = "BACKGROUND" {
      label = "Run in Background";
   }
}

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------
action UpdateAssortmentPrices Number {
   initialcheck none;
   parameter ValidFrom Date;
   parameter PercentageOffset Number;
   parameter AmountOffset Number;
   parameter PriceListNo Text;
   parameter SalesPriceGroup Text;
   parameter AssortmentId Text;
   parameter AssortmentNodeId Text;
   parameter OwningCompany Text;
   parameter IncludeBothDates Boolean;
   parameter ExecutionTypeSelection Enumeration(ExecutionTypeEnum);
}

--------------------------------- FUNCTIONS ---------------------------------
function FetchDefaults Structure(DefaultValueStructure);

function PriceLists List<Entity(SalesPriceListAuthRead)> {
   parameter OwningCompany Text;
}

function SalesPriceGroups List<Entity(SalesPriceGroup)> {
   parameter PriceList Text;
}

function AssortmentIds List<Entity(AssortmentStructure)> {
   parameter PriceList Text;
}

function AssortmentNodeIds List<Entity(AssortmentNodeLov2)> {
   parameter Assortment Text;
}
-------------------------------- STRUCTURES ---------------------------------
structure DefaultValueStructure {
   attribute PercentageOffset Number;
   attribute AmountOffset Number;
   attribute ValidFrom Date;
}
--------------------------------- VIRTUALS ----------------------------------
virtual UpdateAssortBasedPriceListsVirtual {
   attribute PercentageOffset Number {
      label = "Percentage Offset";
   }
   attribute AmountOffset Number {
      label = "Amount Offset";
   }
   attribute ValidFrom Date {
      label = "Valid From";
   }
   attribute IncludeBothDates Boolean("TRUE", "FALSE") {
      label = "Include lines with both Valid From and Valid To dates indicator";
      required = [true];
   }
   attribute PriceListNo Text {
      label = "Price List";
      maxlength = 4000;
      format = uppercase;
   }
   attribute OwningCompany Text {
      label = "Owning Company";
      maxlength = 4000;
      format = uppercase;
   }
   attribute SalesPriceGroup Text {
      label = "Sales Price Group";
      maxlength = 4000;
      format = uppercase;
   }
   attribute AssortmentId Text {
      label = "Assortment ID";
      maxlength = 4000;
      format = uppercase;
   }

   attribute AssortmentNodeId Text {
      label = "Assortment Node ID";
      maxlength = 4000;
      format = uppercase;
   }
   reference PriceListNoRef(PriceListNo) to SalesPriceListAuthRead(PriceListNo) {
      multireference = [true];
      label = "Price List No";
   }
   reference OwningCompanyRef(OwningCompany) to CompanyFinance(Company) {
      multireference = [true];
      label = "Owning Company";
   }
   reference SalesPriceGroupRef(SalesPriceGroup) to SalesPriceGroup(SalesPriceGroupId) {
      multireference = [true];
      label = "Sales Price Group";
   }
   reference AssortmentIdRef(AssortmentId) to AssortmentStructure(AssortmentId) {
      multireference = [true];
      label = "Assortment ID";
   }
   reference AssortmentNodeIdRef(AssortmentId, AssortmentNodeId) to AssortmentNodeLov2(AssortmentId, AssortmentNodeId) {
      multireference = [true];
      label = "Assortment Node ID";
   }
   attribute ExecutionTypeSelection Enumeration(ExecutionTypeEnum);
}

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------
