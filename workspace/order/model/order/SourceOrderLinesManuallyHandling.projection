-----------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------------------------------------
-- 2022-01-19  ShWtlk  MF21R2-6632, Removed code related to capability check functionality from source order lines.
-- 2021-12-16  ShWtlk  MF21R2-6249, Added ShowMarkDownText to OrderSiteVirtual.
-- 2021-01-25  ApWilk  Bug 157620(SCZ-13487), Modified PurchasePartSupplierVirtual to get the correct available quantity.
-- 2020-11-12  RavDlk  SC2020R1-11228, Handled booleans and enumerations for some attrbutes
-- 2019-04-16  JaThlk  SCUXXW4-9522, Converted from frmSourceOrderLines using MTG Version: 1.34
-----------------------------------------------------------------------------------------------------------
projection SourceOrderLinesManuallyHandling;
component ORDER;
layer Core;
description "Use this API to source order lines that have the supply code Not Decided, and belongs to an order with status less than Delivered. CTO-parts cannot be sourced manually in this client";
category Users;

--------------------------------- FRAGMENTS ---------------------------------
@DynamicComponentDependency PURCH
include fragment PurchasePartLovSelector;
include fragment NonRentalSalesPartLovSelector;
include fragment CustOrdCust1Selector;
include fragment CustomerTemplateLovSelector;
include fragment SupplySiteReservationDialog;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset SourceOrderLinesManuallySet for SourceOrderLinesManually;
entityset OrderSiteVirtualSet for OrderSiteVirtual;
@DynamicComponentDependency PURCH
entityset PurchasePartSupplierHeaderVirtualSet for PurchasePartSupplierHeaderVirtual;
entityset SourcedCustOrderLineSet for SourcedCustOrderLine;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity SourceOrderLinesManually using CustomerOrderLine {
   crud = Read, Update;
   where = "SUPPLY_CODE_DB = 'ND' and Customer_Order_API.Get_Objstate(ORDER_NO) NOT IN ('Cancelled','Delivered','Invoiced') and OBJSTATE NOT IN ('Cancelled')";
   supportwarnings = [true];

   attribute OrderNo Text {
      maxlength = 100;
      editable = [false];
   }
   attribute LineNo Text {
      editable = [false];
   }
   attribute RelNo Text {
      label = "Del No";
      editable = [false];
   }
   attribute LineItemNo Number {
      label = "Line Item No";
      editable = [false];
   }
   attribute DeliverToCustomerNo Text {
      label = "Deliver-to-Cust ID";
      editable = [false];
   }
   attribute ShipAddrNo Text {
      label = "Del Addr ID";
      editable = [false];
   }
   attribute CatalogNo Text {
      label = "Sales Part";
   }
   attribute CatalogTypeDb Text {
      label = "Catalog Type Db";
   }
   attribute BuyQtyDue Number {
      label = "Sales Qty";
      editable = [ETag != null];
   }
   attribute SalesUnitMeas Text {
      label = "U/M";
      editable = [false];
   }
   attribute RevisedQtyDue Number {
      label = "Inventory Qty";
      editable = [false];
   }
   attribute UoM Text {
      fetch = "NVL(Inventory_Part_API.Get_Unit_Meas(contract,part_no), sales_unit_meas)";
      label = "U/M";
      maxlength = 2000;
      editable = [false];
   }
   attribute PurchasePartNo Text {
      label = "Purchase Part";
      editable = [false];
   }
   attribute AddrFlag Enumeration(GenYesNo) {
      fetch = "addr_flag_db";
      label = "Single Occurrence";
      editable = [false];
      required = [true];
   }
   attribute ConditionCode Text {
      editable = [false];
   }
   attribute ShipViaCode Text {
      label = "Ship Via";
      editable = [ETag != null];
   }
   attribute PartNo Text {
      label = "Inventory Part";
   }
   attribute FullQtyDate Date {
      fetch = "Order_Supply_Demand_API.Get_Planned_Del_Date_Shell(contract,part_no,revised_qty_due,'FALSE',picking_leadtime)";
      label = "Full Qty Date";
      editable = [false];
   }
   attribute SupplyCode Text {
      fetch = "supply_code";
      maxlength = 100;
      editable = [false];
   }
   attribute PlannedDueDate Timestamp {
      editable = [false];
   }
   attribute PlannedDeliveryDate Timestamp {
      editable = [false];
   }
   attribute DeliveryLeadtime Number {
      maxlength = 3;
      editable = [ETag != null];
   }
   attribute SalesPartCatalogDesc Text {
      fetch = "Sales_Part_API.Get_Catalog_Desc(contract,catalog_no)";
      maxlength = 2000;
      editable = [false];
   }
   attribute SupplyCodeDb Text {
      fetch = "supply_code_db";
      maxlength = 3;
      required = [true];
   }
   attribute ConvFactor Number {
      fetch = "conv_factor";
   }
   attribute InvertedConvFactor Number {
      fetch = "inverted_conv_factor";
      editable = [false];
   }
   attribute PartOwnershipDb Text {
      fetch = "part_ownership_db";
   }
   attribute OwnInventLatestReleaseDate Timestamp {
      fetch = "NULL";
      updatable = [false];
      editable = [true];
   }
   attribute WantedDeliveryDate Timestamp {
      editable = [false];
   }

   reference OrderNoRef(OrderNo) to CustomerOrder(OrderNo) {
      label = "Order No";
   }
   reference DeliverToCustomerNoRef(DeliverToCustomerNo) to CustOrdCust1(CustomerNo) {
      label = "Deliver-to-Cust ID";
   }
   reference CatalogNoRef(Contract, CatalogNo) to NonRentalSalesPartLov(Contract, CatalogNo) {
      label = "Sales Part";
   }
   @DynamicComponentDependency PURCH
   reference PurchasePartNoRef(Contract, PurchasePartNo) to PurchasePartLov(Contract, PartNo) {
      label = "Purchase Part";
   }
   reference ShipViaCodeRef(ShipViaCode) to MpccomShipVia(ShipViaCode) {
      label = "Ship Via";
   }
   reference PartNoRef(PartNo) to PartCatalog(PartNo) {
      label = "Inventory Part";
   }
}

@Override
entity SourcedCustOrderLine {
   crud = Read, Delete;

   attribute SourceId Number {
      fetch = "source_id";
   }
   attribute OrderNo Text {
      fetch = "order_no";
   }
   attribute LineNo Text {
      fetch = "line_no";
   }
   attribute RelNo Text {
      fetch = "rel_no";
   }
   attribute LineItemNo Number {
      fetch = "line_item_no";
   }
   attribute VendorNo Text {
      fetch = "vendor_no";
      label = "Supplier";
   }
   @DynamicComponentDependency PURCH
   attribute SupplierName Text {
      fetch = "Supplier_API.Get_Vendor_Name(vendor_no)";
      label = "Supplier Name";
      maxlength = 2000;
      editable = [false];
   }
   attribute SupplySite Text {
      fetch = "supply_site";
      editable = [false];
   }
   attribute ShipViaCode Text {
      fetch = "ship_via_code";
      label = "Ship Via";
   }
   attribute SupplyCode Enumeration(OrderSupplyType) {
      fetch = "supply_code_db";
      editable = [false];
   }
   attribute SourcedQty Number {
      fetch = "sourced_qty";
   }
   attribute SupplySiteQtyReserved Number {
      fetch = "Inventory_Part_API.Get_Site_Converted_Qty(supply_site, Customer_Order_Line_API.Get_Part_No(order_no, line_no, rel_no, line_item_no), Sourced_Co_Supply_Site_Res_API.Get_Qty_Reserved(order_no, line_no, rel_no, line_item_no, source_id), Customer_Order_Line_API.Get_Contract(order_no, line_no, rel_no, line_item_no), 'ADD')";
      label = "Supply Site Qty Reserved";
      required = [true];
      editable = [ETag = null];
   }
//   @DynamicComponentDependency PURCH
//   attribute PartType Text {
//      fetch = "Inventory_Part_API.Get_Type_Code(Supplier_API.Get_Acquisition_Site(vendor_no), :i_hwndframe.frmsourcedcustorderline.sinvpartno)";
//      label = "Part Type";
//      maxlength = 2000;
//      // searchable = false;
//      editable = [false];
   //   }
   attribute WantedDeliveryDate Timestamp {
      fetch = "wanted_delivery_date";
   }
   attribute PlannedDueDate Timestamp {
      fetch = "planned_due_date";
   }
   attribute SupplySiteDueDate Timestamp {
      fetch = "supply_site_due_date";
   }
   attribute LatestReleaseDate Timestamp {
      fetch = "latest_release_date";
   }
   attribute ParentContract Text {
      fetch = "''";
   }
   attribute ParentPartNo Text {
      fetch = "''";
   }
   attribute PartType Text {
      fetch = "''";
   }
   attribute IsSupplySiteAllowed Number {
      fetch = "NULL";
   }

   @DynamicComponentDependency PURCH
   reference VendorNoRef(VendorNo) to Supplier(VendorNo) {
      label = "Supplier";
   }
   reference ShipViaCodeRef(ShipViaCode) to MpccomShipVia(ShipViaCode) {
      label = "Ship Via";
   }
}
------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------
//TODO: Couldn't find where CheckSourcedLineExist() is called. So didn't impelement it for now.

action CreateSourcingLines {
   initialcheck none;
   parameter OrderNo Text;
   parameter LineNo Text;
   parameter RelNo Text;
   parameter LineItemNo Number;
   parameter SourcedQty Number;
   parameter ShipViaCode Text;
   parameter SupplyCodeDb Text;
   parameter WantedDeliveryDate Timestamp;
   parameter PlannedDueDate Timestamp;
   parameter LatestReleaseDate Timestamp;
   ludependencies = SourcedCustOrderLine;
}
@DynamicComponentDependency PURCH
action CreateSrcLinesFromSuppliers {
   initialcheck none;
   parameter ParentObjkey Text;
   parameter OrderNo Text;
   parameter LineNo Text;
   parameter RelNo Text;
   parameter LineItemNo Number;
   ludependencies = SourcedCustOrderLine;
}



//! TODO: Should be refactored as a function!
action ValidateShipVia {
   initialcheck none;
   parameter ShipViaCode Text;
}

--------------------------------- FUNCTIONS ---------------------------------
function GetSrcOwnInventValues Structure(SrcOwnInventValuesStructure) {
   parameter OrderNo Text;
   parameter WantedDeliveryDate Timestamp;
   parameter CustomerNo Text;
   parameter ShipAddressNo Text;
   parameter AddrFlag Enumeration(GenYesNo);
   parameter ShipViaCode Text;
   parameter DeliveryLeadTime Number;
   parameter PickingLeadTime Number;
   parameter ExtTransportCalendarId Text;
   parameter SupplyCodeDb Text;
   parameter Contract Text;
   parameter InventoryPartNo Text;
   parameter RouteId Text;
   parameter CatalogTypeDb Text;
   parameter RevisedQtyDue Number;
   parameter Init Boolean;
}

function GetTotalSourcedQty Number {
   parameter OrderNo Text;
   parameter LineNo Text;
   parameter RelNo Text;
   parameter LineItemNo Number;
}
function ConvertToDate Structure(SourceOrderDateStructure) {
   parameter WantedDeliveryDate Timestamp;
   parameter PlannedDueDate Timestamp;
   parameter LatestReleaseDateTemp Timestamp;
}
function GetSourcedCustOrderLine List<Entity(SourcedCustOrderLine)> {
   parameter OrderNo Text;
   parameter LineNo Text;
   parameter RelNo Text;
   parameter LineItemNo Number;
   parameter Contract Text;
   parameter PartNo Text;
   where = "ORDER_NO = :OrderNo and LINE_NO = :LineNo and REL_NO = :RelNo and LINE_ITEM_NO = :LineItemNo";
   alterattribute ParentContract {
      fetch = ":Contract";
   }
   alterattribute ParentPartNo {
      fetch = ":PartNo";
   }
   alterattribute IsSupplySiteAllowed {
      fetch = "Reserve_Customer_Order_API.Is_Supply_Chain_Reservation(order_no, line_no, rel_no, line_item_no, source_id, NULL)";
   }
   alterattribute PartType {
      fetch = "Inventory_Part_API.Get_Type_Code(Sourced_Cust_Order_Line_API.Get_Acquisition_Site(vendor_no), :PartNo)";
   }
   basedon SourcedCustOrderLineSet;
}

@DynamicComponentDependency PURCH
function ValidateSupplierSiteInfo Structure(SrcSupplierValuesStructure) {
   parameter ParentShipViaCode Text;
   parameter SupplierShipViaTransit Text;
   parameter WantedDeliveryDate Timestamp;
   parameter CustomerNo Text;
   parameter ShipAddrNo Text;
   parameter AddrFlagDb Text;
   parameter VendorNo Text;
   parameter Contract Text;
   parameter CatalogNo Text;
   parameter PartNo Text;
   parameter RouteId Text;
   parameter RevisedQtyDue Number;
   parameter DeliveryLeadtime Number;
   parameter PickingLeadtime Number;
   parameter ExtTransportCalendarId Text;
   parameter CurrencyCode Text;
   parameter DeliveryMode Enumeration(SourcingDeliveryOption);
   parameter DeliveryModeTransit Text;
   parameter RetrieveShipVia Boolean;
   parameter ValidateShipVia Boolean;
}


-------------------------------- STRUCTURES ---------------------------------
structure SrcOwnInventValuesStructure {
   attribute EarliestDeliveryDate Timestamp;
   attribute PlannedDueDate Timestamp;
   attribute TotalShippingTime Number;
   attribute TotalDistance Number;
   attribute TotalExpectedCost Number;
   attribute PlannableQty Number;
   attribute SupplyCode Enumeration(OrderSupplyType);
   attribute FulfillsDemand Text;
   attribute CompanyOwnedStock Text;
   attribute DeliveryModeTransit Text;
   attribute OrderObjState Text;
}

structure SrcSupplierValuesStructure {
   attribute EarliestPossibleDeliveryDate Date;
   attribute SupplierPlannedDueDate Timestamp;
   attribute EpddAtSupplier Date;
   attribute SupplySiteDueDate Timestamp;
   attribute TotalShippingTime Number;
   attribute TotalDistance Number;
   attribute TotExpAdditionalCost Number;
   attribute ShipViaCode Text;
   attribute EpddTotalDelLeadtime Number;
   attribute DddTotalDelLeadtime Number;
   attribute AvailableToPromiseQty Number;
   attribute AvailableQty Number;
   attribute FulfillsDemand Text;
   attribute SupplyCodeDb Text;
   attribute SupplySite Date;
}

structure SourceOrderDateStructure {
   attribute WantedDeliveryDate Timestamp;
   attribute PlannedDueDate Timestamp;
   attribute LatestReleaseDateTemp Timestamp;
}


--------------------------------- VIRTUALS ----------------------------------
virtual OrderSiteVirtual {
   attribute WantedDeliveryDate Timestamp {
      fetch = "wanted_delivery_date";
      label = "Wanted Delivery Date";
      required = [true];
      updatable = [false];
   }
   attribute ShipViaCode Text {
      fetch = "ship_via_code";
      label = "Ship Via";
      maxlength = 3;
      required = [true];
      format = uppercase;
      updatable = [false];
   }
   attribute SupplyCode Enumeration(OrderSupplyType.Subset8) {
      fetch = "supply_code";
      label = "Supply Code";
      editable = [true];
   }
   attribute SupplyCodeDb Text {
      fetch = "supply_code_db";
   }
   attribute OrderNo Text {
      fetch = "order_no";
      maxlength = 12;
      required = [true];
      editable = [false];
      format = uppercase;
   }
   attribute LineNo Text {
      fetch = "line_no";
      maxlength = 4;
      required = [true];
      editable = [false];
   }
   attribute RelNo Text {
      fetch = "rel_no";
      maxlength = 4;
      required = [true];
      editable = [false];
   }
   attribute LineItemNo Number {
      fetch = "line_item_no";
      required = [true];
      editable = [false];
   }
   attribute CustomerNo Text {
      fetch = "customer_no";
      maxlength = 20;
      editable = [false];
      format = uppercase;
   }
   attribute ShipAddrNo Text {
      fetch = "ship_addr_no";
      maxlength = 50;
      editable = [false];
   }
   attribute AddrFlagDb Text {
      fetch = "addr_flag_db";
      maxlength = 1;
      editable = [false];
   }
   attribute DefaultAddrFlagDb Text {
      fetch = "default_addr_flag_db";
      maxlength = 2;
      editable = [false];
   }
   attribute RevisedQtyDue Number {
      fetch = "revised_qty_due";
      editable = [false];
   }
   attribute PurchasePartNo Text {
      fetch = "purchase_part_no";
      maxlength = 25;
      editable = [false];
      format = uppercase;
   }
   attribute Contract Text {
      fetch = "contract";
      maxlength = 5;
      editable = [false];
      format = uppercase;
   }
   attribute PartNo Text {
      fetch = "part_no";
      maxlength = 25;
      editable = [ETag = null];
      format = uppercase;
   }
   attribute CatalogTypeDb Text {
      fetch = "catalog_type_db";
      maxlength = 20;
      editable = [false];
   }
   attribute RouteId Text {
      fetch = "route_id";
      maxlength = 12;
      editable = [false];
   }
   attribute ExtTransportCalendarId Text {
      fetch = "ext_transport_calendar_id";
      maxlength = 10;
      editable = [false];
   }
   attribute DeliveryLeadtime Number {
      fetch = "delivery_leadtime";
      editable = [false];
   }
   attribute CatalogNo Text {
      fetch = "catalog_no";
      maxlength = 25;
      editable = [false];
      format = uppercase;
   }
   attribute PartOwnershipDb Text {
      fetch = "part_ownership_db";
      maxlength = 200;
      editable = [false];
   }
   attribute DeliverToCustomerNo Text {
      fetch = "deliver_to_customer_no";
      maxlength = 20;
      editable = [false];
      format = uppercase;
   }
   attribute PickingLeadtime Number {
      fetch = "picking_leadtime";
      required = [true];
      editable = [false];
   }
   attribute SourcedQty Number {
      fetch = "sourced_qty";
      required = [true];
      editable = [true];
      updatable = [true];
   }
   attribute PlannableQty Number {
      fetch = "NULL";
      label = "CO Plannable Qty";
      editable = [false];
   }
   attribute EarliestPossibleDelDate Timestamp {
      fetch = "earliest_possible_del_date";
      editable = [false];
   }
   attribute Distance Number {
      fetch = "NULL";
      editable = [false];
   }
   attribute TotalShipTime Number {
      fetch = "NULL";
      editable = [false];
   }
   attribute ExpectedAdditionalCost Number {
      fetch = "NULL";
      editable = [false];
   }
   attribute PlannedDueDate Timestamp {
      fetch = "planned_due_date";
      editable = [false];
   }
   attribute LatestReleaseDate Timestamp {
      fetch = "NULL";
      editable = [false];
   }
   attribute FulfillsDemand Boolean("TRUE", "FALSE") {
      fetch = "NULL";
      required = [true];
      updatable = [false];
      editable = [false];
   }
   attribute ShowMarkDownText Boolean("TRUE", "FALSE") {
      fetch = "NULL";
      required = [true];
      updatable = [false];
      editable = [false];
   }
   attribute OwnInventLatestReleaseDate Timestamp {
      fetch = "own_invent_latest_release_date";
   }
   attribute CompanyOwnedStock Text {
      fetch = "company_owned_stock";
   }
   attribute DeliveryModeTransit Text {
      fetch = "delivery_mode_transit";
   }
   attribute OrderObjState Text {
      fetch = "order_obj_state";
   }
   attribute SupplyCodeTemp Text {
      fetch = "supply_code_temp";
   }

   reference ShipViaCodeRef(ShipViaCode) to MpccomShipVia(ShipViaCode) {
      label = "Ship Via";
   }
}

@DynamicComponentDependency PURCH
virtual PurchasePartSupplierHeaderVirtual {
   attribute Contract Text {
      fetch = "contract";
   }
   attribute PartNo Text {
      fetch = "part_no";
   }
   attribute OrderNo Text {
      fetch = "order_no";
   }
   attribute LineNo Text {
      fetch = "line_no";
   }
   attribute RelNo Text {
      fetch = "rel_no";
   }
   attribute LineItemNo Number {
      fetch = "line_item_no";
   }
   attribute WantedDeliveryDate Timestamp {
      fetch = "wanted_delivery_date";
   }
   attribute CatalogNo Text {
      fetch = "catalog_no";
   }
   attribute PartOwnershipDb Text {
      fetch = "part_ownership_db";
   }
   attribute CustomerNo Text {
      fetch = "customer_no";
   }
   attribute ShipAddrNo Text {
      fetch = "ship_addr_no";
   }
   attribute AddrFlagDb Text {
      fetch = "addr_flag_db";
   }
   attribute RouteId Text {
      fetch = "route_id";
   }
   attribute RevisedQtyDue Number {
      fetch = "revised_qty_due";
   }
   attribute ShipViaCode Text {
      fetch = "ship_via_code";
   }
   attribute DeliveryLeadtime Number {
      fetch = "delivery_leadtime";
   }
   attribute PickingLeadtime Number {
      fetch = "picking_leadtime";
   }
   attribute ExtTransportCalendarId Text {
      fetch = "ext_transport_calendar_id";
   }
   attribute AlreadySourcedQty Number {
      fetch = "Sourced_Cust_Order_Line_API.Get_Total_Sourced_Qty(order_no, line_no, rel_no, line_item_no)";
   }

   array PurchasePartSuppliersArray(Contract, PartNo) to PurchasePartSupplierVirtual(Contract, PartNo);

}

@DynamicComponentDependency PURCH
virtual PurchasePartSupplierVirtual {
   crud = Read, Update;
   attribute PartNo Text {
      fetch = "part_no";
      label = "Part No";
      maxlength = 25;
      required = [true];
      editable = [false];
      format = uppercase;
   }
   attribute Contract Text {
      fetch = "contract";
      label = "Contract";
      maxlength = 5;
      editable = [false];
      format = uppercase;
   }
   attribute InternalSupplier Boolean {
      fetch = "DECODE(Supplier_Category_API.Encode(Supplier_API.Get_Category(vendor_no)), 'I', 'TRUE', 'FALSE')";
      label = "Internal Supplier";
      editable = [false];
   }
   attribute DeliveryMode Enumeration(SourcingDeliveryOption) {
      fetch = "delivery_mode";
   }
   attribute SupplierShipViaTransit Text {
      fetch = "supplier_ship_via_transit";
   }
   attribute WantedDeliveryDate Timestamp {
      fetch = "wanted_delivery_date";
      label = "Wanted Delivery Date";
      required = [true];
   }
   attribute VendorNo Text {
      fetch = "vendor_no";
      label = "Supplier";
      maxlength = 20;
      required = [true];
      editable = [false];
      format = uppercase;
   }
   attribute SupplySite Text {
      fetch = "supply_site";
      editable = [false];
   }
   attribute SupplierName Text {
      fetch = "Supplier_API.Get_Vendor_Name(vendor_no)";
      label = "Supplier Name";
      maxlength = 2000;
      editable = [false];
   }
   attribute PrimarySupplier Boolean {
      fetch = "DECODE(Purchase_Part_Suppl_Type_API.Encode(Purchase_Part_Supplier_API.Get_Primary_Vendor(contract, part_no, vendor_no)), 'Y', 'TRUE', 'FALSE')";
      label = "Primary Supplier - Purchase";
      editable = [false];
   }
   attribute FulfillsDemand Boolean("TRUE", "FALSE") {
      fetch = "fulfills_demand";
      required = [true];
      updatable = [false];
      editable = [false];
   }
   attribute CoPlannableQuantity Number {
      fetch = "co_plannable_quantity";
      label = "CO Plannable Quantity";
      editable = [false];
   }
   attribute SupplySiteDueDate Timestamp {
      fetch = "supply_site_due_date";
      editable = [false];
   }
   attribute DesiredTimeToDelivery Number {
      fetch = "desired_time_to_delivery";
   }
   attribute EarliestPossibleDeliveryDate Date {
      fetch = "earliest_possible_delivery_date";
   }
   attribute EpDueDate Timestamp {
      fetch = "ep_due_date";
      label = "EP Due Date";
   }
   attribute MinTimeToDelivery Number {
      fetch = "min_time_to_delivery";
      label = "Min Time to Delivery";
   }
   attribute TotalDistance Number {
      fetch = "total_distance";
   }
   attribute TotalShippingTime Number {
      fetch = "total_shipping_time";
   }
   attribute ExpectedAdditionalCost Number {
      fetch = "expected_additional_cost";
   }
   attribute AvailableQty Number {
      fetch = "Inventory_Part_API.Get_Site_Converted_Qty(supply_site, part_no, (Inventory_Part_In_Stock_API.Get_Plannable_Qty_Onhand(supply_site, part_no, NULL)-Inventory_Part_In_Stock_API.Get_Plannable_Qty_Reserved(supply_site, part_no, NULL)), contract, 'REMOVE')";
   }
   attribute SourcedQty Number {
      fetch = "sourced_qty";
      required = [true];
   }
   attribute ShipViaCode Text {
      fetch = "ship_via_code";
   }
   attribute SupplyCodeDb Text {
      fetch = "supply_code_db";
   }
   attribute PlannedDueDate Timestamp {
      fetch = "planned_due_date";
   }
   attribute LatestReleaseDate Timestamp {
      fetch = "latest_release_date";
   }
   attribute CompanyOwnedStock Text {
      fetch = "Part_Ownership_API.Decode('COMPANY OWNED')";
   }
   attribute DeliveryModeTransit Text {
      fetch = "delivery_mode_transit";
   }
   attribute CurrencyCode Text {
      fetch = "currency_code";
   }
   attribute InventoryPartExist Number {
      fetch = "Inventory_Part_API.Part_Exist(Supplier_API.Get_Acquisition_Site(vendor_no), part_no)";
   }
   attribute OrderObjState Text {
      fetch = "order_obj_state";
   }
   attribute SupplierLatestReleaseDate Timestamp {
      fetch = "supplier_latest_release_date";
   }

   reference VendorNoRef(VendorNo) to Supplier(VendorNo) {
      label = "Supplier";
   }
   reference SupplierShipViaCodeRef(SupplierShipViaTransit) to MpccomShipVia(ShipViaCode) {
      label = "Ship Via";
   }

}





--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------