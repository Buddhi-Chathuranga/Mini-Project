--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-09-14  ApWilk  Bug 155540(SCZ-11357), Modified the WHERE to pass a parameter as -1 to Customer_Order_Flow_API.Create_Invoice_Allowed__()
-- 2019-10-25  Satglk  SCXTEND-963 Salesman renamed to Salesperson
-- 2019-06-20  KHVESE  SCUXXW4-22651, Changed action StartCreateInvoice to unbound action due to performance issue.
-- 2018-05-17  KhVese  SCUXXW4-9785, Added action StartCreateInvoice and function RentalTransDueOrdersExist
-- 2018-05-08  StHose  SCUXXW4-9785, Converted from tbwCreateInvoice.cs using MTG Version: 1.16
--------------------------------------------------------------------------------------

projection CreateCustomerInvoices;
component ORDER;
layer Core;
description "Use this API to create invoices. The invoices are created from the delivered customer orders entered into the system.";
category Users;
include fragment UserAllowedSiteLovSelector;
include fragment CustOrdCust1Selector;
include fragment CustomerOrderInitialCheck;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset CustomerOrders for CustomerOrder;

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity CustomerOrder {
   crud = Read;
   where = "Customer_Order_Flow_API.Create_Invoice_Allowed__(ORDER_NO, NULL, -1) = 1 AND objstate IN ('Delivered', 'Released',  'Reserved',  'Picked',  'PartiallyDelivered','Blocked' )";
   attribute OrderNo Text;
   attribute Contract Text;
   attribute Company Text {
      fetch = "Site_API.Get_Company(CONTRACT)";
   }
   attribute OrderId Text;
   attribute CustomerNo Text;
   attribute CustomerName Text {
      fetch = "CUST_ORD_CUSTOMER_API.Get_Name(CUSTOMER_NO)";
      label = "Customer Name";
   }
   attribute AuthorizeCode Text {
      label = "Coordinator";
   }
   attribute SalesmanCode Text {
      label = "Salesperson";
   }
   attribute CustomerPoNo Text {
      label = "Customer's PO No";
   }
   attribute WantedDeliveryDate Timestamp {
      label = "Wanted Delivery Date/Time";
   }
   attribute StagedBilling Boolean {
      fetch = "DECODE(ORDER_LINE_STAGED_BILLING_API.Order_Uses_Stage_Billing(ORDER_NO),1,'TRUE','FALSE')";
   }
   attribute Priority Number;
   attribute JinsuiInvoiceDb Boolean {
      fetch = "JINSUI_INVOICE_DB";
      label = "Jinsui Invoice";
   }
   --The column RentalLinesExist has been added to control enabling/disabling the command RentalTransactionsCommand
   attribute RentalLinesExist Text {
      fetch = "Customer_Order_API.Rental_Lines_Exist(ORDER_NO)";
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference CustomerNoRef(CustomerNo) to CustOrdCust1(CustomerNo) {
      label = "Customer";
   }
}

------------------------------ ENTITY DETAILS -------------------------------

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

action StartCreateInvoice {
   initialcheck CustomerOrderInitialCheck(OrderNo);
   parameter OrderNo                   Text;
   parameter CreateRentalTransactions  Text;
   parameter StartEvent                Number;
}

--------------------------------- FUNCTIONS ---------------------------------

function RentalTransDueOrdersExist Boolean {
   parameter Selection Text;
}

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------
