------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -------------------------------------------------------------------
-- 2018-07-23  SeJalk  SCUXXW4-8522, created from dlgOrderQuotationWon using MTG Version: 1.23
------------------------------------------------------------------------------------------
projection CreateOrderFromQuotation;
component ORDER;
layer Core;
description "Use this API when creating a customer order from a sales quotation.";
category Users;

include fragment NonRentalSalesPartLovSelector;
include fragment OrderCancelReasonLovSelector;
@DynamicComponentDependency RMCOM
include fragment  BusinessRepresentativeLovSelector;
include fragment LoseWinReasonLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset OrderQuotationWonSet for OrderQuotationWonVirtual;

------------------------------ ENTITY DETAILS -------------------------------

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------
function GetWonReasons List<Entity(LoseWinReasonLov)> {
   where = "LOSE_WIN_DB = 'WIN' AND USED_BY_ENTITY_DB like '%^SQ^%'";
}

function CalculatePrice Structure(CalcPriceStruct) {

   parameter QuotationNo         Text;
   parameter LineNo              Text;
   parameter RelNo               Text;
   parameter LineItemNo          Number;
   parameter BuyQtyDue           Number;
   parameter MinDuration         Number;
}

function GetSalesPrices Structure(SalesPriceStruct) {
   parameter SalesPrice             Number;
   parameter SalesPriceInclTax      Number;
   parameter QuotationNo         Text;
   parameter LineNo              Text;
   parameter RelNo               Text;
   parameter LineItemNo          Number;
   parameter Contract          Text;
}

function ValidateFields Structure(ValidateStruct) {
   parameter CustomerNo         Text;
   parameter CustomerPoNo       Text;
   parameter MainRepresentative Text;
}

-------------------------------- STRUCTURES ---------------------------------
structure CalcPriceStruct {
   attribute SalesPrice             Number;
   attribute SalesPriceInclTax      Number;
   attribute PriceFoundFlag         Boolean;
}

structure SalesPriceStruct {
   attribute SalesPrice             Number;
   attribute SalesPriceInclTax      Number;
}

structure ValidateStruct {
   attribute PoExist Boolean;
   attribute EligibleRep Text;
}

structure CreatedOrderInfoStruct {
   attribute Info Text;
   attribute OrderNo Text;
   attribute PreAccountingId Number;
}

--------------------------------- VIRTUALS ----------------------------------
virtual OrderQuotationWonVirtual {
   ludependencies = OrderQuotationLineVirtual;
   attribute QuotationNo Text {
      label = "Quotation No";
      maxlength = 12;
   }
   attribute LineNoArr Text;
   attribute RelNoArr Text;
   attribute LineItemNoArr Text;

   attribute OrderId Text {
      label = "Order Type";
      maxlength = 3;
      required = [true];
      format = uppercase;
   }
   attribute Contract Text;
   attribute WantedDeliveryDate Timestamp {
      label = "Wanted Delivery Date/Time";
      required = [true];
   }
   attribute WantedDeliveryDateOrg Timestamp;
   attribute ChangeLineDeliveryDate Text;
   attribute Status Boolean("TRUE", "FALSE") {
      label = "Create Order in Released Status";
      required = [true];
   }
   attribute LimitSalesToAssortments Boolean("TRUE", "FALSE") {
      label = "Limit Sales to Assortments";
      required = [true];
   }
   attribute OverruleLimitSaleToAssort Boolean("TRUE", "FALSE") {
      label = "Overrule Limit Sale To Assort";
      required = [true];
   }
   attribute UpdateWon Boolean("TRUE", "FALSE") {
      label = "Override Won Reasons/Notes";
      required = [true];
   }
   attribute PrePostings Boolean("TRUE", "FALSE") {
      label = "Pre-posting";
      required = [true];
   }

   attribute CustomerPoNo Text {
      label = "Customer's PO No";
      maxlength = 100;
   }
   attribute CustomerNo Text {
      label = "Customer No";
      maxlength = 100;
   }
   attribute AllRep Boolean("TRUE", "FALSE") {
      label = "Copy All Representatives";
      required = [true];
   }
   attribute MainRepresentative Text {
      label = "Main Representative ID";
      maxlength = 20;
      format = uppercase;
   }
   attribute MainRepresentativeName Text {
      label = "Main Representative Name";
      maxlength = 2000;
   }
   attribute CopyContacts Boolean("TRUE", "FALSE") {
      label = "Copy Contacts";
      required = [true];
   }
   attribute LoseWinNote Text {
      label = "Won Note";
   }
   attribute ValidQuantity Boolean {
      required = [true];
   }
   attribute ReasonId Text;
   attribute ChangedNote Boolean("TRUE", "FALSE") {
      required = [true];
   }
   reference OrderIdRef(OrderId) to CustOrderType(OrderId) {
      label = "Order Type";
   }
   reference ReasonIdRef(ReasonId) to LoseWinReasonLov(ReasonId) {
      label = "Reason ID";
   }
   @DynamicComponentDependency CRM
   reference MainRepresentativeRef(MainRepresentative) to BusinessRepresentativeLov(RepresentativeId) {
      label = "Main Representative ID";
   }
   array PriceBreakedLinesArray(QuotationNo) to OrderQuotationLineVirtual(QuotationNo);
   action UpdateGradPriceLine;
   action CreateOrder Structure(CreatedOrderInfoStruct) {
      ludependencies = OrderQuotationLine;
      supportwarnings = [true];
   }
   action CreatePrePosting {
      parameter OrderNo Text;
   }
}

virtual OrderQuotationLineVirtual {
   crud = Read, Update;
   attribute QuotationNo Text {
      label = "Quotation No";
      maxlength = 12;
   }
   attribute LineNo Text {
      editable = [false];
   }
   attribute RelNo Text {
      editable = [false];
   }
   attribute LineItemNo Number;
   attribute RentalDb Boolean("TRUE", "FALSE") {
      fetch = "RENTAL_DB";
      label = "Rental";
      editable = [false];
   }
   attribute CatalogNo Text {
      label = "Sales Part No";
      editable = [false];
   }
   attribute SalesPartDescription Text {
      fetch = "SALES_PART_API.Get_Catalog_Desc(contract,CATALOG_NO)";
      label = "Sales Part Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute BuyQtyDue Number {
      label = "Sales Qty";
   }
   attribute MinDuration Number {
      editable = [false];
      label = "Min Duration";
      maxlength = 2000;
   }
   attribute SaleUnitPrice Number {
      label = "Price/Curr";
   }
   attribute UnitPriceInclTax Number {
      label = "Price Incl Tax/Curr";
   }
   attribute SalesUnitMeasure Text {
      label = "UoM";
      editable = [false];
   }
   attribute Contract Text {
      editable = [false];
   }
   attribute TaxLiabilityTypeDb Text {
      label = "Tax Liability Type";
      maxlength = 20;
      editable = [false];
   }
   attribute UsePriceInclTax Boolean;

   reference CatalogNoRef(Contract, CatalogNo) to NonRentalSalesPartLov(Contract, CatalogNo) {
      label = "Sales Part No";
   }
   reference SalesUnitMeasureRef(SalesUnitMeasure) to IsoUnit(UnitCode) {
      label = "UoM";
   }
   reference QuotationNoRef(QuotationNo) to OrderQuotation(QuotationNo) {
      label = "Quotation No";
   }
   reference ContractRef(Contract) to Site(Contract) {
      label = "Site";
   }

}


--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

