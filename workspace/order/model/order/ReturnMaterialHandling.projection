---------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ----------------------------------------------------------
-- 2020-11-10  RavDlk  SC2020R1-11228, Handled the boolean fields properly
-- 2018-06-26  Lufelk  SCUXX-3681, Converted from tbwReturnMaterialOverview using MTG Version: 1.23
---------------------------------------------------------------------------------
projection ReturnMaterialHandling;
component ORDER;
layer Core;
description "Projection for Return Material";
category Users;
include fragment CustOrdCust2Selector;
include fragment AllSalesPartActiveLovSelector;
include fragment TaxCalcStructureActiveSelector;
include fragment SalesPartGtinNoLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset ReturnMaterialLineSet for ReturnMaterialLineQuery;

------------------------------ ENTITY DETAILS -------------------------------
query ReturnMaterialLineQuery {
   from = "return_material_join_uiv";
   lu = ReturnMaterialLine;
   keys = RmaNo, RmaLineNo;
   attribute RmaNo Number {
      label = "RMA No";
   }
   attribute RmaLineNo Number {
      label = "RMA Line No";
      editable = [false];
   }
   attribute DateRequested Date {
      required = [true];
   }
   attribute CustomerNo Text {
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute CustomerName Text {
      fetch = "CUST_ORD_CUSTOMER_API.Get_Name(CUSTOMER_NO)";
      maxlength = 2000;
   }
   attribute CatalogNo Text {
      label = "Sales Part No";
      maxlength = 25;
      required = [true];
      format = uppercase;
   }
   attribute CatalogDesc Text {
      label = "Sales Part Description";
      maxlength = 200;
   }
   attribute LineItemNo Number;
   attribute ConfigurationId Text {
      label = "Configuration ID";
      maxlength = 50;
      required = [true];
      editable = [ETag = null];
   }
   attribute ConditionCode Text {
      maxlength = 10;
   }
   attribute ReturnReasonCode Text {
      label = "Return Reason";
      maxlength = 10;
      required = [true];
      format = uppercase;
   }
   attribute Objstate Enumeration(ReturnMaterialLineState);
   attribute InspectionInfo Text {
      maxlength = 100;
   }
   attribute QtyToReturn Number {
      label = "Qty to Return";
      required = [true];
   }
   attribute QtyReceived Number {
      label = "Total Received Qty";
   }
   attribute ReturnUoM Text {
      fetch = "RETURN_MATERIAL_LINE_API.Get_Sales_Unit_Meas(RMA_NO,RMA_LINE_NO)";
      maxlength = 2000;
   }
   attribute QtyReturnedInv Number {
      label = "Returned Inv Qty";
   }
   attribute QtyScrapped Number {
      label = "Scrapped Qty";
   }
   attribute OrderNo Text {
      maxlength = 12;
      format = uppercase;
   }
   attribute LineNo Text {
      maxlength = 4;
   }
   attribute RelNo Text {
      label = "Del No";
      maxlength = 4;
   }
   attribute RentalNo Text {
      fetch = "CUSTOMER_ORDER_LINE_API.GET_PRIMARY_RENTAL_NO(ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO)";
      maxlength = 2000;
   }
   attribute FeeCode Text {
      label = "Tax Code";
      maxlength = 20;
      required = [true];
   }
   attribute TaxCodeDescription Text {
      fetch = "Statutory_Fee_API.Get_Description(COMPANY, FEE_CODE)";
      maxlength = 2000;
   }
   attribute TaxClassId Text {
      label = "Tax Class";
      maxlength = 20;
      editable = [ETag != null];
      format = uppercase;
   }
   attribute TaxCalcStructureId Text {
      label = "Tax Calculation Structure";
      maxlength = 20;
      required = [true];
      format = uppercase;
   }
   attribute DeliveryType Text {
      maxlength = 20;
      format = uppercase;
   }
   attribute DebitInvoiceNo Text {
      label = "Debit/Corr Inv No";
      maxlength = 50;
   }
   attribute Contract Text {
      label = "Site";
      maxlength = 5;
      required = [true];
      format = uppercase;
   }
   attribute DateReturned Date {
      label = "Return Completed";
   }
   attribute NoteText Text {
      maxlength = 2000;
   }
   attribute CurrencyCode Text {
      maxlength = 3;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute SaleUnitPrice Number {
      label = "Price/Curr";
      required = [true];
      format = ifscurrency;
   }
   attribute BaseSaleUnitPrice Number {
      label = "Price/Base";
      required = [true];
      format = ifscurrency;
   }
   attribute UnitPriceInclTax Number {
      label = "Price Incl Tax/Curr";
      required = [true];
      format = ifscurrency;
   }
   attribute BaseUnitPriceInclTax Number {
      label = "Price incl Tax/Base";
      required = [true];
      format = ifscurrency;
   }
   attribute GrossAmtBase Number {
      fetch = "RETURN_MATERIAL_LINE_API.Get_Total_Base_Price_Incl_Tax(RMA_NO, RMA_LINE_NO)";
      label = "Gross Amt/Base";
      format = ifscurrency;
   }
   attribute GrossAmtCurr Number {
      fetch = "RETURN_MATERIAL_LINE_API.Get_Line_Total_Price_Incl_Tax(RMA_NO, RMA_LINE_NO)";
      label = "Gross Amt/Curr";
      format = ifscurrency;
   }
   attribute PriceConvFactor Number {
      required = [true];
   }
   attribute CurrencyRate Number {
      required = [true];
   }
   attribute CurrencyRate2 Number {
      fetch = "Order_Currency_Rate_Util_API.Get_Fin_Curr_Rate(CURRENCY_RATE, COMPANY, CURRENCY_CODE)";
      label = "Currency Rate";
      required = [true];
   }
   attribute PurchaseOrderNo Text {
      fetch = "PURCHASE_ORDER_NO";
      label = "Customer's PO No";
      maxlength = 50;
   }
   attribute NetAmountBase Number {
      fetch = "RETURN_MATERIAL_LINE_API.Get_Line_Total_Base_Price(RMA_NO, RMA_LINE_NO)";
      label = "Net Amount/Base";
      format = ifscurrency;
   }
   attribute NetAmountCurr Number {
      fetch = "RETURN_MATERIAL_LINE_API.Get_Line_Total_Price(RMA_NO, RMA_LINE_NO)";
      label = "Net Amount/Curr";
      format = ifscurrency;
   }
   attribute TaxAmountBase Number {
      fetch = "Return_Material_Line_API.Get_Total_Tax_Amount_Base(RMA_NO,RMA_LINE_NO)";
      label = "Tax Amount/Base";
      format = ifscurrency;
   }
   attribute TaxAmountCurr Number {
      fetch = "Return_Material_Line_API.Get_Total_Tax_Amount_Curr(RMA_NO,RMA_LINE_NO)";
      label = "Tax Amount/Curr";
      format = ifscurrency;
   }
   attribute CreditApproverId Text {
      label = "Credit Approver ID";
      maxlength = 20;
      format = uppercase;
   }
   attribute CreditCorrInvoiceNo Text {
      fetch = " Customer_Order_Inv_Head_api.get_invoice_no_by_id(CREDIT_INVOICE_NO)";
      label = "Credit/Corr Invoice No";
      maxlength = 50;
      editable = [false];
   }
   attribute CreditInvoiceItemId Number {
      label = "Credit/Corr Invoice Line Pos";
   }
   attribute ReturnApproverId Text {
      label = "Coordinator";
      maxlength = 20;
      format = uppercase;
   }
   attribute CustRef Text {
      label = "Reference";
      maxlength = 30;
   }
   attribute ReferenceName Text {
      fetch = "Contact_Util_API.Get_Cust_Contact_Name(CUSTOMER_NO, CUSTOMER_NO_ADDR_NO, CUST_REF)";
      maxlength = 200;
      editable = [false];
   }
   attribute HeadState Text {
      label = "Header Status";
      maxlength = 253;
   }
   attribute CancelReason Text {
      label = "Cancellation Reason";
      maxlength = 10;
      format = uppercase;
   }
   attribute CancellationReasonDescription Text {
      fetch = "ORDER_CANCEL_REASON_API.GET_REASON_DESCRIPTION(CANCEL_REASON)";
      maxlength = 2000;
   }
   attribute GTIN Text {
      fetch = "PART_GTIN_API.Get_Default_Gtin_No(CATALOG_NO)";
      maxlength = 14;
   }
   attribute RebateBuilder Boolean("TRUE", "FALSE") {
      fetch = "REBATE_BUILDER_DB";
      label = "Rebate Builder";
   }
   attribute DocumentText Boolean {
      fetch = "DECODE(Document_Text_API.Note_Id_Exist(NOTE_ID), 1, 'TRUE', 'FALSE')";
      label = "Document Text";
   }
   attribute DebitInvoiceItemId Number {
      label = "Debit/Corr Inv No";
      maxlength = 4;
   }
   attribute ReplacementOrderNo Text {
      maxlength = 12;
      required = [true];
   }
   attribute ConvFactor Number {
      required = [true];
   }
   attribute InvertedConvFactor Number {
      label = "Inverted Conversion Factor";
   }
   attribute NoteId Number {
      label = "Note ID";
   }
   attribute PartNo Text {
      label = "Inventory Part No";
      maxlength = 25;
   }
   attribute CustomersCompany2 Text {
      fetch = "Site_API.Get_Company(Cust_Ord_Customer_API.Get_Acquisition_Site(Return_Material_API.Get_Customer_No(RMA_NO)))";
      label = "Customer's Company";
      maxlength = 2000;
      format = uppercase;
   }
   attribute CustomersCompany3 Text {
      fetch = "Cust_Ord_Customer_API.Get_Acquisition_Site(Return_Material_API.Get_Customer_No(RMA_NO))";
      label = "Customer's Company";
      maxlength = 2000;
      format = uppercase;
   }
   attribute Company Text {
      maxlength = 20;
      format = uppercase;
   }
   attribute CurrencyRounding Number {
      fetch = "Currency_Code_API.Get_Currency_Rounding(COMPANY, CURRENCY_CODE)";
   }
   attribute TaxLiabilityTypeDb Text {
      fetch = "Return_Material_Line_API.Get_Tax_Liability_Type_Db(RMA_NO,RMA_LINE_NO)";
      label = "Tax Liability Type Db";
      maxlength = 100;
   }
   attribute Rental Boolean("TRUE", "FALSE") {
      fetch = "RENTAL_DB";
      label = "Rental";
   }
   @DynamicComponentDependency EXPCTR
   attribute ExportLicenseStatusforFindandConnect Text {
      fetch = "EXP_LICENSE_CONNECT_HEAD_API.GET_STATE_BY_REF(RMA_NO,RMA_LINE_NO,NULL,NULL,'RMA')";
   }
   attribute Condition Text {
      fetch = "RETURN_MATERIAL_LINE_API.Get_Allowed_Operations__(RMA_NO, RMA_LINE_NO)";
      maxlength = 2000;
   }
   attribute ReturnToContract Text {
      label = "Return to Site";
      maxlength = 5;
   }
   attribute ReturnToVendorNo Text {
      label = "Return to Supplier";
      maxlength = 20;
   }
   attribute OriginatingRmaNo Number {
      label = "Originating RMA No";
   }
   attribute ReceiptRmaNo Number {
      label = "Receipt RMA No";
   }
   attribute NextYear Date {
      fetch = "add_months(sysdate, 12)";
   }
   attribute LastYear Date {
      fetch = "add_months(sysdate, -12)";
   }
   reference ReturnMaterialReasonRef(ReturnReasonCode) to ReturnMaterialReason(ReturnReasonCode);
   reference InventoryPartRef(Contract, PartNo) to InventoryPart(Contract, PartNo);
   reference TaxClassRef(Company, TaxClassId) to TaxClass(Company, TaxClassId);
   reference DeliveryTypeRef(Company, DeliveryType) to DeliveryType(Company, DelivTypeId);
   reference SalesPartRef(Contract, CatalogNo) to SalesPart(Contract, CatalogNo);
   reference CustomerOrderLineRef(OrderNo, LineNo, RelNo, LineItemNo) to CustomerOrderLine(OrderNo, LineNo, RelNo, LineItemNo);
   reference CustomerNoRef(CustomerNo) to CustOrdCust2(CustomerNo) {
      label = "Customer No";
   }
   reference CatalogNoRef(Contract, CatalogNo) to AllSalesPartActiveLov(Contract, CatalogNo) {
      label = "Sales Part No";
   }
   @DynamicComponentDependency CFGCHR
   reference ConfigurationIdRef(ConfigurationId) to ConfigurationSpec(ConfigurationId) {
      label = "Configuration ID";
   }
   reference ConditionCodeRef(ConditionCode) to ConditionCode(ConditionCode) {
      label = "Condition Code";
   }
   reference ReturnReasonCodeRef(ReturnReasonCode) to ReturnMaterialReason(ReturnReasonCode) {
      label = "Return Reason";
   }
   reference ReturnUoMRef(ReturnUoM) to IsoUnit(UnitCode) {
      label = "Return UoM";
   }
   reference LineItemNoRef(OrderNo, LineNo, RelNo, LineItemNo) to CustomerOrderLine(OrderNo, LineNo, RelNo, LineItemNo) {
      label = "Line Item No";
   }
   reference FeeCodeRef(Company, FeeCode) to StatutoryFee(Company, FeeCode) {
      label = "Tax Code";
   }
   reference TaxCalcStructureIdRef(Company, TaxCalcStructureId) to TaxCalcStructureActive(Company, TaxCalcStructureId) {
      label = "Tax Calculation Structure";
   }
   reference CreditApproverIdRef(CreditApproverId) to OrderCoordinator(AuthorizeCode) {
      label = "Credit Approver ID";
   }
   reference CancelReasonRef(CancelReason) to OrderCancelReason(CancelReason) {
      label = "Cancellation Reason";
   }
   reference GTINRef(Contract, GTIN) to SalesPartGtinNoLov(Contract, GtinNo) {
      label = "GTIN";
   }
}