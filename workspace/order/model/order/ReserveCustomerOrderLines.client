--------------------------------------------------------------------------------------------------------------------------
--  Date       Sign    History
-- ----------  ------  ---------------------------------------------------------------------------------------------------
-- 2021-02-01  DhAplk  SC2020R1-11784, Replaced complex project views using Get methods if reference is read only.
-- 2020-02-10  RasDlk  SCSPRING20-170, Modified the command MakeManualReservationCommand by adding initcontext to show the title correctly
-- 2020-02-10          when navigating to the manual reservations page.
-- 2019-03-12  Kubalk  SCUXXW4-17249, Dependency annotations added.
-- 2018-10-04  RaVdlk  SCUXXW4-1369, Implemented the RMBs
-- 2018-09-28  DiNglk  SCUXXW4-1369, Converted tbwReserveCustomerOrderLine using MTG Version: 1.30
--------------------------------------------------------------------------------------------------------------------------

client ReserveCustomerOrderLines;
component ORDER;
layer Core;
projection ReserveCustomerOrderLines;
include fragment UserAllowedSiteLovSelector;
include fragment CustOrdCust1Selector;
include fragment OrderCoordinatorLovSelector;
include fragment SalesPartSalesmanLovSelector;
warningsenabled = ReserveOrder;
----------------------------- NAVIGATOR ENTRIES -----------------------------

navigator {
   entry ReserveCustomerOrderLinesNavEntry parent OrderNavigator.SalesReservation at index 200 {
      label = "Reserve Customer Order Lines";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------

page List using ReserveCustomerOrderLines {
   label = "Reserve Customer Order Lines";
   startupmode = search;
   list ReserveCustomerOrderLineList;
}

--------------------------------- COMMANDS ----------------------------------

command ReserveCommand for ReserveCustomerOrderLine {
   label = "Reserve";
   mode = SelectedRecords;
   enabled = [true];
   bulkexecute {
      call ReserveOrder(Selection) {
         when SUCCESS {
            hideselection();
         }
      }
   }
}

command MakeManualReservationCommand for ReserveCustomerOrderLine {
   label = "Reserve Manually";
   mode = SelectedRecords;
   enabled = [PartNo != null or LineItemNo >= 0];
   bulkexecute {
      bulknavigate "page/ManualReservationsForShipmentAndCustomerOrderLine/Form?initcontext=Source:'Customer Order Line'&$filter=SourceRef1 eq $[OrderNo] and SourceRef2Db eq $[LineNo] and SourceRef3Db eq $[RelNo] and SourceRef4Db eq $[LineItemNoDuplicate]";
   }
}
command HandleShortageCommand for ReserveCustomerOrderLine {
   label = "Handle Shortage";
   mode = SelectedRecords;
   enabled = [true];
   bulkexecute {
      bulknavigate "page/HandleCustomerOrderShortages/List?$filter=OrderNo eq $[OrderNo] and LineNo eq $[LineNo] and RelNo eq $[RelNo] and LineItemNo eq $[LineItemNo]";
   }
}
command PackagePartStructureCommand for ReserveCustomerOrderLine {
   label = "Package Part Structure";
   enabled = [LineItemNo = -1];
   execute {
      navigate "page/PackageStructure/Form?$filter=OrderNo eq $[OrderNo] and LineNo eq $[LineNo] and RelNo eq $[RelNo] and LineItemNo eq $[LineItemNo]";
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector ReferenceCustOrderTypeSelector for CustOrderType {
   label = "";
   static OrderId {
      label = "Order Type";
   }
   static Description;
   static PickInventoryType {
      label = "Use Shipment Inventory";
   }
   static OeAllocAssignFlag {
      label = "Priority Reservations";
   }
   static OnlineProcessing {
      label = "Online Execution";
   }
   static AllowPartialPicking {
      label = "Keep Remainig Reservation at Partial Picking";
   }
}
---------------------------------- GROUPS -----------------------------------

----------------------------------- LISTS -----------------------------------

list ReserveCustomerOrderLineList for ReserveCustomerOrderLine {
   field OrderNoRef;
   field LineNo;
   field RelNo;
   field LineItemNo;
   field PartNoRef {
      size = Large;
   }
   field PartNoRef.DescriptionInUse {
      label = "Part Description";
      size = Large;
   }
   field ConditionCodeRef.ConditionCode;
   field ConditionCodeRef.Description {
      label = "Condition Code Description";
   }
   field CatalogNo {
      size = Large;
   }
   field CatalogDesc {
      size = Large;
   }
   field CatalogType;
   lov ContractRef with ReferenceUserAllowedSiteLovSelector;
//   field CustomerOrderLineRef.Objstate
//      {
//      label = "STATE";
//
//   }
   badge CustomerOrderLineRef.Objstate {
      label = "Status";
      emphasis Progress3 = [CustomerOrderLineRef.Objstate = "Released"];
      emphasis Progress5 = [CustomerOrderLineRef.Objstate = "Reserved"];
      emphasis Progress7 = [CustomerOrderLineRef.Objstate = "Picked"];
      emphasis Progress8 = [CustomerOrderLineRef.Objstate = "PartiallyDelivered"];

      style = TextOnly;
   }
   field OrderIdRef;
   lov CustomerNoRef with ReferenceCustOrdCust1Selector {
      description = CustomerNoRef.Name;
      label = "Customer";
      size = Large;
      contactwidget {
         enabled = [CustomerNoRef.CustomerNo != null];
         source = Customer;
      }
   }

   lov AuthorizeCodeRef with ReferenceOrderCoordinatorLovSelector {
      contactwidget {
         enabled = [AuthorizeCodeRef.AuthorizeCode != null];
         source = Person;
      }
   }

   lov SalesmanCodeRef with ReferenceSalesPartSalesmanLovSelector {
      contactwidget {
         enabled = [SalesmanCode != null];
         source = Person;
      }
   }
   field BuyQtyDue;
   field SalesUnitMeasRef;
   field RevisedQtyDue;
   field PartNoRef.UnitMeas {

      label = "Inventory UoM";
   }
   field LoadListID;
   field AvailableQty;
   field QtyPicked;
   field QtyShipped;
   field PickedCatchQty;
   field DeliveredCatchQty;
   field PlannedDueDate;
   field RouteIdRef;
   field RouteIdRef.Description {
      label = "Route Description";
   }
   field PlannedShipDate;
   field PlannedShipPeriodRef;
   field WantedDeliveryDate;
   field PlannedDeliveryDate;
   field PromisedDeliveryDate;
   field Priority;
   field BackorderOption {
      size = Large;
   }
   field PartOwnership;
   field Owner {
      contactwidget {
         enabled = [Owner != null];
         source {
            Customer = [PartOwnerShipDb = "CUSTOMER OWNED"];
            Supplier = [PartOwnerShipDb = "SUPPLIER LOANED" or PartOwnerShipDb = "SUPPLIER RENTED"];
         }
      }
   }
   field CustomerInfoRef.Name {
      label = "Owning Customer Name";
   }
   @DynamicComponentDependency PROJ
   field ProgramId {
      label = "Program ID";
   }
   @DynamicComponentDependency PROJ
   field ProgramDescription;
   @DynamicComponentDependency PROJ
   field ProjectRef;
   @DynamicComponentDependency PROJ
   field ProjectName;
   @DynamicComponentDependency PROJ
   field SubProjectId;
   @DynamicComponentDependency PROJ
   field SubProjectDescription;
   @DynamicComponentDependency PROJ
   field ActivityNo;
   @DynamicComponentDependency PROJ
   field ActivityDescription;
   @DynamicComponentDependency PROJ
   field ActivityRef;
   field DemandOrderRef1;
   field DemandCode;

   fieldranking OrderNoRef, LineNo, RelNo, LineItemNo, PartNoRef, ConditionCodeRef, RevisedQtyDue;

   commandgroup ReserveCmdGroup {
      command ReserveCommand;
      command MakeManualReservationCommand;
   }
   command HandleShortageCommand;
   command PackagePartStructureCommand;
}

@Override
list CustOrderTypeLovList for CustOrderType {
   label = "";
   static OrderId {
      label = "Order Type";
   }
   static Description;
   static PickInventoryType {
      label = "Use Shipment Inventory";
   }
   static OeAllocAssignFlag {
      label = "Priority Reservations";
   }
   static OnlineProcessing {
      label = "Online Execution";
   }
   static AllowPartialPicking {
      label = "Keep Remainig Reservation at Partial Picking";
   }
}
----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------
