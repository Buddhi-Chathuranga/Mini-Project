-------------------------------------------------------------------------------------------------
-- Date        Sign     History
-- ----------  ------   -------------------------------------------------------------------------
-- 2020-11-17  RavDlk   SC2020R1-11227, Handled the enumeration ConsignmentStock
-- 2020-07-27  BudKlk   Bug 154810(SCZ-10801), Added EXPIRATION_DATE_BASE to the ReportConsumedCommand.
-- 2020-03-26  BudKLK   Bug 152192(SCZ-8629) Replaced SalesPartRef.PartNo from PartNo.
-- 2019-04-25  LaThlk   SCUXXW4-18791, Added the defaultfilter to the list ConsignmentStockConsumptionList.
-- 2019-04-25  LaThlk   SCUXXW4-18796, Validated the QtyToConsume using the before command BeforeCrudInDetail.
-- 2019-04-25  LaThlk   SCUXXW4-18777, Removed the header list label, command group and modified the child list label.
-- 2019-04-02  LaThlk   SCUXXW4-11443, Implemented after CRUD commands and the detail level ReportConsumedCommand.
-- 2018-10-25  RuLiLk   SCUXXW4-9755, Converted from tbwConsignmentStockConsumption using MTG Version: 1.31
-------------------------------------------------------------------------------------------------
client CustomerConsignmentStockConsumptions;

component ORDER;
layer Core;
projection CustomerConsignmentStockConsumptionsHandling;
include fragment NonRentalSalesPartLovSelector;
include fragment CustAddressShipLovSelector;
include fragment CustOrdCust1Selector;
include fragment CreateRefillOrderAssistant;
include fragment OrderCoordinatorLovSelector;
include fragment CreatedRefillOrdersAssistant;


-------------------------------- MAIN PAGES ---------------------------------


--------------------------------- COMMANDS ----------------------------------


----------------------------- VISUAL COMPONENTS -----------------------------


----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry CustomerConsignmentStockConsumptionsNavEntry parent OrderNavigator.CustomerConsignmentStock at index 400 {
      label = "Customer Consignment Stock Consumptions";
      page List home CustomerConsignmentStock;
   }
}
-------------------------------- MAIN PAGES ---------------------------------
page List using CustomerConsignmentStockSet {
   label = "Customer Consignment Stock Consumptions";
   startupmode = search;
   list ConsignmentStockConsumptionList;
   list ConsignmentStockConsumptionDetailsList(CustomerConsignmentStockDetailArray) bind ConsignmentStockConsumptionList {
      display = Nested;
   }
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command CreateRefillOrderCommand for CustomerConsignmentStock {
   label = "Create Refill Order";
   enabled = [ConsignmentStock != "NoConsignmentStock"];
   mode = SelectedRecords;
   bulkexecute {
      assistant CreateRefillOrderAssistant(Selection) {
         when OK {
            exit OK;
         }
         when CANCEL {
            exit CANCEL;
         }
      }
   }
}

command AfterCrudInHeader for CustomerConsignmentStock {
   variable OrderListVar {
      type = Text;
   }
   bulkexecute {
      call RaiseCreatedRefillOrders(UpdateList) into OrderListVar;
      if [OrderListVar != null] {
         assistant CreateRefillOrderAssistant(OrderListVar) {
            when OK {
               exit OK;
            }
            when CANCEL {
               exit CANCEL;
            }
         }
      }
   }
}

command AfterCrudInDetail for CustomerConsignmentStockDetail {
   variable OrderListVar {
      type = Text;
   }
   bulkexecute {
      call RaiseCreatedRefillOrders(UpdateList) into OrderListVar;
      if [OrderListVar != null] {
         assistant CreateRefillOrderAssistant(OrderListVar) {
            when OK {
               exit OK;
            }
            when CANCEL {
               exit CANCEL;
            }
         }
      }
   }
}

command BeforeCrudInDetail for CustomerConsignmentStockDetail {
   execute {
      if [QtyToConsume > Quantity] {
         error("The Consumed Qty cannot be more than Consignment Stock Qty.");
         exit CANCEL;
      }
   }
}

command ReportConsumedCommand for CustomerConsignmentStockDetail {
   label = "Report Consumed";
   enabled = [true];
   mode = SelectedRecords;
   variable OrderVar {
      type = Text;
   }
   bulkexecute {
      stringify(records, "EXPIRATION_DATE_BASE=${ExpirationDateBase}^CATALOG_NO=${CatalogNo}^CONTRACT=${Contract}^CUSTOMER_NO=${CustomerNo}^ADDR_NO=${AddrNo}^QUANTITY=${Quantity}^CONFIGURATION_ID=${ConfigurationId}^LOT_BATCH_NO=${LotBatchNo}^SERIAL_NO=${SerialNo}^ENG_CHG_LEVEL=${EngChgLevel}^WAIV_DEV_REJ_NO=${WaivDevRejNo}^ACTIVITY_SEQ=${ActivitySeq}^HANDLING_UNIT_ID=${HandlingUnitId}^", JSON) into OrderSelectionVar;
      call ReportConsumed(OrderSelectionVar) into OrderVar;
      if [OrderVar != null] {
         assistant CreateRefillOrderAssistant(OrderVar) {
            when OK {
               exit OK;
            }
            when CANCEL {
               exit CANCEL;
            }
         }
      }
   }

}
--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------

----------------------------------- LISTS -----------------------------------

list ConsignmentStockConsumptionList for CustomerConsignmentStock {
   label = "";
   defaultfilter = [ConsignmentStockQty > 0];

   crudactions {
      after command AfterCrudInHeader;
   }
   field QtyToConsume;

   measure ConsignmentStockQty(InventoryUom) {
      unitselector IsoUnitSelector;
      uniteditable = [false];
   }

   field Contract {
      size = Small;
   }
   lov CatalogNoRef with ReferenceNonRentalSalesPartLovSelector {
      label = "Sales Part No";
   }
   field SalesPartDescription;
   field PartNo {

      label = "Part No";

   }
   field PartDescription;

   lov CustomerNoRef with ReferenceCustOrdCust1Selector {
      contactwidget {
         enabled = [CustomerNo != null];
         source = Customer;
      }
      description = CustomerNoRef.Name;

   }

   lov AddrNoRef with ReferenceCustAddressShipLovSelector {
      size = Small;
   }
   measure OrderPoint(InventoryUom) {
      unitselector IsoUnitSelector;
      uniteditable = [false];
   }

   measure OrderQty(SalesPartRef.SalesUnitMeas) {
      unitselector IsoUnitSelector;
      uniteditable = [false];
   }

   field ConsignmentStock {
      size = Small;
      enumerationtrue = "ConsignmentStock";
      enumerationfalse = "NoConsignmentStock";
      truelabel = "Yes";
      falselabel = "No";
   }
   field AllowAggregatedReporting {
      size = Small;
   }
   fieldranking  QtyToConsume, ConsignmentStockQty, Contract, CatalogNoRef, CustomerNoRef;

   command CreateRefillOrderCommand;
}

list ConsignmentStockConsumptionDetailsList for CustomerConsignmentStockDetail {
   label = "Consignment Stock Consumption Details";
   crudactions {
      before command BeforeCrudInDetail;
      update action = ConsumeConsignmentStock;
      after command AfterCrudInDetail;
   }
   field QtyToConsume;
   field Quantity {
      size = Small;
   }
   field UnitMeas {
      size = Small;
   }
   field ConfigurationId {
      size = Small;
   }
   field HandlingUnitId;
   field HandlingUnitRef.Sscc {
      size = Small;
      label = "SSCC";
   }
   field HandlingUnitRef.AltHandlingUnitLabelId {
      size = Small;
      label = "Alt Handling Unit Label ID";
   }
   field LotBatchNo {
      size = Small;
   }
   field SerialNo {
      size = Small;
   }
   field ConditionCode {
      size = Small;
   }
   field ConditionCodeDesc {
      size = Small;
   }
   field EngChgLevel {
      size = Small;
   }
   field WaivDevRejNo {
      size = Small;
   }
   field ActivitySeq;
   field ExpirationDate;

   command ReportConsumedCommand;
}
----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------
