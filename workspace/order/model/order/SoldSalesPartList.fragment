--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-03-22  SWiclk  SCUXXW4-1584, Converted from tbwSoldSalesParts using MTG Version: 1.34
--------------------------------------------------------------------------------------
fragment SoldSalesPartList;
component ORDER;
layer Core;
description "Use this API to view all the sales parts ever sold to the customer. If you also want to view all customer order lines related to a given sales part, click on the Customer Order Lines command.";
include fragment CompanyHavingSiteLov;
include fragment IntorderPartAlternateLov;

----------------------------- CLIENT FRAGMENTS ------------------------------

--------------------------------- COMMANDS ----------------------------------
command CustomerOrderLinesCommand for SoldSalesPartsSummary {
   label = "Customer Order Lines";
   enabled = [true];
   mode = SelectedRecords;
   bulkexecute {
      bulknavigate "page/CustomerOrderLines/List?$filter=CatalogNo eq $[CatalogNo] and CustomerNo eq $[CustomerNo]";
   }
}

--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------

----------------------------------- LISTS -----------------------------------

list SoldSalesPartsList for SoldSalesPartsSummary {
   orderby = CatalogNo;
   field CustomerNo;
   field CatalogNo;

   field CatalogDesc;
   field SalesPartRef.CatalogType {
      label = "Sales Part Type";
   }
   field Contract;
   field PartNo;
   field SalesPartRef.SalesUnitMeas {
      label = "Sales Unit";
   }
   field QtyShipped;
   field QtyInvoiced;
   field QtyReturned;
   computedfield ReturnedPercentage {
      label = "Returned Percentage";
      value = "#{QtyReturned/QtyShipped} %";
      type = Number;
      format = percentage;
   }
   // fieldranking CatalogNoRef, CatalogDesc, SalesPartType, ContractRef, PartNoRef, SalesPartRef.SalesUnitMeas, ShippedQty, InvoicedQty, ReturnedQty;

   commandgroup CommandGroupCmdGroup {
      command CustomerOrderLinesCommand;
   }
}
--------------------------- PROJECTION FRAGMENTS ----------------------------


----------------------------- MAIN ENTRY POINTS -----------------------------
entityset SoldSalesPartsSummarySet for SoldSalesPartsSummary;

------------------------------ ENTITY DETAILS -------------------------------

summary SoldSalesPartsSummary {

   from = "customer_order_line";
   keys = CustomerNo, CatalogNo, Contract, PartNo, Company, CatalogDesc;
   where = "Objstate IN ('PartiallyDelivered', 'Delivered', 'Invoiced')";

   attribute CustomerNo Text {
      fetch = "customer_no";
      label = "Customer No";
      format = uppercase;
   }
   attribute Company Text {
      fetch = "company";
      format = uppercase;
   }
   attribute CatalogNo Text {
      fetch = "catalog_no";
      label = "Sales Part No";
      format = uppercase;
   }
   attribute CatalogDesc Text {
      fetch = "catalog_desc";
      label = "Description";
   }
   attribute Contract Text {
      fetch = "contract";
      label = "Site";
      format = uppercase;
   }
   attribute QtyShipped Number {
      fetch = "SUM(qty_shipped)";
      label = "Shipped Qty";
   }
   attribute QtyInvoiced Number {
      fetch = "SUM(qty_invoiced)";
      label = "Invoiced Qty";
   }
   attribute QtyReturned Number {
      fetch = "SUM(qty_returned)";
      label = "Returned Qty";
   }
   attribute PartNo Text {
      fetch = "NVL(part_no,' ')";
   }
   @DynamicComponentDependency PURCH
   attribute VendorNo Text {
      fetch = "Supplier360_Api.Get_Vendor_No_From_Customer(customer_no)";
      label = "Supplier";
      editable = [false];
   }

   reference SalesPartRef(Contract, CatalogNo) to SalesPart(Contract, CatalogNo);


}
