--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-08-22  MaEelk  SCUXXW4-23909, Created. Moved the code from the obsolete fragment CreateCreditInvoiceAssistant.fragment
--------------------------------------------------------------------------------------
client CreateCreditInvoice;
component ORDER;
layer Core;
projection CreateCreditInvoice;



--------------------------------- FRAGMENTS ---------------------------------
include fragment ReturnMaterialInitialCheck;
include fragment ReturnMaterialLineInitialCheck;
include fragment ReturnMaterialChargeInitialCheck;

--------------------------------- COMMANDS ----------------------------------

command Ok for CreateCreditInvoiceVirtual {
   label = "Proceed";
   visible = [State != "Error"];
   execute {
      call ProcessCreateCreditInvoice(Selection, Source);
      exit OK;
   }
}

command Cancel for CreateCreditInvoiceVirtual {
   label = "Discard";
   visible = [State != "Error"];
   execute {
      exit CANCEL;
   }
}

command Close for CreateCreditInvoiceVirtual {
   label = "Close";
   visible = [State = "Error"];
   execute {
      exit CANCEL;
   }
}

command YestToAllMessagesCommand for CreateCreditInvoiceVirtual {
   label = "Yes to All";
   visible = [(State != "Error") and(((component.WarningList.RowCount > 0) and(component.InformationList.RowCount > 0)) or(component.WarningList.RowCount > 1) or(component.InformationList.RowCount > 1))];
   execute {
      call AnswerAllMessages(Objkey, true);
      exit;
   }
}

command NoToAllMessagesCommand for CreateCreditInvoiceVirtual {
   label = "No to All";
   visible = [(State != "Error") and(((component.WarningList.RowCount > 0) and(component.InformationList.RowCount > 0)) or(component.WarningList.RowCount > 1) or(component.InformationList.RowCount > 1))];
   execute {
      call AnswerAllMessages(Objkey, false);
      exit;
   }
}


----------------------------- VISUAL COMPONENTS -----------------------------

-------------------------------- ASSISTANTS ---------------------------------
assistant CreateCreditInvoiceAssistant using CreateCreditInvoiceVirtualSet {
   label = "Create Credit Invoice";
   savemode = OnLostFocus;

   input(Selection, Source);
   singlestep {
      list ErrorList(MessagesArray) {
         visible = [State = "Error"];
      }
      list WarningList(MessagesArray) {
         visible = [State in("Warning", "Info/Warning")];
      }
      list InformationList(MessagesArray) {
         visible = [State in("Information", "Info/Warning")];
      }
   }
   command Ok;
   -- either one of below command will be shown
   command Cancel;
   command Close;
   command YestToAllMessagesCommand;
   command NoToAllMessagesCommand;

}

----------------------------------- LISTS -----------------------------------
list ErrorList for CreateCreditInvoiceMessageVirtual {
   label = "Errors";
   defaultfilter = [MessageType = "Error"];
   preselect = [false];
   multiselect = [false];

   crudactions {
      new {
         enabled = [false];
      }
      edit {
         enabled = [false];
      }
   }
   badge MessageType {
      style = IconOnly;
      icon = "information";
      emphasis Error = [true];
      size = Small;
   }
   field RmaNo {
      size = Small;
   }
   field MessageText {
      size = Large;
      multiline = true;
   }
}

list WarningList for CreateCreditInvoiceMessageVirtual {

   label = "Warnings";
   editmode = SingleCellEdit;
   preselect = [false];

   defaultfilter = [MessageType = "Warning"];
   preselect = [false];
   crudactions {
      new {
         enabled = [false];
      }
   }
   badge MessageType {
      style = IconOnly;
      icon = "information";
      emphasis Warning = [true];
      size = Small;
   }
   field RmaNo {
      size = Small;
   }
   field MessageText {
      size = Large;
      multiline = true;
   }
   field Answer {
      size = Small;
   }

}

list InformationList for CreateCreditInvoiceMessageVirtual {
   label = "Information";
   editmode = SingleCellEdit;
   defaultfilter = [MessageType = "Information"];
   preselect = [false];
   multiselect = [false];
   crudactions {
      new {
         enabled = [false];
      }
   }
   badge MessageType {
      style = IconOnly;
      icon = "information";
      emphasis Info = [true];
      size = Small;
   }
   field RmaNo {
      size = Small;
   }
   field MessageText {
      size = Large;
      multiline = true;
   }
   field Answer {
      size = Small;
   }

}
