--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-05-28  HpEtse  SCUXXW4-9765, Added category and description
-- 2018-05-04  RoJalk  SCUXXW4-9765, Converted from tbwCreateCorrectionInvoice using MTG Version: 1.16
--------------------------------------------------------------------------------------

projection CreateCustomerCorrectionInvoices;
component ORDER;
layer Core;
description "This API is used to create correction invoices for invoiced customer orders. You will be able to view all reference invoices for the customer order for which it is possible for you to create correction invoices.";
category Users;
include fragment UserAllowedSiteLovSelector;
include fragment OrdInvoiceSeriesLovSelector;
include fragment CustomerOrderInvoiceStateEnumeration;
include fragment CustomerOrderInvHeadUivInitialCheck;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset CustomerOrderInvHeads for CustomerOrderInvHead;
entityset SelectedCustomerCorrectionInvoicesVirtuals for SelectedCustomerCorrectionInvoicesVirtual;

------------------------------ ENTITY DETAILS -------------------------------

@Override
query CustomerOrderInvHead {
   from = "customer_order_inv_head_uiv";
   lu = CustomerOrderInvHead;
   where = "INVOICE_TYPE IN ('CUSTORDDEB', 'CUSTCOLDEB', 'CUSTORDCOR','CUSTCOLCOR') AND CORRECTION_INVOICE_ID IS NULL AND OBJSTATE IN ('PostedAuth', 'PaidPosted', 'PartlyPaidPosted' )";
   keys = Company, InvoiceId;

   attribute SeriesId Text {
      fetch = "SERIES_ID";
      label = "Series ID";
      format = uppercase;
   }
   attribute InvoiceNo Text {
      fetch = "INVOICE_NO";
      label = "Invoice No";
      format = uppercase;
   }
   attribute CreatorsReference Text {
      fetch = "CREATORS_REFERENCE";
      label = "Order No";
      format = uppercase;
   }
   attribute OrderType Text {
      fetch = "Customer_Order_API.Get_Order_Id(CREATORS_REFERENCE)";
      label = "Order Type";
   }
   attribute Contract Text {
      fetch = "CONTRACT";
      label = "Site";
      format = uppercase;
   }
   attribute CustomerNo Text {
      fetch = "CUSTOMER_ORDER_API.Get_Customer_No(CREATORS_REFERENCE)";
      label = "Customer No";
      format = uppercase;
   }
   attribute CustomerName Text {
      fetch = "CUST_ORD_CUSTOMER_API.Get_Name(CUSTOMER_ORDER_API.Get_Customer_No(CREATORS_REFERENCE))";
      label = "Customer Name";
   }
   attribute Currency Text {
      fetch = "CURRENCY";
      label = "Currency";
      format = uppercase;
   }
   attribute GrossAmount Number {
      fetch = "GROSS_AMOUNT";
      label = "Total Gross Amt";
      format = ifscurrency;
   }
   attribute InvoiceType Text {
      fetch = "INVOICE_TYPE";
      label = "Invoice Type";
      format = uppercase;
   }
   attribute InvoiceTypeDescription Text {
      fetch = "Invoice_Type_API.Get_Description_Db(COMPANY, PARTY_TYPE, INVOICE_TYPE)";
      label = "Invoice Type Description";
   }
   attribute InvoiceId Number {
      fetch = "INVOICE_ID";
      label = "Prel Invoice No";
   }
   attribute Company Text {
      fetch = "COMPANY";
      label = "Company ID";
   }
   attribute AmounttoCorrect Number {
      fetch = "INVOICE_CUSTOMER_ORDER_API.Get_Corr_Amt_Per_Ref_Ivc__(COMPANY, INVOICE_ID)";
      label = "Amount to Correct";
      format = ifscurrency;
   }
   attribute RmaLinesAvailableForOrder Text {
      fetch = "Return_Material_API.Check_Exist_Rma_For_Order(CREATORS_REFERENCE)";
      label = "Rma Lines";
   }
   attribute RmaLinesAvailableForInvoice Text {
      fetch = "Return_Material_API.Check_Exist_Rma_For_Invoice(INVOICE_NO, COMPANY)";
      label = "Rma Lines";
   }
   attribute Identity Text {
      fetch = "IDENTITY";
      label = "Invoice Customer";
   }
   attribute Name Text {
      fetch = "NAME";
      label = "Invoice Customer Name";
   }
   attribute CustomerOrderInvoiceState Enumeration(CustomerOrderInvoiceState) {
      fetch = "Client_State";
      label = "Invoice Status";
   }
   attribute InvoiceDate Date;

   reference CustomerOrderRef(CreatorsReference) to CustomerOrder(OrderNo);
   reference SeriesIdRef(SeriesId) to OrdInvoiceSeriesLov(SeriesId) {
      label = "Series ID";
   }
   reference CreatorsReferenceRef(CreatorsReference) to CustomerOrder(OrderNo) {
      label = "Order No";
   }
   reference OrderTypeRef(OrderType) to CustOrderType(OrderId) {
      label = "Order Type";
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference CustomerNoRef(CustomerNo) to CustOrdCustomer(CustomerNo) {
      label = "Customer No";
   }
}

virtual SelectedCustomerCorrectionInvoicesVirtual {
   attribute Selection Text;
   array Warnings() to WarningVirtual();
   action Finish Text;
}

virtual WarningVirtual {
   crud = Update;
   attribute Company Text {
      editable = [false];
   }
   attribute InvoiceId Number {
      editable = [false];
   }
   attribute InvoiceNo Text {
      editable = [false];
      label = "Debit Invoice No";
   }
   attribute Warning Text {
      editable = [false];
   }
   attribute Answer Enumeration(GenYesNo) {
      required = [true];
   }
}

---------------------------------- ACTIONS ----------------------------------

action CreateCorrectionInvoices {
   initialcheck implementation;
   parameter  Selection         Text;
}




