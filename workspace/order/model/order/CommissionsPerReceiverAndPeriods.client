-------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2020-11-17  RavDlk  SC2020R1-11227, Handled the enumeration CommissionCalcStatus
-- 2019-01-28  SATGLK  SCUXXW4-964, Converted from tbwOrderCommissionOverview using MTG Version: 1.34
--------------------------------------------------------------------------------------
client CommissionsPerReceiverAndPeriods;
component ORDER;
layer Core;
projection CommissionsPerReceiverAndPeriodsHandling;
warningsenabled = OrderCommission;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry CommissionsperReceiverandPeriodsNavEntry parent OrderNavigator.SalesCommission at index 900 {
      label = "Commissions per Receiver and Periods";
      page List home OrderCommission;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page List using OrderCommissionSet {
   label = "Commissions per Receiver and Periods";
   startupmode = search;
   list OrderCommissionOverviewList {
      details = "page/CommissionsPerReceiverAndPeriod/Form?$filter=CommissionNo eq $[CommissionNo]";
   }
}

--------------------------------- COMMANDS ----------------------------------
command FinalizeCalculationCommand for OrderCommission {
   label = "Finalize Calculation";
   enabled = [CommissionCalcStatus = "Calculated"];
   mode = SelectedRecords;
   bulkexecute {
      confirm("This will close the order commission(s) for final calculation.") {
         when OK {
            bulkcall CloseCommission();
         }
      }
   }
}
command PrintCommissionsperReceiverCommand for OrderCommission {
   label = "Print Commissions per Receiver and Period";
   enabled = [true];
   mode = SelectedRecords;
   variable ResultKeyVar {
      type = Text;
   }
   bulkexecute {
      confirm("The selected summarized Order Commission List(s) will be printed.") {
         when OK {
            call GetResultKeyList(Selection) into ResultKeyVar;
            if[ResultKeyVar != null] {
               printdialog ResultKeyVar;
            }
         }
      }
   }
}
command PrintOrderLineCommissionCommand for OrderCommission {
   label = "Print Order Line Commission";
   enabled = [true];
   mode = SelectedRecords;
   variable ResultKeyVar {
      type = Text;
   }
   bulkexecute {
      confirm("The selected detailed Order Commission List(s) will be printed.") {
         when OK {
            call GetResultKeyforLineList(Selection) into ResultKeyVar;
            if[ResultKeyVar != null] {
               printdialog ResultKeyVar;
            }
         }
      }
   }
}
command UpdateCalculatedCommissionsCommand for OrderCommission {
   label = "Update Calculated Commissions";
   enabled = [CommissionCalcStatus = "Calculated"];
   mode = SelectedRecords;
   bulkexecute {
      bulkcall UpdateCalcCommission("0");
   }
}
command UpdateAllCommissionsCommand for OrderCommission {
   label = "Update All Commissions";
   enabled = [CommissionCalcStatus = "Calculated"];
   mode = SelectedRecords;
   bulkexecute {
      confirm("Do you want to overwrite the manually changed commissions?") {
         when OK {
            bulkcall UpdateCalcCommission("1");
         }
      }
   }
}

----------------------------------- LISTS -----------------------------------
list OrderCommissionOverviewList for OrderCommission {
   field CommissionNo;
   field CommissionReceiverRef;
   lov ContractRef with ReferenceSiteSelector {
      description = ContractRef.Description;
   }
   field PeriodFrom;
   field PeriodUntil;
   field CommissionCalcStatus {
      enumerationtrue = "FinallyCalculated";
      enumerationfalse = "Calculated";
      truelabel = "Yes";
      falselabel = "No";

   }
   field LastCalculationDate;
   currency TotalBaseAmount(BaseCurrency) {
      label = "Total Comm Amt/Base";
      format = ifscurrency;
   }
   currency TotalCurrAmount(Currency) {
      label = "Total Comm Amt/Curr";
      format = ifscurrency;
   }
   field NextCalculationPeriodFrom;
   field NextCalculationPeriodUntil;
   fieldranking CommissionNo, CommissionReceiverRef, ContractRef, PeriodFrom, PeriodUntil, CommissionCalcStatus, LastCalculationDate, TotalBaseAmount, TotalCurrAmount;
   commandgroup CalculateCmdGroup {

      commandgroup Calculate1CmdGroup {
         label = "Calculate Commission";
         command UpdateCalculatedCommissionsCommand;
         command UpdateAllCommissionsCommand;
      }
      command FinalizeCalculationCommand;
   }
   commandgroup PrintCmdGroup {

      commandgroup Print1CmdGroup {
         label = "Print";
         command PrintCommissionsperReceiverCommand;
         command PrintOrderLineCommissionCommand;
      }
   }
}