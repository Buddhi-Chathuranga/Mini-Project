-----------------------------------------------------------------------------
--
--  Fragment:     LostWonQuotationDialog
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  190102  SeJalk   SCUXXW4-986, Added code to support miltipe records.
--  180620  JeLise  SCUXXW4-8507, Added methods Validate_Lose_Reason_Id___ and Validate_Competitor___ for the convertion of 
--  180620          dlgOrderQuotationLost.
--  180620  JeLise  SCUXXW4-8532, Created for the convertion of dlgOrderQuotationWonWithNoPriceDiff.
-----------------------------------------------------------------------------

layer Core;

PROCEDURE Validate_Win_Reason_Id___ (
   reason_id_ IN VARCHAR2 ) 
IS
BEGIN
   IF reason_id_ IS NOT NULL THEN
      Lose_Win_Reason_API.Exist(reason_id_, 'SQ', 'WIN');
   END IF;
END Validate_Win_Reason_Id___;


PROCEDURE Validate_Lose_Reason_Id___ (
   reason_id_ IN VARCHAR2 ) 
IS
BEGIN
   IF reason_id_ IS NOT NULL THEN
      Lose_Win_Reason_API.Exist(reason_id_, 'SQ', 'LOSE');
   END IF;
END Validate_Lose_Reason_Id___;


PROCEDURE Validate_Competitor___ (
   competitor_id_ IN VARCHAR2 ) 
IS
BEGIN
   IF competitor_id_ IS NOT NULL THEN
      Competitor_API.Exist(competitor_id_, TRUE);
   END IF;
END Validate_Competitor___;


PROCEDURE Set_Quotation_Lost___ (
   quotation_no_ IN  VARCHAR2,
   reason_id_    IN  VARCHAR2,
   lost_to_      IN  VARCHAR2,
   lost_note_    IN  VARCHAR2,
   info$_        OUT VARCHAR2 ) 
IS
BEGIN
   Order_Quotation_API.Set_Quotation_Lost__(info$_,
                                            quotation_no_,
                                            reason_id_,
                                            lost_to_,
                                            lost_note_);
END Set_Quotation_Lost___;

PROCEDURE Set_Quotation_Won___ (
   quotation_no_ IN  VARCHAR2,
   reason_id_    IN  VARCHAR2,
   won_note_     IN  VARCHAR2,
   info$_        OUT VARCHAR2 ) 
IS
BEGIN
   Order_Quotation_API.Set_Quotation_Won__(info$_,
                                           quotation_no_,
                                           reason_id_,
                                           won_note_);
END Set_Quotation_Won___;




FUNCTION Validate_Selected_Lines___ (
	selection_ IN VARCHAR2) RETURN Qutation_Line_Structure_Rec
IS
   selection_in_        VARCHAR2(32000) := CONCAT(selection_, ';');
   current_selection_   VARCHAR2(32000);
   quotation_no_        Order_Quotation_Line_tab.quotation_no%TYPE;
   line_no_             Order_Quotation_Line_tab.line_no%TYPE;
   rel_no_              Order_Quotation_Line_tab.rel_no%TYPE;
   line_item_no_        Order_Quotation_Line_tab.line_item_no%TYPE;
   count_  NUMBER := 0;
   rec_ Qutation_Line_Structure_Rec;
   
BEGIN
   WHILE (INSTR(selection_in_, ';') > 0) LOOP
      count_ := count_ + 1;
      current_selection_     := substr(selection_in_, 0, INSTR(selection_in_, ';'));
      IF quotation_no_ IS NOT NULL AND quotation_no_ != Client_SYS.Get_Key_Reference_Value(current_selection_, 'QUOTATION_NO') THEN
         quotation_no_ := NULL;
         line_no_      := NULL;
         rel_no_       := NULL;
         line_item_no_ := NULL;
         EXIT;
      END IF;
      quotation_no_          := Client_SYS.Get_Key_Reference_Value(current_selection_, 'QUOTATION_NO');
      IF count_ = 1 THEN       
         line_no_               := Client_SYS.Get_Key_Reference_Value(current_selection_, 'LINE_NO');
         rel_no_                := Client_SYS.Get_Key_Reference_Value(current_selection_, 'REL_NO');
         line_item_no_          := Client_SYS.Get_Key_Reference_Value(current_selection_, 'LINE_ITEM_NO');
      ELSE   
         line_no_      := NULL;
         rel_no_       := NULL;
         line_item_no_ := NULL;
      END IF;
      selection_in_          := substr(selection_in_, INSTR(selection_in_, ';')+1);
   END LOOP;
   rec_.quotation_no := quotation_no_;
   rec_.line_no := line_no_;
   rec_.rel_no := rel_no_;
   rec_.line_item_no := line_item_no_;
   
   RETURN rec_;
END Validate_Selected_Lines___;



PROCEDURE Set_Bulk_Quotation_Lost___ (
	selection_ IN VARCHAR2,
	reason_id_ IN VARCHAR2,
	lost_to_ IN VARCHAR2,
	lost_note_ IN VARCHAR2,
	info$_ OUT VARCHAR2)
IS
   selection_in_        VARCHAR2(32000) := CONCAT(selection_, ';');
   current_selection_   VARCHAR2(32000);
   quotation_no_        Order_Quotation_Line_tab.quotation_no%TYPE;
   line_no_             Order_Quotation_Line_tab.line_no%TYPE;
   rel_no_              Order_Quotation_Line_tab.rel_no%TYPE;
   line_item_no_        Order_Quotation_Line_tab.line_item_no%TYPE;
   count_  NUMBER := 0;
   rec_ Qutation_Line_Structure_Rec;
   
BEGIN
   WHILE (INSTR(selection_in_, ';') > 0) LOOP
      count_ := count_ + 1;
      current_selection_     := substr(selection_in_, 0, INSTR(selection_in_, ';'));
      quotation_no_          := Client_SYS.Get_Key_Reference_Value(current_selection_, 'QUOTATION_NO');     
      line_no_               := Client_SYS.Get_Key_Reference_Value(current_selection_, 'LINE_NO');
      rel_no_                := Client_SYS.Get_Key_Reference_Value(current_selection_, 'REL_NO');
      line_item_no_          := Client_SYS.Get_Key_Reference_Value(current_selection_, 'LINE_ITEM_NO');
      Order_Quotation_Line_Initial_Check___(quotation_no_, line_no_, rel_no_, line_item_no_);
      Order_Quotation_Line_API.Set_Quotation_Line_Lost__(info$_, quotation_no_, line_no_, rel_no_, line_item_no_, reason_id_, lost_to_, lost_note_);
      selection_in_          := substr(selection_in_, INSTR(selection_in_, ';')+1);
   END LOOP;
END Set_Bulk_Quotation_Lost___;


PROCEDURE Set_Bulk_Quotation_Won___ (
	selection_ IN VARCHAR2,
	reason_id_ IN VARCHAR2,
	won_note_ IN VARCHAR2,
	info$_ OUT VARCHAR2)
IS
   selection_in_        VARCHAR2(32000) := CONCAT(selection_, ';');
   current_selection_   VARCHAR2(32000);
   quotation_no_        Order_Quotation_Line_tab.quotation_no%TYPE;
   line_no_             Order_Quotation_Line_tab.line_no%TYPE;
   rel_no_              Order_Quotation_Line_tab.rel_no%TYPE;
   line_item_no_        Order_Quotation_Line_tab.line_item_no%TYPE;
   count_  NUMBER := 0;
   rec_ Qutation_Line_Structure_Rec;
   
BEGIN
   WHILE (INSTR(selection_in_, ';') > 0) LOOP
      count_ := count_ + 1;
      current_selection_     := substr(selection_in_, 0, INSTR(selection_in_, ';'));
      quotation_no_          := Client_SYS.Get_Key_Reference_Value(current_selection_, 'QUOTATION_NO');       
      line_no_               := Client_SYS.Get_Key_Reference_Value(current_selection_, 'LINE_NO');
      rel_no_                := Client_SYS.Get_Key_Reference_Value(current_selection_, 'REL_NO');
      line_item_no_          := Client_SYS.Get_Key_Reference_Value(current_selection_, 'LINE_ITEM_NO');
      Order_Quotation_Line_Initial_Check___(quotation_no_, line_no_, rel_no_, line_item_no_);      
      Order_Quotation_Line_API.Set_Quotation_Line_Won__(info$_, quotation_no_, line_no_, rel_no_, line_item_no_, reason_id_, won_note_);
      selection_in_          := substr(selection_in_, INSTR(selection_in_, ';')+1);
   END LOOP;
END Set_Bulk_Quotation_Won___;



