-----------------------------------------------------------------------------
--
--  Fragment:     MatchSelfBillingLineAndDeliveryAssistant
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  181127  KHVESE  SCUXXW4-8455, Created.
-----------------------------------------------------------------------------

layer Core;

@Override
PROCEDURE CRUD_Create___(
   rec_ IN Incoming_Selfbilling_Item_Virtual_Rec )
IS 
   parent_rec_ Incoming_Selfbilling_Item_Virtual_Rec;
   line_rec_   Unmatched_Sbi_Delivery_Uiv_Virtual_Rec;
   sbi_no_     SELF_BILLING_HEADER_TAB.sbi_no%TYPE;

   CURSOR get_unmatched_sbi_delivery IS
   SELECT * FROM unmatched_sbi_deliveries  
   WHERE  customer_no = parent_rec_.customer_no 
   AND    customer_part_no = parent_rec_.customer_part_no 
   AND    (parent_rec_.company IS NULL OR company = parent_rec_.company) 
   AND    currency_code = parent_rec_.currency;
BEGIN
   parent_rec_ := rec_;
   sbi_no_ := Self_Billing_Header_API.Get_Preliminary_Sbi_By_Msg (rec_.message_id );
   parent_rec_.company := Self_Billing_Header_API.Get_Company(sbi_no_); 
   parent_rec_.currency := Ext_Inc_Sbi_Head_API.Get_Currency(rec_.message_id);
   super(parent_rec_);
   
   FOR unmatched_sbi_rec_ IN get_unmatched_sbi_delivery LOOP
      line_rec_.objkey                             := sys_guid();
      line_rec_.parent_objkey                      := rec_.objkey;
      line_rec_.qty_diff                           := (unmatched_sbi_rec_.confirmed_sbi_qty + unmatched_sbi_rec_.customer_qty) - unmatched_sbi_rec_.qty_to_invoice;
      line_rec_.matched                            := FALSE;
      line_rec_.consignment_stock                  := CASE unmatched_sbi_rec_.consignment_stock WHEN 'NO CONSIGNMENT STOCK' THEN FALSE ELSE TRUE END;
      line_rec_.close_delivery                     := CASE SIGN(unmatched_sbi_rec_.customer_qty - parent_rec_.inv_qty) WHEN 1 THEN FALSE ELSE TRUE END;
      line_rec_.delnote_no                         := unmatched_sbi_rec_.delnote_no;
      line_rec_.order_no                           := unmatched_sbi_rec_.order_no;
      line_rec_.line_no                            := unmatched_sbi_rec_.line_no;
      line_rec_.rel_no                             := unmatched_sbi_rec_.rel_no;
      line_rec_.customer_no                        := unmatched_sbi_rec_.customer_no;
      line_rec_.contract                           := unmatched_sbi_rec_.contract;
      line_rec_.catalog_no                         := unmatched_sbi_rec_.catalog_no;
      line_rec_.customer_part_no                   := unmatched_sbi_rec_.customer_part_no;
      line_rec_.buy_qty_due                        := unmatched_sbi_rec_.buy_qty_due;
      line_rec_.sales_unit_meas                    := unmatched_sbi_rec_.sales_unit_meas;
      line_rec_.customer_qty                       := unmatched_sbi_rec_.customer_qty;
      line_rec_.cust_unit_sales_qty                := (unmatched_sbi_rec_.customer_qty/unmatched_sbi_rec_.customer_part_conv_factor) * NVL(unmatched_sbi_rec_.cust_part_invert_conv_fact,1);
      line_rec_.part_price                         := unmatched_sbi_rec_.part_price;
      line_rec_.calculated_net_price_curr          := Customer_Order_line_API.Get_Sale_Price_Total(unmatched_sbi_rec_.order_no,unmatched_sbi_rec_.line_no,unmatched_sbi_rec_.rel_no,unmatched_sbi_rec_.line_item_no)/(unmatched_sbi_rec_.buy_qty_due * unmatched_sbi_rec_.price_conv_factor);
      line_rec_.included_total_order_line_discount := Customer_Order_Line_API.Get_Total_Discount_Percentage(unmatched_sbi_rec_.order_no,unmatched_sbi_rec_.line_no,unmatched_sbi_rec_.rel_no,unmatched_sbi_rec_.line_item_no);
      line_rec_.qty_delivered                      := unmatched_sbi_rec_.qty_delivered;
      line_rec_.qty_invoiced                       := unmatched_sbi_rec_.qty_invoiced;
      line_rec_.qty_to_invoice                     := unmatched_sbi_rec_.qty_to_invoice;
      line_rec_.currency_code                      := unmatched_sbi_rec_.currency_code;
      line_rec_.pay_term_id                        := unmatched_sbi_rec_.pay_term_id;
      line_rec_.gross_amount_curr                  := Order_Self_Billing_Manager_API.Get_Gross_Curr_Amount(unmatched_sbi_rec_.order_no,unmatched_sbi_rec_.line_no,unmatched_sbi_rec_.rel_no,unmatched_sbi_rec_.line_item_no);
      line_rec_.tax_amount_curr                    := Order_Self_Billing_Manager_API.Get_Tax_Curr_Amount(unmatched_sbi_rec_.order_no,unmatched_sbi_rec_.line_no,unmatched_sbi_rec_.rel_no,unmatched_sbi_rec_.line_item_no);
      line_rec_.net_amount_curr                    := Order_Self_Billing_Manager_API.Get_Net_Curr_Amount(unmatched_sbi_rec_.order_no,unmatched_sbi_rec_.line_no,unmatched_sbi_rec_.rel_no,unmatched_sbi_rec_.line_item_no);
      line_rec_.wanted_delivery_date               := unmatched_sbi_rec_.wanted_delivery_date;
      line_rec_.date_delivered                     := unmatched_sbi_rec_.date_delivered;
      line_rec_.date_confirmed                     := unmatched_sbi_rec_.date_confirmed;
      line_rec_.shipment_id                        := unmatched_sbi_rec_.shipment_id;
      line_rec_.deliv_no                           := unmatched_sbi_rec_.deliv_no;
      line_rec_.line_item_no                       := unmatched_sbi_rec_.line_item_no;
      line_rec_.company                            := unmatched_sbi_rec_.company;
      line_rec_.confirmed_sbi_qty                  := unmatched_sbi_rec_.confirmed_sbi_qty;
      line_rec_.cust_part_invert_conv_fact         := unmatched_sbi_rec_.cust_part_invert_conv_fact;
      line_rec_.customer_part_conv_factor         := unmatched_sbi_rec_.customer_part_conv_factor;
      line_rec_.reference_id                       := unmatched_sbi_rec_.ref_id;
      line_rec_.customer_po_no                     := unmatched_sbi_rec_.customer_po_no;
      line_rec_.customer_po_line_no                := unmatched_sbi_rec_.customer_po_line_no;
      line_rec_.customer_po_rel_no                 := unmatched_sbi_rec_.customer_po_rel_no;
      CRUD_Create___(line_rec_);
   END LOOP;
   
END  CRUD_Create___;  


FUNCTION Get_Total_Qty_To_Match___ (
	selection_     IN  VARCHAR2) RETURN NUMBER
IS
   line_key_      Unmatched_Sbi_Delivery_Uiv_Virtual_Key;
   line_rec_      Unmatched_Sbi_Delivery_Uiv_Virtual_Rec;
   selection_in_  VARCHAR2(32000) := CONCAT(selection_, ';');
   total_qty_     NUMBER := 0;
BEGIN  
   WHILE (INSTR(selection_in_, ';') > 0) LOOP
      line_key_.Objkey := substr(selection_in_, 0, INSTR(selection_in_, ';') - 1);
      line_rec_ := Get_Record___(line_key_);
      total_qty_ := total_qty_ + line_rec_.cust_unit_sales_qty;
      selection_in_ := substr(selection_in_, INSTR(selection_in_, ';')+1);
   END LOOP;
   RETURN  total_qty_;
END Get_Total_Qty_To_Match___;


PROCEDURE Get_Line_Amounts__ (
   line_tax_dom_amount_       OUT NUMBER,
   line_net_dom_amount_       OUT NUMBER,
   line_gross_dom_amount_     OUT NUMBER,
   line_tax_curr_amount_      OUT NUMBER,
   line_net_curr_amount_      OUT NUMBER,
   line_gross_curr_amount_    OUT NUMBER,
   cust_unit_part_price_      IN  NUMBER,
   cust_unit_sales_qty_       IN  NUMBER,
   price_conv_factor_         IN  NUMBER,
   company_                   IN  VARCHAR2,
   source_ref1_               IN  VARCHAR2,
   source_ref2_               IN  VARCHAR2,
   source_ref3_               IN  VARCHAR2,
   source_ref4_               IN  VARCHAR2,
   currency_code_             IN  VARCHAR2 )
IS 
   use_price_incl_tax_        VARCHAR2(5);
   currency_rounding_         NUMBER;
   cust_sales_price_          NUMBER;
BEGIN
   currency_rounding_   := Currency_Code_API.Get_Currency_Rounding(company_, currency_code_);
   cust_sales_price_   := ROUND((cust_unit_part_price_ / price_conv_factor_) * cust_unit_sales_qty_ , currency_rounding_);
   
   use_price_incl_tax_  := Customer_Order_API.Get_Use_Price_Incl_Tax_Db(source_ref1_);   

   IF (use_price_incl_tax_ = 'TRUE') THEN
      line_gross_curr_amount_ := cust_sales_price_;
   ELSE
      line_net_curr_amount_   := cust_sales_price_;
   END IF;
   
   Tax_Handling_Order_Util_API.Get_Amounts(line_tax_dom_amount_, 
                                           line_net_dom_amount_, 
                                           line_gross_dom_amount_, 
                                           line_tax_curr_amount_, 
                                           line_net_curr_amount_, 
                                           line_gross_curr_amount_, 
                                           company_, 
                                           Tax_Source_API.DB_CUSTOMER_ORDER_LINE,
                                           source_ref1_,
                                           source_ref2_,
                                           source_ref3_,
                                           source_ref4_, 
                                           '*'); 
END Get_Line_Amounts__;


PROCEDURE Save_Manually_Matched_Lines___ (
   parent_key_             IN VARCHAR2,
	selection_              IN VARCHAR2,
	info$_                  OUT VARCHAR2)
IS
   header_key_             Incoming_Selfbilling_Item_Virtual_Key;
   header_rec_             Incoming_Selfbilling_Item_Virtual_Rec;
   line_key_               Unmatched_Sbi_Delivery_Uiv_Virtual_Key;
   line_rec_               Unmatched_Sbi_Delivery_Uiv_Virtual_Rec;
   selection_in_           VARCHAR2(32000) := CONCAT(selection_, ';');
   attr_                   VARCHAR2(32000);
   info_                   VARCHAR2(32000);
   price_conv_factor_      NUMBER;
   cust_unit_sales_qty_    NUMBER;
   customer_qty_           NUMBER;
   total_qty_to_match_     NUMBER;
   line_curr_net_amount_   NUMBER;
   line_curr_tax_amount_   NUMBER;
   line_curr_gross_amount_ NUMBER;
   dummy_number_           NUMBER := 0; 
BEGIN  
   
   header_key_.Objkey := parent_key_;
   header_rec_ := Get_Record___(header_key_);
   
   total_qty_to_match_ := Get_Total_Qty_To_Match___(selection_);
   
   WHILE (INSTR(selection_in_, ';') > 0) LOOP
      line_key_.Objkey := substr(selection_in_, 0, INSTR(selection_in_, ';') - 1);
      line_rec_ := Get_Record___(line_key_);

      line_curr_net_amount_     := line_rec_.net_amount_curr;
      line_curr_tax_amount_     := line_rec_.tax_amount_curr;
      line_curr_gross_amount_   := line_rec_.gross_amount_curr;

      cust_unit_sales_qty_ := CASE SIGN(total_qty_to_match_ - header_rec_.inv_qty) WHEN 1 THEN header_rec_.inv_qty ELSE line_rec_.cust_unit_sales_qty END;
      customer_qty_        := (cust_unit_sales_qty_ * line_rec_.customer_part_conv_factor) / NVL(line_rec_.cust_part_invert_conv_fact,1);
      price_conv_factor_   := Ext_Inc_Sbi_Item_API.Get_Price_Conv_Factor(header_rec_.message_id, header_rec_.message_line);

      Get_Line_Amounts__(dummy_number_, 
                         dummy_number_, 
                         dummy_number_, 
                         line_curr_tax_amount_, 
                         line_curr_net_amount_, 
                         line_curr_gross_amount_, 
                         header_rec_.sales_unit_price,
                         cust_unit_sales_qty_,
                         price_conv_factor_,
                         header_rec_.company, 
                         line_rec_.order_no,
                         line_rec_.line_no,
                         line_rec_.rel_no,
                         line_rec_.line_item_no,
                         line_rec_.currency_code);

      Client_SYS.Clear_Attr(attr_);
      Client_SYS.Add_To_Attr('MESSAGE_ID', header_rec_.message_id, attr_);
      Client_SYS.Add_To_Attr('MESSAGE_LINE', header_rec_.message_line, attr_);
      Client_SYS.Add_To_Attr('CONTRACT', line_rec_.contract, attr_);
      Client_SYS.Add_To_Attr('CUSTOMER_ID', header_rec_.customer_no, attr_);
      Client_SYS.Add_To_Attr('ORDER_NO', line_rec_.order_no, attr_);
      Client_SYS.Add_To_Attr('LINE_NO', line_rec_.line_no, attr_);
      Client_SYS.Add_To_Attr('REL_NO', line_rec_.rel_no, attr_);
      Client_SYS.Add_To_Attr('LINE_ITEM_NO', line_rec_.line_item_no, attr_);
      Client_SYS.Add_To_Attr('CUST_UNIT_PART_PRICE', header_rec_.sales_unit_price, attr_);
      Client_SYS.Add_To_Attr('CUSTOMER_QTY', customer_qty_, attr_);
      Client_SYS.Add_To_Attr('CUST_UNIT_SALES_QTY', cust_unit_sales_qty_, attr_);
      Client_SYS.Add_To_Attr('DELIV_NO', line_rec_.deliv_no, attr_);
      Client_SYS.Add_To_Attr('NET_CURR_AMOUNT', line_curr_net_amount_, attr_);
      Client_SYS.Add_To_Attr('TAX_CURR_AMOUNT', line_curr_tax_amount_, attr_);
      Client_SYS.Add_To_Attr('GROSS_CURR_AMOUNT', line_curr_gross_amount_, attr_);
      Client_SYS.Add_To_Attr('CUST_NET_CURR_AMOUNT', line_curr_net_amount_, attr_);
      Client_SYS.Add_To_Attr('CUST_GROSS_CURR_AMOUNT', line_curr_gross_amount_, attr_);
      Client_SYS.Add_To_Attr('CUST_TAX_CURR_AMOUNT', line_curr_tax_amount_, attr_);
      
      Client_SYS.Add_To_Attr('CLOSE_TYPE_DB', 'NOTSETCLOSE', attr_);
      IF line_rec_.close_delivery THEN 
      Client_SYS.Set_Item_Value('CLOSE_TYPE_DB', 'SETCLOSE', attr_);
      END IF;
      Client_SYS.Add_To_Attr('QTY_EDITED_FLAG', 'FALSE', attr_);
      IF total_qty_to_match_ > header_rec_.inv_qty THEN 
         Client_SYS.Set_Item_Value('QTY_EDITED_FLAG', 'TRUE', attr_);
      END IF;
      attr_ := attr_ || 'END';

      Order_Self_Billing_Manager_API.Save_Manually_Matched_Lines(info_, attr_);     
      selection_in_ := substr(selection_in_, INSTR(selection_in_, ';')+1);
   END LOOP;
   info$_ := info_;
END Save_Manually_Matched_Lines___;
