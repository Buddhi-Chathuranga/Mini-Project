-----------------------------------------------------------------------------
--
--  Fragment:     SalesQuotationLineRentalTab
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date        Sign    History
--  ------      ------  ---------------------------------------------------------
--  2021-05-17  MaEelk   SC21R2-1186, When duplicating a line LOST_TO, LOSE_WIN_NOTE, CANCEL_REASON and REASON_ID were made null in CRUD_Default_Copy___
--  2021-05-17           and CANCELLATION_REASON_DESCRIPTION, REASON_DESCRIPTION were removed from the attr_
--  2020-03-13  MaEelk   SCXTEND-2207, Made Duplicate Functionality work.
--  2018-12-12  SeJalk   SCUXXW4-994, Created
-----------------------------------------------------------------------------

layer Core;

@Override
@DynamicComponentDependency RENTAL
PROCEDURE CRUD_Default___ (
   key_  IN     Order_Quotation_Rental_Line_Key,
   attr_ IN OUT VARCHAR2,
   info_    OUT VARCHAR2 )
IS
BEGIN
   Client_SYS.Add_To_Attr('RENTAL_DB', 'TRUE', attr_);
   super(key_, attr_, info_);
   Client_SYS.Add_To_Attr('LINE_ITEM_NO', 0, attr_);  
   Client_SYS.Add_To_Attr('PLANNED_RENTAL_START_DATE_EDITABLE', Client_SYS.Get_Item_Value('PLANNED_RENTAL_START_DATE', attr_), attr_);
   Client_SYS.Add_To_Attr('SET_TAX_FROM_ORIGINAL', 'FALSE', attr_);
END CRUD_Default___;

@Override
PROCEDURE CRUD_Default_Copy___ (
   objid_  IN     VARCHAR2,
   key_    IN     Order_Quotation_Rental_Line_Key,
   values_ IN     Copy_Values_Rec,
   attr_      OUT VARCHAR2,
   info_      OUT VARCHAR2 )
IS
   quotation_no_           VARCHAR2(12);
   planned_delivery_date_  DATE;
   dummy_text_             VARCHAR2(20) := NULL; 
   dummy_date_             DATE := NULL;
BEGIN
  quotation_no_ := key_.quotation_no;
  super(objid_,key_, values_, attr_,info_ );
  Client_SYS.Set_Item_Value('QUOTATION_NO', quotation_no_, attr_);
  Client_SYS.Set_Item_Value('LINE_NO', dummy_text_, attr_);
  Client_SYS.Set_Item_Value('REL_NO', dummy_text_, attr_);
  Client_SYS.Set_Item_Value('LINE_ITEM_NO', 0, attr_); 
  Client_SYS.Set_Item_Value('DUPLICATED_LINE', 'TRUE', attr_);
  Client_SYS.Set_Item_Value('QUOTE_DISCOUNT', 0, attr_);
  Client_SYS.Set_Item_Value('REVISED_QTY_DUE', 0, attr_);  
  Client_SYS.Set_Item_Value('FETCH_TAX_FROM_DEFAULTS', 'FALSE', attr_);
  
  planned_delivery_date_ := Client_SYS.Get_Item_Value_To_Date('WANTED_DELIVERY_DATE', attr_, lu_name_);
  Client_SYS.Set_Item_Value('PLANNED_DELIVERY_DATE_', planned_delivery_date_, attr_);
  Client_SYS.Set_Item_Value('PROMISED_DELIVERY_DATE', dummy_date_, attr_);
  Client_SYS.Set_Item_Value('PLANNED_DUE_DATE', dummy_date_, attr_);
  Client_SYS.Set_Item_Value('LATEST_RELEASE_DATE', dummy_date_, attr_);

  Add_Values_To_Duplicated_Attr(attr_);  

  Client_SYS.Set_Item_Value('FREIGHT_MAP_ID', dummy_text_, attr_);
  Client_SYS.Set_Item_Value('ZONE_ID', dummy_text_, attr_);
  Client_SYS.Set_Item_Value('FREIGHT_PRICE_LIST_NO', dummy_text_, attr_);

  Client_SYS.Set_Item_Value('LOST_TO', dummy_text_, attr_);
  Client_SYS.Set_Item_Value('LOSE_WIN_NOTE', dummy_text_, attr_);
  Client_SYS.Set_Item_Value('CANCEL_REASON', dummy_text_, attr_); 
  Client_SYS.Set_Item_Value('REASON_ID', dummy_text_, attr_);
  attr_ := Client_SYS.Remove_Attr('CANCELLATION_REASON_DESCRIPTION', attr_);  
  attr_ := Client_SYS.Remove_Attr('REASON_DESCRIPTION', attr_);

  -- Validation on BuyQtyDue, SaleUnitPrice, SaleUnitPriceInclTax, BaseUnitPrice, BaseUnitPrieInclTax have to be handled if needed
END CRUD_Default_Copy___;

@Override
PROCEDURE CRUD_Update___ (
   etag_ IN OUT VARCHAR2,
   key_  IN OUT Order_Quotation_Rental_Line_Key,
   attr_ IN OUT VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   line_rec_ Order_Quotation_Line_API.Public_Rec;
   multiple_tax_lines_ VARCHAR2(5);
BEGIN
   line_rec_ := Order_Quotation_Line_API.Get(key_.quotation_no, key_.line_no, key_.rel_no, key_.line_item_no); 
   IF Client_SYS.Get_Item_Value('TAX_CLASS_ID', attr_) IS NULL THEN
        Client_SYS.Add_To_Attr('TAX_CLASS_ID', line_rec_.tax_class_id, attr_);
   END IF;  
   IF  Client_SYS.Get_Item_Value('PRICE_SOURCE_DB', attr_) IS NULL AND Client_SYS.Get_Item_Value('SET_PRICE_SOURCE', attr_) = 'TRUE' THEN
      Client_SYS.Add_To_Attr('PRICE_SOURCE_DB', line_rec_.price_source, attr_);
   END IF; 
   multiple_tax_lines_ := Source_Tax_Item_API.Multiple_Tax_Items_Exist(line_rec_.Company, 'ORDER_QUOTATION_LINE', key_.quotation_no, key_.line_no, key_.rel_no, key_.line_item_no, '*');
   Client_SYS.Add_To_Attr('MULTIPLE_TAX_LINES', multiple_tax_lines_, attr_);
   Client_SYS.Add_To_Attr('SET_TAX_FROM_ORIGINAL', 'FALSE', attr_);
   super(etag_, key_, attr_, info_, action_);

END CRUD_Update___;

@Override
PROCEDURE CRUD_Create___ (
   etag_ IN OUT VARCHAR2,
   key_  IN OUT Order_Quotation_Rental_Line_Key,
   attr_ IN OUT VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   set_tax_from_original_  VARCHAR2(5)  := Client_SYS.Get_Item_Value('SET_TAX_FROM_ORIGIN', attr_);
   original_quote_no_      VARCHAR2(12) := Client_SYS.Get_Item_Value('IDENTITY1', attr_);
   original_line_no_       VARCHAR2(4)  := Client_SYS.Get_Item_Value('IDENTITY2', attr_);
   original_rel_no_        VARCHAR2(4)  := Client_SYS.Get_Item_Value('IDENTITY3', attr_);
   original_line_item_     VARCHAR2(50) := Client_SYS.Get_Item_Value('IDENTITY4', attr_);
   
BEGIN
   Client_SYS.Set_Item_Value('SET_TAX_FROM_ORIGINAL', set_tax_from_original_, attr_);
   Client_SYS.Set_Item_Value('ORIGINAL_QUOTE_NO', original_quote_no_, attr_);
   Client_SYS.Set_Item_Value('ORIGINAL_LINE_NO', original_line_no_, attr_);
   Client_SYS.Set_Item_Value('ORIGINAL_REL_NO', original_rel_no_, attr_);
   Client_SYS.Set_Item_Value('ORIGINAL_ITEM_NO', original_line_item_, attr_);
   
   super(etag_, key_, attr_, info_, action_);
END CRUD_Create___;
