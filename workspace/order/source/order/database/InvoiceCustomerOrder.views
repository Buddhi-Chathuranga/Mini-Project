-----------------------------------------------------------------------------
--
--  Logical unit: InvoiceCustomerOrder
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  211224  KaPblk  SC21R2-6878, Added RLS annotations for the Viewa Customer_Order_Collect_Inv, Customer_Order_Invoice_Line,Customer_Order_Normal_Invoice.
--  211117  Pumjlk  SC21R2-3234, Add RLS annotaion for Customer_Order_Invoice, Ord_Delivery_Type_Lov, Ord_Invoice_Type_Lov, Ord_Invoice_Series_Lov, customer_order_inv_line_join
--  211115  NiRalk  SC21R2-3234, Added CustomImplemented annotation to Invoicable_Coll_Co_Lines,Customer_Order_Ship_Invoice,Invoice_Customer_Rma_Lov,Collect_Custom_Invoice,
--  211115          Customer_Order_Collect_Invoice views.
--  210714  KiSalk  Bug 159823(SCZ-15323), External/Internal customer check of Customer_Order_Ship_Invoice was made for ordering customer and invoicing customer was used for invoice sort check.
--  210222  MaRalk  SCZ-13585(Bug Merge 157667), Modified Customer_Order_Ship_Invoice by removing the condition prevented selecting shipments, if already created invoices exist.
--  210222          Also added currency check in the two joined queries not to select repeated results.
--  200305  ApWilk  Bug 142414, Modified the view CUSTOMER_ORDER_COLLECT_INVOICE to finetune the collective invoice functinality.
--  200305  ApWilk  Bug 140700, Added a UNION SELECT to the view Invoicable_Coll_Co_Lines to consider the value of ivc_unconct_chg_seperatly_ and modified the views Customer_Order_Collect_Inv,
--  200305          Customer_Order_Collect_Invoice and Collect_Custom_Invoice to fetch the Ivc_Uncon_Chg_Sep and rowstate.
--  190528  KiSalk  Bug 148475(SCZ-5184), Replaced obsolete customer order status 'CreditBlocked' with 'Blocked'.
--  190511  NiDalk  Bug 147224, Moved the view Customer_Order_Inv_Item_Join to CustomerOrderInvItem to correctly set the LU. When set the LU as InvoiceCustomerOrder it is not possible to add custom fields in client.
--  190502  ChBnlk  Bug 147717 (SCZ-4221), Modified the view Customer_Order_Ship_Invoice to improve performance. 
--  190308  KHVESE  SCUXXW4-8985, Added view customer_order_inv_line_join and added column company to view Customer_Order_Invoice_Line.
--  190305  ErFelk  Bug 147205(SCZ-3689), Modified Customer_Order_Invoice_Line view by changing the length of order_no to 12.
--  181024  DilMlk  Bug 141723, Removed self dependencies to ORDER component from views Customer_Order_Collect_Inv, Customer_Order_Collect_Invoice, Collect_Custom_Invoice and Customer_Order_Invoice. 
--  180927  ChBnlk  Bug 144087, Modified the view Customer_Order_Ship_Invoice to show the newly added freight charge lines after the shipment invoice is created. Also changed the view to stop
--  180927          showing the unnecessary lines when multiple currency is used for shipment line and the freight charge line.
--  180829  RaVdlk  SCUXXW4-1059, Reverted the changes done in ORD_INVOICE_SERIES_LOV
--  180829  RaVdlk  SCUXXW4-1061, Changed the order of company and series id in ORD_INVOICE_SERIES_LOV
--  180824  RaVdlk  SCUXXW4-1061, Made the Company a key in ORD_INVOICE_SERIES_LOV
--  180726  NiDalk  Bug 143122, Modified Customer_Order_Ship_Invoice to improve performance. Added separate NOT EXIST check for CUSTOMER_ORDER_INV_HEAD for invoices not  
--  180726          connected to project. when not connected to project currency_rate_type is null in customer_order.
--  170615  MeAblk  Bug 135966, Added a union SELECT statement into the view Customer_Order_Ship_Invoice in order to consider the shipment freight charge lines as well.
--  170315  SudJlk  VAULT-1962, Applied CRM access to views Customer_Order_Normal_Invoice, Customer_Order_Inv_Item_Join, Customer_Order_Invoice_Line and Customer_Order_Collect_Inv.
--  170201  NiDalk  Bug 131941, Added delivery_date to views Invoicable_Coll_Co_Lines, Customer_Order_Collect_Inv and Customer_Order_Collect_Invoice to get the minimum 
--  170201          date deliverd in Customer_Order_Collect_Invoice for a customer for invoicable lines.
--  161018  SeJalk  Bug 131897, Modified Invoicable_Coll_Co_Lines in order to create collective invoices for charges and stage billing items after order being released.
--  161004  SWeelk  Bug 130242, Modified Customer_Order_Inv_Item_Join to avoid retrieving prepayment invoice lines.
--  160913  TiRalk  STRSC-3908, Modified view Customer_Order_Ship_Invoice to exclude the co records which are manually blocked to prevent creating shipment invoice.
--  160725  PrYaLK  Bug 130538, Modified Customer_Order_Ship_Invoice to filter out the shipment freight charges from shipment invoices which are already invoiced.
--  160725  RoJalk  LIM-6995, Renamed rowstate to objstate in Shipment_Pub.
--  160711  PrYaLK  Bug 128429, Modified Invoicable_Coll_Co_Lines, Customer_Order_Collect_Inv and Customer_Order_Collect_Invoice VIEWs to address the performance issue
--  160711          when populating data.
--  160622  MeAblk  Bug 129835, Modified view CUSTOMER_ORDER_INV_ITEM_JOIN to avoid convert the invoiced _qty into negative value when the invoice type is considered as a correction invoice.
--  160509  MaRalk  LIM-6531, Modified sub query of Customer_Order_Ship_Invoice view by joining with shipment_freight_tab.
--  160308	MeAblk  Bug 127480, Modified view Invoicable_Coll_Co_Lines, Customer_Order_Normal_Inv, Customer_Order_Ship_Invoice to handle negative charged_qty.
--  150203  MaIklk  LIM-4139, Changes done to Customer_Order_Ship_Invoice in order to return customer order source type records.
--  151112  KiSalk  Bug 125898, Added customer_no to select list of Invoicable_Coll_Co_Lines and added condition to filter on rowstate of customer order.
--  151112          Added condition to compare customer_no and filter on rowstate of customer order to Customer_Order_Collect_Inv to reduce cost and cardinality of statement.
--  151208  SURBLK  Removed col.vat and added 'Y' as hard corded value TODO_HOMERUN FINHR-477 
--  151202  RoJalk  LIM-5178, Rename ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO to SOURCE_REF1,
--  151202          SOURCE_REF2, SOURCE_REF3, SOURCE_REF4 in ShipmentLine and ShipmentLineHandlUnit. 
--  151110  RoJalk  LIM-4610, Rename ShipmentOrderLine LU to ShipmentLine.
--  151103  IsSalk  FINHR-316, Renamed attribute FEE_CODE to TAX_CODE in Customer Order Line.
--  151015  AyAmlk  Bug 125121, Modified CUSTOMER_ORDER_INV_ITEM_JOIN view in order to handle the NULL instance of def_co_prepay_cre_inv_type.
--  150605  MeAblk  Bug 122831, Added customer_no_pay_ref into the view Customer_Order_Collect_Inv.
--  150526  Cpeilk  RED-358, Removed dummy view RENTAL_TRANSACTION_PUB. Added condition compilation where it is used. Also added DynamicComponentDependency annotation.
--  150526  IsSalk  KES-510, Modified view Invoicable_Coll_Co_Lines to filter out cancelled CO deliver lines.
--  150522  NaSalk  RED-311, Added transaction_type_db and finally_invoiced_date to RENTAL_TRANSACTION_PUB.
--  150429  NWeelk   Bug 122325, Modified Invoicable_Coll_Co_Lines, Customer_Order_Normal_Inv and Customer_Order_Ship_Invoice to retrieve un-invoiced charge lines 
--  150429           correctly by selecting records which has invoiced_qty less than charged_qty instead of using not equal sign.
--  150903  JeeJlk  Bug 123874, Modifed the view Customer_Order_Ship_Invoice to filter out shipments based on customers invoice type. only to show Normal, Normal and collective.
--  150429  NWeelk  Bug 122325, Modified Invoicable_Coll_Co_Lines, Customer_Order_Normal_Inv and Customer_Order_Ship_Invoice to retrieve un-invoiced charge lines 
--  150429          correctly by selecting records which has invoiced_qty less than charged_qty instead of using not equal sign.
--  150508  Cpeilk  Bug 122446, Added column rental_mode_id to view RENTAL_TRANSACTION_PUB.  
--  150223  MaRalk  PRSC-6227, Added currency_code to CUSTOMER_ORDER_INV_ITEM_JOIN.
--  150215  ChFolk  PRSC-4852, Reversed the correction done for PRSC-716 as there is no way to create credit invoice against the debit invoice created for a package component.
--  150130  KiSalk  Bug 120824, Modified view VIEW_SHIP_IVC by adding identity  to NOT EXISTS check CUSTOMER_ORDER_INV_HEAD and changing the EXISTS 
--  150130          with UNION to different EXISTS checks with OR condition
--  141125  ChFolk  PRSC-716, Modified view Invoice_Customer_Rma_Lov to support return of package parts through RMA.
--  141118  JeLise  PRSC-2547, Replaced CUSTOMER_ORDER_JOIN with CUSTOMER_ORDER_LINE_TAB and CUSTOMER_ORDER_TAB.
--  141007  KiSalk  Bug 119042, Split the view COL_VIEW with condition customer_no_pay is NULL or not to improve the performance, especially when searched on customer_no.
--  140814  Vwloza  Updated Invoice_Customer_Rma_Lov with Rental col and clause to exclude all rental lines.
--  140725  Pesulk  Modified Invoicable_Coll_Co_Lines where clause to add a validation for planned_invoice_date in rental transactions.
--  140519  ChFolk  Added customer_po_no into INVOICE_CUSTOMER_RMA_LOV.
--  140421  SBalLK  Bug 116331, Modified CUSTOMER_ORDER_INVOICE_LINE view to reflect the column name changes in CUSTOMER_ORDER_JOIN view.
--  140318  RuLiLk  Bug 114315, Modified view CUSTOMER_ORDER_INVOICE_LINE, Added two columns unit_price_incl_tax, base_unit_price_incl_tax.
--  140311  NaSalk 
-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------


-------------------- PRIVATE VIEW DEFINITIONS -------------------------------
@DbViewRowLevelSecurity CustomImplemented
VIEW Invoicable_Coll_Co_Lines IS
   Prompt = 'Invoicable Customer Order Lines for Collective Invoice'
   Order_No.Flags = 'A---L'
   Order_No.Datatype = 'STRING(12)'
   Order_No.Prompt = 'Order no'
   Country_Code.Flags = 'A---L'
   Country_Code.Datatype = 'STRING(2)'
   Country_Code.Prompt = 'Delivery Country Code'
   Tax_liability.Flags = 'A----'
   Tax_liability.Datatype = 'STRING(20)'
   Tax_liability.Prompt = 'Tax Liability'
   Customer_No.Flags = 'A----'
   Customer_No.Datatype = 'STRING(20)/UPPERCASE'
   Customer_No.Prompt = 'Customer No'
   Delivery_Date.Flags = 'A----'
   Delivery_Date.Datatype = 'STRING(10)'
   Delivery_Date.Prompt = 'Date Delivered'
SELECT col.order_no              order_no,
       Cust_Order_Line_Address_API.Get_Country_Code(col.order_no, col.line_no, col.rel_no, col.line_item_no)         country_code,
       col.tax_liability         tax_liability,
       col.customer_no           customer_no,
       cod.date_delivered        delivery_date
FROM   customer_order_line_tab col, 
       customer_order_delivery_tab cod, 
       customer_order_tab co
WHERE  ((cod.line_item_no <= 0 AND (cod.qty_to_invoice != cod.qty_invoiced)) 
         OR (cod.line_item_no > 0 AND (cod.component_invoice_flag = 'Y')))
AND    ((co.confirm_deliveries = 'FALSE') OR
        (cod.date_confirmed IS NOT NULL AND cod.incorrect_del_confirmation = 'FALSE'))
AND    col.rowstate IN ('Released', 'Reserved', 'Picked', 'Delivered', 'PartiallyDelivered')
AND    col.order_no     = cod.order_no
AND    col.line_no      = cod.line_no
AND    col.rel_no       = cod.rel_no
AND    col.line_item_no = cod.line_item_no
AND    co.order_no = col.order_no
AND    col.self_billing = 'NOT SELF BILLING'
AND    col.blocked_for_invoicing = 'FALSE'
AND    col.provisional_price = 'FALSE'
AND    col.rental = 'FALSE'
AND    cod.cancelled_delivery = 'FALSE'
AND    co.rowstate IN ('Delivered','PartiallyDelivered')
AND    EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE co.contract = site)
UNION  ALL
SELECT co.order_no, Customer_Order_Address_API.Get_Country_Code(co.order_no) country_code, co.tax_liability tax_liability, co.customer_no customer_no, co.wanted_delivery_date   delivery_date
FROM   CUSTOMER_ORDER_CHARGE_TAB coc, customer_order_tab co, company_order_info_tab coi
WHERE  coc.line_no IS NULL                 -- not connected to an order line
AND    ABS(coc.invoiced_qty) < ABS(coc.charged_qty)  -- not invoiced
AND    coc.collect = 'INVOICE'             -- only invoice charges, no collect charges
AND    coc.campaign_id IS NULL
AND    coc.order_no = co.order_no
AND    coc.company  = coi.company
AND    coi.ivc_unconct_chg_seperatly = 'TRUE'
AND   EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE co.contract = site)
UNION ALL
SELECT co.order_no, Customer_Order_Address_API.Get_Country_Code(co.order_no) country_code, co.tax_liability tax_liability, co.customer_no customer_no, cod.delivery_date   delivery_date
FROM   CUSTOMER_ORDER_CHARGE_TAB coc, customer_order_tab co, (SELECT  d.order_no, min(d.date_delivered) delivery_date 
                                                              FROM  customer_order_delivery_tab d 
                                                              WHERE d.qty_to_invoice != d.qty_invoiced
                                                              AND    d.cancelled_delivery = 'FALSE' 
                                                              GROUP BY d.order_no) cod
WHERE  coc.line_no IS NULL                 -- not connected to an order line
AND    ABS(coc.invoiced_qty) < ABS(coc.charged_qty)  -- not invoiced
AND    coc.collect = 'INVOICE'             -- only invoice charges, no collect charges
AND    coc.order_no = co.order_no
AND    coc.order_no = cod.order_no
AND   co.rowstate IN ('Delivered','PartiallyDelivered')
AND   EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE co.contract = site)
UNION ALL
SELECT col.order_no, Cust_Order_Line_Address_API.Get_Country_Code(col.order_no, col.line_no, col.rel_no, col.line_item_no) country_code, col.tax_liability tax_liability, col.customer_no customer_no, approval_date delivery_date
FROM   order_line_staged_billing_tab osb, customer_order_line_tab col, customer_order_tab co 
WHERE  osb.rowstate = 'Approved'
AND    osb.order_no = co.order_no
AND    col.rowstate IN ( 'Released', 'Reserved', 'Picked', 'PartiallyDelivered', 'Delivered')
AND    col.provisional_price = 'FALSE'
AND    osb.order_no     = col.order_no
AND    osb.line_no      = col.line_no
AND    osb.rel_no       = col.rel_no
AND    osb.line_item_no = col.line_item_no
AND    co.rowstate IN ('Released', 'Reserved', 'Picked', 'PartiallyDelivered', 'Delivered')
AND   EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE co.contract = site)
UNION ALL
SELECT co.order_no, Customer_Order_Address_API.Get_Country_Code(co.order_no) country_code, co.tax_liability tax_liability, co.customer_no customer_no, coc2.date_entered delivery_date
FROM   customer_order_charge_tab coc2, customer_order_tab co
WHERE  co.rowstate IN ('Blocked', 'Released', 'Reserved', 'Picked', 'PartiallyDelivered', 'Delivered', 'Invoiced')
AND coc2.line_no IS NULL
AND ABS(coc2.invoiced_qty) < ABS(coc2.charged_qty)
AND coc2.collect = 'INVOICE'
AND coc2.order_no = co.order_no
AND NOT EXISTS (SELECT 1
                FROM   customer_order_line_tab col2
                WHERE  col2.order_no = coc2.order_no
                AND    col2.rowstate IN ( 'Released', 'Reserved', 'Picked', 'PartiallyDelivered', 'Delivered' ))
AND   EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE co.contract = site)
$IF(Component_Rental_SYS.INSTALLED) $THEN                
UNION ALL
SELECT col.order_no              order_no,
       Cust_Order_Line_Address_API.Get_Country_Code(col.order_no, col.line_no, col.rel_no, col.line_item_no)         country_code,
       col.tax_liability         tax_liability,
       col.customer_no           customer_no,
       rt.transaction_date       delivery_date
FROM   customer_order_line_tab col, 
       customer_order_tab co,
       rental_transaction_pub rt
WHERE  col.rowstate NOT IN ('Invoiced', 'Cancelled')
AND    co.order_no = col.order_no
AND    rt.order_ref1 = col.order_no
AND    rt.order_ref2 = col.line_no
AND    rt.order_ref3 = col.rel_no
AND    rt.order_ref4 = col.line_item_no
AND    rt.rental_type_db = 'CUST ORDER'
AND    col.self_billing = 'NOT SELF BILLING'
AND    col.blocked_for_invoicing = 'FALSE'
AND    col.provisional_price = 'FALSE'
AND    col.rental = 'TRUE'
AND    rt.invoiceable_db = 'TRUE'
AND    rt.invoice_status_db = 'NOT INVOICED'
AND    rt.planned_invoice_date <= sysdate
AND    co.rowstate IN ('Blocked', 'Delivered', 'Released', 'Reserved', 'Picked', 'PartiallyDelivered')
AND    EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE co.contract = site)
$END
;

@DbViewRowLevelSecurity CustomImplemented
@RmcomAccessCheck CustOrdCustomer(co.customer_no)
VIEW Customer_Order_Collect_Inv IS
   Prompt = 'Invoice Customer Order'
   Order_No.Flags = 'A---L'
   Order_No.Datatype = 'STRING'
   Order_No.Prompt = 'Order no'
   Tax_Liability_Country.Flags = 'A---L'
   Tax_Liability_Country.Datatype = 'STRING(2)'
   Tax_Liability_Country.Prompt = 'Tax Liability Country'
   Contract.Flags = 'A---L'
   Contract.Datatype = 'STRING'
   Contract.Prompt = 'Contract'
   Customer_No.Flags = 'A---L'
   Customer_No.Datatype = 'STRING'
   Customer_No.Prompt = 'Customer no'
   Currency_Code.Flags = 'A---L'
   Currency_Code.Datatype = 'STRING'
   Currency_Code.Prompt = 'Currency code'
   Authorize_Code.Flags = 'A---L'
   Authorize_Code.Datatype = 'STRING'
   Authorize_Code.Prompt = 'Authorize code'
   Date_Entered.Flags = 'A---L'
   Date_Entered.Datatype = 'STRING'
   Date_Entered.Prompt = 'Date entered'
   Order_Id.Flags = 'A---L'
   Order_Id.Datatype = 'STRING'
   Order_Id.Prompt = 'Order id'
   Bill_Addr_No.Flags = 'A---L'
   Bill_Addr_No.Datatype = 'STRING'
   Bill_Addr_No.Prompt = 'Bill addr no'
   Customer_No_Pay.Flags = 'A---L'
   Customer_No_Pay.Datatype = 'STRING'
   Customer_No_Pay.Prompt = 'Customer no pay'
   Customer_No_Pay_Ref.Flags = 'A---L'
   Customer_No_Pay_Ref.Datatype = 'STRING'
   Customer_No_Pay_Ref.Prompt = 'Customer no pay ref'
   Customer_No_Pay_Addr_No.Flags = 'A---L'
   Customer_No_Pay_Addr_No.Datatype = 'STRING'
   Customer_No_Pay_Addr_No.Prompt = 'Customer no pay addr no'
   Pay_Term_Id.Flags = 'A---L'
   Pay_Term_Id.Datatype = 'STRING'
   Pay_Term_Id.Prompt = 'Pay term id'
   Customer_Po_No.Flags = 'A---L'
   Customer_Po_No.Datatype = 'STRING'
   Customer_Po_No.Prompt = 'Customer po no'
   Cust_Ref.Flags = 'A---L'
   Cust_Ref.Datatype = 'STRING'
   Cust_Ref.Prompt = 'Cust ref'
   Delivery_Terms_Desc.Flags = 'A---L'
   Delivery_Terms_Desc.Datatype = 'STRING'
   Delivery_Terms_Desc.Prompt = 'Delivery terms desc'
   Del_Terms_Location.Flags = 'A---L'
   Del_Terms_Location.Datatype = 'STRING'
   Del_Terms_Location.Prompt = 'Del terms location'
   Forward_Agent_Id.Flags = 'A---L'
   Forward_Agent_Id.Datatype = 'STRING'
   Forward_Agent_Id.Prompt = 'Forward agent id'
   Ship_Via_Desc.Flags = 'A---L'
   Ship_Via_Desc.Datatype = 'STRING'
   Ship_Via_Desc.Prompt = 'Ship via desc'
   Ship_Addr_No.Flags = 'A---L'
   Ship_Addr_No.Datatype = 'STRING'
   Ship_Addr_No.Prompt = 'Ship addr no'
   Label_Note.Flags = 'A---L'
   Label_Note.Datatype = 'STRING'
   Label_Note.Prompt = 'Label note'
   Internal_Po_Label_Note.Flags = 'A----'
   Internal_Po_Label_Note.Datatype = 'STRING'
   Internal_Po_Label_Note.Prompt = 'Internal PO Label note'
   Note_Id.Flags = 'A---L'
   Note_Id.Datatype = 'STRING'
   Note_Id.Prompt = 'Note id'
   Wanted_Delivery_Date.Flags = 'A---L'
   Wanted_Delivery_Date.Datatype = 'STRING'
   Wanted_Delivery_Date.Prompt = 'Wanted delivery date'
   Internal_Po_No.Flags = 'A---L'
   Internal_Po_No.Datatype = 'STRING'
   Internal_Po_No.Prompt = 'Internal po no'
   Jinsui_Invoice.Flags = 'A---L'
   Jinsui_Invoice.Datatype = 'STRING'
   Jinsui_Invoice.Prompt = 'Jinsui invoice'
   Project_Id.Flags = 'A---L'
   Project_Id.Datatype = 'STRING'
   Project_Id.Prompt = 'Project ID'
   Use_Price_Incl_Tax.Flags = 'A---L'
   Use_Price_Incl_Tax.Datatype = 'STRING(20)'
   Use_Price_Incl_Tax.Prompt = 'Use Price Incl Tax'
   Delivery_Date.Flags = 'A----'
   Delivery_Date.Datatype = 'STRING'
   Delivery_Date.Prompt = 'Delivery Date'
SELECT DISTINCT co.order_no                                order_no,
       Customer_Order_API.Get_Tax_Liability_Country_Db(co.order_no, iccl.country_code, iccl.tax_liability) tax_liability_country,
       contract                                             contract,
       co.customer_no                                       customer_no,
       currency_code                                        currency_code,
       authorize_code                                       authorize_code,
       date_entered                                         date_entered,
       order_id                                             order_id,
       bill_addr_no                                         bill_addr_no,
       customer_no_pay                                      customer_no_pay,
       customer_no_pay_ref                                  customer_no_pay_ref,
       customer_no_pay_addr_no                              customer_no_pay_addr_no,
       pay_term_id                                          pay_term_id,
       customer_po_no                                       customer_po_no,
       cust_ref                                             cust_ref,
       Order_Delivery_Term_API.Get_Description(delivery_terms)  delivery_terms_desc,
       del_terms_location                                   del_terms_location,
       forward_agent_id                                     forward_agent_id,
       Mpccom_Ship_Via_API.Get_Description(ship_via_code)   ship_via_desc,
       ship_addr_no                                         ship_addr_no,
       label_note                                           label_note,
       internal_po_label_note                               internal_po_label_note,
       note_id                                              note_id,
       wanted_delivery_date                                 wanted_delivery_date,
       internal_po_no                                       internal_po_no,
       jinsui_invoice                                       jinsui_invoice,
       currency_rate_type                                   currency_rate_type,
       internal_ref                                         internal_ref,   
       project_id                                           project_id,
       use_price_incl_tax                                   use_price_incl_tax,
       MIN(delivery_date)                                   delivery_date,
       rowstate                                             rowstate,
       co.rowkey                                           objkey
FROM   customer_order_tab co, INVOICABLE_COLL_CO_LINES iccl
WHERE  co.order_no = iccl.order_no
AND    co.customer_no = iccl.customer_no
AND    co.rowstate IN ('Blocked', 'Delivered', 'Released', 'Reserved', 'Picked', 'PartiallyDelivered')
GROUP BY co.order_no, Customer_Order_API.Get_Tax_Liability_Country_Db(co.order_no, iccl.country_code, iccl.tax_liability), 
         contract, co.customer_no, currency_code, authorize_code, date_entered, order_id, bill_addr_no, 
         customer_no_pay, customer_no_pay_ref, customer_no_pay_addr_no, pay_term_id, customer_po_no,
         cust_ref, delivery_terms, del_terms_location, del_terms_location, forward_agent_id, ship_via_code, 
         ship_addr_no, label_note, internal_po_label_note, note_id, wanted_delivery_date, internal_po_no, 
         jinsui_invoice, currency_rate_type, internal_ref, project_id, use_price_incl_tax, rowstate, co.rowkey;

VIEW Customer_Order_Normal_Inv IS
   Prompt = 'Invoice Customer Order'
   Order_No.Flags = 'A---L'
   Order_No.Datatype = 'STRING'
   Order_No.Prompt = 'Order no'
   Contract.Flags = 'A---L'
   Contract.Datatype = 'STRING'
   Contract.Prompt = 'Contract'
   Customer_No.Flags = 'A---L'
   Customer_No.Datatype = 'STRING'
   Customer_No.Prompt = 'Customer no'
   Currency_Code.Flags = 'A---L'
   Currency_Code.Datatype = 'STRING'
   Currency_Code.Prompt = 'Currency code'
   Authorize_Code.Flags = 'A---L'
   Authorize_Code.Datatype = 'STRING'
   Authorize_Code.Prompt = 'Authorize code'
   Date_Entered.Flags = 'A---L'
   Date_Entered.Datatype = 'STRING'
   Date_Entered.Prompt = 'Date entered'
   Order_Id.Flags = 'A---L'
   Order_Id.Datatype = 'STRING'
   Order_Id.Prompt = 'Order id'
   Bill_Addr_No.Flags = 'A---L'
   Bill_Addr_No.Datatype = 'STRING'
   Bill_Addr_No.Prompt = 'Bill addr no'
   Customer_No_Pay.Flags = 'A---L'
   Customer_No_Pay.Datatype = 'STRING'
   Customer_No_Pay.Prompt = 'Customer no pay'
   Customer_No_Pay_Addr_No.Flags = 'A---L'
   Customer_No_Pay_Addr_No.Datatype = 'STRING'
   Customer_No_Pay_Addr_No.Prompt = 'Customer no pay addr no'
   Pay_Term_Id.Flags = 'A---L'
   Pay_Term_Id.Datatype = 'STRING'
   Pay_Term_Id.Prompt = 'Pay term id'
   Customer_Po_No.Flags = 'A---L'
   Customer_Po_No.Datatype = 'STRING'
   Customer_Po_No.Prompt = 'Customer po no'
   Cust_Ref.Flags = 'A---L'
   Cust_Ref.Datatype = 'STRING'
   Cust_Ref.Prompt = 'Cust ref'
   Delivery_Terms_Desc.Flags = 'A---L'
   Delivery_Terms_Desc.Datatype = 'STRING'
   Delivery_Terms_Desc.Prompt = 'Delivery terms desc'
   Del_Terms_Location.Flags = 'A---L'
   Del_Terms_Location.Datatype = 'STRING'
   Del_Terms_Location.Prompt = 'Del terms location'
   Forward_Agent_Id.Flags = 'A---L'
   Forward_Agent_Id.Datatype = 'STRING'
   Forward_Agent_Id.Prompt = 'Forward agent id'
   Ship_Via_Desc.Flags = 'A---L'
   Ship_Via_Desc.Datatype = 'STRING'
   Ship_Via_Desc.Prompt = 'Ship via desc'
   Ship_Addr_No.Flags = 'A---L'
   Ship_Addr_No.Datatype = 'STRING'
   Ship_Addr_No.Prompt = 'Ship addr no'
   Label_Note.Flags = 'A---L'
   Label_Note.Datatype = 'STRING'
   Label_Note.Prompt = 'Label note'
   Internal_Po_Label_Note.Flags = 'A----'
   Internal_Po_Label_Note.Datatype = 'STRING'
   Internal_Po_Label_Note.Prompt = 'Internal PO Label note'
   Note_Id.Flags = 'A---L'
   Note_Id.Datatype = 'STRING'
   Note_Id.Prompt = 'Note id'
   Wanted_Delivery_Date.Flags = 'A---L'
   Wanted_Delivery_Date.Datatype = 'STRING'
   Wanted_Delivery_Date.Prompt = 'Wanted delivery date'
   Internal_Po_No.Flags = 'A---L'
   Internal_Po_No.Datatype = 'STRING'
   Internal_Po_No.Prompt = 'Internal po no'
   Jinsui_Invoice.Flags = 'A---L'
   Jinsui_Invoice.Datatype = 'STRING'
   Jinsui_Invoice.Prompt = 'Jinsui invoice'
SELECT order_no                                             order_no,
       contract                                             contract,
       customer_no                                          customer_no,
       currency_code                                        currency_code,
       authorize_code                                       authorize_code,
       date_entered                                         date_entered,
       order_id                                             order_id,
       bill_addr_no                                         bill_addr_no,
       customer_no_pay                                      customer_no_pay,
       customer_no_pay_addr_no                              customer_no_pay_addr_no,
       pay_term_id                                          pay_term_id,
       customer_po_no                                       customer_po_no,
       cust_ref                                             cust_ref,
       Order_Delivery_Term_API.Get_Description(delivery_terms)  delivery_terms_desc,
       del_terms_location                                   del_terms_location,
       forward_agent_id                                     forward_agent_id,
       Mpccom_Ship_Via_API.Get_Description(ship_via_code)   ship_via_desc,
       ship_addr_no                                         ship_addr_no,
       label_note                                           label_note,
       internal_po_label_note                               internal_po_label_note,
       note_id                                              note_id,
       wanted_delivery_date                                 wanted_delivery_date,
       internal_po_no                                       internal_po_no,
       jinsui_invoice                                       jinsui_invoice,
       currency_rate_type                                   currency_rate_type,
       internal_ref                                         internal_ref,
       rowstate                                             rowstate,
       rowkey                                               objkey
FROM   customer_order_tab co
WHERE EXISTS (SELECT 1
              FROM   customer_order_line_tab col, customer_order_delivery_tab cod
              WHERE  ((cod.line_item_no <= 0 AND (cod.qty_to_invoice != cod.qty_invoiced)) OR
                      (cod.line_item_no > 0 AND (cod.component_invoice_flag = 'Y')))
              AND    ((co.confirm_deliveries = 'FALSE') OR
                      (co.confirm_deliveries = 'TRUE' AND
                       cod.date_confirmed IS NOT NULL AND
                       cod.incorrect_del_confirmation = 'FALSE'))
              AND    col.rowstate NOT IN ('Invoiced', 'Cancelled')
              AND    col.order_no     = cod.order_no
              AND    col.line_no      = cod.line_no
              AND    col.rel_no       = cod.rel_no
              AND    col.line_item_no = cod.line_item_no
              AND    col.order_no     = co.order_no
              AND    col.self_billing = 'NOT SELF BILLING'
              AND    col.blocked_for_invoicing = 'FALSE'
              AND    col.provisional_price = 'FALSE'
              AND    cod.cancelled_delivery = 'FALSE'
              UNION
              SELECT 1
              FROM   CUSTOMER_ORDER_CHARGE_TAB coc
              WHERE  coc.line_no IS NULL                 -- not connected to an order line
              AND    ABS(coc.invoiced_qty) < ABS(coc.charged_qty)  -- not invoiced
              AND    coc.collect = 'INVOICE'             -- only invoice charges, no collect charges
              AND    coc.order_no = co.order_no
              AND    EXISTS (SELECT 1
                             FROM   customer_order_delivery_tab cod
                             WHERE  coc.order_no = cod.order_no
                             AND    cod.qty_to_invoice != cod.qty_invoiced
                             AND    cod.cancelled_delivery = 'FALSE')
              UNION
              SELECT 1
              FROM   order_line_staged_billing_tab osb, customer_order_line_tab col
              WHERE  osb.rowstate = 'Approved'
              AND    osb.order_no = co.order_no
              AND    col.rowstate NOT IN ('Cancelled', 'Invoiced')
              AND    col.provisional_price = 'FALSE'
              AND    osb.order_no     = col.order_no
              AND    osb.line_no      = col.line_no
              AND    osb.rel_no       = col.rel_no
              AND    osb.line_item_no = col.line_item_no
              UNION
              SELECT 1
              FROM customer_order_charge_tab coc2
              WHERE co.rowstate NOT IN ('Cancelled', 'Planned')
              AND coc2.line_no IS NULL
              AND ABS(coc2.invoiced_qty) < ABS(coc2.charged_qty)
              AND coc2.collect = 'INVOICE'
              AND coc2.order_no = co.order_no
              AND NOT EXISTS (SELECT 1
                              FROM   customer_order_line_tab col2
                              WHERE  col2.order_no = coc2.order_no
                              AND    col2.rowstate NOT IN ('Cancelled','Invoiced')));

@DbViewRowLevelSecurity CustomImplemented
VIEW Customer_Order_Collect_Invoice IS
   Prompt = 'Customer Order Collective Invoice'
   Customer_No.Flags = 'P----'
   Customer_No.Datatype = 'STRING(20)/UPPERCASE'
   Customer_No.Prompt = 'Customer No'
   Customer_No.Ref = 'CustOrdCustomer/NOCHECK'
   Contract.Flags = 'P----'
   Contract.Datatype = 'STRING(10)/UPPERCASE'
   Contract.Prompt = 'Site'
   Contract.Ref = 'Site/NOCHECK'
   Company.Flags = 'A----'
   Company.Datatype = 'STRING(20)/UPPERCASE'
   Company.Prompt = 'Company'
   Currency_Code.Flags = 'P----'
   Currency_Code.Datatype = 'STRING(10)/UPPERCASE'
   Currency_Code.Prompt = 'Currency Code'
   Currency_Code.Ref = 'IsoCurrency/NOCHECK'
   Pay_Term_Id.Flags = 'P----'
   Pay_Term_Id.Datatype = 'STRING(10)/UPPERCASE'
   Pay_Term_Id.Prompt = 'Payment Terms'
   Pay_Term_Id.Ref = 'PaymentTerm(COMPANY)/NOCHECK'
   Bill_Addr_No.Flags = 'P----'
   Bill_Addr_No.Datatype = 'STRING(50)/UPPERCASE'
   Bill_Addr_No.Prompt = 'Bill Addr No'
   Bill_Addr_No.Ref = 'CustomerInfoAddress(customer_no)/NOCHECK'
   Currency_Rate_Type.Flags = 'A----'
   Currency_Rate_Type.Datatype = 'STRING(10)'
   Currency_Rate_Type.Prompt = 'Currency Rate Type'
   Project_Id.Flags = 'A----'
   Project_Id.Datatype = 'STRING(10)'
   Project_Id.Prompt = 'Project ID'
   Tax_Liability_Country.Flags = 'A---L'
   Tax_Liability_Country.Datatype = 'STRING(200)'
   Tax_Liability_Country.Prompt = 'Tax Liability Country'
   Tax_Liability_Country_Db.Flags = 'A---L'
   Tax_Liability_Country_Db.Datatype = 'STRING(2)'
   Tax_Liability_Country_Db.Prompt = 'Tax Liability Country'
   Use_Price_Incl_Tax.Flags = 'A---L'
   Use_Price_Incl_Tax.Datatype = 'STRING(20)'
   Use_Price_Incl_Tax.Prompt = 'Use Price Incl Tax'
   Delivery_Date.Flags = 'A----'
   Delivery_Date.Datatype = 'STRING'
   Delivery_Date.Prompt = 'Delivery date'
SELECT NVL(coi.customer_no_pay, coi.customer_no)            customer_no,
       coi.contract                                         contract,
       spcon.company                                        company,
       coi.currency_code                                    currency_code,
       coi.pay_term_id                                      pay_term_id,
       NVL(coi.customer_no_pay_addr_no, coi.bill_addr_no)   bill_addr_no,
       COUNT(DISTINCT coi.order_no)                         orders_not_invoiced,
       coi.jinsui_invoice                                   jinsui_invoice,
       coi.currency_rate_type                               currency_rate_type,
       coi.project_id                                       project_id,
       Iso_Country_API.Decode(coi.tax_liability_country)    tax_liability_country,
       coi.tax_liability_country                            tax_liability_country_db,
       coi.use_price_incl_tax                               use_price_incl_tax,
       MIN(coi.delivery_date)                               delivery_date,
       NVL(coi.customer_no_pay, coi.customer_no)            objid
FROM   customer_order_collect_inv coi, cust_ord_customer_tab coc, site_public spacq, site_public spcon
WHERE  coi.contract IN (SELECT site FROM user_allowed_site_pub)
AND    coc.acquisition_site = spacq.contract(+)
AND    coi.contract         = spcon.contract
AND    coc.customer_no      = NVL(coi.customer_no_pay, coi.customer_no)
AND    coc.invoice_sort     IN ('C', 'NC')
AND    ((coc.category = 'E') OR ((coc.category = 'I') AND( spacq.company != spcon.company)))
AND    NOT EXISTS
             (SELECT 1
              FROM  customer_order_inv_head i, company_def_invoice_type_Pub c
              WHERE i.creators_reference = coi.order_no
              AND   i.company            = c.company
              AND   (i.advance_invoice   = 'TRUE'
              OR    i.invoice_type IN (c.def_co_prepay_deb_inv_type, c.def_co_prepay_cre_inv_type)))
GROUP BY NVL(coi.customer_no_pay, coi.customer_no), coi.contract, spcon.company, coi.currency_code,
         coi.pay_term_id, NVL(coi.customer_no_pay_addr_no, coi.bill_addr_no),
         coi.jinsui_invoice, coi.currency_rate_type, 
         coi.project_id,  
         coi.tax_liability_country,
         coi.use_price_incl_tax;

@DbViewRowLevelSecurity CustomImplemented
VIEW Collect_Custom_Invoice IS
   Prompt = 'Collect Customer Invoice'
   Customer_No.Flags = 'P----'
   Customer_No.Datatype = 'STRING(20)/UPPERCASE'
   Customer_No.Prompt = 'Customer No'
   Customer_No.Ref = 'CustomerOrder/NOCHECK'
   Order_No.Flags = 'A----'
   Order_No.Datatype = 'STRING(10)/UPPERCASE'
   Order_No.Prompt = 'Order No'
   Order_No.Ref = 'CustomerOrder/NOCHECK'
   Contract.Flags = 'P----'
   Contract.Datatype = 'STRING(10)/UPPERCASE'
   Contract.Prompt = 'Site'
   Contract.Ref = 'Site/NOCHECK'
   Currency_Code.Flags = 'P----'
   Currency_Code.Datatype = 'STRING(10)/UPPERCASE'
   Currency_Code.Prompt = 'Currency Code'
   Currency_Code.Ref = 'IsoCurrency/NOCHECK'
   Pay_Term_Id.Flags = 'A----'
   Pay_Term_Id.Datatype = 'STRING(10)/UPPERCASE'
   Pay_Term_Id.Prompt = 'Payment Terms'
   Pay_Term_Id.Ref = 'PaymentTerm(COMPANY)/NOCHECK'
   Bill_Addr_No.Flags = 'A----'
   Bill_Addr_No.Datatype = 'STRING(50)/UPPERCASE'
   Bill_Addr_No.Prompt = 'Bill Addr No'
   Bill_Addr_No.Ref = 'CustomerInfoAddress(customer_no)/NOCHECK'
   Customer_No_Delivery.Flags = 'A----'
   Customer_No_Delivery.Datatype = 'STRING(20)/UPPERCASE'
   Customer_No_Delivery.Prompt = 'Customer No Delivery'
   Customer_No_Delivery.Ref = 'CustomerOrder/NOCHECK'
   Wanted_Delivery_Date.Flags = 'A----'
   Wanted_Delivery_Date.Datatype = 'STRING(10)/UPPERCASE'
   Wanted_Delivery_Date.Prompt = 'Wanted Delivery Date'
   Wanted_Delivery_Date.Ref = 'CustomerOrder/NOCHECK'
   Date_Entered.Flags = 'A----'
   Date_Entered.Datatype = 'STRING(10)/UPPERCASE'
   Date_Entered.Prompt = 'Date Entered'
   Date_Entered.Ref = 'CustomerOrder/NOCHECK'
   Rowstate.Flags = 'A----'
   Rowstate.Datatype = 'STRING(10)/UPPERCASE'
   Rowstate.Prompt = 'Customer No'
   Rowstate.Ref = 'CustomerOrder/NOCHECK'
   Jinsui_Invoice.Flags = 'A----'
   Jinsui_Invoice.Datatype = 'STRING(20)'
   Jinsui_Invoice.Prompt = 'Jinsui Invoice'
   Currency_Rate_Type.Flags = 'A----'
   Currency_Rate_Type.Datatype = 'STRING(10)'
   Currency_Rate_Type.Prompt = 'Currency Rate Type'
   Project_Id.Flags = 'A----'
   Project_Id.Datatype = 'STRING(10)'
   Project_Id.Prompt = 'Project ID'
   Tax_Liability_Country.Flags = 'A---L'
   Tax_Liability_Country.Datatype = 'STRING(200)'
   Tax_Liability_Country.Prompt = 'Tax Liability Country'
   Tax_Liability_Country_Db.Flags = 'A---L'
   Tax_Liability_Country_Db.Datatype = 'STRING(2)'
   Tax_Liability_Country_Db.Prompt = 'Tax Liability Country'
   Use_Price_Incl_Tax.Flags = 'A---L'
   Use_Price_Incl_Tax.Datatype = 'STRING(20)'
   Use_Price_Incl_Tax.Prompt = 'Use Price Incl Tax'
SELECT  NVL(coi.customer_no_pay, coi.customer_no)                customer_no,
        coi.order_no                                             order_no,
        coi.contract                                             contract,
        coi.currency_code                                        currency_code,
        coi.pay_term_id                                          pay_term_id,
        NVL(coi.customer_no_pay_addr_no, coi.bill_addr_no)       bill_addr_no,
        coi.customer_no                                          customer_no_delivery,
        coi.wanted_delivery_date                                 wanted_delivery_date,
        coi.date_entered                                         date_entered,
        coi.rowstate                                             rowstate,
        coi.jinsui_invoice                                       jinsui_invoice,
        coi.currency_rate_type                                   currency_rate_type,
        coi.project_id                                           project_id,
        Iso_Country_API.Decode(coi.tax_liability_country)        tax_liability_country,
        coi.tax_liability_country                                tax_liability_country_db,
        coi.use_price_incl_tax                                   use_price_incl_tax,
        coi.objkey                                               objkey
 FROM   customer_order_collect_inv coi 
WHERE EXISTS (SELECT 1 FROM user_allowed_site_pub
            WHERE contract = site)
AND   NOT EXISTS
             (SELECT 1
              FROM  customer_order_inv_head i, company_def_invoice_type_pub c
              WHERE i.creators_reference = coi.order_no
              AND   i.creators_reference IS NOT NULL
              AND   i.company            = c.company
              AND   (i.advance_invoice   = 'TRUE'
              OR    ((i.invoice_type     = c.def_co_prepay_deb_inv_type) 
              OR    (i.invoice_type      = c.def_co_prepay_cre_inv_type))));

@DbViewRowLevelSecurity CustomImplemented
VIEW Invoice_Customer_Rma_Lov IS
   Prompt = 'Customer Invoice RMA lov'
   Contract.Flags = 'P---L'
   Contract.Datatype = 'STRING(5)/UPPERCASE'
   Contract.Prompt = 'Site'
   Customer_No.Flags = 'P----'
   Customer_No.Datatype = 'STRING(20)'
   Customer_No.Prompt = 'Customer'
   Customer_No_Pay.Flags = 'A---L'
   Customer_No_Pay.Datatype = 'STRING(20)'
   Customer_No_Pay.Prompt = 'Invoicing Customer'
   Catalog_No.Flags = 'A---L'
   Catalog_No.Datatype = 'STRING(25)/UPPERCASE'
   Catalog_No.Prompt = 'Sales Part'
   Currency_Code.Flags = 'A--U-'
   Currency_Code.Datatype = 'STRING(3)/UPPERCASE'
   Currency_Code.Prompt = 'Currency'
   Description.Flags = 'A---L'
   Description.Datatype = 'STRING(35)'
   Description.Prompt = 'Description'
   Invoice_No.Flags = 'K---L'
   Invoice_No.Datatype = 'STRING(50)/UPPERCASE'
   Invoice_No.Prompt = 'Invoice No'
   Series_Id.Flags = 'A---L'
   Series_Id.Datatype = 'STRING(20)'
   Series_Id.Prompt = 'Series Id'
   Invoice_Id.Flags = 'A----'
   Invoice_Id.Datatype = 'NUMBER'
   Invoice_Id.Prompt = 'Invoice Id'
   Item_Id.Flags = 'A---L'
   Item_Id.Datatype = 'NUMBER'
   Item_Id.Prompt = 'Item Id'
   Order_No.Flags = 'A---L'
   Order_No.Datatype = 'STRING(12)/UPPERCASE'
   Order_No.Prompt = 'Order No'
   Order_No.Ref = 'CustomerOrder/NOCHECK'
   Line_No.Flags = 'A---L'
   Line_No.Datatype = 'STRING(4)'
   Line_No.Prompt = 'Line No'
   Rel_No.Flags = 'A---L'
   Rel_No.Datatype = 'STRING(4)'
   Rel_No.Prompt = 'Del No'
   Line_Item_No.Flags = 'A---L'
   Line_Item_No.Datatype = 'NUMBER'
   Line_Item_No.Prompt = 'Line Item No'
   Delivery_Identity.Flags = 'A----'
   Delivery_Identity.Datatype = 'STRING(200)'
   Delivery_Identity.Prompt = 'Delivery Identity'
   Sale_Unit_Price.Flags = 'A--U-'
   Sale_Unit_Price.Datatype = 'NUMBER/DECIMAL'
   Sale_Unit_Price.Prompt = 'Sale Unit Price'
   Net_Sale_Unit_Price.Flags = 'A---L'
   Net_Sale_Unit_Price.Datatype = 'NUMBER/DECIMAL'
   Net_Sale_Unit_Price.Prompt = 'Net Price/Curr'
   Invoiced_Qty.Flags = 'A---L'
   Invoiced_Qty.Datatype = 'NUMBER'
   Invoiced_Qty.Prompt = 'Invoiced Qty'
   Qty_Shipped.Flags = 'A---L'
   Qty_Shipped.Datatype = 'NUMBER'
   Qty_Shipped.Prompt = 'Qty Delivered'
   Qty_Returned.Flags = 'A---L'
   Qty_Returned.Datatype = 'NUMBER'
   Qty_Returned.Prompt = 'Qty Returned'
   Customer_Po_No.Flags = 'A---L'
   Customer_Po_No.Datatype = 'STRING(50)'
   Customer_Po_No.Prompt = 'Customer Po No'
SELECT ii.contract                        contract,
       SUBSTR(ii.delivery_customer,1,20)  customer_no,
       SUBSTR(ih.identity,1,20)           customer_no_pay,
       ii.catalog_no                      catalog_no,
       ih.currency                        currency_code,
       col.catalog_desc                   description,
       ih.invoice_no                      invoice_no,
       ih.series_id                       series_id,
       ii.invoice_id                      invoice_id,
       ii.item_id                         item_id,
       ii.order_no                        order_no,
       ii.line_no                         line_no,
       ii.release_no                      rel_no,
       ii.line_item_no                    line_item_no,
       ii.delivery_customer               delivery_identity,
       ii.sale_unit_price                 sale_unit_price,
       ii.sale_unit_price * (1 - (ii.discount/100)) * (1 - ((ii.order_discount+ii.additional_discount)/100))
                                          net_sale_unit_price,
       ii.invoiced_qty                    invoiced_qty,
       ii.objkey                          objkey,
       col.qty_shipped                    qty_shipped,
       col.qty_returned                   qty_returned,
       ii.customer_po_no                  customer_po_no
FROM   CUSTOMER_ORDER_INV_ITEM ii JOIN CUSTOMER_ORDER_LINE_TAB col
ON     col.order_no     = ii.order_no
AND    col.line_no      = ii.line_no
AND    col.rel_no       = ii.release_no
AND    col.line_item_no = ii.line_item_no, CUSTOMER_ORDER_INV_HEAD ih
WHERE  ii.invoice_id = ih.invoice_id
AND    ii.charge_seq_no IS NULL
AND    ii.net_curr_amount >= 0
AND    ii.prel_update_allowed = 'TRUE'
AND    ih.correction_invoice_id IS NULL
AND    col.rental = 'FALSE'
AND    EXISTS (SELECT 1
               FROM   user_allowed_site_pub usp
               WHERE  usp.site = col.contract);

-- Removed the condition prevented selecting shipments if already created invoices exist, added currency check in the two joined queries 
-- not to select repeated results. So, join changed as UNION ALL.
-- Added separate NOT EXIST check for CUSTOMER_ORDER_INV_HEAD for invoices not connected to project. when not connected to project 
-- currency_rate_type is null in customer_order.
@DbViewRowLevelSecurity CustomImplemented
VIEW Customer_Order_Ship_Invoice IS
   Prompt = 'Customer Order Shipment Invoice'
   Shipment_Id.Flags = 'P----'
   Shipment_Id.Datatype = 'NUMBER'
   Shipment_Id.Prompt = 'Shipment ID'
   Shipment_Id.Ref = 'Shipment/NOCHECK'
   Customer_No.Flags = 'P----'
   Customer_No.Datatype = 'STRING(20)/UPPERCASE'
   Customer_No.Prompt = 'Customer No'
   Customer_No.Ref = 'CustOrdCustomer/NOCHECK'
   Contract.Flags = 'P----'
   Contract.Datatype = 'STRING(10)/UPPERCASE'
   Contract.Prompt = 'Site'
   Contract.Ref = 'Site/NOCHECK'
   Company.Flags = 'A----'
   Company.Datatype = 'STRING(20)/UPPERCASE'
   Company.Prompt = 'Company'
   Currency_Code.Flags = 'P----'
   Currency_Code.Datatype = 'STRING(10)/UPPERCASE'
   Currency_Code.Prompt = 'Currency Code'
   Currency_Code.Ref = 'IsoCurrency/NOCHECK'
   Pay_Term_Id.Flags = 'P----'
   Pay_Term_Id.Datatype = 'STRING(10)/UPPERCASE'
   Pay_Term_Id.Prompt = 'Payment Terms'
   Pay_Term_Id.Ref = 'PaymentTerm(COMPANY)/NOCHECK'
   Bill_Addr_No.Flags = 'P----'
   Bill_Addr_No.Datatype = 'STRING(50)/UPPERCASE'
   Bill_Addr_No.Prompt = 'Bill Addr No'
   Bill_Addr_No.Ref = 'CustomerInfoAddress(customer_no)/NOCHECK'
   Currency_Rate_Type.Flags = 'A----'
   Currency_Rate_Type.Datatype = 'STRING(10)'
   Currency_Rate_Type.Prompt = 'Currency Rate Type'
SELECT s.shipment_id                                           shipment_id,
       NVL(co.customer_no_pay, co.customer_no)                 customer_no,
       co.contract                                             contract,
       spcon.company                                           company,
       co.currency_code                                        currency_code,
       co.pay_term_id                                          pay_term_id,
       NVL(co.customer_no_pay_addr_no, co.bill_addr_no)        bill_addr_no,
       co.jinsui_invoice                                       jinsui_invoice,
       co.currency_rate_type                                   currency_rate_type,
       s.shipment_type                                         shipment_type,
       NVL(co.customer_no_pay, co.customer_no)                 objid
FROM   CUSTOMER_ORDER_TAB co, SHIPMENT_PUB s, SHIPMENT_LINE_PUB sol, CUST_ORD_CUSTOMER_TAB coc, SITE_PUBLIC spacq, SITE_PUBLIC spcon
WHERE  s.objstate = 'Closed'
AND    sol.shipment_id = s.shipment_id
AND    co.order_no = sol.source_ref1
AND    sol.source_ref_type_db = 'CUSTOMER_ORDER'
AND    co.customer_no = coc.customer_no
AND    coc.acquisition_site                    = spacq.contract(+)
AND    co.contract                             = spcon.contract
AND    ((coc.category = 'E') OR ((coc.category = 'I') AND( spacq.company != spcon.company)))
AND   (CASE WHEN co.customer_no_pay IS NULL THEN coc.invoice_sort
            ELSE (SELECT coc_pay.invoice_sort 
                      FROM   CUST_ORD_CUSTOMER_TAB coc_pay
                      WHERE  coc_pay.customer_no = co.customer_no_pay)
      END) IN ('N','NC')
AND    co.blocked_type != 'MANUAL_BLOCKED'
AND    NOT EXISTS (SELECT 1 
                           FROM  CUSTOMER_ORDER_INV_HEAD i 
                          WHERE  i.shipment_id = s.shipment_id
                           AND   i.company = spcon.company                       
                           AND   i.identity = NVL(co.customer_no_pay, co.customer_no)
                           AND   i.pay_term_id = co.pay_term_id
                           AND   i.currency = co.currency_code
                           AND   (i.currency_rate_type = co.currency_rate_type )
                           AND   i.invoice_address_id = co.bill_addr_no
                           AND   i.js_invoice_state_db = DECODE(co.jinsui_invoice, 'TRUE', 'OJS', 'NJS'))
AND (EXISTS (SELECT 1
            FROM   CUSTOMER_ORDER_LINE_TAB col
            WHERE  sol.source_ref1 = co.order_no
            AND    sol.shipment_id = s.shipment_id
            AND    col.order_no = sol.source_ref1
            AND    col.line_no = sol.source_ref2
            AND    col.rel_no = sol.source_ref3
            AND    col.line_item_no = sol.source_ref4
            AND    col.self_billing = 'NOT SELF BILLING'
            AND    col.consignment_stock = 'NO CONSIGNMENT STOCK'
            AND    col.blocked_for_invoicing = 'FALSE'
            AND    col.provisional_price = 'FALSE'
            AND    col.rowstate NOT IN ('Invoiced', 'Cancelled')
            AND (EXISTS (SELECT 1
                        FROM   CUSTOMER_ORDER_DELIVERY_TAB cod
                        WHERE  cod.order_no     = col.order_no
                        AND    cod.line_no      = col.line_no
                        AND    cod.rel_no       = col.rel_no
                        AND    cod.line_item_no = col.line_item_no
                        AND    cod.shipment_id  = s.shipment_id
                        AND    col.rental = 'FALSE'
                        AND    ((cod.line_item_no <= 0 AND cod.qty_to_invoice != cod.qty_invoiced) OR
                                (cod.line_item_no > 0 AND cod.component_invoice_flag = 'Y'))
                        AND    ((co.confirm_deliveries = 'FALSE') OR
                                (co.confirm_deliveries = 'TRUE' AND
                                 cod.date_confirmed IS NOT NULL AND
                                 cod.incorrect_del_confirmation = 'FALSE'))
                        AND    cod.cancelled_delivery = 'FALSE')
                  $IF(Component_Rental_SYS.INSTALLED) $THEN               
                     OR EXISTS( 
                           SELECT 1
                           FROM   rental_transaction_pub rt
                           WHERE  rt.order_ref1 = col.order_no
                           AND    rt.order_ref2 = col.line_no
                           AND    rt.order_ref3 = col.rel_no
                           AND    rt.order_ref4 = col.line_item_no
                           AND    rt.rental_type_db = 'CUST ORDER'
                           AND    col.rental = 'TRUE'
                           AND    NOT EXISTS (SELECT 1 
                                              FROM rental_transaction_pub rt2
                                              WHERE  rt.rental_no  = rt2.rental_no
                                              AND    rt2.invoice_status_db = 'INVOICED'))
                  $END
                  ))
         OR EXISTS (
            SELECT 1
            FROM   CUSTOMER_ORDER_CHARGE_TAB coc
            WHERE  co.rowstate NOT IN ('Cancelled', 'Planned', 'Quoted')
            AND    coc.line_no IS NULL                 -- not connected to an order line
            AND    ABS(coc.invoiced_qty) < ABS(coc.charged_qty) -- not invoiced
            AND    coc.collect = 'INVOICE'             -- only invoice charges, no collect charges
            AND    coc.order_no = co.order_no)
         OR EXISTS (
            SELECT 1
            FROM   ORDER_LINE_STAGED_BILLING_TAB osb
            WHERE  osb.rowstate = 'Approved'
            AND    osb.order_no = co.order_no) 
         OR EXISTS (
            SELECT 1 
            FROM SHIPMENT_PUB st, SHIPMENT_FREIGHT_TAB sf,SHIPMENT_FREIGHT_CHARGE_TAB sfc             
            WHERE st.shipment_id = s.shipment_id
            AND st.shipment_id   = sfc.shipment_id
            AND st.shipment_id = sf.shipment_id
            AND sf.freight_chg_invoiced = 'FALSE'
            AND sf.currency_code = co.currency_code
            AND sfc.collect = 'INVOICE'))
AND  EXISTS (SELECT 1 FROM user_allowed_site_pub
             WHERE co.contract = site)
GROUP BY s.shipment_id, NVL(co.customer_no_pay, co.customer_no), co.contract, spcon.company, co.currency_code,
         co.pay_term_id, NVL(co.customer_no_pay_addr_no, co.bill_addr_no),
         NVL(co.customer_no_pay, co.customer_no), co.jinsui_invoice, co.currency_rate_type, s.shipment_type
UNION
SELECT s.shipment_id                                           shipment_id,
       NVL(co.customer_no_pay, co.customer_no)                 customer_no,
       co.contract                                             contract,
       spcon.company                                           company,
       sf.currency_code                                        currency_code,
       co.pay_term_id                                          pay_term_id,
       NVL(co.customer_no_pay_addr_no, co.bill_addr_no)        bill_addr_no,
       co.jinsui_invoice                                       jinsui_invoice,
       co.currency_rate_type                                   currency_rate_type,
       s.shipment_type                                         shipment_type,
       NVL(co.customer_no_pay, co.customer_no)                 objid
FROM   CUSTOMER_ORDER_TAB co, SHIPMENT_PUB s, SHIPMENT_LINE_PUB sol, CUST_ORD_CUSTOMER_TAB coc, SITE_PUBLIC spacq, SITE_PUBLIC spcon, SHIPMENT_FREIGHT_TAB sf,
       SHIPMENT_FREIGHT_CHARGE_TAB sfc 
WHERE  s.objstate = 'Closed'
AND    sol.shipment_id = s.shipment_id
AND    sol.shipment_id = sf.shipment_id
AND    sf.shipment_id  = sfc.shipment_id
AND    sf.freight_chg_invoiced = 'FALSE'
AND    sfc.collect = 'INVOICE'
AND    co.order_no = sol.source_ref1
AND    sol.source_ref_type_db = 'CUSTOMER_ORDER'
AND    sf.currency_code != co.currency_code
AND    co.customer_no = coc.customer_no
AND    coc.acquisition_site                    = spacq.contract(+)
AND    co.contract                             = spcon.contract
AND    ((coc.category = 'E') OR ((coc.category = 'I') AND( spacq.company != spcon.company)))
AND   (CASE WHEN co.customer_no_pay IS NULL THEN coc.invoice_sort
            ELSE (SELECT coc_pay.invoice_sort 
                      FROM   CUST_ORD_CUSTOMER_TAB coc_pay
                      WHERE  coc_pay.customer_no = co.customer_no_pay)
      END) IN ('N','NC')
AND    co.blocked_type != 'MANUAL_BLOCKED'
AND    NOT EXISTS (SELECT 1 
                           FROM  CUSTOMER_ORDER_INV_HEAD i 
                           WHERE i.shipment_id = s.shipment_id
                           AND   i.company = spcon.company
                           AND   i.identity = NVL(co.customer_no_pay, co.customer_no)
                           AND   i.pay_term_id = co.pay_term_id
                           AND   i.currency = co.currency_code
                           AND   (i.currency_rate_type = co.currency_rate_type )
                           AND   i.invoice_address_id = co.bill_addr_no
                           AND   i.js_invoice_state_db = DECODE(co.jinsui_invoice, 'TRUE', 'OJS', 'NJS'))       
AND  EXISTS (SELECT 1 FROM user_allowed_site_pub
             WHERE co.contract = site)
GROUP BY s.shipment_id, NVL(co.customer_no_pay, co.customer_no), co.contract, spcon.company, sf.currency_code,
         co.pay_term_id, NVL(co.customer_no_pay_addr_no, co.bill_addr_no),
         NVL(co.customer_no_pay, co.customer_no), co.jinsui_invoice, co.currency_rate_type, s.shipment_type;

@DbViewRowLevelSecurity CustomImplemented
VIEW Customer_Order_Invoice IS
   Prompt = 'Customer Order Collective Invoice'
   Order_No.Flags = 'K----'
   Order_No.Datatype = 'STRING(10)/UPPERCASE'
   Order_No.Prompt = 'Order No'
   Order_No.Ref = 'CustomerOrder/NOCHECK'
   Customer_No.Flags = 'K----'
   Customer_No.Datatype = 'STRING(20)/UPPERCASE'
   Customer_No.Prompt = 'Customer No'
   Customer_No.Ref = 'CustOrdCustomer/NOCHECK'
   Contract.Flags = 'A----'
   Contract.Datatype = 'STRING(10)/UPPERCASE'
   Contract.Prompt = 'Site'
   Contract.Ref = 'Site/NOCHECK'
   Order_Id.Flags = 'A----'
   Order_Id.Datatype = 'STRING(3)/UPPERCASE'
   Order_Id.Prompt = 'Order Type'
   Order_Id.Ref = 'CustOrderType/NOCHECK'
   Date_Entered.Flags = 'A----'
   Date_Entered.Datatype = 'DATE/DATETIME'
   Date_Entered.Prompt = 'Order Date'
   Date_Entered.Ref = 'CustomerOrder/NOCHECK'
   Tax_Liability_Country.Flags = 'A----'
   Tax_Liability_Country.Datatype = 'STRING(2)/UPPERCASE'
   Tax_Liability_Country.Prompt = 'Tax Liability Country'
SELECT  order_no                                             order_no,
        customer_no                                          customer_no,
        contract                                             contract,
        order_id                                             order_id,
        date_entered                                         date_entered,
        tax_liability_country                                tax_liability_country,
        order_no                                             objid,
        NULL                                                 objversion,
        objkey                                               objkey
FROM    customer_order_collect_inv
WHERE   EXISTS (SELECT 1 FROM user_allowed_site_pub
                WHERE contract = site)
AND     customer_no IN (SELECT customer_no
                        FROM   cust_ord_customer_tab
                        WHERE  ((category = 'E') OR
                               ((category = 'I') AND
                               (Site_API.Get_Company(acquisition_site)!=
                               Site_API.Get_Company(contract)))));

@DbViewRowLevelSecurity CustomImplemented
@RmcomAccessCheck CustOrdCustomer(customer_no)
VIEW Customer_Order_Normal_Invoice IS
   Prompt = 'Customer Order Collective Invoice'
   Order_No.Flags = 'K----'
   Order_No.Datatype = 'STRING(10)/UPPERCASE'
   Order_No.Prompt = 'Order No'
   Order_No.Ref = 'CustomerOrder/NOCHECK'
   Customer_No.Flags = 'K----'
   Customer_No.Datatype = 'STRING(20)/UPPERCASE'
   Customer_No.Prompt = 'Customer No'
   Customer_No.Ref = 'CustOrdCustomer/NOCHECK'
   Contract.Flags = 'A----'
   Contract.Datatype = 'STRING(10)/UPPERCASE'
   Contract.Prompt = 'Site'
   Contract.Ref = 'Site/NOCHECK'
   Order_Id.Flags = 'A----'
   Order_Id.Datatype = 'STRING(3)/UPPERCASE'
   Order_Id.Prompt = 'Order Type'
   Order_Id.Ref = 'CustOrderType/NOCHECK'
   Date_Entered.Flags = 'A----'
   Date_Entered.Datatype = 'DATE/DATETIME'
   Date_Entered.Prompt = 'Order Date'
   Date_Entered.Ref = 'CustomerOrder/NOCHECK'
SELECT  order_no                                             order_no,
        customer_no                                          customer_no,
        contract                                             contract,
        order_id                                             order_id,
        date_entered                                         date_entered,
        order_no                                             objid,
        NULL                                                 objversion,
        objkey                                               objkey
FROM    customer_order_normal_inv
WHERE   EXISTS (SELECT 1 FROM user_allowed_site_pub
                WHERE contract = site)
AND     customer_no IN (SELECT customer_no
                        FROM   cust_ord_customer_tab
                        WHERE  ((category = 'E') OR
                               ((category = 'I') AND
                               (Site_API.Get_Company(acquisition_site)!=
                               Site_API.Get_Company(contract)))));

@DbViewRowLevelSecurity CustomImplemented
@RmcomAccessCheck CustOrdCustomer(col.customer_no)
VIEW Customer_Order_Invoice_Line IS
   Prompt = 'Collect Invoice Per Order Line'
   Customer_No.Flags = 'P----'
   Customer_No.Datatype = 'STRING(20)/UPPERCASE'
   Customer_No.Prompt = 'Customer No'
   Customer_No.Ref = 'CustOrdCustomer/NOCHECK'
   Order_No.Flags = 'P----'
   Order_No.Datatype = 'STRING(12)/UPPERCASE'
   Order_No.Prompt = 'Order No'
   Order_No.Ref = 'CustomerOrder/NOCHECK'
   Line_No.Flags = 'K----'
   Line_No.Datatype = 'STRING(4)'
   Line_No.Prompt = 'Line No'
   Rel_No.Flags = 'K----'
   Rel_No.Datatype = 'STRING(4)'
   Rel_No.Prompt = 'Rel No'
   Line_Item_No.Flags = 'K----'
   Line_Item_No.Datatype = 'NUMBER'
   Line_Item_No.Prompt = 'Line Item No'
   Contract.Flags = 'A----'
   Contract.Datatype = 'STRING(10)/UPPERCASE'
   Contract.Prompt = 'Site'
   Contract.Ref = 'Site/NOCHECK'
   Company.Flags = 'A----'
   Company.Datatype = 'STRING(20)/UPPERCASE'
   Company.Prompt = 'Company'
   Currency_Code.Flags = 'A----'
   Currency_Code.Datatype = 'STRING(10)/UPPERCASE'
   Currency_Code.Prompt = 'Currency Code'
   Currency_Code.Ref = 'IsoCurrency/NOCHECK'
   Catalog_No.Flags = 'AMI--'
   Catalog_No.Datatype = 'STRING(25)/UPPERCASE'
   Catalog_No.Prompt = 'Sales Part Number'
   Catalog_No.Ref = 'SalesPart(contract)/NOCHECK'
   Catalog_Desc.Flags = 'A-IU-'
   Catalog_Desc.Datatype = 'STRING(200)'
   Catalog_Desc.Prompt = 'Catalog Desc'
   Buy_Qty_Due.Flags = 'AMIU-'
   Buy_Qty_Due.Datatype = 'NUMBER/DECIMAL'
   Buy_Qty_Due.Prompt = 'Buy Qty Due'
   Sales_Unit_Meas.Flags = 'AMIU-'
   Sales_Unit_Meas.Datatype = 'STRING(10)'
   Sales_Unit_Meas.Prompt = 'Sales Unit Measure'
   Sales_Unit_Meas.Ref = 'IsoUnit/NOCHECK'
   Part_Price.Flags = 'AMIU-'
   Part_Price.Datatype = 'NUMBER'
   Part_Price.Prompt = 'Part Price'
   Sale_Unit_Price.Flags = 'AMIU-'
   Sale_Unit_Price.Datatype = 'NUMBER/DECIMAL'
   Sale_Unit_Price.Prompt = 'Sale Unit Price'
   Unit_Price_Incl_Tax.Flags = 'AMIU-'
   Unit_Price_Incl_Tax.Datatype = 'NUMBER/DECIMAL'
   Unit_Price_Incl_Tax.Prompt = 'Sale Unit Price Incl Tax'
   Base_Sale_Unit_Price.Flags = 'AMIU-'
   Base_Sale_Unit_Price.Datatype = 'NUMBER/DECIMAL'
   Base_Sale_Unit_Price.Prompt = 'Base Sale Unit Price'
   Base_Unit_Price_Incl_Tax.Flags = 'AMIU-'
   Base_Unit_Price_Incl_Tax.Datatype = 'NUMBER/DECIMAL'
   Base_Unit_Price_Incl_Tax.Prompt = 'Base Sale Unit Price Incl Tax'
   Wanted_Delivery_Date.Flags = 'AMIU-'
   Wanted_Delivery_Date.Datatype = 'DATE/DATETIME'
   Wanted_Delivery_Date.Prompt = 'Wanted Delivery Date'
   Planned_Delivery_Date.Flags = 'AMIU-'
   Planned_Delivery_Date.Datatype = 'DATE/DATETIME'
   Planned_Delivery_Date.Prompt = 'Planned Delivery Date'
   Promised_Delivery_Date.Flags = 'A-IU-'
   Promised_Delivery_Date.Datatype = 'DATE/DATETIME'
   Promised_Delivery_Date.Prompt = 'Promised Delivery Date'
   Planned_Ship_Date.Flags = 'A-IU-'
   Planned_Ship_Date.Datatype = 'DATE/DATETIME'
   Planned_Ship_Date.Prompt = 'Planned Ship Date'
   Currency_Rate.Flags = 'A-IU-'
   Currency_Rate.Datatype = 'NUMBER/DECIMAL'
   Currency_Rate.Prompt = 'Currency Rate'
   tax_liability.Flags = 'AMIU-'
   tax_liability.Datatype = 'STRING(20)'
   tax_liability.Prompt = 'Tax  Liability'
   Fee_Code.Flags = 'A-IU-'
   Fee_Code.Datatype = 'STRING(200)/UPPERCASE'
   Fee_Code.Prompt = 'Tax Code'
   Fee_Code.Ref = 'StatutoryFee(COMPANY)/NOCHECK'
   Ship_Addr_No.Flags = 'A-IU-'
   Ship_Addr_No.Datatype = 'STRING(50)'
   Ship_Addr_No.Prompt = 'Ship Addr No'
   Ship_Addr_No.Ref = 'CustOrdCustomerAddress(customer_no)/NOCHECK'
   Deliver_To_Customer_No.Flags = 'AMI--'
   Deliver_To_Customer_No.Datatype = 'STRING(20)/UPPERCASE'
   Deliver_To_Customer_No.Prompt = 'Deliver to Customer No'
   Deliver_To_Customer_No.Ref = 'CustOrdCustomer/NOCHECK'
   Delivery_Terms.Flags = 'AMIU-'
   Delivery_Terms.Datatype = 'STRING(5)/UPPERCASE'
   Delivery_Terms.Prompt = 'Delivery Terms'
   Delivery_Terms.Ref = 'OrderDeliveryTerm/NOCHECK'
   Delivery_Terms_Desc.Flags = 'A-IU-'
   Delivery_Terms_Desc.Datatype = 'STRING(35)'
   Delivery_Terms_Desc.Prompt = 'Delivery Terms Desc'
   Del_Terms_Location.Flags = 'A-IU-'
   Del_Terms_Location.Datatype = 'STRING(100)'
   Del_Terms_Location.Prompt = 'Del Terms Location'
   Qty_On_Invoice.Flags = 'A-IU-'
   Qty_On_Invoice.Datatype = 'NUMBER/DECIMAL'
   Qty_On_Invoice.Prompt = 'Qty on Invoice'
   Tax_Liability_Country.Flags = 'A----'
   Tax_Liability_Country.Datatype = 'STRING(2)/UPPERCASE'
   Tax_Liability_Country.Prompt = 'Tax Liability Country'
SELECT col.customer_no                                             customer_no,
       col.order_no                                                order_no,
       col.line_no                                                 line_no,
       col.rel_no                                                  rel_no,
       col.line_item_no                                            line_item_no,
       col.contract                                                contract,
       co.currency_code                                            currency_code,
       col.rowstate                                                rowstate,
       Customer_Order_Line_API.Finite_State_Decode(col.rowstate)   state,
       col.catalog_no                                              catalog_no,
       col.catalog_desc                                            catalog_desc,
       col.buy_qty_due                                             buy_qty_due,
       col.sales_unit_meas                                         sales_unit_meas,
       col.part_price                                              part_price,
       col.sale_unit_price                                         sale_unit_price,
       col.unit_price_incl_tax                                     unit_price_incl_tax,
       col.base_sale_unit_price                                    base_sale_unit_price,
       col.base_unit_price_incl_tax                                base_unit_price_incl_tax,
       col.wanted_delivery_date                                    wanted_delivery_date,
       col.planned_delivery_date                                   planned_delivery_date,
       col.promised_delivery_date                                  promised_delivery_date,
       col.planned_ship_date                                       planned_ship_date,
       col.currency_rate                                           currency_rate,
       col.tax_liability                                           tax_liability,
       col.tax_code                                                fee_code,
       col.ship_addr_no                                            ship_addr_no,
       col.deliver_to_customer_no                                  deliver_to_customer_no,
       col.delivery_terms                                          delivery_terms,
       Order_Delivery_Term_API.Get_Description(col.delivery_terms) delivery_terms_desc,
       col.del_terms_location                                      del_terms_location,
       Site_API.Get_Company(col.contract)                          company,
       (SELECT SUM(cod.qty_to_invoice - cod.qty_invoiced)
        FROM customer_order_delivery_tab cod
        WHERE  col.order_no     = cod.order_no
        AND    col.line_no      = cod.line_no
        AND    col.rel_no       = cod.rel_no
        AND    col.line_item_no = cod.line_item_no
        AND    cod.cancelled_delivery = 'FALSE')                qty_on_invoice,
       Customer_Order_API.Get_Tax_Liability_Country_Db(col.order_no, Cust_Order_Line_Address_API.Get_country_code(col.order_no, col.line_no, col.rel_no, col.line_item_no), 'TAX') tax_liability_country, 
       col.customer_no                                             objid,
       NULL                                                        objversion,
       col.rowkey                                                  objkey
FROM   customer_order_line_tab col, customer_order_tab co
WHERE  co.order_no               = col.order_no
AND    col.blocked_for_invoicing = 'FALSE'
AND    col.rental                = 'FALSE'
AND EXISTS (SELECT 1
            FROM   customer_order_delivery_tab cod
            WHERE  ((cod.line_item_no <= 0 AND (cod.qty_to_invoice != cod.qty_invoiced)) OR
                      (cod.line_item_no > 0 AND (cod.component_invoice_flag = 'Y')))
            AND    ((co.confirm_deliveries = 'FALSE') OR
                      (co.confirm_deliveries = 'TRUE' AND
                       cod.date_confirmed IS NOT NULL AND
                       cod.incorrect_del_confirmation = 'FALSE'))
            AND    col.rowstate NOT IN ('Invoiced', 'Cancelled')
            AND    col.order_no     = cod.order_no
            AND    col.line_no      = cod.line_no
            AND    col.rel_no       = cod.rel_no
            AND    col.line_item_no = cod.line_item_no
            AND    col.self_billing = 'NOT SELF BILLING'
            AND    co.order_no      = col.order_no
            AND    cod.cancelled_delivery = 'FALSE'
            UNION
            SELECT 1
            FROM   order_line_staged_billing_tab osb
            WHERE  osb.rowstate = 'Approved'
            AND    osb.order_no = col.order_no
            AND    col.rowstate NOT IN ('Cancelled')
            AND    osb.order_no     = col.order_no
            AND    osb.line_no      = col.line_no
            AND    osb.rel_no       = col.rel_no
            AND    osb.line_item_no = col.line_item_no
            )
AND EXISTS (SELECT 1 FROM user_allowed_site_pub
            WHERE col.contract = site)
AND col.customer_no IN (SELECT customer_no
                          FROM cust_ord_customer_tab
                         WHERE ((category = 'E') OR
                               ((category = 'I') AND
                               (Site_API.Get_Company(acquisition_site)!=
                               Site_API.Get_Company(col.contract)))));

@DbViewRowLevelSecurity CustomImplemented
VIEW Ord_Delivery_Type_Lov IS
   Prompt = 'Delivery Type List'
   Company.Flags = 'AMI-L'
   Company.Datatype = 'STRING(20)/UPPERCASE'
   Company.Prompt = 'Company'
   Deliv_Type_Id.Flags = 'KMI-L'
   Deliv_Type_Id.Datatype = 'STRING(20)'
   Deliv_Type_Id.Prompt = 'Delivery type id'
   Description.Flags = 'AMI-L'
   Description.Datatype = 'STRING(2000)'
   Description.Prompt = 'Description'
SELECT a.company                                 company,
       a.deliv_type_id                           deliv_type_id,
       a.description                             description,
       a.objid                                  objid,
       a.objversion                             objversion
FROM   delivery_type_pub a
WHERE  a.company IN (SELECT DISTINCT company 
                     FROM            site_tab s, user_allowed_site_pub u
                     WHERE           s.contract = u.site);

@DbViewRowLevelSecurity CustomImplemented
VIEW Ord_Invoice_Type_Lov IS
   Prompt = 'Invoice Type List'
   Company.Flags = 'AMI-L'
   Company.Datatype = 'STRING(20)/UPPERCASE'
   Company.Prompt = 'Company'
   Type_Id.Flags = 'KMI-L'
   Type_Id.Datatype = 'STRING(50)'
   Type_Id.Prompt = 'Invoice type'
   Description.Flags = 'AMI-L'
   Description.Datatype = 'STRING(2000)'
   Description.Prompt = 'Description'
SELECT a.company                                 company,
       a.type_id                                 type_id,
       a.description                             description,
       a.objid                                  objid,
       a.objversion                             objversion
FROM   invoice_type_pub a
WHERE  a.company IN (SELECT DISTINCT company 
                     FROM            site_tab s, user_allowed_site_pub u
                     WHERE           s.contract = u.site);

@DbViewRowLevelSecurity CustomImplemented
VIEW Ord_Invoice_Series_Lov IS
   Prompt = 'Invoice Series Id List'
   Company.Flags = 'AMI-L'
   Company.Datatype = 'STRING(20)/UPPERCASE'
   Company.Prompt = 'Company'
   Series_Id.Flags = 'KMI-L'
   Series_Id.Datatype = 'STRING(20)'
   Series_Id.Prompt = 'Series id'
   Description.Flags = 'AMI-L'
   Description.Datatype = 'STRING(2000)'
   Description.Prompt = 'Description'
SELECT a.company                                 company,
       a.series_id                               series_id,
       a.description                             description,
       a.objid                                  objid,
       a.objversion                             objversion
FROM   invoice_series_pub a
WHERE  a.company IN (SELECT DISTINCT company 
                     FROM            site_tab s, user_allowed_site_pub u
                     WHERE           s.contract = u.site);

@DbViewRowLevelSecurity CustomImplemented
VIEW customer_order_inv_line_join IS 
   Prompt = 'Collect Invoice Per Order Line'
   Customer_No.Flags = 'P----'
   Customer_No.Datatype = 'STRING(20)/UPPERCASE'
   Customer_No.Prompt = 'Customer No'
   Customer_No.Ref = 'CustOrdCustomer/NOCHECK'
   Order_No.Flags = 'P----'
   Order_No.Datatype = 'STRING(10)/UPPERCASE'
   Order_No.Prompt = 'Order No'
   Order_No.Ref = 'CustomerOrder/NOCHECK'
   Line_No.Flags = 'K----'
   Line_No.Datatype = 'STRING(4)'
   Line_No.Prompt = 'Line No'
   Rel_No.Flags = 'K----'
   Rel_No.Datatype = 'STRING(4)'
   Rel_No.Prompt = 'Rel No'
   Line_Item_No.Flags = 'K----'
   Line_Item_No.Datatype = 'NUMBER'
   Line_Item_No.Prompt = 'Line Item No'
   Contract.Flags = 'A----'
   Contract.Datatype = 'STRING(10)/UPPERCASE'
   Contract.Prompt = 'Site'
   Contract.Ref = 'Site/NOCHECK'
   Company.Flags = 'A----'
   Company.Datatype = 'STRING(20)/UPPERCASE'
   Company.Prompt = 'Company'
   Currency_Code.Flags = 'A----'
   Currency_Code.Datatype = 'STRING(10)/UPPERCASE'
   Currency_Code.Prompt = 'Currency Code'
   Currency_Code.Ref = 'IsoCurrency/NOCHECK'
   Catalog_No.Flags = 'AMI--'
   Catalog_No.Datatype = 'STRING(25)/UPPERCASE'
   Catalog_No.Prompt = 'Sales Part Number'
   Catalog_No.Ref = 'SalesPart(contract)/NOCHECK'
   Catalog_Desc.Flags = 'A-IU-'
   Catalog_Desc.Datatype = 'STRING(200)'
   Catalog_Desc.Prompt = 'Catalog Desc'
   Buy_Qty_Due.Flags = 'AMIU-'
   Buy_Qty_Due.Datatype = 'NUMBER/DECIMAL'
   Buy_Qty_Due.Prompt = 'Buy Qty Due'
   Sales_Unit_Meas.Flags = 'AMIU-'
   Sales_Unit_Meas.Datatype = 'STRING(10)'
   Sales_Unit_Meas.Prompt = 'Sales Unit Measure'
   Sales_Unit_Meas.Ref = 'IsoUnit/NOCHECK'
   Part_Price.Flags = 'AMIU-'
   Part_Price.Datatype = 'NUMBER'
   Part_Price.Prompt = 'Part Price'
   Sale_Unit_Price.Flags = 'AMIU-'
   Sale_Unit_Price.Datatype = 'NUMBER/DECIMAL'
   Sale_Unit_Price.Prompt = 'Sale Unit Price'
   Unit_Price_Incl_Tax.Flags = 'AMIU-'
   Unit_Price_Incl_Tax.Datatype = 'NUMBER/DECIMAL'
   Unit_Price_Incl_Tax.Prompt = 'Sale Unit Price Incl Tax'
   Base_Sale_Unit_Price.Flags = 'AMIU-'
   Base_Sale_Unit_Price.Datatype = 'NUMBER/DECIMAL'
   Base_Sale_Unit_Price.Prompt = 'Base Sale Unit Price'
   Base_Unit_Price_Incl_Tax.Flags = 'AMIU-'
   Base_Unit_Price_Incl_Tax.Datatype = 'NUMBER/DECIMAL'
   Base_Unit_Price_Incl_Tax.Prompt = 'Base Sale Unit Price Incl Tax'
   Wanted_Delivery_Date.Flags = 'AMIU-'
   Wanted_Delivery_Date.Datatype = 'DATE/DATETIME'
   Wanted_Delivery_Date.Prompt = 'Wanted Delivery Date'
   Planned_Delivery_Date.Flags = 'AMIU-'
   Planned_Delivery_Date.Datatype = 'DATE/DATETIME'
   Planned_Delivery_Date.Prompt = 'Planned Delivery Date'
   Promised_Delivery_Date.Flags = 'A-IU-'
   Promised_Delivery_Date.Datatype = 'DATE/DATETIME'
   Promised_Delivery_Date.Prompt = 'Promised Delivery Date'
   Planned_Ship_Date.Flags = 'A-IU-'
   Planned_Ship_Date.Datatype = 'DATE/DATETIME'
   Planned_Ship_Date.Prompt = 'Planned Ship Date'
   Currency_Rate.Flags = 'A-IU-'
   Currency_Rate.Datatype = 'NUMBER/DECIMAL'
   Currency_Rate.Prompt = 'Currency Rate'
   tax_liability.Flags = 'AMIU-'
   tax_liability.Datatype = 'STRING(20)'
   tax_liability.Prompt = 'Tax  Liability'
   Fee_Code.Flags = 'A-IU-'
   Fee_Code.Datatype = 'STRING(200)/UPPERCASE'
   Fee_Code.Prompt = 'Tax Code'
   Fee_Code.Ref = 'StatutoryFee(COMPANY)/NOCHECK'
   Ship_Addr_No.Flags = 'A-IU-'
   Ship_Addr_No.Datatype = 'STRING(50)'
   Ship_Addr_No.Prompt = 'Ship Addr No'
   Ship_Addr_No.Ref = 'CustOrdCustomerAddress(customer_no)/NOCHECK'
   Deliver_To_Customer_No.Flags = 'AMI--'
   Deliver_To_Customer_No.Datatype = 'STRING(20)/UPPERCASE'
   Deliver_To_Customer_No.Prompt = 'Deliver to Customer No'
   Deliver_To_Customer_No.Ref = 'CustOrdCustomer/NOCHECK'
   Delivery_Terms.Flags = 'AMIU-'
   Delivery_Terms.Datatype = 'STRING(5)/UPPERCASE'
   Delivery_Terms.Prompt = 'Delivery Terms'
   Delivery_Terms.Ref = 'OrderDeliveryTerm/NOCHECK'
   Delivery_Terms_Desc.Flags = 'A-IU-'
   Delivery_Terms_Desc.Datatype = 'STRING(35)'
   Delivery_Terms_Desc.Prompt = 'Delivery Terms Desc'
   Del_Terms_Location.Flags = 'A-IU-'
   Del_Terms_Location.Datatype = 'STRING(100)'
   Del_Terms_Location.Prompt = 'Del Terms Location'
   Qty_On_Invoice.Flags = 'A-IU-'
   Qty_On_Invoice.Datatype = 'NUMBER/DECIMAL'
   Qty_On_Invoice.Prompt = 'Qty on Invoice'
   Tax_Liability_Country.Flags = 'A----'
   Tax_Liability_Country.Datatype = 'STRING(2)/UPPERCASE'
   Tax_Liability_Country.Prompt = 'Tax Liability Country'
   Net_Curr_Amount.Datatype = 'NUMBER'
   Net_Curr_Amount.Flags = 'A----'    
   Net_Dom_Amount.Datatype = 'NUMBER'
   Net_Dom_Amount.Flags = 'A----'
   Gross_Curr_Amount.Datatype = 'NUMBER'
   Gross_Curr_Amount.Flags = 'A----'
   Gross_Dom_Amount.Datatype   = 'NUMBER'
   Gross_Dom_Amount.Flags = 'A----'
   Tax_Curr_Amount.Datatype = 'NUMBER'
   Tax_Curr_Amount.Flags = 'A----'
   Tax_Dom_Amount.Datatype = 'NUMBER'
   Tax_Dom_Amount.Flags = 'A----'
SELECT il.*, am.*
FROM customer_order_invoice_line il, Tax_Handling_Order_Util_API.Get_Amounts(NULL, NULL, il.company, 'CUSTOMER_ORDER_LINE', il.Order_No, il.Line_No, il.Rel_No, il.Line_Item_No, '*') am;
