-----------------------------------------------------------------------------
--
--  Logical unit: SalesPartBasePrice
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  190610  RaVdlk  SCUXXW4-22014, Modified the Sales_Part_Base_Price_Parts to fetch catalog description when needed
--  180517  MaEelk  SCUXXW4-12072, Added SALES_PRICE_ORIGIN_DB to SALES_PART_BASE_PRICE_DESC_LOV and SALES_PART_BASE_PRICE_PARTS.
--  180517          Added SALES_PRICE_TYPE to PRICE_BREAKS_PER_SALES_PART. 
-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

COLUMN Sales_Price_Group_Id IS
   Flags      = 'P----'
   Datatype   = 'STRING(10)/UPPERCASE'
   Prompt     = 'Sales Price Group Id';

COLUMN Catalog_Desc IS
   Flags      = 'A---L'
   Datatype   = 'STRING(200)'
   Prompt     = 'Description';

COLUMN Description IS
   Flags      = 'A---L'
   Datatype   = 'STRING(20)'
   Prompt     = 'Description';

COLUMN Min_Qty IS
   Flags      = 'A---L'
   Datatype   = 'NUMBER'
   Prompt     = 'Min Qty';

COLUMN Min_Duration IS
   Flags      = 'A---L'
   Datatype   = 'NUMBER'
   Prompt     = 'Min Duration';

COLUMN Template_Percentage_Offset IS
   Flags      = 'A---L'
   Datatype   = 'NUMBER'
   Prompt     = 'Template Percentage Offset';

COLUMN Price_Break_Base_Price IS
   Flags      = 'A---L'
   Datatype   = 'NUMBER'
   Prompt     = 'Price Break Base Price';

COLUMN Base_Currency IS
   Flags      = 'A---L'
   Datatype   = 'STRING(3)/UPPERCASE'
   Prompt     = 'Base Currency'
   Ref        = 'IsoCurrency';

COLUMN Price_Uom IS
   Flags      = 'A---L'
   Datatype   = 'STRING(10)/UPPERCASE'
   Prompt     = 'Price UoM'
   Ref        = 'IsoUnit';

COLUMN Price_Break_Template_Id IS
   Flags      = 'A---L'
   Datatype   = 'STRING(10)'
   Prompt     = 'Price Break Template ID'
   Ref        = 'PriceBreakTemplate';

COLUMN Base_Price_Status IS
   Flags      = 'A---L'
   Datatype   = 'STRING(50)'
   Prompt     = 'Sales Part Base Price Status';

COLUMN Template_Status IS
   Flags      = 'A---L'
   Datatype   = 'STRING(50)'
   Prompt     = 'Price Break Template Status';

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------


-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

VIEW Sales_Part_Base_Price_Lov IS
   Prompt = 'Sales Part Base Price'
   Catalog_No.Flags = 'K---L'
   Base_Price_Site.Flags = 'A---L'
   Base_Price.Flags = 'A---L'
   Base_Price_Incl_Tax.Flags = 'A---L'
   Sales_Price_Origin.Flags = 'A---L'
SELECT Sales_Part_API.Get_Sales_Price_Group_Id(base_price_site, catalog_no) sales_price_group_id,
       catalog_no                     catalog_no,
       base_price_site                base_price_site,
       base_price                     base_price,
       base_price_incl_tax            base_price_incl_tax,
       Sales_Price_Origin_API.Decode(sales_price_origin) sales_price_origin,
       rowkey                        objkey
FROM   sales_part_base_price_tab;

VIEW Sales_Part_Base_Price_Parts IS
   Prompt = 'Sales Part Base Price'
   Catalog_No.Flags = 'K---L'
   Catalog_Desc.Flags = 'A---L'
   Base_Price_Site.Flags = 'A---L'
   Base_Price.Flags = 'A---L'
   Base_Price_Incl_Tax.Flags = 'A---L'
   Sales_Price_Origin.Flags = 'A---L'
   Sales_Price_Origin_Db.Datatype = 'STRING(8)'
SELECT DISTINCT bp.catalog_no         catalog_no,
       Sales_Part_API.Get_Catalog_Desc(bp.base_price_site, bp.catalog_no)    catalog_desc,
       bp.base_price_site             base_price_site,
       bp.base_price                  base_price,
       base_price_incl_tax            base_price_incl_tax,
       Sales_Price_Origin_API.Decode(sales_price_origin) sales_price_origin,
       sales_price_origin             sales_price_origin_db
FROM   sales_part_base_price_tab bp
WHERE  bp.rowstate IN ('Planned', 'Active');

VIEW Sales_Part_Base_Price_Desc_Lov IS
   Prompt = 'Sales Part Base Price'
   Catalog_No.Flags = 'K---L'
   Catalog_Desc.Flags = 'AMIUL'
   Base_Price_Site.Flags = 'A---L'
   Base_Price.Flags = 'A---L'
   Base_Price_Incl_Tax.Flags = 'A---L'
   Sales_Price_Origin.Flags = 'A---L'
   Sales_Price_Origin_Db.Datatype = 'STRING(8)'
SELECT sales_price_group_id              sales_price_group_id,
       bp.catalog_no                     catalog_no,
       Sales_Part_API.Get_Catalog_Desc(bp.base_price_site, bp.catalog_no ) catalog_desc,
       bp.base_price_site                base_price_site,
       bp.base_price                     base_price,
       bp.base_price_incl_tax            base_price_incl_tax,
       Sales_Price_Origin_API.Decode(bp.sales_price_origin) sales_price_origin,
       bp.sales_price_origin             sales_price_origin_db,
       bp.sales_price_type               sales_price_type_db,
       bp.rowkey                        objkey
FROM   sales_part_base_price_tab bp, sales_part_tab sp
WHERE  bp.base_price_site = sp.contract
AND    bp.catalog_no = sp.catalog_no
AND    rowstate = 'Active';

VIEW Sales_Part_Base_Price_Part_Lov IS
   Prompt = 'Sales Part Base Price Parts'
   Catalog_No.Flags = 'K---L'
   Base_Price_Site.Flags = 'K---L'
SELECT catalog_no                      catalog_no,
       Sales_Part_API.Get_Catalog_Desc(base_price_site, catalog_no) catalog_desc,
       base_price_site                 base_price_site,
       sales_price_type                sales_price_type_db,
       rowkey                          objkey
FROM   sales_part_base_price_tab
WHERE  sales_price_type = 'SALES PRICES'
AND    rowstate = 'Active';

@SecurityCheck Site.UserAuthorized(base_price_site)
VIEW Sales_Part_Base_Price_Site_Lov IS
   Prompt = 'Sales Part Base Price'
   Catalog_No.Flags = 'K---L'
   Base_Price_Site.Flags = 'K---L'
   Base_Price_Site.Prompt = 'Site'
SELECT catalog_no                         catalog_no,
       base_price_site                    base_price_site,
       Site_API.Get_Description(base_price_site) description,
       rowkey                            objkey
FROM   sales_part_base_price_tab;

VIEW Price_Breaks_Per_Sales_Part IS
   Prompt = 'Sales Part Base Price'
   Base_Price_Site.Flags = 'K---L'
   Base_Price_Site.Ref = 'Site'
   Catalog_No.Flags = 'K---L'
   Sales_Price_Type.Flags = 'K---L'
   Sales_Price_Type_Db.Datatype = 'STRING(20)'
   Baseline_Price.Flags = 'A---L'
   Baseline_Price_Incl_Tax.Flags = 'A---L'
   Percentage_Offset.Flags = 'A---L'
   Amount_Offset.Flags = 'A---L'
   Base_Price.Flags = 'A---L'
   Base_Price_Incl_Tax.Flags = 'A---L'
SELECT base_price_site                                    base_price_site,
       catalog_no                                         catalog_no,
       Sales_Price_Type_API.Decode(spbp.sales_price_type) sales_price_type,
       spbp.sales_price_type                              sales_price_type_db,
       pbtl.min_qty                                       min_qty,
       DECODE(pbtl.min_duration, -1, NULL,
              pbtl.min_duration)                          min_duration,
       baseline_price                                     baseline_price,
       baseline_price_incl_tax                            baseline_price_incl_tax,
       spbp.percentage_offset                             percentage_offset,
       spbp.amount_offset                                 amount_offset,
       base_price                                         base_price,
       base_price_incl_tax                                base_price_incl_tax,
       pbtl.percentage_offset                             template_percentage_offset,
       base_price * (1 + pbtl.percentage_offset/100)      price_break_base_price,
       Company_Finance_API.Get_Currency_Code(Site_API.Get_Company(BASE_PRICE_SITE))
                                                          base_currency,
       pbt.price_unit_meas                                price_uom,
       pbt.template_id                                    price_break_template_id,
       SALES_PART_BASE_PRICE_API.Finite_State_Decode__(spbp.rowstate)        base_price_status,
       PRICE_BREAK_TEMPLATE_API.Finite_State_Decode__(pbt.rowstate) template_status,
       spbp.rowversion                                    objversion,
       spbp.rowid                                         objid,
       spbp.rowkey                                       objkey
FROM   SALES_PART_BASE_PRICE_TAB spbp,
       PRICE_BREAK_TEMPLATE_TAB pbt,
       PRICE_BREAK_TEMPLATE_LINE_TAB pbtl
WHERE  spbp.template_id = pbt.template_id
AND    spbp.sales_price_type = pbt.sales_price_type
AND    pbt.template_id  = pbtl.template_id;

