-----------------------------------------------------------------------------
--
--  Fragment:     SalesPartBasePricesList
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-- 2020-11-16  MaEelk  SC2020R1-11302, SalesPriceOrigin was handled as an enumeration.
-- 2019-02-25  MaEelk  SCUXXW4-8062, Added Add_New_Sales_Part___
-- 2019-01-05  MaEelk  SCUXXW4-1446, Created
-----------------------------------------------------------------------------

layer Core;

PROCEDURE Calculate_Prices___ (
   base_line_price_              IN OUT NUMBER,
   base_line_price_incl_tax_     IN OUT NUMBER,
   base_price_                   IN OUT NUMBER,
   base_price_incl_tax_          IN OUT NUMBER,
   percentage_offset_            IN     NUMBER,
   amount_offset_                IN     NUMBER,
   base_price_site_              IN     VARCHAR2,
   catalog_no_                   IN     VARCHAR2,
   use_price_incl_tax_db_        IN     BOOLEAN,
   direction_                    IN     VARCHAR2,
   ifs_curr_rounding_            IN     NUMBER)
IS 
   use_price_incl_tax_ VARCHAR2(5) := 'FALSE';
BEGIN
   IF (use_price_incl_tax_db_) THEN
      use_price_incl_tax_ := 'TRUE';
   END IF;
   Sales_Part_Base_Price_API.Calculate_Prices(base_line_price_,
                                             base_line_price_incl_tax_,
                                             base_price_,
                                             base_price_incl_tax_,
                                             percentage_offset_,
                                             amount_offset_,
                                             base_price_site_,
                                             catalog_no_,
                                             use_price_incl_tax_,
                                             direction_,
                                             ifs_curr_rounding_);
END Calculate_Prices___;

PROCEDURE Fetch_Base_Price_From_Costing___ (
   base_line_price_              IN OUT NUMBER,
   base_line_price_incl_tax_     IN OUT NUMBER,
   base_price_                   IN OUT NUMBER,
   base_price_incl_tax_          IN OUT NUMBER, 
   percentage_offset_            IN     NUMBER,
   amount_offset_                IN     NUMBER,
   base_price_site_              IN     VARCHAR2,
   catalog_no_                   IN     VARCHAR2,
   cost_set_                     IN     NUMBER,
   use_price_incl_tax_db_        IN     BOOLEAN,
   ifs_curr_rounding_            IN     NUMBER
)
IS
   use_price_incl_tax_ VARCHAR2(5) := 'FALSE';
BEGIN
   IF (use_price_incl_tax_db_) THEN
      use_price_incl_tax_ := 'TRUE';
   END IF;
      Sales_Part_Base_Price_API.Fetch_Base_Price_From_Costing (base_line_price_,
                                       base_line_price_incl_tax_,
                                       base_price_,
                                       base_price_incl_tax_, 
                                       percentage_offset_,
                                       amount_offset_,
                                       base_price_site_,
                                       catalog_no_,
                                       cost_set_,
                                       use_price_incl_tax_,
                                       ifs_curr_rounding_ );     
END Fetch_Base_Price_From_Costing___; 

FUNCTION Fetch_Default_Attributes___(
   base_price_site_            IN VARCHAR2,
   catalog_no_                 IN VARCHAR2,
   sales_price_type_db_        IN VARCHAR2,
   sales_price_origin_         IN VARCHAR2,
   use_price_incl_tax_db_      IN BOOLEAN,
   base_line_price_            IN NUMBER,
   base_line_price_incl_tax_   IN NUMBER,
   base_price_                 IN NUMBER,
   base_price_incl_tax_        IN NUMBER,
   list_price_                 IN NUMBER,
   list_price_incl_tax_        IN NUMBER,
   rental_list_price_          IN NUMBER,
   rental_list_price_incl_tax_ IN NUMBER,
   percentage_offset_          IN NUMBER,
   amount_offset_              IN NUMBER,
   cost_set_                   IN NUMBER,
   direction_                  IN VARCHAR2)  RETURN Default_Attributes_Structure_Rec
IS
   default_attributes_structure_rec_ Default_Attributes_Structure_Rec;
BEGIN
   default_attributes_structure_rec_.sales_price_origin := sales_price_origin_;
   default_attributes_structure_rec_.use_price_incl_tax_db := use_price_incl_tax_db_;
   default_attributes_structure_rec_.base_line_price := base_line_price_;
   default_attributes_structure_rec_.base_line_price_incl_tax := base_line_price_incl_tax_;
   default_attributes_structure_rec_.base_price := base_price_;
   default_attributes_structure_rec_.base_price_incl_tax := base_price_incl_tax_;
   default_attributes_structure_rec_.cost_set := cost_set_;
   IF (base_price_site_  IS NULL) THEN
      default_attributes_structure_rec_.company := NULL;
      default_attributes_structure_rec_.currency_code := NULL;
      default_attributes_structure_rec_.sales_price_origin := 'MANUAL';
   ELSE
      default_attributes_structure_rec_.company := Site_API.Get_Company(base_price_site_);
      default_attributes_structure_rec_.currency_code := Company_Finance_API.Get_Currency_Code(default_attributes_structure_rec_.company);
      IF (catalog_no_ IS NULL) THEN
         default_attributes_structure_rec_.sales_price_origin := 'MANUAL';
         default_attributes_structure_rec_.use_price_incl_tax_db := (Site_Discom_Info_API.Get_Use_Price_Incl_Tax_Ord_Db(base_price_site_) = 'TRUE');
      ELSE
         default_attributes_structure_rec_.tax_code := Sales_Part_API.Get_Tax_Code(base_price_site_, catalog_no_);
         IF (sales_price_type_db_ = 'RENTAL PRICES') THEN
            IF (default_attributes_structure_rec_.use_price_incl_tax_db) THEN
               default_attributes_structure_rec_.base_line_price_incl_tax := rental_list_price_incl_tax_;
            ELSE
               default_attributes_structure_rec_.base_line_price :=  rental_list_price_;
            END IF;
         ELSIF (sales_price_type_db_ = 'SALES PRICES') THEN
            IF (default_attributes_structure_rec_.use_price_incl_tax_db) THEN
               default_attributes_structure_rec_.base_line_price_incl_tax := list_price_incl_tax_; 
            ELSE
               default_attributes_structure_rec_.base_line_price :=  list_price_;
            END IF;
         END IF;
         
         Calculate_Prices___(default_attributes_structure_rec_.base_line_price,
                           default_attributes_structure_rec_.base_line_price_incl_tax,
                           default_attributes_structure_rec_.base_price,
                           default_attributes_structure_rec_.base_price_incl_tax,
                           percentage_offset_,
                           amount_offset_,
                           base_price_site_,
                           catalog_no_,
                           use_price_incl_tax_db_,
                           direction_,
                           NULL);
      END IF;

      IF (default_attributes_structure_rec_.sales_price_origin = 'COSTING') THEN
         Fetch_Base_Price_From_Costing___(default_attributes_structure_rec_.base_line_price,
                                          default_attributes_structure_rec_.base_line_price_incl_tax,
                                          default_attributes_structure_rec_.base_price,
                                          default_attributes_structure_rec_.base_price_incl_tax, 
                                          percentage_offset_,
                                          amount_offset_,
                                          base_price_site_,
                                          catalog_no_,
                                          default_attributes_structure_rec_.cost_set,
                                          default_attributes_structure_rec_.use_price_incl_tax_db,
                                          NULL );  
      END IF;
   END IF;
   
   RETURN default_attributes_structure_rec_;
END Fetch_Default_Attributes___;

FUNCTION Validate_Prices___(
   base_price_site_          IN VARCHAR2,
   catalog_no_               IN VARCHAR2,
   sales_price_origin_       IN VARCHAR2,
   use_price_incl_tax_db_    IN BOOLEAN,
   base_line_price_          IN NUMBER,
   base_line_price_incl_tax_ IN NUMBER,
   base_price_               IN NUMBER,
   base_price_incl_tax_      IN NUMBER,
   percentage_offset_        IN NUMBER,
   amount_offset_            IN NUMBER,
   cost_set_                 IN NUMBER,
   direction_                IN VARCHAR2 )  RETURN Default_Attributes_Structure_Rec
IS
   default_attributes_structure_rec_ Default_Attributes_Structure_Rec;   
BEGIN
   default_attributes_structure_rec_.sales_price_origin := sales_price_origin_;
   default_attributes_structure_rec_.use_price_incl_tax_db := use_price_incl_tax_db_;
   default_attributes_structure_rec_.base_line_price := base_line_price_;
   default_attributes_structure_rec_.base_line_price_incl_tax := base_line_price_incl_tax_;
   default_attributes_structure_rec_.base_price := base_price_;
   default_attributes_structure_rec_.base_price_incl_tax := base_price_incl_tax_;
   default_attributes_structure_rec_.cost_set := cost_set_;

   IF (percentage_offset_ < -100) THEN
      Error_SYS.Record_General(lu_name_, 'INVALIDPERCENTAGE: Negative percentage value cannot be equal to or greater than 100.');   
   END IF;
   
   Calculate_Prices___(default_attributes_structure_rec_.base_line_price,
                     default_attributes_structure_rec_.base_line_price_incl_tax,
                     default_attributes_structure_rec_.base_price,
                     default_attributes_structure_rec_.base_price_incl_tax,
                     percentage_offset_,
                     amount_offset_,
                     base_price_site_,
                     catalog_no_,
                     default_attributes_structure_rec_.use_price_incl_tax_db,
                     direction_,
                     NULL);
   
   IF (default_attributes_structure_rec_.sales_price_origin = 'COSTING') THEN
      default_attributes_structure_rec_.sales_price_origin := 'MANUAL';
      default_attributes_structure_rec_.cost_set := NULL;
   END IF;
   
   RETURN default_attributes_structure_rec_;
END Validate_Prices___;

FUNCTION Validate_Sales_Price_Origin___(
   base_price_site_            IN VARCHAR2,
   catalog_no_                 IN VARCHAR2,
   sales_price_type_db_        IN VARCHAR2,
   sales_price_origin_         IN VARCHAR2,
   use_price_incl_tax_db_      IN BOOLEAN,
   base_line_price_            IN NUMBER,
   base_line_price_incl_tax_   IN NUMBER,
   base_price_                 IN NUMBER,
   base_price_incl_tax_        IN NUMBER,
   list_price_                 IN NUMBER,
   list_price_incl_tax_        IN NUMBER,
   rental_list_price_          IN NUMBER,
   rental_list_price_incl_tax_ IN NUMBER,
   percentage_offset_          IN NUMBER,
   amount_offset_              IN NUMBER,
   cost_set_                   IN NUMBER,
   direction_                  IN VARCHAR2 )  RETURN Default_Attributes_Structure_Rec
IS
   default_attributes_structure_rec_ Default_Attributes_Structure_Rec;      
BEGIN
   default_attributes_structure_rec_.sales_price_origin := sales_price_origin_;
   default_attributes_structure_rec_.use_price_incl_tax_db := use_price_incl_tax_db_;
   default_attributes_structure_rec_.base_line_price := base_line_price_;
   default_attributes_structure_rec_.base_line_price_incl_tax := base_line_price_incl_tax_;
   default_attributes_structure_rec_.base_price := base_price_;
   default_attributes_structure_rec_.base_price_incl_tax := base_price_incl_tax_;
   default_attributes_structure_rec_.cost_set := cost_set_;

   IF (default_attributes_structure_rec_.sales_price_origin = 'COSTING') THEN
      IF (default_attributes_structure_rec_.cost_set IS NULL) THEN
         default_attributes_structure_rec_.cost_set := 1; 
      END IF;

      Fetch_Base_Price_From_Costing___(default_attributes_structure_rec_.base_line_price,
                              default_attributes_structure_rec_.base_line_price_incl_tax,
                              default_attributes_structure_rec_.base_price,
                              default_attributes_structure_rec_.base_price_incl_tax, 
                              percentage_offset_,
                              amount_offset_,
                              base_price_site_,
                              catalog_no_,
                              default_attributes_structure_rec_.cost_set,
                              default_attributes_structure_rec_.use_price_incl_tax_db,
                              NULL );  
   ELSE
      default_attributes_structure_rec_.cost_set := NULL;
      default_attributes_structure_rec_ := Fetch_Default_Attributes___(base_price_site_,
                                                                     catalog_no_,
                                                                     sales_price_type_db_,
                                                                     default_attributes_structure_rec_.sales_price_origin,
                                                                     default_attributes_structure_rec_.use_price_incl_tax_db,
                                                                     default_attributes_structure_rec_.base_line_price,
                                                                     default_attributes_structure_rec_.base_line_price_incl_tax,
                                                                     default_attributes_structure_rec_.base_price,
                                                                     default_attributes_structure_rec_.base_price_incl_tax,
                                                                     list_price_,
                                                                     list_price_incl_tax_,
                                                                     rental_list_price_,
                                                                     rental_list_price_incl_tax_,
                                                                     percentage_offset_,
                                                                     amount_offset_,
                                                                     default_attributes_structure_rec_.cost_set,
                                                                     direction_);      
   END IF;
   RETURN default_attributes_structure_rec_;
END Validate_Sales_Price_Origin___;

FUNCTION Validate_Cost_Set___(
   base_price_site_          IN VARCHAR2,
   catalog_no_               IN VARCHAR2,
   sales_price_origin_       IN VARCHAR2,
   use_price_incl_tax_db_    IN BOOLEAN,
   base_line_price_          IN NUMBER,
   base_line_price_incl_tax_ IN NUMBER,
   base_price_               IN NUMBER,
   base_price_incl_tax_      IN NUMBER,
   percentage_offset_        IN NUMBER,
   amount_offset_            IN NUMBER,
   cost_set_                 IN NUMBER )  RETURN Default_Attributes_Structure_Rec
IS
   default_attributes_structure_rec_ Default_Attributes_Structure_Rec;      
   
BEGIN
   default_attributes_structure_rec_.sales_price_origin := sales_price_origin_;
   default_attributes_structure_rec_.use_price_incl_tax_db := use_price_incl_tax_db_;
   default_attributes_structure_rec_.base_line_price := base_line_price_;
   default_attributes_structure_rec_.base_line_price_incl_tax := base_line_price_incl_tax_;
   default_attributes_structure_rec_.base_price := base_price_;
   default_attributes_structure_rec_.base_price_incl_tax := base_price_incl_tax_;
   default_attributes_structure_rec_.cost_set := cost_set_;
   IF (sales_price_origin_ = 'COSTING') THEN
      Fetch_Base_Price_From_Costing___(default_attributes_structure_rec_.base_line_price,
                                       default_attributes_structure_rec_.base_line_price_incl_tax,
                                       default_attributes_structure_rec_.base_price,
                                       default_attributes_structure_rec_.base_price_incl_tax, 
                                       percentage_offset_,
                                       amount_offset_,
                                       base_price_site_,
                                       catalog_no_,
                                       default_attributes_structure_rec_.cost_set,
                                       default_attributes_structure_rec_.use_price_incl_tax_db,
                                       NULL );
   END IF;
   RETURN default_attributes_structure_rec_;
END Validate_Cost_Set___;

FUNCTION Add_New_Sales_Part___ (
   run_background_      IN BOOLEAN,
   base_price_site_     IN VARCHAR2,
   catalog_no_          IN VARCHAR2,
   sales_price_group_   IN VARCHAR2,
   origin_from_costing_ IN BOOLEAN,
   sales_price_type_db_ IN VARCHAR2,
   costset_             IN NUMBER,
   percentage_offset_   IN NUMBER,
   amount_offset_       IN NUMBER ) RETURN NUMBER
IS
   number_of_new_lines_  NUMBER;
   sales_part_origin_    VARCHAR2(8);
   costset_tmp_          NUMBER;
BEGIN
   IF (origin_from_costing_) THEN
      sales_part_origin_ := 'Costing'; 
      IF (costset_ IS NOT NULL) THEN
         costset_tmp_ := costset_;   
      END IF;
   END IF;
   
   IF NOT (run_background_) THEN
      Customer_Order_Pricing_API.Add_New_Sales_Parts(number_of_new_lines_, 
                                                     base_price_site_, 
                                                     catalog_no_, 
                                                     sales_price_group_, 
                                                     sales_part_origin_, 
                                                     sales_price_type_db_, 
                                                     costset_tmp_, 
                                                     percentage_offset_, 
                                                     amount_offset_);
      
   ELSE
      Customer_Order_Pricing_API.Add_New_Sales_Parts_Batch__(base_price_site_, 
                                                             catalog_no_, 
                                                             sales_price_group_, 
                                                             sales_part_origin_, 
                                                             sales_price_type_db_, 
                                                             costset_tmp_, 
                                                             percentage_offset_, 
                                                             amount_offset_);
   END IF;
   RETURN number_of_new_lines_;
END Add_New_Sales_Part___;
