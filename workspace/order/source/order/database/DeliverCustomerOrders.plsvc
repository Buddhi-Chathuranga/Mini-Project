-----------------------------------------------------------------------------
--
--  Logical unit: DeliverCustomerOrders
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date        Sign    History
--  ----------  ------  ---------------------------------------------------------
--  2018-05-04  IzShlk  SCUXXW4-1541, Introduced Start_Deliver___() method to deliver selected order lines.
-----------------------------------------------------------------------------

layer Core;

PROCEDURE Start_Deliver___ (
   full_selection_ IN VARCHAR2 ) 
IS
   selection1_                VARCHAR2(4000) := CONCAT(full_selection_, ';');
   selection2_                VARCHAR2(4000) := CONCAT(full_selection_, ';');
   current_selection_         VARCHAR2(200);
   current_order_no_          customer_order_tab.order_no%TYPE;
   max_count_                 NUMBER := 0;
   temp_count_                NUMBER := 0; 
   total_row_count_           NUMBER := 0;
   attr_                      VARCHAR2(4000);   
BEGIN
   Client_SYS.Clear_Attr(attr_);
   
   WHILE (INSTR(selection1_, ';') > 0) LOOP
   total_row_count_ := total_row_count_ + 1;
   selection1_ := substr(selection1_, INSTR(selection1_, ';')+1);      
   END LOOP;

   WHILE (INSTR(selection2_, ';') > 0) LOOP
      current_selection_  := substr(selection2_, 0, INSTR(selection2_, ';'));
      current_order_no_   := Client_SYS.Get_Key_Reference_Value(current_selection_, 'ORDER_NO');

      Customer_Order_Initial_Check___(current_order_no_);

      temp_count_ := temp_count_ + 1;
      max_count_ := max_count_ + 1;
      Client_SYS.Add_To_Attr('START_EVENT', '90', attr_);
      Client_SYS.Add_To_Attr('ORDER_NO', current_order_no_, attr_);
      Client_SYS.Add_To_Attr('END', '', attr_); 
      
      IF ((max_count_ = 750) OR (temp_count_ = total_row_count_)) THEN
         Customer_Order_Flow_API.Start_Deliver__(attr_); 
         max_count_ := 0;
      END IF;
      selection2_ := substr(selection2_, INSTR(selection2_, ';')+1);      
   END LOOP;
END Start_Deliver___;

FUNCTION Check_All_Lines_Connected___(
   selection_ IN VARCHAR2 )  RETURN License_Info_Rec
IS
   selected_records_     VARCHAR2(32000) := CONCAT(selection_, ';');
   current_selection_    VARCHAR2(32000); 
   order_no_             VARCHAR2 (200);
   license_connected_    NUMBER ;
   license_info_rec_     License_Info_Rec := NULL;

BEGIN 

   WHILE (INSTR(selected_records_, ';') > 0) LOOP
      license_connected_ :=0;
      current_selection_  := substr(selected_records_, 0, INSTR(selected_records_, ';'));
      order_no_           := Client_SYS.Get_Key_Reference_Value(current_selection_, 'ORDER_NO');

      Customer_Order_Flow_API.Check_All_License_Connected(license_connected_,order_no_);

      IF (license_connected_ = 1)THEN
         license_info_rec_.license_connected := 1;
      ELSIF (license_connected_ = 3) THEN
         license_info_rec_.export_controlled := 3;
      END IF;
      selected_records_ := substr(selected_records_, INSTR(selected_records_, ';')+1);   
   END LOOP;
RETURN license_info_rec_;       
END Check_All_Lines_Connected___;
