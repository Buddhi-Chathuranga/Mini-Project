-----------------------------------------------------------------------------
--
--  Logical unit: CustomerOrderAddress
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  211222  KaPblk  SC21R2-6878, Added RLS annotaion for the View Custord_Address.
--  211116  Pumjlk  SC21R2-3234, Add RLS annotaion for Customer_Order_Address_2
--  180515  AsZelk  Bug 141407, Modified Custord_Address view in order to increase performance by reducing crm access calls.
--  170224  NiAslk  VALUT-2225, Added CRM Access tag to Cust_Ord_Address_2_Uiv.
--  160622  SudJlk  STRSC-2699, Added Cust_Ord_Address_2_Uiv to be used in the client.
--  160516  Chgulk  STRLOC-80, Added new Address fields.
--  151112  KiSalk  Bug 125898, Added condition to compare customer_noof customer_order_tab and custord_addres in Customer_Order_Address_2 in order to reduce cost and cardinality of statement.
--  150806  ChBnlk  Bug 120336, Added user allowed site filteration to the view Customer_Order_Address_2. 
-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

COLUMN Customer_No IS
   Flags      = 'AMI--'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Customer No';

COLUMN Bill_Addr_No IS
   Flags      = 'A-IUL'
   Datatype   = 'STRING(50)'
   Prompt     = 'Bill Addr No';

COLUMN Ship_Addr_No IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(50)'
   Prompt     = 'Ship Addr No';

COLUMN Addr_Flag IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'GenYesNo'
   Prompt     = 'Addr Flag';

COLUMN Addr_Flag_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Addr Flag';

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------


-------------------- PRIVATE VIEW DEFINITIONS -------------------------------
-- Customer_info_address_public, customer_info_custcategory_pub views replaced by customer_info_address_base_pub and customer_info_custcategory.
@DbViewRowLevelSecurity NotRequired
@RmcomAccessCheck CustomerInfo(ca.customer_id)
VIEW Custord_Address IS
   Prompt = 'Customer Address'
SELECT ca.customer_id                  customer_no,
       nvl(ca.name, c.name)            name,
       ca.address_id                   addr_no,
       ca.address                      full_address,
       SUBSTR(substr(ca.address,
          1, instr(ca.address||chr(13)||chr(10),chr(10),1,1)-2),1) line1,
       SUBSTR(substr(ca.address,
          instr(ca.address||chr(13)||chr(10),chr(10),1,1)+1,instr(ca.address||chr(13)||chr(10),chr(10),1,2)-instr(ca.address,chr(10),1,1)-2),1) line2,
       SUBSTR(substr(ca.address,
          instr(ca.address||chr(13)||chr(10),chr(10),1,2)+1,instr(ca.address||chr(13)||chr(10),chr(10),1,3)-instr(ca.address,chr(10),1,2)-2),1) line3,
       SUBSTR(substr(ca.address,
          instr(ca.address||chr(13)||chr(10),chr(10),1,3)+1,instr(ca.address||chr(13)||chr(10),chr(10),1,4)-instr(ca.address,chr(10),1,3)-2),1) line4,
       SUBSTR(substr(ca.address,
          instr(ca.address||chr(13)||chr(10),chr(10),1,4)+1,instr(ca.address||chr(13)||chr(10),chr(10),1,5)-instr(ca.address,chr(10),1,4)-2),1) line5,
       SUBSTR(substr(ca.address,
          instr(ca.address||chr(13)||chr(10),chr(10),1,5)+1,instr(ca.address||chr(13)||chr(10),chr(10),1,6)-instr(ca.address,chr(10),1,5)-2),1) line6,
       SUBSTR(Iso_Country_API.Decode(ca.country_db),1,50) country,
       ca.country_db                   country_db,
       ca.ean_location                 ean_location,
       ca.valid_from                   valid_from,
       ca.valid_to                     valid_to,
       ca.address1                     address1,
       ca.address2                     address2,
       ca.address3                     address3,
       ca.address4                     address4,
       ca.address5                     address5,
       ca.address6                     address6,
       ca.zip_code                     zip_code,
       ca.city                         city,
       ca.state                        state,
       ca.county                       county,
       ca.in_city                      in_city,
       ca.objkey                       objkey
FROM   customer_info_address_base_pub ca, customer_info_custcategory c
WHERE  ca.customer_id = c.customer_id;


@DbViewRowLevelSecurity CustomImplemented
VIEW Customer_Order_Address_2 IS
   Prompt = 'Customer Order Address'
   Order_No.Ref = 'CustomerOrder'
   Addr_2.Flags = 'A-IU-'
   Addr_3.Flags = 'A-IU-'
   Addr_4.Flags = 'A-IU-'
   Addr_5.Flags = 'A-IU-'
   Addr_6.Flags = 'A-IU-'
   Country_Code.Flags = 'AMIU-'
SELECT co.order_no                    order_no,
       co.customer_no                 customer_no,
       co.bill_addr_no                bill_addr_no,
       co.ship_addr_no                ship_addr_no,
       Gen_Yes_No_API.Decode(co.addr_flag) addr_flag,
       co.addr_flag                   addr_flag_db,
       decode(co.addr_flag, 'Y', coa.addr_1, a.name) addr_1,
       decode(co.addr_flag, 'Y', coa.addr_2, SUBSTR(a.line1,1,35)) addr_2,
       decode(co.addr_flag, 'Y', coa.addr_3, SUBSTR(a.line2,1,35)) addr_3,
       decode(co.addr_flag, 'Y', coa.addr_4, SUBSTR(a.line3,1,35)) addr_4,
       decode(co.addr_flag, 'Y', coa.addr_5, SUBSTR(a.line4,1,35)) addr_5,
       decode(co.addr_flag, 'Y', coa.addr_6, SUBSTR(a.line5,1,35)) addr_6,
       decode(co.addr_flag, 'Y', coa.country_code, a.country_db) country_code,
       decode(co.addr_flag, 'Y', coa.address1, a.address1) address1,
       decode(co.addr_flag, 'Y', coa.address2, a.address2) address2,
       decode(co.addr_flag, 'Y', coa.address3, a.address3) address3,
       decode(co.addr_flag, 'Y', coa.address4, a.address4) address4,
       decode(co.addr_flag, 'Y', coa.address5, a.address5) address5,
       decode(co.addr_flag, 'Y', coa.address6, a.address6) address6,
       decode(co.addr_flag, 'Y', coa.zip_code, a.zip_code) zip_code,
       decode(co.addr_flag, 'Y', coa.city, a.city) city,
       decode(co.addr_flag, 'Y', coa.state, a.state) state,
       decode(co.addr_flag, 'Y', coa.county, a.county) county,
       decode(co.addr_flag, 'Y', coa.in_city, a.in_city) in_city,
       coa.company                    company,
       decode(co.addr_flag, 'Y', coa.vat_free_vat_code,Customer_Tax_Free_Tax_Code_API.Get_Tax_Free_Tax_Code(co.customer_no, co.ship_addr_no, Site_API.Get_Company(co.contract), co.supply_country, '*')) vat_free_vat_code,
       coa.rowid                     objid,
       ltrim(lpad(to_char(coa.rowversion,'YYYYMMDDHH24MISS'),2000))                    objversion,
       coa.rowkey                    objkey
FROM   CUSTORD_ADDRESS a, cust_ord_customer_address_tab ca, customer_order_tab co, customer_order_address_tab coa
WHERE  a.customer_no = ca.customer_no
AND    a.customer_no = co.customer_no
AND    a.addr_no = ca.addr_no
AND    co.order_no = coa.order_no(+)
AND    ca.addr_no = co.ship_addr_no
AND    ca.customer_no = co.customer_no;

@RmcomAccessCheck CustomerOrder(co.order_no)
@SecurityCheck Site.UserAuthorized(co.contract)
VIEW Cust_Ord_Address_2_Uiv IS
   Prompt = 'Customer Order Address'
   Order_No.Ref = 'CustomerOrder'
   Addr_2.Flags = 'A-IU-'
   Addr_3.Flags = 'A-IU-'
   Addr_4.Flags = 'A-IU-'
   Addr_5.Flags = 'A-IU-'
   Addr_6.Flags = 'A-IU-'
   Country_Code.Flags = 'AMIU-'
SELECT co.order_no                    order_no,
       co.customer_no                 customer_no,
       co.bill_addr_no                bill_addr_no,
       co.ship_addr_no                ship_addr_no,
       Gen_Yes_No_API.Decode(co.addr_flag) addr_flag,
       co.addr_flag                   addr_flag_db,
       decode(co.addr_flag, 'Y', coa.addr_1, a.name) addr_1,
       decode(co.addr_flag, 'Y', coa.addr_2, SUBSTR(a.line1,1,35)) addr_2,
       decode(co.addr_flag, 'Y', coa.addr_3, SUBSTR(a.line2,1,35)) addr_3,
       decode(co.addr_flag, 'Y', coa.addr_4, SUBSTR(a.line3,1,35)) addr_4,
       decode(co.addr_flag, 'Y', coa.addr_5, SUBSTR(a.line4,1,35)) addr_5,
       decode(co.addr_flag, 'Y', coa.addr_6, SUBSTR(a.line5,1,35)) addr_6,
       decode(co.addr_flag, 'Y', coa.country_code, a.country_db) country_code,
       decode(co.addr_flag, 'Y', coa.address1, a.address1) address1,
       decode(co.addr_flag, 'Y', coa.address2, a.address2) address2,
       decode(co.addr_flag, 'Y', coa.address3, a.address3) address3,
       decode(co.addr_flag, 'Y', coa.address4, a.address4) address4,
       decode(co.addr_flag, 'Y', coa.address5, a.address5) address5,
       decode(co.addr_flag, 'Y', coa.address6, a.address6) address6,
       decode(co.addr_flag, 'Y', coa.zip_code, a.zip_code) zip_code,
       decode(co.addr_flag, 'Y', coa.city, a.city) city,
       decode(co.addr_flag, 'Y', coa.state, a.state) state,
       decode(co.addr_flag, 'Y', coa.county, a.county) county,
       decode(co.addr_flag, 'Y', coa.in_city, a.in_city) in_city,
       coa.company                    company,
       decode(co.addr_flag, 'Y', coa.vat_free_vat_code,Customer_Tax_Free_Tax_Code_API.Get_Tax_Free_Tax_Code(co.customer_no, co.ship_addr_no, Site_API.Get_Company(co.contract), co.supply_country, '*')) vat_free_vat_code,
       coa.rowid                     objid,
       ltrim(lpad(to_char(coa.rowversion,'YYYYMMDDHH24MISS'),2000))                    objversion,
       coa.rowkey                    objkey
FROM   CUSTORD_ADDRESS a, cust_ord_customer_address_tab ca, customer_order_tab co, customer_order_address_tab coa
WHERE  a.customer_no = ca.customer_no
AND    a.customer_no = co.customer_no
AND    a.addr_no = ca.addr_no
AND    co.order_no = coa.order_no(+)
AND    ca.addr_no = co.ship_addr_no
AND    ca.customer_no = co.customer_no;

