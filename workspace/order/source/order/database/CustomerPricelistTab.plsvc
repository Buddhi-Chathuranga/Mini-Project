-----------------------------------------------------------------------------
--
--  Fragment:     CustomerPricelistTab
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date       Sign    History
--  ------     ------  ---------------------------------------------------------
-- 2020-11-23  MaEelk  SCPR2020-9295, CRUD_Default___ was overridden to fetch preferred_price_list.
-- 2018-10-10  SeJalk  SCUXXW4-806,
-----------------------------------------------------------------------------

layer Core;

FUNCTION Get_Description___ (
  sales_price_group_id_ IN VARCHAR2) RETURN VARCHAR2
IS
BEGIN
   RETURN Sales_Price_Group_API.Get_Description(sales_price_group_id_);
END Get_Description___;

FUNCTION Get_Result_Key_List___(
   full_selection_ IN VARCHAR2,
   part_based_ IN BOOLEAN) RETURN VARCHAR2
IS
   selection_         VARCHAR2(32000) := CONCAT(full_selection_, ';');
   current_selection_ VARCHAR2(32000);
   report_attr_       VARCHAR2(32000);
   param_attr_        VARCHAR2(32000);
   result_key_        NUMBER;
   result_key_list_   VARCHAR2(2000);
   customer_id_       customer_pricelist_tab.customer_no%TYPE;
   price_group_id_    customer_pricelist_tab.sales_price_group_id%TYPE;
   currency_code_     customer_pricelist_tab.currency_code%TYPE;
   price_list_no_      customer_pricelist_tab.price_list_no%TYPE;
BEGIN
   Client_SYS.Add_To_Attr('REPORT_ID', 'SALES_PRICE_LIST_REP', report_attr_);
   WHILE (INSTR(selection_, ';') > 0) LOOP  
      current_selection_ := SUBSTR(selection_, 0, INSTR(selection_, ';'));
      Client_SYS.Clear_Attr(param_attr_);
      customer_id_ :=Client_SYS.Get_Key_Reference_Value(current_selection_, 'CUSTOMER_ID');
      price_group_id_ :=Client_SYS.Get_Key_Reference_Value(current_selection_, 'SALES_PRICE_GROUP_ID');
      currency_code_ :=Client_SYS.Get_Key_Reference_Value(current_selection_, 'CURRENCY_CODE');
      
      Customer_Pricelist_Initial_Check___(customer_id_, price_group_id_, currency_code_);
      price_list_no_ := Customer_Pricelist_API.Get_Price_List_No(customer_id_, price_group_id_, currency_code_);
      
      Client_SYS.Add_To_Attr('PRICE_LIST_NO', price_list_no_, param_attr_);
      Client_SYS.Add_To_Attr('SALES_PRICE_GROUP_ID', '%', param_attr_);
      Client_SYS.Add_To_Attr('CATALOG_NO', '%', param_attr_);
      IF part_based_ THEN
         Client_SYS.Add_To_Attr('PRINT_PRICES_INCL_TAX_DB', 'Y', param_attr_);
      ELSE
         Client_SYS.Add_To_Attr('PRINT_PRICES_INCL_TAX_DB', 'N', param_attr_);
      END IF;
      
      Client_SYS.Add_To_Attr('LANGUAGE_CODE', Fnd_Session_API.Get_Language, param_attr_);
      result_key_ := Report_Format_API.Create_New_Report(report_attr_, param_attr_, Fnd_Session_API.Get_Fnd_User);
      IF (result_key_list_ IS NULL) THEN
         result_key_list_  := result_key_;
      ELSE
         result_key_list_  := result_key_list_ || ',' || result_key_;
      END IF; 
      selection_ := SUBSTR(selection_, INSTR(selection_, ';') + 1);     
   END LOOP;
   RETURN result_key_list_;
END Get_Result_Key_List___;


FUNCTION Is_Price_Group_Type_Part_Based___(
   full_selection_ IN VARCHAR2 ) RETURN BOOLEAN
IS
   selection_         VARCHAR2(32000) := CONCAT(full_selection_, ';');
   current_selection_ VARCHAR2(32000);
   report_attr_       VARCHAR2(32000);
   param_attr_        VARCHAR2(32000);
   price_group_type_  sales_price_group_tab.sales_price_group_type%TYPE;
   price_group_id_    customer_pricelist_tab.sales_price_group_id%TYPE;
  
BEGIN
   WHILE (INSTR(selection_, ';') > 0) LOOP  
      current_selection_ := SUBSTR(selection_, 0, INSTR(selection_, ';'));
      Client_SYS.Clear_Attr(param_attr_);
      price_group_id_ :=Client_SYS.Get_Key_Reference_Value(current_selection_, 'SALES_PRICE_GROUP_ID');
      price_group_type_ := Sales_Price_Group_API.Get_Sales_Price_Group_Type_Db(price_group_id_);
      IF price_group_type_ = 'PART BASED' THEN
         RETURN TRUE;
      END IF;
      selection_ := SUBSTR(selection_, INSTR(selection_, ';') + 1);     
   END LOOP;
   RETURN FALSE;
END Is_Price_Group_Type_Part_Based___;


PROCEDURE Update_Preferred_Price_List___ (
   key_                IN Customer_Pricelist_Key,
   preferd_prece_list_ IN BOOLEAN )  
IS
   attr_ VARCHAR2(2000);
   info_ VARCHAR2(2000);
   objid_      VARCHAR2(2000);
   objversion_ VARCHAR2(2000);
BEGIN
   Client_SYS.Clear_Attr(attr_);
   IF preferd_prece_list_ THEN
      Client_SYS.Add_To_Attr('PREFERRED_PRICE_LIST_DB', 'PREFERRED', attr_);
   ELSE
      Client_SYS.Add_To_Attr('PREFERRED_PRICE_LIST_DB', 'NOTPREFERRED', attr_);
   END IF;
   Get_Objid_Objversion___(objid_, objversion_, key_);
   CUSTOMER_PRICELIST_API.Modify__(info_, objid_, objversion_, attr_, 'DO'); 
  
END Update_Preferred_Price_List___;

@Override
PROCEDURE CRUD_Default___ (
   rec_  IN OUT Customer_Pricelist_Rec )
IS
BEGIN
   super(rec_);
   rec_.preferred_price_list := 'NOTPREFERRED';
END CRUD_Default___;