-----------------------------------------------------------------------------
--
--  Fragment:     ChangeValidToDateDialog
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date       Sign    History
--  ------     ------  ---------------------------------------------------------
-- 2018-09-04  IzShlk  SCUXXW4-8777, Created
-----------------------------------------------------------------------------

layer Core;

PROCEDURE Modify_Valid_To_Date___ (
   full_selection_ IN VARCHAR2,
   valid_to_date_  IN DATE,
   source_         IN VARCHAR2 ) 
IS
   
BEGIN
   IF source_ = 'Agreement_Assortment' THEN
      Modify_Valid_To_Date_Assortment___(full_selection_, valid_to_date_);
   ELSIF source_ = 'Agreement_Sales_Part_Deal' THEN
      Modify_Valid_To_Date_Sales_Part___(full_selection_, valid_to_date_);
   ELSIF source_ = 'Agreement_Sales_Group' THEN  
      Modify_Valid_To_Date_Sales_Group___(full_selection_, valid_to_date_); 
   ELSIF source_ = 'SALES_PRICE_LIST_ASSORT' THEN  
      Modify_Sales_Price_List_Assort___(full_selection_, valid_to_date_);
   ELSIF source_ = 'SALES_PRICE_LIST_UNIT' THEN  
      Modify_Sales_Price_List_Unit___(full_selection_, valid_to_date_);
   ELSIF source_ = 'SALES_PRICE_LIST_PART' THEN  
      Modify_Sales_Price_List_Part___(full_selection_, valid_to_date_);   
   END IF;
END Modify_Valid_To_Date___;

PROCEDURE Modify_Valid_To_Date_Assortment___ (
   full_selection_ IN VARCHAR2,
   valid_to_date_  IN DATE ) 
IS
   selection_           VARCHAR2(32000) := CONCAT(full_selection_, ';');
   current_selection_   VARCHAR2(32000);
   agreement_id_        agreement_assortment_deal_tab.agreement_id%TYPE;
   assortment_id_       agreement_assortment_deal_tab.assortment_id%TYPE;
   assortment_node_id_  agreement_assortment_deal_tab.assortment_node_id%TYPE;
   min_quantity_        agreement_assortment_deal_tab.min_quantity%TYPE;
   valid_from_          agreement_assortment_deal_tab.valid_from%TYPE;
   price_unit_meas_     agreement_assortment_deal_tab.price_unit_meas%TYPE;
BEGIN
   WHILE (INSTR(selection_, ';') > 0) LOOP
         current_selection_  := substr(selection_, 0, INSTR(selection_, ';'));
         agreement_id_       := Client_SYS.Get_Key_Reference_Value(current_selection_, 'AGREEMENT_ID');
         assortment_id_      := Client_SYS.Get_Key_Reference_Value(current_selection_, 'ASSORTMENT_ID');
         assortment_node_id_ := Client_SYS.Get_Key_Reference_Value(current_selection_, 'ASSORTMENT_NODE_ID');
         min_quantity_       := Client_SYS.Get_Key_Reference_Value(current_selection_, 'MIN_QUANTITY');
         price_unit_meas_    := Client_SYS.Get_Key_Reference_Value(current_selection_, 'PRICE_UNIT_MEAS');
         valid_from_         := TO_DATE(Client_SYS.Get_Key_Reference_Value(current_selection_, 'VALID_FROM'), 'YYYY-MM-DD-HH24.MI.SS');
         
         Agreement_Assortment_Deal_Initial_Check___(agreement_id_, assortment_id_, assortment_node_id_, min_quantity_, valid_from_, price_unit_meas_);
         Agreement_Assortment_Deal_API.Modify_Valid_To_Date(agreement_id_, assortment_id_, assortment_node_id_, min_quantity_, valid_from_, price_unit_meas_, valid_to_date_);
         selection_          := substr(selection_, INSTR(selection_, ';')+1); 
   END LOOP;  
END Modify_Valid_To_Date_Assortment___;

PROCEDURE Modify_Valid_To_Date_Sales_Group___ (
   full_selection_ IN VARCHAR2,
   valid_to_date_  IN DATE ) 
IS
   selection_           VARCHAR2(32000) := CONCAT(full_selection_, ';');
   current_selection_   VARCHAR2(32000);
   agreement_id_        agreement_sales_group_deal_tab.agreement_id%TYPE;
   catalog_group_       agreement_sales_group_deal_tab.catalog_group%TYPE;
   min_quantity_        agreement_sales_group_deal_tab.min_quantity%TYPE;
   valid_from_          agreement_sales_group_deal_tab.valid_from_date%TYPE;
BEGIN
   WHILE (INSTR(selection_, ';') > 0) LOOP
      current_selection_  := substr(selection_, 0, INSTR(selection_, ';'));
      agreement_id_       := Client_SYS.Get_Key_Reference_Value(current_selection_, 'AGREEMENT_ID');
      catalog_group_      := Client_SYS.Get_Key_Reference_Value(current_selection_, 'CATALOG_GROUP');
      min_quantity_       := Client_SYS.Get_Key_Reference_Value(current_selection_, 'MIN_QUANTITY');
      valid_from_         := TO_DATE(Client_SYS.Get_Key_Reference_Value(current_selection_, 'VALID_FROM_DATE'), 'YYYY-MM-DD-HH24.MI.SS');

      Agreement_Sales_Group_Deal_Initial_Check___(agreement_id_, catalog_group_, valid_from_, min_quantity_);
      Agreement_Sales_Group_Deal_API.Modify_Valid_To_Date(agreement_id_, catalog_group_, min_quantity_, valid_from_, valid_to_date_);
      selection_          := substr(selection_, INSTR(selection_, ';')+1); 
   END LOOP;  
END Modify_Valid_To_Date_Sales_Group___;

PROCEDURE Modify_Sales_Price_List_Assort___ (
   full_selection_ IN VARCHAR2,
   valid_to_date_  IN DATE ) 
IS
   selection_               VARCHAR2(32000) := CONCAT(full_selection_, ';');
   current_selection_       VARCHAR2(32000);
   price_list_no_           sales_price_list_assort_tab.price_list_no%TYPE;
   min_quantity_            sales_price_list_assort_tab.min_quantity%TYPE;
   valid_from_date_         sales_price_list_assort_tab.valid_from_date%TYPE;
   assortment_id_           sales_price_list_assort_tab.assortment_id%TYPE;   
   assortment_node_id_      sales_price_list_assort_tab.assortment_node_id%TYPE;
   price_unit_meas_         sales_price_list_assort_tab.price_unit_meas%TYPE;
BEGIN
   WHILE (INSTR(selection_, ';') > 0) LOOP
      current_selection_    := substr(selection_, 0, INSTR(selection_, ';'));
      
      price_list_no_        := Client_SYS.Get_Key_Reference_Value(current_selection_, 'PRICE_LIST_NO');
      min_quantity_         := Client_SYS.Get_Key_Reference_Value(current_selection_, 'MIN_QUANTITY');
      valid_from_date_      := TO_DATE(Client_SYS.Get_Key_Reference_Value(current_selection_, 'VALID_FROM_DATE'), 'YYYY-MM-DD-HH24.MI.SS');      
      assortment_id_        := Client_SYS.Get_Key_Reference_Value(current_selection_, 'ASSORTMENT_ID');
      assortment_node_id_   := Client_SYS.Get_Key_Reference_Value(current_selection_, 'ASSORTMENT_NODE_ID');
      price_unit_meas_      := Client_SYS.Get_Key_Reference_Value(current_selection_, 'PRICE_UNIT_MEAS');
      
      Sales_Price_List_Assort_Initial_Check___(price_list_no_, min_quantity_, valid_from_date_, assortment_id_, assortment_node_id_, price_unit_meas_);
      Sales_Price_List_Assort_API.Modify_Valid_To_Date(price_list_no_, min_quantity_, valid_from_date_, 
                                                      assortment_id_, assortment_node_id_, price_unit_meas_, valid_to_date_);
                                                      
      selection_          := substr(selection_, INSTR(selection_, ';')+1); 
   END LOOP;  
END Modify_Sales_Price_List_Assort___;

PROCEDURE Modify_Valid_To_Date_Sales_Part___ (
   full_selection_ IN VARCHAR2,
   valid_to_date_  IN DATE ) 
IS
   selection_           VARCHAR2(32000) := CONCAT(full_selection_, ';');
   current_selection_   VARCHAR2(32000);
   agreement_id_        agreement_sales_part_deal_tab.agreement_id%TYPE;
   min_quantity_        agreement_sales_part_deal_tab.min_quantity%TYPE;
   valid_from_          agreement_sales_part_deal_tab.valid_from_date%TYPE;
   catalog_no_          agreement_sales_part_deal_tab.catalog_no%TYPE;
BEGIN
   WHILE (INSTR(selection_, ';') > 0) LOOP
      current_selection_  := substr(selection_, 0, INSTR(selection_, ';'));
      agreement_id_       := Client_SYS.Get_Key_Reference_Value(current_selection_, 'AGREEMENT_ID');
      catalog_no_         := Client_SYS.Get_Key_Reference_Value(current_selection_, 'CATALOG_NO');
      min_quantity_       := Client_SYS.Get_Key_Reference_Value(current_selection_, 'MIN_QUANTITY');
      valid_from_         := TO_DATE(Client_SYS.Get_Key_Reference_Value(current_selection_, 'VALID_FROM_DATE'), 'YYYY-MM-DD-HH24.MI.SS');
  
      Agreement_Sales_Part_Deal_Initial_Check___(agreement_id_, min_quantity_, valid_from_, catalog_no_ );
      Agreement_Sales_Part_Deal_API.Modify_Valid_To_Date(agreement_id_, catalog_no_, min_quantity_, valid_from_, valid_to_date_);
      selection_          := substr(selection_, INSTR(selection_, ';')+1); 
   END LOOP;  
END Modify_Valid_To_Date_Sales_Part___;


PROCEDURE Modify_Sales_Price_List_Unit___ (
   full_selection_ IN VARCHAR2,
   valid_to_date_  IN DATE ) 
IS
   selection_               VARCHAR2(32000) := CONCAT(full_selection_, ';');
   current_selection_       VARCHAR2(32000);
   price_list_no_           sales_price_list_unit_tab.price_list_no%TYPE;
   min_quantity_            sales_price_list_unit_tab.min_quantity%TYPE;
   valid_from_date_         sales_price_list_unit_tab.valid_from_date%TYPE;
BEGIN
   WHILE (INSTR(selection_, ';') > 0) LOOP
      current_selection_    := substr(selection_, 0, INSTR(selection_, ';'));
      
      price_list_no_        := Client_SYS.Get_Key_Reference_Value(current_selection_, 'PRICE_LIST_NO');
      min_quantity_         := Client_SYS.Get_Key_Reference_Value(current_selection_, 'MIN_QUANTITY');
      valid_from_date_      := TO_DATE(Client_SYS.Get_Key_Reference_Value(current_selection_, 'VALID_FROM_DATE'), 'YYYY-MM-DD-HH24.MI.SS');      

      Sales_Price_List_Unit_Initial_Check___(price_list_no_, min_quantity_, valid_from_date_);
      Sales_Price_List_Unit_API.Modify_Valid_To_Date(price_list_no_, min_quantity_, valid_from_date_, valid_to_date_);
                                                      
      selection_          := substr(selection_, INSTR(selection_, ';')+1); 
   END LOOP;  
END Modify_Sales_Price_List_Unit___;

PROCEDURE Modify_Sales_Price_List_Part___ (
   full_selection_ IN VARCHAR2,
   valid_to_date_  IN DATE ) 
IS
   selection_               VARCHAR2(32000) := CONCAT(full_selection_, ';');
   current_selection_       VARCHAR2(32000);
   price_list_no_           sales_price_list_part_tab.price_list_no%TYPE;
   min_quantity_            sales_price_list_part_tab.min_quantity%TYPE;
   valid_from_date_         sales_price_list_part_tab.valid_from_date%TYPE;
   catalog_no_              sales_price_list_part_tab.catalog_no%TYPE;
   min_duration_            sales_price_list_part_tab.min_duration%TYPE;
BEGIN
   WHILE (INSTR(selection_, ';') > 0) LOOP
      current_selection_    := substr(selection_, 0, INSTR(selection_, ';'));
      
      price_list_no_        := Client_SYS.Get_Key_Reference_Value(current_selection_, 'PRICE_LIST_NO');
      catalog_no_           := Client_SYS.Get_Key_Reference_Value(current_selection_, 'CATALOG_NO');
      min_quantity_         := Client_SYS.Get_Key_Reference_Value(current_selection_, 'MIN_QUANTITY');
      min_duration_         := Client_SYS.Get_Key_Reference_Value(current_selection_, 'MIN_DURATION');
      valid_from_date_      := TO_DATE(Client_SYS.Get_Key_Reference_Value(current_selection_, 'VALID_FROM_DATE'), 'YYYY-MM-DD-HH24.MI.SS');       
      
      Log_SYS.App_Trace(Log_SYS.debug_, '@@ price_list_no_ '||price_list_no_);
      Log_SYS.App_Trace(Log_SYS.debug_, '@@ catalog_no_ '||catalog_no_);
      Log_SYS.App_Trace(Log_SYS.debug_, '@@ min_quantity_ '||min_quantity_);
      Log_SYS.App_Trace(Log_SYS.debug_, '@@ min_duration_ '||min_duration_);
      Log_SYS.App_Trace(Log_SYS.debug_, '@@ valid_from_date_ '||valid_from_date_);
      Log_SYS.App_Trace(Log_SYS.debug_, '@@ valid_to_date_ '||valid_to_date_);
      
      Sales_Price_List_Part_Initial_Check___(price_list_no_, catalog_no_, min_quantity_, valid_from_date_, min_duration_);
      Sales_Price_List_Part_API.Modify_Valid_To_Date(price_list_no_, catalog_no_, min_quantity_, valid_from_date_, min_duration_, valid_to_date_);
                                                      
      selection_          := substr(selection_, INSTR(selection_, ';')+1); 
   END LOOP;  
END Modify_Sales_Price_List_Part___;

