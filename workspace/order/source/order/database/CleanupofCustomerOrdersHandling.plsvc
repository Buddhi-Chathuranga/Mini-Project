-----------------------------------------------------------------------------
--
--  Logical unit: CleanupofCustomerOrdersHandling
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  181115  RAKUSE  Created. (SCUXXW4-8620)
-----------------------------------------------------------------------------

layer Core;

@Override
FUNCTION Get_Parameters___ RETURN Parameters_Structure_Rec
IS
   method_name_ VARCHAR2(200) := 'CLEANUP_CUSTOMER_ORDER_API.CLEANUP_ROUTINE__';
   rec_ Parameters_Structure_Rec := super();
   msg_ VARCHAR2(32000);
   bool_value_ VARCHAR2(100);
BEGIN
   rec_.SCHEDULE_METHOD_ID := Batch_Schedule_Method_API.Get_Schedule_Method_Id(method_name_);
   rec_.DESCRIPTION := Batch_Schedule_Method_API.Get_Description(rec_.SCHEDULE_METHOD_ID);
            
   Batch_Schedule_Method_Par_API.Get_Default_Values__(msg_, rec_.SCHEDULE_METHOD_ID);
   Message_SYS.Get_Attribute(msg_, 'CLEAR_HEADER_HISTORY', bool_value_);
   rec_.CLEAR_HEADER_HISTORY := CASE bool_value_ WHEN '1' THEN TRUE ELSE FALSE END;
   
   Message_SYS.Get_Attribute(msg_, 'CLEAR_CANCELLED_HEADERS', bool_value_);
   rec_.CLEAR_CANCELLED_HEADERS := CASE bool_value_ WHEN '1' THEN TRUE ELSE FALSE END;
   
   Message_SYS.Get_Attribute(msg_, 'CLEAR_INVOICED_HEADERS', bool_value_);
   rec_.CLEAR_INVOICED_HEADERS := CASE bool_value_ WHEN '1' THEN TRUE ELSE FALSE END;
   
   Message_SYS.Get_Attribute(msg_, 'CLEAR_LINE_HISTORY', bool_value_);
   rec_.CLEAR_LINE_HISTORY := CASE bool_value_ WHEN '1' THEN TRUE ELSE FALSE END;
   
   Message_SYS.Get_Attribute(msg_, 'CLEAR_CANCELLED_LINES', bool_value_);
   rec_.CLEAR_CANCELLED_LINES := CASE bool_value_ WHEN '1' THEN TRUE ELSE FALSE END;
   
   Message_SYS.Get_Attribute(msg_, 'CLEAR_INVOICED_LINES',bool_value_);
   rec_.CLEAR_INVOICED_LINES := CASE bool_value_ WHEN '1' THEN TRUE ELSE FALSE END;
   
   Message_SYS.Get_Attribute(msg_, 'CLEAR_RESERVATIONS', bool_value_);
   rec_.CLEAR_RESERVATIONS := CASE bool_value_ WHEN '1' THEN TRUE ELSE FALSE END;
   
   Message_SYS.Get_Attribute(msg_, 'CLEAR_DELIVERIES', bool_value_);
   rec_.CLEAR_DELIVERIES := CASE bool_value_ WHEN '1' THEN TRUE ELSE FALSE END;
   
   Message_SYS.Get_Attribute(msg_, 'SITE', rec_.SITE);
   Message_SYS.Get_Attribute(msg_, 'NUMBER_OF_DAYS', rec_.NUMBER_OF_DAYS);
   Message_SYS.Get_Attribute(msg_, 'CANCEL_REASON', rec_.CANCEL_REASON);
   Message_SYS.Get_Attribute(msg_, 'BEFORE_DATE', rec_.BEFORE_DATE);
   RETURN rec_;
END Get_Parameters___;

FUNCTION Construct_Param_Attr___ (
   virt_rec_ IN OUT Task_Virtual_Rec ) RETURN VARCHAR2
IS
   msg_ VARCHAR2(32000) := Message_SYS.Construct('');
BEGIN
   Message_SYS.Add_Attribute(msg_, 'CLEAR_HEADER_HISTORY', CASE virt_rec_.CLEAR_HEADER_HISTORY WHEN TRUE THEN '1' ELSE '0' END);
   Message_SYS.Add_Attribute(msg_, 'CLEAR_CANCELLED_HEADERS', CASE virt_rec_.CLEAR_CANCELLED_HEADERS WHEN TRUE THEN '1' ELSE '0' END);
   Message_SYS.Add_Attribute(msg_, 'CLEAR_INVOICED_HEADERS', CASE virt_rec_.CLEAR_INVOICED_HEADERS WHEN TRUE THEN '1' ELSE '0' END);
   Message_SYS.Add_Attribute(msg_, 'CLEAR_LINE_HISTORY', CASE virt_rec_.CLEAR_LINE_HISTORY WHEN TRUE THEN '1' ELSE '0' END);
   Message_SYS.Add_Attribute(msg_, 'CLEAR_CANCELLED_LINES', CASE virt_rec_.CLEAR_CANCELLED_LINES WHEN TRUE THEN '1' ELSE '0' END);
   Message_SYS.Add_Attribute(msg_, 'CLEAR_INVOICED_LINES', CASE virt_rec_.CLEAR_INVOICED_LINES WHEN TRUE THEN '1' ELSE '0' END);
   Message_SYS.Add_Attribute(msg_, 'CLEAR_RESERVATIONS', CASE virt_rec_.CLEAR_RESERVATIONS WHEN TRUE THEN '1' ELSE '0' END);
   Message_SYS.Add_Attribute(msg_, 'CLEAR_DELIVERIES', CASE virt_rec_.CLEAR_DELIVERIES WHEN TRUE THEN '1' ELSE '0' END);
   Message_SYS.Add_Attribute(msg_, 'SITE', virt_rec_.SITE);
   Message_SYS.Add_Attribute(msg_, 'NUMBER_OF_DAYS', virt_rec_.NUMBER_OF_DAYS);
   IF(virt_rec_.CANCEL_REASON IS NULL) THEN
      virt_rec_.CANCEL_REASON := '%'; --ANY REASON IS VALID
   END IF;
   Message_SYS.Add_Attribute(msg_, 'CANCEL_REASON', virt_rec_.CANCEL_REASON);
   Message_SYS.Add_Attribute(msg_, 'BEFORE_DATE', virt_rec_.BEFORE_DATE);
   RETURN msg_;

END Construct_Param_Attr___;
