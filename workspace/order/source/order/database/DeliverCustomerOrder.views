-----------------------------------------------------------------------------
--
--  Logical unit: DeliverCustomerOrder
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  211112  Amiflk  SC21R2-3234, RLS annotation CustomImplemented is added for Deliver_Customer_Order, Customer_Order_Deliv_Note_Uiv
--  211112          Co_Deliv_Note_Line, Create_Pre_Ship_Delivery_Note and Deliver_Customer_Order_Diff views.
--  201111  ErRalk  Bug 156297(SCZ-12527), Removed col1.ship_addr_no - dnp.receiver_addr_id comparision from Co_Deliv_Note_Line as it's done for col1.addr_flag = 'N' condition which is only necessary to compare.
--  191028  SatGlk  Bug 150704(SCZ-7146), In View Co_Deliv_Note_Line additional where condition added.
--  190508  RasDlk  SCUXXW4-15857,15696,15695,18910, Added the view Deliver_Customer_Order_Alt to support Input UoM in Aurena client.
--  181108  SBalLK  Issue SCUXXW4-9300, Added Cust_Order_Cum_Delivery_Lov for use in Aurena client.
--  180806  MaEelk  SCUXXW4-12067, Added data type to addr_flag_db in Customer_Order_Deliv_Note_Uiv.
--  160704  MaRalk  LIM-7671, Modified Customer_Order_Deliv_Note_Main, Customer_Order_Deliv_Note_Uiv and 
--  160704          Co_Deliv_Note_Line views to reflect column renaming in delivery_note_pub.
--  160608  MaIklk  LIM-7442, Moved some order specific views from Delivery_Note_API to this package.
--  151110  MaEelk  LIM-4453, Removed pallet_id from Deliver_Customer_Order.
--  150526  IsSalk  KES-510, Modified view Customer_Order_Delivery_Cs and Customer_Order_Delivery_Lov
--  150526          to remove cancelled delivery lines.
--  150819  PrYaLK  Bug 121587, Modified VIEW Customer_Order_Delivery_Cs and view Customer_Order_Delivery_Lov by adding cust_part_invert_conv_fact.
--  150806  ChBnlk  Bug 120336, Added user allowed site filteration to the view Deliver_Customer_Order. 
-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------

-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

VIEW Customer_Order_Deliv_Note_Main IS
   Prompt = 'Customer Order Deliv Note'
   Contract.Ref = 'Site'
   Customer_No.Ref = 'CustOrdCustomer'
   Deliver_To_Customer_No.Ref = 'CustOrdCustomer'
   Language_Code.Ref = 'IsoLanguage'
SELECT dnp.delnote_no                 delnote_no,
       dnp.order_no                   order_no,
       dnp.create_date                create_date,
       Dispatch_Advice_Sent_API.Decode(dnp.dispatch_advice_sent) dispatch_advice_sent,
       dnp.dispatch_advice_sent       dispatch_advice_sent_db,
       dnp.route_id                   route_id,
       dnp.forward_agent_id           forward_agent_id,
       dnp.ship_via_code              ship_via_code,
       SUBSTR(a.name,1,100)           addr_1,       
       a.country_db                   country_code,
       a.address1                     ship_address1,
       a.address2                     ship_address2,
       a.address3                     ship_address3,
       a.address4                     ship_address4,
       a.address5                     ship_address5,
       a.address6                     ship_address6,
       a.zip_code                     ship_zip_code,
       a.city                         ship_city,
       a.state                        ship_state,
       alt_delnote_no                 alt_delnote_no,
       a.county                       ship_county,
       Gen_Yes_No_API.Decode(dnp.single_occ_addr_flag) addr_flag,
       dnp.single_occ_addr_flag       addr_flag_db,
       dnp.receiver_addr_id           ship_addr_no,
       co.contract                    contract,
       co.customer_no                 customer_no,
       dnp.receiver_id                deliver_to_customer_no,
       co.language_code               language_code,
       dnp.delivery_terms             delivery_terms,
       dnp.shipment_id                shipment_id,
       dnp.pre_ship_invent_loc_no     pre_ship_invent_loc_no,
       Fnd_Boolean_API.Decode(dnp.pre_ship_delivery_made)   pre_ship_delivery_made,
       dnp.pre_ship_delivery_made     pre_ship_delivery_made_db,
       dnp.desadv_sequence_no         desadv_sequence_no,
       dnp.desadv_version_no          desadv_version_no,
       dnp.dirdel_sequence_no         dirdel_sequence_no,
       dnp.dirdel_version_no          dirdel_version_no,
       dnp.del_terms_location         del_terms_location,
       dnp.source_lang_code           originating_co_lang_code,
       dnp.objid                      objid,
       dnp.objversion                 objversion,
       dnp.objstate                   objstate,
       dnp.objevents                  objevents,
       dnp.state                      state
FROM   CUSTORD_ADDRESS a, delivery_note_pub dnp, customer_order_tab co
WHERE  a.customer_no = dnp.receiver_id
AND    a.addr_no = dnp.receiver_addr_id
AND    dnp.order_no = co.order_no
AND    dnp.single_occ_addr_flag = 'N'
UNION
SELECT dnp.delnote_no                 delnote_no,
       dnp.order_no                   order_no,
       dnp.create_date                create_date,
       Dispatch_Advice_Sent_API.Decode(dnp.dispatch_advice_sent) dispatch_advice_sent,
       dnp.dispatch_advice_sent       dispatch_advice_sent_db,
       dnp.route_id                   route_id,
       dnp.forward_agent_id           forward_agent_id,
       dnp.ship_via_code              ship_via_code,
       dnp.receiver_addr_name         addr_1,       
       dnp.receiver_country           country_code,
       dnp.receiver_address1          ship_address1,
       dnp.receiver_address2          ship_address2,
       dnp.receiver_address3          ship_address3,
       dnp.receiver_address4          ship_address4,
       dnp.receiver_address5          ship_address5,
       dnp.receiver_address6          ship_address6,
       dnp.receiver_zip_code          ship_zip_code,
       dnp.receiver_city              ship_city,
       dnp.receiver_state             ship_state,
       alt_delnote_no                 alt_delnote_no,
       dnp.receiver_county            ship_county,
       Gen_Yes_No_API.Decode(dnp.single_occ_addr_flag) addr_flag,
       dnp.single_occ_addr_flag       addr_flag_db,
       dnp.receiver_addr_id           ship_addr_no,
       co.contract                    contract,
       co.customer_no                 customer_no,
       dnp.receiver_id                deliver_to_customer_no,
       co.language_code               language_code,
       dnp.delivery_terms             delivery_terms,
       dnp.shipment_id                shipment_id,
       dnp.pre_ship_invent_loc_no     pre_ship_invent_loc_no,
       Fnd_Boolean_API.Decode(dnp.pre_ship_delivery_made)   pre_ship_delivery_made,
       dnp.pre_ship_delivery_made     pre_ship_delivery_made_db,
       dnp.desadv_sequence_no         desadv_sequence_no,
       dnp.desadv_version_no          desadv_version_no,
       dnp.dirdel_sequence_no         dirdel_sequence_no,
       dnp.dirdel_version_no          dirdel_version_no,
       dnp.del_terms_location         del_terms_location,
       dnp.source_lang_code           originating_co_lang_code,
       dnp.objid                      objid,
       dnp.objversion                 objversion,
       dnp.objstate                   objstate,
       dnp.objevents                  objevents,
       dnp.state                      state
FROM   delivery_note_pub dnp, customer_order_tab co
WHERE  dnp.order_no = co.order_no
AND    dnp.single_occ_addr_flag = 'Y';

@DbViewRowLevelSecurity CustomImplemented
VIEW Deliver_Customer_Order IS
   Prompt = 'Deliver Customer Order'
   Order_No.Flags = 'PMI-L'
   Order_No.Datatype = 'STRING(12)/UPPERCASE'
   Order_No.Prompt = 'Order No'
   Line_No.Flags = 'PMI-L'
   Line_No.Datatype = 'STRING(4)'
   Line_No.Prompt = 'Line No'
   Rel_No.Flags = 'PMI-L'
   Rel_No.Datatype = 'STRING(4)'
   Rel_No.Prompt = 'Rel No'
   Line_Item_No.Flags = 'PMI--'
   Line_Item_No.Datatype = 'NUMBER'
   Line_Item_No.Prompt = 'Line Item No'
   Line_Item_No.Ref = 'CustomerOrderLine(order_no,line_no,rel_no)/NOCHECK'
   Contract.Flags = 'PMI--'
   Contract.Datatype = 'STRING(5)/UPPERCASE'
   Contract.Prompt = 'Site'
   Part_No.Flags = 'PMI--'
   Part_No.Datatype = 'STRING(25)/UPPERCASE'
   Part_No.Prompt = 'Part No'
   Configuration_Id.Flags = 'PMI--'
   Configuration_Id.Datatype = 'STRING(50)/UPPERCASE'
   Configuration_Id.Prompt = 'Configuration Id'
   Location_No.Flags = 'PMI--'
   Location_No.Datatype = 'STRING(35)'
   Location_No.Prompt = 'Location No'
   Lot_Batch_No.Flags = 'PMI--'
   Lot_Batch_No.Datatype = 'STRING(20)'
   Lot_Batch_No.Prompt = 'Lot Batch No'
   Serial_No.Flags = 'PMI--'
   Serial_No.Datatype = 'STRING(50)'
   Serial_No.Prompt = 'Serial No'
   Eng_Chg_Level.Flags = 'PMI--'
   Eng_Chg_Level.Datatype = 'STRING(6)'
   Eng_Chg_Level.Prompt = 'EC'
   Waiv_Dev_Rej_No.Flags = 'PMI--'
   Waiv_Dev_Rej_No.Datatype = 'STRING(15)'
   Waiv_Dev_Rej_No.Prompt = 'W/D/R No'
   Activity_Seq.Flags = 'PMI--'
   Activity_Seq.Datatype = 'NUMBER'
   Activity_Seq.Prompt = 'Activity Seq'
   Handling_Unit_Id.Flags = 'PMI--'
   Handling_Unit_Id.Datatype = 'NUMBER'
   Handling_Unit_Id.Prompt = 'Handling Unit ID'
   Handling_Unit_Id.Ref ='InventoryPartInStock(contract,part_no,configuration_id,location_no,lot_batch_no,serial_no,eng_chg_level,waiv_dev_rej_no,activity_seq)/NOCHECK'
   Qty_To_Deliver.Flags = 'A-IU-'
   Qty_To_Deliver.Datatype = 'NUMBER'
   Qty_To_Deliver.Prompt = 'Qty To Deliver'
   Catch_Qty_To_Deliver.Flags = 'A-IU-'
   Catch_Qty_To_Deliver.Datatype = 'NUMBER'
   Catch_Qty_To_Deliver.Prompt = 'Catch Qty To Deliver'
   Qty_Assigned.Flags = 'AMIUL'
   Qty_Assigned.Datatype = 'NUMBER'
   Qty_Assigned.Prompt = 'Qty Assigned'
   Qty_Picked.Flags = 'AMIUL'
   Qty_Picked.Datatype = 'NUMBER'
   Qty_Picked.Prompt = 'Qty Picked'
   Catch_Qty.Flags = 'AMIUL'
   Catch_Qty.Datatype = 'NUMBER'
   Catch_Qty.Prompt = 'Catch Qty Picked'
   Qty_Shipped.Flags = 'AMIUL'
   Qty_Shipped.Datatype = 'NUMBER'
   Qty_Shipped.Prompt = 'Qty Shipped'
SELECT order_no                       order_no,
       line_no                        line_no,
       rel_no                         rel_no,
       line_item_no                   line_item_no,
       contract                       contract,
       part_no                        part_no,
       configuration_id               configuration_id,
       location_no                    location_no,
       lot_batch_no                   lot_batch_no,
       serial_no                      serial_no,
       eng_chg_level                  eng_chg_level,
       waiv_dev_rej_no                waiv_dev_rej_no,
       activity_seq                   activity_seq,
       handling_unit_id               handling_unit_id,
       SUM(qty_to_deliver)            qty_to_deliver,
       SUM(catch_qty_to_deliver)      catch_qty_to_deliver,
       SUM(qty_assigned)              qty_assigned,
       SUM(qty_picked)                qty_picked,
       SUM(catch_qty)                 catch_qty,
       SUM(qty_shipped)               qty_shipped,
       NULL                           objid,
       NULL                           objversion
FROM   CUSTOMER_ORDER_RESERVATION_TAB
WHERE  qty_picked > 0
AND EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE customer_order_reservation_tab.contract = site)
GROUP BY order_no, line_no, rel_no, line_item_no, contract, part_no, configuration_id, location_no, lot_batch_no,
         serial_no, eng_chg_level, waiv_dev_rej_no, activity_seq, handling_unit_id;

VIEW Customer_Order_Delivery_Cs IS
   Prompt = 'Deliver Customer Order'
   Order_No.Flags = 'A----'
   Order_No.Datatype = 'STRING(12)/UPPERCASE'
   Order_No.Prompt = 'Order No'
   Customer_Part_No.Flags = 'A----'
   Customer_Part_No.Datatype = 'STRING(45)/UPPERCASE'
   Customer_Part_No.Prompt = 'Customer Part No'
   Delnote_No.Flags = 'A----'
   Delnote_No.Datatype = 'STRING(15)'
   Delnote_No.Prompt = 'Delivery Note No'
   Delnote_No.Ref = 'CustomerOrderDelivNote/NOCHECK'
   Date_Delivered.Flags = 'A----'
   Date_Delivered.Datatype = 'DATE/DATETIME'
   Date_Delivered.Prompt = 'Date Delivered'
   Qty_Shipped.Flags = 'A----'
   Qty_Shipped.Datatype = 'NUMBER'
   Qty_Shipped.Prompt = 'Qty Shipped (Customer U/M)'
SELECT col.order_no                             order_no,
       col.customer_part_no                     customer_part_no,
       cod.delnote_no                           delnote_no,
       cod.date_delivered                       date_delivered,
       ((cod.qty_shipped / col.conv_factor * col.inverted_conv_factor) /
       NVL(col.customer_part_conv_factor, 1) *
       NVL(col.cust_part_invert_conv_fact, 1))  qty_shipped,
       cod.rowkey                               objkey
FROM   CUSTOMER_ORDER_DELIVERY_TAB cod, CUSTOMER_ORDER_LINE_TAB col
WHERE  col.order_no = cod.order_no
AND    col.line_no = cod.line_no
AND    col.rel_no = cod.rel_no
AND    col.line_item_no = cod.line_item_no
AND    cod.cancelled_delivery = 'FALSE';

VIEW Customer_Order_Delivery_Lov IS
   Prompt = 'Customer order delivery'
   Customer_No.Flags = 'P---L'
   Customer_No.Datatype = 'STRING(20)/UPPERCASE'
   Customer_No.Prompt = 'Customer No'
   Ship_Addr_No.Flags = 'P---L'
   Ship_Addr_No.Datatype = 'STRING(50)/UPPERCASE'
   Ship_Addr_No.Prompt = 'Ship Address No'
   Customer_Part_No.Flags = 'P---L'
   Customer_Part_No.Datatype = 'STRING(45)/UPPERCASE'
   Customer_Part_No.Prompt = 'Customer Part No'
   Delnote_No.Flags = 'K---L'
   Delnote_No.Datatype = 'STRING(15)'
   Delnote_No.Prompt = 'Delivery Note No'
   Order_No.Flags = 'A---L'
   Order_No.Datatype = 'STRING(12)/UPPERCASE'
   Order_No.Prompt = 'Order No'
   Date_Delivered.Flags = 'A---L'
   Date_Delivered.Datatype = 'DATE/DATETIME'
   Date_Delivered.Prompt = 'Date Delivered'
   Qty_Shipped.Flags = 'A---L'
   Qty_Shipped.Datatype = 'NUMBER'
   Qty_Shipped.Prompt = 'Qty Shipped (Customer U/M)'
SELECT co.customer_no                        customer_no,
       col.ship_addr_no                      ship_addr_no,
       col.customer_part_no                  customer_part_no,
       cod.delnote_no                        delnote_no,
       cod.order_no                          order_no,
       cod.date_delivered                    date_delivered,
       ((cod.qty_shipped / col.conv_factor * col.inverted_conv_factor) /
       NVL(col.customer_part_conv_factor, 1) *
       NVL(col.cust_part_invert_conv_fact, 1)) qty_shipped,
       cod.rowkey                           objkey
FROM   CUSTOMER_ORDER_TAB co, CUSTOMER_ORDER_DELIVERY_TAB cod, CUSTOMER_ORDER_LINE_TAB col
WHERE  co.order_no = cod.order_no
AND    col.order_no = cod.order_no
AND    col.line_no = cod.line_no
AND    col.rel_no = cod.rel_no
AND    col.line_item_no = cod.line_item_no
AND    cod.delnote_no IS NOT NULL
AND    cod.cancelled_delivery = 'FALSE';

VIEW Cust_Order_Cum_Delivery_Lov IS
Prompt = 'Cumulative customer order delivery'
   Customer_No.Flags = 'P---L'
   Customer_No.Datatype = 'STRING(20)/UPPERCASE'
   Customer_No.Prompt = 'Customer No'
   Ship_Addr_No.Flags = 'P---L'
   Ship_Addr_No.Datatype = 'STRING(50)/UPPERCASE'
   Ship_Addr_No.Prompt = 'Ship Address No'
   Customer_Part_No.Flags = 'P---L'
   Customer_Part_No.Datatype = 'STRING(45)/UPPERCASE'
   Customer_Part_No.Prompt = 'Customer Part No'
   Delnote_No.Flags = 'K---L'
   Delnote_No.Datatype = 'STRING(15)'
   Delnote_No.Prompt = 'Delivery Note No'
   Date_Delivered.Flags = 'A---L'
   Date_Delivered.Datatype = 'DATE'
   Date_Delivered.Prompt = 'Date Delivered'
   Qty_Shipped.Flags = 'A---L'
   Qty_Shipped.Datatype = 'NUMBER'
   Qty_Shipped.Prompt = 'Qty Shipped (Customer U/M)'
SELECT customer_no,
       ship_addr_no,
       customer_part_no,
       delnote_no,
       TRUNC(date_delivered) date_delivered,
       SUM(qty_shipped) qty_shipped
FROM Customer_Order_Delivery_Lov
GROUP BY customer_no, ship_addr_no, customer_part_no, delnote_no, TRUNC(date_delivered);

@DbViewRowLevelSecurity CustomImplemented
VIEW Customer_Order_Deliv_Note_Uiv IS
   Prompt = 'Customer Order Deliv Note'
   Delnote_No.Flags='K---L'
   Delnote_No.Datatype = 'STRING(15)'
   Delnote_No.Prompt = 'Delivery Note No'
   Order_No.Flags='A-I--'
   Order_No.Datatype = 'STRING(12)/UPPERCASE' 
   Order_No.Ref = 'CustomerOrder'
   Create_Date.Flags='A-I--'
   Create_Date.Datatype = 'DATE/DATETIME'    
   Dispatch_Advice_Sent.Flags='AMIUL'
   Dispatch_Advice_Sent.Datatype = 'STRING(200)'
   Dispatch_Advice_Sent.Enumeration = 'DispatchAdviceSent'
   Dispatch_Advice_Sent_Db.Flags='A----'
   Dispatch_Advice_Sent_Db.Datatype = 'STRING(8)'
   Dispatch_Advice_Sent_Db.Prompt = 'Dispatch Advice Sent'
   Route_Id.Flags='A-IU-'
   Route_Id.Datatype = 'STRING(12)' 
   Route_Id.Ref = 'DeliveryRoute'    
   Forward_Agent_Id.Flags='A-IU-'
   Forward_Agent_Id.Datatype = 'STRING(20)' 
   Forward_Agent_Id.Ref = 'ForwarderInfo/NOCHECK' 
   Ship_Via_Code.Flags='A-IU-'
   Ship_Via_Code.Datatype = 'STRING(3)' 
   Ship_Via_Code.Ref = 'MpccomShipVia' 
   Addr_1.Flags='A-IU-'
   Addr_1.Datatype = 'STRING(100)' 
   Addr_1.Column = 'ADDR_1'    
   Country_Code.Flags='A-IU-'
   Country_Code.Datatype = 'STRING(2)/UPPERCASE' 
   Country_Code.Ref = 'IsoCountry'    
   Ship_Address1.Flags='A-IU-'
   Ship_Address1.Datatype = 'STRING(35)'
   Ship_Address2.Flags='A-IU-'
   Ship_Address2.Datatype = 'STRING(35)'
   Ship_Address3.Flags='A-IU-'
   Ship_Address3.Datatype = 'STRING(100)'
   Ship_Address4.Flags='A-IU-'
   Ship_Address4.Datatype = 'STRING(100)'
   Ship_Address5.Flags='A-IU-'
   Ship_Address5.Datatype = 'STRING(100)'
   Ship_Address6.Flags='A-IU-'
   Ship_Address6.Datatype = 'STRING(100)'
   Ship_Zip_Code.Flags='A-IU-'
   Ship_Zip_Code.Datatype = 'STRING(35)'
   Ship_City.Flags='A-IU-'
   Ship_City.Datatype = 'STRING(35)'
   Ship_State.Flags='A-IU-'
   Ship_State.Datatype = 'STRING(35)'
   Alt_Delnote_No.Flags='A--UL'
   Alt_Delnote_No.Datatype = 'STRING(50)'
   Ship_County.Flags='A-IU-'
   Ship_County.Datatype = 'STRING(35)' 
   Addr_Flag.Flags='AMIU-'
   Addr_Flag.Datatype = 'STRING(200)'
   Addr_Flag.Enumeration = 'GenYesNo'
   Addr_Flag_Db.Flags= 'A----'
   Addr_Flag_Db.Datatype= 'STRING(1)'
   Addr_Flag.Datatype = 'STRING(1)'
   Addr_Flag.Prompt = 'Addr Flag'
   Ship_Addr_No.Flags='A-IU-'
   Ship_Addr_No.Datatype = 'STRING(50)'
   Ship_Addr_No.Ref = 'CustOrdCustomerAddress(CUSTOMER_NO)'
   Contract.Flags='A----'
   Contract.Datatype = 'STRING(5)/UPPERCASE'
   Contract.Ref = 'Site/NOCHECK'
   Contract.Prompt = 'Site'
   Customer_No.Flags='A----'
   Customer_No.Datatype = 'STRING(20)/UPPERCASE'
   Customer_No.Ref = 'CustOrdCustomer'
   Customer_No.Column = 'Customer_Order_API.Get_Customer_No(ORDER_NO)'
   Deliver_To_Customer_No.Flags='AMIU-'
   Deliver_To_Customer_No.Datatype = 'STRING(20)/UPPERCASE'
   Deliver_To_Customer_No.Ref = 'CustOrdCustomer'
   Deliver_To_Customer_No.Prompt = 'Customer No'   
   Language_Code.Flags='A----'
   Language_Code.Datatype = 'STRING(2)' 
   Language_Code.Ref = 'IsoLanguage'
   Delivery_Terms.Flags='A-IU-'
   Delivery_Terms.Datatype = 'STRING(5)' 
   Shipment_Id.Flags='A-IU-'
   Shipment_Id.Datatype = 'NUMBER' 
   Shipment_Id.Ref = 'Shipment'
   Shipment_Id.Prompt = 'Shipment ID'
   Pre_Ship_Invent_Loc_No.Flags='A-IU-'
   Pre_Ship_Invent_Loc_No.Datatype = 'STRING(35)' 
   Pre_Ship_Delivery_Made.Flags='A-IU-'
   Pre_Ship_Delivery_Made.Datatype = 'STRING(5)' 
   Pre_Ship_Delivery_Made.Enumeration = 'FndBoolean'
   Pre_Ship_Delivery_Made_Db.Flags='A----'
   Pre_Ship_Delivery_Made_Db.Datatype = 'STRING(5)' 
   Pre_Ship_Delivery_Made_Db.Prompt = 'Pre Ship Delivery Made'
   Desadv_Sequence_No.Flags='A-IU-'
   Desadv_Sequence_No.Datatype = 'NUMBER' 
   Desadv_Version_No.Flags='A-IU-'
   Desadv_Version_No.Datatype = 'NUMBER' 
   Dirdel_Sequence_No.Flags='A-IU-'
   Dirdel_Sequence_No.Datatype = 'NUMBER' 
   Dirdel_Version_No.Flags='A-IU-'
   Dirdel_Version_No.Datatype = 'NUMBER'
   Del_Terms_Location.Flags='A-IU-'
   Del_Terms_Location.Datatype = 'STRING(100)'
   State.Flags='A---L'
   State.Datatype = 'STRING(20)'     
SELECT dnp.delnote_no                 delnote_no,
       dnp.order_no                   order_no,
       dnp.create_date                create_date,
       Dispatch_Advice_Sent_API.Decode(dnp.dispatch_advice_sent) dispatch_advice_sent,
       dnp.dispatch_advice_sent       dispatch_advice_sent_db,
       dnp.route_id                   route_id,
       dnp.forward_agent_id           forward_agent_id,
       dnp.ship_via_code              ship_via_code,
       SUBSTR(a.name,1,100)           addr_1,       
       a.country_db                   country_code,
       a.address1                     ship_address1,
       a.address2                     ship_address2,
       a.address3                     ship_address3,
       a.address4                     ship_address4,
       a.address5                     ship_address5,
       a.address6                     ship_address6,
       a.zip_code                     ship_zip_code,
       a.city                         ship_city,
       a.state                        ship_state,
       alt_delnote_no                 alt_delnote_no,
       a.county                       ship_county,
       Gen_Yes_No_API.Decode(dnp.single_occ_addr_flag) addr_flag,
       dnp.single_occ_addr_flag       addr_flag_db,
       dnp.receiver_addr_id           ship_addr_no,
       co.contract                    contract,
       co.customer_no                 customer_no,
       dnp.receiver_id                deliver_to_customer_no,
       co.language_code               language_code,
       dnp.delivery_terms             delivery_terms,
       dnp.shipment_id                shipment_id,
       dnp.pre_ship_invent_loc_no     pre_ship_invent_loc_no,
       Fnd_Boolean_API.Decode(dnp.pre_ship_delivery_made)   pre_ship_delivery_made,
       dnp.pre_ship_delivery_made     pre_ship_delivery_made_db,
       dnp.desadv_sequence_no         desadv_sequence_no,
       dnp.desadv_version_no          desadv_version_no,
       dnp.dirdel_sequence_no         dirdel_sequence_no,
       dnp.dirdel_version_no          dirdel_version_no,
       dnp.del_terms_location         del_terms_location,
       dnp.objid                      objid,
       dnp.objversion                 objversion,
       dnp.objstate                   objstate,
       dnp.objevents                  objevents,
       dnp.state                      state
FROM   CUSTORD_ADDRESS a, delivery_note_pub dnp, customer_order_tab co
WHERE  a.customer_no = dnp.receiver_id
AND    a.addr_no = dnp.receiver_addr_id
AND    dnp.order_no = co.order_no
AND    dnp.single_occ_addr_flag = 'N'
AND    EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE contract = site)
UNION
SELECT dnp.delnote_no                 delnote_no,
       dnp.order_no                   order_no,
       dnp.create_date                create_date,
       Dispatch_Advice_Sent_API.Decode(dnp.dispatch_advice_sent) dispatch_advice_sent,
       dnp.dispatch_advice_sent       dispatch_advice_sent_db,
       dnp.route_id                   route_id,
       dnp.forward_agent_id           forward_agent_id,
       dnp.ship_via_code              ship_via_code,
       dnp.receiver_addr_name         addr_1,       
       dnp.receiver_country           country_code,
       dnp.receiver_address1          ship_address1,
       dnp.receiver_address2          ship_address2,
       dnp.receiver_address3          ship_address3,
       dnp.receiver_address4          ship_address4,
       dnp.receiver_address5          ship_address5,
       dnp.receiver_address6          ship_address6,
       dnp.receiver_zip_code          ship_zip_code,
       dnp.receiver_city              ship_city,
       dnp.receiver_state             ship_state,
       alt_delnote_no                 alt_delnote_no,
       dnp.receiver_county            ship_county,
       Gen_Yes_No_API.Decode(dnp.single_occ_addr_flag) addr_flag,
       dnp.single_occ_addr_flag       addr_flag_db,
       dnp.receiver_addr_id           ship_addr_no,
       co.contract                    contract,
       co.customer_no                 customer_no,
       dnp.receiver_id                deliver_to_customer_no,
       co.language_code               language_code,
       dnp.delivery_terms             delivery_terms,
       dnp.shipment_id                shipment_id,
       dnp.pre_ship_invent_loc_no     pre_ship_invent_loc_no,
       Fnd_Boolean_API.Decode(dnp.pre_ship_delivery_made)   pre_ship_delivery_made,
       dnp.pre_ship_delivery_made     pre_ship_delivery_made_db,
       dnp.desadv_sequence_no         desadv_sequence_no,
       dnp.desadv_version_no          desadv_version_no,
       dnp.dirdel_sequence_no         dirdel_sequence_no,
       dnp.dirdel_version_no          dirdel_version_no,
       dnp.del_terms_location         del_terms_location,
       dnp.objid                      objid,
       dnp.objversion                 objversion,
       dnp.objstate                   objstate,
       dnp.objevents                  objevents,
       dnp.state                      state
FROM   delivery_note_pub dnp, customer_order_tab co
WHERE  dnp.order_no = co.order_no
AND    EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE contract = site)
AND    dnp.single_occ_addr_flag = 'Y';

@DbViewRowLevelSecurity CustomImplemented
VIEW Co_Deliv_Note_Line IS
   Prompt = 'Delivery Note Lines'
   Delnote_No.Flags = 'P---L'
   Order_No.Flags = 'P---L'
   Order_No.Datatype = 'STRING(12)/UPPERCASE'    
   Line_No.Flags = 'K----'
   Line_No.Datatype = 'STRING(4)'   
   Rel_No.Flags = 'K----'
   Rel_No.Datatype = 'STRING(4)'   
   Line_Item_No.Flags = 'K----'
   Line_Item_No.Datatype = 'NUMBER'   
   Contract.Flags = 'A---L'
   Contract.Ref = 'Site/NOCHECK'
   Contract.Datatype = 'STRING(5)/UPPERCASE'
   Contract.Prompt = 'Site'
   Catalog_No.Flags = 'A---L'
   Catalog_No.Ref = 'SalesPart/NOCHECK'
   Catalog_No.Datatype = 'STRING(25)/UPPERCASE'
   Catalog_No.Prompt = 'Sales Part Number'
   Catalog_Desc.Flags = 'A----'  
   Catalog_Desc.Datatype = 'STRING(200)'
   Customer_Part_No.Flags = 'A----'  
   Customer_Part_No.Datatype = 'STRING(45)'
   Buy_Qty_Due.Flags = 'A----'  
   Buy_Qty_Due.Datatype = 'NUMBER/DECIMAL'
   Customer_Part_Conv_Factor.Flags = 'A----'  
   Customer_Part_Conv_Factor.Datatype = 'NUMBER'
   Cust_Part_Invert_Conv_Fact.Flags = 'A----'  
   Cust_Part_Invert_Conv_Fact.Datatype = 'NUMBER'
   Cust_Part_Invert_Conv_Fact.Flags = 'A----'  
   Cust_Part_Invert_Conv_Fact.Datatype = 'NUMBER'
   Qty_Remaining.Flags = 'A----'  
   Qty_Remaining.Datatype = 'NUMBER/DECIMAL'
   Sales_Unit_Meas.Flags = 'A---L'  
   Sales_Unit_Meas.Datatype = 'STRING(10)'
   Sales_Unit_Meas.Prompt = 'Sales Unit Measure'
   Sales_Unit_Meas.Ref = 'IsoUnit/NOCHECK'
   Qty_Delivered.Flags = 'A----'  
   Qty_Delivered.Datatype = 'NUMBER'
   Qty_Picked.Flags = 'A----'  
   Qty_Picked.Datatype = 'NUMBER'
   Qty_To_Ship.Flags = 'A----'  
   Qty_To_Ship.Datatype = 'NUMBER'
   Conv_Factor.Flags = 'A----'  
   Conv_Factor.Datatype = 'NUMBER'
   Inverted_Conv_Factor.Flags = 'A----'  
   Inverted_Conv_Factor.Datatype = 'NUMBER'
   Catalog_Type_Db.Flags = 'A----'  
   Catalog_Type_Db.Datatype = 'STRING(20)'
   Catalog_Type_Db.Prompt = 'Catalog Type'
SELECT dnp.delnote_no                                  delnote_no,
       col1.order_no                                   order_no,
       col1.line_no                                    line_no,
       col1.rel_no                                     rel_no,
       col1.line_item_no                               line_item_no,
       col1.contract                                   contract,
       col1.catalog_no                                 catalog_no,
       col1.catalog_desc                               catalog_desc,
       col1.customer_part_no                           customer_part_no,
       NVL(col1.customer_part_buy_qty, col1.buy_qty_due) buy_qty_due,
       col1.customer_part_conv_factor                  customer_part_conv_factor,
       col1.cust_part_invert_conv_fact                 cust_part_invert_conv_fact,
       DECODE(col1.customer_part_buy_qty, NULL, GREATEST(col1.buy_qty_due - ((col1.qty_shipped - col1.qty_shipdiff)/col1.conv_factor * col1.inverted_conv_factor), 0),
              GREATEST(col1.customer_part_buy_qty - (((col1.qty_shipped - col1.qty_shipdiff)/col1.conv_factor * col1.inverted_conv_factor)/col1.customer_part_conv_factor * NVL(col1.cust_part_invert_conv_fact, 1)),0)) qty_remaining,
       NVL(col1.customer_part_unit_meas, col1.sales_unit_meas)   sales_unit_meas,
       DECODE(col1.customer_part_buy_qty, NULL, (col1.qty_shipped/col1.conv_factor * col1.inverted_conv_factor),
          (col1.qty_shipped/col1.conv_factor * col1.inverted_conv_factor)/col1.customer_part_conv_factor * NVL(col1.cust_part_invert_conv_fact, 1)) qty_delivered,
       DECODE(col1.customer_part_buy_qty, NULL, (col1.qty_picked/col1.conv_factor * col1.inverted_conv_factor),
          (col1.qty_picked/col1.conv_factor * col1.inverted_conv_factor)/col1.customer_part_conv_factor * NVL(col1.cust_part_invert_conv_fact, 1)) qty_picked,
       col1.qty_to_ship                                qty_to_ship,
       col1.conv_factor                                conv_factor,
       col1.inverted_conv_factor                       inverted_conv_factor,
       col1.catalog_type                               catalog_type_db,
       col1.rowid                                      objid,
       col1.rowversion                                 objversion
FROM   customer_order_line_tab col1 , delivery_note_pub dnp , cust_order_line_address_2 cola
WHERE  col1.order_no  = cola.order_no
AND    col1.line_no   = cola.line_no
AND    col1.rel_no    = cola.rel_no
AND    col1.line_item_no  = cola.line_item_no
AND    dnp.single_occ_addr_flag  = col1.addr_flag
AND    dnp.order_no = col1.order_no
AND    (((col1.addr_flag = 'N') AND (dnp.receiver_addr_id = col1.ship_addr_no)) OR
        ((col1.addr_flag = 'Y') AND
         (cola.addr_1||'^'||cola.address1||'^'||cola.address2||'^'||cola.address3||'^'||cola.address4||'^'||cola.address5||'^'||cola.address6||'^'||cola.zip_code||'^'||cola.city||'^'||cola.state||'^'||cola.country_code||'^' =
          dnp.receiver_addr_name||'^'||dnp.receiver_address1||'^'||dnp.receiver_address2||'^'||dnp.receiver_address3||'^'||dnp.receiver_address4||'^'||dnp.receiver_address5||'^'||dnp.receiver_address6||'^'||dnp.receiver_zip_code||'^'||dnp.receiver_city||'^'||dnp.receiver_state||'^'||dnp.receiver_country||'^')))
AND    col1.rowstate NOT IN ('Invoiced','Cancelled')
AND    col1.supply_code NOT IN ('PD','IPD')
AND    (col1.line_item_no = 0
OR     (col1.line_item_no < 0
AND    exists (SELECT line_item_no
              FROM   CUSTOMER_ORDER_LINE_TAB col2
              WHERE  col1.order_no = col2.order_no
              AND    col1.line_no = col2.line_no
              AND    col1.rel_no = col2.rel_no
              AND    col2.rowstate != 'Cancelled'
              AND    col2.supply_code NOT IN ('PD', 'IPD')
              AND    col2.line_item_no > 0
              AND    col2.shipment_connected = 'FALSE') ))
AND    col1.shipment_connected = 'FALSE'
AND    EXISTS (SELECT 1
               FROM   user_allowed_site_pub usp
               WHERE  usp.site = col1.contract)
UNION
SELECT cod.delnote_no                                  delnote_no,
       col1.order_no                                   order_no,
       col1.line_no                                    line_no,
       col1.rel_no                                     rel_no,
       col1.line_item_no                               line_item_no,
       col1.contract                                   contract,
       col1.catalog_no                                 catalog_no,
       catalog_desc                                    catalog_desc,
       col1.customer_part_no                           customer_part_no,
       NVL(col1.customer_part_buy_qty, col1.buy_qty_due) buy_qty_due,
       col1.customer_part_conv_factor                  customer_part_conv_factor,
       col1.cust_part_invert_conv_fact                 cust_part_invert_conv_fact,
       DECODE(col1.customer_part_buy_qty, NULL, GREATEST(col1.buy_qty_due - ((col1.qty_shipped - col1.qty_shipdiff)/col1.conv_factor * col1.inverted_conv_factor), 0),
              GREATEST(col1.customer_part_buy_qty - (((col1.qty_shipped - col1.qty_shipdiff)/col1.conv_factor * col1.inverted_conv_factor)/col1.customer_part_conv_factor * NVL(col1.cust_part_invert_conv_fact, 1)),0)) qty_remaining,
       NVL(col1.customer_part_unit_meas, col1.sales_unit_meas)    sales_unit_meas,
       DECODE(col1.customer_part_buy_qty, NULL, (col1.qty_shipped/col1.conv_factor * col1.inverted_conv_factor),
       (col1.qty_shipped/col1.conv_factor * col1.inverted_conv_factor)/col1.customer_part_conv_factor * NVL(col1.cust_part_invert_conv_fact, 1)) qty_delivered,
       DECODE(col1.customer_part_buy_qty, NULL, (col1.qty_picked/col1.conv_factor * col1.inverted_conv_factor),
          (col1.qty_picked/col1.conv_factor * col1.inverted_conv_factor)/col1.customer_part_conv_factor * NVL(col1.cust_part_invert_conv_fact, 1)) qty_picked,
       col1.qty_to_ship                                qty_to_ship,
       col1.conv_factor                                conv_factor,
       col1.inverted_conv_factor                       inverted_conv_factor,
       col1.catalog_type                               catalog_type_db,
       col1.rowid                                      objid,
       col1.rowversion                                 objversion
FROM   CUSTOMER_ORDER_LINE_TAB col1, CUSTOMER_ORDER_DELIVERY_TAB cod
WHERE  col1.order_no  = cod.order_no
AND    col1.line_no   = cod.line_no
AND    col1.rel_no    = cod.rel_no
AND    col1.line_item_no  = cod.line_item_no
AND    supply_code NOT IN ('PD','IPD')
AND    (col1.line_item_no = 0
OR     (col1.line_item_no < 0
AND    exists (SELECT line_item_no
              FROM   CUSTOMER_ORDER_LINE_TAB col2
              WHERE  col1.order_no = col2.order_no
              AND    col1.line_no  = col2.line_no
              AND    col1.rel_no   = col2.rel_no
              AND    col2.rowstate != 'Cancelled'
              AND    col2.supply_code NOT IN ('PD', 'IPD')
              AND    col2.line_item_no > 0) ))
AND    EXISTS (SELECT 1
               FROM   user_allowed_site_pub usp
               WHERE  usp.site = col1.contract);

@DbViewRowLevelSecurity CustomImplemented
VIEW Create_Pre_Ship_Delivery_Note IS
   Prompt = 'Create Pre Ship Delivery Note'
   Contract.Flags = 'PMI--'
   Contract.Datatype = 'STRING(5)/UPPERCASE'
   Contract.Prompt = 'Site'
   Contract.Ref = 'Site/NOCHECK'
   Location_No.Flags = 'PMI--'
   Location_No.Datatype = 'STRING(35)/UPPERCASE'
   Location_No.Prompt = 'Location No'
SELECT DISTINCT cort.contract     contract,
                cort.location_no  location_no
FROM customer_order_tab cot,customer_order_line_tab colt, customer_order_reservation_tab cort
    WHERE cot.order_no  = colt.order_no
      AND colt.order_no = cort.order_no
      AND colt.line_no  = cort.line_no
      AND colt.rel_no   = cort.rel_no
      AND colt.line_item_no = cort.line_item_no
      AND cort.qty_picked > 0
      AND cort.delnote_no IS NULL
      AND cot.use_pre_ship_del_note  = 'TRUE'
      AND colt.shipment_connected = 'FALSE'
      AND NOT EXISTS (
              SELECT 1
               FROM CUST_ORDER_LOAD_LIST_TAB collt, CUST_ORDER_LOAD_LIST_LINE_TAB colllt
              WHERE collt.load_id         = colllt.load_id
                AND collt.load_list_state = 'NOTDEL'
                AND colllt.order_no       = colt.order_no
                AND colllt.line_no        = colt.line_no
                AND colllt.rel_no         = colt.rel_no
                AND colllt.line_item_no   = colt.line_item_no)
       AND    EXISTS (SELECT 1 FROM user_allowed_site_pub
               WHERE cort.contract = site);

@DbViewRowLevelSecurity CustomImplemented
VIEW Deliver_Customer_Order_Diff IS
   Input_Qty.Datatype = 'NUMBER'
   Input_Qty.Flags = 'A----'
   Input_Unit_Meas.Datatype = 'STRING(30)'
   Input_Unit_Meas.Flags = 'A----'
   Input_Conv_Factor.Datatype = 'NUMBER'
   Input_Conv_Factor.Flags = 'A----'
   Input_Variable_Values.Datatype = 'STRING(2000)'
   Input_Variable_Values.Flags = 'A----'
   Multiple_Picking.Datatype = 'STRING(5)'
   Multiple_Picking.Flags = 'A----'

SELECT dco.*, idu.*
FROM deliver_customer_order dco, Deliver_Customer_Order_API.Fetch_Input_Units_To_Deliver(dco.order_no, dco.line_no, dco.rel_no, dco.line_item_no, dco.contract, dco.part_no, dco.location_no, dco.lot_batch_no, dco.serial_no, dco.eng_chg_level, dco.waiv_dev_rej_no, dco.configuration_id, dco.activity_seq, dco.handling_unit_id) idu;
