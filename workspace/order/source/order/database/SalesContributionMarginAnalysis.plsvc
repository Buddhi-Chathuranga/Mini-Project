-----------------------------------------------------------------------------
--
--  Logical unit: SalesContributionMarginAnalysis
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date        Sign    History
--  ------      ------  ---------------------------------------------------------
--  2019-02-08  MaEelk  SCUXXW4-9032, Created
-----------------------------------------------------------------------------

layer Core;

FUNCTION Get_Contribution_After_Discount___(
   total_contribution_ IN NUMBER,
   rounding_           IN NUMBER,
   extra_discount_     IN NUMBER )  RETURN NUMBER
IS
   contribution_ NUMBER := 0;   
BEGIN
   IF (total_contribution_ IS NOT NULL) THEN
      contribution_ := ROUND((total_contribution_ * (1 - extra_discount_ / 100)),rounding_);
   END IF;
   RETURN contribution_;
END Get_Contribution_After_Discount___;

PROCEDURE Create_Contrib_Detail_Lines___ (
   objkey_   IN VARCHAR2,
   order_no_ IN VARCHAR2,
   rounding_ IN NUMBER )
IS
   line_rec_ Customer_Order_Line_Contribution_Margin_Virtual_Rec;
   
   CURSOR get_order_lines IS
      SELECT order_no, line_no, rel_no, line_item_no, contract, cost, catalog_no, buy_qty_due, sales_unit_meas, base_sale_unit_price, sale_unit_price, 
             order_discount, discount, supply_code, condition_code, price_conv_factor, conv_factor, inverted_conv_factor
   FROM customer_order_line
   WHERE order_no = order_no_;   
BEGIN
      FOR order_line_rec_ IN get_order_lines LOOP
         line_rec_.objkey                         := sys_guid();
         line_rec_.parent_objkey                  := objkey_;
         line_rec_.objmodified                    := SYSDATE;
         line_rec_.order_no                       := order_line_rec_.order_no;
         line_rec_.line_no                        := order_line_rec_.line_no;
         line_rec_.rel_no                         := order_line_rec_.rel_no;
         line_rec_.line_item_no                   := order_line_rec_.line_item_no;
         line_rec_.catalog_no                     := order_line_rec_.catalog_no;
         line_rec_.description                    := Sales_Part_API.Get_Catalog_Desc(order_line_rec_.contract,order_line_rec_.catalog_no);   
         line_rec_.cost                           := order_line_rec_.cost;
         line_rec_.contribution_margin_unit       := Customer_Order_Line_API.Get_Unit_Contribution_Margin(order_line_rec_.order_no, 
                                                                                                          order_line_rec_.line_no, 
                                                                                                          order_line_rec_.rel_no, 
                                                                                                          order_line_rec_.line_item_no,
                                                                                                          rounding_,
                                                                                                          0);
         line_rec_.contribution_margin_base       := Customer_Order_Line_API.Get_Base_Contribution_Margin(order_line_rec_.order_no, 
                                                                                                          order_line_rec_.line_no, 
                                                                                                          order_line_rec_.rel_no, 
                                                                                                          order_line_rec_.line_item_no, 
                                                                                                          rounding_,
                                                                                                          0);
         line_rec_.buy_qty_due                    := order_line_rec_.buy_qty_due;
         line_rec_.sales_unit_meas                := order_line_rec_.sales_unit_meas;
         line_rec_.base_sale_unit_price           := order_line_rec_.base_sale_unit_price;
         line_rec_.sale_unit_price                := order_line_rec_.sale_unit_price;
         line_rec_.net_amount_curr                := Customer_Order_Line_API.Get_Sale_Price_Total(order_line_rec_.order_no, 
                                                                                                  order_line_rec_.line_no, 
                                                                                                  order_line_rec_.rel_no, 
                                                                                                  order_line_rec_.line_item_no);
         line_rec_.net_amount_base                := Customer_Order_Line_API.Get_Base_Sale_Price_Total(order_line_rec_.order_no, 
                                                                                                  order_line_rec_.line_no, 
                                                                                                  order_line_rec_.rel_no, 
                                                                                                  order_line_rec_.line_item_no);
         line_rec_.order_discount                 := order_line_rec_.order_discount;
         line_rec_.discount                       := order_line_rec_.discount;
         line_rec_.supply_code                    := Order_Supply_Type_API.Encode(order_line_rec_.supply_code);
         line_rec_.condition_code                 := order_line_rec_.condition_code;
         line_rec_.contract                       := order_line_rec_.contract;
         line_rec_.price_conv_factor              := order_line_rec_.price_conv_factor;
         line_rec_.conv_factor                    := order_line_rec_.conv_factor;
         line_rec_.inverted_conv_factor           := order_line_rec_.inverted_conv_factor;
         CRUD_Create___(line_rec_);
      END LOOP;
   
END Create_Contrib_Detail_Lines___;

PROCEDURE Delete_Contrib_Detail_Lines___ (
   parent_objkey_   IN VARCHAR2 )
IS
   parent_key_  Sales_Contribution_Margin_Virtual_Key;
   child_rec_   Customer_Order_Line_Contribution_Margin_Virtual_Rec;
   child_key_   Customer_Order_Line_Contribution_Margin_Virtual_Key;
   
BEGIN
   parent_key_.objkey := parent_objkey_; 
   FOR contribution_margin_lines_rec_ IN Get_Detail_Contribution_Margin_Lines_Array___(parent_key_) LOOP  
      child_key_.objkey := contribution_margin_lines_rec_.objkey;
      child_rec_        := Get_Record___(child_key_);
      CRUD_Delete___(child_rec_);
   END LOOP;
END Delete_Contrib_Detail_Lines___;
   
PROCEDURE Update_Contrib_Detail_Lines___ (
   parent_objkey_  IN VARCHAR2,
   rounding_       IN NUMBER,
   extra_discount_ IN NUMBER )   
IS
   parent_key_  Sales_Contribution_Margin_Virtual_Key;
   old_child_rec_   Customer_Order_Line_Contribution_Margin_Virtual_Rec;
   old_child_key_   Customer_Order_Line_Contribution_Margin_Virtual_Key;
   new_child_rec_   Customer_Order_Line_Contribution_Margin_Virtual_Rec;
   
BEGIN
   parent_key_.objkey := parent_objkey_; 
   FOR contribution_margin_lines_rec_ IN Get_Detail_Contribution_Margin_Lines_Array___(parent_key_) LOOP  
      old_child_key_.objkey := contribution_margin_lines_rec_.objkey;
      old_child_rec_        := Get_Record___(old_child_key_);
      new_child_rec_        := old_child_rec_;
      new_child_rec_.objmodified                    := SYSDATE;
      new_child_rec_.contribution_margin_unit   := Customer_Order_Line_API.Get_Unit_Contribution_Margin(new_child_rec_.order_no, 
                                                                                                        new_child_rec_.line_no, 
                                                                                                        new_child_rec_.rel_no, 
                                                                                                        new_child_rec_.line_item_no, 
                                                                                                        rounding_,
                                                                                                        extra_discount_);
      new_child_rec_.contribution_margin_base   := Customer_Order_Line_API.Get_Base_Contribution_Margin(new_child_rec_.order_no, 
                                                                                                        new_child_rec_.line_no, 
                                                                                                        new_child_rec_.rel_no, 
                                                                                                        new_child_rec_.line_item_no, 
                                                                                                        rounding_,
                                                                                                        extra_discount_);                                                                                                  
      CRUD_Update___(old_child_rec_, new_child_rec_ );   
   END LOOP;
   
END Update_Contrib_Detail_Lines___;

@Override
PROCEDURE CRUD_Update___(
   old_ IN Sales_Contribution_Margin_Virtual_Rec,
   new_ IN Sales_Contribution_Margin_Virtual_Rec )
IS 
   order_no_changed_       BOOLEAN := Validate_SYS.Is_Changed(old_.order_no, new_.order_no);
   extra_discount_changed_ BOOLEAN := Validate_SYS.Is_Changed(old_.extra_discount, new_.extra_discount);
   new_rec_                Sales_Contribution_Margin_Virtual_Rec;   
   order_rec_              Customer_Order_API.Public_Rec;
   company_ VARCHAR2(20);
   
BEGIN
   new_rec_ := new_;
   IF (order_no_changed_) THEN
      order_rec_ := Customer_Order_API.Get(new_rec_.order_no);
      new_rec_.total_net_base := Customer_Order_API.Get_Total_Base_Price(new_rec_.order_no);
      new_rec_.contribution_margin_base := Customer_Order_API.Get_Total_Contribution(new_rec_.order_no);
      new_rec_.contribution := new_rec_.contribution_margin_base;
      new_rec_.contract := order_rec_.contract;
      new_rec_.customer_no := order_rec_.customer_no;
      new_rec_.customer_name := Cust_Ord_Customer_API.Get_Name(order_rec_.customer_no);
      company_ := Site_API.Get_Company(order_rec_.contract);
      new_rec_.rounding := Currency_Code_API.Get_Currency_Rounding(company_,Company_Finance_API.Get_Currency_Code(company_));
      new_rec_.extra_discount := 0;
   ELSIF (extra_discount_changed_) THEN
      IF (new_rec_.extra_discount IS NULL) THEN
         Error_SYS.Check_Not_Null(lu_name_, 'EXTRA_DISCOUNT', new_rec_.extra_discount);      
      END IF;
      IF (new_rec_.order_no IS NULL) THEN
         Error_SYS.Check_Not_Null(lu_name_, 'ORDER_NO', new_rec_.order_no); 
      END IF;
      new_rec_.contribution_margin_base := Get_Contribution_After_Discount___(new_rec_.contribution, new_rec_.rounding, new_rec_.extra_discount);
   END IF;
   
   super(old_, new_rec_);
   IF (new_rec_.order_no IS NOT NULL) THEN
      IF (old_.order_no IS NULL) THEN
         Create_Contrib_Detail_Lines___(new_rec_.objkey, new_.order_no, new_rec_.rounding);
      ELSIF (order_no_changed_) THEN
         Delete_Contrib_Detail_Lines___(old_.objkey);
         Create_Contrib_Detail_Lines___(new_rec_.objkey, new_rec_.order_no, new_rec_.rounding);
      ELSIF (extra_discount_changed_) THEN 
         Update_Contrib_Detail_Lines___(new_rec_.objkey, new_rec_.rounding, new_rec_.extra_discount);
      END IF;
   ELSE
      Delete_Contrib_Detail_Lines___(old_.objkey);
   END IF;
END CRUD_Update___;

