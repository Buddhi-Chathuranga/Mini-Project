-----------------------------------------------------------------------------
--
--  Logical unit: CreateCustomerOrderReservationsHandling
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  181204  RAKUSE  Created. (SCUXXW4-8640)
-----------------------------------------------------------------------------

layer Core;

@Override
FUNCTION Get_Parameters___ RETURN Parameters_Structure_Rec
IS
   method_name_ VARCHAR2(200) := 'RESERVE_CUSTOMER_ORDER_API.BATCH_RESERVE_ORDERS__';
   rec_ Parameters_Structure_Rec := super();
   msg_ VARCHAR2(32000);   
BEGIN
   rec_.SCHEDULE_METHOD_ID := Batch_Schedule_Method_API.Get_Schedule_Method_Id(method_name_);
   rec_.DESCRIPTION := Batch_Schedule_Method_API.Get_Description(rec_.SCHEDULE_METHOD_ID);
            
   Batch_Schedule_Method_Par_API.Get_Default_Values__(msg_, rec_.SCHEDULE_METHOD_ID);

   Message_SYS.Get_Attribute(msg_, 'PLANNED_DUE_DATE', rec_.PLANNED_DUE_DATE);
   Message_SYS.Get_Attribute(msg_, 'CONTRACT', rec_.CONTRACT);
   Message_SYS.Get_Attribute(msg_, 'EXECUTION_OFFSET', rec_.EXECUTION_OFFSET);
   
   IF rec_.EXECUTION_OFFSET IS NULL THEN
      rec_.EXECUTION_OFFSET :=0;
   END IF;
   
   Message_SYS.Get_Attribute(msg_, 'ORDER_TYPE', rec_.ORDER_TYPE);
   Message_SYS.Get_Attribute(msg_, 'COORDINATOR', rec_.COORDINATOR);
   Message_SYS.Get_Attribute(msg_, 'PRIORITY', rec_.PRIORITY);
   Message_SYS.Get_Attribute(msg_, 'DELIVER_TO_CUSTOMER_NO', rec_.DELIVER_TO_CUSTOMER_NO);
   Message_SYS.Get_Attribute(msg_, 'DELIVERY_ADDRESS', rec_.DELIVERY_ADDRESS);
   Message_SYS.Get_Attribute(msg_, 'ROUTE_ID', rec_.ROUTE_ID);
   Message_SYS.Get_Attribute(msg_, 'FORWARD_AGENT_ID', rec_.FORWARD_AGENT_ID);
   Message_SYS.Get_Attribute(msg_, 'PART_NO', rec_.PART_NO);
   Message_SYS.Get_Attribute(msg_, 'SHIP_VIA', rec_.SHIP_VIA);
   
   --Message_SYS.Get_Attribute(msg_, 'RESERVE_ALL_LINES_CO', rec_.RESERVE_ALL_LINES_CO);
   Message_Find_Boolean___(msg_, 'RESERVE_ALL_LINES_CO', rec_.RESERVE_ALL_LINES_CO);
   --Message_SYS.Get_Attribute(msg_, 'FAIR_SHARE_RES', rec_.FAIR_SHARE_RES);
   Message_Find_Boolean___(msg_, 'FAIR_SHARE_RES', rec_.FAIR_SHARE_RES);
   
   Message_SYS.Get_Attribute(msg_, 'CATALOG_TYPE', rec_.CATALOG_TYPE);


   RETURN rec_;
END Get_Parameters___;

FUNCTION Construct_Param_Attr___ (
   virt_rec_ IN OUT Task_Virtual_Rec ) RETURN VARCHAR2
IS
   attr_ VARCHAR2(32000);
BEGIN
   
   
   Empty_When_Schedule_Option___(virt_rec_, virt_rec_.PLANNED_DUE_DATE);
   Client_SYS.Add_To_Attr('PLANNED_DUE_DATE', virt_rec_.PLANNED_DUE_DATE, attr_); 
   
   Empty_When_Start_Now_Option___(virt_rec_, virt_rec_.EXECUTION_OFFSET);
   Client_SYS.Add_To_Attr('EXECUTION_OFFSET', virt_rec_.EXECUTION_OFFSET, attr_);
   
   Client_SYS.Add_To_Attr('CONTRACT', virt_rec_.CONTRACT, attr_);
   Client_SYS.Add_To_Attr('ORDER_TYPE', virt_rec_.ORDER_TYPE, attr_);
   Client_SYS.Add_To_Attr('COORDINATOR', virt_rec_.COORDINATOR, attr_);
   
   IF virt_rec_.PRIORITY != '%' AND is_number(virt_rec_.PRIORITY) = FALSE THEN
      virt_rec_.PRIORITY := NULL;
   END IF;   
   Client_SYS.Add_To_Attr('PRIORITY', virt_rec_.PRIORITY, attr_);
   
   Client_SYS.Add_To_Attr('DELIVER_TO_CUSTOMER_NO', virt_rec_.DELIVER_TO_CUSTOMER_NO, attr_);
   Client_SYS.Add_To_Attr('DELIVERY_ADDRESS', virt_rec_.DELIVERY_ADDRESS, attr_);
   Client_SYS.Add_To_Attr('ROUTE_ID', virt_rec_.ROUTE_ID, attr_);
   Client_SYS.Add_To_Attr('FORWARD_AGENT_ID', virt_rec_.FORWARD_AGENT_ID, attr_);
   Client_SYS.Add_To_Attr('PART_NO', virt_rec_.PART_NO, attr_);
   Client_SYS.Add_To_Attr('SHIP_VIA', virt_rec_.SHIP_VIA, attr_);
   
   --Client_SYS.Add_To_Attr('RESERVE_ALL_LINES_CO', virt_rec_.RESERVE_ALL_LINES_CO, attr_);
   Add_To_Attr_Boolean___('RESERVE_ALL_LINES_CO', virt_rec_.RESERVE_ALL_LINES_CO, attr_);
   --Client_SYS.Add_To_Attr('FAIR_SHARE_RES', virt_rec_.FAIR_SHARE_RES, attr_);
   Add_To_Attr_Boolean___('FAIR_SHARE_RES', virt_rec_.FAIR_SHARE_RES, attr_);
   
   --Need to pass through the client value... 
   virt_rec_.CATALOG_TYPE := Sales_Part_Type_API.Decode(virt_rec_.CATALOG_TYPE);
   Client_SYS.Add_To_Attr('CATALOG_TYPE', virt_rec_.CATALOG_TYPE, attr_);
   RETURN attr_;
END Construct_Param_Attr___;


FUNCTION Validate_Priority___(
   priority_val_ IN VARCHAR2 )  RETURN BOOLEAN
IS
   return_ BOOLEAN := FALSE;
   prio_ NUMBER;
BEGIN
   IF priority_val_ IS NULL OR priority_val_ = '%' THEN
      return_ := TRUE;
   ELSIF is_number(priority_val_) THEN
      prio_ := TO_NUMBER(priority_val_);
      IF prio_ < 0 THEN
         return_ := FALSE;
      ELSE
         return_ := TRUE;
         END IF;
   END IF;  
   RETURN return_;
END Validate_Priority___;


FUNCTION is_number (str_val_ IN VARCHAR2)
  RETURN BOOLEAN
IS
  num_val_ NUMBER;
BEGIN
  num_val_ := TO_NUMBER(str_val_);
  RETURN TRUE;
EXCEPTION
WHEN VALUE_ERROR THEN
  RETURN FALSE;
END is_number;
