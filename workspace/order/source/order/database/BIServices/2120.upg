---------------------------------------------------------------------------------------------
--  Module : ORDER
--
--  Purpose: Upgrade database objects for IFS/Customer Orders
--           from version 21.1.0 to 21.2.0
--
--  File   : 2120.upg
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  ------------------------------------------------------------------------
--  210513   hapulk  SC21R2-804, Created Template file.
--  201119   MalLlk  SC2020R1-11295, Drop and recreate materialized views RETURN_MATERIAL_LINE_MV and
--  201119           RETURN_MATERIAL_CHARGE_MV, to include CAST function correctly.
--  ------   ------  ------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SET SERVEROUTPUT ON
exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2120.upg','Timestamp_1');
PROMPT START upgrading WITH 2120.upg

---------------------------------------------------------------------------------------------
------------------------------ Instructions for upg files -----------------------------------
---------------------------------------------------------------------------------------------
--
--  Main section should contain all upgrade operations.
--  Next section should contain removal of obsolete objects (any removal of data inside upg is prohibited!).
--  Removal of backup tables and obsolete columns should be added to <component>Cl.sql script!
--
--  If possible, everything regarding one table should be placed in one section.
--  If this is not possible, a proper comment about the reason should be added.
--
--  Each section should be started with a "-----" line and a empty line.
--  This section should then start with a line like: "-- ***** Example_Tab Start *****"
--  and end with a line like:                       "-- ***** Example_Tab End *****"
--
--  Don't forget UPPER/lower case !
--
--  Every part inside the section should start with a "PROMPT" line explaining what is done by the block.
--
--  If the PL/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.
--
--  Remember ordinary coding standard rules !
--
--  Don't drop any Table/Column !
--
--  Don't forget performance when updating large table !
--
--  No unnecessary blank lines or comments !
--
--  If possible, use pure SQL commands
--
--  If possible, try to group several updates together in one statement.
--
--  Timestamps will be added automatically at the end of the project.
--
--  For more information refer to the "Upgrade Script Standards" and the "Performance" technical documents.
--
---------------------------------------------------------------------------------------------

DEFINE RML_MV  = RETURN_MATERIAL_LINE_MV
DEFINE RMC_MV  = RETURN_MATERIAL_CHARGE_MV

---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES -----------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
--------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ------------------
---------------------------------------------------------------------------------------------

-- ***** RETURN_MATERIAL_LINE_MV Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2120.upg','Timestamp_2');
PROMPT DROP AND CREATE RETURN_MATERIAL_LINE_MV
DECLARE
   stmt_                    VARCHAR2(32000);
   columns_                 Database_SYS.ColumnTabType;
   table_name_              VARCHAR2(30) := '&RML_MV';
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &RML_MV');
   Database_SYS.Remove_All_Cons_And_Idx('&RML_MV', TRUE);

   dbms_output.put_line('Drop Materialized View &RML_MV');
   Database_SYS.Remove_Materialized_View('&RML_MV', TRUE);

   dbms_output.put_line('Create Materialized View &RML_MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &RML_MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING INDEX TABLESPACE &IFSAPP_INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT TO_CHAR(l.rma_no)||''^''||TO_CHAR(l.rma_line_no)                                                                                                                                            id,
              l.rma_no                                                                                                                                                                                    rma_no_key,
              l.rma_line_no                                                                                                                                                                               rma_line_no_key,
              CAST (l.qty_received AS NUMBER)                                                                                                                                                             qty_received,
              CAST (l.qty_received_inv_uom AS NUMBER)                                                                                                                                                     inv_qty_received,
              CAST (l.qty_to_return AS NUMBER)                                                                                                                                                            qty_to_return,
              CAST (l.qty_to_return_inv_uom AS NUMBER)                                                                                                                                                    inv_qty_to_return,
              CAST (l.qty_scrapped AS NUMBER)                                                                                                                                                             inv_qty_scrapped,
              CAST (l.qty_returned_inv AS NUMBER)                                                                                                                                                         inv_qty_returned,
              CAST (l.conv_factor AS NUMBER)                                                                                                                                                              conv_factor,
              CAST (l.inverted_conv_factor AS NUMBER)                                                                                                                                                     inverted_conv_factor,
              CAST (ROUND(l.sale_unit_price, Currency_Code_API.Get_Currency_Rounding(l.company, Company_Finance_API.Get_Currency_Code(l.company))) AS NUMBER)                                             sale_unit_price,
              CAST (ROUND(l.unit_price_incl_tax, Currency_Code_API.Get_Currency_Rounding(l.company, Company_Finance_API.Get_Currency_Code(l.company))) AS NUMBER)                                         unit_price_incl_tax,
              CAST (ROUND(l.base_sale_unit_price, Currency_Code_API.Get_Currency_Rounding(l.company, Company_Finance_API.Get_Currency_Code(l.company))) AS NUMBER)                                        base_sale_unit_price,
              CAST (ROUND(l.base_unit_price_incl_tax, Currency_Code_API.Get_Currency_Rounding(l.company, Company_Finance_API.Get_Currency_Code(l.company))) AS NUMBER)                                    base_unit_price_incl_tax,
              CAST (ROUND(Return_Material_Line_API.Get_Line_Total_Base_Price(l.rma_no,l.rma_line_no), Currency_Code_API.Get_Currency_Rounding(l.company, Company_Finance_API.Get_Currency_Code(l.company))) AS NUMBER)     net_amount_base,
              CAST (ROUND(Return_Material_Line_API.Get_Total_Base_Price_Incl_Tax(l.rma_no,l.rma_line_no), Currency_Code_API.Get_Currency_Rounding(l.company, Company_Finance_API.Get_Currency_Code(l.company))) AS NUMBER) gross_amount_base,
              CAST (ROUND(Return_Material_Line_API.Get_Line_Total_Price(l.rma_no,l.rma_line_no), Currency_Code_API.Get_Currency_Rounding(l.company, Company_Finance_API.Get_Currency_Code(l.company))) AS NUMBER)          net_amount_curr,
              CAST (ROUND(Return_Material_Line_API.Get_Line_Total_Price_Incl_Tax(l.rma_no,l.rma_line_no), Currency_Code_API.Get_Currency_Rounding(l.company, Company_Finance_API.Get_Currency_Code(l.company))) AS NUMBER) gross_amount_curr,
              CAST (l.currency_rate AS NUMBER)                                                                                                                                                            currency_rate,
              CAST (DECODE(l.rowstate,''Denied'',0,1) AS NUMBER)                                                                                                                                          count_order_line,
              CAST (DECODE(SIGN(l.qty_returned_inv),1,1,0) AS NUMBER)                                                                                                                                     count_returns_to_inventory,
              CAST (DECODE(SIGN(l.qty_returned_inv),1,1,0) AS NUMBER)                                                                                                                                     count_returns_to_scrap,
              l.rma_no                                                                                                                                                                                    rma_no,
              l.rma_line_no                                                                                                                                                                               rma_line_no,
              l.rowstate                                                                                                                                                                                  state,
              Return_Material_Line_api.Finite_State_Decode__(l.rowstate)                                                                                                                                  state_desc,
              l.inspection_info                                                                                                                                                                           inspection_info,
              l.credit_invoice_no                                                                                                                                                                         credit_invoice_no,
              l.credit_invoice_item_id                                                                                                                                                                    credit_invoice_item_id,
              l.debit_invoice_no                                                                                                                                                                          debit_invoice_no,
              l.debit_invoice_item_id                                                                                                                                                                     debit_invoice_item_id,
              l.order_no                                                                                                                                                                                  order_no,
              l.line_no                                                                                                                                                                                   line_no,
              l.rel_no                                                                                                                                                                                    rel_no,
              l.line_item_no                                                                                                                                                                              line_item_no,
              l.purchase_order_no                                                                                                                                                                         purchase_order_no,
              l.replacement_order_no                                                                                                                                                                      replacement_order_no,
              l.replacement_line_no                                                                                                                                                                       replacement_line_no,
              l.replacement_rel_no                                                                                                                                                                        replacement_rel_no,
              l.replacement_line_item_no                                                                                                                                                                  replacement_line_item_no,
              h.cust_ref                                                                                                                                                                                  cust_ref,
              l.rental                                                                                                                                                                                    rental,
              h.contract                                                                                                                                                                                  dim_site_id,
              h.customer_no                                                                                                                                                                               dim_customer_id,
              l.contract||''^''||l.catalog_no                                                                                                                                                             dim_sales_part_id,
              NVL(l.condition_code, ''#'')                                                                                                                                                                dim_condition_code_id,
              l.company || ''^'' || h.currency_code                                                                                                                                                       dim_currency_code_id,
              NVL(l.return_reason_code, ''#'')                                                                                                                                                            dim_return_material_reason_id,
              DECODE(l.part_no, NULL, ''#^#'', l.part_no||''^''||DECODE(l.configuration_id, ''*'', ''#'', l.configuration_id))                                                                            dim_configuration_spec_id,
              l.company||''^''||NVL(l.delivery_type,''#'')                                                                                                                                                dim_delivery_type_id,
              NVL(h.return_approver_id, ''#'')                                                                                                                                                            dim_return_approver_id,
              NVL(l.credit_approver_id, ''#'')                                                                                                                                                            dim_credit_approver_id,
               TRUNC(h.date_requested)                                                                                                                                                                    dim_rm_date_requested_id,
              NVL(TRUNC(l.date_returned), TO_DATE(''1900-01-01'',''YYYY-MM-DD'',''NLS_CALENDAR=Gregorian''))                                                                                              dim_rml_date_returned_id,
              l.company||''^''||TO_CHAR(TRUNC(NVL(l.date_returned,h.date_requested)),''YYYY-MM-DD'')                                                                                                      dim_rpd_company_period_id,
              TRUNC(NVL(l.date_returned,h.date_requested))                                                                                                                                                dim_rpd_period_id,
              NVL(Customer_Order_Line_API.Get_Project_Id(l.order_no, l.line_no, l.rel_no, l.line_item_no), ''#'')                                                                                         dim_project_id,
              NVL(TO_NUMBER(Customer_Order_Line_API.Get_Activity_Seq(l.order_no, l.line_no, l.rel_no, l.line_item_no)), 0)                                                                                dim_activity_id,
              l.company                                                                                                                                                                                   company,
              h.contract                                                                                                                                                                                  site,
              h.customer_no                                                                                                                                                                               customer,
              l.catalog_no                                                                                                                                                                                sales_part,
              l.condition_code                                                                                                                                                                            condition_code,
              h.currency_code                                                                                                                                                                             currency_code,
              l.return_reason_code                                                                                                                                                                        return_material_reason,
              l.configuration_id                                                                                                                                                                          configuration_spec,
              l.delivery_type                                                                                                                                                                             delivery_type,
              h.return_approver_id                                                                                                                                                                        return_approver,
              l.credit_approver_id                                                                                                                                                                        credit_approver,
              TRUNC(h.date_requested)                                                                                                                                                                     rm_date_requested,
              TRUNC(l.date_returned)                                                                                                                                                                      rml_date_returned,
              TRUNC(NVL(l.date_returned,h.date_requested))                                                                                                                                                reporting_date,
              Customer_Order_Line_API.Get_Project_Id(l.order_no, l.line_no, l.rel_no, l.line_item_no)                                                                                                     project,
              Customer_Order_Line_API.Get_Activity_Seq(l.order_no, l.line_no, l.rel_no, l.line_item_no)                                                                                                   activity,
              TO_CHAR(l.rma_no) || ''^'' || TO_CHAR(l.rma_line_no)                                                                                                                                        objid,
              l.company                                                                                                                                                                                   dim_company_id
       FROM RETURN_MATERIAL_TAB h, RETURN_MATERIAL_LINE_TAB l
       WHERE h.rma_no = l.rma_no';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2120.upg','Timestamp_3');
PROMPT Create constraints and indexs on Materialized View RETURN_MATERIAL_LINE_MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&RML_MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'rma_no_key');
   Database_SYS.Set_Table_Column (columns_ , 'rma_line_no_key');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);   
   Database_SYS.Reset_Column_Table(columns_);
   
   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'DIM_COMPANY_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX2';
   Database_SYS.Set_Table_Column (columns_, 'DIM_SITE_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX3';
   Database_SYS.Set_Table_Column (columns_, 'DIM_CUSTOMER_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX4';
   Database_SYS.Set_Table_Column (columns_, 'DIM_SALES_PART_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX5';
   Database_SYS.Set_Table_Column (columns_, 'DIM_CONDITION_CODE_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX6';
   Database_SYS.Set_Table_Column (columns_, 'DIM_CURRENCY_CODE_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX7';
   Database_SYS.Set_Table_Column (columns_, 'DIM_RETURN_MATERIAL_REASON_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX8';
   Database_SYS.Set_Table_Column (columns_, 'DIM_CONFIGURATION_SPEC_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX9';
   Database_SYS.Set_Table_Column (columns_, 'DIM_DELIVERY_TYPE_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX10';
   Database_SYS.Set_Table_Column (columns_, 'DIM_RETURN_APPROVER_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX11';
   Database_SYS.Set_Table_Column (columns_, 'DIM_CREDIT_APPROVER_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX12';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_PROJECT_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);
   
   index_name_ := table_name_ || '_IX13';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_ACTIVITY_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);
END;
/
-- ***** RETURN_MATERIAL_LINE_MV End *****


-- ***** RETURN_MATERIAL_CHARGE_MV Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2120.upg','Timestamp_4');
PROMPT DROP AND CREATE RETURN_MATERIAL_CHARGE_MV
DECLARE
   stmt_                    VARCHAR2(32000);
   columns_                 Database_SYS.ColumnTabType;
   table_name_              VARCHAR2(30) := '&RMC_MV';
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &RMC_MV');
   Database_SYS.Remove_All_Cons_And_Idx('&RMC_MV', TRUE);

   dbms_output.put_line('Drop Materialized View &RMC_MV');
   Database_SYS.Remove_Materialized_View('&RMC_MV', TRUE);

   dbms_output.put_line('Create Materialized View &RMC_MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &RMC_MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING INDEX TABLESPACE &IFSAPP_INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT TO_CHAR(c.rma_no)||''^''||TO_CHAR(c.rma_charge_no)                                                                                      id,
              c.rma_no                                                                                                                                rma_no_key,
              c.rma_charge_no                                                                                                                         rma_charge_no_key,
              CAST (c.base_charge_amount AS NUMBER)                                                                                                   charge_amount_base,
              CAST (c.base_charge_amt_incl_tax AS NUMBER)                                                                                             charge_amount_incl_tax_base,
              CAST (c.charge_amount AS NUMBER)                                                                                                        charge_amount_curr,
              CAST (c.charge_amount_incl_tax AS NUMBER)                                                                                               charge_amount_incl_tax_curr,
              CAST (c.charge AS NUMBER)                                                                                                               charge,
              CAST (c.charged_qty AS NUMBER)                                                                                                          charged_qty,
              CAST (c.credited_qty AS NUMBER)                                                                                                         credited_qty,
              CAST (c.base_charge_percent_basis AS NUMBER)                                                                                            base_charge_percent_basis,
              CAST (c.charge_percent_basis AS NUMBER)                                                                                                 charge_percent_basis,
              CAST (c.charge_cost AS NUMBER)                                                                                                          charge_cost,
              CAST (c.charge_cost_percent AS NUMBER)                                                                                                  charge_cost_percent,
              CAST (Return_Material_Charge_API.Get_Total_Base_Charged_Amount(c.rma_no,c.rma_charge_no)  AS NUMBER)                                    net_amount_base,
              CAST (Return_Material_Charge_API.Get_Tot_Charged_Amt_Incl_Tax(c.rma_no,c.rma_charge_no) AS NUMBER)                                      gross_amount_base,
              CAST (Return_Material_Charge_API.Get_Total_Charged_Amount(c.rma_no,c.rma_charge_no) AS NUMBER)                                          net_amount_curr,
              CAST (Return_Material_Charge_API.Get_Total_Charged_Amt_Incl_Tax(c.rma_no,c.rma_charge_no) AS NUMBER)                                    gross_amount_curr,
              CAST (DECODE(c.rowstate,''Denied'',0,1) AS NUMBER)                                                                                      count_charge_line,
              CAST (DECODE(c.rowstate,''Credited'',1,0) AS NUMBER)                                                                                    count_credited_charge_line,
              CAST (DECODE(c.rowstate,''Denied'',1,0) AS NUMBER)                                                                                      count_denied_charge_line,
              CAST (DECODE(c.rowstate,''Planned'',1,0) AS NUMBER)                                                                                     count_planned_charge_line,
              CAST (DECODE(c.rowstate,''Released'',1,0) AS NUMBER)                                                                                    count_released_charge_line,
              c.rma_no                                                                                                                                rma_no,
              c.rma_charge_no                                                                                                                         rma_charge_no,
              c.rma_line_no                                                                                                                           rma_line_no,
              c.order_no                                                                                                                              order_no,
              c.sequence_no                                                                                                                           sequence_no,
              c.rowstate                                                                                                                              state,
              Return_Material_Charge_Api.Finite_State_Decode__(c.rowstate)                                                                            state_desc,
              c.credit_invoice_no                                                                                                                     credit_invoice_no,
              c.credit_invoice_item_id                                                                                                                credit_invoice_item_id,
              r.cust_ref                                                                                                                              cust_ref,
              r.customer_no_credit                                                                                                                    customer_no_credit,
              c.sales_unit_meas                                                                                                                       sales_unit_meas,
              NVL(c.delivery_type,''#'')                                                                                                              dim_customer_id,
              c.delivery_type                                                                                                                         dim_delivery_type_id,
              NVL(r.return_approver_id,''#'')                                                                                                         dim_return_approver_id,
              NVL(c.credit_approver_id,''#'')                                                                                                         dim_credit_approver_id,
              c.contract || ''^'' || c.charge_type                                                                                                    dim_sales_charge_type_id,
              Sales_Charge_Type_API.Get_Charge_Group(c.contract,c.charge_type)                                                                        dim_sales_charge_group_id,
              c.company||''^''||r.currency_code                                                                                                   dim_currency_code_id,
              TRUNC(c.date_entered)                                                                                                                   dim_rmc_date_entered_id,
              NVL(TRUNC(NVL(Return_Material_Line_API.Get_Date_Returned(c.rma_no,c.rma_line_no),c.date_entered)),
         TO_DATE(''1900-01-01'',''YYYY-MM-DD'',''NLS_CALENDAR=Gregorian''))                                                                           dim_rml_date_returned_id,
              c.company||''^''||TO_CHAR(TRUNC(NVL(Return_Material_Line_API.Get_Date_Returned(c.rma_no,c.rma_line_no),c.date_entered)),''YYYY-MM-DD'') dim_rpd_company_period_id,
              TRUNC(NVL(Return_Material_Line_API.Get_Date_Returned(c.rma_no,c.rma_line_no),c.date_entered))                                           dim_rpd_period_id,
              TO_CHAR(c.rma_no) || ''^'' || TO_CHAR(c.rma_charge_no)                                                                                  objid,
              NVL(Customer_Order_Charge_API.Get_Co_Line_Activity_Seq(c.order_no,c.sequence_no),0)                                                     dim_activity_id,
              c.company                                                                                                                               company,
              c.contract                                                                                                                              site,
              r.customer_no                                                                                                                           customer,
              c.delivery_type                                                                                                                         delivery_type,
              r.return_approver_id                                                                                                                    return_approver,
              c.credit_approver_id                                                                                                                    credit_approver,
              c.charge_type                                                                                                                           sales_charge_type,
              Sales_Charge_Type_API.Get_Charge_Group(c.contract,c.charge_type)                                                                        sales_charge_group,
              r.currency_code                                                                                                                         currency_code,
              TRUNC(c.date_entered)                                                                                                                   rmc_date_entered,
              TRUNC(NVL(Return_Material_Line_API.Get_Date_Returned(c.rma_no,c.rma_line_no),c.date_entered))                                           rml_date_returned,
              TRUNC(NVL(Return_Material_Line_API.Get_Date_Returned(c.rma_no,c.rma_line_no),c.date_entered))                                           reporting_date,
              Customer_Order_Charge_API.Get_Co_Line_Project_Id(c.order_no,c.sequence_no)                                                              project,
              Customer_Order_Charge_API.Get_Co_Line_Activity_Seq(c.order_no,c.sequence_no)                                                            activity,
              c.contract                                                                                                                              dim_site_id,
              c.company                                                                                                                               dim_company_id,
              NVL(Customer_Order_Charge_API.Get_Co_Line_Project_Id(c.order_no,c.sequence_no),''#'')                                                   dim_project_id
       FROM RETURN_MATERIAL_CHARGE_TAB c, RETURN_MATERIAL_TAB r
       WHERE c.rma_no = r.rma_no';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2120.upg','Timestamp_5');
PROMPT Create constraints and indexs on Materialized View RETURN_MATERIAL_CHARGE_MV

DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&RMC_MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'rma_no_key');
   Database_SYS.Set_Table_Column (columns_ , 'rma_charge_no_key');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);
   
   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'DIM_COMPANY_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX2';
   Database_SYS.Set_Table_Column (columns_, 'DIM_SITE_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX3';
   Database_SYS.Set_Table_Column (columns_, 'DIM_CUSTOMER_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX4';
   Database_SYS.Set_Table_Column (columns_, 'DIM_SALES_CHARGE_TYPE_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX5';
   Database_SYS.Set_Table_Column (columns_, 'DIM_SALES_CHARGE_GROUP_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX6';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_PROJECT_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);
   
   index_name_ := table_name_ || '_IX7';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_ACTIVITY_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);
END;
/
-- ***** RETURN_MATERIAL_CHARGE_MV End *****

---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES/COLUMNS -----------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE INDEXES/SEQUENCES ------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
UNDEFINE RML_MV
UNDEFINE RMC_MV

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2120.upg','Timestamp_6');
PROMPT Upgrade statements IN FILE 2120.upg ends here.

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2120.upg','Done');
