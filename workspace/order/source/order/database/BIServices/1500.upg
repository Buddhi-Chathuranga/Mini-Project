------------------------------------------------------------------------------------------
--
--  Filename      : 1500.upg
--
--  Module        : ORDER
--
--  Purpose       : File for upgrade BI Services
--
--  Date    Sign    History
--  ------  ------  ----------------------------------------------------------------------
--  210223  MalLlk  SC2020R1-12681, Modified Materialized View creation to support Oracle Edition-Based Redefinition.
--  171013  MeAblk  STRSC-11837, Added SALES_QUOTATION_LINE_MVT, ORDER_QUOTE_LINE_CMV, ORDER_QUOTE_LINE_DISC_CMV.
--  170321  MeAblk  STRSC-6770, Added columns count_agreement_order, count_pricelist_order, count_campaign_order, count_baseprice_order
--  170321          into the table  CUSTOMER_ORDER_LINE_MVT.
--  160705  MaIklk  LIM-7670, Moved CUSTOMER_ORDER_DEL_NOTE_MV to 1500.upg in SHPMNT.
--  160609  reanpl  STRLOC-428, Added new attributes address3..address6 to CUST_ORDER_LOAD_LIST_MV
--  160609  MaIklk  LIM-7442, Renamed Customer_Order_Deliv_Note_Tab to Delivery_Note_Tab and recreate relevant MV view.
--  150119  NiAslk  STRSC-889, Removed PAY_TAX column in FactCustomerOrderLine, adding it to UPG
--  150114  NiAslk  STRSC-835, Adding FactCustomerOrderLine FEE_CODE to TAX_CODE name change to UPG
--  120329  RoJalk  STRSC-423, Moving Support/After9 CDB into new UPG in ORDER.
--  151214  RoJalk  Created.
------------------------------------------------------------------------------------------

SET SERVEROUTPUT ON
exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_1');
PROMPT 1500.upg

------------------------------------------------------------------------------------------

-- Upgrade sections:
-- Upgrade sections:
-- Upgrade sections:
-- Upgrade sections:
-- Upgrade sections:
-- Upgrade sections:

------------------------------------------------------------------------------------------

-- ***** CUSTOMER_ORDER_DELIV_MVT Start *****

DEFINE MVT_TABLE   = CUSTOMER_ORDER_DELIV_MVT
DEFINE LU          = BiFactCustomerOrderDeliv

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_2');
PROMPT Create snapshot table &MVT_TABLE
DECLARE
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := '&MVT_TABLE';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_,'DELIV_NO_KEY', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_,'QTY_SHIPPED', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CATCH_QTY_SHIPPED', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'QTY_CONFIRMED_ARRIVED', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'QTY_CONFIRMED_SBI', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'QTY_INVOICED', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'QTY_TO_INVOICE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_DELIVERY_LINE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DELIV_NO', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ORDER_NO', 'VARCHAR2(12)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'LINE_NO', 'VARCHAR2(4)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'REL_NO', 'VARCHAR2(4)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'LINE_ITEM_NO', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SHIPMENT_ID', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SHIP_ADDR_NO', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DEL_TERMS_LOCATION', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'AIRWAY_BILL_NO', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COMPONENT_INVOICE_FLAG', 'VARCHAR2(1)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DELIVERY_NOTE_REF', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'RENTAL', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_COMPANY_ID', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SITE_ID', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_MPCCOM_SHIP_VIA_ID', 'VARCHAR2(3)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_ORDER_DELIVERY_TERM_ID', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_FORWARDER_ID', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_CUST_ORDER_DELIV_NOTE_ID', 'VARCHAR2(15)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_CUST_ORDER_LOAD_LIST_ID', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_COD_DATE_DELIVERED_ID', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_COD_DATE_CONFIRMED_ID', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_RPD_COMPANY_PERIOD_ID', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_RPD_PERIOD_ID', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COMPANY', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SITE', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'MPCCOM_SHIP_VIA', 'VARCHAR2(3)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ORDER_DELIVERY_TERM', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'FORWARDER', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CUST_ORDER_DELIV_NOTE', 'VARCHAR2(15)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CUST_ORDER_LOAD_LIST', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COD_DATE_DELIVERED', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COD_DATE_CONFIRMED', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'REPORTING_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ID', 'VARCHAR2(104)', 'N');
   Database_SYS.Set_Table_Column(columns_,'MVT_CREATED_DT', 'DATE', 'N');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

---------------------------------------------------------------------
-- Create constraint and indexes
---------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_3');
PROMPT Create constraint and index(s) on snapshot table &MVT_TABLE
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MVT_TABLE';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'DELIV_NO_KEY');
   Database_Sys.Create_Constraint( table_name_,
                                   constraint_name_,
                                   columns_,
                                   'P',
                                   '&IFSAPP_INDEX',
                                   NULL,
                                   TRUE,
                                   TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_COMPANY_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_SITE_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_MPCCOM_SHIP_VIA_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_ORDER_DELIVERY_TERM_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX5';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_FORWARDER_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);
END;
/
UNDEFINE MVT_TABLE
UNDEFINE LU


-- ***** Customer_Order_Line_MV End *****

-----------------------------------------------------------------------------------------

-- ***** CUST_ORD_DELIV_CMV Start *****

DEFINE MV_NAME       = CUST_ORD_DELIV_CMV
DEFINE SOURCE_TABLE  = CUSTOMER_ORDER_DELIVERY_TAB

DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('&MV_NAME',TRUE);
   stmt_ :=
   'CREATE MATERIALIZED VIEW &MV_NAME
    BUILD DEFERRED
    USING NO INDEX
    REFRESH COMPLETE ON DEMAND
    EVALUATE USING CURRENT EDITION
    AS
    SELECT MAX(ROWVERSION) MAX_ROWVERSION
    FROM &SOURCE_TABLE';

   EXECUTE IMMEDIATE stmt_;
   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('&MV_NAME');
END;
/

UNDEFINE MV_NAME
UNDEFINE SOURCE_TABLE

-- ***** CUST_ORD_DELIV_CMV End *****

-----------------------------------------------------------------------------------------

---------------------------------------------------------------------
--Renamed column FEE_CODE to TAX_CODE in CUSTOMER_ORDER_LINE_MVT.
---------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_4');
PROMPT Renaming column FEE_CODE to TAX_CODE in CUSTOMER_ORDER_LINE_MVT.

DECLARE
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := 'CUSTOMER_ORDER_LINE_MVT';
BEGIN
   IF NOT Database_SYS.Column_Exist(table_name_, 'TAX_CODE') THEN
       IF Database_SYS.Column_Exist(table_name_, 'FEE_CODE') THEN
          Database_SYS.Rename_Column(table_name_, 'TAX_CODE', 'FEE_CODE');
       END IF;
   END IF;
END;
/

---------------------------------------------------------------------
--Droping column PAY_TAX in CUSTOMER_ORDER_LINE_MVT.
---------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_5');
PROMPT Removing column PAY_TAX from CUSTOMER_ORDER_LINE_MVT

   DECLARE
      column_   Database_SYS.ColRec;
   BEGIN
      column_ := Database_SYS.Set_Column_Values ('PAY_TAX');
      Database_SYS.Alter_Table_Column('CUSTOMER_ORDER_LINE_MVT', 'DROP COLUMN', column_);

      Is_Mv_Util_API.Set_Unusable('FACT_CUSTOMER_ORDER_LINE', TRUE);
   END;
   /

-- ***** CUSTOMER_ORDER_LINE_MVT Start *****

DEFINE MVT_TABLE   = CUSTOMER_ORDER_LINE_MVT
DEFINE LU          = BiFactCustomerOrderLine

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_6');
PROMPT Create snapshot table &MVT_TABLE
DECLARE
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := '&MVT_TABLE';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_,'ORDER_NO_KEY', 'VARCHAR2(48)', 'N');
   Database_SYS.Set_Table_Column(columns_,'LINE_NO_KEY', 'VARCHAR2(16)', 'N');
   Database_SYS.Set_Table_Column(columns_,'REL_NO_KEY', 'VARCHAR2(16)', 'N');
   Database_SYS.Set_Table_Column(columns_,'LINE_ITEM_NO_KEY', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_,'BUY_QTY_DUE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'QTY_ASSIGNED', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'QTY_PICKED', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'QTY_SHORT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'QTY_SHIPPED', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'QTY_SHIPDIFF', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'QTY_RETURNED', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'QTY_INVOICED', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'QTY_INVENTORY', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'INV_QTY_INCOMPLETE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'BASE_SALE_UNIT_PRICE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'BASE_UNIT_PRICE_INCL_TAX', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SALE_UNIT_PRICE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'UNIT_PRICE_INCL_TAX', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'NET_AMOUNT_BASE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'GROSS_AMOUNT_BASE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'NET_AMOUNT_CURR', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'GROSS_AMOUNT_CURR', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'NET_AMOUNT_BEFORE_DISC_BASE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'GROSS_AMOUNT_BEFORE_DISC_BASE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'NET_AMOUNT_BEFORE_DISC_CURR', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'GROSS_AMOUNT_BEFORE_DISC_CURR', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DISCOUNT_AMOUNT_BASE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DISCOUNT_AMOUNT_CURR', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COST', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'TOTAL_COST', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'TOTAL_ORDER_LINE_DISCOUNT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SHIP_DAYS_EARLY', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SHIP_DAYS_LATE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SHIP_DAYS_OFF_TIME', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_ORDER_LINE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_EARLY_ORDER_LINE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_LATE_ORDER_LINE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_ON_TIME_ORDER_LINE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_INCOMPLETE_ORDER_LINE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_DELIVERED_ORDER_LINE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_DELIVERED_NOT_INVOICED', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_DELIVERED_AS_REQUESTED', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_DELIVERED_AS_PROMISED', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_DELIVERED_AS_PLANNED', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_PERFECT_ORDER_LINE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_AGREEMENT_ORDER', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_PRICELIST_ORDER', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_CAMPAIGN_ORDER',  'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_BASEPRICE_ORDER', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'PROFIT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ORDER_NO', 'VARCHAR2(48)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'LINE_NO', 'VARCHAR2(16)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'REL_NO', 'VARCHAR2(16)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'LINE_ITEM_NO', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'STATE', 'VARCHAR2(80)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'BLOCKED_FOR_INVOICING', 'VARCHAR2(80)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SUPPLY_CODE', 'VARCHAR2(12)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CONV_FACTOR', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'PRICE_SOURCE', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'PRICE_SOURCE_ID', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SALES_UNIT_MEAS', 'VARCHAR2(40)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'PRICE_CONV_FACTOR', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'INVERTED_CONV_FACTOR', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CURRENCY_RATE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'TAX_CODE', 'VARCHAR2(80)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CUSTOMER_PART_NO', 'VARCHAR2(180)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DEMAND_CODE', 'VARCHAR2(80)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DISCOUNT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ORDER_DISCOUNT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ADDITIONAL_DISCOUNT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ROUTE_ID', 'VARCHAR2(48)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'PRICE_LIST_NO', 'VARCHAR2(40)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DATE_ENTERED_TIME', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'PLANNED_DELIVERY_DATE_TIME', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'INVENTORY_UOM', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'RENTAL', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_COMPANY_ID', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SITE_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_CUSTOMER_ID', 'VARCHAR2(80)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SUPPLIER_ID', 'VARCHAR2(80)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SALES_PART_ID', 'VARCHAR2(124)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_INVENTORY_PART_ID', 'VARCHAR2(124)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_CUST_ORDER_TYPE_ID', 'VARCHAR2(12)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_ORDER_CANCEL_REASON_ID', 'VARCHAR2(40)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_MPCCOM_SHIP_VIA_ID', 'VARCHAR2(12)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_ORDER_DELIVERY_TERM_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SALES_DISTRICT_ID', 'VARCHAR2(40)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SALES_MARKET_ID', 'VARCHAR2(40)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SALES_PERSON_ID', 'VARCHAR2(80)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SALES_REGION_ID', 'VARCHAR2(40)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_PROJECT_ID', 'VARCHAR2(40)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_ACTIVITY_ID', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_CURRENCY_CODE_ID', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_COL_CREATED_DATE_ID', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_COL_WANTED_DEL_DATE_ID', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_COL_PLANNED_DEL_DATE_ID', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_COL_PROMISED_DEL_DATE_ID', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_COL_PLANNED_SHIP_DATE_ID', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_COL_PRICE_EFF_DATE_ID', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_COL_PLANNED_DUE_DATE_ID', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_COL_FIRST_ACT_SHIP_DATE_ID', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_COL_LAST_ACT_SHIP_DATE_ID', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_COL_ACTUAL_DEL_DATE_ID', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_RPD_COMPANY_PERIOD_ID', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_RPD_PERIOD_ID', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COMPANY', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SITE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CUSTOMER', 'VARCHAR2(80)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SUPPLIER', 'VARCHAR2(80)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SALES_PART', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'INVENTORY_PART', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CUST_ORDER_TYPE', 'VARCHAR2(12)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ORDER_CANCEL_REASON', 'VARCHAR2(40)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'MPCCOM_SHIP_VIA', 'VARCHAR2(12)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ORDER_DELIVERY_TERM', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SALES_DISTRICT', 'VARCHAR2(40)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SALES_MARKET', 'VARCHAR2(40)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SALES_PERSON', 'VARCHAR2(80)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SALES_REGION', 'VARCHAR2(40)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'PROJECT', 'VARCHAR2(40)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ACTIVITY', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CURRENCY_CODE', 'VARCHAR2(12)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CREATED_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'WANTED_DELIVERY_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'PLANNED_DELIVERY_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'PROMISED_DELIVERY_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'PLANNED_SHIP_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'PRICE_EFFECTIVITY_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'PLANNED_DUE_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'FIRST_ACTUAL_SHIP_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'LAST_ACTUAL_SHIP_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ACTUAL_DELIVERY_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'REPORTING_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ID', 'VARCHAR2(252)', 'N');
   Database_SYS.Set_Table_Column(columns_,'MVT_CREATED_DT', 'DATE', 'N');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

---------------------------------------------------------------------
-- Create constraint and indexes
---------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_7');
PROMPT Create constraint and index(s) on snapshot table &MVT_TABLE

DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MVT_TABLE';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ORDER_NO_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LINE_NO_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'REL_NO_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LINE_ITEM_NO_KEY');
   Database_Sys.Create_Constraint( table_name_,
                                   constraint_name_,
                                   columns_,
                                   'P',
                                   '&IFSAPP_INDEX',
                                   NULL,
                                   TRUE,
                                   TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_SITE_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_CUSTOMER_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_SUPPLIER_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_INVENTORY_PART_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX5';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_ORDER_CANCEL_REASON_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX6';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_MPCCOM_SHIP_VIA_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX7';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_ORDER_DELIVERY_TERM_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);


   index_name_ := table_name_ || '_IX8';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_PROJECT_ID');
   Database_SYS.Set_Table_Column (columns_ , 'DIM_ACTIVITY_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);
END;
/

UNDEFINE MVT_TABLE
UNDEFINE LU

-- ***** CUSTOMER_ORDER_LINE_MVT End *****

-----------------------------------------------------------------------------------------

-- ***** CUST_ORD_CMV Start *****

DEFINE MV_NAME       = CUST_ORD_CMV
DEFINE SOURCE_TABLE  = CUSTOMER_ORDER_TAB

DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('&MV_NAME',TRUE);
   stmt_ :=
   'CREATE MATERIALIZED VIEW &MV_NAME
    BUILD DEFERRED
    USING NO INDEX
    REFRESH COMPLETE ON DEMAND
    EVALUATE USING CURRENT EDITION
    AS
    SELECT MAX(ROWVERSION) MAX_ROWVERSION
    FROM &SOURCE_TABLE';

   EXECUTE IMMEDIATE stmt_;

   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('&MV_NAME');
END;
/

UNDEFINE MV_NAME
UNDEFINE SOURCE_TABLE

-- ***** CUST_ORD_CMV End *****

-----------------------------------------------------------------------------------------

-- ***** CUST_ORD_LINE_CMV Start *****

DEFINE MV_NAME       = CUST_ORD_LINE_CMV
DEFINE SOURCE_TABLE  = CUSTOMER_ORDER_LINE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_8');
PROMPT Creating VIEW &MV_NAME
DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('&MV_NAME',TRUE);
   stmt_ :=
   'CREATE MATERIALIZED VIEW &MV_NAME
   BUILD DEFERRED
   USING NO INDEX
   REFRESH COMPLETE ON DEMAND
   EVALUATE USING CURRENT EDITION
   AS
   SELECT MAX(ROWVERSION) MAX_ROWVERSION
   FROM &SOURCE_TABLE';

   EXECUTE IMMEDIATE stmt_;

   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('&MV_NAME');
END;
/

UNDEFINE MV_NAME
UNDEFINE SOURCE_TABLE

-- ***** CUST_ORD_LINE_CMV End *****


----------------------------------------------------------------------------------------

-- ***** CUST_ORD_LINE_DISC_CMV Start *****

DEFINE MV_NAME       = CUST_ORD_LINE_DISC_CMV
DEFINE SOURCE_TABLE  = CUST_ORDER_LINE_DISCOUNT_TAB

DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('&MV_NAME',TRUE);
   stmt_ :=
   'CREATE MATERIALIZED VIEW &MV_NAME
    BUILD DEFERRED
    USING NO INDEX
    REFRESH COMPLETE ON DEMAND
    EVALUATE USING CURRENT EDITION
    AS
    SELECT MAX(ROWVERSION) MAX_ROWVERSION
    FROM &SOURCE_TABLE';

   EXECUTE IMMEDIATE stmt_;

   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('&MV_NAME');
END;
/

UNDEFINE MV_NAME
UNDEFINE SOURCE_TABLE

-- ***** CUST_ORD_LINE_DISC_CMV End *****

----------------------------------------------------------------------------------------

-- ***** CUSTOMER_ORDER_CHARGE_MVT Start *****

DEFINE MVT_TABLE   = CUSTOMER_ORDER_CHARGE_MVT
DEFINE LU          = BiFactCustomerOrderCharge

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_9');
PROMPT Create table &MVT_TABLE

DECLARE
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := '&MVT_TABLE';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_,'ORDER_NO_KEY', 'VARCHAR2(12)', 'N');
   Database_SYS.Set_Table_Column(columns_,'SEQUENCE_NO_KEY', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_,'CHARGE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'NET_CHARGE_AMOUNT_BASE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'GROSS_CHARGE_AMOUNT_BASE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'NET_CHARGE_AMOUNT_CURR', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'GROSS_CHARGE_AMOUNT_CURR', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CHARGE_COST', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CHARGE_COST_PERCENT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CHARGE_PRICE_BASE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CHARGE_PRICE_INCL_TAX_BASE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CHARGE_PRICE_CURR', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CHARGE_PRICE_INCL_TAX_CURR', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'QTY_CHARGED', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'QTY_INVOICED', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'QTY_RETURNED', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'BUY_QTY_DUE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'QTY_INVENTORY', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_CHARGE_LINE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_CHARGE_LINE_RETURNS', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'TOTAL_CHARGE_AMOUNT_BASE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'TOTAL_CHARGE_AMT_INCL_TAX_BASE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'TOTAL_CHARGE_AMOUNT_CURR', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'TOTAL_CHARGE_AMT_INCL_TAX_CURR', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CHARGE_PERCENT_BASIS', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'BASE_CHARGE_PERCENT_BASIS', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ORDER_NO', 'VARCHAR2(12)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SEQUENCE_NO', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'LINE_NO', 'VARCHAR2(4)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'REL_NO', 'VARCHAR2(4)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'LINE_ITEM_NO', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CURRENCY_RATE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DATE_ENTERED', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CHARGE_PRICE_LIST_NO', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'STATE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'UNIT_CHARGE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_COMPANY_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SITE_ID', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SALES_CHARGE_TYPE_ID', 'VARCHAR2(31)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SALES_CHARGE_GROUP_ID', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_CURRENCY_CODE_ID', 'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_CUSTOMER_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_CUSTOMER_ORDER_TYPE_ID', 'VARCHAR2(3)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_CAMPAIGN_ID', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SALES_PROMOTION_DEAL_ID', 'VARCHAR2(81)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_DELIVERY_TYPE_ID', 'VARCHAR2(41)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_ISO_UNIT_ID', 'VARCHAR2(30)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SALES_MARKET_ID', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SALES_PERSON_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SALES_DISTRICT_ID', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SALES_REGION_ID', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SALES_PART_ID', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_PROJECT_ID', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_ACTIVITY_ID', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_RPD_COMPANY_PERIOD_ID', 'VARCHAR2(31)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_RPD_PERIOD_ID', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COMPANY', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SITE', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SALES_CHARGE_TYPE', 'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SALES_CHARGE_GROUP', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CURRENCY_CODE', 'VARCHAR2(3)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CUSTOMER', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CUSTOMER_ORDER_TYPE', 'VARCHAR2(3)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CAMPAIGN', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SALES_PROMOTION_DEAL', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DELIVERY_TYPE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SALES_UNIT_MEAS', 'VARCHAR2(30)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SALES_MARKET', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SALES_PERSON', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SALES_DISTRICT', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SALES_REGION', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SALES_PART', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'PROJECT', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ACTIVITY', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'REPORTING_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ID', 'VARCHAR2(53)', 'N');
   Database_SYS.Set_Table_Column(columns_,'MVT_CREATED_DT', 'DATE', 'N');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

---------------------------------------------------------------------
-- Create constraint and indexes
---------------------------------------------------------------------

DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MVT_TABLE';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_, 'ORDER_NO_KEY');
   Database_SYS.Set_Table_Column (columns_, 'SEQUENCE_NO_KEY');
   Database_Sys.Create_Constraint( table_name_,
                                   constraint_name_,
                                   columns_,
                                   'P',
                                   '&IFSAPP_INDEX',
                                   NULL,
                                   TRUE,
                                   TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'DIM_COMPANY_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX2';
   Database_SYS.Set_Table_Column (columns_, 'DIM_SITE_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX3';
   Database_SYS.Set_Table_Column (columns_, 'DIM_SALES_CHARGE_TYPE_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX4';
   Database_SYS.Set_Table_Column (columns_, 'DIM_CUSTOMER_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX5';
   Database_SYS.Set_Table_Column (columns_, 'DIM_SALES_PART_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX6';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_PROJECT_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX7';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_ACTIVITY_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MVT_TABLE
UNDEFINE LU

-- ***** CUSTOMER_ORDER_CHARGE_MVT End *****

-----------------------------------------------------------------------------------------
--
-- ***** CUST_ORD_CHARGE_CMV Start *****

DEFINE MV_NAME       = CUST_ORD_CHARGE_CMV
DEFINE SOURCE_TABLE  = COC_SOURCE_TAX_ITEM_BIS

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_10');
PROMPT Creating VIEW &MV_NAME
DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('&MV_NAME',TRUE);
   stmt_ :=
   'CREATE MATERIALIZED VIEW &MV_NAME
    BUILD DEFERRED
    USING NO INDEX
    REFRESH COMPLETE ON DEMAND
    EVALUATE USING CURRENT EDITION
    AS
    SELECT MAX(ROWVERSION) MAX_ROWVERSION
    FROM &SOURCE_TABLE';

   EXECUTE IMMEDIATE stmt_;

   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('&MV_NAME');
END;
/

UNDEFINE MV_NAME
UNDEFINE SOURCE_TABLE

-- ***** CUST_ORD_CHARGE_CMV End *****

-----------------------------------------------------------------------------------------

-- ***** RETURN_MATERIAL_LINE_MV Start *****

DEFINE TAB     = RETURN_MATERIAL_LINE_TAB
DEFINE TAB_RMA = RETURN_MATERIAL_TAB
DEFINE MV      = RETURN_MATERIAL_LINE_MV

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_11');
PROMPT Create Materialized View &MV
DECLARE
   stmt_                    VARCHAR2(32000);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
   'CREATE MATERIALIZED VIEW &MV
    TABLESPACE &IFSAPP_DATA
    BUILD DEFERRED
    USING NO INDEX
    REFRESH COMPLETE ON DEMAND
    EVALUATE USING CURRENT EDITION
    AS
    SELECT TO_CHAR(l.rma_no)||''^''||TO_CHAR(l.rma_line_no)                         id,
       -- original keys
       l.rma_no                                                                     rma_no_key,
       l.rma_line_no                                                                rma_line_no_key,
       -- measure items
       l.qty_received                                                               qty_received,
       l.qty_received_inv_uom                                                       inv_qty_received,
       l.qty_to_return                                                              qty_to_return,
       l.qty_to_return_inv_uom                                                      inv_qty_to_return,
       l.qty_scrapped                                                               inv_qty_scrapped,
       l.qty_returned_inv                                                           inv_qty_returned,
       l.conv_factor                                                                conv_factor,
       l.inverted_conv_factor                                                       inverted_conv_factor,
       ROUND(l.sale_unit_price,
             Currency_Code_API.Get_Currency_Rounding(l.company, Company_Finance_API.Get_Currency_Code(l.company)))   sale_unit_price,
       ROUND(l.unit_price_incl_tax,
             Currency_Code_API.Get_Currency_Rounding(l.company, Company_Finance_API.Get_Currency_Code(l.company)))   unit_price_incl_tax,
       ROUND(l.base_sale_unit_price,
             Currency_Code_API.Get_Currency_Rounding(l.company, Company_Finance_API.Get_Currency_Code(l.company)))   base_sale_unit_price,
       ROUND(l.base_unit_price_incl_tax,
             Currency_Code_API.Get_Currency_Rounding(l.company, Company_Finance_API.Get_Currency_Code(l.company)))   base_unit_price_incl_tax,
       ROUND(Return_Material_Line_API.Get_Line_Total_Base_Price(l.rma_no,l.rma_line_no),
             Currency_Code_API.Get_Currency_Rounding(l.company, Company_Finance_API.Get_Currency_Code(l.company)))   net_amount_base,
       ROUND(Return_Material_Line_API.Get_Total_Base_Price_Incl_Tax(l.rma_no,l.rma_line_no),
             Currency_Code_API.Get_Currency_Rounding(l.company, Company_Finance_API.Get_Currency_Code(l.company)))   gross_amount_base,
       ROUND(Return_Material_Line_API.Get_Line_Total_Price(l.rma_no,l.rma_line_no),
             Currency_Code_API.Get_Currency_Rounding(l.company, Company_Finance_API.Get_Currency_Code(l.company)))   net_amount_curr,
       ROUND(Return_Material_Line_API.Get_Line_Total_Price_Incl_Tax(l.rma_no,l.rma_line_no),
             Currency_Code_API.Get_Currency_Rounding(l.company, Company_Finance_API.Get_Currency_Code(l.company)))   gross_amount_curr,
       l.currency_rate                                                              currency_rate,
       DECODE(l.rowstate,''Denied'',0,1)                                            count_order_line,
       DECODE(SIGN(l.qty_returned_inv),1,1,0)                                       count_returns_to_inventory,
       DECODE(SIGN(l.qty_scrapped),1,1,0)                                           count_returns_to_scrap,
       -- light items
       l.rma_no                                                                     rma_no,
       l.rma_line_no                                                                rma_line_no,
       l.rowstate                                                                   state,
       l.inspection_info                                                            inspection_info,
       l.credit_invoice_no                                                          credit_invoice_no,
       l.credit_invoice_item_id                                                     credit_invoice_item_id,
       l.debit_invoice_no                                                           debit_invoice_no,
       l.debit_invoice_item_id                                                      debit_invoice_item_id,
       l.order_no                                                                   order_no,
       l.line_no                                                                    line_no,
       l.rel_no                                                                     rel_no,
       l.line_item_no                                                               line_item_no,
       l.purchase_order_no                                                          purchase_order_no,
       l.replacement_order_no                                                       replacement_order_no,
       l.replacement_line_no                                                        replacement_line_no,
       l.replacement_line_item_no                                                   replacement_line_item_no,
       l.replacement_rel_no                                                         replacement_rel_no,
       h.cust_ref                                                                   cust_ref,
       l.rental                                                                     rental,
       -- dimension identifiers
       l.company                                                                    dim_company_id,
       h.contract                                                                   dim_site_id,
       h.customer_no                                                                dim_customer_id,
       l.contract||''^''||l.catalog_no                                              dim_sales_part_id,
       NVL(l.condition_code,''#'')                                                  dim_condition_code_id,
       l.company||''^''||h.currency_code                                            dim_currency_code_id,
       NVL(l.return_reason_code, ''#'')                                             dim_return_material_reason_id,
       DECODE(l.part_no, NULL, ''#^#'',
                               l.part_no||''^''||DECODE(l.configuration_id, ''*'', ''#'', l.configuration_id))
                                                                                    dim_configuration_spec_id,
       l.company||''^''||NVL(l.delivery_type,''#'')                                 dim_delivery_type_id,
       NVL(h.return_approver_id,''#'')                                              dim_return_approver_id,
       NVL(l.credit_approver_id,''#'')                                              dim_credit_approver_id,
       TRUNC(h.date_requested)                                                      dim_rm_date_requested_id,
       NVL(TRUNC(l.date_returned),
           TO_DATE(''1900-01-01'',''YYYY-MM-DD'',''NLS_CALENDAR=Gregorian''))       dim_rml_date_returned_id,
       NVL(Customer_Order_Line_API.Get_Project_Id(l.order_no, l.line_no, l.rel_no, l.line_item_no),''#'')
                                                                                    dim_project_id,
       NVL(Customer_Order_Line_API.Get_Activity_Seq(l.order_no, l.line_no, l.rel_no, l.line_item_no),0)
                                                                                    dim_activity_id,
       l.company||''^''||TO_CHAR(TRUNC(NVL(l.date_returned,h.date_requested)),''YYYY-MM-DD'')
                                                                                    dim_rpd_company_period_id,
       TRUNC(NVL(l.date_returned,h.date_requested))                                 dim_rpd_period_id,
       -- joiners
       l.company                                                                    company,
       h.contract                                                                   site,
       h.customer_no                                                                customer,
       l.catalog_no                                                                 sales_part,
       l.condition_code                                                             condition_code,
       h.currency_code                                                              currency_code,
       l.return_reason_code                                                         return_material_reason,
       l.configuration_id                                                           configuration_spec,
       l.delivery_type                                                              delivery_type,
       h.return_approver_id                                                         return_approver,
       l.credit_approver_id                                                         credit_approver,
       TRUNC(h.date_requested)                                                      rm_date_requested,
       TRUNC(l.date_returned)                                                       rml_date_returned,
       Customer_Order_Line_API.Get_Project_Id(l.order_no, l.line_no, l.rel_no, l.line_item_no)
                                                                                    project,
       Customer_Order_Line_API.Get_Activity_Seq(l.order_no, l.line_no, l.rel_no, l.line_item_no)
                                                                                    activity,
       TRUNC(NVL(l.date_returned,h.date_requested))                                 reporting_date,
       -- unique key
       TO_CHAR(l.rma_no) || ''^'' || TO_CHAR(l.rma_line_no)                         objid
    FROM &TAB_RMA h, &TAB l
    WHERE h.rma_no = l.rma_no';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_12');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_                 Database_SYS.ColumnTabType;
   table_name_              VARCHAR2(30) := '&MV';
   index_name_              VARCHAR2(30);
   constraint_name_         VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_, 'RMA_NO_KEY');
   Database_SYS.Set_Table_Column (columns_, 'RMA_LINE_NO_KEY');
   Database_Sys.Create_Constraint( table_name_,
                                   constraint_name_,
                                   columns_,
                                   'P',
                                   '&IFSAPP_INDEX',
                                   NULL,
                                   TRUE,
                                   TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'DIM_COMPANY_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX2';
   Database_SYS.Set_Table_Column (columns_, 'DIM_SITE_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX3';
   Database_SYS.Set_Table_Column (columns_, 'DIM_CUSTOMER_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX4';
   Database_SYS.Set_Table_Column (columns_, 'DIM_SALES_PART_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX5';
   Database_SYS.Set_Table_Column (columns_, 'DIM_CONDITION_CODE_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX6';
   Database_SYS.Set_Table_Column (columns_, 'DIM_CURRENCY_CODE_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX7';
   Database_SYS.Set_Table_Column (columns_, 'DIM_RETURN_MATERIAL_REASON_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX8';
   Database_SYS.Set_Table_Column (columns_, 'DIM_CONFIGURATION_SPEC_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX9';
   Database_SYS.Set_Table_Column (columns_, 'DIM_DELIVERY_TYPE_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX10';
   Database_SYS.Set_Table_Column (columns_, 'DIM_RETURN_APPROVER_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX11';
   Database_SYS.Set_Table_Column (columns_, 'DIM_CREDIT_APPROVER_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX12';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_PROJECT_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX13';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_ACTIVITY_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);
END;
/

UNDEFINE TAB
UNDEFINE TAB_RMA
UNDEFINE MV
/

-- ***** RETURN_MATERIAL_LINE_MV End *****

-----------------------------------------------------------------------------------------

-- ***** RETURN_MATERIAL_CHARGE_MV Start *****

DEFINE TAB     = RETURN_MATERIAL_CHARGE_TAB
DEFINE TAB_RMA = RETURN_MATERIAL_TAB
DEFINE MV      = RETURN_MATERIAL_CHARGE_MV

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_13');
PROMPT Create Materialized View &MV
DECLARE
   stmt_                    VARCHAR2(32000);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
   'CREATE MATERIALIZED VIEW &MV
    TABLESPACE &IFSAPP_DATA
    BUILD DEFERRED
    USING NO INDEX
    REFRESH COMPLETE ON DEMAND
    EVALUATE USING CURRENT EDITION
    AS
    SELECT TO_CHAR(c.rma_no)||''^''||TO_CHAR(c.rma_charge_no)                                          id,
       -- original keys
       c.rma_no                                                                                        rma_no_key,
       c.rma_charge_no                                                                                 rma_charge_no_key,
       -- measure items
       c.base_charge_amount                                                                            charge_amount_base,
       c.base_charge_amt_incl_tax                                                                      charge_amount_incl_tax_base,
       c.charge_amount                                                                                 charge_amount_curr,
       c.charge_amount_incl_tax                                                                        charge_amount_incl_tax_curr,
       c.charge                                                                                        charge,
       c.charged_qty                                                                                   charged_qty,
       c.credited_qty                                                                                  credited_qty,
       c.base_charge_percent_basis                                                                     base_charge_percent_basis,
       c.charge_percent_basis                                                                          charge_percent_basis,
       c.charge_cost                                                                                   charge_cost,
       c.charge_cost_percent                                                                           charge_cost_percent,
       Return_Material_Charge_API.Get_Total_Charged_Amount(c.rma_no,c.rma_charge_no)                   net_amount_curr,
       Return_Material_Charge_API.Get_Total_Charged_Amt_Incl_Tax(c.rma_no,c.rma_charge_no)             gross_amount_curr,
       Return_Material_Charge_API.Get_Total_Base_Charged_Amount(c.rma_no,c.rma_charge_no)              net_amount_base,
       Return_Material_Charge_API.Get_Tot_Charged_Amt_Incl_Tax(c.rma_no,c.rma_charge_no)               gross_amount_base,
       DECODE(c.rowstate,''Denied'',0,1)                                                               count_charge_line,
       DECODE(c.rowstate,''Credited'',1,0)                                                             count_credited_charge_line,
       DECODE(c.rowstate,''Denied'',1,0)                                                               count_denied_charge_line,
       DECODE(c.rowstate,''Planned'',1,0)                                                              count_planned_charge_line,
       DECODE(c.rowstate,''Released'',1,0)                                                             count_released_charge_line,
       -- light items
       c.rma_no                                                                                        rma_no,
       c.rma_charge_no                                                                                 rma_charge_no,
       c.rma_line_no                                                                                   rma_line_no,
       c.order_no                                                                                      order_no,
       c.sequence_no                                                                                   sequence_no,
       c.rowstate                                                                                      state,
       c.credit_invoice_no                                                                             credit_invoice_no,
       c.credit_invoice_item_id                                                                        credit_invoice_item_id,
       r.cust_ref                                                                                      cust_ref,
       r.customer_no_credit                                                                            customer_no_credit,
       c.sales_unit_meas                                                                               sales_unit_meas,
       -- dimension identifiers
       c.company                                                                                       dim_company_id,
       c.contract                                                                                      dim_site_id,
       NVL(c.delivery_type,''#'')                                                                      dim_customer_id,
       NVL(c.delivery_type,''#'')                                                                      dim_delivery_type_id,
       NVL(r.return_approver_id,''#'')                                                                 dim_return_approver_id,
       NVL(c.credit_approver_id,''#'')                                                                 dim_credit_approver_id,
       c.contract || ''^'' || c.charge_type                                                            dim_sales_charge_type_id,
       Sales_Charge_Type_API.Get_Charge_Group(c.contract,c.charge_type)                                dim_sales_charge_group_id,
       c.company||''^''||r.currency_code                                                               dim_currency_code_id,
       TRUNC(c.date_entered)                                                                           dim_rmc_date_entered_id,
       NVL(TRUNC(NVL(Return_Material_Line_API.Get_Date_Returned(c.rma_no,c.rma_line_no),c.date_entered)),
           TO_DATE(''1900-01-01'',''YYYY-MM-DD'',''NLS_CALENDAR=Gregorian''))                          dim_rml_date_returned_id,
       NVL(Customer_Order_Charge_API.Get_Co_Line_Project_Id(c.order_no,c.sequence_no),''#'')           dim_project_id,
       NVL(Customer_Order_Charge_API.Get_Co_Line_Activity_Seq(c.order_no,c.sequence_no),0)             dim_activity_id,
       c.company||''^''||TO_CHAR(TRUNC(NVL(Return_Material_Line_API.Get_Date_Returned(c.rma_no,c.rma_line_no),c.date_entered)),''YYYY-MM-DD'')
                                                                                                       dim_rpd_company_period_id,
       TRUNC(NVL(Return_Material_Line_API.Get_Date_Returned(c.rma_no,c.rma_line_no),c.date_entered))   dim_rpd_period_id,
       -- joiners
       c.company                                                                                       company,
       c.contract                                                                                      site,
       r.customer_no                                                                                   customer,
       c.delivery_type                                                                                 delivery_type,
       r.return_approver_id                                                                            return_approver,
       c.credit_approver_id                                                                            credit_approver,
       c.charge_type                                                                                   sales_charge_type,
       Sales_Charge_Type_API.Get_Charge_Group(c.contract,c.charge_type)                                sales_charge_group,
       r.currency_code                                                                                 currency_code,
       TRUNC(c.date_entered)                                                                           rmc_date_entered,
       TRUNC(NVL(Return_Material_Line_API.Get_Date_Returned(c.rma_no,c.rma_line_no),c.date_entered))   rml_date_returned,
       Customer_Order_Charge_API.Get_Co_Line_Project_Id(c.order_no,c.sequence_no)                      project,
       Customer_Order_Charge_API.Get_Co_Line_Activity_Seq(c.order_no,c.sequence_no)                    activity,
       TRUNC(NVL(Return_Material_Line_API.Get_Date_Returned(c.rma_no,c.rma_line_no),c.date_entered))   reporting_date,
       -- unique key
       TO_CHAR(c.rma_no) || ''^'' || TO_CHAR(c.rma_charge_no)                                          objid
    FROM &TAB c, &TAB_RMA r
    WHERE c.rma_no = r.rma_no';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_14');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_                 Database_SYS.ColumnTabType;
   table_name_              VARCHAR2(30) := '&MV';
   index_name_              VARCHAR2(30);
   constraint_name_         VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_, 'RMA_NO_KEY');
   Database_SYS.Set_Table_Column (columns_, 'RMA_CHARGE_NO_KEY');
   Database_Sys.Create_Constraint( table_name_,
                                   constraint_name_,
                                   columns_,
                                   'P',
                                   '&IFSAPP_INDEX',
                                   NULL,
                                   TRUE,
                                   TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'DIM_COMPANY_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX2';
   Database_SYS.Set_Table_Column (columns_, 'DIM_SITE_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX3';
   Database_SYS.Set_Table_Column (columns_, 'DIM_CUSTOMER_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX4';
   Database_SYS.Set_Table_Column (columns_, 'DIM_SALES_CHARGE_TYPE_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX5';
   Database_SYS.Set_Table_Column (columns_, 'DIM_SALES_CHARGE_GROUP_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX6';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_PROJECT_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX7';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_ACTIVITY_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE TAB
UNDEFINE TAB_RMA
UNDEFINE MV
/

-- ***** RETURN_MATERIAL_CHARGE_MV End *****

-----------------------------------------------------------------------------------------

-- ***** SALES_PART_MV Start *****

DEFINE MV         = SALES_PART_MV
DEFINE TAB1       = SALES_PART_TAB
DEFINE TAB2       = SITE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_15');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT contract||''^''||catalog_no                                           id,
              contract                                                              contract,
              catalog_no                                                            code,
              catalog_desc                                                          catalog_desc,
              catalog_type                                                          sales_part_type,
              price_unit_meas                                                       price_unit_meas,
              sales_unit_meas                                                       sales_unit_meas,
              conv_factor                                                           inventory_conv_factor,
              price_conv_factor                                                     price_conv_factor,
              inverted_conv_factor                                                  inverted_conv_factor,
              sales_price_group_id                                                  sales_price_group_id,
              catalog_group                                                         sales_group,
              Sales_Group_API.Get_Description(catalog_group)                        sales_group_description,
              activeind                                                             active,
              close_tolerance                                                       close_tolerance,
              delivery_type                                                         delivery_type,
              list_price                                                            price,
              list_price_incl_tax                                                   price_incl_tax,
              taxable                                                               taxable,
              Company_Finance_API.Get_Currency_Code(Site_API.Get_Company(contract)) currency_code
       FROM   &TAB1
       WHERE catalog_no != ''#''
       UNION ALL
       SELECT contract||''^''||''#''                                                id,
              contract                                                              contract,
              NULL                                                                  code,
              NULL                                                                  catalog_desc,
              NULL                                                                  sales_part_type,
              NULL                                                                  price_unit_meas,
              NULL                                                                  sales_unit_meas,
              NULL                                                                  inventory_conv_factor,
              NULL                                                                  price_conv_factor,
              NULL                                                                  inverted_conv_factor,
              NULL                                                                  sales_price_group_id,
              NULL                                                                  sales_group,
              NULL                                                                  sales_group_description,
              NULL                                                                  active,
              NULL                                                                  close_tolerance,
              NULL                                                                  delivery_type,
              NULL                                                                  price,
              NULL                                                                  price_incl_tax,
              NULL                                                                  taxable,
              NULL                                                                  currency_code
       FROM   &TAB2
       UNION ALL
       SELECT ''#''||''^''||''#''                                                   id,
              NULL                                                                  contract,
              NULL                                                                  code,
              NULL                                                                  catalog_desc,
              NULL                                                                  sales_part_type,
              NULL                                                                  price_unit_meas,
              NULL                                                                  sales_unit_meas,
              NULL                                                                  inventory_conv_factor,
              NULL                                                                  price_conv_factor,
              NULL                                                                  inverted_conv_factor,
              NULL                                                                  sales_price_group_id,
              NULL                                                                  sales_group,
              NULL                                                                  sales_group_description,
              NULL                                                                  active,
              NULL                                                                  close_tolerance,
              NULL                                                                  delivery_type,
              NULL                                                                  price,
              NULL                                                                  price_incl_tax,
              NULL                                                                  taxable,
              NULL                                                                  currency_code
       FROM BI_DUAL_TAB
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_16');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'CONTRACT');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);
END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
/

-- ***** SALES_PART_MV End *****

-----------------------------------------------------------------------------------------

-- ***** CUST_ORDER_LOAD_LIST_MV Start *****

DEFINE MV         = CUST_ORDER_LOAD_LIST_MV
DEFINE TAB1       = CUST_ORDER_LOAD_LIST_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_17');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT load_id         id,
              load_id         code,
              name            name,
              load_list_state load_list_state,
              addr_1          addr1,
              addr_2          addr2,
              addr_3          addr3,
              addr_4          addr4,
              addr_5          addr5,
              address1        address1,
              address2        address2,
              address3        address3,
              address4        address4,
              address5        address5,
              address6        address6,
              zip_code        zip_code,
              city            city,
              state           state,
              county          county,
              country_code    country_code
       FROM   &TAB1
       UNION ALL
       SELECT 0               id,
              NULL            code,
              NULL            name,
              NULL            load_list_state,
              NULL            addr1,
              NULL            addr2,
              NULL            addr3,
              NULL            addr4,
              NULL            addr5,
              NULL            address1,
              NULL            address2,
              NULL            address3,
              NULL            address4,
              NULL            address5,
              NULL            address6,
              NULL            zip_code,
              NULL            city,
              NULL            state,
              NULL            county,
              NULL            country_code
       FROM BI_DUAL_TAB
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_18');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_UX1';
   Database_SYS.Set_Table_Column (columns_, 'CODE');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
/
-- ***** CUST_ORDER_LOAD_LIST_MV End *****

---------------------------------------------------------------------------------------------

-- ***** SALES_QUOTATION_LINE_MVT Start *****

DEFINE MVT_TABLE   = SALES_QUOTATION_LINE_MVT
DEFINE LU          = BiFactCustomerOrderCharge

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_19');
PROMPT Create table &MVT_TABLE

DECLARE 
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := 'SALES_QUOTATION_LINE_MVT';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_,'QUOTATION_NO_KEY',         'VARCHAR2(100)', 'N');
   Database_SYS.Set_Table_Column(columns_,'LINE_NO_KEY',              'VARCHAR2(100)', 'N');
   Database_SYS.Set_Table_Column(columns_,'REL_NO_KEY',               'VARCHAR2(100)', 'N');
   Database_SYS.Set_Table_Column(columns_,'LINE_ITEM_NO_KEY',         'NUMBER',        'N');
   Database_SYS.Set_Table_Column(columns_,'BASE_SALE_UNIT_PRICE',     'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'BASE_UNIT_PRICE_INCL_TAX', 'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'BUY_QTY_DUE',              'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'REVISED_QTY_DUE',          'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'CONV_FACTOR',              'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'COST',                     'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'CURRENCY_RATE',            'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'DISCOUNT',                 'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'LINE_TOTAL_QTY',           'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'TOTAL_DISCOUNT',           'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'DISCOUNT_AMOUNT',          'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'GROUP_DISCOUNT',           'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'ADDITIONAL_DISCOUNT',      'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'NET_AMOUNT_BASE',          'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'GROSS_AMOUNT_BASE',        'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'NET_AMOUNT_CURR',          'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'GROSS_AMOUNT_CURR',        'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'PRICE_CONV_FACTOR',        'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'PROMISED_DELIVERY_DATE',   'DATE',          'Y');
   Database_SYS.Set_Table_Column(columns_,'WANTED_DELIVERY_DATE',     'DATE',          'Y');
   Database_SYS.Set_Table_Column(columns_,'SALE_UNIT_PRICE',          'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'UNIT_PRICE_INCL_TAX',      'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'DELIVERY_LEADTIME',        'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'PROBABILITY_TO_WIN',       'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_,'SUPPLY_CODE',              'VARCHAR2(3)',   'Y');
   Database_SYS.Set_Table_Column(columns_,'LOST_TO',                  'VARCHAR2(10)',  'Y');
   Database_SYS.Set_Table_Column(columns_,'WON_LOST_REASON',          'VARCHAR2(10)',  'Y');
   Database_SYS.Set_Table_Column(columns_,'TAX_CODE',                 'VARCHAR2(20)',  'Y');
   Database_SYS.Set_Table_Column(columns_,'COMPANY',                  'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'TAX_CODE_DESC',            'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SALES_PART',               'VARCHAR2(25)',  'Y');
   Database_SYS.Set_Table_Column(columns_,'INVENTORY_PART',           'VARCHAR2(25)',  'Y');
   Database_SYS.Set_Table_Column(columns_,'DEMAND_CODE',              'VARCHAR2(20)',  'Y');
   Database_SYS.Set_Table_Column(columns_,'RENTAL',                   'VARCHAR2(5)',   'Y');
   Database_SYS.Set_Table_Column(columns_,'PRICE_LIST_NO',            'VARCHAR2(10)',  'Y');
   Database_SYS.Set_Table_Column(columns_,'CUSTOMER',                 'VARCHAR2(20)',  'Y');
   Database_SYS.Set_Table_Column(columns_,'SALES_UNIT_MEAS',          'VARCHAR2(10)',  'Y');
   Database_SYS.Set_Table_Column(columns_,'SALES_PART_TYPE',          'VARCHAR2(4)',   'Y');
   Database_SYS.Set_Table_Column(columns_,'CHARGED_ITEM',             'VARCHAR2(20)',  'Y');
   Database_SYS.Set_Table_Column(columns_,'SUPPLIER',                 'VARCHAR2(20)',  'Y');
   Database_SYS.Set_Table_Column(columns_,'SITE',                     'VARCHAR2(5)',   'Y');
   Database_SYS.Set_Table_Column(columns_,'CANCEL_REASON',            'VARCHAR2(10)',  'Y');
   Database_SYS.Set_Table_Column(columns_,'QUOTATION_NO',             'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'LINE_NO',                  'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'REL_NO',                   'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'LINE_ITEM_NO',               'NUMBER',      'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_PLANNED_QUOTE_LINES',  'NUMBER',      'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_CANCELLED_QUOTE_LINES','NUMBER',      'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_RELEASED_QUOTE_LINES', 'NUMBER',      'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_WON_QUOTE_LINES',      'NUMBER',      'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_LOST_QUOTE_LINES',     'NUMBER',      'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_REJECTED_QUOTE_LINES', 'NUMBER',      'Y');
   Database_SYS.Set_Table_Column(columns_, 'COUNT_CO_CREATED_QUOTE_LINES','NUMBER',    'Y'); 
   Database_SYS.Set_Table_Column(columns_,'COUNT_ANSWERED_ON_TIME',       'NUMBER',    'Y');   
   Database_SYS.Set_Table_Column(columns_,'LEAD_TIME_TO_ANSWERED',      'NUMBER',      'Y');   
   Database_SYS.Set_Table_Column(columns_,'STATE',                    'VARCHAR2(20)',  'Y');
   Database_SYS.Set_Table_Column(columns_,'STATE_DESC',               'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_COMPANY_ID',           'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SITE_ID',              'VARCHAR2(5)',   'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_CUSTOMER_ID',          'VARCHAR2(20)',  'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SUPPLIER_ID',          'VARCHAR2(20)',  'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SALES_PART_ID',        'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SQL_WANTED_DEL_DATE_ID', 'DATE',        'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SQL_PROMISED_DEL_DATE_ID',  'DATE',     'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_INVENTORY_PART_ID',    'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_COMPETITOR',           'VARCHAR2(10)',  'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_WON_LOST_REASON_ID',   'VARCHAR2(10)',  'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_CANCEL_REASON_ID',     'VARCHAR2(10)',  'Y');
   Database_SYS.Set_Table_Column(columns_,'ID',                       'VARCHAR2(252)', 'N');
   Database_SYS.Set_Table_Column(columns_,'MVT_CREATED_DT',           'DATE',          'N');   
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END; 
/

---------------------------------------------------------------------
-- Create constraint and indexes
---------------------------------------------------------------------

DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := 'SALES_QUOTATION_LINE_MVT';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'QUOTATION_NO_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LINE_NO_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'REL_NO_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LINE_ITEM_NO_KEY');
   Database_Sys.Create_Constraint( table_name_,
                                   constraint_name_,
                                   columns_,
                                   'P',
                                   '&IFSAPP_INDEX',
                                   NULL,
                                   TRUE,
                                   TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_SITE_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Installation_SYS.Reset_Column_Table(columns_);
   
   index_name_ := table_name_ || '_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_CUSTOMER_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_SUPPLIER_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_INVENTORY_PART_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX5';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_SALES_PART_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX6';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_COMPETITOR');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX7';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_WON_LOST_REASON_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX8';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_CANCEL_REASON_ID');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
END;
/
UNDEFINE MVT_TABLE
UNDEFINE LU

-- ***** SALES_QUOTATION_LINE_MVT End *****

--  ---------------------------------------------------------------------------------------------

-- ***** ORDER_QUOTE_LINE_CMV Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_20');
PROMPT Create MV ORDER_QUOTE_LINE_CMV

DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('ORDER_QUOTE_LINE_CMV',TRUE);
   stmt_ :=    
            'CREATE MATERIALIZED VIEW ORDER_QUOTE_LINE_CMV
             BUILD DEFERRED
             USING NO INDEX
             REFRESH COMPLETE ON DEMAND
             EVALUATE USING CURRENT EDITION
             AS
             SELECT MAX(ROWVERSION) MAX_ROWVERSION
             FROM ORDER_QUOTATION_LINE_TAB';
    
   EXECUTE IMMEDIATE stmt_;  
   
   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('ORDER_QUOTE_LINE_CMV');
END;
/

-- ***** ORDER_QUOTE_LINE_CMV End   *****

--------------------------------------------------------------------------------------------

-- ***** ORDER_QUOTE_CMV Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_21');
PROMPT Create MV ORDER_QUOTE_CMV

DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('ORDER_QUOTE_CMV',TRUE);
   stmt_ :=    
            'CREATE MATERIALIZED VIEW ORDER_QUOTE_CMV
             BUILD DEFERRED
             USING NO INDEX
             REFRESH COMPLETE ON DEMAND
             EVALUATE USING CURRENT EDITION
             AS
             SELECT MAX(ROWVERSION) MAX_ROWVERSION
             FROM ORDER_QUOTATION_TAB';
    
   EXECUTE IMMEDIATE stmt_;  
   
   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('ORDER_QUOTE_CMV');
END;
/

-- ***** ORDER_QUOTE_CMV End   *****

--  ----------------------------------------------------------------------------------------

-- ***** ORDER_QUOTE_LINE_DISC_CMV Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_22');
PROMPT Create MV ORDER_QUOTE_LINE_DISC_CMV

DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('ORDER_QUOTE_LINE_DISC_CMV',TRUE);
   stmt_ :=    
            'CREATE MATERIALIZED VIEW ORDER_QUOTE_LINE_DISC_CMV
             BUILD DEFERRED
             USING NO INDEX
             REFRESH COMPLETE ON DEMAND
             EVALUATE USING CURRENT EDITION
             AS
             SELECT MAX(ROWVERSION) MAX_ROWVERSION
             FROM ORDER_QUOTE_LINE_DISCOUNT_TAB';
    
   EXECUTE IMMEDIATE stmt_;  
   
   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('ORDER_QUOTE_LINE_DISC_CMV');
END;
/

-- ***** ORDER_QUOTE_LINE_DISC_CMV End   *****

---------------------------------------------------------------------------------------------
 
-- ***** Drop Obsolete Materialized View(s) Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_23');
PROMPT Drop Obsolete Materialized view CUST_ORD_LINE_TAX_LINES_CMV
BEGIN
   Database_SYS.Remove_Materialized_View('CUST_ORD_LINE_TAX_LINES_CMV',TRUE);
   Database_SYS.Remove_Materialized_View('CUST_ORD_CHRG_TAX_LINES_CMV',TRUE);
END;
/
--
--  ***** Drop Obsolete Materialized View(s) End *****
--
---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Timestamp_24');
PROMPT Upgrade statements in file ORDER 1500.upg end here
-- Nothing is allowed to be placed below here
-----------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','1500.upg','Done');

