-----------------------------------------------------------------------------
--
--  Logical unit: CustomerOrderLineCommissionsHandling
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date       Sign    History
--  ------     ------  ---------------------------------------------------------
-- 2018-08-28  SeJalk  SCUXXW4-9272, Created.
-----------------------------------------------------------------------------

layer Core;
TYPE Key_Arr IS TABLE OF Order_Line_Commission_Key;
-- Declare state for keeping track of transaction state
@ApproveGlobalVariable
transaction_state_ Key_Arr;

@Override
PROCEDURE CRUD_Create___ (
   etag_ IN OUT VARCHAR2,
   key_  IN OUT Order_Line_Commission_Key,
   attr_ IN OUT VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
BEGIN
   IF action_ = 'CHECK' THEN
      IF Client_SYS.Get_Item_Value('COMMISSION_LINE_SOURCE_DB', attr_) = 'SYSTEM' THEN
         Error_SYS.Record_General(lu_name_, 'SYSTEM_NOT_ALLOWED: The Line Source cannot be entered as System for manual commission lines');
      END IF;
   END IF;
   super(etag_, key_, attr_, info_, action_);
   transaction_state_.extend;
   transaction_state_(transaction_state_.last) := key_;  
END CRUD_Create___;

@Override
PROCEDURE CRUD_Update___ (
   etag_ IN OUT VARCHAR2,
   key_  IN OUT Order_Line_Commission_Key,
   attr_ IN OUT VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
BEGIN
   super(etag_, key_, attr_, info_, action_);
   transaction_state_.extend;
   transaction_state_(transaction_state_.last) := key_;
END CRUD_Update___;
   

FUNCTION Check_Total_Com_Amount___ (
   key_                   IN Order_Line_Commission_Key,
   commission_percentage_ IN NUMBER,
   commission_amount_     IN NUMBER ) RETURN BOOLEAN
IS
   
BEGIN
   Order_Line_Commission_API.Check_Total_Com_Amount__(key_.order_no, key_.line_no, key_.rel_no, key_.line_item_no, key_.commission_line_no, commission_percentage_, commission_amount_);
   RETURN TRUE;
END Check_Total_Com_Amount___;

PROCEDURE Validate_Total_Com_Ammount___ (
   init_ IN BOOLEAN,
   info$_ OUT VARCHAR2) 
   IS
   commission_percentage_ NUMBER;
   commission_amount_ NUMBER;
BEGIN
   IF (init_) THEN 
      -- Init state for the transaction
      transaction_state_ := Key_Arr();
   ELSE
      -- Check state of affected records
      IF(transaction_state_.Count > 0) THEN
         FOR i_ IN transaction_state_.first .. transaction_state_.last LOOP
            commission_percentage_ := Order_Line_Commission_API.Get_Commission_Percentage(transaction_state_(i_).order_no, transaction_state_(i_).line_no, transaction_state_(i_).rel_no, transaction_state_(i_).line_item_no, transaction_state_(i_).commission_line_no);
            commission_amount_ := Order_Line_Commission_API.Get_Commission_Amount(transaction_state_(i_).order_no, transaction_state_(i_).line_no, transaction_state_(i_).rel_no, transaction_state_(i_).line_item_no, transaction_state_(i_).commission_line_no);
            Order_Line_Commission_API.Check_Total_Com_Amount__(transaction_state_(i_).order_no, transaction_state_(i_).line_no, transaction_state_(i_).rel_no, transaction_state_(i_).line_item_no, transaction_state_(i_).commission_line_no, commission_percentage_, commission_amount_);
         END LOOP;
      END IF;
      -- Reset transaction state, it is not needed anymore
      transaction_state_ := null;
   END IF;
END Validate_Total_Com_Ammount___;

FUNCTION Calc_Com_From_Cust_Ord_Line___ (
   order_no_      IN VARCHAR2,
   line_no_       IN VARCHAR2,
   rel_no_        IN VARCHAR2,
   line_item_no_  IN NUMBER, 
   overwrite_manual_data_ IN NUMBER ) RETURN VARCHAR2
IS
   info_ VARCHAR2(2000);
BEGIN
   Commission_Calculation_API.Calc_Com_From_Cust_Ord_Line(info_,order_no_, line_no_, rel_no_, line_item_no_, overwrite_manual_data_);
   RETURN info_;
END Calc_Com_From_Cust_Ord_Line___;


FUNCTION Check_Calculated_Com___(
   order_no_     IN VARCHAR2,
   line_no_      IN VARCHAR2,
   rel_no_       IN VARCHAR2,
   line_item_no_ IN NUMBER ) RETURN BOOLEAN
IS
   CURSOR Get_Row_Status IS
   SELECT ROWSTATE, COMMISSION_RECALC_FLAG FROM ORDER_LINE_COMMISSION_TAB WHERE 
   ORDER_NO = order_no_ AND
   LINE_NO = line_no_ AND
   REL_NO = rel_no_ AND
   LINE_ITEM_NO = line_item_no_;
   
BEGIN
   FOR rec_ IN Get_Row_Status LOOP
      IF  rec_.rowstate = 'Created' OR rec_.commission_recalc_flag = 'NEEDCALCULATION' THEN
         RETURN TRUE;
      END IF;
   END LOOP;
   RETURN FALSE;
END Check_Calculated_Com___;



