-------------------------------------------------------------------------------------------- 
-- Export file for Task RESERVE_CUSTOMER_ORDER_API.BATCH_RESERVE_ORDERS__.
-- 
--  Date    Sign    History
--  ------  ------  -----------------------------------------------------------
--  080116  MiKulk  Added the FAIR_SHARE_RES.
---------------------------------Nice Price------------------------------------------------
--  121224  IsSalk  Bug 106210, Added parameter CATALOG_TYPE.
--  121011  NipKlk  Bug 102071, Passed the db value - FALSE for parameter RESERVE_ALL_LINES_CO and FAIR_SHARE_RES as the defualt values.
--  100710  SudJlk  Bug 91834, Added log_user to Upgrade_Background_Job to set the correct
--  100710           user on converted scheduled tasks
--  070118  MaJalk  Added ORDER_TYPE, COORDINATOR ,PRIORITY, DELIVER_TO_CUSTOMER_NO, DELIVERY_ADDRESS,
--  070118          ROUTE_ID, FORWARD_AGENT_ID, PART_NO, SHIP_VIA, RESERVE_ALL_LINES_CO. Changed 
--  070118          RESERVE_CUSTOMER_ORDER_API.MAKE_PICK_PLAN__ to RESERVE_CUSTOMER_ORDER_API.BATCH_RESERVE_ORDERS__. 
--  061116  NaLrlk  Removed the ALLOW_LINE_BACKORDERS and its usage.
--  061023  IFSAPP  Export file for task RESERVE_CUSTOMER_ORDER_API.MAKE_PICK_PLAN__.
-------------------------------------------------------------------------------------------- 

PROMPT Register Batch Schedule Method "RESERVE_CUSTOMER_ORDER_API.BATCH_RESERVE_ORDERS__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'RESERVE_CUSTOMER_ORDER_API.BATCH_RESERVE_ORDERS__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Create Customer Order Reservations');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'ORDER');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'ATTRIBUTE');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', 'RESERVE_CUSTOMER_ORDER_API.VALIDATE_PARAMS');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
-- Adding parameters
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'PLANNED_DUE_DATE', to_date(NULL), 'FALSE', 'Site_API.Get_Site_Date(User_Allowed_Site_API.Get_Default_Site)');
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'CONTRACT', '%', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'EXECUTION_OFFSET', to_number(NULL), 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'ORDER_TYPE', '%', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'COORDINATOR', '%', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'PRIORITY', '%', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'DELIVER_TO_CUSTOMER_NO', '%', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'DELIVERY_ADDRESS', '%', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'ROUTE_ID', '%', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'FORWARD_AGENT_ID', '%', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'PART_NO', '%', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'SHIP_VIA', '%', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'RESERVE_ALL_LINES_CO', 'FALSE', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'FAIR_SHARE_RES', 'FALSE', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'CATALOG_TYPE', '', 'FALSE', NULL);
END;
/

------------------------------------------------------------------------------------------
-- Inventory Tasks (Upgraded from background jobs)
-----------------------------------------------------------------------------------------
DECLARE   
   PROCEDURE Upgrade_Background_Job (
      method_name_ IN VARCHAR2,
      schedule_name_  IN VARCHAR2)
   IS
      parameters_          VARCHAR2(4000);
      execution_plan_      VARCHAR2(4000);
      param_start_         NUMBER;
      param_stop_          NUMBER;
      next_execution_date_ DATE;
      start_date_          DATE := sysdate;

      seq_no_              NUMBER;
      schedule_id_         NUMBER;
      ptr_                 NUMBER;      
      name_                VARCHAR2(30);
      value_               VARCHAR2(2000);

     CURSOR get_jobs IS
       SELECT what, interval, log_user 
       FROM   user_jobs
       WHERE  UPPER(what) like '%'||method_name_||'%';
   BEGIN
      FOR rec IN get_jobs LOOP
        execution_plan_ := rec.interval;
        param_start_ := instr(execution_plan_, '(');
        param_stop_  := instr(execution_plan_, ')');
        execution_plan_ := substr(execution_plan_, param_start_ + 2, param_stop_ - param_start_- 3);

        Batch_SYS.New_Batch_Schedule(schedule_id_, next_execution_date_, start_date_, NULL, schedule_name_, method_name_, 'TRUE', execution_plan_);
        -- Update batch schedule with correct user name 
        UPDATE batch_schedule_tab SET username = rec.log_user WHERE schedule_id = schedule_id_; 

        parameters_ := rec.what;
        param_start_ := instr(parameters_, '(''');
        param_stop_  := instr(parameters_, ''')');
        parameters_  := substr(parameters_, param_start_ + 3, param_stop_ - param_start_- 3);
        ptr_ := NULL;        
        WHILE (Client_SYS.Get_Next_From_Attr(parameters_, ptr_, name_, value_)) LOOP
           Batch_SYS.New_Batch_Schedule_Param(seq_no_, schedule_id_, name_, value_);           
        END LOOP;
      END LOOP;
   END Upgrade_Background_Job;
   
   PROCEDURE Remove_Server_Process (
      method_name_ IN VARCHAR2 )
   IS
      job_   NUMBER;
      CURSOR get_job IS
         SELECT job
         FROM   user_jobs
         WHERE  UPPER(what) like '%'||method_name_||'%';
   BEGIN
      FOR rec_ IN get_job LOOP
         dbms_job.remove(rec_.job);
      END LOOP;
            
   EXCEPTION
      WHEN OTHERS THEN
         NULL;
   END Remove_Server_Process;

BEGIN
   ------------------------------------------------------------------------------------------
   -- Upgrading Background Jobs to Scheduled Tasks
   ------------------------------------------------------------------------------------------
   
   Upgrade_Background_Job('RESERVE_CUSTOMER_ORDER_API.BATCH_RESERVE_ORDERS__', 'Create Reservations for Customer Orders');
   Remove_Server_Process('RESERVE_CUSTOMER_ORDER_API.BATCH_RESERVE_ORDERS__');
END;
/

COMMIT
/
