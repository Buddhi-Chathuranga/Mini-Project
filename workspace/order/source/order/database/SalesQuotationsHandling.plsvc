-----------------------------------------------------------------------------
--
--  Logical unit: SalesQuotationsHandling
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  180524  JeLise  SCUXXW4-1001, Created for the convertion of tbwOrderQuotationOverview.
-----------------------------------------------------------------------------

layer Core;

FUNCTION Get_Amounts___(
   contract_     IN VARCHAR2,
   quotation_no_ IN VARCHAR2,
   customer_no_  IN VARCHAR2,
   company_      IN VARCHAR2 ) RETURN Amount_Structure_Rec
IS
   rec_      Amount_Structure_Rec;
   rounding_ NUMBER;
BEGIN
   rec_.currency_code             := Company_Finance_API.Get_Currency_Code(Site_API.Get_Company(contract_));
   rounding_                      := Currency_Code_API.Get_Currency_Rounding(company_, rec_.currency_code);
   rec_.total_value               := Order_Quotation_API.Get_Total_Base_Price(quotation_no_);
   rec_.customer_min_sales_amount := ROUND(Cust_Ord_Customer_API.Get_Min_Sales_Amount(customer_no_), rounding_);
   RETURN rec_;
END Get_Amounts___;


PROCEDURE Email_Sales_Quotation___ (
   selection_ IN VARCHAR2 ) 
IS
   full_selection_    VARCHAR2(4000) := CONCAT(selection_, ';');
   current_selection_ VARCHAR2(200);
   quotation_no_      VARCHAR2(100);
   rec_               Sales_Quotation_Email_Virtual_Rec;   
   contract_          VARCHAR2(5);
   CURSOR get_rec IS
      SELECT quotation_no, customer_no, cust_ref, Cust_Ord_Customer_Address_API.Get_Email(customer_no, cust_ref, bill_addr_no), contract 
      FROM  order_quotation 
      WHERE quotation_no = quotation_no_;
BEGIN
    WHILE (INSTR(full_selection_, ';') > 0) LOOP
      current_selection_ := SUBSTR(full_selection_, 0, INSTR(full_selection_, ';'));
      quotation_no_      := Client_SYS.Get_Key_Reference_Value(current_selection_, 'QUOTATION_NO');
      Order_Quotation_Initial_Check___(quotation_no_);

      OPEN get_rec;
      FETCH get_rec INTO rec_.quotation_no, rec_.customer_no, rec_.cust_ref, rec_.email, contract_;
      CLOSE get_rec;

      IF (rec_.email IS NOT NULL) THEN
         Order_Quotation_API.Email_Sales_Quotation__(rec_.quotation_no,
                                                     rec_.cust_ref,
                                                     contract_,
                                                     rec_.email,
                                                     rec_.customer_no,
                                                     'ORDER_QUOTATION_REP');
      END IF;
      full_selection_ := SUBSTR(full_selection_, INSTR(full_selection_, ';') +1);      
   END LOOP;
END Email_Sales_Quotation___;


@Override
PROCEDURE CRUD_Create___(
   rec_ IN Sales_Quotation_Virtual_Rec )
IS 
BEGIN 
   super(rec_);
   Get_Selected___(rec_.objkey, rec_.selection_list);
END CRUD_Create___;


PROCEDURE Get_Selected___ (
   parent_key_ IN VARCHAR2,
   selection_  IN VARCHAR2 ) 
IS
   full_selection_    VARCHAR2(4000) := CONCAT(selection_, ';');
   quotation_no_      VARCHAR2(100);
   current_selection_ VARCHAR2(200);
   rec_               Sales_Quotation_Email_Virtual_Rec;   
   CURSOR get_rec IS
      SELECT quotation_no, customer_no, cust_ref, Cust_Ord_Customer_Address_API.Get_Email(customer_no, cust_ref, bill_addr_no) 
      FROM  order_quotation 
      WHERE quotation_no = quotation_no_;
BEGIN 
    WHILE (INSTR(full_selection_, ';') > 0) LOOP
      current_selection_ := SUBSTR(full_selection_, 0, INSTR(full_selection_, ';'));
      quotation_no_      := Client_SYS.Get_Key_Reference_Value(current_selection_, 'QUOTATION_NO');
      
      OPEN get_rec;
      FETCH get_rec INTO rec_.quotation_no, rec_.customer_no, rec_.cust_ref, rec_.email;
      CLOSE get_rec;
      
      rec_.objkey        := sys_guid();
      rec_.parent_objkey := parent_key_;
      IF (rec_.email IS NOT NULL) THEN
         CRUD_Create___(rec_);
      END IF;
      full_selection_ := SUBSTR(full_selection_, INSTR(full_selection_, ';') +1);      
   END LOOP;
END Get_Selected___;


FUNCTION Get_Result_Key_List___(
   full_selection_ IN VARCHAR2 ) RETURN VARCHAR2
IS
   selection_         VARCHAR2(32000) := CONCAT(full_selection_, ';');
   current_selection_ VARCHAR2(32000);
   report_attr_       VARCHAR2(32000);
   param_attr_        VARCHAR2(32000);
   result_key_        NUMBER;
   result_key_list_   VARCHAR2(2000);
BEGIN
   Client_SYS.Add_To_Attr('REPORT_ID', 'ORDER_QUOTATION_REP', report_attr_);
   WHILE (INSTR(selection_, ';') > 0) LOOP  
      current_selection_ := SUBSTR(selection_, 0, INSTR(selection_, ';'));
      Client_SYS.Clear_Attr(param_attr_);
      Client_SYS.Add_To_Attr('QUOTATION_NO', Client_SYS.Get_Key_Reference_Value(current_selection_, 'QUOTATION_NO'), param_attr_);

      Order_Quotation_Initial_Check___(Client_SYS.Get_Key_Reference_Value(current_selection_, 'QUOTATION_NO'));
      result_key_ := Report_Format_API.Create_New_Report(report_attr_, param_attr_, Fnd_Session_API.Get_Fnd_User);
      IF (result_key_list_ IS NULL) THEN
         result_key_list_  := result_key_;
      ELSE
         result_key_list_  := result_key_list_ || ',' || result_key_;
      END IF; 
      selection_ := SUBSTR(selection_, INSTR(selection_, ';') + 1);     
   END LOOP;
   
   RETURN result_key_list_;
END Get_Result_Key_List___;






