-----------------------------------------------------------------------------
--
--  Logical unit: PriceQueryHandling
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-- 2020-04-20  MaEelk SCXTEND-2219, Enabled the Duplicate Functionality.
-- 2018-12-05  MAHPLK SCUXXW4-9322, Created
-----------------------------------------------------------------------------

layer Core;

@Override
PROCEDURE CRUD_Default___ (
   key_  IN  Price_Query_Key,
   attr_ IN OUT VARCHAR2,
   info_ OUT VARCHAR2 )
IS
   contract_ VARCHAR2(5);
BEGIN   
   super(key_, attr_, info_);
   Client_SYS.Add_To_Attr('CREATOR', Fnd_Session_API.Get_Fnd_User, attr_);
   contract_ := User_Default_API.Get_Contract();
   Client_SYS.Add_To_Attr('CONTRACT', contract_, attr_);
   Client_SYS.Add_To_Attr('COMPANY', Site_API.Get_Company(contract_), attr_);
   
   -- Fetching the default price query price effective date
   IF (Cust_Order_Pricing_Method_API.Encode(Site_Discom_Info_API.Get_Cust_Order_Pricing_Method(contract_)) = 'ORDER_DATE') THEN
      Client_SYS.Add_To_Attr('PRICE_EFFECTIVE_DATE',  trunc(NVL(Site_API.Get_Site_Date(contract_), SYSDATE)), attr_);
   END IF;
   Client_SYS.Add_To_Attr('USE_PRICE_INCL_TAX_DB', Site_Discom_Info_API.Get_Use_Price_Incl_Tax_Ord_Db(contract_), attr_);
END CRUD_Default___;

@Override
PROCEDURE CRUD_Default_Copy___ (
   rec_  IN OUT Price_Query_Rec )
IS
BEGIN
    super(rec_);
    rec_.price_query_id := NULL;
END CRUD_Default_Copy___;


PROCEDURE Clean_Price_Query___ 
IS
BEGIN
   Price_Query_API.Clean_Price_Query__();
END Clean_Price_Query___;


FUNCTION Validate_Customer___(
   contract_                IN VARCHAR2,
   customer_no_             IN VARCHAR2,
   price_effective_date_    IN DATE) RETURN Validate_Customer_Struc_Rec
IS
   attr_        VARCHAR2(32000);
   validate_customer_rec_ Validate_Customer_Struc_Rec;
BEGIN
   Client_SYS.Add_To_Attr('CONTRACT', contract_, attr_);
   Client_SYS.Add_To_Attr('CUSTOMER_NO', customer_no_, attr_);
   Client_SYS.Add_To_Attr('PRICE_EFFECTIVE_DATE', price_effective_date_, attr_);
   
   Price_Query_API.Get_Customer_Defaults__(attr_);
   
   validate_customer_rec_.agreement_id := Client_SYS.Get_Item_Value('AGREEMENT_ID', attr_);
   validate_customer_rec_.price_effective_date := Client_SYS.Get_Item_Value_To_Date('PRICE_EFFECTIVE_DATE', attr_, 'PriceQueryHandling');
   validate_customer_rec_.currency_code := Client_SYS.Get_Item_Value('CURRENCY_CODE', attr_);
   
   RETURN validate_customer_rec_;
END Validate_Customer___;



FUNCTION Validate_Agreement___ (
   customer_no_     IN VARCHAR2,
   contract_        IN VARCHAR2,
   currency_code_   IN VARCHAR2) RETURN VARCHAR2
IS
BEGIN
   RETURN Customer_Agreement_API.Get_First_Valid_Agreement(customer_no_, contract_, currency_code_,  trunc(NVL(Site_API.Get_Site_Date(contract_), SYSDATE)), 'FALSE');
END Validate_Agreement___;



FUNCTION Validate_Price_Qty___ (
   contract_    IN VARCHAR2,
   catalog_no_  IN VARCHAR2,
   sales_qty_   IN NUMBER) RETURN NUMBER
IS
   price_cov_factor_ NUMBER;
BEGIN
   price_cov_factor_ := Sales_Part_API.Get_Price_Conv_Factor(contract_, catalog_no_);
   RETURN sales_qty_ * price_cov_factor_;
END Validate_Price_Qty___;


FUNCTION Validate_Catalog_No___ (
   contract_    IN VARCHAR2,
   catalog_no_  IN VARCHAR2,
   sales_qty_   IN NUMBER) RETURN Validate_Catalog_No_Struc_Rec
IS
   validate_catalog_no_rec_ Validate_Catalog_No_Struc_Rec;
   condition_code_          VARCHAR2(100);
   price_cov_factor_        NUMBER;
BEGIN
   IF (Part_Catalog_API.Get_Condition_Code_Usage_Db(catalog_no_) = 'ALLOW_COND_CODE') THEN
      condition_code_ := Condition_Code_API.Get_Default_Condition_Code;
   ELSE
      condition_code_ := '';
   END IF;
   price_cov_factor_ := Sales_Part_API.Get_Price_Conv_Factor(contract_, catalog_no_);
   
   validate_catalog_no_rec_.condition_code := condition_code_;
   validate_catalog_no_rec_.price_qty := sales_qty_ * price_cov_factor_;
   RETURN validate_catalog_no_rec_;
END Validate_Catalog_No___;



FUNCTION Get_Company___ (
	contract_ IN VARCHAR2) RETURN VARCHAR2
IS
BEGIN
   RETURN Site_API.Get_Company(contract_);
END Get_Company___;
