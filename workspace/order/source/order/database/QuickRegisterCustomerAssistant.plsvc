-----------------------------------------------------------------------------
--
--  Fragment:     QuickRegisterCustomerAssistant
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date       Sign    History
--  ------     ------  ---------------------------------------------------------
-- 2021-12-24  KiSalk  Defect SC21R2-6955, Assigned rec_.address_line_db in Check_Address___.
-- 2019-07-05  MaAuse  SCUXXW4-18574, Modified Check_Address___ to call Get_Mandatory_Address_Line instead of Get_Mandatory_Address_Line_Db.
-- 2019-06-30  AwWelk  SCUXXW4-20569, Merged to bug SCZ-3943.
-- 2018-11-10  SeJalk  SCUXXW4-9590, Added code for frmTerms.
-- 2018-11-08  SeJalk  SCUXXW4-9160, Added code for frmDocument.
-- 2018-11-06  SeJalk  SCUXXW4-9155, Added code for frmDelivery.
-- 2018-11-04  SeJalk  SCUXXW4-9585, Added code for frmTemplate.
-- 2018-11-01  SeJalk  SCUXXW4-8312, Added code for dlgCreateCustomerWizard.
--  180625     SudJlk  SCUXX-3801, Created
-----------------------------------------------------------------------------

layer Core;

FUNCTION Check_Pay_Term___(
	company_ IN VARCHAR2,
	contract_ IN VARCHAR2,
	customer_template_ IN VARCHAR2) RETURN VARCHAR2
IS
  
   temp_company_     User_Finance_tab.company%TYPE;
   customer_no_      VARCHAR2(1000);
BEGIN
   temp_company_ := NVL(company_,User_Finance_API.Get_Default_Company_Func());
	temp_company_ := NVL(temp_company_, Site_API.Get_Company(contract_));
   customer_no_  := NVL(Cust_Ord_Customer_API.Get_Customer_No_Pay(customer_template_), customer_template_);
   RETURN Identity_Invoice_Info_API.Get_Pay_Term_Id(temp_company_, customer_no_,Party_Type_API.Decode('CUSTOMER'));
   
END Check_Pay_Term___;

FUNCTION Check_Address___(
	customer_template_ IN VARCHAR2) RETURN Customer_Info_Address_Structure_Rec
IS   
   rec_ Customer_Info_Address_Structure_Rec;
BEGIN
	rec_.default_address := Customer_Info_Address_API.Get_Default_Address(customer_template_, Address_Type_Code_API.Decode('DELIVERY'));
   rec_.address         := Customer_Info_Address_API.Get_Address_Line(customer_template_, rec_.default_address, '1');
   rec_.address_line    := Address_Setup_API.Get_Mandatory_Address_Line('CustomerInfoAddress');
   rec_.address_line_db := Address_Setup_API.Get_Mandatory_Address_Line_Db('CustomerInfoAddress');
   
   RETURN rec_;
END Check_Address___;


--TEUXX-11387 -- structures with null not working
--FUNCTION Validade_Info___(
--	company_ IN VARCHAR2,
--	contract_ IN VARCHAR2,
--	customer_template_ IN VARCHAR2) RETURN Validate_New_Customer_Structure_Rec
--IS
-- rec_ Validate_New_Customer_Structure_Rec;
-- temp_company_     User_Finance_tab.company%TYPE;
--   customer_no_      VARCHAR2(1000);
--BEGIN
--	temp_company_ := NVL(company_, Site_API.Get_Company(contract_));
--   customer_no_  := NVL(Cust_Ord_Customer_API.Get_Customer_No_Pay(customer_template_), customer_template_);
--   rec_.payment_term := NVL(Identity_Invoice_Info_API.Get_Pay_Term_Id(temp_company_, customer_no_,Party_Type_API.Decode('CUSTOMER')),'a');
--   rec_.address_id  := NVL(Customer_Info_Address_API.Get_Default_Address(customer_template_, Address_Type_Code_API.Decode('DELIVERY')),'');
--   RETURN rec_;
--END Validade_Info___;

FUNCTION Fetch_From_Template___(
	template_customer_id_ IN VARCHAR2) RETURN Customer_Struct_Rec
IS
   detail_rec_ Customer_Struct_Rec;
BEGIN
   detail_rec_.country := Customer_Info_API.Get_Country_Db(template_customer_id_);
   detail_rec_.default_language := Customer_Info_API.Get_Default_Language_Db(template_customer_id_);
   detail_rec_.cust_ref := Cust_Ord_Customer_API.Get_Cust_Ref(template_customer_id_);
   RETURN detail_rec_;
END Fetch_From_Template___;

FUNCTION Validate_Associaton_No___(
	associaton_no_ IN VARCHAR2) RETURN VARCHAR2
IS
BEGIN
	RETURN Association_Info_API.Association_No_Exist(associaton_no_, 'CUSTOMER');
END Validate_Associaton_No___;


FUNCTION Address_Info___(
	customer_template_ IN VARCHAR2,
	type_ IN VARCHAR2) RETURN Address_Info_Structure_Rec
IS
  rec_ Address_Info_Structure_Rec;
BEGIN
   IF type_ = 'DEL' THEN
      rec_.address := Cust_Ord_Customer_API.Get_Delivery_Address(customer_template_);
   ELSE   
      rec_.address := Cust_Ord_Customer_API.Get_Document_Address(customer_template_);
   END IF;
   rec_.address1 := Customer_Info_Address_API.Get_Address1(customer_template_, rec_.address);
   rec_.address2  := Customer_Info_Address_API.Get_Address2(customer_template_, rec_.address);
   rec_.address3   := Customer_Info_Address_API.Get_Address3(customer_template_, rec_.address);
   rec_.address4   := Customer_Info_Address_API.Get_Address4(customer_template_, rec_.address);
   rec_.address5    := Customer_Info_Address_API.Get_Address5(customer_template_, rec_.address);
   rec_.address6     := Customer_Info_Address_API.Get_Address6(customer_template_, rec_.address);
   rec_.city         := Customer_Info_Address_API.Get_City(customer_template_, rec_.address);
   rec_.addr_country     := Customer_Info_Address_API.Get_Country(customer_template_, rec_.address);
   rec_.county          := Customer_Info_Address_API.Get_State(customer_template_, rec_.address);
   rec_.state          := Customer_Info_Address_API.Get_State(customer_template_, rec_.address);
   rec_.zip_code        := Customer_Info_Address_API.Get_Zip_Code(customer_template_, rec_.address);
   rec_.country_code    := Customer_Info_Address_API.Get_Country_db(customer_template_, rec_.address);
   RETURN rec_;
END Address_Info___;


FUNCTION Misc_Info___(
   company_ IN VARCHAR2,
   contract_ IN VARCHAR2,
	customer_template_ IN VARCHAR2) RETURN Misc_Info_Structure_Rec
IS
   rec_ Misc_Info_Structure_Rec;
   addr_ customer_info_address_type_tab.address_id%TYPE;
   temp_company_     User_Finance_tab.company%TYPE;
BEGIN
   addr_ := Cust_Ord_Customer_API.Get_Delivery_Address(customer_template_);
   temp_company_ := NVL(company_,User_Finance_API.Get_Default_Company_Func());
	temp_company_ := NVL(temp_company_, Site_API.Get_Company(contract_));
   
   rec_.cust_grp                 := Cust_Ord_Customer_API.Get_Cust_Grp(customer_template_);
   rec_.currency_code            := Cust_Ord_Customer_API.Get_Currency_Code(customer_template_);
   rec_.salesman_code            := Cust_Ord_Customer_API.Get_Salesman_Code(customer_template_);
   rec_.ship_via_code            := Cust_Ord_Customer_Address_API.Get_Ship_Via_Code(customer_template_, addr_);
   rec_.delivery_terms           := Cust_Ord_Customer_Address_API.Get_Delivery_Terms(customer_template_, addr_);
   rec_.del_terms_location       := Cust_Ord_Customer_Address_API.Get_Del_Terms_Location(customer_template_, addr_);
   rec_.pay_term_id              := Identity_Invoice_Info_API.Get_Pay_Term_Id(temp_company_, customer_template_, Party_Type_API.Decode('CUSTOMER'));
   rec_.region_code              := Cust_Ord_Customer_Address_API.Get_Region_Code(customer_template_, addr_);
   rec_.district_code            := Cust_Ord_Customer_Address_API.Get_District_Code(customer_template_, addr_);
   rec_.market_code              := Cust_Ord_Customer_API.Get_Market_Code(customer_template_);
   rec_.ship_via_desc            := Mpccom_Ship_Via_API.Get_Description(rec_.ship_via_code);
   rec_.delivery_terms_desc      := Order_Delivery_Term_API.Get_Description(rec_.delivery_terms);
   $IF Component_Crm_SYS.INSTALLED $THEN
      Crm_Cust_Info_API.Get_Main_Rep_From_Template(rec_.main_representative_id, rec_.main_rep_name,customer_template_ );
   $END
	RETURN rec_;
END Misc_Info___;

FUNCTION Get_Ship_Via_Description___(
	ship_via_code_ IN VARCHAR2) RETURN VARCHAR2
IS
BEGIN
	RETURN Mpccom_Ship_Via_API.Get_Description(ship_via_code_);
END Get_Ship_Via_Description___;

FUNCTION Get_Delivery_Terms_Description___(
	delivery_terms_ IN VARCHAR2) RETURN VARCHAR2
IS
BEGIN
	 RETURN Order_Delivery_Term_API.Get_Description(delivery_terms_);
END Get_Delivery_Terms_Description___;

FUNCTION Create_Customer___(
                  new_customer_id_ IN VARCHAR2,
                  template_customer_id_ IN VARCHAR2,
                  company_ IN VARCHAR2,
                  contract_ IN VARCHAR2,
                  new_customer_name_ IN VARCHAR2,
                  associaton_no_ IN VARCHAR2,
                  reference_ IN VARCHAR2,
                  category_ IN VARCHAR2,
                  default_language_ IN VARCHAR2,
                  country_ IN VARCHAR2,
                  del_address_ IN VARCHAR2,
                  del_address_name_ IN VARCHAR2,
                  del_address1_ IN VARCHAR2,
                  del_address2_ IN VARCHAR2,
                  del_address3_ IN VARCHAR2,
                  del_address4_ IN VARCHAR2,
                  del_address5_ IN VARCHAR2,
                  del_address6_ IN VARCHAR2,
                  del_zip_code_ IN VARCHAR2,
                  del_city_ IN VARCHAR2,
                  del_state_ IN VARCHAR2,
                  del_county_ IN VARCHAR2,
                  del_country_code_ IN VARCHAR2,
                  del_own_addr_id_ IN VARCHAR2,
                  doc_address_ IN VARCHAR2,
                  doc_address_name_ IN VARCHAR2,
                  doc_address1_ IN VARCHAR2,
                  doc_address2_ IN VARCHAR2,
                  doc_address3_ IN VARCHAR2,
                  doc_address4_ IN VARCHAR2,
                  doc_address5_ IN VARCHAR2,
                  doc_address6_ IN VARCHAR2,
                  doc_zip_code_ IN VARCHAR2,
                  doc_city_ IN VARCHAR2,
                  doc_state_ IN VARCHAR2,
                  doc_county_ IN VARCHAR2,
                  doc_country_code_ IN VARCHAR2,
                  doc_own_addr_id_ IN VARCHAR2,
                  salesman_code_ IN VARCHAR2,
                  ship_via_code_ IN VARCHAR2,
                  delivery_terms_ IN VARCHAR2,
                  del_terms_location_ IN VARCHAR2,
                  region_code_ IN VARCHAR2,
                  district_code_ IN VARCHAR2,
                  market_code_ IN VARCHAR2,
                  pay_term_id_ IN VARCHAR2,
                  acq_site_ IN VARCHAR2,
                  internal_customer_ IN VARCHAR2,
                  cust_grp_ IN VARCHAR2,
                  currency_code_ IN VARCHAR2,
                  main_representative_id_ IN VARCHAR2,
                  current_form_ IN VARCHAR2) RETURN VARCHAR2
IS
 temp_company_     User_Finance_tab.company%TYPE;
 cust_no_ VARCHAR2(1000);
BEGIN
   cust_no_ := new_customer_id_;
   temp_company_ := NVL(company_,User_Finance_API.Get_Default_Company_Func());
   IF contract_ IS NOT NULL AND User_Allowed_Site_API.Is_Authorized(contract_) = 1 THEN     
	   temp_company_ := NVL(temp_company_, Site_API.Get_Company(contract_));
   END IF;
   CUST_ORD_CUSTOMER_API.New_Customer_From_Template(
                              cust_no_,
                              template_customer_id_,
                              temp_company_,
                              new_customer_name_,
                              associaton_no_,
                              reference_,
                              Customer_Category_API.Decode(category_),
                              Iso_Language_API.decode(default_language_),
                              Iso_Country_API.decode(country_),
                              del_address_,
                              del_address_name_,
                              del_address1_,
                              del_address2_,
                              del_address3_,
                              del_address4_,
                              del_address5_,
                              del_address6_,
                              del_zip_code_,
                              del_city_,
                              del_state_,
                              del_county_,
                              del_country_code_,
                              del_own_addr_id_,
                              doc_address_,
                              doc_address_name_,
                              doc_address1_,
                              doc_address2_,
                              doc_address3_,
                              doc_address4_,
                              doc_address5_,
                              doc_address6_,
                              doc_zip_code_,
                              doc_city_,
                              doc_state_,
                              doc_county_,
                              doc_country_code_,
                              doc_own_addr_id_,
                              salesman_code_,
                              ship_via_code_,
                              delivery_terms_,
                              del_terms_location_,
                              region_code_,
                              district_code_,
                              market_code_,
                              pay_term_id_,
                              acq_site_,
                              internal_customer_,
                              cust_grp_,
                              currency_code_,
                              main_representative_id_,
                              current_form_);
	RETURN cust_no_;
END Create_Customer___;

FUNCTION Unpack_Param_Attr___ (
	attr_ IN VARCHAR2) RETURN Param_Attr_Structure_Rec
IS
   rec_ Param_Attr_Structure_Rec;
BEGIN
   rec_.customer_text := Language_SYS.Translate_Constant(lu_name_, 'CUSTOMER_LABEL_QUICK_REG: customer'); 
   rec_.customer_upper_text := Language_SYS.Translate_Constant(lu_name_, 'CUSTOMER_LABEL_UPPER_QUICK_REG: Customer');         
   rec_.attr_type  := Message_SYS.Get_Name(attr_);
      IF rec_.attr_type = 'SITE' THEN
         message_sys.Get_Attribute(attr_, 'ACQUISITION_SITE', rec_.acq_site );
         message_sys.Get_Attribute(attr_, 'IS_INTERNAL_CUSTOMER', rec_.internal_customer);       
         message_sys.Get_Attribute(attr_, 'DEL_ADDR_NO', rec_.del_address);
      END IF;
      IF rec_.attr_type = 'SITE' OR rec_.attr_type = 'ORDER_QUOTATION' THEN
         message_sys.Get_Attribute(attr_, 'DEL_NAME', rec_.del_address_name);
         message_sys.Get_Attribute(attr_, 'DEL_ADDRESS1', rec_.del_address1);
         message_sys.Get_Attribute(attr_, 'DEL_ADDRESS2', rec_.del_address2);
         message_sys.Get_Attribute(attr_, 'DEL_ADDRESS3', rec_.del_address3);
         message_sys.Get_Attribute(attr_, 'DEL_ADDRESS4', rec_.del_address4);
         message_sys.Get_Attribute(attr_, 'DEL_ADDRESS5', rec_.del_address5);
         message_sys.Get_Attribute(attr_, 'DEL_ADDRESS6', rec_.del_address6);
         message_sys.Get_Attribute(attr_, 'DEL_ZIP_CODE', rec_.del_zip_code);
         message_sys.Get_Attribute(attr_, 'DEL_CITY', rec_.del_city);
         message_sys.Get_Attribute(attr_, 'DEL_STATE', rec_.del_state);
         message_sys.Get_Attribute(attr_, 'DEL_COUNTY', rec_.del_county);
         message_sys.Get_Attribute(attr_, 'DEL_COUNTRY', rec_.del_country_code);
         message_sys.Get_Attribute(attr_, 'DEL_EAN_LOCATION', rec_.del_own_addr_id); 
      END IF;
      IF rec_.attr_type = 'SITE' OR rec_.attr_type = 'ORDER_QUOTATION' THEN
         message_sys.Get_Attribute(attr_, 'DOC_NAME', rec_.doc_address_name);
         message_sys.Get_Attribute(attr_, 'DOC_ADDRESS1', rec_.doc_address1);
         message_sys.Get_Attribute(attr_, 'DOC_ADDRESS2', rec_.doc_address2);
         message_sys.Get_Attribute(attr_, 'DOC_ADDRESS3', rec_.doc_address3);
         message_sys.Get_Attribute(attr_, 'DOC_ADDRESS4', rec_.doc_address4);
         message_sys.Get_Attribute(attr_, 'DOC_ADDRESS5', rec_.doc_address5);
         message_sys.Get_Attribute(attr_, 'DOC_ADDRESS6', rec_.doc_address6);
         message_sys.Get_Attribute(attr_, 'DOC_ZIP_CODE', rec_.doc_zip_code);
         message_sys.Get_Attribute(attr_, 'DOC_CITY', rec_.doc_city);
         message_sys.Get_Attribute(attr_, 'DOC_STATE', rec_.doc_state);
         message_sys.Get_Attribute(attr_, 'DOC_COUNTY', rec_.doc_county);
         message_sys.Get_Attribute(attr_, 'DOC_COUNTRY', rec_.doc_country_code);
         message_sys.Get_Attribute(attr_, 'DOC_EAN_LOCATION', rec_.doc_own_addr_id); 
      END IF;
      IF rec_.attr_type = 'ORDER_QUOTATION'  OR rec_.attr_type = 'SALES_CONTRACT' THEN
         message_sys.Get_Attribute(attr_, 'NEW_CUSTOMER_NAME', rec_.new_customer_name);
      END IF;
      IF rec_.attr_type = 'ORDER_QUOTATION' THEN
         message_sys.Get_Attribute(attr_, 'CUST_REF', rec_.reference);
         message_sys.Get_Attribute(attr_, 'LANGUAGE_CODE', rec_.default_language);
         message_sys.Get_Attribute(attr_, 'SALESMAN_CODE', rec_.salesman_code);
         message_sys.Get_Attribute(attr_, 'SHIP_VIA_CODE', rec_.ship_via_code);
         message_sys.Get_Attribute(attr_, 'DELIVERY_TERMS', rec_.delivery_terms);
         message_sys.Get_Attribute(attr_, 'DEL_TERMS_LOCATION', rec_.del_terms_location);
         message_sys.Get_Attribute(attr_, 'PAY_TERM_ID', rec_.pay_term_id);
         message_sys.Get_Attribute(attr_, 'VAT_DB', rec_.vat_db);
         message_sys.Get_Attribute(attr_, 'REGION_CODE', rec_.region_code);
         message_sys.Get_Attribute(attr_, 'DISTRICT_CODE', rec_.district_code);
         message_sys.Get_Attribute(attr_, 'MARKET_CODE', rec_.market_code);     
      END IF;
      IF rec_.attr_type = 'BUSINESS_OPPORTUNITY' THEN       
        rec_.customer_text := Language_SYS.Translate_Constant(lu_name_, 'LABEL_QUICK_REG: account'); 
        rec_.customer_upper_text := Language_SYS.Translate_Constant(lu_name_, 'LABEL_UPPER_QUICK_REG: Account');   
      END IF;
   
   RETURN rec_;
END Unpack_Param_Attr___;


