-----------------------------------------------------------------------------
--
--  Logical unit: ConfigCharPriceCombinationHandling
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------

layer Core;

@Override
@IgnoreUnitTest MethodOverride
PROCEDURE CRUD_Default___ (
   key_  IN  Config_Price_Combo_Factor_Key,
   attr_ IN OUT VARCHAR2,
   info_ OUT VARCHAR2 )
IS
   combination_id_                VARCHAR2(24);
   config_price_combination_rec_  Config_Price_Combination_API.Public_Rec;
BEGIN
   combination_id_                := Client_SYS.Get_Item_Value('COMBINATION_ID', attr_);
   config_price_combination_rec_  := Config_Price_Combination_API.Get(combination_id_);
   super(key_, attr_, info_);
   Client_SYS.Add_To_Attr('PARENT_CONFIG_FAMILY_ID', config_price_combination_rec_.config_family_id, attr_);
END CRUD_Default___;

@Override
@IgnoreUnitTest MethodOverride
PROCEDURE CRUD_Create___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Config_Price_Combo_Factor_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT VARCHAR2,
   action_ IN  VARCHAR2 )
IS
   factor_type_db_           Config_Price_Combo_Factor.factor_type_db%TYPE;
   factor_value_             Config_Price_Combo_Factor.factor_value%TYPE;
BEGIN
   factor_type_db_  := Client_SYS.Get_Item_Value('FACTOR_TYPE_DB', attr_);
   factor_value_    := Client_SYS.Get_Item_Value('FACTOR_VALUE', attr_);
   
   IF factor_value_ IS NOT NULL  THEN
      Client_SYS.Add_To_Attr('FACTOR_VALUE', factor_value_, attr_);
   END IF;
   
   IF (factor_type_db_ = 'CHARVALUE' OR factor_type_db_ = 'CHARQTY') THEN
      Client_SYS.Add_To_Attr('CHARACTERISTIC_ID', factor_value_, attr_);
   END IF;
   super(etag_, key_, attr_, info_, action_);
END CRUD_Create___;

@DynamicComponentDependency CFGCHR
@IgnoreUnitTest TrivialFunction
FUNCTION Get_Value_Type_Db___(
   factor_value_ IN VARCHAR2 )  RETURN VARCHAR2
IS
BEGIN
   RETURN Config_Characteristic_API.Get_Config_Value_Type_Db(factor_value_);
END Get_Value_Type_Db___;

@Override
@IgnoreUnitTest MethodOverride
PROCEDURE CRUD_Default___ (
   key_  IN  Config_Price_Combo_Value_Key,
   attr_ IN OUT VARCHAR2,
   info_ OUT VARCHAR2 )
IS
   CURSOR get_factors(combination_id_ VARCHAR2) IS
      SELECT characteristic_id
      FROM Config_Price_Combo_Factor
      WHERE combination_id = combination_id_
      ORDER BY factor_no;

   count_                         NUMBER;
   combination_id_                VARCHAR2(24);
   config_combination_table_rec_  Config_Price_Combination_API.Public_Rec;
BEGIN
   combination_id_                := Client_SYS.Get_Item_Value('COMBINATION_ID', attr_);
   config_combination_table_rec_  := Config_Price_Combination_API.Get(combination_id_);
   super(key_, attr_, info_);

   count_ := 1;
   FOR rec_ IN get_factors(combination_id_) LOOP
      Client_SYS.Add_To_Attr('CHAR_COMBINATION_VALUE' || count_, Config_Price_Combo_Factor_API.Get_Factor_Value_By_Index(combination_id_, count_), attr_);
      Client_SYS.Add_To_Attr('CHAR_COMBINATION_VALUE' || count_ ||'_TYPE', Config_Price_Combo_Factor_API.Get_Factor_Lov_Info(combination_id_, Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(combination_id_, count_),count_), attr_);
      count_ := count_ + 1;
   END LOOP;
   Client_SYS.Add_To_Attr('PARENT_CONFIG_FAMILY_ID', config_combination_table_rec_.config_family_id, attr_);
END CRUD_Default___;

@Override
@IgnoreUnitTest MethodOverride
PROCEDURE CRUD_Create___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Config_Price_Combo_Value_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT VARCHAR2,
   action_ IN  VARCHAR2 )
IS
   combination_id_    VARCHAR2(24);
   sequence_value_    Config_Price_Combo_Value.sequence%TYPE;
BEGIN
   combination_id_    := Client_SYS.Get_Item_Value('COMBINATION_ID', attr_);
   sequence_value_    := Client_SYS.Get_Item_Value('SEQUENCE', attr_);
   Modify_Attr___(combination_id_, attr_);
   super(etag_, key_, attr_, info_, action_);
   IF (sequence_value_ IS NOT NULL) THEN
      Config_Price_Combo_Value_API.Check_Sequence_Unique(combination_id_);
   END IF;
END CRUD_Create___;

@Override
@IgnoreUnitTest MethodOverride
PROCEDURE CRUD_Update___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Config_Price_Combo_Value_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT VARCHAR2,
   action_ IN  VARCHAR2 )
IS
   sequence_value_    Config_Price_Combo_Value.sequence%TYPE;
BEGIN
   sequence_value_ := Client_SYS.Get_Item_Value('SEQUENCE', attr_);
   Modify_Attr___(key_.combination_id, attr_);
   super(etag_, key_, attr_, info_, action_);
   IF (sequence_value_ IS NOT NULL) THEN
      Config_Price_Combo_Value_API.Check_Sequence_Unique(key_.combination_id);
   END IF;
END CRUD_Update___;
   
@IgnoreUnitTest TrivialFunction
PROCEDURE Modify_Attr___ (
   combination_id_   IN VARCHAR2,
   attr_ IN OUT VARCHAR2 )
IS
   display_operator_value1_db_      Config_Price_Combo_Value.config_relational_oper1_db%TYPE;
   display_operator_value2_db_      Config_Price_Combo_Value.config_relational_oper2_db%TYPE;
   display_operator_value3_db_      Config_Price_Combo_Value.config_relational_oper3_db%TYPE;
   display_operator_value4_db_      Config_Price_Combo_Value.config_relational_oper4_db%TYPE;
   display_operator_value5_db_      Config_Price_Combo_Value.config_relational_oper5_db%TYPE;
   display_operator_value6_db_      Config_Price_Combo_Value.config_relational_oper6_db%TYPE;
   display_operator_value7_db_      Config_Price_Combo_Value.config_relational_oper7_db%TYPE;
   display_operator_value8_db_      Config_Price_Combo_Value.config_relational_oper8_db%TYPE;
   display_operator_value9_db_      Config_Price_Combo_Value.config_relational_oper9_db%TYPE;
   display_operator_value10_db_     Config_Price_Combo_Value.config_relational_oper10_db%TYPE;
   display_operator_value11_db_     Config_Price_Combo_Value.config_relational_oper11_db%TYPE;
   display_operator_value12_db_     Config_Price_Combo_Value.config_relational_oper12_db%TYPE;
   display_operator_value13_db_     Config_Price_Combo_Value.config_relational_oper13_db%TYPE;
   display_operator_value14_db_     Config_Price_Combo_Value.config_relational_oper14_db%TYPE;
   display_operator_value15_db_     Config_Price_Combo_Value.config_relational_oper15_db%TYPE;

   display_combination_value1_      Config_Price_Combo_Value.combination_value1%TYPE;
   display_combination_value2_      Config_Price_Combo_Value.combination_value2%TYPE;
   display_combination_value3_      Config_Price_Combo_Value.combination_value3%TYPE;
   display_combination_value4_      Config_Price_Combo_Value.combination_value4%TYPE;
   display_combination_value5_      Config_Price_Combo_Value.combination_value5%TYPE;
   display_combination_value6_      Config_Price_Combo_Value.combination_value6%TYPE;
   display_combination_value7_      Config_Price_Combo_Value.combination_value7%TYPE;
   display_combination_value8_      Config_Price_Combo_Value.combination_value8%TYPE;
   display_combination_value9_      Config_Price_Combo_Value.combination_value9%TYPE;
   display_combination_value10_     Config_Price_Combo_Value.combination_value10%TYPE;
   display_combination_value11_     Config_Price_Combo_Value.combination_value11%TYPE;
   display_combination_value12_     Config_Price_Combo_Value.combination_value12%TYPE;
   display_combination_value13_     Config_Price_Combo_Value.combination_value13%TYPE;
   display_combination_value14_     Config_Price_Combo_Value.combination_value14%TYPE;
   display_combination_value15_     Config_Price_Combo_Value.combination_value15%TYPE;

   real_factor_no_                  Config_Price_Combo_Factor.factor_no%TYPE;
   count_                           NUMBER := 0;

   CURSOR factor_count IS
      SELECT count(factor_no)
      FROM Config_Price_Combo_Factor
      WHERE combination_id = combination_id_;
BEGIN
     
   OPEN factor_count;
   FETCH factor_count INTO count_;
   CLOSE factor_count;
   
   -- operator values
   display_operator_value1_db_        := Client_SYS.Get_Item_Value('DISPLAY_OPERATOR_VALUE1_DB', attr_);
   display_operator_value2_db_        := Client_SYS.Get_Item_Value('DISPLAY_OPERATOR_VALUE2_DB', attr_);
   display_operator_value3_db_        := Client_SYS.Get_Item_Value('DISPLAY_OPERATOR_VALUE3_DB', attr_);
   display_operator_value4_db_        := Client_SYS.Get_Item_Value('DISPLAY_OPERATOR_VALUE4_DB', attr_);
   display_operator_value5_db_        := Client_SYS.Get_Item_Value('DISPLAY_OPERATOR_VALUE5_DB', attr_);
   display_operator_value6_db_        := Client_SYS.Get_Item_Value('DISPLAY_OPERATOR_VALUE6_DB', attr_);
   display_operator_value7_db_        := Client_SYS.Get_Item_Value('DISPLAY_OPERATOR_VALUE7_DB', attr_);
   display_operator_value8_db_        := Client_SYS.Get_Item_Value('DISPLAY_OPERATOR_VALUE8_DB', attr_);
   display_operator_value9_db_        := Client_SYS.Get_Item_Value('DISPLAY_OPERATOR_VALUE9_DB', attr_);
   display_operator_value10_db_       := Client_SYS.Get_Item_Value('DISPLAY_OPERATOR_VALUE10_DB', attr_);
   display_operator_value11_db_       := Client_SYS.Get_Item_Value('DISPLAY_OPERATOR_VALUE11_DB', attr_);
   display_operator_value12_db_       := Client_SYS.Get_Item_Value('DISPLAY_OPERATOR_VALUE12_DB', attr_);
   display_operator_value13_db_       := Client_SYS.Get_Item_Value('DISPLAY_OPERATOR_VALUE13_DB', attr_);
   display_operator_value14_db_       := Client_SYS.Get_Item_Value('DISPLAY_OPERATOR_VALUE14_DB', attr_);
   display_operator_value15_db_       := Client_SYS.Get_Item_Value('DISPLAY_OPERATOR_VALUE15_DB', attr_);

   -- combination values
   display_combination_value1_        := Client_SYS.Get_Item_Value('DISPLAY_COMBINATION_VALUE1', attr_);
   display_combination_value2_        := Client_SYS.Get_Item_Value('DISPLAY_COMBINATION_VALUE2', attr_);
   display_combination_value3_        := Client_SYS.Get_Item_Value('DISPLAY_COMBINATION_VALUE3', attr_);
   display_combination_value4_        := Client_SYS.Get_Item_Value('DISPLAY_COMBINATION_VALUE4', attr_);
   display_combination_value5_        := Client_SYS.Get_Item_Value('DISPLAY_COMBINATION_VALUE5', attr_);
   display_combination_value6_        := Client_SYS.Get_Item_Value('DISPLAY_COMBINATION_VALUE6', attr_);
   display_combination_value7_        := Client_SYS.Get_Item_Value('DISPLAY_COMBINATION_VALUE7', attr_);
   display_combination_value8_        := Client_SYS.Get_Item_Value('DISPLAY_COMBINATION_VALUE8', attr_);
   display_combination_value9_        := Client_SYS.Get_Item_Value('DISPLAY_COMBINATION_VALUE9', attr_);
   display_combination_value10_       := Client_SYS.Get_Item_Value('DISPLAY_COMBINATION_VALUE10', attr_);
   display_combination_value11_       := Client_SYS.Get_Item_Value('DISPLAY_COMBINATION_VALUE11', attr_);
   display_combination_value12_       := Client_SYS.Get_Item_Value('DISPLAY_COMBINATION_VALUE12', attr_);
   display_combination_value13_       := Client_SYS.Get_Item_Value('DISPLAY_COMBINATION_VALUE13', attr_);
   display_combination_value14_       := Client_SYS.Get_Item_Value('DISPLAY_COMBINATION_VALUE14', attr_);
   display_combination_value15_       := Client_SYS.Get_Item_Value('DISPLAY_COMBINATION_VALUE15', attr_);


   FOR i IN 1..count_ LOOP
      real_factor_no_ := Config_Price_Combo_Factor_API.Get_Factor_No_By_Index(combination_id_, i);
      CASE i
      WHEN 1 THEN
         IF display_operator_value1_db_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('CONFIG_RELATIONAL_OPER'||real_factor_no_||'_DB', display_operator_value1_db_, attr_);
         END IF;
         IF display_combination_value1_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('COMBINATION_VALUE' || real_factor_no_ , display_combination_value1_, attr_);
         END IF;
      WHEN 2 THEN
         IF display_operator_value2_db_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('CONFIG_RELATIONAL_OPER'||real_factor_no_||'_DB', display_operator_value2_db_, attr_);
         END IF;
         IF display_combination_value2_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('COMBINATION_VALUE' || real_factor_no_ , display_combination_value2_, attr_);
         END IF;
      WHEN 3 THEN
         IF display_operator_value3_db_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('CONFIG_RELATIONAL_OPER'||real_factor_no_||'_DB', display_operator_value3_db_, attr_);
         END IF;
         IF display_combination_value3_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('COMBINATION_VALUE' || real_factor_no_ , display_combination_value3_, attr_);
         END IF;
         WHEN 4 THEN
         IF display_operator_value4_db_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('CONFIG_RELATIONAL_OPER'||real_factor_no_||'_DB', display_operator_value4_db_, attr_);
         END IF;
         IF display_combination_value4_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('COMBINATION_VALUE' || real_factor_no_ , display_combination_value4_, attr_);
         END IF;
      WHEN 5 THEN
         IF display_operator_value5_db_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('CONFIG_RELATIONAL_OPER'||real_factor_no_||'_DB', display_operator_value5_db_, attr_);
         END IF;
         IF display_combination_value5_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('COMBINATION_VALUE' || real_factor_no_ , display_combination_value5_, attr_);
         END IF;
      WHEN 6 THEN
         IF display_operator_value6_db_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('CONFIG_RELATIONAL_OPER'||real_factor_no_||'_DB', display_operator_value6_db_, attr_);
         END IF;
         IF display_combination_value6_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('COMBINATION_VALUE' || real_factor_no_ , display_combination_value6_, attr_);
         END IF;
      WHEN 7 THEN
         IF display_operator_value7_db_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('CONFIG_RELATIONAL_OPER'||real_factor_no_||'_DB', display_operator_value7_db_, attr_);
         END IF;
         IF display_combination_value7_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('COMBINATION_VALUE' || real_factor_no_ , display_combination_value7_, attr_);
         END IF;
      WHEN 8 THEN
         IF display_operator_value8_db_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('CONFIG_RELATIONAL_OPER'||real_factor_no_||'_DB', display_operator_value8_db_, attr_);
         END IF;
         IF display_combination_value8_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('COMBINATION_VALUE' || real_factor_no_ , display_combination_value8_, attr_);
         END IF;
      WHEN 9 THEN
         IF display_operator_value9_db_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('CONFIG_RELATIONAL_OPER'||real_factor_no_||'_DB', display_operator_value9_db_, attr_);
         END IF;
         IF display_combination_value9_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('COMBINATION_VALUE' || real_factor_no_ , display_combination_value9_, attr_);
         END IF;
      WHEN 10 THEN
         IF display_operator_value10_db_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('CONFIG_RELATIONAL_OPER'||real_factor_no_||'_DB', display_operator_value10_db_, attr_);
         END IF;
         IF display_combination_value10_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('COMBINATION_VALUE' || real_factor_no_ , display_combination_value10_, attr_);
         END IF;
      WHEN 11 THEN
         IF display_operator_value11_db_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('CONFIG_RELATIONAL_OPER'||real_factor_no_||'_DB', display_operator_value11_db_, attr_);
         END IF;
         IF display_combination_value11_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('COMBINATION_VALUE' || real_factor_no_ , display_combination_value11_, attr_);
         END IF;
      WHEN 12 THEN
         IF display_operator_value12_db_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('CONFIG_RELATIONAL_OPER'||real_factor_no_||'_DB', display_operator_value12_db_, attr_);
         END IF;
         IF display_combination_value12_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('COMBINATION_VALUE' || real_factor_no_ , display_combination_value12_, attr_);
         END IF;
      WHEN 13 THEN
         IF display_operator_value13_db_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('CONFIG_RELATIONAL_OPER'||real_factor_no_||'_DB', display_operator_value13_db_, attr_);
         END IF;
         IF display_combination_value13_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('COMBINATION_VALUE' || real_factor_no_ , display_combination_value13_, attr_);
         END IF;
      WHEN 14 THEN
         IF display_operator_value14_db_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('CONFIG_RELATIONAL_OPER'||real_factor_no_||'_DB', display_operator_value14_db_, attr_);
         END IF;
         IF display_combination_value14_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('COMBINATION_VALUE' || real_factor_no_ , display_combination_value14_, attr_);
         END IF;
      WHEN 15 THEN
         IF display_operator_value15_db_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('CONFIG_RELATIONAL_OPER'||real_factor_no_||'_DB', display_operator_value15_db_, attr_);
         END IF;
         IF display_combination_value15_ IS NOT NULL THEN
            Client_SYS.Add_To_Attr('COMBINATION_VALUE' || real_factor_no_ , display_combination_value15_, attr_);
         END IF;
      END CASE;
   END LOOP;
END Modify_Attr___;

@IgnoreUnitTest TrivialFunction
FUNCTION Test_Combination___ (
   combination_id_ IN VARCHAR2) RETURN Test_Result_Structure_Rec
IS
   result_rec_     Test_Result_Structure_Rec;
BEGIN
   Config_Price_Combination_API.Test_Combination(result_rec_.test_result,result_rec_.test_return_type, result_rec_.test_sequence, combination_id_);
   RETURN result_rec_;
END Test_Combination___;
