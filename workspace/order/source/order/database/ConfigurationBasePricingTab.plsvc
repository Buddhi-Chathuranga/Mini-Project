-----------------------------------------------------------------------------
--
--  Fragment:     ConfigurationBasePricingTab
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date       Sign    History
--  ------     ------  ---------------------------------------------------------
-- 2020-11-11  MaEelk  SCPR2020R1-11302, characteristic_structure_rec_.price_method was handled as an enumeration
-- 2019-01-03  IzShlk  SCUXXW4-8982, Created.
-----------------------------------------------------------------------------

layer Core;

FUNCTION Calculate_Fixed_Prices___(
   contact_            IN VARCHAR2,
   catalog_no_         IN VARCHAR2,
   use_price_incl_tax_ IN BOOLEAN,
   amount_incl_tax_    IN NUMBER,
   amount_             IN NUMBER )  RETURN Calculate_Amount_Structure_Rec
IS
   amount_temp_          NUMBER;
   amount_incl_tax_temp_ NUMBER;
   tax_code_             VARCHAR2(20);
   taxable_              BOOLEAN;
   tax_calc_base_        VARCHAR2(100);
   calculate_price_      BOOLEAN := FALSE;
   -- TODO: Fetch the ifs curr rounding from profile
   ifs_curr_rounding_    NUMBER := 16;
   calculate_amount_structure_rec_ Calculate_Amount_Structure_Rec;
BEGIN
   taxable_  := (Sales_Part_API.Get_Taxable_Db(contact_, catalog_no_) = 'TRUE');
   tax_code_ := Sales_Part_API.Get_Tax_Code(contact_, catalog_no_);
   
   IF taxable_ AND tax_code_ IS NOT NULL THEN
      IF use_price_incl_tax_ THEN
         tax_calc_base_ := 'GROSS_BASE';
      ELSE
         tax_calc_base_ := 'NET_BASE';
      END IF;
      calculate_price_ := TRUE;
   END IF;
   
   IF calculate_price_ THEN
      amount_temp_ := amount_;
      amount_incl_tax_temp_ := amount_incl_tax_;
      
      Tax_Handling_Order_Util_API.Calc_Price_Source_Prices(amount_temp_, amount_incl_tax_temp_, contact_, catalog_no_, tax_calc_base_, ifs_curr_rounding_); 
   ELSE
      IF use_price_incl_tax_ THEN
         amount_temp_ := amount_incl_tax_;
         amount_incl_tax_temp_ := amount_incl_tax_;
      ELSE
         amount_temp_ := amount_;
         amount_incl_tax_temp_ := amount_;
      END IF;
   END IF;
   
   calculate_amount_structure_rec_.price := amount_temp_;
   calculate_amount_structure_rec_.price_incl_tax := amount_incl_tax_temp_;
   RETURN calculate_amount_structure_rec_;
END Calculate_Fixed_Prices___;

FUNCTION Get_Characteristic_Info___(
   part_no_           IN VARCHAR2,
   spec_rev_no_       IN NUMBER,
   characteristic_id_ IN VARCHAR2 )  RETURN Characteristic_Structure_Rec
IS
   characteristic_structure_rec_ Characteristic_Structure_Rec;
BEGIN
   $IF Component_Cfgchr_SYS.INSTALLED $THEN
      characteristic_structure_rec_.price_method := Base_Part_Characteristic_API.Get_Char_Qty_Price_Method_Db(part_no_, spec_rev_no_, characteristic_id_);
      characteristic_structure_rec_.description  := Config_Characteristic_API.Get_Description(characteristic_id_);
      RETURN characteristic_structure_rec_;
   $ELSE
      RETURN NULL;
   $END    
  
END Get_Characteristic_Info___;

@Override
PROCEDURE CRUD_Default___ (
   key_  IN  Characteristic_Base_Price_Key,
   attr_ IN OUT VARCHAR2,
   info_ OUT VARCHAR2 )
IS
   spec_revision_no_ NUMBER;
   part_no_          VARCHAR2(25);
BEGIN
   $IF Component_Cfgchr_SYS.INSTALLED $THEN
      part_no_ := Client_SYS.Get_Item_Value('PART_NO', attr_);
      -- If non-inventory part, set part_no = catalog_no
      IF part_no_ IS NULL THEN
         part_no_ := Client_SYS.Get_Item_Value('CATALOG_NO', attr_);
      END IF;
      spec_revision_no_ := Config_Part_Spec_Rev_API.Get_Spec_Rev_For_Date(part_no_, Site_API.Get_Site_Date(Client_SYS.Get_Item_Value('CONTRACT', attr_)));

   super(key_, attr_, info_);
      Client_SYS.Set_Item_Value('SPEC_REVISION_NO', spec_revision_no_ ,attr_ );
   $ELSE
      NULL;
   $END
END CRUD_Default___;