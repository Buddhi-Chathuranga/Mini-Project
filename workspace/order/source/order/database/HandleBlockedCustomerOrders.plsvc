-----------------------------------------------------------------------------
--
--  Logical unit: HandleBlockedCustomerOrders
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ----------  ------  ---------------------------------------------------------
--  2018-07-20  MalLlk  SCUXXW4-1356, Created. Added Release_Customer_Order___ and Release_Credit_Check___.
---------------------------------------------------------------------------------

layer Core;

PROCEDURE Release_Customer_Order___ (
   selection_ IN VARCHAR2 ) 
IS   
   order_no_  VARCHAR2(12);
   ptr_       NUMBER;
   name_      VARCHAR2(50);
   value_     VARCHAR2(50);
BEGIN
   WHILE (Get_Next_From_Attr___(selection_, ptr_, name_, value_)) LOOP
      IF (name_ = 'ORDER_NO' ) THEN
         order_no_ := value_;
         
         Customer_Order_Initial_Check___(order_no_);
         Customer_Order_API.Start_Release_Blocked(order_no_, 'FALSE');   
      END IF;
   END LOOP;
END Release_Customer_Order___;

PROCEDURE Release_Credit_Check___ (
   selection_ IN VARCHAR2 ) 
IS
   order_no_  VARCHAR2(12);
   ptr_       NUMBER;
   name_      VARCHAR2(50);
   value_     VARCHAR2(50);
BEGIN
   WHILE (Get_Next_From_Attr___(selection_, ptr_, name_, value_)) LOOP
      IF (name_ = 'ORDER_NO' ) THEN
         order_no_ := value_;
         
         Customer_Order_Initial_Check___(order_no_);
         Customer_Order_API.Start_Release_Blocked(order_no_, 'TRUE');   
      END IF;
   END LOOP;   
END Release_Credit_Check___;

FUNCTION Get_Next_From_Attr___ (
   attr_  IN     VARCHAR2,
   ptr_   IN OUT NOCOPY NUMBER,
   name_  IN OUT NOCOPY VARCHAR2,
   value_ IN OUT NOCOPY VARCHAR2 ) RETURN BOOLEAN
IS
   from_  NUMBER;
   to_    NUMBER;
   index_ NUMBER;
   record_index_ NUMBER;
   record_separator_ VARCHAR2(1) := ';';
   field_separator_   VARCHAR2(1) := '^';
   value_separator_  VARCHAR2(1) := '=';
BEGIN
   from_ := nvl(ptr_, 1);
   to_   := instr(attr_, field_separator_, from_);
   record_index_ := instr(attr_, record_separator_, from_);
   IF (to_ > 0) THEN
      index_ := instr(attr_, value_separator_, from_);
      name_  := substr(attr_, from_, index_-from_);
      value_ := substr(attr_, index_+1, to_-index_-1);
      ptr_   := to_+1;
      IF ptr_ = record_index_ THEN 
         ptr_   := ptr_+1;
      END IF;
      RETURN(TRUE);
   ELSE
      RETURN(FALSE);
   END IF;
END Get_Next_From_Attr___;