-----------------------------------------------------------------------------
--
--  Logical unit: CopySalesPriceList
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
-- 
--  Date       Sign    History
--  ------     ------  ---------------------------------------------------------
-- 2018-09-13  MaEelk  SCUXXW4-8287, Created.
-----------------------------------------------------------------------------

layer Core;

FUNCTION Fetch_Default_Company___ RETURN VARCHAR2
IS
      
BEGIN
   RETURN User_Finance_API.Get_Default_Company_Func();
END Fetch_Default_Company___;


FUNCTION Fetch_Defaults___(
   price_list_no_ IN VARCHAR2 )  RETURN Default_Value_Struc_Rec
IS
   sales_price_list_rec_  Sales_Price_List_API.Public_Rec;
   sales_price_group_id_ VARCHAR2(10) := Sales_Price_List_API.Get_Sales_Price_Group_Id(price_list_no_); 
   default_value_struc_rec_ Default_Value_Struc_Rec;
BEGIN
   sales_price_list_rec_ := Sales_Price_List_API.Get(price_list_no_); 
   default_value_struc_rec_.sales_price_group_id := sales_price_list_rec_.sales_price_group_id;
   default_value_struc_rec_.sales_price_group_type := Sales_Price_Group_API.Get_Sales_Price_Group_Type(sales_price_list_rec_.sales_price_group_id);
   default_value_struc_rec_.sales_price_group_type_db := Sales_Price_Group_API.Get_Sales_Price_Group_Type_Db(sales_price_group_id_);  
   default_value_struc_rec_.assortment_id := sales_price_list_rec_.assortment_id;
   default_value_struc_rec_.currency_code := sales_price_list_rec_.currency_code;
   RETURN default_value_struc_rec_;
END Fetch_Defaults___;

FUNCTION Fetch_Currency_Rate___(
   owning_company_     IN VARCHAR2,
   from_currency_code_ IN VARCHAR2,
   to_currency_code_   IN VARCHAR2 ) RETURN NUMBER
IS
   currency_type_           VARCHAR2(10);
   conv_factor_             NUMBER;
   rate_                     NUMBER;
   tempory_currency_rate_   NUMBER;
   currency_rate_           NUMBER;
BEGIN
   Invoice_Library_API.Get_Currency_Rate_Defaults(currency_type_, conv_factor_, rate_, owning_company_, from_currency_code_, SYSDATE, 'CUSTOMER', NULL); 
   tempory_currency_rate_     := rate_ / conv_factor_;
   Invoice_Library_API.Get_Currency_Rate_Defaults(currency_type_, conv_factor_, rate_, owning_company_, to_currency_code_, SYSDATE, 'CUSTOMER', NULL);
   currency_rate_ := (tempory_currency_rate_ * conv_factor_ / rate_) ;
   RETURN currency_rate_;
END Fetch_Currency_Rate___;

FUNCTION Copy_Price_List___ (
   from_price_list_no_        IN VARCHAR2,
   from_valid_from_date_      IN DATE,
   to_owning_company_         IN VARCHAR2,
   to_new_price_list_no_      IN VARCHAR2,
   to_existing_price_list_no_ IN VARCHAR2,
   to_price_list_description_ IN VARCHAR2,
   to_currency_               IN VARCHAR2,
   to_assortment_id_          IN VARCHAR2,
   to_valid_from_date_        IN DATE,
   currency_rate_             IN NUMBER,
   copy_method_               IN VARCHAR2,
   include_both_dates_        IN BOOLEAN ) RETURN NUMBER
IS
   items_copied_     NUMBER;  
   raise_message_    VARCHAR2(5);
   include_period_   VARCHAR2(5) := 'FALSE';
   to_price_list_no_ VARCHAR2(10) := to_new_price_list_no_;
BEGIN
   IF (include_both_dates_) THEN
      include_period_ := 'TRUE';   
   END IF;
   IF (copy_method_ = 'MODIFY') THEN
      to_price_list_no_ := to_existing_price_list_no_;
   END IF;
   Sales_Price_List_API.Copy__(items_copied_, 
                               raise_message_, 
                               from_price_list_no_, 
                               from_valid_from_date_, 
                               to_owning_company_, 
                               to_price_list_no_, 
                               to_price_list_description_, 
                               to_currency_, 
                               to_assortment_id_, 
                               to_valid_from_date_, 
                               currency_rate_, 
                               copy_method_, 
                               include_period_);
   RETURN items_copied_;
END Copy_Price_List___;