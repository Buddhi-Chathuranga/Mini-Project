-----------------------------------------------------------------------------
--
--  Logical unit: ShipmentOrderUtility
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  211124  Kapblk  SC21R2-4397, Added RLS Indicator for the VIEW Send_Delnote_For_Shipment. 
--  210721  Achjlk  IP2020R1-722, Added columns contract,shipment_type,forward_agent_id,delivery_terms,
--                  ship_via_code,parent_consol_shipment_id,objstate to Send_Delnote_For_Shipment.
--  180426  DiKuLk  Bug 140770, Modified Cust_Ord_Line_Shipment_Pub to show partially delivered
--  180426          and invoiced customer order lines with frieght charges.
--  170517  RoJalk  STRSC-8549, Added the column Rental_Db to Cust_Ord_Line_Shipment_Pub.
--  160725  RoJalk  LIM-6995, Renamed rowstate to objstate in Shipment_Pub.
--  160610  MaIklk  LIM-7442, Moved Send_Delnote_For_Shipment view from SHPMNT to ORDER.
--  160608  MaIklk  LIM-7442, Fixed the usages of renaming Customer_Order_Deliv_Note to Delivery_Note.
--  160519  MaIklk  STRSC-2346, Removed CUST_ORDER_LINE_ADDRESS_2 from join in Cust_Ord_Line_Shipment_Pub
--  160519          and used GET methods instead.
--  160517  reanpl  STRLOC-58, Added handling of new attributes address3, address4, address5, address6 
--  160509  MaRalk  LIM-6531, Modified Shipment_Rma_Lov by replacing Shipment_Pub-currency_code value
--  160509          with Shipment_Freight_API.Get_Currency_Code. 
--  160420  MaIklk  LIM-7205, Added and removed some columns in Cust_Ord_Line_Shipment_Pub view.
--  160208  MaRalk  LIM-4120, Moved Shipment_Rma_Lov view definition from order/ShipmentOrderUtility LU
--  160208          and modified.
--  160113  MaIklk  STRSC-839, Added ORDER dynamic component dependency for Cust_Ord_Line_Shipment_Pub.
--  160104  MaIklk  LIM-4862, Added Customer_Order_Line_Shipment view.
--  151230  RoJalk  Created.
-----------------------------------------------------------------------------

layer Core;

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------
@ServerOnlyAccess
VIEW Cust_Ord_Line_Shipment_Pub IS
   Prompt = 'Customer Order Line Shipment'
   Order_No.Flags = 'PMI-L'
   Order_No.Datatype = 'STRING(50)/UPPERCASE'
   Order_No.Prompt = 'Order No'
   Order_No.Ref = 'CustomerOrder/NOCHECK'
   Line_No.Flags = 'KMI-L'
   Line_No.Datatype = 'STRING(50)'
   Line_No.Prompt = 'Line No'
   Rel_No.Flags = 'KMI-L'
   Rel_No.Datatype = 'STRING(50)'
   Rel_No.Prompt = 'Rel No'
   Line_Item_No.Flags = 'KMI--'
   Line_Item_No.Datatype = 'NUMBER'
   Line_Item_No.Prompt = 'Line Item No'
   Source_Ref_Type_Db.Flags = 'AMI--'
   Source_Ref_Type_Db.Datatype = 'STRING(20)'
   Source_Ref_Type_Db.Prompt = 'Source Ref Type'
   Source_Ref_Type.Flags = 'AMI--'
   Source_Ref_Type.Datatype = 'STRING(200)'
   Source_Ref_Type.Prompt = 'Source Ref Type'
   Contract.Flags = 'AMI--'
   Contract.Datatype = 'STRING(5)/UPPERCASE'
   Contract.Prompt = 'Site'
   Catalog_No.Flags = 'AMI--'
   Catalog_No.Datatype = 'STRING(25)/UPPERCASE'
   Catalog_No.Prompt = 'Sales Part Number'
   Catalog_No.Ref = 'SalesPart(contract)/NOCHECK'
   Part_No.Flags = 'A-I--'
   Part_No.Datatype = 'STRING(25)/UPPERCASE'
   Part_No.Prompt = 'Part No'
   Part_No.Ref = 'InventoryPart(contract)/NOCHECK'
   Sales_Unit_Meas.Flags = 'AMIU-'
   Sales_Unit_Meas.Datatype = 'STRING(10)'
   Sales_Unit_Meas.Prompt = 'Sales Unit Measure'
   Sales_Unit_Meas.Ref = 'IsoUnit/NOCHECK'
   Qty_Availabe_To_Connect.Flags = 'A----'
   Qty_Availabe_To_Connect.Datatype = 'NUMBER'
   Qty_Availabe_To_Connect.Prompt = 'Qty Availabe To Connect'
   Buy_Qty_Due.Flags = 'AMIU-'
   Buy_Qty_Due.Datatype = 'NUMBER'
   Buy_Qty_Due.Prompt = 'Buy Qty Due'
   Revised_Qty_Due.Flags = 'AMIU-'
   Revised_Qty_Due.Datatype = 'NUMBER'
   Revised_Qty_Due.Prompt = 'Revised Qty Due'
   Catalog_Desc.Flags = 'A-IU-'
   Catalog_Desc.Datatype = 'STRING(200)'
   Catalog_Desc.Prompt = 'Catalog Desc'   
   Customer_Part_No.Flags = 'A-I--'
   Customer_Part_No.Datatype = 'STRING(45)'
   Customer_Part_No.Prompt = 'Customer Part No'
   Planned_Delivery_Date.Flags = 'AMIU-'
   Planned_Delivery_Date.Datatype = 'DATE/DATETIME'
   Planned_Delivery_Date.Prompt = 'Planned Delivery Date'
   Planned_Due_Date.Flags = 'AMIU-'
   Planned_Due_Date.Datatype = 'DATE/DATE'
   Planned_Due_Date.Prompt = 'Planned Due Date'
   Promised_Delivery_Date.Flags = 'A-IU-'
   Promised_Delivery_Date.Datatype = 'DATE/DATETIME'
   Promised_Delivery_Date.Prompt = 'Promised Delivery Date'
   Qty_Assigned.Flags = 'AMIU-'
   Qty_Assigned.Datatype = 'NUMBER'
   Qty_Assigned.Prompt = 'Qty Assigned'
   Qty_Picked.Flags = 'AMIU-'
   Qty_Picked.Datatype = 'NUMBER'
   Qty_Picked.Prompt = 'Qty Picked'  
   Qty_Shipped.Flags = 'AMIU-'
   Qty_Shipped.Datatype = 'NUMBER'
   Qty_Shipped.Prompt = 'Qty Shipped'
   Qty_To_Ship.Flags = 'AMIU-'
   Qty_To_Ship.Datatype = 'NUMBER'
   Qty_To_Ship.Prompt = 'Qty To Ship'
   Wanted_Delivery_Date.Flags = 'A----'
   Wanted_Delivery_Date.Datatype = 'DATE/DATETIME'
   Wanted_Delivery_Date.Prompt = 'Wanted Delivery Date'
   Planned_Ship_Date.Flags = 'A----'
   Planned_Ship_Date.Datatype = 'DATE/DATETIME'
   Planned_Ship_Date.Prompt = 'Planned Ship Date'
   Planned_Ship_Period.Flags = 'A----'
   Planned_Ship_Period.Datatype = 'STRING(10)/UPPERCASE'
   Planned_Ship_Period.Prompt = 'Planned Ship Period'
   Planned_Ship_Period.Ref = 'WorkTimePeriod/NOCHECK'
   Deliver_To_Customer_No.Flags = 'A----'
   Deliver_To_Customer_No.Datatype = 'STRING(20)/UPPERCASE'
   Deliver_To_Customer_No.Prompt = 'Deliver-to-Customer No'
   Deliver_To_Customer_Name.Flags = 'A----'
   Deliver_To_Customer_Name.Datatype = 'STRING(100)'
   Deliver_To_Customer_Name.Prompt = 'Deliver-to-Customer Name'
   Ship_Addr_No.Flags = 'A-IU-'
   Ship_Addr_No.Datatype = 'STRING(50)'
   Ship_Addr_No.Prompt = 'Ship Addr No'
   Ship_Addr_No.Ref = 'CustOrdCustomerAddress(deliver_to_customer_no)/NOCHECK'
   Route_Id.Flags = 'A-IU-'
   Route_Id.Datatype = 'STRING(12)'
   Route_Id.Prompt = 'Route ID'
   Route_Id.Ref = 'DeliveryRoute/NOCHECK'
   Ship_Via_Code.Flags = 'A-IU-'
   Ship_Via_Code.Datatype = 'STRING(3)/UPPERCASE'
   Ship_Via_Code.Prompt = 'Ship Via Code'
   Ship_Via_Code.Ref = 'MpccomShipVia/NOCHECK'
   Delivery_Terms.Flags = 'AMIU-'
   Delivery_Terms.Datatype = 'STRING(5)/UPPERCASE'
   Delivery_Terms.Prompt = 'Delivery Terms'
   Delivery_Terms.Ref = 'OrderDeliveryTerm/NOCHECK'
   Configuration_Id.Flags = 'AMIU-'
   Configuration_Id.Datatype = 'STRING(50)'
   Configuration_Id.Prompt = 'Configuration ID'
   Configuration_Id.Ref = 'ConfigurationSpec(part_no)/NOCHECK'
   Project_Id.Flags = 'A----'
   Project_Id.Datatype = 'STRING(10)/UPPERCASE'
   Project_Id.Prompt = 'Project ID'
   Activity_Seq.Flags = 'A-IU-'
   Activity_Seq.Datatype = 'NUMBER'
   Activity_Seq.Prompt = 'Activity seq'
   Activity_Seq.Ref = 'Activity/NOCHECK'
   Ref_Id.Flags = 'A-IU-'
   Ref_Id.Datatype = 'STRING(35)'
   Ref_Id.Prompt = 'Ref ID'  
   Addr_Flag_Db.Flags = 'A----'
   Addr_Flag_Db.Datatype = 'STRING(20)'
   Addr_Flag_Db.Prompt = 'Addr Flag'
   Default_Addr_Flag_Db.Flags = 'A----'
   Default_Addr_Flag_Db.Datatype = 'STRING(20)'
   Default_Addr_Flag_Db.Prompt = 'Default Address Flag'   
   Customer_Address_Name.Flags = 'A-IU-'
   Customer_Address_Name.Datatype = 'STRING(35)'
   Customer_Address_Name.Prompt = 'Customer Address Name'
   Customer_Address1.Flags = 'A-IU-'
   Customer_Address1.Datatype = 'STRING(35)'
   Customer_Address1.Prompt = 'Customer Address1'
   Customer_Address2.Flags = 'A-IU-'
   Customer_Address2.Datatype = 'STRING(35)'
   Customer_Address2.Prompt = 'Customer Address2'
   Customer_Address3.Flags = 'A-IU-'
   Customer_Address3.Datatype = 'STRING(100)'
   Customer_Address3.Prompt = 'Customer Address3'
   Customer_Address4.Flags = 'A-IU-'
   Customer_Address4.Datatype = 'STRING(100)'
   Customer_Address4.Prompt = 'Customer Address4'
   Customer_Address5.Flags = 'A-IU-'
   Customer_Address5.Datatype = 'STRING(100)'
   Customer_Address5.Prompt = 'Customer Address5'
   Customer_Address6.Flags = 'A-IU-'
   Customer_Address6.Datatype = 'STRING(100)'
   Customer_Address6.Prompt = 'Customer Address6'
   Customer_City.Flags = 'A-IU-'
   Customer_City.Datatype = 'STRING(35)'
   Customer_City.Prompt = 'Customer City'
   Customer_State.Flags = 'A-IU-'
   Customer_State.Datatype = 'STRING(35)'
   Customer_State.Prompt = 'Customer State'
   Customer_Zip_Code.Flags = 'A-IU-'
   Customer_Zip_Code.Datatype = 'STRING(35)'
   Customer_Zip_Code.Prompt = 'Customer Zip Code'
   Customer_County.Flags = 'A-IU-'
   Customer_County.Datatype = 'STRING(35)'
   Customer_County.Prompt = 'Customer County'
   Customer_Country.Flags = 'A-IU-'
   Customer_Country.Datatype = 'STRING(35)'
   Customer_Country.Prompt = 'Customer Country'
   Supply_Country.Flags = 'A----'
   Supply_Country.Datatype = 'STRING(2)'
   Supply_Country.Prompt = 'Supply Country'
   Use_Price_Incl_Tax_Db.Flags = 'A----'
   Use_Price_Incl_Tax_Db.Datatype = 'STRING(20)'
   Use_Price_Incl_Tax_Db.Prompt = 'Use Price Incl Tax'
   Shipment_Type.Flags = 'AMIUL'
   Shipment_Type.Datatype = 'STRING(3)'
   Shipment_Type.Prompt = 'Shipment Type'
   Shipment_Type.Ref = 'ShipmentType/NOCHECK'
   Dock_Code.Flags = 'A-IU-'
   Dock_Code.Datatype = 'STRING(35)'
   Dock_Code.Prompt = 'Dock Code'
   Sub_Dock_Code.Flags = 'A-IU-'
   Sub_Dock_Code.Datatype = 'STRING(35)'
   Sub_Dock_Code.Prompt = 'Sub Dock Code'
   Location_No.Flags = 'A-IU-'
   Location_No.Datatype = 'STRING(35)'
   Location_No.Prompt = 'Location No' 
   Forward_Agent_Id.Flags = 'A-IU-'
   Forward_Agent_Id.Datatype = 'STRING(20/UPPERCASE'
   Forward_Agent_Id.Prompt = 'Forward Agent ID' 
   Forward_Agent_Id.Ref = 'ForwarderInfo/NOCHECK'
   Condition_Code.Flags = 'A-IU-'
   Condition_Code.Datatype = 'STRING(10)/UPPERCASE'
   Condition_Code.Prompt = 'Condition Code' 
   Condition_Code.Ref = 'ConditionCode/NOCHECK'   
   Adjusted_Weight_Gross.Flags = 'A-IU-'
   Adjusted_Weight_Gross.Datatype = 'NUMBER'
   Adjusted_Weight_Gross.Prompt = 'Adjusted Line Total Gross Weight' 
   Adjusted_Volume.Flags = 'A-IU-'
   Adjusted_Volume.Datatype = 'NUMBER'
   Adjusted_Volume.Prompt = 'Adjusted Line Total Volume' 
   Rental_Db.Flags = 'A----'
   Rental_Db.Datatype = 'STRING(5)'
   Rental_Db.Prompt = 'Rental'
   Shipment_Creation.Flags = 'AMIUL'
   Shipment_Creation.Datatype = 'STRING(200)'
   Shipment_Creation.Prompt = 'Shipment Creation'
   Customs_Value_Currency.Flags = 'A-IUL'
   Customs_Value_Currency.Datatype = 'STRING(3)' 
SELECT col.order_no                                 order_no,
       col.line_no                                  line_no,
       col.rel_no                                   rel_no,
       col.line_item_no                             line_item_no,
       'CUSTOMER_ORDER'                             source_ref_type_db,
       Logistics_Source_Ref_Type_API.Decode('CUSTOMER_ORDER') source_ref_type,
       col.contract                                 contract,
       col.catalog_no                               catalog_no,
       col.part_no                                  part_no,
       col.sales_unit_meas                          sales_unit_meas,
       (col.revised_qty_due - col.qty_shipped - col.open_shipment_qty + col.qty_shipdiff)*col.inverted_conv_factor/col.conv_factor  qty_availabe_to_connect,
       col.buy_qty_due                              buy_qty_due,
       col.revised_qty_due                          revised_qty_due,
       col.catalog_desc                             catalog_desc,       
       col.customer_part_no                         customer_part_no,
       col.planned_delivery_date                    planned_delivery_date,
       col.planned_due_date                         planned_due_date,
       col.promised_delivery_date                   promised_delivery_date,
       col.qty_assigned                             qty_assigned,
       col.qty_picked                               qty_picked,       
       col.qty_shipped                              qty_shipped,
       col.qty_to_ship                              qty_to_ship,
       col.wanted_delivery_date                     wanted_delivery_date,
       col.planned_ship_date                        planned_ship_date,
       col.planned_ship_period                      planned_ship_period,
       col.deliver_to_customer_no                   deliver_to_customer_no,      
       Customer_Info_API.Get_Name(col.deliver_to_customer_no)  deliver_to_customer_name,
       col.ship_addr_no                             ship_addr_no,
       col.route_id                                 route_id,
       col.ship_via_code                            ship_via_code,
       col.delivery_terms                           delivery_terms,
       col.configuration_id                         configuration_id,
       col.project_id                               project_id,
       col.activity_seq                             activity_seq,
       col.ref_id                                   ref_id,        
       col.addr_flag                                addr_flag_db,
       col.default_addr_flag                        default_addr_flag_db,        
       Cust_Order_Line_Address_API.Get_Addr_1(col.order_no, col.line_no, col.rel_no, col.line_item_no)         customer_address_name,
       Cust_Order_Line_Address_API.Get_Address1(col.order_no, col.line_no, col.rel_no, col.line_item_no)       customer_address1,     
       Cust_Order_Line_Address_API.Get_Address2(col.order_no, col.line_no, col.rel_no, col.line_item_no)       customer_address2, 
       Cust_Order_Line_Address_API.Get_Address3(col.order_no, col.line_no, col.rel_no, col.line_item_no)       customer_address3, 
       Cust_Order_Line_Address_API.Get_Address4(col.order_no, col.line_no, col.rel_no, col.line_item_no)       customer_address4, 
       Cust_Order_Line_Address_API.Get_Address5(col.order_no, col.line_no, col.rel_no, col.line_item_no)       customer_address5, 
       Cust_Order_Line_Address_API.Get_Address6(col.order_no, col.line_no, col.rel_no, col.line_item_no)       customer_address6, 
       Cust_Order_Line_Address_API.Get_City(col.order_no, col.line_no, col.rel_no, col.line_item_no)           customer_city,     
       Cust_Order_Line_Address_API.Get_State(col.order_no, col.line_no, col.rel_no, col.line_item_no)          customer_state,    
       Cust_Order_Line_Address_API.Get_Zip_Code(col.order_no, col.line_no, col.rel_no, col.line_item_no)       customer_zip_code, 
       Cust_Order_Line_Address_API.Get_County(col.order_no, col.line_no, col.rel_no, col.line_item_no)         customer_county,   
       Cust_Order_Line_Address_API.Get_Country_Code(col.order_no, col.line_no, col.rel_no, col.line_item_no)   customer_country,
       co.supply_country                            supply_country,
       co.use_price_incl_tax                        use_price_incl_tax_db,
       col.shipment_type                            shipment_type,
       col.dock_code                                dock_code,
       col.sub_dock_code                            sub_dock_code,
       col.location_no                              location_no,
       col.forward_agent_id                         forward_agent_id,
       col.condition_code                           condition_code,
       col.adjusted_weight_gross                    adjusted_weight_gross,
       col.adjusted_volume                          adjusted_volume,
       col.rental                                   rental_db,
       Shipment_Creation_API.Decode(col.shipment_creation)   shipment_creation,
       co.customs_value_currency                   customs_value_currency,
       col.rowid                                   objid,
       ltrim(lpad(to_char(col.rowversion,'YYYYMMDDHH24MISS'),2000))                                  objversion,
       col.rowstate                                objstate,
       Customer_Order_Line_API.Finite_State_Decode__(col.rowstate)                                    state,
       col.rowkey                                  objkey
FROM   CUSTOMER_ORDER_TAB co, CUSTOMER_ORDER_LINE_TAB col
WHERE  co.order_no = col.order_no
       AND co.rowstate NOT IN ('Invoiced','Cancelled','Planned')
       AND (col.line_item_no = 0 OR (col.line_item_no < 0 AND NOT EXISTS (SELECT 1
                                                                          FROM  customer_order_line_tab colt
                                                                          WHERE col.order_no      = colt.order_no
                                                                          AND   col.line_no       = colt.line_no
                                                                          AND   col.rel_no        = colt.rel_no
                                                                          AND   colt.line_item_no > 0
                                                                          AND   colt.supply_code IN ('PD','ND','SEO')
                                                                          AND   colt.rowstate    != 'Cancelled')))
       AND col.supply_code NOT IN ('PD','IPD','ND','SEO')
       AND Cust_Order_Line_Address_API.Check_Exist_Line_Address(col.order_no, col.line_no, col.rel_no, col.line_item_no) = 'TRUE'
       AND (col.revised_qty_due - col.qty_shipped - col.open_shipment_qty + col.qty_shipdiff) > 0 
       AND col.rowstate IN ('Released', 'Reserved', 'Picked', 'PartiallyDelivered')
       AND EXISTS (SELECT 1
                     FROM user_allowed_site_pub usp
                    WHERE usp.site = col.contract)
       AND (col.rowstate = 'Released'
            OR
           (col.rowstate IN ('Reserved', 'Picked')
            AND NOT EXISTS (SELECT 1
                              FROM customer_order_reservation_tab cr
                             WHERE col.order_no     = cr.order_no
                               AND col.line_no      = cr.line_no
                               AND col.rel_no       = cr.rel_no
                               AND cr.pick_list_no != '*'
                               AND cr.shipment_id   = 0 
                               AND cr.qty_assigned  > 0
                               AND cr.qty_picked    = 0))
            OR
            (col.rowstate = 'PartiallyDelivered'
             AND NOT EXISTS (SELECT 1
                               FROM customer_order_reservation_tab cr
                              WHERE col.order_no     = cr.order_no
                                AND col.line_no      = cr.line_no
                                AND col.rel_no       = cr.rel_no
                                AND cr.pick_list_no != '*'
                                AND cr.shipment_id   = 0 
                                AND cr.qty_assigned  > 0
                                AND cr.qty_picked    = 0)))
       AND NOT EXISTS (SELECT 1
                         FROM cust_order_load_list_line_tab colll
                        WHERE col.order_no     = colll.order_no
                          AND col.line_no      = colll.line_no
                          AND col.rel_no       = colll.rel_no
                          AND col.line_item_no = colll.line_item_no)
       AND NOT EXISTS (SELECT 1
                         FROM delivery_note_pub dnp
                        WHERE col.order_no = dnp.order_no
                          AND dnp.pre_ship_invent_loc_no IS NOT NULL 
                          AND dnp.pre_ship_delivery_made IS NULL);      
                          
-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

@SecurityCheck Site.UserAuthorized(s.contract)
VIEW Shipment_Rma_Lov IS
   Prompt = 'Shipments available to Return'
   Shipment_Id.Flags = 'K---L'
   Shipment_Id.Datatype = 'NUMBER'
   Shipment_Id.Prompt = 'Shipment ID'
   Contract.Flags = 'A----'
   Contract.Datatype = 'STRING(5)/UPPERCASE'
   Contract.Prompt = 'Site'
   Contract.Ref = 'Site/NOCHECK'
   Receiver_Id.Flags = 'A----'
   Receiver_Id.Datatype = 'STRING(20)/UPPERCASE'
   Receiver_Id.Prompt = 'Receiver ID'
   Currency_Code.Flags = 'A----'
   Currency_Code.Datatype = 'STRING(3)/UPPERCASE'
   Currency_Code.Ref = 'IsoCurrency/NOCHECK'  
   Del_Note_No.Flags = 'A---L'
   Del_Note_No.Datatype = 'STRING(15)/UPPERCASE'
   Del_Note_No.Prompt = 'Delivery Note No'
SELECT shipment_id                                                              shipment_id,
       contract                                                                 contract,
       receiver_id                                                              receiver_id,
       Shipment_Freight_API.Get_Currency_Code(shipment_id)                      currency_code,
       Delivery_Note_API.Get_Delnote_No_For_Shipment(shipment_id)   del_note_no
FROM   Shipment_Pub s
WHERE  objstate IN ('Completed', 'Closed')
AND    EXISTS (SELECT 1 
               FROM  customer_order_delivery_tab cod, customer_order_line_tab col
               WHERE cod.shipment_id = s.shipment_id
               AND   cod.qty_shipped > 0
               AND   col.order_no = cod.order_no
               AND   col.line_no = cod.line_no
               AND   col.rel_no = cod.rel_no
               AND   col.line_item_no = cod.line_item_no
               AND   col.part_ownership ='COMPANY OWNED'
               AND   cod.cancelled_delivery = 'FALSE');  
 
@DbViewRowLevelSecurity CustomImplemented
VIEW Send_Delnote_For_Shipment IS
   Prompt = 'Send Delivery Note for Shipment'
   Order_No.Flags = 'PM--L'
   Order_No.Datatype = 'STRING(12)'
   Order_No.Prompt = 'Order No'
   Receiver_Id.Flags = 'A---L'
   Receiver_Id.Datatype = 'STRING(10)/UPPERCASE'
   Receiver_Id.Prompt = 'Deliver To Customer No'
   Delnote_No.Flags = 'A---L'
   Delnote_No.Datatype = 'STRING(15)'
   Delnote_No.Prompt = 'Delivery Note No'
SELECT DISTINCT sol.shipment_id        shipment_id,
       sol.source_ref1                 order_no,
       s.receiver_id                   receiver_id,
       dnp.delnote_no                  delnote_no,
       s.contract                      contract,
       s.shipment_type                 shipment_type,
       s.forward_agent_id              forward_agent_id,
       s.delivery_terms                delivery_terms,
       s.ship_via_code                 ship_via_code,
       s.parent_consol_shipment_id     parent_consol_shipment_id,
       s.objstate                      objstate,
       s.objid                         objid,
       s.objversion                    objversion,
       s.objkey                        objkey
FROM shipment_pub s, shipment_line_pub sol, delivery_note_pub dnp
WHERE sol.shipment_id = dnp.shipment_id
AND   sol.shipment_id = s.shipment_id
AND   s.del_note_printed = 'Y'
AND   sol.source_ref_type_db = 'CUSTOMER_ORDER'
AND EXISTS (SELECT 1
            FROM user_allowed_site_pub
            WHERE s.contract = site)
AND EXISTS (SELECT 1
            FROM customer_order_line_tab col
            WHERE col.order_no   = sol.source_ref1
            AND col.line_no      = sol.source_ref2
            AND col.rel_no       = sol.source_ref3
            AND col.line_item_no = sol.source_ref4
            AND col.demand_code  = 'IPD');

