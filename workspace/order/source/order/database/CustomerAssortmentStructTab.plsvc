--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-10-23  Akhalk  SCUXXW4-739, Converted from tbwCustomerAssortmentStruct using MTG Version: 1.23
--------------------------------------------------------------------------------------
layer Core;
---------------------------- GENERATED FROM APF --------------------------
FUNCTION Get_Name___ (
   customer_no_ IN VARCHAR2) RETURN VARCHAR2
IS
BEGIN
   RETURN Cust_Ord_Customer_API.Get_Name(customer_no_);
END Get_Name___;

FUNCTION Get_Descriptions___ (
   assortment_id_ IN VARCHAR2) RETURN VARCHAR2
IS
BEGIN
   RETURN Assortment_Structure_API.Get_Description(assortment_id_);
END Get_Descriptions___;

FUNCTION Get_Description3___ (
   classification_standard_ IN VARCHAR2) RETURN VARCHAR2
IS
BEGIN
   RETURN Classification_Standard_API.Get_Description(classification_standard_);
END Get_Description3___;

PROCEDURE Connect_Customers___ (
   key_ IN Conect_Cust_Assortment_Virtual_Key ) 
IS
   info_       VARCHAR2(32000);
   objid_      VARCHAR2(32000);
   objversion_ VARCHAR2(32000);
   attr_       VARCHAR2(32000);
BEGIN
   FOR rec_ IN Get_Customer_Array___(key_) LOOP
      Client_SYS.Clear_Attr(attr_);
      Client_SYS.Add_To_Attr('ASSORTMENT_ID',                  rec_.assortment_id,                                                        attr_);
      Client_SYS.Add_To_Attr('CUSTOMER_NO',                    rec_.customer_id,                                                          attr_);
      Client_SYS.Add_To_Attr('DEFAULT_ASSORTMENT_DB',          'FALSE',                                                                   attr_);
      Client_SYS.Add_To_Attr('CLASSIFICATION_STANDARD',        Assortment_Structure_API.Get_Classification_Standard(rec_.assortment_id),  attr_);
      Client_SYS.Add_To_Attr('LIMIT_SALES_TO_ASSORTMENTS_DB',  'TRUE',                                                                    attr_);
      
      Customer_Assortment_Struct_API.New__(info_, objid_, objversion_, attr_, 'DO');
   END LOOP;
END Connect_Customers___;

@Override
PROCEDURE CRUD_Create___(
   rec_ IN Conect_Cust_Assortment_Virtual_Rec )
IS
   detail_ Connect_Customer_List_Virtual_Rec;
   master_ Conect_Cust_Assortment_Virtual_Key;
   
   CURSOR get_lines_ IS
   SELECT customer_id,
          currency_code,
          customer_no_pay,
          cust_grp,
          cust_price_group_id,
          discount_type,
          discount,
          min_sales_amount,
          cr_stop,
          cust_ref,
          cycle_period,
          date_del,
          invoice_sort,
          last_ivc_date,
          order_conf_flag,
          pack_list_flag,
          salesman_code,
          commission_receiver_db,
          market_code,
          print_control_code,
          backorder_option,
          edi_auto_order_approval,
          edi_auto_change_approval,
          edi_auto_approval_user,
          edi_authorize_code,
          edi_site,
          confirm_deliveries_db,
          check_sales_grp_deliv_conf_db,
          order_id,
          category_db,
          acquisition_site,
          template_id,
          template_customer_db,
          template_customer_desc,
          quick_registered_customer_db,
          priority
     FROM cust_ord_customer_ent
    WHERE (customer_id NOT IN (SELECT customer_no
                                 FROM customer_assortment_struct
                                WHERE assortment_id = rec_.assortment_id))
      AND (customer_id IN (SELECT customer_id
                             FROM customer_info_custcategory_pub));
BEGIN
   super(rec_);
   master_.objkey := rec_.objkey;
   IF rec_.list_mode THEN
      FOR line_rec_ IN get_lines_ LOOP
         detail_.assortment_id                  := rec_.assortment_id;
         detail_.customer_id                    := line_rec_.customer_id;
         detail_.customer_name                  := Customer_Info_API.Get_Name(line_rec_.customer_id);
         detail_.commission_receiver            := CASE line_rec_.commission_receiver_db WHEN 'CREATE' THEN TRUE ELSE FALSE END;
         detail_.confirm_deliveries             := CASE line_rec_.confirm_deliveries_db WHEN 'TRUE' THEN TRUE ELSE NULL END;
         detail_.check_sales_group_setting      := CASE line_rec_.check_sales_grp_deliv_conf_db WHEN 'TRUE' THEN TRUE ELSE NULL END;
         detail_.internal_customer              := CASE line_rec_.category_db WHEN 'I' THEN TRUE ELSE NULL END;
         detail_.template_customer              := CASE line_rec_.template_customer_db WHEN 'TEMPLATE' THEN TRUE ELSE NULL END;
         detail_.quickly_registered_customer    := CASE line_rec_.quick_registered_customer_db WHEN 'QUICK' THEN TRUE ELSE NULL END;
         detail_.currency                       := line_rec_.currency_code;
         detail_.invoice_customer               := line_rec_.customer_no_pay;
         detail_.customer_statistic_group       := line_rec_.cust_grp;
         detail_.customer_price_group           := line_rec_.cust_price_group_id;
         detail_.discount_type                  := line_rec_.discount_type;
         detail_.discount                       := line_rec_.discount;
         detail_.min_sales_amount               := line_rec_.min_sales_amount;
         detail_.credit_stop                    := line_rec_.cr_stop;
         detail_.reference                      := line_rec_.cust_ref;
         detail_.cycle_interval                 := line_rec_.cycle_period;
         detail_.date_created                   := Customer_Info_API.Get_Creation_Date(line_rec_.customer_id);
         detail_.expire_date                    := line_rec_.date_del;
         detail_.invoice_type                   := line_rec_.invoice_sort;
         detail_.last_invoice_date              := line_rec_.last_ivc_date;
         detail_.order_confirmation             := line_rec_.order_conf_flag;
         detail_.delivery_notes                 := line_rec_.pack_list_flag;
         detail_.language_code                  := Cust_Ord_Customer_API.Get_Language_Code(line_rec_.customer_id);
         detail_.salesman_code                  := line_rec_.salesman_code;
         detail_.market_code                    := line_rec_.market_code;
         detail_.print_control_code             := line_rec_.print_control_code;
         detail_.backorder_option               := line_rec_.backorder_option;
         detail_.incoming_order                 := line_rec_.edi_auto_order_approval;
         detail_.incoming_change_request        := line_rec_.edi_auto_change_approval;
         detail_.approval_user                  := line_rec_.edi_auto_approval_user;
         detail_.edi_coordinator                := line_rec_.edi_authorize_code;
         detail_.edi_site                       := line_rec_.edi_site;
         detail_.order_type                     := line_rec_.order_id;
         detail_.customer_site                  := line_rec_.acquisition_site;
         detail_.co_tempate_id                  := line_rec_.template_id;
         detail_.template_description           := line_rec_.template_customer_desc;
         detail_.hierarchy                      := Cust_Hierarchy_Struct_API.Get_Hierarchy_Id(line_rec_.customer_id);
         detail_.hierarchy_description          := Customer_Hierarchy_API.Get_Description(Cust_Hierarchy_Struct_API.Get_Hierarchy_Id(line_rec_.customer_id));
         detail_.hierarchy_level                := Cust_Hierarchy_Struct_API.Get_Level_No(Cust_Hierarchy_Struct_API.Get_Hierarchy_Id(line_rec_.customer_id), line_rec_.customer_id);
         detail_.hierarchy_level_name           := Cust_Hierarchy_Struct_API.Get_Cust_Level_Name(Cust_Hierarchy_Struct_API.Get_Hierarchy_Id(line_rec_.customer_id), line_rec_.customer_id);
         detail_.priority                       := line_rec_.priority;
         New_Detail___(master_, detail_);
      END LOOP;
   END IF;
END CRUD_Create___;

PROCEDURE Add_Selected_Customer___ (
   super_parent_objkey_ IN VARCHAR2,
   selection_           IN VARCHAR2 ) 
IS
   key_        Connect_Customer_List_Virtual_Key;
   cust_rec_   Connect_Customer_List_Virtual_Rec;
   master_     Conect_Cust_Assortment_Virtual_Key;
   detail_     Connect_Customer_Virtual_Rec;
BEGIN
   master_.objkey := super_parent_objkey_;
   FOR rec_ IN (SELECT regexp_substr(selection_ ,'[^;]+', 1, LEVEL) AS rec_ FROM dual CONNECT BY regexp_substr(selection_, '[^;]+', 1, LEVEL) IS NOT NULL) LOOP
      key_.objkey := rec_.rec_;
      cust_rec_   := Get_Record___(key_);
      
      detail_.assortment_id   := cust_rec_.assortment_id;
      detail_.customer_id     := cust_rec_.customer_id;
      New_Detail___(master_, detail_);
      
      CRUD_Delete___(cust_rec_);
   END LOOP;
END Add_Selected_Customer___;