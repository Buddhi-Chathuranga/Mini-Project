-----------------------------------------------------------------------------
--
--  Logical unit: IncomingCustomerOrderHandling
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  171208  SeJalk  created.   
-----------------------------------------------------------------------------

layer Core;

FUNCTION Get_Internal_Customer_No___(
   site_ IN VARCHAR2 ) RETURN VARCHAR2
IS
   
BEGIN
   RETURN Cust_Ord_Customer_API.Get_Customer_No_From_Contract(site_);
END Get_Internal_Customer_No___;

FUNCTION Get_Count___(
   external_ IN VARCHAR2 ) RETURN NUMBER
IS
   
BEGIN
   RETURN External_Customer_Order_API.Count_Message_From_Ext_Ref(external_);
END Get_Count___;

FUNCTION Get_Defaults___(
   customer_no_ IN VARCHAR2,
   contract_    IN VARCHAR2 ) RETURN Default_Val_Structure_Rec
IS
   site_cust_rec_   Message_Defaults_Per_Cust_API.Public_Rec;
                            site_rec_        Site_Discom_Info_API.Public_Rec;
                            cust_rec_        Cust_Ord_Customer_API.Public_Rec;
   ret_ Default_Val_Structure_Rec;
BEGIN
   site_cust_rec_ := Message_Defaults_Per_Cust_API.Get(contract_, customer_no_);
   site_rec_      := Site_Discom_Info_API.Get(contract_);
   cust_rec_      := Cust_Ord_Customer_API.Get(customer_no_);
   ret_.authorize_code := site_cust_rec_.edi_authorize_code;
   ret_.authorize_code := nvl(ret_.authorize_code, site_rec_.edi_authorize_code);
   ret_.authorize_code := nvl(ret_.authorize_code, cust_rec_.edi_authorize_code);
   ret_.authorize_code := nvl(ret_.authorize_code, User_Default_API.Get_Authorize_Code);
   ret_.order_id := Customer_Order_API.Get_Default_Order_Type(contract_, customer_no_);
   ret_.limit_sales_to_assortments := Customer_Assortment_Struct_API.Check_Limit_Sales_To_Assorts(customer_no_);
   ret_.overrule_limit_sale_to_assort := SIte_Discom_Info_API.Get_Allow_Overrule_Limit_Sa_Db(contract_);
   RETURN ret_;
END Get_Defaults___;

PROCEDURE Approve_Cust_Order___ (
   message_id_                       IN NUMBER,
   authorize_code_             IN VARCHAR2,
   order_id_                   IN VARCHAR2,
   limit_sales_to_assortments_ IN BOOLEAN ) 
IS
    objid_               VARCHAR2(2000);
      objversion_          VARCHAR2(2000);
       attr_                VARCHAR2(4000);
       info_    VARCHAR2 (32000);
BEGIN
   
   SELECT objid, objversion
         INTO  objid_, objversion_
         FROM  EXTERNAL_CUSTOMER_ORDER
         WHERE message_id = message_id_;
   
   Client_SYS.Clear_Attr(attr_);
   Client_SYS.Add_To_Attr('AUTHORIZE_CODE', authorize_code_, attr_);
   Client_SYS.Add_To_Attr('ORDER_ID', order_id_, attr_);
   IF limit_sales_to_assortments_ THEN
      Client_SYS.Add_To_Attr('LIMIT_SALES_TO_ASSORTMENTS', 'TRUE', attr_);
   ELSE
      Client_SYS.Add_To_Attr('LIMIT_SALES_TO_ASSORTMENTS', 'FALSE', attr_);
   END IF;
   External_Customer_Order_API.Approve__(info_, objid_, objversion_, attr_, 'DO');
END Approve_Cust_Order___;

PROCEDURE Approve_Cust_Order___ (
	key_ IN Incoming_Customer_Order_Key,
	authorize_code_ IN VARCHAR2,
	order_id_ IN VARCHAR2,
	limit_sales_to_assortments_ IN BOOLEAN)
IS
BEGIN
	Approve_Cust_Order___(key_.message_id, authorize_code_, order_id_, limit_sales_to_assortments_);
END Approve_Cust_Order___;
