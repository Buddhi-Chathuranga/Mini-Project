-----------------------------------------------------------------------------
--
--  Fragment:     CustomerChargeTab
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date       Sign    History
--  ------     ------  ---------------------------------------------------------
-- 2020-03-02  MaRalk  SCXTEND-2236, Override CRUD_Default_Copy___ in order to avoid issues in the duplicate functionality. 
-- 2018-10-04  SeJalk  SCUXXW4-746, Created.
--------------------------------------------------------------------------------

layer Core;

@Override
PROCEDURE CRUD_Default_Copy___ (
   objid_      IN  VARCHAR2,
   key_        IN  Customer_Charge_Key,
   values_     IN  Copy_Values_Rec,
   attr_       OUT VARCHAR2,
   info_       OUT VARCHAR2 )
IS
   customer_id_ VARCHAR2(20);
BEGIN
   customer_id_ := key_.customer_id;
   super(objid_,key_, values_, attr_,info_ );
   Client_SYS.Set_Item_Value('CUSTOMER_ID', customer_id_, attr_);
END CRUD_Default_Copy___;   
   

FUNCTION Get_Charge_Defaults___(
   charge_type_ IN VARCHAR2,
   customer_no_ IN VARCHAR2,
   contract_    IN VARCHAR2 )  RETURN Charge_Defaults_Sturucture_Rec
IS
   sctrec_     Sales_Charge_Type_API.Public_Rec;
   rec_        Charge_Defaults_Sturucture_Rec;
   curr_rate_  NUMBER;
BEGIN
   sctrec_ := Sales_Charge_Type_API.Get(contract_, charge_type_);
   Customer_Order_Pricing_API.Get_Sales_Price_In_Currency(rec_.charge_amount,
                                                         curr_rate_,
                                                         customer_no_,
                                                         contract_,
                                                         Cust_Ord_Customer_API.Get_Currency_Code(customer_no_),
                                                         sctrec_.charge_amount);
	Customer_Order_Pricing_API.Get_Sales_Price_In_Currency(rec_.charge_amount_incl_tax,
                                                         curr_rate_,
                                                         customer_no_,
                                                         contract_,
                                                         Cust_Ord_Customer_API.Get_Currency_Code(customer_no_),
                                                         sctrec_.charge_amount_incl_tax);
   rec_.charge :=  sctrec_.charge;                                                      
   rec_.charge_cost :=  sctrec_.charge_cost;                                                      
   rec_.charge_cost_percent :=  sctrec_.charge_cost_percent;                                             
   RETURN rec_;
END Get_Charge_Defaults___;

FUNCTION Calculate_Charge_Amount___(
   charge_type_ IN VARCHAR2,
   contract_    IN VARCHAR2,
   amount_      IN NUMBER,
   incl_tax_    IN BOOLEAN )  RETURN NUMBER
IS
   sctrec_             Sales_Charge_Type_API.Public_Rec;
   tax_percentage_     NUMBER;
BEGIN
   sctrec_ := Sales_Charge_Type_API.Get(contract_, charge_type_);
	tax_percentage_     := Statutory_Fee_API.Get_Fee_Rate(Site_API.Get_Company(contract_), sctrec_.tax_code);
   IF amount_ IS NOT NULL THEN
      IF sctrec_.taxable = 'TRUE' AND sctrec_.tax_code IS NOT NULL THEN
         IF incl_tax_ THEN
            RETURN amount_/(tax_percentage_/100 + 1);
         ELSE
            RETURN amount_ * (tax_percentage_/100 + 1);
         END IF;
      ELSE
         RETURN amount_;
      END IF;
   ELSE
      RETURN NULL;
   END IF;     
END Calculate_Charge_Amount___;