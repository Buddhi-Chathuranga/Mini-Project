-----------------------------------------------------------------------------
--
--  Logical unit: CustomerOrder
--  Component:    ORDER
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  200609  KiSalk  Bug 154282(SCZ-10331), Creation of ship_conn_reserved_ord_tmp was moved to "OTHER DEFINITIONS" section to add 'ON COMMIT PRESERVE ROWS' 
--  200609          not to have a difference between "Fresh Installation" and "Upgrade".
--  170724  HaPulk  STRSC-11013, Renamed Temporary table SHIP_CONN_RESERVED_ORD_TEMP to align with naming convention.
--  160831  ChJalk  Bug 130966, Added temporary table ship_conn_reserved_ord_temp.
--  141217  HaPulk  PRSC-2400, Created
-----------------------------------------------------------------------------




layer Core;


-------------------- TABLE DEFINITIONS --------------------------------------




INDEX customer_order_ix1 IS customer_order_tab (customer_no);


INDEX customer_order_ix2 IS customer_order_tab (rowstate);


INDEX customer_order_ix3 IS customer_order_tab (customer_no_pay);


INDEX customer_order_ix4 IS customer_order_tab (pre_accounting_id);

     
INDEX customer_order_ix5 IS customer_order_tab (contract);



-------------------- OTHER DEFINITIONS --------------------------------------
DECLARE
   stmt_   VARCHAR2(2000);
BEGIN
   -- LCS bug 108220 has added this temporary table and to fix a functional issue it has been reopened and added with 'ON COMMIT PRESERVE ROWS'
   -- It is not standard to make global temporary tables to preserve rows on commit. However, because it has been a functional requirement and existed since 2016
   -- and also the rows are inserted and deleted within same method, this table made to preserve rows on commit to tally with creation script in upg file. 
   IF (NOT Database_SYS.Table_Exist('SHIP_CONN_RESERVED_ORD_TMP')) THEN
      stmt_ := 'CREATE GLOBAL TEMPORARY TABLE SHIP_CONN_RESERVED_ORD_TMP' ||
               '      ( order_no                 VARCHAR2(12) NULL)' ||
               'ON COMMIT PRESERVE ROWS';
      @ApproveDynamicStatement(2020-06-08,KiSalk)
      EXECUTE IMMEDIATE stmt_;
   END IF;
END;
-- Nug 154282, end
