-----------------------------------------------------------------------------
--
--  Logical unit: CustomerOrderCharge
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  201222  ErRalk  Bug 156647(SCZ-12849), Moved Co_Charge_Join view from CustomerOrder, to facilitate custom fields in the overview window.
--  170220  NiAslk  VALUT-2226, Added CRM Access tag to Customer_Order_Charge_Lov. 
--  160211  IsSalk  FINHR-685, Renamed attribute FEE_CODE to TAX_CODE in Customer Order Charge.
-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

COLUMN Customer_No IS
   Flags      = 'P----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Customer No';

COLUMN Qty_Available IS
   Flags      = 'A---L'
   Datatype   = 'NUMBER'
   Prompt     = 'Possible Qty to Return';

COLUMN Use_Price_Incl_Tax_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Use Price Incl Tax';

COLUMN Catalog_No IS
   Flags      = 'AMI--'
   Datatype   = 'STRING(25)/UPPERCASE'
   Prompt     = 'Sales Part Number'
   Ref        = 'SalesPart(CONTRACT)';

COLUMN Catalog_Type IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(200)'
   Prompt     = 'Catalog Type'
   Ref        = 'SalesPartType';

COLUMN Catalog_Desc IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(200)/UPPERCASE'
   Prompt     = 'Catalog Desc';

COLUMN Order_Status IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Order Status';

COLUMN Order_Type IS
   Flags      = 'A----'
   Datatype   = 'STRING(3)/UPPERCASE'
   Prompt     = 'Order Type'
   Ref        = 'CustOrderType';

COLUMN Customer_Name IS
   Flags      = 'A----'
   Datatype   = 'STRING(100)'
   Prompt     = 'Customer Name';

COLUMN Charge_Seq_No IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Charge Sequence No';

COLUMN Charge_Type IS
   Flags      = 'A----'
   Datatype   = 'STRING(25)/UPPERCASE'
   Prompt     = 'Charge Type'
   Ref        = 'SalesChargeType(contract)';

COLUMN Charge_Type_Desc IS
   Flags      = 'A----'
   Datatype   = 'STRING(35)'
   Prompt     = 'Charge Type Description';

COLUMN Charge_Amount IS
   Flags      = 'A----'
   Datatype   = 'NUMBER/CURRENCY'
   Prompt     = 'Charge Amount/Currency';

COLUMN Base_Charge_Amount IS
   Flags      = 'A----'
   Datatype   = 'NUMBER/CURRENCY'
   Prompt     = 'Charge Amount/Base';

COLUMN Charge_Group IS
   Flags      = 'A----'
   Datatype   = 'STRING(25)/UPPERCASE'
   Prompt     = 'Charge Group';

COLUMN Charge_Group_Desc IS
   Flags      = 'A----'
   Datatype   = 'STRING(35)'
   Prompt     = 'Charge Group Description';

COLUMN Charged_Qty IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Charged Qty';

COLUMN Price_Unit_Meas IS
   Flags      = 'A----'
   Datatype   = 'STRING(30)'
   Prompt     = 'Price Unit Meas';

COLUMN Sales_Part_Qty IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Sales Part Qty';

COLUMN Sales_Part_Unit_Meas IS
   Flags      = 'A----'
   Datatype   = 'STRING(10)'
   Prompt     = 'Sales Part Unit Measure'
   Ref        = 'IsoUnit';

COLUMN Tax_Code IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Tax Code'
   Ref        = 'StatutoryFee(COMPANY)';

COLUMN Tax_Class_Id IS
   Flags      = 'A--U-'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Tax Class Id'
   Ref        = 'TaxClass(COMPANY)';

COLUMN Total_Charged_Amount IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Total Charged Amount/Currency';

COLUMN Total_Base_Charged_Amount IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Total Charged Amount/Base';

COLUMN Qty_Returned IS
   Flags      = 'AMIU-'
   Datatype   = 'NUMBER'
   Prompt     = 'Qty Returned';

COLUMN Invoiced_Qty IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Invoiced Qty';

COLUMN Charge IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Charge';

COLUMN Charge_Cost IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Charge Cost';

COLUMN Charge_Cost_Percent IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Charge Cost Percent';

COLUMN Campaign_Id IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Campaign ID'
   Ref        = 'Campaign';

COLUMN Deal_Id IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Deal ID';

COLUMN Sales_Chg_Type_Category IS
   Flags      = 'AMI--'
   Datatype   = 'STRING(200)'
   Prompt     = 'Sales Charge Type Category'
   Ref        = 'SalesChgTypeCategory';

COLUMN Sales_Chg_Type_Category_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Sales Charge Type Category';

COLUMN Currency_Rate IS
   Flags      = 'A-IU-'
   Datatype   = 'NUMBER/DECIMAL'
   Prompt     = 'Currency Rate';

COLUMN Statistical_Charge_Diff IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Statistical Charge Diff';

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------


-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

@RmcomAccessCheck CustomerOrder(coc.order_no)
@SecurityCheck Site.UserAuthorized(coc.contract)
VIEW Customer_Order_Charge_Lov IS
   Prompt = 'Customer Order Charge'
   Contract.Flags = 'P----'
   Order_No.Flags = 'K---L'
   Sequence_No.Flags = 'A---L'
   Charge_Type.Flags = 'A---L'
   Charge_Amount.Flags = 'A---L'
   Charge_Amount_Incl_Tax.Flags = 'A---L'
   Charge_Amount_Incl_Tax.Prompt = 'Charge Amount Incl Tax'
   Base_Charge_Amount.Flags = 'A---L'
   Base_Charge_Amt_Incl_Tax.Flags = 'A---L'
   Base_Charge_Amt_Incl_Tax.Prompt = 'Base Charge Amount Incl Tax'
   Charge_Cost.Flags = 'A---L'
   Charged_Qty.Flags = 'A---L'
   Charged_Qty.Prompt = 'Charge Qty'
   Invoiced_Qty.Flags = 'A---L'
   Qty_Returned.Flags = 'A---L'
   Sales_Unit_Meas.Flags = 'A---L'
   Tax_Code.Flags = 'A---L'
   Tax_Class_Id.Flags = 'A---L'
   Tax_Class_Id.Prompt = 'Tax Class Id'
   Date_Entered.Flags = 'A---L'
SELECT coc.contract                       contract,
       co.customer_no                     customer_no,
       coc.order_no                       order_no,
       coc.sequence_no                    sequence_no,
       coc.charge_type                    charge_type,
       coc.charge_amount                  charge_amount,
       coc.charge_amount_incl_tax         charge_amount_incl_tax,
       coc.base_charge_amount             base_charge_amount,
       coc.base_charge_amt_incl_tax       base_charge_amt_incl_tax,
       coc.charge_cost                    charge_cost,
       (coc.charged_qty - qty_returned)   qty_available,
       coc.charged_qty                    charged_qty,
       coc.invoiced_qty                   invoiced_qty,
       coc.qty_returned                   qty_returned,
       coc.sales_unit_meas                sales_unit_meas,
       coc.tax_code                       tax_code,
       coc.tax_class_id                   tax_class_id,
       coc.date_entered                   date_entered,
       co.use_price_incl_tax              use_price_incl_tax_db,
       coc.rowkey                        objkey
FROM   customer_order_charge_tab coc, customer_order_tab co
WHERE  coc.order_no = co.order_no
AND    (coc.charged_qty - qty_returned) != 0
AND    coc.collect != 'COLLECT';


@RmcomAccessCheck CustomerOrder(co.order_no)
@SecurityCheck Site.UserAuthorized(coc.contract)
VIEW Co_Charge_Join IS
   Prompt = 'Customer Order'
   Order_No.Flags = 'K----'
   Order_No.Ref = 'CustomerOrder'
   Customer_No.Flags = 'A----'
   Contract.Flags = 'A----'
   Charge_Amount_Incl_Tax.Flags = 'A----'   
   Charge_Amount_Incl_Tax.Datatype = 'NUMBER/CURRENCY'
   Charge_Amount_Incl_Tax.Prompt = 'Charge Amount Including Tax'
   Currency_Code.Flags = 'A----'
   Currency_Code.Prompt = 'Currency'
   Base_Charge_Amt_Incl_Tax.Flags = 'A----'   
   Base_Charge_Amt_Incl_Tax.Datatype = 'NUMBER/CURRENCY'
   Base_Charge_Amt_Incl_Tax.Prompt = 'Base Price Amount Including Tax'
   Line_No.Flags = 'A----'
   Rel_No.Flags = 'A----'
   Rel_No.Prompt = 'Del No'
   Line_Item_No.Flags = 'A----'
   Catalog_No.Flags = 'A----'
   Catalog_Desc.Flags = 'A----'
   Catalog_Desc.Datatype = 'STRING(200)'
   Catalog_Type.Flags = 'A----'
   Tax_Class_Id.Flags = 'A----'
   Qty_Returned.Flags = 'A----'
   Currency_Rate.Datatype = 'NUMBER'
SELECT coc.order_no                            order_no,
       Customer_Order_API.Get_State(coc.order_no) order_status,
       co.order_id                             order_type,
       co.customer_no                          customer_no,
       ci.name                                 customer_name,
       coc.contract                            contract,
       coc.sequence_no                         charge_seq_no,
       coc.charge_type                         charge_type,
       sct.charge_type_desc                    charge_type_desc,
       coc.charge_amount                       charge_amount,
       coc.charge_amount_incl_tax              charge_amount_incl_tax,
       co.currency_code                        currency_code,
       coc.base_charge_amount                  base_charge_amount,
       coc.base_charge_amt_incl_tax            base_charge_amt_incl_tax,
       sct.charge_group                        charge_group,
       scg.charge_group_desc                   charge_group_desc,
       coc.charged_qty                         charged_qty,
       coc.sales_unit_meas                     price_unit_meas,
       coc.sequence_no                         sequence_no,
       coc.line_no                             line_no,
       coc.rel_no                              rel_no,
       coc.line_item_no                        line_item_no,
       col.catalog_no                          catalog_no,
       col.catalog_desc                        catalog_desc,
       Sales_Part_Type_API.Decode(col.catalog_type) catalog_type,
       col.catalog_type                        catalog_type_db,
       col.buy_qty_due                         sales_part_qty,
       col.sales_unit_meas                     sales_part_unit_meas,
       coc.tax_code                            tax_code,
       coc.tax_class_id                        tax_class_id,
       Site_API.Get_Company(coc.contract)      company,        -- used only for tax_code ref
       Customer_Order_Charge_API.Get_Total_Charged_Amount(coc.order_no, coc.sequence_no) total_charged_amount,
       Customer_Order_Charge_API.Get_Total_Base_Charged_Amount(coc.order_no, coc.sequence_no) total_base_charged_amount,
       coc.invoiced_qty                        invoiced_qty,
       coc.qty_returned                        qty_returned,
       coc.charge                              charge,
       coc.charge_cost                         charge_cost,
       coc.charge_cost_percent                 charge_cost_percent,
       coc.campaign_id                         campaign_id,
       coc.deal_id                             deal_id,
       Sales_Chg_Type_Category_API.Decode(sct.sales_chg_type_category) sales_chg_type_category,
       sct.sales_chg_type_category             sales_chg_type_category_db,
       coc.currency_rate                       currency_rate,
       coc.statistical_charge_diff             statistical_charge_diff,
       coc.tax_calc_structure_id               tax_calc_structure_id,
       coc.rowid                               objid,
       ltrim(lpad(to_char(coc.rowversion,'YYYYMMDDHH24MISS'),2000))     objversion,
       coc.rowkey                              objkey
FROM   CUSTOMER_ORDER_LINE_TAB col, CUSTOMER_ORDER_TAB co, customer_info_custcategory_pub ci,
       customer_order_charge_tab coc,
       sales_charge_type_tab sct, sales_charge_group_tab scg
WHERE  ci.customer_id = co.customer_no
AND    sct.charge_group = scg.charge_group
AND    coc.charge_type = sct.charge_type
AND    coc.contract = sct.contract
AND    col.line_item_no (+) = coc.line_item_no
AND    col.rel_no  (+) = coc.rel_no
AND    col.line_no (+) = coc.line_no
AND    col.order_no (+) = coc.order_no
AND    coc.order_no = co.order_no;