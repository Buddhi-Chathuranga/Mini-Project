-----------------------------------------------------------------------------
--
--  Logical unit: CommissionsPerReceiverAndPeriodsHandling
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  190128  SATGLK  SCUXXW4-964, Created
-----------------------------------------------------------------------------

layer Core;

FUNCTION Get_Result_Key_List___ (
   full_selection_ IN VARCHAR2 ) RETURN VARCHAR2
IS
   selection_              VARCHAR2(32000) := CONCAT(full_selection_, ';');
   current_selection_      VARCHAR2(32000);
   commission_no_          NUMBER;
   commission_receiver_    VARCHAR2(32000);
   contract_               VARCHAR2(32000);
   report_attr_            VARCHAR2(2000);
   parameter_attr_         VARCHAR2(2000);
   result_key_             NUMBER;
   result_key_list_        VARCHAR2(2000);
BEGIN
   Client_SYS.Clear_Attr(report_attr_);
   Client_SYS.Add_To_Attr('REPORT_ID', 'ORDER_COMMISSION_REP', report_attr_);
   WHILE (INSTR(selection_, ';') > 0) LOOP
      current_selection_   := SUBSTR(selection_, 0, INSTR(selection_, ';'));
      commission_no_       := Client_SYS.Get_Key_Reference_Value(current_selection_, 'COMMISSION_NO');   
      Order_Commission_Initial_Check___(commission_no_);
      
      Client_SYS.Clear_Attr(parameter_attr_);  
      contract_            := Order_Commission_API.Get_Contract(commission_no_);
      commission_receiver_  := Order_Commission_API.Get_Commission_Receiver(commission_no_);
      Client_SYS.Add_To_Attr('CONTRACT', contract_, parameter_attr_);
      Client_SYS.Add_To_Attr('COMMISSION_RECEIVER_GROUP', '%', parameter_attr_);
      Client_SYS.Add_To_Attr('COMMISSION_RECEIVER', commission_receiver_, parameter_attr_);
      Client_SYS.Add_To_Attr('COMMISSION_CALC_STATUS', '%', parameter_attr_);
      Client_SYS.Add_To_Attr('COMMISSION_NO', commission_no_, parameter_attr_);  
      result_key_ := Report_Format_API.Create_New_Report(report_attr_, parameter_attr_, Fnd_Session_API.Get_Fnd_User);    
      IF (result_key_list_ IS NULL) THEN
         result_key_list_  := result_key_;
      ELSE
         result_key_list_  := result_key_list_ || ',' || result_key_;
      END IF; 
      selection_ := SUBSTR(selection_, INSTR(selection_, ';') + 1); 
   END LOOP;
   RETURN result_key_list_;
END Get_Result_Key_List___;

FUNCTION Get_Result_Keyfor_Line_List___ (
   full_selection_ IN VARCHAR2 ) RETURN VARCHAR2
IS
   selection_           VARCHAR2(32000) := CONCAT(full_selection_, ';');
   current_selection_   VARCHAR2(32000);
   commission_no_       NUMBER;
   commission_receiver_ VARCHAR2(32000);
   report_attr_         VARCHAR2(2000);
   parameter_attr_      VARCHAR2(2000);
   result_key_          NUMBER;
   result_key_list_     VARCHAR2(2000);
BEGIN
   Client_SYS.Clear_Attr(report_attr_);
   Client_SYS.Add_To_Attr('REPORT_ID', 'ORDER_LINE_COMMISSION_REP', report_attr_);
   WHILE (INSTR(selection_, ';') > 0) LOOP
      current_selection_   := SUBSTR(selection_, 0, INSTR(selection_, ';'));
      commission_no_       := Client_SYS.Get_Key_Reference_Value(current_selection_, 'COMMISSION_NO');  
      Order_Commission_Initial_Check___(commission_no_);
      
      Client_SYS.Clear_Attr(parameter_attr_);  
      commission_receiver_  := Order_Commission_API.Get_Commission_Receiver(commission_no_);
      Client_SYS.Add_To_Attr('COMMISSION_RECEIVER_GROUP', '%', parameter_attr_);
      Client_SYS.Add_To_Attr('COMMISSION_RECEIVER', commission_receiver_, parameter_attr_);
      Client_SYS.Add_To_Attr('COMMISSION_NO', commission_no_, parameter_attr_);  
      result_key_ := Report_Format_API.Create_New_Report(report_attr_, parameter_attr_, Fnd_Session_API.Get_Fnd_User);    
      IF (result_key_list_ IS NULL) THEN
         result_key_list_  := result_key_;
      ELSE
         result_key_list_  := result_key_list_ || ',' || result_key_;
      END IF; 
      selection_ := SUBSTR(selection_, INSTR(selection_, ';') + 1); 
   END LOOP;
   RETURN result_key_list_;
END Get_Result_Keyfor_Line_List___;

PROCEDURE Close_Commission___ (
	key_ IN Order_Commission_Key)
IS
BEGIN
	Order_Commission_API.Close_Order_Commission(key_.commission_no);
END Close_Commission___;

PROCEDURE Update_Calc_Commission___ (
	key_ IN Order_Commission_Key,
	overwrite_manual_data_ IN VARCHAR2,
	info$_ OUT VARCHAR2)
IS
info_                  VARCHAR2(32000);
BEGIN
	Commission_Calculation_API.Recalc_Com_From_Com_Header(info_, key_.commission_no, overwrite_manual_data_);
   info$_ := info_;
END Update_Calc_Commission___;
