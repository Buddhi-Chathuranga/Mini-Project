-----------------------------------------------------------------------------
--
--  Fragment:     SalesQuotationLineTab
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
-- Date        Sign     History
-- ----------  ------   -------------------------------------------------------------------------------------------------------
-- 2021-05-17  MaEelk   SC21R2-1186, When duplicating a line LOST_TO, LOSE_WIN_NOTE, CANCEL_REASON and REASON_ID were made null in CRUD_Default_Copy___
-- 2021-05-17           and CANCELLATION_REASON_DESCRIPTION, REASON_DESCRIPTION were removed from the attr_
-- 2020-06-08  MalLlk   GESPRING20-4617, Modified Calc_Free_Of_Charge_Tax_Basis___() to redirect the call to  
-- 2020-06-08           Tax_Handling_Order_Util_API.Calc_And_Save_Foc_Tax_Basis(), and passed the value part_price.
-- 2020-03-13  MaEelk   SCXTEND-2207, Made Duplicate Functionality work.
-- 2019-05-05  RasDlk   SCUXXW4-15881, Implemented the code related to InputUoM.
-------------------------------------------------------------------------------------------------------------------------------
layer Core;

@Override
PROCEDURE CRUD_Default___ (
   key_     IN Order_Quotation_Line_Key,
   attr_    IN OUT VARCHAR2,
   info_    OUT VARCHAR2 )
IS
BEGIN
   super(key_, attr_, info_);
   Client_SYS.Add_To_Attr('RENTAL_DB', 'FALSE', attr_);
   Client_SYS.Add_To_Attr('LINE_ITEM_NO', 0, attr_);
   Client_SYS.Add_To_Attr('SET_TAX_FROM_ORIGINAL', 'FALSE', attr_);
END CRUD_Default___;

@Override
PROCEDURE CRUD_Default_Copy___ (
   objid_  IN     VARCHAR2,
   key_    IN     Order_Quotation_Line_Key,
   values_ IN     Copy_Values_Rec,
   attr_      OUT VARCHAR2,
   info_      OUT VARCHAR2 )
IS
   quotation_no_          VARCHAR2(12);
   dummy_text_            VARCHAR2(20) := NULL; 
   dummy_date_            DATE := NULL;
   planned_delivery_date_ DATE;

BEGIN
  quotation_no_ := key_.quotation_no; 
  super(objid_,key_, values_, attr_,info_ );
  Client_SYS.Set_Item_Value('QUOTATION_NO', quotation_no_, attr_);
  Client_SYS.Set_Item_Value('LINE_NO', dummy_text_, attr_);
  Client_SYS.Set_Item_Value('REL_NO', dummy_text_, attr_);
  Client_SYS.Set_Item_Value('LINE_ITEM_NO', 0, attr_); 
  Client_SYS.Set_Item_Value('DUPLICATED_LINE', 'TRUE', attr_);
  Client_SYS.Set_Item_Value('QUOTE_DISCOUNT', 0, attr_);
  Client_SYS.Set_Item_Value('REVISED_QTY_DUE', 0, attr_); 
  Client_SYS.Set_Item_Value('FETCH_TAX_FROM_DEFAULTS', 'FALSE', attr_);
  
  planned_delivery_date_ := Client_SYS.Get_Item_Value_To_Date('WANTED_DELIVERY_DATE', attr_, lu_name_);
  Client_SYS.Set_Item_Value('PLANNED_DELIVERY_DATE', planned_delivery_date_, attr_);
  Client_SYS.Set_Item_Value('PLANNED_DUE_DATE', dummy_date_, attr_);
  Client_SYS.Set_Item_Value('LATEST_RELEASE_DATE', dummy_date_, attr_);

  Add_Values_To_Duplicated_Attr(attr_);

  Client_SYS.Set_Item_Value('FREIGHT_MAP_ID', dummy_text_, attr_);
  Client_SYS.Set_Item_Value('ZONE_ID', dummy_text_, attr_);
  Client_SYS.Set_Item_Value('FREIGHT_PRICE_LIST_NO', dummy_text_, attr_);

  Client_SYS.Set_Item_Value('LOST_TO', dummy_text_, attr_);
  Client_SYS.Set_Item_Value('LOSE_WIN_NOTE', dummy_text_, attr_);
  Client_SYS.Set_Item_Value('CANCEL_REASON', dummy_text_, attr_); 
  Client_SYS.Set_Item_Value('REASON_ID', dummy_text_, attr_);
  attr_ := Client_SYS.Remove_Attr('CANCELLATION_REASON_DESCRIPTION', attr_);  
  attr_ := Client_SYS.Remove_Attr('REASON_DESCRIPTION', attr_);

  -- Validation on SaleUnitPrice, SaleUnitPriceInclTax, BaseUnitPrice, BaseUnitPrieInclTax have to be handled if needed
END CRUD_Default_Copy___;


FUNCTION Validate_Input_Qty___ (
   input_unit_meas_   IN VARCHAR2,
   input_qty_         IN NUMBER) RETURN Unit_Type_Structure_Rec
IS
   unit_type_structure_rec_   Unit_Type_Structure_Rec;
BEGIN
   unit_type_structure_rec_.unit_type           :=  Iso_Unit_Type_API.Encode(Iso_Unit_API.Get_Unit_Type(input_unit_meas_));
   unit_type_structure_rec_.truncated_input_qty :=  TRUNC(input_qty_);
   
	RETURN unit_type_structure_rec_;
END Validate_Input_Qty___;

@Override
PROCEDURE CRUD_Update___ (
   etag_    IN OUT VARCHAR2,
   key_     IN OUT Order_Quotation_Line_Key,
   attr_    IN OUT VARCHAR2,
   info_    OUT VARCHAR2,
   action_  IN VARCHAR2 )
IS
   line_rec_            Order_Quotation_Line_API.Public_Rec;
   planned_del_date_    DATE;
   rev_for_date_        NUMBER;
   revision_no_         NUMBER;
   new_config_id_       order_quotation_line_tab.configuration_id%TYPE;
BEGIN
   line_rec_ := Order_Quotation_Line_API.Get(key_.quotation_no, key_.line_no, key_.rel_no, key_.line_item_no);     
   IF (Client_SYS.Get_Item_Value('PRICE_SOURCE_DB', attr_) IS NULL AND Client_SYS.Get_Item_Value('SET_PRICE_SOURCE', attr_) = 'TRUE') THEN
      Client_SYS.Add_To_Attr('PRICE_SOURCE_DB', line_rec_.price_source, attr_);
   END IF;    
   Client_SYS.Add_To_Attr('SET_TAX_FROM_ORIGINAL', 'FALSE', attr_);
   $IF (Component_Cfgchr_SYS.INSTALLED) $THEN
      IF (Client_SYS.Get_Item_Value('UPDATE_CONFIG_REV', attr_) = 'Y') THEN
         IF (Client_SYS.Get_Item_Value('PLANNED_DELIVERY_DATE', attr_) IS NOT NULL) THEN
            planned_del_date_ := TO_DATE(Client_SYS.Get_Item_Value('PLANNED_DELIVERY_DATE', attr_),'YYYY-MM-DD-HH24.MI.SS');
            rev_for_date_     := Config_Part_Spec_Rev_API.Get_Spec_Rev_For_Date(line_rec_.part_no, planned_del_date_, 'FALSE');
            revision_no_      := Configuration_Spec_API.Get_Spec_Revision_No(line_rec_.part_no, line_rec_.configuration_id); 
            IF (rev_for_date_ != revision_no_) THEN
               Configuration_Spec_API.Create_New_Config_Spec(new_config_id_, line_rec_.part_no, rev_for_date_, line_rec_.configuration_id, line_rec_.configured_line_price_id, 'TRUE');
               Configuration_Spec_API.Manual_Park(new_config_id_, line_rec_.part_no);
               Client_SYS.Add_To_Attr('CONFIGURATION_ID', new_config_id_, attr_);
               attr_ := Client_SYS.Remove_Attr('UPDATE_CONFIG_REV', attr_);   
               Client_SYS.Add_Info(lu_name_, 'CONFIGPARKED: The configuration status will be set to Parked. Please edit configuration in order to Complete the configuration.');
            END IF;
         END IF;
      END IF;
   $END
   super(etag_, key_, attr_, info_, action_);
END CRUD_Update___;

FUNCTION Get_Currency_Rate___ (
	customer_no_pay_        IN VARCHAR2,
	contract_               IN VARCHAR2,
	currency_code_          IN VARCHAR2,
	base_sale_unit_price_   IN NUMBER) RETURN NUMBER
IS
   sale_unit_price_  NUMBER;
   curr_rate_        NUMBER;
BEGIN
	Customer_Order_Pricing_API.Get_Sales_Price_In_Currency(sale_unit_price_,
                                                          curr_rate_,
                                                          customer_no_pay_,
                                                          contract_,
                                                          currency_code_,
                                                          base_sale_unit_price_);
 
   RETURN curr_rate_;
END Get_Currency_Rate___;


FUNCTION Calc_Free_Of_Charge_Tax_Basis___ (
	free_of_charge_tax_basis_  IN NUMBER,
	quotation_no_              IN VARCHAR2,
	line_no_                   IN VARCHAR2,
	rel_no_                    IN VARCHAR2,
	line_item_no_              IN NUMBER,
	cost_                      IN NUMBER,
	revised_qty_due_           IN NUMBER,
	customer_no_pay_           IN VARCHAR2,
	contract_                  IN VARCHAR2,
	currency_code_             IN VARCHAR2,
	part_price_                IN NUMBER,
	free_of_charge_db_         IN BOOLEAN) RETURN NUMBER
IS
   free_of_charge_tax_ NUMBER;
BEGIN
   IF (NOT free_of_charge_db_) THEN
      RETURN NULL;
   END IF;
   free_of_charge_tax_ := free_of_charge_tax_basis_;
   Tax_Handling_Order_Util_API.Calc_And_Save_Foc_Tax_Basis(free_of_charge_tax_,
                                                           Tax_Source_API.DB_ORDER_QUOTATION_LINE,
                                                           quotation_no_,
                                                           line_no_, 
                                                           rel_no_, 
                                                           line_item_no_,
                                                           '*',
                                                           cost_,
                                                           part_price_,
                                                           revised_qty_due_, 
                                                           customer_no_pay_,
                                                           contract_,
                                                           currency_code_,
                                                           NULL,
                                                           'FALSE');
   RETURN free_of_charge_tax_;
END Calc_Free_Of_Charge_Tax_Basis___;

@Override
PROCEDURE CRUD_Create___ (
   etag_ IN OUT VARCHAR2,
   key_  IN OUT Order_Quotation_Line_Key,
   attr_ IN OUT VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   set_tax_from_original_  VARCHAR2(5)  := Client_SYS.Get_Item_Value('SET_TAX_FROM_ORIGIN', attr_);
   original_quote_no_      VARCHAR2(12) := Client_SYS.Get_Item_Value('IDENTITY1', attr_);
   original_line_no_       VARCHAR2(4)  := Client_SYS.Get_Item_Value('IDENTITY2', attr_);
   original_rel_no_        VARCHAR2(4)  := Client_SYS.Get_Item_Value('IDENTITY3', attr_);
   original_line_item_     VARCHAR2(50) := Client_SYS.Get_Item_Value('IDENTITY4', attr_);
   
BEGIN
   Client_SYS.Set_Item_Value('SET_TAX_FROM_ORIGINAL', set_tax_from_original_, attr_);
   Client_SYS.Set_Item_Value('ORIGINAL_QUOTE_NO', original_quote_no_, attr_);
   Client_SYS.Set_Item_Value('ORIGINAL_LINE_NO', original_line_no_, attr_);
   Client_SYS.Set_Item_Value('ORIGINAL_REL_NO', original_rel_no_, attr_);
   Client_SYS.Set_Item_Value('ORIGINAL_ITEM_NO', original_line_item_, attr_);
   
   super(etag_, key_, attr_, info_, action_);
END CRUD_Create___;
