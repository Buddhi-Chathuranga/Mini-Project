-----------------------------------------------------------------------------
--
--  Logical unit: CreateShipmentInvoices
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  180518  RoJalk  SCUXXW4-9795, Created.
-----------------------------------------------------------------------------

layer Core;

FUNCTION Make_Shipment_Invoice___ (
   full_selection_ IN VARCHAR2 ) RETURN Advance_Prepayment_Invoice_Info_Struct_Rec
IS
   selection_                                  VARCHAR2(32000) := CONCAT(full_selection_, ';');
   current_selection_                          VARCHAR2(32000);
   shipment_id_                                NUMBER;
   customer_no_                                VARCHAR2(20);
   contract_                                   VARCHAR2(5);
   company_                                    VARCHAR2(20);
   currency_code_                              VARCHAR2(3);
   pay_term_id_                                VARCHAR2(20);
   bill_addr_no_                               VARCHAR2(50);
   jinsui_invoice_                             VARCHAR2(20);
   currency_rate_type_                         VARCHAR2(10);
   shipment_type_                              VARCHAR2(3);
   attr_                                       VARCHAR2(32000);
   invoice_id_                                 NUMBER;
   result_                                     VARCHAR2(5);
   order_nos_                                  VARCHAR2(32000);
   inv_type_                                   VARCHAR2(7);
   advance_prepayment_invoice_info_struct_rec_ Advance_Prepayment_Invoice_Info_Struct_Rec;
BEGIN
   Client_SYS.Clear_Attr(attr_);
   
   WHILE (INSTR(selection_, ';') > 0) LOOP
      current_selection_  := substr(selection_, 0, INSTR(selection_, ';'));
      shipment_id_        := Client_SYS.Get_Key_Reference_Value(current_selection_, 'SHIPMENT_ID');
      customer_no_        := Client_SYS.Get_Key_Reference_Value(current_selection_, 'CUSTOMER_NO');
      contract_           := Client_SYS.Get_Key_Reference_Value(current_selection_, 'CONTRACT');
      company_            := Client_SYS.Get_Key_Reference_Value(current_selection_, 'COMPANY');
      currency_code_      := Client_SYS.Get_Key_Reference_Value(current_selection_, 'CURRENCY_CODE');
      
      pay_term_id_        := Client_SYS.Get_Key_Reference_Value(current_selection_, 'PAY_TERM_ID_DB');
      pay_term_id_        := CASE pay_term_id_ WHEN CHR(32) THEN NULL ELSE pay_term_id_ END;
      
      bill_addr_no_       := Client_SYS.Get_Key_Reference_Value(current_selection_, 'BILL_ADDR_NO_DB');
      bill_addr_no_       := CASE bill_addr_no_ WHEN CHR(32) THEN NULL ELSE bill_addr_no_ END;
      
      jinsui_invoice_     := Client_SYS.Get_Key_Reference_Value(current_selection_, 'JINSUI_INVOICE');
      
      currency_rate_type_ := Client_SYS.Get_Key_Reference_Value(current_selection_, 'CURRENCY_RATE_TYPE_DB');
      currency_rate_type_ := CASE currency_rate_type_ WHEN CHR(32) THEN NULL ELSE currency_rate_type_ END;
      
      shipment_type_      := Client_SYS.Get_Key_Reference_Value(current_selection_, 'SHIPMENT_TYPE');
      
      Invoice_Customer_Order_API.Chk_Ship_Adv_Pre_Inv_Exist__(result_, 
                                                              order_nos_,
                                                              inv_type_,
                                                              shipment_id_, 
                                                              customer_no_, 
                                                              contract_, 
                                                              currency_code_, 
                                                              pay_term_id_, 
                                                              bill_addr_no_, 
                                                              jinsui_invoice_);
                                                              
      IF (result_ = 'TRUE') THEN
         advance_prepayment_invoice_info_struct_rec_.advance_or_prepayment_invoice_exist := 'TRUE';
         IF (inv_type_ = 'Advance') THEN
            advance_prepayment_invoice_info_struct_rec_.advance_invoice_exist := 'TRUE';
            IF (advance_prepayment_invoice_info_struct_rec_.advance_invoice_order_no_list IS NULL) THEN         
               advance_prepayment_invoice_info_struct_rec_.advance_invoice_order_no_list   := order_nos_;          
            ELSE
               advance_prepayment_invoice_info_struct_rec_.advance_invoice_order_no_list   := advance_prepayment_invoice_info_struct_rec_.advance_invoice_order_no_list || ', ' || order_nos_;
            END IF;               
         ELSE           
            advance_prepayment_invoice_info_struct_rec_.prepayment_invoice_exist := 'TRUE';
            IF (advance_prepayment_invoice_info_struct_rec_.prepayment_invoice_order_no_list IS NULL) THEN
               advance_prepayment_invoice_info_struct_rec_.prepayment_invoice_order_no_list := order_nos_;
            ELSE               
               advance_prepayment_invoice_info_struct_rec_.prepayment_invoice_order_no_list := advance_prepayment_invoice_info_struct_rec_.prepayment_invoice_order_no_list || ', ' ||order_nos_;
            END IF;
         END IF;               
      END IF;                                                      
      
      Client_SYS.Add_To_Attr('CUSTOMER_NO',        customer_no_,        attr_);
      Client_SYS.Add_To_Attr('SHIPMENT_ID',        shipment_id_,        attr_);
      Client_SYS.Add_To_Attr('CONTRACT',           contract_,           attr_);
      Client_SYS.Add_To_Attr('CURRENCY_CODE',      currency_code_,      attr_);
      Client_SYS.Add_To_Attr('PAY_TERM_ID',        pay_term_id_,        attr_);
      Client_SYS.Add_To_Attr('JINSUI_INVOICE_DB',  jinsui_invoice_,     attr_);
      Client_SYS.Add_To_Attr('BILL_ADDR_NO',       bill_addr_no_,       attr_);
      Client_SYS.Add_To_Attr('CURRENCY_RATE_TYPE', currency_rate_type_, attr_);
      
      selection_ := substr(selection_, INSTR(selection_, ';')+1); 
      
   END LOOP;
   
   Invoice_Customer_Order_API.Make_Shipment_Invoice__(invoice_id_, attr_, NULL);
   
   RETURN advance_prepayment_invoice_info_struct_rec_;
   
END Make_Shipment_Invoice___;


FUNCTION Make_Shipment_Invoice_Initial_Check___ (
	full_selection_      IN VARCHAR2) RETURN BOOLEAN
IS
   selection_           VARCHAR2(32000) := CONCAT(full_selection_, ';');
   current_selection_   VARCHAR2(32000);
   contract_            VARCHAR2(5);
   intial_check_        BOOLEAN;
BEGIN
   WHILE (INSTR(selection_, ';') > 0) LOOP
      current_selection_   := substr(selection_, 0, INSTR(selection_, ';'));
      contract_            := Client_SYS.Get_Key_Reference_Value(current_selection_, 'CONTRACT');
      intial_check_        := User_Allowed_Site_API.Is_Authorized(contract_) = 1;
      EXIT WHEN NOT intial_check_;
      
      selection_           := substr(selection_, INSTR(selection_, ';')+1); 
   END LOOP;
   RETURN intial_check_;
END Make_Shipment_Invoice_Initial_Check___;
