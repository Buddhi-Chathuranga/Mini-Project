-----------------------------------------------------------------------------
--
--  Logical unit: SalesPart
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  211116  Kapblk  SC21R2-3234, Added RLS Indicators for the views Sales_Part_Cc_Lov, Sales_Part_Created_From_Config,Created_From_Conf_Limit_Assort
--  211029  DhAplk  SC21R2-5048, Added Part_Valid_For_Assortment view.
--  210602  SWiclk  COM21R2-88, Added Limit_Sales_To_Assort_Node_Lov in order to filter parts based on assortment nodes hierarchy for b2b storefront.
--  190821  KHVESE  SCUXXW4-23913, Modified Sales_Price_Type flags in view Sales_Part_For_Price_List_Lov to define it as key. 
--  190613  MaEelk  SCUXXW4-22199, Added list_price_incl_tax, rental_list_price and rental_list_price_incl_tax to sales_part_pub.
--  181225  SBalLK  SCUXXW4-4104, Added objid column to the Purchase_Part_Pub view to cater to the dynamic LOV requirement in the Rental_Part_No_Lov.
--  180818  ChWkLk  MFUXXW4-12485,Added ROWID to the SALES_PART_PRICE_TAX_LOV to cater to the dynamic LOV requirement in the Estimate Deliverables.
--  180517  MaEelk  SCUXXW4-12072, Added QUICK_REGISTERED_PART_DB,EXPORT_TO_EXTERNAL_APP_DB,ACTIVEIND_DB to ALL_SALES_PART_PRICE_TAX_LOV.
--  180517          Added QUICK_REGISTERED_PART_DB, EXPORT_TO_EXTERNAL_APP_DB to SALES_PART_LOV2.
--  180517          Added ACTIVEIND_DB  and CATALOG_TYPE_DB to SALES_PART_LOV
--  180517          Added QUICK_REGISTERED_PART_DB, EXPORT_TO_EXTERNAL_APP_DB, PRIMARY_CATALOG_DB and SALES_TYPE_DB to view comments in NON_RENTAL_SALES_PART_LOV
--  180123  AwWelk  STRSC-15913, Added Sales_Rpart_Bprice_Allowed_Lov.
--  171205  ChSlLk  STRASA-28966, Modified field fals for contract in Sales_Part_Cc_Lov to enabling for lov.
--  170331  KiAuse  STRMF-9528, Added views Sales_Part_Created_From_Config and Created_From_Conf_Limit_Assort.
--  170330  AmPalk  STRMF-8962, Added Company_Sales_Part_Lov.
--  170324  ThImlk  STRMF-10459, Added a new view, Sales_Part_Uom_Lov.
--  160622  SudJlk  STRSC-2700, Corrected the security filter fault in Sales_Part_Exchange_Comp_Lov.
--  151102  KiSalk  Bug 125397, Changed function of catalog_desc to enable of SALES_PART_ACTIVE_LOV, SALES_PART_PRICE_TAX_LOV, SALES_PART_LOV2, ALL_SALES_PART_PRICE_TAX_LOV and ALL_SALES_PART_ACTIVE_LOV 
--  151102          search in session user's language. Also added catalog_type_db, rental_list_price_incl_tax, quick_registered_part and export_to_external_app to SALES_PART_LOV2.
--  140231  VISRLK  PRSA-6231, Added price_unit_meas to Sales_Part_Service_Lov
-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

COLUMN Delivery_Confirmation IS
   Flags      = 'AMIUL'
   Datatype   = 'STRING(200)'
   Prompt     = 'Delivery Confirmation'
   Ref        = 'SalesGroupDeliveryConf';

COLUMN Tax_Price IS
   Flags      = 'A---L'
   Datatype   = 'NUMBER/DECIMAL'
   Prompt     = 'Price incl. Tax';

COLUMN Tax_Rental_Price IS
   Flags      = 'A---L'
   Datatype   = 'NUMBER/DECIMAL'
   Prompt     = 'Rental Price incl. Tax';

COLUMN Description IS
   Flags      = 'A---L'
   Datatype   = 'STRING(200)'
   Prompt     = 'Tax Code Description';

COLUMN Tax_Class_Description IS
   Flags      = 'A---L'
   Datatype   = 'STRING(200)'
   Prompt     = 'Tax Class Description';

COLUMN Substitute_Sales_Part IS
   Flags      = 'K---L'
   Datatype   = 'STRING(25)'
   Prompt     = 'Substitute Sales Part';

COLUMN Sales_Part_No IS
   Flags      = 'KM--L'
   Datatype   = 'STRING(12)/UPPERCASE'
   Prompt     = 'Sales Part No';

COLUMN Classification_Standard IS
   Flags      = 'P-IUL'
   Datatype   = 'STRING(25)/UPPERCASE'
   Prompt     = 'Classification Standard';

COLUMN Classification_Part_No IS
   Flags      = 'KMIUL'
   Datatype   = 'STRING(25)'
   Prompt     = 'Classification Part No';

COLUMN Classification_Unit_Meas IS
   Flags      = 'A---L'
   Datatype   = 'STRING(30)'
   Prompt     = 'Classification Unit Meas'
   Ref        = 'IsoUnit';

COLUMN Unit_Code IS
   Flags      = 'A---L'
   Datatype   = 'STRING(30)'
   Prompt     = 'Unit Code';

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------

VIEW Sales_Part_Pub IS
   Prompt = 'Sales Part'
SELECT catalog_no                   catalog_no,
       contract                     contract,
       part_no                      part_no,
       catalog_group                catalog_group,
       sales_price_group_id         sales_price_group_id,
       note_id                      note_id,
       print_control_code           print_control_code,
       sales_unit_meas              sales_unit_meas,
       activeind                    activeind_db,
       catalog_type                 catalog_type_db,
       conv_factor                  conv_factor,
       cost                         cost,
       discount_group               discount_group,
       list_price                   list_price,
       list_price_incl_tax          list_price_incl_tax,
       rental_list_price            rental_list_price,
       rental_list_price_incl_tax   rental_list_price_incl_tax,
       note_text                    note_text,
       price_conv_factor            price_conv_factor,
       price_unit_meas              price_unit_meas,
       tax_code                     tax_code,
       tax_class_id                 tax_class_id,
       taxable                      taxable_db,
       close_tolerance              close_tolerance,
       create_sm_object_option      create_sm_object_option_db,
       purchase_part_no             purchase_part_no,
       replacement_part_no          replacement_part_no,
       date_of_replacement          date_of_replacement,
       cust_warranty_id             cust_warranty_id,
       customs_stat_no              customs_stat_no,
       intrastat_conv_factor        intrastat_conv_factor,
       non_inv_part_type            non_inv_part_type_db,
       sourcing_option              sourcing_option_db,
       rule_id                      rule_id,
       minimum_qty                  minimum_qty,
       export_to_external_app       export_to_external_app_db,
       catalog_desc                 catalog_desc,
       inverted_conv_factor         inverted_conv_factor,
       sales_type                   sales_type_db,
       expected_average_price       expected_average_price,
       rowkey                      objkey,
       rowid                        objid
FROM   sales_part_tab;


@DbViewRowLevelSecurity CustomImplemented
VIEW Sales_Part_Created_From_Config IS
   Prompt = 'Standard Sales Part Created From Configuration'
SELECT
$IF (Component_Mfgstd_SYS.INSTALLED) $THEN
   c.created_from_part_no       created_from_part_no,
   c.created_from_contract      created_from_contract,
   c.created_from_config_id     created_from_config_id,
   c.part_no                    part_no,
   c.contract                   contract,
   s.catalog_no                 catalog_no,       
   c.objkey                     objkey
FROM   MANUF_PART_ATTRIBUTE_PUB c, SALES_PART_ACTIVE_LOV s    
WHERE c.contract = s.contract AND c.part_no = s.part_no
$ELSE
   NULL                        created_from_part_no,
   NULL                        created_from_contract,
   NULL                        created_from_config_id,
   NULL                        part_no,
   NULL                        contract,
   NULL                        catalog_no,       
   NULL                        objkey
FROM dual
$END;


@DbViewRowLevelSecurity CustomImplemented
VIEW Created_From_Conf_Limit_Assort IS
   Prompt = 'Standard Sales Part Created From Configuration with Limited Assortment'
SELECT
$IF (Component_Mfgstd_SYS.INSTALLED) $THEN
   cfm.created_from_part_no      created_from_part_no,
   cfm.created_from_contract     created_from_contract,
   cfm.created_from_config_id    created_from_config_id,
   cfm.part_no                   part_no,
   cfm.contract                  contract,
   cfm.catalog_no                catalog_no,
   assort.customer_no            customer_no,
   cfm.objkey                    objkey
FROM Sales_Part_Created_From_Config cfm
INNER JOIN (
   SELECT DISTINCT (ant.part_no), cas.customer_no
   FROM  assortment_structure_tab       ast,
         customer_assortment_struct_tab cas,
         assortment_node_tab            ant
   WHERE cas.assortment_id = ant.assortment_id
      AND ant.part_no IS NOT NULL
      AND ast.assortment_id = cas.assortment_id
      AND ast.rowstate = 'Active'
      AND cas.limit_sales_to_assortments = 'TRUE') assort
ON cfm.part_no = assort.part_no
$ELSE
   NULL                    created_from_part_no,
   NULL                    created_from_contract,
   NULL                    created_from_config_id,
   NULL                    part_no,
   NULL                    contract,
   NULL                    catalog_no,
   NULL                    customer_no,
   NULL                    objkey
FROM dual
$END;

-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

@SecurityCheck Site.UserAuthorized(sp.contract)
VIEW Sales_Part_Lov IS
   Prompt = 'Sales Part'
   Contract.Flags = 'PMI--'
   Catalog_No.Flags = 'KMI-L'
   Activeind.Datatype = 'STRING(20)'
   Activeind_Db.Datatype = 'STRING(1)'
   Catalog_Type.Datatype = 'STRING'
   Catalog_Type_Db.Ref = 'SalesPartTypeLov'
   Catalog_Type_Db.DataType = 'STRING(20)'
   Gtin_No.Flags = 'A-INL'
SELECT sp.contract                                                    contract,
       sp.catalog_no                                                  catalog_no,
       Sales_Part_API.Get_Catalog_Desc(sp.contract, sp.catalog_no)    catalog_desc,
       Active_Sales_Part_API.Decode(sp.activeind)                     activeind, 
       sp.activeind                                                   activeind_db,
       Sales_Part_Type_API.Decode(catalog_type)                       catalog_type,
       sp.catalog_type                                                catalog_type_db,
       sg.delivery_confirmation                                       delivery_confirmation,
       Part_Gtin_API.Get_Default_Gtin_No(catalog_no)                  gtin_no,
       sp.sales_type                                                  sales_type_db,
       sp.ROWID                                                       objid,
       ltrim(lpad(to_char(sp.rowversion,'YYYYMMDDHH24MISS'),2000))    objversion,
       sp.rowkey                                                      objkey
FROM   SALES_PART_TAB sp, SALES_GROUP sg
WHERE  sp.catalog_type != 'PKG'
AND    sp.activeind = 'Y'
AND    sp.catalog_group = sg.catalog_group
AND    sp.sales_type IN ('SALES', 'SALES RENTAL');

@SecurityCheck Site.UserAuthorized(sp.contract)
VIEW Sales_Part_Active_Lov IS
   Prompt = 'Sales Part'
   Contract.Flags = 'PMI--'
   Catalog_No.Flags = 'KMI-L'
   Part_No.Ref = 'InventoryPart(contract)'
   Tax_Code.Flags = 'A---L'
   Tax_Code.Prompt = 'Tax Code'
   Tax_Class_Id.Flags = 'A---L'
   Gtin_No.Flags = 'A-INL'
SELECT sp.contract                                                   contract,
       sp.catalog_no                                                 catalog_no,
       Sales_Part_API.Get_Catalog_Desc_For_Lang(contract, catalog_no, Fnd_Session_API.Get_Language()) catalog_desc,
       sp.part_no                                                    part_no,
       sp.list_price                                                 list_price,
       sp.list_price_incl_tax                                        tax_price,
       sp.rental_list_price                                          rental_list_price,
       sp.rental_list_price_incl_tax                                 tax_rental_price,
       tax_code                                                      tax_code,       
       Statutory_Fee_API.Get_Description(Site_API.Get_Company(contract), tax_code) description,
       tax_class_id                                                  tax_class_id,
       Tax_Class_API.Get_Description(Site_API.Get_Company(contract), tax_class_id) tax_class_description,
       sg.delivery_confirmation                                      delivery_confirmation,
       Part_Gtin_API.Get_Default_Gtin_No(catalog_no)                 gtin_no,
       sp.rowkey                                                     objkey
FROM   sales_part_tab sp, SALES_GROUP sg
WHERE  sp.activeind = 'Y'
AND    sp.catalog_group = sg.catalog_group
AND    sp.sales_type IN ('SALES', 'SALES RENTAL');


@SecurityCheck Site.UserAuthorized(sp.contract)
VIEW Limit_To_Assort_Sales_Part_Lov IS
   Prompt = 'Sales Part'
   Contract.Flags = 'PMI--'
   Catalog_No.Flags = 'KMI-L'
   Customer_No.Flags = 'A----'
   Customer_No.Datatype = 'STRING(20)'
   Customer_No.Prompt = 'Customer No'
   Part_No.Ref = 'InventoryPart(contract)'
   Tax_Code.Flags = 'A---L'
   Tax_Code.Prompt = 'Tax Code'
   Tax_Class_Id.Flags = 'A---L'
   Gtin_No.Flags = 'A-INL'
SELECT sp.contract              contract,
       sp.catalog_no            catalog_no,
       sp.catalog_desc          catalog_desc,
       sp.part_no               part_no,
       sp.list_price            list_price,
       sp.tax_price             tax_price,
       sp.rental_list_price     rental_list_price,
       sp.tax_rental_price      tax_rental_price,
       tax_code                 tax_code,
       sp.description           description,
       tax_class_id             tax_class_id,
       sp.tax_class_description tax_class_description,
       sp.delivery_confirmation delivery_confirmation,
       sp.gtin_no               gtin_no,
       assort.customer_no       customer_no,
       sp.objkey                objkey
  FROM sales_part_active_lov sp
 INNER JOIN (SELECT DISTINCT (ant.part_no), cas.customer_no
               FROM assortment_structure_tab       ast,
                    customer_assortment_struct_tab cas,
                    assortment_node_tab            ant
              WHERE cas.assortment_id = ant.assortment_id
                AND ant.part_no IS NOT NULL
                AND ast.assortment_id = cas.assortment_id
                AND ast.rowstate = 'Active'
                AND cas.limit_sales_to_assortments = 'TRUE') assort
    ON sp.catalog_no = assort.part_no;

@SecurityCheck Site.UserAuthorized(sp.contract)
VIEW Limit_Sales_To_Assort_Node_Lov IS
   Prompt = 'Sales Part'
   Contract.Flags = 'PMI--'
   Catalog_No.Flags = 'KMI-L'
   Customer_No.Flags = 'A----'
   Customer_No.Datatype = 'STRING(20)'
   Customer_No.Prompt = 'Customer No'
   Part_No.Ref = 'InventoryPart(contract)'
   Tax_Code.Flags = 'A---L'
   Tax_Code.Prompt = 'Tax Code'
   Tax_Class_Id.Flags = 'A---L'
   Gtin_No.Flags = 'A-INL'
SELECT sp.contract              contract,
       sp.catalog_no            catalog_no,
       sp.catalog_desc          catalog_desc,
       sp.part_no               part_no,
       sp.list_price            list_price,
       sp.tax_price             tax_price,
       sp.rental_list_price     rental_list_price,
       sp.tax_rental_price      tax_rental_price,
       tax_code                 tax_code,
       sp.description           description,
       tax_class_id             tax_class_id,
       sp.tax_class_description tax_class_description,
       sp.delivery_confirmation delivery_confirmation,
       sp.gtin_no               gtin_no,
       assort.customer_no       customer_no,
       sp.objkey                objkey
  FROM sales_part_active_lov sp
 INNER JOIN (SELECT DISTINCT (ant.part_no), cas.customer_no
               FROM assortment_structure_tab       ast,
                    customer_assortment_struct_tab cas,
                    assortment_node_tab            ant
              WHERE cas.assortment_id = ant.assortment_id
                AND ant.part_no IS NOT NULL
                AND ast.assortment_id = cas.assortment_id
                AND ast.rowstate = 'Active'
                AND cas.limit_sales_to_assortments = 'TRUE'
                AND (CASE WHEN Customer_Assortment_Node_API.Restricted_Node_Exists(cas.customer_no, cas.assortment_id) = 'TRUE'
                           THEN Customer_Assortment_Node_API.Node_Exists_In_Limit_Hierarchy(cas.customer_no, ant.assortment_id, ant.assortment_node_id)
                     ELSE 1
                  END
                 ) = 1) assort
    ON sp.catalog_no = assort.part_no;


@SecurityCheck Site.UserAuthorized(contract)
VIEW Sales_Part_Service_Lov IS
   Prompt = 'Service'
   Contract.Flags = 'PMI--'
   Catalog_No.Flags = 'KMI-L'
   Gtin_No.Flags = 'A-INL'
   price_unit_meas.Flags = 'A-IUL'
SELECT contract                                                      contract,
       catalog_no                                                    catalog_no,
       Sales_Part_API.Get_Catalog_Desc(contract, catalog_no)         catalog_desc,
       list_price                                                    list_price,
       list_price_incl_tax                                           list_price_incl_tax,
       rental_list_price                                             rental_list_price,
       price_unit_meas                                               price_unit_meas,
       Part_Gtin_API.Get_Default_Gtin_No(catalog_no)                 gtin_no,
       rowkey                                                        objkey
FROM   sales_part_tab
WHERE  activeind = 'Y'
AND    catalog_type = 'NON'
AND    sales_type IN ('SALES', 'SALES RENTAL');

@SecurityCheck Site.UserAuthorized(contract)
VIEW Sales_Part_Pl_Lov IS
   Prompt = 'Sales Part'
   Catalog_No.Flags = 'KMI-L'
   Part_No.Ref = 'InventoryPart(contract)'
SELECT catalog_no                                                    catalog_no,
       Sales_Part_API.Get_Catalog_Desc(contract, catalog_no)         catalog_desc,
       part_no                                                       part_no,
       list_price                                                    list_price,
       list_price_incl_tax                                           list_price_incl_tax,
       rental_list_price                                             rental_list_price,
       rowkey                                                       objkey
FROM   sales_part_tab
WHERE  activeind = 'Y';

@SecurityCheck Site.UserAuthorized(contract)
VIEW Sales_Part_Bprice_Allowed_Lov IS
   Prompt = 'Sales Part'
   Catalog_No.Flags = 'K---L'
SELECT DISTINCT catalog_no                                            catalog_no,
       Sales_Part_API.Get_Catalog_Desc(contract, catalog_no )         catalog_desc,
       catalog_no                                   objkey
FROM   sales_part_tab;

@SecurityCheck Site.UserAuthorized(contract)
VIEW Rental_Part_Bprice_Allowed_Lov IS
   Prompt = 'Sales Part'
   Catalog_No.Flags = 'K---L'
SELECT DISTINCT catalog_no                                            catalog_no,
       Sales_Part_API.Get_Catalog_Desc(contract, catalog_no )         catalog_desc,
       catalog_no                                   objkey
FROM   sales_part_tab 
WHERE  sales_type IN ('SALES RENTAL', 'RENTAL');

@SecurityCheck Site.UserAuthorized(sp.contract)
VIEW Sales_Part_Com_Lov IS
   Prompt = 'Sales Part'
   Catalog_No.Flags = 'K---L'
SELECT sp.catalog_no                                                  catalog_no,
       Sales_Part_API.Get_Catalog_Desc(sp.contract, sp.catalog_no )   catalog_desc,
       sp.rowkey                                                      objkey
FROM   sales_part_tab sp
WHERE  sp.activeind = 'Y'
AND  sp.rowid = (SELECT MAX(sp2.rowid)
                 FROM sales_part_tab sp2
                 WHERE sp2.catalog_no = sp.catalog_no
                 AND EXISTS (SELECT 1 FROM user_allowed_site_pub
                             WHERE site = sp.contract))
AND  sp.sales_type IN ('SALES', 'SALES RENTAL');

@SecurityCheck Site.UserAuthorized(s.contract)
VIEW Sales_Part_Alternate_Lov IS
   Prompt = 'Purchase part'
   Contract.Flags = 'P----'
   Catalog_No.Flags = 'P----'
   Catalog_No.Prompt = 'Catalog No'
   Catalog_Desc.Flags = 'A---L'
SELECT s.contract                                                    contract,
       s.catalog_no                                                  catalog_no,
       pca.alternative_part_no                                       substitute_sales_part,
       Sales_Part_API.Get_Catalog_Desc(s2.contract, s2.catalog_no)   catalog_desc,
       s.rowkey                                                      objkey
FROM   SALES_PART_TAB s, part_catalog_alternative_pub pca, SALES_PART_TAB s2
WHERE  s.catalog_no  = pca.part_no
AND    s2.catalog_no = pca.alternative_part_no
AND    s.contract = s2.contract
AND    s.sales_type IN ('SALES', 'SALES RENTAL');

@SecurityCheck Site.UserAuthorized(spt.contract)
VIEW Sales_Part_For_Price_List_Lov IS
   Prompt = 'Sales Part'
   Catalog_No.Flags = 'K---L'
   Contract.Flags = 'KMI--'
   Sales_Price_Type.Flags = 'K---L'
   Sales_Price_Type.Datatype = 'STRING(200)'
   Sales_Price_Type.Prompt = 'Sales Price Type'
SELECT spt.catalog_no                                                  catalog_no,
       spt.contract                                                    contract,
       Sales_Part_API.Get_Catalog_Desc(spt.contract, spt.catalog_no)   catalog_desc,
       spt.sales_price_group_id                                        sales_price_group_id,
       Sales_Price_Type_API.Decode(spbpt.sales_price_type)             sales_price_type,
       spt.rowkey                                                      objkey
FROM   sales_part_tab spt, sales_part_base_price_tab spbpt
WHERE  spt.catalog_no = spbpt.catalog_no
AND    spt.contract = spbpt.base_price_site
AND    spbpt.rowstate ='Active';

@SecurityCheck Site.UserAuthorized(contract)
VIEW Sales_Part_Lov2 IS
   Prompt = 'Sales Part'
   Part_No.Ref = 'InventoryPart(contract)'
   Quick_Registered_Part_Db.Datatype = 'STRING(20)'
   Export_To_External_App_Db.Datatype = 'STRING(20)'
SELECT contract                                                contract,
       catalog_no                                              catalog_no,
       Sales_Part_API.Get_Catalog_Desc_For_Lang(contract, catalog_no, Fnd_Session_API.Get_Language()) catalog_desc,
       part_no                                                 part_no,
       catalog_group                                           catalog_group,
       sales_price_group_id                                    sales_price_group_id,
       list_price                                              list_price,
       list_price_incl_tax                                     list_price_incl_tax,
       rental_list_price                                       rental_list_price,
       rental_list_price_incl_tax                              rental_list_price_incl_tax,
       Fnd_Boolean_API.Decode(quick_registered_part)           quick_registered_part,
       quick_registered_part                                   quick_registered_part_db,
       Fnd_Boolean_API.Decode(export_to_external_app)          export_to_external_app,
       export_to_external_app                                  export_to_external_app_db,
       sales_type                                              sales_type_db,
       Part_Gtin_API.Get_Default_Gtin_No(catalog_no)           gtin_no,
       catalog_type                                            catalog_type_db,
       rowkey                                                 objkey
FROM   sales_part_tab;

@SecurityCheck Site.UserAuthorized(tbl.contract)
VIEW Sales_Part_Exchange_Comp_Lov IS
   Prompt = 'Sales Part'
   Contract.Flags = 'PMI--'
   Part_No.Flags = 'PMI--'
   Part_No.Ref = 'InventoryPart(contract)'
   Description.Datatype = 'STRING(35)'
   Description.Prompt = 'Description'
SELECT contract                                                    contract,
       part_no                                                     part_no,
       sales_part_no                                               sales_part_no,
       description                                                 description
FROM (
   SELECT ipt.contract                                                    contract,
          ipt.part_no                                                     part_no,
          spt.catalog_no                                                  sales_part_no,
          Sales_Part_API.Get_Catalog_Desc(spt.contract, spt.catalog_no)   description
   FROM   inventory_part_tab ipt,
          inventory_part_alternate ipa,
          sales_part_tab spt,
          part_catalog_pub pcp
   WHERE  ipt.contract = ipa.contract
   AND    ipt.part_no  = ipa.part_no
   AND    spt.contract = ipt.contract
   AND    spt.part_no  = ipa.alternative_part_no
   AND    pcp.part_no  = spt.part_no
   AND    pcp.condition_code_usage = 'ALLOW_COND_CODE'
   AND    spt.sales_type IN ('SALES', 'SALES RENTAL')
   UNION ALL
   SELECT ipt.contract                                                    contract,
          ipt.part_no                                                     part_no,
          spt.catalog_no                                                  sales_part_no,
          Sales_Part_API.Get_Catalog_Desc(spt.contract, spt.catalog_no)   description
   FROM   inventory_part_tab ipt,
          sales_part_tab spt,
          part_catalog_pub pcp
   WHERE  spt.contract = ipt.contract
   AND    spt.part_no  = ipt.part_no
   AND    pcp.part_no  = spt.part_no
   AND    pcp.condition_code_usage = 'ALLOW_COND_CODE'
   AND    spt.sales_type IN ('SALES', 'SALES RENTAL')) tbl;

@SecurityCheck Site.UserAuthorized(contract)
VIEW Sales_Part_Price_Tax_Lov IS
   Prompt = 'Sales Part'
   Catalog_Desc.Flags = 'A---L'
   Part_No.Ref = 'InventoryPart(contract)'
   List_Price.Flags = 'A---L'
   Tax_Code.Flags = 'A---L'
   Tax_Code.Prompt = 'Tax Code'
   Tax_Class_Id.Flags = 'A---L'
   Quick_Registered_Part_Db.Datatype = 'STRING(20)'
   Export_To_External_App_Db.Datatype = 'STRING(20)'
   Catalog_Type_Db.Datatype = 'STRING(20)'
   Activeind.Flags = 'A---L'
   Activeind_Db.Datatype = 'STRING(1)'
SELECT contract                                                                    contract,
       catalog_no                                                                  catalog_no,
       Sales_Part_API.Get_Catalog_Desc_For_Lang(contract, catalog_no, Fnd_Session_API.Get_Language()) catalog_desc,
       part_no                                                                     part_no,
       list_price                                                                  list_price,
       list_price_incl_tax                                                         tax_price,
       rental_list_price                                                           rental_list_price,
       rental_list_price_incl_tax                                                  tax_rental_price,
       tax_code                                                                    tax_code,
       Statutory_Fee_API.Get_Description(Site_API.Get_Company(contract), tax_code) description,
       tax_class_id                                                                tax_class_id,
       Tax_Class_API.Get_Description(Site_API.Get_Company(contract), tax_class_id) tax_class_description,
       catalog_type                                                                catalog_type_db,
       Fnd_Boolean_API.Decode(quick_registered_part)                               quick_registered_part,
       quick_registered_part                                                       quick_registered_part_db,
       Fnd_Boolean_API.Decode(export_to_external_app)                              export_to_external_app,
       export_to_external_app                                                      export_to_external_app_db,
       Active_Sales_Part_API.Decode(activeind)                                     activeind,
       activeind                                                                   activeind_db,       
       rowkey                                                                      objkey,
       rowid                                                                       objid
FROM   sales_part_tab
WHERE  sales_type IN ('SALES', 'SALES RENTAL');

@DbViewRowLevelSecurity CustomImplemented
VIEW Sales_Part_Cc_Lov IS
   Prompt = 'Sales Part'
   Contract.Flags = 'PMI-L'
   Part_No.Ref = 'InventoryPart(contract)'
   Catalog_Group.Flags = 'AMIUL'
   Sales_Price_Group_Id.Flags = 'AMIUL'
SELECT sp.contract                                                   contract,
       sp.catalog_no                                                 catalog_no,
       Sales_Part_API.Get_Catalog_Desc(sp.contract, sp.catalog_no)   catalog_desc,
       sp.part_no                                                    part_no,
       sp.catalog_group                                              catalog_group,
       sp.sales_price_group_id                                       sales_price_group_id,
       sp.rowkey                                                     objkey
FROM   SALES_PART_TAB sp, user_allowed_site_pub ua
WHERE  sp.contract = ua.site;

@SecurityCheck Site.UserAuthorized(contract)
VIEW Sales_Part_Package_Lov IS
   Prompt = 'Sales Part'
   Contract.Flags = 'PMI--'
   Catalog_Desc.Datatype = 'STRING(35)'
SELECT contract            contract,
       catalog_no          catalog_no,
       catalog_desc        catalog_desc,
       list_price          list_price,
       list_price_incl_tax list_price_incl_tax,
       rowkey              objkey
FROM   sales_part_tab
WHERE  catalog_type = 'PKG'
AND    sales_type IN ('SALES', 'SALES RENTAL');

@SecurityCheck Site.UserAuthorized(contract)
VIEW Sales_Part_Inventory_Lov IS
   Prompt = 'Sales Part'
   Contract.Flags = 'PMI--'
   Catalog_Desc.Datatype = 'STRING(35)'
   Part_No.Ref = 'InventoryPart(contract)'
SELECT contract            contract,
       catalog_no          catalog_no,
       catalog_desc        catalog_desc,
       part_no             part_no,
       rental_list_price   rental_list_price,
       list_price          list_price,
       list_price_incl_tax list_price_incl_tax,
       rowkey              objkey
FROM   sales_part_tab
WHERE  catalog_type = 'INV';

@SecurityCheck Site.UserAuthorized(contract)
VIEW Sales_Part_Pkg_Comp_Lov IS
   Prompt = 'Sales Part'
   Contract.Flags = 'PMI--'
   Catalog_No.Flags = 'KMI-L'
   Catalog_Desc.Datatype = 'STRING(35)'
   Activeind.Datatype = 'STRING(200)'
   Activeind_Db.Datatype = 'STRING(20)'
   Catalog_Type.Datatype = 'STRING(20)'
   Catalog_Type.DataType = 'STRING'
   Catalog_Type_Db.Ref = 'SalesPartTypeLov'
   Catalog_Type_Db.DataType = 'STRING(20)'
SELECT contract                                 contract,
       catalog_no                               catalog_no,
       catalog_desc                             catalog_desc,
       Active_Sales_Part_API.Decode(activeind)  activeind,
       activeind                                activeind_db,       
       Sales_Part_Type_API.Decode(catalog_type) catalog_type,
       catalog_type                            catalog_type_db,
       rowid                                   objid,
       ltrim(lpad(to_char(rowversion,'YYYYMMDDHH24MISS'),2000))      objversion,
       rowkey                                  objkey
FROM   SALES_PART_TAB
WHERE  sales_type IN ('SALES', 'SALES RENTAL');

@SecurityCheck Site.UserAuthorized(sp.contract)
VIEW Sales_Part_Classification_Lov IS
   Prompt = 'Classification Part No'
   Contract.Flags = 'PMI--'
   Catalog_No.Flags = 'AMI-L'
   Catalog_Desc.Datatype = 'STRING(35)'
   Part_No.Ref = 'InventoryPart(contract)'
SELECT contract                     contract,
       ast.classification_standard  classification_standard,
       ant.classification_part_no   classification_part_no,
       ant.unit_code                classification_unit_meas,
       catalog_no                   catalog_no,
       catalog_desc                 catalog_desc,
       ant.part_no                  part_no,
       list_price                   list_price,
       list_price_incl_tax          list_price_incl_tax,
       sales_type                   sales_type_db,
       ant.rowkey                  objkey
FROM   sales_part_tab sp, assortment_node_tab ant, assortment_structure_tab ast
WHERE  ant.classification_part_no IS NOT NULL
AND    ast.rowstate = 'Active'
AND    ant.assortment_id = ast.assortment_id
AND    ant.part_no = sp.part_no;

@SecurityCheck Site.UserAuthorized(sp2.contract)
VIEW Sales_Part_Gtin_No_Lov IS
   Prompt = 'GTIN No'
   Contract.Flags = 'P----'
   Gtin_No.Flags = 'K---L'
   Catalog_No.Flags = 'A---L'
   Catalog_Desc.Flags = 'A---L'
   Catalog_Desc.Datatype = 'STRING(35)'
   Part_No.Flags = 'A---L'
   Part_No.Ref = 'InventoryPart(contract)'
   List_Price.Flags = 'A---L'
   List_Price_Incl_Tax.Flags = 'A---L'
SELECT sp1.contract                                                    contract,
       pgt.gtin_no                                                     gtin_no,
       sp1.catalog_no                                                  catalog_no,
       sp1.catalog_desc                                                catalog_desc,
       sp1.part_no                                                     part_no,
       sp1.list_price                                                  list_price,
       sp1.list_price_incl_tax                                         list_price_incl_tax,
       null                                                            unit_code,
       sp1.sales_type                                                  sales_type_db
FROM   sales_part_tab sp1, part_gtin_tab pgt
WHERE  pgt.used_for_identification = 'TRUE'
AND    sp1.catalog_no = pgt.part_no
UNION
SELECT sp2.contract                                                    contract,
       pgu.gtin14                                                      gtin_no,
       sp2.catalog_no                                                  catalog_no,
       sp2.catalog_desc                                                catalog_desc,
       sp2.part_no                                                     part_no,
       sp2.list_price                                                  list_price,
       sp2.list_price_incl_tax                                         list_price_incl_tax,
       pgu.unit_code                                                   unit_code,
       sp2.sales_type                                                  sales_type_db
FROM   sales_part_tab sp2, part_gtin_unit_meas_tab pgu
WHERE  pgu.used_for_identification = 'TRUE'
AND    sp2.catalog_no = pgu.part_no
AND    EXISTS (SELECT 1
               FROM  inventory_part_tab ip, part_catalog_tab pc
               WHERE ip.input_unit_meas_group_id = pc.input_unit_meas_group_id
               AND   ip.part_no  = sp2.catalog_no
               AND   ip.contract = sp2.contract
               AND   pc.part_no =  sp2.catalog_no);

@SecurityCheck Site.UserAuthorized(sp.contract)
VIEW All_Sales_Part_Active_Lov IS
   Prompt = 'Sales Part'
   Contract.Flags = 'PMI--'
   Catalog_No.Flags = 'KMI-L'
   Part_No.Ref = 'InventoryPart(contract)'
   Tax_Code.Flags = 'A---L'
   Tax_Code.Prompt = 'Tax Code'
   Tax_Class_Id.Flags = 'A---L'
   Gtin_No.Flags = 'A-INL'
SELECT sp.contract                                                   contract,
       sp.catalog_no                                                 catalog_no,
       Sales_Part_API.Get_Catalog_Desc_For_Lang(contract, catalog_no, Fnd_Session_API.Get_Language())  catalog_desc,
       sp.part_no                                                    part_no,
       sp.list_price                                                 list_price,
       sp.list_price_incl_tax                                        tax_price,
       sp.rental_list_price                                          rental_list_price,
       sp.rental_list_price_incl_tax                                 tax_rental_price,
       tax_code                                                      tax_code,       
       Statutory_Fee_API.Get_Description(Site_API.Get_Company(contract), tax_code) description,
       tax_class_id                                                  tax_class_id,
       Tax_Class_API.Get_Description(Site_API.Get_Company(contract), tax_class_id) tax_class_description,
       sg.delivery_confirmation                                      delivery_confirmation,
       Part_Gtin_API.Get_Default_Gtin_No(catalog_no)                 gtin_no,
       sp.sales_type                                                 sales_type_db,
       sp.rowkey                                                     objkey
FROM   sales_part_tab sp, SALES_GROUP sg
WHERE  sp.activeind = 'Y'
AND    sp.catalog_group = sg.catalog_group;

@SecurityCheck Site.UserAuthorized(contract)
VIEW Non_Rental_Sales_Part_Lov IS
   Prompt = 'Sales Part'
   Part_No.Ref = 'InventoryPart(contract)'
   Catalog_Type_Db.Datatype = 'STRING(20)'
   Activeind_Db.Datatype = 'STRING(20)'
   Quick_Registered_Part_Db.Datatype = 'STRING(20)'
   Export_To_External_App_Db.Datatype = 'STRING(20)' 
   primary_catalog_db.Datatype = 'STRING(5)'
   Sales_Type_Db.Datatype = 'STRING(20)'
SELECT contract                       contract,
       catalog_no                     catalog_no,
       catalog_desc                   catalog_desc,
       part_no                        part_no,
       list_price                     list_price,
       rental_list_price              rental_list_price,
       Fnd_Boolean_API.Decode(quick_registered_part)  quick_registered_part,
       quick_registered_part          quick_registered_part_db,
       Fnd_Boolean_API.Decode(export_to_external_app) export_to_external_app,
       export_to_external_app         export_to_external_app_db,
       Fnd_Boolean_API.Decode(primary_catalog)        primary_catalog,
       primary_catalog                                primary_catalog_db,
       Part_Gtin_API.Get_Default_Gtin_No(catalog_no)  gtin_no,
       Sales_Type_API.Decode(sales_type)              sales_type,
       sales_type                     sales_type_db,
       catalog_type                   catalog_type_db,
       activeind                      activeind_db,
       rowid                         objid,
       ltrim(lpad(to_char(rowversion,'YYYYMMDDHH24MISS'),2000))                    objversion,
       rowkey                        objkey
FROM   sales_part_tab
WHERE  sales_type IN ('SALES', 'SALES RENTAL');

@SecurityCheck Site.UserAuthorized(contract)
VIEW All_Sales_Part_Service_Lov IS
   Prompt = 'Service'
   Contract.Flags = 'PMI--'
   Catalog_No.Flags = 'KMI-L'
   Gtin_No.Flags = 'A-INL'
SELECT contract                                                      contract,
       catalog_no                                                    catalog_no,
       Sales_Part_API.Get_Catalog_Desc(contract, catalog_no)         catalog_desc,
       list_price                                                    list_price,
       rental_list_price                                             rental_list_price,
       Part_Gtin_API.Get_Default_Gtin_No(catalog_no)                 gtin_no,
       rowkey                                                        objkey
FROM   sales_part_tab
WHERE  activeind = 'Y'
AND    catalog_type = 'NON';

@SecurityCheck Site.UserAuthorized(contract)
VIEW All_Sales_Part_Price_Tax_Lov IS
   Prompt = 'Sales Part'
   Catalog_Desc.Flags = 'A---L'
   Part_No.Ref = 'InventoryPart(contract)'
   List_Price.Flags = 'A---L'
   Tax_Code.Flags = 'A---L'
   Tax_Code.Prompt = 'Tax Code'
   Tax_Class_Id.Flags = 'A---L'
   Catalog_Type_Db.Datatype = 'STRING(20)'
   Quick_Registered_Part_Db.Datatype = 'STRING(20)'
   Export_To_External_App_Db.Datatype = 'STRING(20)'
   Activeind.Flags = 'A---L'
   Activeind_Db.Datatype = 'STRING(1)'
SELECT contract                                                                    contract,
       catalog_no                                                                  catalog_no,
       Sales_Part_API.Get_Catalog_Desc_For_Lang(contract, catalog_no, Fnd_Session_API.Get_Language()) catalog_desc,
       part_no                                                                     part_no,
       list_price                                                                  list_price,
       list_price_incl_tax                                                         tax_price,
       rental_list_price                                                           rental_list_price,
       rental_list_price_incl_tax                                                  tax_rental_price,
       tax_code                                                                    tax_code,
       Statutory_Fee_API.Get_Description(Site_API.Get_Company(contract), tax_code) description,
       tax_class_id                                                                tax_class_id,
       Tax_Class_API.Get_Description(Site_API.Get_Company(contract), tax_class_id) tax_class_description,
       catalog_type                                                                catalog_type_db,
       Fnd_Boolean_API.Decode(quick_registered_part)                               quick_registered_part,
       quick_registered_part                                                       quick_registered_part_db,
       Fnd_Boolean_API.Decode(export_to_external_app)                              export_to_external_app,
       export_to_external_app                                                      export_to_external_app_db,
       Active_Sales_Part_API.Decode(activeind)                                     activeind, 
       activeind                                                                   activeind_db,
       sales_type                                                                  sales_type_db,
       rowkey                                                                      objkey
FROM   sales_part_tab;

@SecurityCheck Company.UserAuthorized(si.company)
@SecurityCheck Site.UserAuthorized(si.contract)
VIEW Sales_Part_Uom_Lov IS
   Prompt = 'Sales part UoM'
   Catalog_No.Flags = 'A----'
   Contract.Flags = 'A---L'
   Company.Flags = 'A----'
   Sales_Unit_Meas.Flags = 'AMIUL'
SELECT DISTINCT sp.sales_unit_meas                                                    sales_unit_meas,
       sp.catalog_no                                                                  catalog_no,
       sp.contract                                                                    contract,
       si.company                                                                     company
FROM   sales_part_tab sp, site_tab si
WHERE  sp.contract = si.contract;

@SecurityCheck Company.UserAuthorized(si.company)
@SecurityCheck Site.UserAuthorized(si.contract)
VIEW Company_Sales_Part_Lov IS
   Prompt = 'Sales Part'
   Catalog_No.Flags = 'KMI-L'
   Catalog_Desc.Flags = 'A---L'
   Sales_Unit_Meas.Flags = 'A---L'
   Company.Flags = 'A----'
SELECT DISTINCT sp.catalog_no                                                             catalog_no,
       Sales_Part_API.Get_Catalog_Desc_For_Lang(sp.contract, sp.catalog_no, Fnd_Session_API.Get_Language()) catalog_desc,
       sp.sales_unit_meas                                                                 sales_unit_meas, 
       si.company                                                                         company
FROM   sales_part_tab sp, site_tab si
WHERE  sp.contract = si.contract;

@ServerOnlyAccess
VIEW Part_Valid_For_Assortment IS
   Prompt = 'Sales Parts Valid for Assortment'
   Contract.Flags = 'PMI--'
   Catalog_No.Flags = 'KMI-L'
   Customer_No.Flags = 'A----'
   Customer_No.Datatype = 'STRING(20)'
   Customer_No.Prompt = 'Customer No'
SELECT sp.contract             contract, 
       sp.catalog_no           catalog_no, 
       sp.catalog_desc         catalog_desc,
       sp.catalog_type         catalog_type, 
       sp.sales_unit_meas      sales_unit_meas, 
       assort.customer_no      customer_no
FROM sales_part sp
INNER JOIN (SELECT DISTINCT (ant.part_no), cas.customer_no
               FROM assortment_structure_tab       ast,
                    customer_assortment_struct_tab cas,
                    assortment_node_tab            ant
              WHERE cas.assortment_id = ant.assortment_id
                AND ant.part_no IS NOT NULL
                AND ast.assortment_id = cas.assortment_id
                AND ast.rowstate = 'Active'
                AND cas.limit_sales_to_assortments = 'TRUE') assort
   ON sp.catalog_no = assort.part_no
WHERE sales_type_db IN ('SALES', 'SALES RENTAL')
AND activeind_db = 'Y';