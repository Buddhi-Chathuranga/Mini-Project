-----------------------------------------------------------------------------
--
--  Logical unit: HandleCustomerOrderShortages
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date       Sign     History
--  ------     ------   ---------------------------------------------------------
-- 2019-08-29  KHVESE   SCUXXW4-16951, Added method Modify_Line___
-- 2019-01-09  RaVdlk   SCUXXW4-1374, Added new method Calculate_Value___
-- 2018-10-16  RaVdlk   SCUXXW4-1374, Added the procedure Cancel_Order_Line___
-- 2018-10-09  RaVdlk   SCUXXW4-1374, Created 
-----------------------------------------------------------------------------

layer Core;

FUNCTION  Validate_Planned_Delivery_Date___ (
    planned_delivery_date_       IN DATE,
    planned_due_date_            IN DATE,
    wanted_delivery_date_        IN DATE,
    date_entered_                IN DATE,
    order_no_                    IN VARCHAR2, 
    customer_no_                 IN VARCHAR2, 
    ship_addr_no_                IN VARCHAR2,  
    vendor_no_                   IN VARCHAR2, 
    ship_via_code_               IN VARCHAR2, 
    delivery_lead_time_          IN NUMBER, 
    picking_lead_time_           IN NUMBER,  
    ext_transport_calendar_id_   IN VARCHAR2, 
    supplier_ship_via_           IN VARCHAR2, 
    route_id_                    IN VARCHAR2,  
    supply_code_db_              IN VARCHAR2, 
    contract_                    IN VARCHAR2, 
    part_no_                     IN VARCHAR2, 
    purchase_part_no_            IN VARCHAR2, 
    config_id_                   IN VARCHAR2, 
    part_ownership_              IN VARCHAR2  )RETURN Date_Item_Rec
IS
   dummy_          DATE;
   date_item_rec_  Date_Item_Rec := NULL ;
BEGIN 
   
   date_item_rec_.planned_delivery_date := planned_delivery_date_;
   date_item_rec_.planned_due_date      := planned_due_date_;
   
   Cust_Ord_Date_Calculation_API.Calc_Order_Dates_Backwards(planned_delivery_date_       => date_item_rec_.planned_delivery_date,
                                                            planned_ship_date_           => dummy_,
                                                            planned_due_date_            => date_item_rec_.planned_due_date,
                                                            supply_site_due_date_        => dummy_,
                                                            target_date_                 => wanted_delivery_date_,
                                                            date_entered_                => date_entered_ ,
                                                            order_no_                    => order_no_,
                                                            customer_no_                 => customer_no_,
                                                            addr_no_                     => ship_addr_no_,
                                                            vendor_no_                   => vendor_no_,
                                                            ship_via_code_               => ship_via_code_,
                                                            default_delivery_leadtime_   => delivery_lead_time_,
                                                            default_picking_leadtime_    => picking_lead_time_,
                                                            default_ext_transport_cal_id_=> ext_transport_calendar_id_,
                                                            supplier_ship_via_transit_   => supplier_ship_via_,
                                                            supply_site_reserve_type_    => 'NOTALLOWED',
                                                            route_id_                    => route_id_,
                                                            supply_code_db_              => supply_code_db_,
                                                            contract_                    => contract_,
                                                            part_no_                     => part_no_,
                                                            supplier_part_no_            => nvl(part_no_,purchase_part_no_),
                                                            configuration_id_            => config_id_,
                                                            conv_factor_                 => NULL,
                                                            inverted_conv_factor_        => NULL,
                                                            ctp_planned_db_              => NULL,
                                                            new_demand_qty_              => NULL,
                                                            old_demand_qty_              => NULL,
                                                            objid_                       => NULL,
                                                            old_supply_code_db_          => NULL,
                                                            old_due_date_                => NULL,
                                                            check_only_                  => FALSE,
                                                            old_part_ownership_db_       => part_ownership_,
                                                            part_ownership_db_           => part_ownership_);

   RETURN date_item_rec_;
   
END Validate_Planned_Delivery_Date___ ;



FUNCTION  Validate_Planned_Due_Date___ (
   planned_delivery_date_       IN DATE,
   planned_due_date_            IN DATE,
   wanted_delivery_date_        IN DATE,
   contract_                    IN VARCHAR2,
   supply_code_db_              IN VARCHAR2,
   customer_no_                 IN VARCHAR2, 
   vendor_no_                   IN VARCHAR2, 
   part_no_                     IN VARCHAR2, 
   purchase_part_no_            IN VARCHAR2,    
   ship_addr_no_                IN VARCHAR2,  
   ship_via_code_               IN VARCHAR2, 
   route_id_                    IN VARCHAR2, 
   delivery_lead_time_          IN NUMBER, 
   picking_lead_time_           IN NUMBER,  
   ext_transport_calendar_id_   IN VARCHAR2, 
   supplier_ship_via_           IN VARCHAR2  )RETURN Date_Item_Rec
IS
   dummy_          DATE;
   date_item_rec_  Date_Item_Rec := NULL ;
BEGIN 
   
   date_item_rec_.planned_delivery_date := planned_delivery_date_;
   date_item_rec_.planned_due_date      := planned_due_date_;
   
   Cust_Ord_Date_Calculation_API.Calc_Order_Dates_Forwards(planned_delivery_date_       => date_item_rec_.planned_delivery_date,
                                                           planned_ship_date_           => dummy_,
                                                           planned_due_date_            => date_item_rec_.planned_due_date,
                                                           supply_site_due_date_        => dummy_,
                                                           target_date_                 => wanted_delivery_date_,
                                                           contract_                    => contract_,
                                                           supply_code_db_              => supply_code_db_,
                                                           customer_no_                 => customer_no_,
                                                           vendor_no_                   => vendor_no_,
                                                           part_no_                     => part_no_,
                                                           supplier_part_no_            => nvl(part_no_,purchase_part_no_),
                                                           ship_addr_no_                => ship_addr_no_,
                                                           ship_via_code_               => ship_via_code_,
                                                           route_id_                    => route_id_,
                                                           default_delivery_leadtime_   => delivery_lead_time_,
                                                           default_picking_leadtime_    => picking_lead_time_,
                                                           default_ext_transport_cal_id_=> ext_transport_calendar_id_,
                                                           supplier_ship_via_transit_   => supplier_ship_via_);
                                                           
   RETURN date_item_rec_;
END Validate_Planned_Due_Date___ ;


PROCEDURE  Reserve_Order___ (
    selection_ IN VARCHAR2 ) 
IS
   selected_records_     VARCHAR2(32000) := CONCAT(selection_, ';');
   current_selection_    VARCHAR2(32000); 
   order_no_             VARCHAR2 (12);
   line_no_              VARCHAR2 (4);
   rel_no_               VARCHAR2 (4);
   line_item_no_         NUMBER;
   contract_             VARCHAR2 (5);
   part_no_              VARCHAR2 (25);
   attr_                 VARCHAR2(32000);
   
BEGIN 
   WHILE (INSTR(selected_records_, ';') > 0) LOOP

      current_selection_  := substr(selected_records_, 0, INSTR(selected_records_, ';'));
      order_no_           := Client_SYS.Get_Key_Reference_Value(current_selection_, 'ORDER_NO');
      line_no_            := Client_SYS.Get_Key_Reference_Value(current_selection_, 'LINE_NO');
      rel_no_             := Client_SYS.Get_Key_Reference_Value(current_selection_, 'REL_NO');
      line_item_no_       := Client_SYS.Get_Key_Reference_Value(current_selection_, 'LINE_ITEM_NO');
      contract_           := Customer_Order_API.Get_Contract(order_no_);
      part_no_            := Customer_Order_Line_API.Get_Part_No(order_no_,line_no_,rel_no_,line_item_no_);
      
      Customer_Order_Line_Initial_Check___(order_no_, line_no_, rel_no_, line_item_no_);
      
      Client_SYS.Add_To_Attr('ORDER_NO',     order_no_,     attr_);
      Client_SYS.Add_To_Attr('LINE_NO',      line_no_,      attr_);
      Client_SYS.Add_To_Attr('REL_NO',       rel_no_,       attr_);
      Client_SYS.Add_To_Attr('LINE_ITEM_NO', line_item_no_, attr_);
      Client_SYS.Add_To_Attr('CONTRACT',     contract_,     attr_);
      Client_SYS.Add_To_Attr('PART_NO',      part_no_,      attr_);
         
      selected_records_  := substr(selected_records_, INSTR(selected_records_, ';')+1);   
   
   END LOOP;

   Customer_Order_Flow_API.Start_Plan_Picking__(attr_);
   
END Reserve_Order___ ;

PROCEDURE Cancel_Work_Order_For_Line___ (
	key_ IN Customer_Order_Line_Key)
IS
BEGIN
	$IF (Component_Wo_SYS.INSTALLED) $THEN 
      Active_Separate_API.Cancel_Wo_For_Co_Line(key_.order_no, key_.line_no, key_.rel_no, key_.line_item_no);   
   $ELSE
      NULL;
   $END
END Cancel_Work_Order_For_Line___;

PROCEDURE Disconnect_Work_Order_From_Line___ (
	key_ IN Customer_Order_Line_Key)
IS
BEGIN
	 $IF (Component_Wo_SYS.INSTALLED) $THEN 
      Active_Separate_API.Disconnect_Wo_From_Co_Line(key_.order_no, key_.line_no, key_.rel_no, key_.line_item_no);
   $ELSE
      NULL;
   $END
END Disconnect_Work_Order_From_Line___;


PROCEDURE Cancel_Order_Line___ (
	key_ IN Customer_Order_Line_Key,
	cancel_reason_ IN VARCHAR2,
	info$_ OUT VARCHAR2)
IS
   info_             VARCHAR2 (2000);
   head_state_info_  VARCHAR2 (40);
   line_state_info_  VARCHAR2 (40);
BEGIN
   
   IF cancel_reason_ IS NOT NULL  THEN
      Customer_Order_Line_API.Set_Cancel_Reason (key_.order_no, key_.line_no, key_.rel_no, key_.line_item_no, cancel_reason_);
   END IF;
    
   Cancel_Customer_Order_API.Cancel_Order_Line__ (head_objstate_    => head_state_info_,
                                                  line_state_       => line_state_info_,
                                                  info_             => info_,
                                                  order_no_         => key_.order_no,
                                                  line_no_          => key_.line_no,
                                                  rel_no_           => key_.rel_no,
                                                  line_item_no_     => key_.line_item_no,
                                                  change_req_flag_  => '',
                                                  replicate_change_ => '',
                                                  unpeg_ipd_flag_   => 'FALSE'); 
   info$_ := info_;
END Cancel_Order_Line___;


PROCEDURE Modify_Line___ (
	key_                    IN Customer_Order_Line_Key,
	buy_qty_due_            IN NUMBER,
   revised_qty_due_        IN NUMBER,
	planned_due_date_       IN DATE,
	planned_delivery_date_  IN DATE,
	info$_                  OUT VARCHAR2)
IS
   line_rec_               CUSTOMER_ORDER_LINE_API.Public_Rec;
   objversion_             VARCHAR2(2000);
   info_                   VARCHAR2(2000);
   attr_                   VARCHAR2(32000);
BEGIN
   line_rec_ := Customer_Order_Line_API.Get(key_.order_no, key_.line_no, key_.rel_no, key_.line_item_no);
   IF line_rec_.buy_qty_due != buy_qty_due_ THEN
      Client_SYS.Add_To_Attr('BUY_QTY_DUE', buy_qty_due_, attr_);
      Client_SYS.Add_To_Attr('REVISED_QTY_DUE', revised_qty_due_, attr_);
   END IF;
   IF line_rec_.planned_due_date != planned_due_date_ THEN
      Client_SYS.Add_To_Attr('PLANNED_DUE_DATE', planned_due_date_, attr_);
   END IF;
   IF line_rec_.planned_delivery_date != planned_delivery_date_ THEN
      Client_SYS.Add_To_Attr('PLANNED_DELIVERY_DATE', planned_delivery_date_, attr_);
   END IF;
   Client_SYS.Add_To_Attr('SOURCE', 'SHORTAGES', attr_);
   objversion_ := to_char(line_rec_.rowversion,'YYYYMMDDHH24MISS');
   Customer_Order_Line_API.Modify__(info_, line_rec_."rowid", objversion_, attr_, 'DO');
   info$_ := info_;
END Modify_Line___;