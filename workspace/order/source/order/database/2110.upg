---------------------------------------------------------------------------------------------
--  Module : ORDER
--
--  Purpose: Upgrade database objects for IFS/Customer Orders
--           from version 15.0.0 to 21.1.0
--
--  File   : 2110.upg
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  ------------------------------------------------------------------------
--  201119   MalLlk  SC2020R1-11433, Renamed the file name to 2110.upg, to reflect 21R1 new version IFS Cloud 21.1.0.
--  201108   RasDlk  SCZ-11661, Added a new attribute to the REBATE_AGREEMENT_TAB.
--  200928   MaRalk  SC2020R1-10053, Corrected issue when adding the column S227 to ORDER_INFO_SERVICES_RPT. 
--  200917   MaEelk  GESPRING20-5399, Added DISC_PRICE_ROUND to ORDER_QUOTATION_TAB and
--  200917           Added ORIGINAL_DISCOUNT, ORIGINAL_ADD_DISCOUNT and ORIGINAL_QUOTATION_DISCOUNT to ORDER_QUOTATION_LINE_TAB.
--  200909   cecobr  gelr:brazilian_specific_attributes, added BUSINESS_TRANSACTION_ID to CUSTOMER_ORDER_TAB
--  200914   MaRalk  SC2020R1-9428, Merged cdbs delivered in UPD9. 
--  200730   JaBalk  Bug 155039(SCZ-10626), Removed aurena related obsolete object meta data for the clients QuickRegisterCustomerAssistant, 
--  200730           CustomerInvoices and respective projections.
--  200712   ThKrLk  Bug 154440(SCZ-10218), Added column PRINT_WITHHOLDING_TAX to the table CUST_ORD_CUSTOMER_TAB.
--  200515   PeSuLK  Bug 153930(PJZ-4699), Removed PROJECT_ID and CURRENCY_RATE_TYPE from Cancelled customer orders.           
--  200304   BudKLK  Bug 148995, Increase length of the column CUST_REF in CUSTOMER_ORDER_TAB, RETURN_MATERIAL_TAB,  
--  200304           ORDER_QUOTATION_TAB, CUST_ORD_CUSTOMER_TAB. Increase length of the column CONTACT in CUSTOMER_ORDER_LINE_TAB,   
--  200304           EXTERNAL_CUST_ORDER_LINE_TAB, EXT_CUST_ORDER_LINE_CHANGE_TAB, CUST_ORD_CUSTOMER_ADDRESS_TAB. 
--  200304           Increase length of the column ORG_CONTACT in EXT_CUST_ORDER_LINE_CHANGE_TAB.  
--  200303   apwilk  Bug 140700, Added the column IVC_UNCONCT_CHG_SEPERATLY to COMPANY_ORDER_INFO_TAB.
--  200303   BudKlk  Bug 151684(SCZ-9277), Added column SUPPLY_SITE_PART_NO to CUSTOMER_ORDER_LINE_TAB.
--  200303           Created INDEX CUSTOMER_ORDER_LINE_IX8 ON CUSTOMER_ORDER_LINE_TAB. 
--  200820   MaEelk  GESPRING20-5398, Added DISC_PRICE_ROUND to CUSTOMER_ORDER_TAB and 
--  200829           added ORIGINAL_DISCOUNT, ORIGINAL_ADD_DISCOUNT, ORIGINAL_ORDER_DISCOUNT TO CUSTOMER_ORDER_LINE_TAB
--  200726   PraWlk  Added columns N105, N106 and S207..S227 to ORDER_INFO_SERVICES_RPT.
--  200604   fiallk  Added STATISTICAL_CODE column to CUSTOMER_ORDER_LINE_TAB
--  200408   NiDalk  SC2020R1-1904, Merged cdbs to 2010.upg.
--  200408   satglk  Bug SCXTEND-887, Added column CREATED_DATE in to the table EXT_CUST_ORDER_CHANGE_TAB.
--  200408   satglk  Bug SCXTEND-892, Added column CREATED_DATE in to the table EXT_RECEIVING_ADVICE_TAB.
--  200408   SatGlk  Bug SCXTEND-886, Added column CREATED_DATE in to the table EXTERNAL_CUSTOMER_ORDER_TAB.
--  200408   hairlk  SCXTEND-793, Avalara integration related changes.
--  200408   Nasrlk  Bug 150132 (FIZ-4326), Adding new columns S201, S202 to ORDER_INFO_SERVICES_RPT.
--  200408   SBalLK  Bug 150186 (SCZ-6129), Updated PICKING_CONFIRM COLUMN state to 'UNPICKED' from 'PICKED',
--  200408           where customer reservations have not picked AND re-generate consolidate shipment/Order list.
--  200408   maeelk  Bug 149428, WAVE4 project cdb files into UPD6.
--  200408   shprlk  Bug 148226(SCZ-4503), Introduced new column APPLY_TAX to be uesd as check box and entered value as 'TRUE' if 
--  200408           the company template that the company is created from is not 'STD-JP'.
--  200408   apwilk  Bug 144329, Added the column INCLUDE_TAX_FOR_INTERIM to COMPANY_ORDER_INFO_TAB
--  200408   KiSalk  Bug 143872(SCZ-931), Removed the Views that are no longer used or maintained in the Application.
--  200408   wasalk  Bug 143471, Increased the length of Catalog_Desc in Cust_Ord_Invo_Stat_Agg_tab.
--  200408   apwilk  Bug 141998, Added columns DELIVERY_TERMS and DEL_TERMS_LOCATION in to the table CUST_ORDER_LINE_SOURCE_SET_TAB.
--  200408   ErFelk  Bug 135965, when cancelling the Preliminary customer invoice, checkbox for Shipment Freight Charges Invoiced was not cleared.
--  200408           Therefore charges could not be invoiced. From this data repair script checkbox was reset so that customer can 
--  200408           invoice Shipment Freight Charges again.
--  200408   DiKuLk  Bug 140211, Created to increase the length of market description column to 200 from 35 
--  200219   Kabelk  Added COLUMNS S203, S204, S205, S206 to TO ORDER_INFO_SERVICES_RPT
--  200129   Kagalk  Added ARRIVAL_DATE to RETURN_MATERIAL_LINE_TAB.
--  200102   Hiralk  Added INVOICE_REASON_ID to CUSTOMER_ORDER_TAB
--  191216   Utbalk  Created for Next Generation Brazil
--  191216   fiallk  Added STATISTICAL_CODE column to SALES_PART_TAB
--  191216   fiallk  Added STATISTICAL_CODE column to SALES_CHARGE_TYPE_TAB
--  191216   fiallk  Added ACQUISITION_ORIGIN column to SALES_PART_TAB
--  191216   fiallk  Added ACQUISITION_ORIGIN column to CUSTOMER_ORDER_LINE_TAB
--  191121   AsHelk  Created
--  ------   ------  ------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SET SERVEROUTPUT ON
exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_1');
PROMPT START upgrading WITH 2110.upg

---------------------------------------------------------------------------------------------
------------------------------ Instructions for upg files -----------------------------------
---------------------------------------------------------------------------------------------
--
--  Main section should contain all upgrade operations.
--  Next section should contain removal of obsolete objects (any removal of data inside upg is prohibited!).
--  Removal of backup tables and obsolete columns should be added to <component>Cl.sql script!
--
--  If possible, everything regarding one table should be placed in one section.
--  If this is not possible, a proper comment about the reason should be added.
--
--  Each section should be started with a "-----" line and a empty line.
--  This section should then start with a line like: "-- ***** Example_Tab Start *****"
--  and end with a line like:                       "-- ***** Example_Tab End *****"
--
--  Don't forget UPPER/lower case !
--
--  Every part inside the section should start with a "PROMPT" line explaining what is done by the block.
--
--  If the PL/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.
--
--  Remember ordinary coding standard rules !
--
--  Don't drop any Table/Column !
--
--  Don't forget performance when updating large table !
--
--  No unnecessary blank lines or comments !
--
--  If possible, use pure SQL commands
--
--  If possible, try to group several updates together in one statement.
--
--  Timestamps will be added automatically at the end of the project.
--
--  For more information refer to the "Upgrade Script Standards" and the "Performance" technical documents.
--
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES -----------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
--------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ----------------------------
---------------------------------------------------------------------------------------------

-- ***** Customer_Order_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_2');
PROMPT Adding columns FINAL_CONSUMER, INVOICE_REASON_ID, DELIVERY_REASON_ID, SERVICE_CODE, COMPONENT_A, CUSTOMER_TAX_USAGE_TYPE, DISC_PRICE_ROUND to CUSTOMER_ORDER_TAB.
PROMPT Modify length of the Column CUST_REF in CUSTOMER_ORDER_TAB.  
DECLARE
   table_name_ VARCHAR2(30) := 'CUSTOMER_ORDER_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   -- gelr: outgoing_fiscal_note, begin
   column_ := Database_SYS.Set_Column_Values('FINAL_CONSUMER', 'VARCHAR2(20)', 'N', '''FALSE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   -- gelr: outgoing_fiscal_note, end
   -- gelr: invoice_reason, begin
   column_ := Database_SYS.Set_Column_Values('INVOICE_REASON_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   -- gelr: invoice_reason, end
   -- gelr: warehouse_journal, begin
   column_ := Database_SYS.Set_Column_Values('DELIVERY_REASON_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   -- gelr: warehouse_journal, end 
   -- gelr:fr_service_code, begin
   column_ := Database_SYS.Set_Column_Values('SERVICE_CODE', 'VARCHAR2(100)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   -- gelr: fr_service_code, end
   -- gelr: warehouse_journal, end   
   -- gelr:alt_invoice_no_per_branch, begin
   column_ := Database_SYS.Set_Column_Values('COMPONENT_A', 'VARCHAR2(50)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   -- gelr:alt_invoice_no_per_branch, end
   column_ := Database_SYS.Set_Column_Values('CUSTOMER_TAX_USAGE_TYPE', 'VARCHAR2(5)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   -- gelr: disc_price_rounded, begin
   column_ := Database_SYS.Set_Column_Values('DISC_PRICE_ROUND', 'VARCHAR2(20)', 'N', '''FALSE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column (table_name_, 'A', column_, TRUE);
   -- gelr: disc_price_rounded, end 
   
   column_ := Database_SYS.Set_Column_Values('CUST_REF', 'VARCHAR2(100)');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);   
   -- gelr:brazilian_specific_attributes, begin
   column_ := Database_SYS.Set_Column_Values('BUSINESS_TRANSACTION_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   -- gelr:brazilian_specific_attributes, end
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_3');
PROMPT Removing Project ID and Currency Rate Type from Cancelled customer orders.
BEGIN
   UPDATE customer_order_tab
   SET project_id = NULL,
       currency_rate_type = NULL
   WHERE rowstate = 'Cancelled'
   AND project_id IS NOT NULL;
   COMMIT;
END;
/
-- ***** Customer_Order_Tab End *****

---------------------------------------------------------------------------------------------

-- ***** Customer_Order_Line_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_4');
PROMPT Adding ACQUISITION_ORIGIN, CUSTOMER_TAX_USAGE_TYPE, STATISTICAL_CODE, ORIGINAL_DISCOUNT, ORIGINAL_ADD_DISCOUNT, ORIGINAL_ORDER_DISCOUNT, SUPPLY_SITE_PART_NO to CUSTOMER_ORDER_LINE_TAB.
PROMPT Modify length of the Column CONTACT in CUSTOMER_ORDER_LINE_TAB. 
DECLARE
   table_name_ VARCHAR2(30) := 'CUSTOMER_ORDER_LINE_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   -- gelr: acquisition_origin, begin
   column_ := Database_SYS.Set_Column_Values('ACQUISITION_ORIGIN', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   -- gelr: acquisition_origin, end
   column_ := Database_SYS.Set_Column_Values('CUSTOMER_TAX_USAGE_TYPE', 'VARCHAR2(5)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   -- gelr:good_service_statistical_code, begin
   column_ := Database_SYS.Set_Column_Values('STATISTICAL_CODE', 'VARCHAR2(15)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   -- gelr:good_service_statistical_code, end
   -- gelr: disc_price_rounded, begin
   column_ := Database_SYS.Set_Column_Values('ORIGINAL_DISCOUNT', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('ORIGINAL_ADD_DISCOUNT', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('ORIGINAL_ORDER_DISCOUNT', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   -- gelr: disc_price_rounded, end 
   
   column_ := Database_SYS.Set_Column_Values('SUPPLY_SITE_PART_NO', 'VARCHAR2(25)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   
   column_ := Database_SYS.Set_Column_Values('CONTACT', 'VARCHAR2(100)');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);   
END;
/


exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_5');
PROMPT creating INDEX CUSTOMER_ORDER_LINE_IX8 ON CUSTOMER_ORDER_LINE_TAB.
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'CUSTOMER_ORDER_LINE_TAB';
   index_name_ VARCHAR2(30) := 'CUSTOMER_ORDER_LINE_IX8';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);         
   Database_SYS.Set_Table_Column (columns_, 'SUPPLY_SITE_PART_NO');
   Database_SYS.Set_Table_Column (columns_, 'SUPPLY_SITE');

   Database_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/      
-- ***** Customer_Order_Line_Tab End *****

---------------------------------------------------------------------------------------------

-- ***** Sales_Part_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_6');
PROMPT ADD STATISTICAL_CODE TO SALES_PART_TAB.
DECLARE
    table_name_ VARCHAR2(30) := 'SALES_PART_TAB';
    column_     Database_SYS.ColRec;
BEGIN
   -- gelr: good_service_statistical_code, begin
   column_ := Database_SYS.Set_Column_Values('STATISTICAL_CODE', 'VARCHAR2(15)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   -- gelr: good_service_statistical_code, end
   -- gelr: acquisition_origin, begin
   column_ := Database_SYS.Set_Column_Values('ACQUISITION_ORIGIN', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   -- gelr: acquisition_origin, end
END;
/

-- ***** Sales_Part_Tab End *****

---------------------------------------------------------------------------------------------

-- ***** Sales_Charge_Type_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_7');
PROMPT ADD STATISTICAL_CODE TO SALES_CHARGE_TYPE_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'SALES_CHARGE_TYPE_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   -- gelr: good_service_statistical_code, begin
   column_ := Database_SYS.Set_Column_Values('STATISTICAL_CODE', 'VARCHAR2(15)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   -- gelr: good_service_statistical_code, end
END;
/

-- ***** Sales_Charge_Type_Tab End *****

---------------------------------------------------------------------------------------------

-- ***** Sales_Market_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_8');
PROMPT Modifying SALES_MARKET_TAB
DECLARE 
   column_ Database_SYS.ColRec;
BEGIN 
   column_ := Database_SYS.Set_Column_Values('DESCRIPTION', 'VARCHAR2(200)', 'N');
   Database_SYS.Alter_Table_Column('SALES_MARKET_TAB', 'M', column_, TRUE);
END;
/

-- ***** Sales_Market_Tab End *****

---------------------------------------------------------------------------------------------

-- ***** Delivery_Reliab_Stat_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_9');
PROMPT Modifying DELIVERY_RELIAB_STAT_TAB
DECLARE 
   column_ Database_SYS.ColRec;
BEGIN 
   column_ := Database_SYS.Set_Column_Values('MARKET_DESC', 'VARCHAR2(200)', 'Y');
   Database_SYS.Alter_Table_Column('DELIVERY_RELIAB_STAT_TAB', 'M', column_, TRUE);
END;
/

-- ***** Delivery_Reliab_Stat_Tab End *****

---------------------------------------------------------------------------------------------

-- ***** Delivery_Quality_Stat_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_10');
PROMPT Modifying DELIVERY_QUALITY_STAT_TAB
DECLARE 
   column_ Database_SYS.ColRec;
BEGIN 
   column_ := Database_SYS.Set_Column_Values('MARKET_DESC', 'VARCHAR2(200)', 'Y');
   Database_SYS.Alter_Table_Column('DELIVERY_QUALITY_STAT_TAB', 'M', column_, TRUE);
END;
/

-- ***** Delivery_Quality_Stat_Tab End *****

---------------------------------------------------------------------------------------------

-- ***** Cust_Ord_Invo_Stat_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_11');
PROMPT Modifying CUST_ORD_INVO_STAT_TAB
DECLARE 
   column_ Database_SYS.ColRec;
BEGIN 
   column_ := Database_SYS.Set_Column_Values('MARKET_DESC', 'VARCHAR2(200)', 'Y');
   Database_SYS.Alter_Table_Column('CUST_ORD_INVO_STAT_TAB', 'M', column_, TRUE);
END;
/

-- ***** Cust_Ord_Invo_Stat_Tab End *****

---------------------------------------------------------------------------------------------

-- ***** Cust_Ord_Back_Stat_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_12');
PROMPT Modifying CUST_ORD_BACK_STAT_TAB
DECLARE 
   column_ Database_SYS.ColRec;
BEGIN 
   column_ := Database_SYS.Set_Column_Values('MARKET_DESC', 'VARCHAR2(200)', 'Y');
   Database_SYS.Alter_Table_Column('CUST_ORD_BACK_STAT_TAB', 'M', column_, TRUE);
END;
/

-- ***** Cust_Ord_Back_Stat_Tab End *****

---------------------------------------------------------------------------------------------

-- ***** Cust_Ord_Invo_Stat_Agg_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_13');
PROMPT Modifying CUST_ORD_INVO_STAT_AGG_TAB
DECLARE 
   column_ Database_SYS.ColRec;
BEGIN 
   column_ := Database_SYS.Set_Column_Values('MARKET_DESC', 'VARCHAR2(200)', 'Y');
   Database_SYS.Alter_Table_Column('CUST_ORD_INVO_STAT_AGG_TAB', 'M', column_, TRUE);
END;
/

-- ***** Cust_Ord_Invo_Stat_Agg_Tab End *****

---------------------------------------------------------------------------------------------

-- ***** Delivery_Quality_Stat_Agg_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_14');
PROMPT Modifying DELIVERY_QUALITY_STAT_AGG_TAB
DECLARE 
   column_ Database_SYS.ColRec;
BEGIN 
   column_ := Database_SYS.Set_Column_Values('MARKET_DESC', 'VARCHAR2(200)', 'Y');
   Database_SYS.Alter_Table_Column('DELIVERY_QUALITY_STAT_AGG_TAB', 'M', column_, TRUE);
END;
/

-- ***** Delivery_Quality_Stat_Agg_Tab End *****

---------------------------------------------------------------------------------------------

-- ***** Shipment_Freight_Tab Start*****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_15');
PROMPT Setting freight charge invoiced TO FALSE.   
BEGIN
   UPDATE shipment_freight_tab shf
   SET shf.freight_chg_invoiced = 'FALSE'
   WHERE shf.freight_chg_invoiced = 'TRUE'
   AND EXISTS ( SELECT 1
                FROM invoice_tab i, invoice_item_tab ini
                WHERE i.company = ini.company
                AND i.invoice_id = ini.invoice_id
                AND i.rowstate = 'Cancelled'
                AND i.n3 IS NOT NULL  -- Shipment Id
                AND ini.c1 IS NULL    -- Order no 
                AND i.n3 = shf.shipment_id
                AND NOT EXISTS ( SELECT 1           -- This was written, not to select correctly invoiced lines, if this block is executed again.
                                 FROM invoice_tab inv, invoice_item_tab item
                                 WHERE inv.company = item.company
                                 AND inv.invoice_id = item.invoice_id
                                 AND inv.n3 = i.n3
                                 AND item.c1 IS NULL
                                 AND inv.rowstate != 'Cancelled'));                                    
   COMMIT;                              
END;
/

-- ***** Shipment_Freight_Tab End*****
 
---------------------------------------------------------------------------------------------

-- ***** Cust_Ord_Line_Source_Set_Tab Start*****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_16');
PROMPT Adding new columns to CUST_ORDER_LINE_SOURCE_SET_TAB 
DECLARE
   columns_       Database_SYS.ColumnTabType;
   table_name_    VARCHAR2(30) := 'CUST_ORDER_LINE_SOURCE_SET_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'DELIVERY_TERMS',     'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'DEL_TERMS_LOCATION', 'VARCHAR2(100)', 'Y');

   Database_SYS.Alter_Table(table_name_, columns_, TRUE);
END;
/

-- ***** Cust_Ord_Line_Source_Set_Tab End*****

---------------------------------------------------------------------------------------------

-- ***** Cust_Ord_Invo_Stat_Agg_Tab Start*****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_17');
PROMPT Modifying columns in Cust_Ord_Invo_Stat_Agg_Tab
DECLARE
   table_name_ VARCHAR2(30) := 'cust_ord_invo_stat_agg_tab';
   column_     Database_SYS.ColumnTabType;
BEGIN		 
   Database_SYS.Reset_Column_Table(column_);
   Database_SYS.Set_Table_Column(column_, 'catalog_desc', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table(table_name_, column_, TRUE);
END;
/

-- ***** Cust_Ord_Invo_Stat_Agg_Tab End*****

---------------------------------------------------------------------------------------------

-- ***** Company_Order_Info_Tab Start*****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_18');
PROMPT Adding columns INCLUDE_TAX_FOR_INTERIM, APPLY_TAX, IVC_UNCONCT_CHG_SEPERATLY to COMPANY_ORDER_INFO_TAB
DECLARE
   columns_       Database_SYS.ColumnTabType;
   table_name_    VARCHAR2(30) := 'COMPANY_ORDER_INFO_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);        
   Database_SYS.Set_Table_Column(columns_, 'INCLUDE_TAX_FOR_INTERIM',      'VARCHAR2(20)', 'N', '''TRUE''', keep_default_ => 'N');
   Database_SYS.Set_Table_Column(columns_, 'APPLY_TAX',                    'VARCHAR2(20)', 'N', '''TRUE''', keep_default_ => 'N');
   Database_SYS.Set_Table_Column(columns_, 'IVC_UNCONCT_CHG_SEPERATLY',    'VARCHAR2(20)', 'N', '''FALSE''', keep_default_ => 'N');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE);   
END; 
/


exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_19');
PROMPT Adding parameter IVC_UNCONCT_CHG_SEPERATLY to the scheduled task INVOICE_CUSTOMER_ORDER_API.BATCH_CREATE_CUST_INVOICES__ 
BEGIN
   UPDATE batch_schedule_par_tab 
   SET name = 'IVC_UNCONCT_CHG_SEPERATLY'
   WHERE name = 'EXCLUDE_UNCNTD_CHARGES'
   AND  schedule_id IN (SELECT bs.schedule_id 
                        FROM   batch_schedule_tab bs, batch_schedule_method_tab bsm 
                        WHERE  bsm.method_name = 'INVOICE_CUSTOMER_ORDER_API.BATCH_CREATE_CUST_INVOICES__' 
                        AND    bs.schedule_method_id = bsm.schedule_method_id )  ; 
   COMMIT;
END; 
/   

-- ***** Company_Order_Info_Tab End*****

---------------------------------------------------------------------------------------------

-- ***** Customer_Order_Pick_List_Tab Start*****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_20');
PROMPT Updating PICKING_CONFIRM COLUMN state to 'UNPICKED' from 'PICKED', where customer reservations have not picked AND re-generate consolidate shipment/Order list.
DECLARE
   CURSOR Get_Invalid_Pick_List IS
      SELECT p.pick_list_no, p.contract
      FROM customer_order_pick_list_tab p
      WHERE p.pick_list_no IN ( SELECT t.pick_list_no
                                FROM customer_order_reservation_tab t
                                WHERE t.pick_list_no != '*'
                                AND t.qty_assigned > 0 AND t.qty_assigned > (t.qty_picked + t.qty_shipped)
                                AND t.shipment_id != 0 )
      AND p.consolidated_flag = 'CONSOLIDATED'
      AND p.picking_confirmed = 'PICKED';
      
   CURSOR Get_Refferance (pick_list_no_ IN VARCHAR2) IS
      SELECT order_no, shipment_id
      FROM customer_order_reservation_tab
      WHERE pick_list_no = pick_list_no_;
      
   shipment_id_list_ VARCHAR2(4000) := '';
   order_no_list_    VARCHAR2(4000) := '';
   count_            NUMBER := 0;
      
   TYPE filter_record IS RECORD (pick_list_no VARCHAR2(15), shipment_id_list VARCHAR2(4000), order_no_list VARCHAR2(4000));
   TYPE filter_table IS TABLE OF filter_record INDEX BY PLS_INTEGER;
   result_tab_ filter_table;
BEGIN
   FOR rec_ IN Get_Invalid_Pick_List LOOP
      shipment_id_list_ := '';
      order_no_list_    := '';
      FOR ref_rec_ IN Get_Refferance(rec_.pick_list_no) LOOP
         IF INSTR(order_no_list_, ref_rec_.order_no) = 0 OR order_no_list_ IS NULL THEN
            order_no_list_ := CONCAT(order_no_list_, CONCAT(ref_rec_.order_no, '^'));
         END IF;
         IF INSTR(shipment_id_list_, ref_rec_.shipment_id) = 0 OR shipment_id_list_ IS NULL THEN
            shipment_id_list_ := CONCAT(shipment_id_list_, CONCAT(ref_rec_.shipment_id, '^'));
         END IF;
      END LOOP;

      count_ := count_ + 1;
      result_tab_(count_).pick_list_no     := rec_.pick_list_no;
      IF shipment_id_list_ IS NOT NULL THEN
              result_tab_(count_).shipment_id_list := SUBSTR(shipment_id_list_, 0, (LENGTH(shipment_id_list_) - 1));
      END IF;
      IF order_no_list_ IS NOT NULL THEN
         result_tab_(count_).order_no_list    := SUBSTR(order_no_list_,    0, (LENGTH(order_no_list_)    - 1));
      END IF;
   END LOOP;

   IF result_tab_.COUNT > 0 THEN
      FOR i_ IN result_tab_.FIRST..result_tab_.LAST LOOP
         UPDATE customer_order_pick_list_tab
         SET picking_confirmed      = 'UNPICKED',
             consolidated_orders    = result_tab_(i_).order_no_list,
             shipments_consolidated = result_tab_(i_).shipment_id_list
         WHERE pick_list_no = result_tab_(i_).pick_list_no;
      END LOOP;
   END IF;
   
   COMMIT;
END;
/

-- ***** Customer_Order_Pick_List_Tab End*****

---------------------------------------------------------------------------------------------

-- ***** Order_Info_Services_Rpt Start*****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_21');
PROMPT Adding new columns S201, S202 to ORDER_INFO_SERVICES_RPT
DECLARE
   columns_       Database_SYS.ColumnTabType;
   table_name_    VARCHAR2(30) := 'ORDER_INFO_SERVICES_RPT';
   
   -- procedure to create RPV Views   
   PROCEDURE Create_RPV_View(table_name_ IN VARCHAR2,
                             view_name_  IN VARCHAR2,
                             lu_         IN VARCHAR2,
                             prompt_     IN VARCHAR2,
                             module_     IN VARCHAR2)
   IS
      stmt_      VARCHAR2(2000);
      err_text_  VARCHAR2(200);
   BEGIN
      stmt_ := 'CREATE OR REPLACE VIEW ' || view_name_ ||' AS
                SELECT *
                FROM ' || table_name_ || ' T
                WHERE EXISTS (SELECT 1
                             FROM ALLOWED_REPORT A
                             WHERE A.RESULT_KEY = T.RESULT_KEY )
                WITH read only';

      EXECUTE IMMEDIATE stmt_;
      stmt_ := 'COMMENT ON TABLE '||view_name_||' IS ''LU='||lu_||'^PROMPT='||prompt_||'^MODULE='||module_||'^''';
      EXECUTE IMMEDIATE stmt_;

   EXCEPTION
      WHEN OTHERS THEN
         err_text_ := substr(SQLERRM, 1, 200);
         dbms_output.put_line (err_text_);
   END;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'S201', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S202', 'VARCHAR2(50)', 'Y');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE);
   
   Create_RPV_View('ORDER_INFO_SERVICES_RPT', 'ORDER_INFO_SERVICES_RPV', 'CustomerOrder', 'Order Info Services', 'ORDER');
END;
/

-- ***** Order_Info_Services_Rpt End*****

---------------------------------------------------------------------------------------------

-- ***** Customer_Order_Charge_Tab Start*****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_22');
PROMPT Adding COLUMNS TO CUSTOMER_ORDER_CHARGE_TAB
DECLARE
   columns_          Database_SYS.ColumnTabType;
   table_name_       VARCHAR2(30) := 'CUSTOMER_ORDER_CHARGE_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_TAX_USAGE_TYPE', 'VARCHAR2(5)', 'Y');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE );                
END;
/

-- ***** Customer_Order_Charge_Tab End*****

---------------------------------------------------------------------------------------------

-- ***** Order_Quotation_Tab Start*****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_23');
PROMPT Adding column CUSTOMER_TAX_USAGE_TYPE, DISC_PRICE_ROUND and Modify length of the Column CUST_REF IN ORDER_QUOTATION_TAB
DECLARE
   columns_          Database_SYS.ColumnTabType;
   table_name_       VARCHAR2(30) := 'ORDER_QUOTATION_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_TAX_USAGE_TYPE', 'VARCHAR2(5)', 'Y');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE );  
   
   Database_SYS.Set_Table_Column(columns_, 'CUST_REF', 'VARCHAR2(100)');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE );  
   -- gelr: disc_price_rounded, begin
   Database_SYS.Set_Table_Column(columns_, 'DISC_PRICE_ROUND', 'VARCHAR2(20)', 'N', '''FALSE''', keep_default_ => 'N');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE );
   -- gelr: disc_price_rounded, end        
END;
/

-- ***** Order_Quotation_Tab End*****

---------------------------------------------------------------------------------------------

-- ***** Order_Quotation_Line_Tab Start*****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_24');
PROMPT Adding COLUMNS CUSTOMER_TAX_USAGE_TYPE, ORIGINAL_DISCOUNT, ORIGINAL_ADD_DISCOUNT, ORIGINAL_QUOTATION_DISCOUNT TO ORDER_QUOTATION_LINE_TAB
DECLARE
   columns_          Database_SYS.ColumnTabType;
   table_name_       VARCHAR2(30) := 'ORDER_QUOTATION_LINE_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_TAX_USAGE_TYPE', 'VARCHAR2(5)', 'Y');
   -- gelr: disc_price_rounded, begin
   Database_SYS.Set_Table_Column(columns_, 'ORIGINAL_DISCOUNT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ORIGINAL_ADD_DISCOUNT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ORIGINAL_QUOTATION_DISCOUNT', 'NUMBER', 'Y');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE ); 
   -- gelr: disc_price_rounded, end   
END;
/
-- ***** Order_Quotation_Line_Tab End*****

---------------------------------------------------------------------------------------------

-- ***** Order_Quotation_Charge_Tab Start*****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_25');
PROMPT Adding COLUMNS TO ORDER_QUOTATION_CHARGE_TAB
DECLARE
   columns_          Database_SYS.ColumnTabType;
   table_name_       VARCHAR2(30) := 'ORDER_QUOTATION_CHARGE_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_TAX_USAGE_TYPE', 'VARCHAR2(5)', 'Y');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE );                
END;
/

-- ***** Order_Quotation_Charge_Tab End*****

---------------------------------------------------------------------------------------------

-- ***** Return_Material_Tab Start*****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_26');
PROMPT Adding column CUSTOMER_TAX_USAGE_TYPE and Modify length of the Column CUST_REF in RETURN_MATERIAL_TAB
DECLARE
   columns_          Database_SYS.ColumnTabType;
   table_name_       VARCHAR2(30) := 'RETURN_MATERIAL_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_TAX_USAGE_TYPE', 'VARCHAR2(5)', 'Y');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE ); 
   
   Database_SYS.Set_Table_Column(columns_, 'CUST_REF', 'VARCHAR2(100)');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE );     
END;
/

-- ***** Return_Material_Tab End*****

---------------------------------------------------------------------------------------------

-- ***** Return_Material_Line_Tab Start*****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_27');
PROMPT Adding COLUMNS TO RETURN_MATERIAL_LINE_TAB
DECLARE
   columns_          Database_SYS.ColumnTabType;
   table_name_       VARCHAR2(30) := 'RETURN_MATERIAL_LINE_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_TAX_USAGE_TYPE', 'VARCHAR2(5)', 'Y');
   -- gelr:modify_date_applied
   Database_SYS.Set_Table_Column(columns_, 'ARRIVAL_DATE', 'DATE', 'Y');  
   -- gelr:modify_date_applied
   Database_SYS.Alter_Table(table_name_, columns_, TRUE );                
END;
/

-- ***** Return_Material_Line_Tab End*****

---------------------------------------------------------------------------------------------

-- ***** Return_Material_Charge_Tab Start*****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_28');
PROMPT Adding COLUMNS TO RETURN_MATERIAL_CHARGE_TAB
DECLARE
   columns_          Database_SYS.ColumnTabType;
   table_name_       VARCHAR2(30) := 'RETURN_MATERIAL_CHARGE_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_TAX_USAGE_TYPE', 'VARCHAR2(5)', 'Y');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE );                
END;
/

-- ***** Return_Material_Charge_Tab End*****

---------------------------------------------------------------------------------------------

-- ***** Sales_Part_Ext_Tax_Params_Tab Start*****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_29');
PROMPT creating TABLE SALES_PART_EXT_TAX_PARAMS_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'SALES_PART_EXT_TAX_PARAMS_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT', 'VARCHAR2(5)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'CATALOG_NO', 'VARCHAR2(25)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'AVALARA_TAX_CODE', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_30');
PROMPT Adding INDEX SALES_PART_EXT_TAX_PARAMS_PK FOR SALES_PART_EXT_TAX_PARAMS_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'SALES_PART_EXT_TAX_PARAMS_PK';
   table_name_ VARCHAR2(30) := 'SALES_PART_EXT_TAX_PARAMS_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT');
   Database_SYS.Set_Table_Column(columns_, 'CATALOG_NO');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_31');
PROMPT Adding INDEX SALES_PART_EXT_TAX_PARAMS_RK FOR SALES_PART_EXT_TAX_PARAMS_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'SALES_PART_EXT_TAX_PARAMS_RK';
   table_name_ VARCHAR2(30) := 'SALES_PART_EXT_TAX_PARAMS_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** Sales_Part_Ext_Tax_Params_Tab End*****

---------------------------------------------------------------------------------------------

-- ***** External_Customer_Order_Tab Start*****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_32');
PROMPT Adding COLUMNS to EXTERNAL_CUSTOMER_ORDER_TAB 
DECLARE
   columns_       Database_SYS.ColumnTabType;
   table_name_    VARCHAR2(30) := 'EXTERNAL_CUSTOMER_ORDER_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CREATED_DATE', 'DATE', 'Y');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE);
END;   
/

-- ***** External_Customer_Order_Tab End*****

---------------------------------------------------------------------------------------------

-- ***** Ext_Cust_Order_Change_Tab Start*****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_33');
PROMPT Adding columns to EXT_CUST_ORDER_CHANGE_TAB 
DECLARE
   columns_       Database_SYS.ColumnTabType;
   table_name_    VARCHAR2(30) := 'EXT_CUST_ORDER_CHANGE_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CREATED_DATE', 'DATE', 'Y');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE);
END;   
/

-- ***** Ext_Cust_Order_Change_Tab End*****

---------------------------------------------------------------------------------------------

-- ***** Ext_Cust_Order_Change_Tab Start*****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_34');
PROMPT Adding new column CREATED_DATE to EXT_RECEIVING_ADVICE_TAB 
DECLARE
   columns_       Database_SYS.ColumnTabType;
   table_name_    VARCHAR2(30) := 'EXT_RECEIVING_ADVICE_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CREATED_DATE', 'DATE', 'Y');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE);
END; 
/

-- ***** Ext_Cust_Order_Change_Tab End*****

---------------------------------------------------------------------------------------------
  
-- ***** Cust_ord_Customer_Tab Start***** 

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_35');
PROMPT Modify length of the Column CUST_REF and adding column PRINT_WITHHOLDING_TAX to CUST_ORD_CUSTOMER_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'CUST_ORD_CUSTOMER_TAB';
   column_     Database_SYS.ColRec;
BEGIN   
   column_ := Database_SYS.Set_Column_Values('CUST_REF', 'VARCHAR2(100)');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);   
   
   column_ := Database_SYS.Set_Column_Values('PRINT_WITHHOLDING_TAX', 'VARCHAR2(5)', 'N', '''FALSE''', keep_default_ => 'N'); 
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);     
END;
/ 
 
-- ***** Cust_ord_Customer_Tab End**** 

---------------------------------------------------------------------------------------------

-- ***** External_Cust_Order_Line_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_36');
PROMPT Modify length of the Column CONTACT in EXTERNAL_CUST_ORDER_LINE_TAB. 
DECLARE
   table_name_ VARCHAR2(30) := 'EXTERNAL_CUST_ORDER_LINE_TAB';
   column_     Database_SYS.ColRec;
BEGIN   
   column_ := Database_SYS.Set_Column_Values('CONTACT', 'VARCHAR2(100)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);      
END;
/ 

-- ***** External_Cust_Order_Line_Tab End *****
 
---------------------------------------------------------------------------------------------
  
-- ***** Ext_Cust_Order_Line_Change_Tab Start***** 

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_37');
PROMPT Modify length of the Column CONTACT in EXT_CUST_ORDER_LINE_CHANGE_TAB. 
DECLARE
   table_name_ VARCHAR2(30) := 'EXT_CUST_ORDER_LINE_CHANGE_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('CONTACT', 'VARCHAR2(100)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);  
   
   column_ := Database_SYS.Set_Column_Values('ORG_CONTACT', 'VARCHAR2(100)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);     
END;
/ 

-- ***** Ext_Cust_Order_Line_Change_Tab End**** 

---------------------------------------------------------------------------------------------
  
-- ***** Cust_Ord_Customer_Address_Tab Start***** 

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_38');
PROMPT Modify length of the Column CONTACT in CUST_ORD_CUSTOMER_ADDRESS_TAB. 
DECLARE
   table_name_ VARCHAR2(30) := 'CUST_ORD_CUSTOMER_ADDRESS_TAB';
   column_     Database_SYS.ColRec;
BEGIN   
   column_ := Database_SYS.Set_Column_Values('CONTACT', 'VARCHAR2(100)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);      
END;
/ 

-- ***** Cust_Ord_Customer_Address_Tab End****

---------------------------------------------------------------------------------------------
  
-- ***** Rebate_Agreement_Tab Start***** 

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_39');
PROMPT Adding new column ALL_SALES_PART_LEVEL to REBATE_AGREEMENT_TAB 
DECLARE
   table_name_ VARCHAR2(30) := 'REBATE_AGREEMENT_TAB';
   column_     Database_SYS.ColRec;
BEGIN   
   column_ := Database_SYS.Set_Column_Values('ALL_SALES_PART_LEVEL', 'VARCHAR2(18)', 'N', '''INCLUDE_SALES_PART''', keep_default_ => 'N'); 
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);     
END;
/ 

-- ***** Rebate_Agreement_Tab End****


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PROJECTIONS ------------------------------------
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_40');
PROMPT Removing obsolete Projections QuickRegisterCustomerAssistantHandling, CustomerInvoicesHandling. 
BEGIN
   Database_SYS.Remove_Projection('QuickRegisterCustomerAssistantHandling', TRUE);   
   Database_SYS.Remove_Projection('CustomerInvoicesHandling', TRUE);   
END;
/
---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE CLIENTS ---------------------------------------
---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_41');
PROMPT Removing obsolete clients QuickRegisterCustomerAssistant, CustomerInvoices.
BEGIN
   Database_SYS.Remove_Client('QuickRegisterCustomerAssistant', TRUE);     
   Database_SYS.Remove_Client('CustomerInvoices',               TRUE);    
END;
/

---------------------------------------------------------------------------------------------

--*************Order_Info_Services_Rpt Start***************
exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_42');
PROMPT Adding COLUMNS S203, S204 to TO ORDER_INFO_SERVICES_RPT
DECLARE 
   table_name_ VARCHAR2(30) := 'ORDER_INFO_SERVICES_RPT';
   column_     Database_SYS.ColRec;
BEGIN
   -- gelr:it_payment_formats, begin
   column_ := Database_SYS.Set_Column_Values('S203', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);       
   column_ := Database_SYS.Set_Column_Values('S204', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S205', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S206', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   -- gelr:it_payment_formats, begin
   -- gelr:tax_char_on_invoice, begin
   column_ := Database_SYS.Set_Column_Values('S207', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S208', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S209', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S210', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S211', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S212', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S213', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S214', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S215', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S216', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S217', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S218', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S219', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S220', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S221', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S222', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S223', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S224', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S225', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S226', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('S227', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('N105', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE); 
   column_ := Database_SYS.Set_Column_Values('N106', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE); 
   -- gelr:tax_char_on_invoice, end
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_43');
PROMPT Recreating report view ORDER_INFO_SERVICES_RPV
DECLARE
   -- gelr:it_payment_formats, begin
   PROCEDURE Create_RPV_View(
      table_name_ IN VARCHAR2,
      view_name_  IN VARCHAR2,
      lu_         IN VARCHAR2,
      prompt_     IN VARCHAR2,
      module_     IN VARCHAR2)
   IS
      stmt_      VARCHAR2(2000);
      err_text_  VARCHAR2(200);
   BEGIN
      stmt_  := 'CREATE OR REPLACE VIEW ' || view_name_ ||' AS
                        SELECT * 
                        FROM ' || table_name_ || ' t
                        WHERE EXISTS ( SELECT 1 
                                       FROM allowed_report a 
                                       WHERE a.result_key = t.result_key )
                        WITH read only';
      dbms_output.put_line (' Creating View ' || view_name_ );
      EXECUTE IMMEDIATE stmt_;
      dbms_output.put_line (' View Created ');
      stmt_ := 'COMMENT ON TABLE '||view_name_||' IS ''LU='||lu_||'^PROMPT='||prompt_||'^MODULE='||module_||'^''';
      dbms_output.put_line (stmt_);
      EXECUTE IMMEDIATE stmt_;
      dbms_output.put_line (' View Comment Created ');
   EXCEPTION
      WHEN OTHERS THEN
         err_text_ := substr(SQLERRM, 1, 200);
         dbms_output.put_line (' Following Error occured while creating view ' || view_name_);
         dbms_output.put_line (err_text_);
   END;
   -- gelr:it_payment_formats, begin
BEGIN
   -- gelr:it_payment_formats, begin
   Create_RPV_View('ORDER_INFO_SERVICES_RPT','ORDER_INFO_SERVICES_RPV','CustomerOrder','Order Info Services','ORDER'); 
   -- gelr:it_payment_formats, end 
END;
/
    
--*************Order_Info_Services_Rpt End*****************

---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------



---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES/COLUMNS -----------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_44');
PROMPT Removing obsolete virtual tables
BEGIN
   -- Removing CancelOrderVirtual   
   Database_Sys.Remove_Table('PACKAGE_STRUCTURE_HANDLING_CANCEL_ORDER_VIRTUAL_VRT');
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_CANCEL_ORDER_VIRTUAL_VRT');
   Database_Sys.Remove_Table('CUSTOMER_ORDER_LINES_HANDLING_CANCEL_ORDER_VIRTUAL_VRT');

   -- Removing CancelOrderMessageVirtual   
   Database_Sys.Remove_Table('PACKAGE_STRUCTURE_HANDLING_CANCEL_ORDER_MESSAGE_VIRTUAL_VRT');
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_CANCEL_ORDER_MESSAGE_VIRTUAL_VRT');
   Database_Sys.Remove_Table('CUSTOMER_ORDER_LINES_HANDLING_CANCEL_ORDER_MESSAGE_VIRTUAL_VRT');

   -- Removing CloseOrderVirtual   
   Database_Sys.Remove_Table('PACKAGE_STRUCTURE_HANDLING_CLOSE_ORDER_VIRTUAL_VRT');
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_CLOSE_ORDER_VIRTUAL_VRT');

   -- Removing CloseOrderMessageVirtual   
   Database_Sys.Remove_Table('PACKAGE_STRUCTURE_HANDLING_CLOSE_ORDER_MESSAGE_VIRTUAL_VRT');
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_CLOSE_ORDER_MESSAGE_VIRTUAL_VRT');

   -- Removing CustomerOrderLineVirtual   
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_CUSTOMER_ORDER_LINE_VIRTUAL_VRT');

   -- Removing CreateAdvancePaymentInvoiceVirtual   
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_CREATE_ADVANCE_PAYMENT_INVOICE_VIRTUAL_VRT');
   Database_Sys.Remove_Table('CUSTOMER_ORDERS_HANDLING_CREATE_ADVANCE_PAYMENT_INVOICE_VIRTUAL_VRT');

   -- Removing TaxLinesVirtual   
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_TAX_LINES_VIRTUAL_VRT');
   Database_Sys.Remove_Table('CUSTOMER_ORDERS_HANDLING_TAX_LINES_VIRTUAL_VRT');

   -- Removing CreateSqLinesOrCoLinesFromTemplateVirtual   
   Database_Sys.Remove_Table('SALES_QUOTATION_HANDLING_CREATE_SQ_LINES_OR_CO_LINES_FROM_TEMPLATE_VIRTUAL_VRT');
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_CREATE_SQ_LINES_OR_CO_LINES_FROM_TEMPLATE_VIRTUAL_VRT');

   -- Removing TemplateLineVirtual   
   Database_Sys.Remove_Table('SALES_QUOTATION_HANDLING_TEMPLATE_LINE_VIRTUAL_VRT');
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_TEMPLATE_LINE_VIRTUAL_VRT');

   -- Removing SuggestedSalesPartVirtual   
   Database_Sys.Remove_Table('SALES_QUOTATION_HANDLING_SUGGESTED_SALES_PART_VIRTUAL_VRT');
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_SUGGESTED_SALES_PART_VIRTUAL_VRT');

   -- Removing SuggestedSalesPartListVirtual   
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_SUGGESTED_SALES_PART_LIST_VIRTUAL_VRT');
   Database_Sys.Remove_Table('SALES_QUOTATION_HANDLING_SUGGESTED_SALES_PART_LIST_VIRTUAL_VRT');

   -- Removing CustomerOrderVirtual   
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_CUSTOMER_ORDER_VIRTUAL_VRT');

   -- Removing CapabilityCheckCriticalPathAssistant   
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_CAPABILITY_CHECK_CRITICAL_PATH_ASSISTANT_VRT');
   Database_Sys.Remove_Table('SALES_QUOTATION_HANDLING_CAPABILITY_CHECK_CRITICAL_PATH_ASSISTANT_VRT');
   Database_Sys.Remove_Table('SOURCE_ORDER_LINES_MANUALLY_HANDLING_CAPABILITY_CHECK_CRITICAL_PATH_ASSISTANT_VRT');

   -- Removing DopHeaderModifyQtyAssistant   
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_DOP_HEADER_MODIFY_QTY_ASSISTANT_VRT');

   -- Removing DopHeadModifyQtyDopDemandCustOrd
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_DOP_HEAD_MODIFY_QTY_DOP_DEMAND_CUST_ORD_VRT');

   -- Removing CharacteristicSearchWizardVirtual  
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_CHARACTERISTIC_SEARCH_WIZARD_VIRTUAL_VRT');
   Database_Sys.Remove_Table('CUSTOMER_ORDER_LINES_HANDLING_CHARACTERISTIC_SEARCH_WIZARD_VIRTUAL_VRT');
   Database_Sys.Remove_Table('PACKAGE_STRUCTURE_HANDLING_CHARACTERISTIC_SEARCH_WIZARD_VIRTUAL_VRT');

   -- Removing CharacteristicValueListVirtual
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_CHARACTERISTIC_VALUE_LIST_VIRTUAL_VRT');
   Database_Sys.Remove_Table('CUSTOMER_ORDER_LINES_HANDLING_CHARACTERISTIC_VALUE_LIST_VIRTUAL_VRT');
   Database_Sys.Remove_Table('PACKAGE_STRUCTURE_HANDLING_CHARACTERISTIC_VALUE_LIST_VIRTUAL_VRT');

   -- Removing ConfigurationsListVirtual
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_CONFIGURATIONS_LIST_VIRTUAL_VRT');
   Database_Sys.Remove_Table('CUSTOMER_ORDER_LINES_HANDLING_CONFIGURATIONS_LIST_VIRTUAL_VRT');
   Database_Sys.Remove_Table('PACKAGE_STRUCTURE_HANDLING_CONFIGURATIONS_LIST_VIRTUAL_VRT');

   -- Removing ViewConfigurationVirtual
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_VIEW_CONFIGURATION_VIRTUAL_VRT');
   Database_Sys.Remove_Table('CUSTOMER_ORDER_LINES_HANDLING_VIEW_CONFIGURATION_VIRTUAL_VRT');
   Database_Sys.Remove_Table('PACKAGE_STRUCTURE_HANDLING_VIEW_CONFIGURATION_VIRTUAL_VRT');

   -- Removing ReplaceWithStandardSalesPart
   Database_Sys.Remove_Table('SALES_QUOTATION_LINES_HANDLING_REPLACE_WITH_STANDARD_SALES_PART_VRT');
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_REPLACE_WITH_STANDARD_SALES_PART_VRT');
   Database_Sys.Remove_Table('SALES_QUOTATION_HANDLING_REPLACE_WITH_STANDARD_SALES_PART_VRT');
   Database_Sys.Remove_Table('PACKAGE_STRUCTURE_HANDLING_REPLACE_WITH_STANDARD_SALES_PART_VRT');
   Database_Sys.Remove_Table('CUSTOMER_ORDER_LINES_HANDLING_REPLACE_WITH_STANDARD_SALES_PART_VRT');

   -- Removing ConfigManager
   Database_Sys.Remove_Table('SALES_QUOTATION_LINES_HANDLING_CONFIG_MANAGER_VRT');
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_CONFIG_MANAGER_VRT');
   Database_Sys.Remove_Table('SALES_QUOTATION_HANDLING_CONFIG_MANAGER_VRT');
   Database_Sys.Remove_Table('PACKAGE_STRUCTURE_HANDLING_CONFIG_MANAGER_VRT');
   Database_Sys.Remove_Table('CUSTOMER_ORDER_LINES_HANDLING_CONFIG_MANAGER_VRT');


   -- Remove Quatation handling virtual tables
   Database_Sys.Remove_Table('SALES_QUOTATION_HANDLING_ORDER_QUOTE_LINE_COMPETITOR_VIRTUAL_VRT');
   Database_Sys.Remove_Table('SALES_QUOTATION_LINES_HANDLING_ORDER_QUOTE_LINE_COMPETITOR_VIRTUAL_VRT');
   Database_Sys.Remove_Table('SALES_QUOTATION_HANDLING_CONTRIBUTION_MARGIN_HEADER_VIRTUAL_VRT');
   Database_Sys.Remove_Table('SALES_QUOTATION_HANDLING_CONTRIBUTION_MARGIN_LINE_VIRTUAL_VRT');
   Database_Sys.Remove_Table('SALES_QUOTATION_HANDLING_CONTRIBUTION_MARGIN_QUOTE_LINE_VIRTUAL_VRT');

   --Removing ApproveForCredit virtual tables
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_HANDLING_APPROVE_FOR_CREDIT_WARNING_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_HANDLING_APPROVE_FOR_CREDIT_VIRTUAL_VRT');

   --Removing ReturnToSupplierFromIntOrderTransitAssistant virtual tables
   Database_Sys.Remove_Table('RECEIVE_AUTHORIZED_RETURNS_RETURN_TO_SUPPLIER_FROM_INT_ORDER_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_HANDLING_RETURN_TO_SUPPLIER_FROM_INT_ORDER_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_LINES_HANDLING_RETURN_TO_SUPPLIER_FROM_INT_ORDER_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RECEIVE_AUTHORIZED_RETURNS_INVENTORY_PART_IN_TRANSIT_INFO_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_HANDLING_INVENTORY_PART_IN_TRANSIT_INFO_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_LINES_HANDLING_INVENTORY_PART_IN_TRANSIT_INFO_VIRTUAL_VRT');

   --Removing ScrapPartsFromIntOrdTransitAssistant virtual tables
   Database_Sys.Remove_Table('RECEIVE_AUTHORIZED_RETURNS_SCRAP_FROM_INT_ORD_TRANSIT_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_HANDLING_SCRAP_FROM_INT_ORD_TRANSIT_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_LINES_HANDLING_SCRAP_FROM_INT_ORD_TRANSIT_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_LINES_HANDLING_INVENTORY_PART_IN_TRANSIT_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_HANDLING_INVENTORY_PART_IN_TRANSIT_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RECEIVE_AUTHORIZED_RETURNS_INVENTORY_PART_IN_TRANSIT_VIRTUAL_VRT');

   --Removing ReturnPartsFromIntOrderTransitAssistant virtual tables
   Database_Sys.Remove_Table('RECEIVE_AUTHORIZED_RETURNS_INTERNAL_ORDER_RETURN_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_HANDLING_INTERNAL_ORDER_RETURN_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_LINES_HANDLING_INTERNAL_ORDER_RETURN_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RECEIVE_AUTHORIZED_RETURNS_RETURN_PART_IN_TRANSIT_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_HANDLING_RETURN_PART_IN_TRANSIT_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_LINES_HANDLING_RETURN_PART_IN_TRANSIT_VIRTUAL_VRT');

   --Removing ReturnPartsFromIntOrderTransitAssistant virtual tables
   Database_Sys.Remove_Table('RECEIVE_AUTHORIZED_RETURNS_DIRECT_RETURNS_TO_SUPPLIERS_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_HANDLING_DIRECT_RETURNS_TO_SUPPLIERS_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_LINES_HANDLING_DIRECT_RETURNS_TO_SUPPLIERS_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RECEIVE_AUTHORIZED_RETURNS_DIRECT_DELIVERY_RETURNS_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_HANDLING_DIRECT_DELIVERY_RETURNS_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_LINES_HANDLING_DIRECT_DELIVERY_RETURNS_VIRTUAL_VRT');

   --Removing CreateCreditInvoiceAssistant virtual tables
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_HANDLING_CREATE_CREDIT_INVOICE_VIRTUAL_VRT');
   Database_Sys.Remove_Table('RETURN_MATERIAL_AUTHORIZATION_HANDLING_CREATE_CREDIT_INVOICE_MESSAGE_VIRTUAL_VRT');

   --Removing InstallmentPlanAndDiscVirtual
   Database_Sys.Remove_Table('CUSTOMER_ORDER_INVOICE_HANDLING_INSTALLMENT_PLAN_AND_DISC_VIRTUAL_VRT');

   --Removing PaymentPlanVirtual
   Database_Sys.Remove_Table('CUSTOMER_ORDER_INVOICE_HANDLING_PAYMENT_PLAN_VIRTUAL_VRT');

   --Removing InvoiceDiscVirtual
   Database_Sys.Remove_Table('CUSTOMER_ORDER_INVOICE_HANDLING_INVOICE_DISC_VIRTUAL_VRT');
   
   Database_Sys.Remove_Table('CUSTOMER_ORDER_HANDLING_CREATE_JOB_VIRTUAL_VRT');
END;
/

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_45');
PROMPT Removing obsolete packages
BEGIN
   Database_Sys.Remove_Package('Quick_Register_Customer_Assistant_CPI', TRUE );  
   Database_Sys.Remove_Package('Customer_Invoices_CPI', TRUE );   
END;
/

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_46');
PROMPT Removing the Views that are no longer used or maintained in the Application.
BEGIN
   Database_SYS.Remove_View('CUST_ORDER_LINE_ADDRESS_3', TRUE);
   Database_SYS.Remove_View('CUSTOMER_ORDER_ADDRESS_3', TRUE);
END;
/
---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE INDEXES/SEQUENCES ------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Timestamp_47');
PROMPT Upgrade statements IN FILE 2110.upg ends here.

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('ORDER','2110.upg','Done');
