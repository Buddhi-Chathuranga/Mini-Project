-----------------------------------------------------------------------------
--
--  Fragment:     NewPartAssistantOrder
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date        Sign    History
--  ------      ------  ---------------------------------------------------------
--  2019-02-04  AwWelk  SCUXXW4-1699, Created to handled the New Part Wizard functionality in IFSEE.
-----------------------------------------------------------------------------

layer Core;

FUNCTION Get_Conversion_Factor___ (
   contract_        IN VARCHAR2,
   catalog_no_      IN VARCHAR2,
   sales_unit_meas_ IN VARCHAR2) RETURN NUMBER
IS
   conv_factor_         NUMBER;
   inventory_unit_meas_ VARCHAR2(10);
BEGIN
   inventory_unit_meas_ := Inventory_Part_API.Get_Unit_Meas(contract_, catalog_no_);
	conv_factor_         := Technical_Unit_Conv_API.Get_Valid_Conv_Factor(sales_unit_meas_, inventory_unit_meas_);
   RETURN conv_factor_;
END Get_Conversion_Factor___;


FUNCTION Get_Price_Conversion_Factor___ (
   sales_unit_meas_       IN VARCHAR2,
   sales_price_unit_meas_ IN VARCHAR2) RETURN NUMBER
IS
   conv_factor_  NUMBER;
BEGIN
   conv_factor_  := Technical_Unit_Conv_API.Get_Valid_Conv_Factor(sales_unit_meas_, sales_price_unit_meas_);
   RETURN conv_factor_;
END Get_Price_Conversion_Factor___;


PROCEDURE Create_Sales_Part___ (
   contract_                         IN VARCHAR2,
   catalog_no_                       IN VARCHAR2,
   catalog_type_                     IN VARCHAR2,
   sales_type_                       IN VARCHAR2,
   non_inv_part_type_                IN VARCHAR2,
   sourcing_option_                  IN VARCHAR2,
   rule_id_                          IN VARCHAR2,
   sales_price_group_id_             IN VARCHAR2,
   catalog_group_                    IN VARCHAR2,
   discount_group_                   IN VARCHAR2,
   sales_part_rebate_group_          IN VARCHAR2,
   sales_unit_meas_                  IN VARCHAR2,
   sales_conv_factor_                IN NUMBER,
   sales_price_unit_meas_            IN VARCHAR2,
   sales_price_conv_factor_          IN NUMBER,
   inverted_conv_factor_             IN NUMBER,
   sales_list_price_                 IN NUMBER,
   sales_list_price_incl_tax_        IN NUMBER,
   sales_rental_list_price_          IN NUMBER,
   sales_rental_list_price_incl_tax_ IN NUMBER,
   tax_code_                         IN VARCHAR2,
   tax_class_id_                     IN VARCHAR2,
   sales_taxable_                    IN BOOLEAN,
   use_price_including_tax_order_    IN BOOLEAN)
IS
   attr_    VARCHAR2(32000);
   dummy_   VARCHAR2(32000);
BEGIN
   Client_SYS.Clear_Attr(attr_);
   Client_SYS.Add_To_Attr('CONTRACT', contract_, attr_);
   IF catalog_type_ = 'INV' THEN 
      Client_SYS.Add_To_Attr('PART_NO', catalog_no_, attr_);
   END IF;
   Client_SYS.Add_To_Attr('CATALOG_TYPE_DB', catalog_type_, attr_);
   Client_SYS.Add_To_Attr('CATALOG_NO', catalog_no_, attr_);
   Client_SYS.Add_To_Attr('CATALOG_DESC', Part_Catalog_API.Get_Description(catalog_no_), attr_);
   Client_SYS.Add_To_Attr('SALES_TYPE_DB', sales_type_, attr_);
   Client_SYS.Add_To_Attr('SOURCING_OPTION_DB', sourcing_option_, attr_);
   Client_SYS.Add_To_Attr('RULE_ID', rule_id_, attr_);
   Client_SYS.Add_To_Attr('SALES_PRICE_GROUP_ID', sales_price_group_id_, attr_);
   Client_SYS.Add_To_Attr('CATALOG_GROUP', catalog_group_, attr_);
   Client_SYS.Add_To_Attr('DISCOUNT_GROUP', discount_group_, attr_);
   Client_SYS.Add_To_Attr('SALES_PART_REBATE_GROUP', sales_part_rebate_group_, attr_);
   Client_SYS.Add_To_Attr('SALES_UNIT_MEAS', sales_unit_meas_, attr_);
   Client_SYS.Add_To_Attr('CONV_FACTOR', sales_conv_factor_, attr_);
   Client_SYS.Add_To_Attr('PRICE_UNIT_MEAS', sales_price_unit_meas_, attr_);
   Client_SYS.Add_To_Attr('PRICE_CONV_FACTOR', sales_price_conv_factor_, attr_);
   Client_SYS.Add_To_Attr('INVERTED_CONV_FACTOR', inverted_conv_factor_, attr_);
   Client_SYS.Add_To_Attr('LIST_PRICE', sales_list_price_, attr_);
   Client_SYS.Add_To_Attr('LIST_PRICE_INCL_TAX', sales_list_price_incl_tax_, attr_);
   Client_SYS.Add_To_Attr('RENTAL_LIST_PRICE', sales_rental_list_price_, attr_);
   Client_SYS.Add_To_Attr('RENTAL_LIST_PRICE_INCL_TAX', sales_rental_list_price_incl_tax_, attr_);
   Client_SYS.Add_To_Attr('TAX_CODE', tax_code_, attr_);
   Client_SYS.Add_To_Attr('TAX_CLASS_ID', tax_class_id_, attr_);
   Client_SYS.Add_To_Attr('TAXABLE_DB', CASE WHEN sales_taxable_ THEN 'TRUE' ELSE 'FALSE' END, attr_);
   Client_SYS.Add_To_Attr('USE_PRICE_INCL_TAX_DB', CASE WHEN use_price_including_tax_order_ THEN 'TRUE' ELSE 'FALSE' END, attr_);

   Sales_Part_API.New__(dummy_, dummy_, dummy_, attr_, 'DO');
END Create_Sales_Part___;
