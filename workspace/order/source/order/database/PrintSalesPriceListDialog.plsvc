-----------------------------------------------------------------------------
--
--  Fragment:     PrintSalesPriceListDialog
--  Component:    ORDER
--
--  IFS Developer Studio Template Version 3.0
--
--  Date       Sign    History
--  ------     ------  ---------------------------------------------------------
-- 2018-10-15  MaEelk  SCUXXW4-9252, Added Get_Report_Result_Key_List___
-- 2018-08-28  IzShlk  SCUXXW4-8557, Implemented Print Sales Price List command
-----------------------------------------------------------------------------

layer Core;

FUNCTION Check_Price_Incl_Tax___ (
   record_selection_ IN VARCHAR2 ) RETURN BOOLEAN
IS
   selection_           VARCHAR2(32000) := CONCAT(record_selection_, ';');
   current_selection_   VARCHAR2(32000);
   price_list_no_       VARCHAR2(20);
   price_group_id_      VARCHAR2(20);
   price_group_type_    VARCHAR2(100);
   result_              BOOLEAN := TRUE;
BEGIN 
   WHILE (INSTR(selection_, ';') > 0) LOOP  
      current_selection_ := SUBSTR(selection_, 0, INSTR(selection_, ';'));
      price_list_no_   := Client_SYS.Get_Key_Reference_Value(current_selection_, 'PRICE_LIST_NO');
      price_group_id_  := Sales_Price_List_API.Get_Sales_Price_Group_Id(price_list_no_);
      price_group_type_:= Sales_Price_Group_API.Get_Sales_Price_Group_Type_Db(price_group_id_);

      Sales_Price_List_Initial_Check___(price_list_no_);
      IF price_group_type_ != 'PART BASED'  THEN
         result_ := FALSE;
         EXIT;
      END IF;
     
      selection_ := substr(selection_, INSTR(selection_, ';') + 1); 
   END LOOP;
   RETURN result_;
END Check_Price_Incl_Tax___;

FUNCTION Get_Report_Result_Key_List___ (
   record_selection_ IN VARCHAR2,
   language_code_       IN VARCHAR2,
   print_including_tax_ IN BOOLEAN) RETURN VARCHAR2
IS
   selection_           VARCHAR2(32000) := CONCAT(record_selection_, ';');
   current_selection_   VARCHAR2(32000);
   parameter_attr_      VARCHAR2(32000);
   report_attr_         VARCHAR2(1000);
   result_key_          NUMBER;
   price_list_attr_     VARCHAR2(2000) := NULL;
   price_list_no_       VARCHAR2(20);
BEGIN 
   WHILE (INSTR(selection_, ';') > 0) LOOP  
      current_selection_ := SUBSTR(selection_, 0, INSTR(selection_, ';'));
      price_list_no_  := Client_SYS.Get_Key_Reference_Value(current_selection_, 'PRICE_LIST_NO');
      Sales_Price_List_Initial_Check___(price_list_no_);
      
      IF price_list_attr_ IS NULL THEN
         price_list_attr_ := price_list_no_;
      ELSE
         price_list_attr_ := CONCAT(CONCAT(price_list_attr_, ';'),price_list_no_);
      END IF;
      selection_ := substr(selection_, INSTR(selection_, ';') + 1); 
   END LOOP;
   
   Client_SYS.Clear_Attr(report_attr_);
   Client_SYS.Add_To_Attr('REPORT_ID', 'SALES_PRICE_LIST_REP', report_attr_);
   
   Client_SYS.Clear_Attr(parameter_attr_);
   Client_SYS.Add_To_Attr('PRICE_LIST_NO', price_list_attr_, parameter_attr_);
   Client_SYS.Add_To_Attr('SALES_PRICE_GROUP_ID', '%', parameter_attr_);
   Client_SYS.Add_To_Attr('CATALOG_NO', '%',   parameter_attr_);
   
   IF print_including_tax_ THEN
      Client_SYS.Add_To_Attr('PRINT_PRICES_INCL_TAX_DB', 'Y', parameter_attr_);
   ELSE
      Client_SYS.Add_To_Attr('PRINT_PRICES_INCL_TAX_DB', 'N', parameter_attr_);
   END IF;

   Client_SYS.Add_To_Attr('LANGUAGE_CODE', language_code_,   parameter_attr_);

   result_key_ := Report_Format_API.Create_New_Report(report_attr_, parameter_attr_, Fnd_Session_API.Get_Fnd_User);
   RETURN result_key_;
END Get_Report_Result_Key_List___;