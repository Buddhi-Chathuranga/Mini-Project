-----------------------------------------------------------------------------
--
--  Logical unit: BatchScheduleMethodPar
--  Component:    FNDBAS
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------

layer Core;


-------------------- PRIVATE DECLARATIONS -----------------------------------


-------------------- LU SPECIFIC IMPLEMENTATION METHODS ---------------------


-------------------- LU SPECIFIC PRIVATE METHODS ----------------------------


-------------------- LU SPECIFIC PUBLIC METHODS -----------------------------

UNITTEST "Validate_Date___ should ... when ..." FOR
   FUNCTION Validate_Date___(date_ VARCHAR2) RETURN BOOLEAN;
USING
   --Insert your mock directives and mock return variables here
IS
   --Insert your test variables here
   return_   BOOLEAN;
   expected_ BOOLEAN;
BEGIN
   FOR
      | expected_ | date_ |
      | TRUE      | '2021-02-16-01.41.58'    |
      | TRUE      | '22-12-03'    |
      | FALSE     | '2021-22-16-01.41.58'    |
      | FALSE     | 'test'|
      | FALSE     | '22-12-33'    |
      | FALSE     | '2222'|
   LOOP
      --Insert your test code here
      return_ := Validate_Date___(date_);
      --Insert your assertions here
      ASSERT return_ = expected_ MESSAGE 'Validation of '|| date_ || 'failed. Expected '||expected_||' but returned '||return_;
   END LOOP;
END UNITTEST;

UNITTEST "Sysdate_Exp_Check___ should ... when ..." FOR
   PROCEDURE Sysdate_Exp_Check___ (
      value_ IN     VARCHAR2 );
USING
   --Insert your mock directives and mock return variables here
IS
   --Insert your test variables here
   result_   VARCHAR2 (10);
   expected_ VARCHAR2 (10);
BEGIN
   FOR
      | value_ | expected_ |
      | 'SYSDATE + 4'   | 'success' |
      | 'next_day(sysdate,''monday'')'   | 'success' |
      | 'TRUNC(sysdate, ''Q'')'   | 'success' |
      | 'ADD_MONTHS(TRUNC(sysdate, ''Q''),3)-1'   | 'success' |
      | 'SYSDATE + TEST'   | 'error'   |
   LOOP
      --Insert your test code here
      BEGIN
         Sysdate_Exp_Check___(value_);
         result_ := 'success';
      EXCEPTION
         WHEN OTHERS THEN
            result_ := 'error';
      END;
      --Insert your assertions here
      ASSERT result_ = expected_ MESSAGE 'Validation of ' || value_|| ' failed. Expected ' || expected_ || ' but returned ' || result_;
   END LOOP;
END UNITTEST;