-----------------------------------------------------------------------------
--
--  Logical unit: OutboundMessageHandling
--  Component:    FNDBAS
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------

layer Core;

UNITTEST "Get_Outbound_Model_Metadata___ should return metadata without Structures and Enumerations when the model exists... when model does not exits, return empty clob..." FOR
   FUNCTION Get_Outbound_Model_Metadata___ (
      name_ IN     VARCHAR2) RETURN CLOB;
USING
   --Insert your mock directives and mock return variables here
   @MockPackage Model_Design_SYS
   FUNCTION Get_Doc_Data_Content_ (
      data_format_ IN     VARCHAR2,
      model_type_  IN     VARCHAR2,
      model_name_  IN     VARCHAR2) RETURN CLOB
   IS
      outbound_metadata_   CLOB;
   BEGIN
      IF data_format_ = 'ServerMetadata' AND model_type_ = 'outbound' AND model_name_ = 'WebshopIntegrationService' THEN
         outbound_metadata_ := '{
         "outboundapi": {
         "Name": "WebshopIntegrationService",
         "Description": "Handle export of data in a web shop integration",
         "Methods": [
         {
         "Name": "SendAssortment",
         "DataType": "json",
         "Structure": "AssortmentStructure",
         "PayloadCreationMethod": "ASSORTMENT_SERVICE_UTIL_API.Send_Assortment",
         "OutboundApiDoc": "Send assortment information from IFS Cloud"
         }
         ],
         "Structures": [
         {
         "Name": "AssortmentStructure",
         "OutboundApiDoc": "This is the sructure of Get Assortment response array.",
         "Attributes": [
         {
         "Name": "AssortmentId",
         "DataType": "Text",
         "Size": 50,
         "SubType": null,
         "Collection": false,
         "Nullable": false,
         "OutboundApiDoc": "This is the identity of the assortment."
         },
         {
         "Name": "AssortmentNodeId",
         "DataType": "Text",
         "Size": 50,
         "SubType": null,
         "Collection": false,
         "Nullable": false,
         "OutboundApiDoc": "The identity of the assortment node."
         }
         ]
         }
         ],
         "Enumerations": [
         {
         "Name": "ApprovalOption",
         "Values": [
         {
         "Identifier": "Automatically",
         "DbValue": "AUTOMATICALLY"
         },
         {
         "Identifier": "Manually",
         "DbValue": "MANUALLY"
         },
         {
         "Identifier": "NotApplicable",
         "DbValue": "NOT_APPLICABLE"
         }
         ]
         }
         ]
         }
         }';
      ELSE
         outbound_metadata_ := empty_clob();
      END IF;
      RETURN outbound_metadata_;
   END Get_Doc_Data_Content_;
IS
   --Insert your test variables here
   return_   CLOB;
   expected_ CLOB;

   json_              JSON_OBJECT_T := JSON_OBJECT_T.Parse('{
	"outboundapi": {
   "Name": "WebshopIntegrationService",
   "Description": "Handle export of data in a web shop integration",
   "Methods": [
   {
   "Name": "SendAssortment",
   "DataType": "json",
   "Structure": "AssortmentStructure",
   "PayloadCreationMethod": "ASSORTMENT_SERVICE_UTIL_API.Send_Assortment",
   "OutboundApiDoc": "Send assortment information from IFS Cloud"
   }
   ]
	}
   }');
BEGIN
   FOR
      | expected_ | name_ |
      |  empty_clob()       | 'NonExisitngModelName'  |
      |  json_.to_clob     | 'WebshopIntegrationService'    |
   LOOP
      --Insert your test code here
      return_ := Get_Outbound_Model_Metadata___(name_);
      --Insert your assertions here
      ASSERT return_ = expected_ MESSAGE 'Expected '||expected_||' but returned '||return_;
   END LOOP;
END UNITTEST;