-----------------------------------------------------------------------------
--
--  Logical unit: BatchScheduleMethod
--  Component:    FNDBAS
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------


layer Core;

-------------------- TABLE DEFINITIONS --------------------------------------

UNIQUE INDEX batch_schedule_method_ix IS batch_schedule_method_tab (method_name);

-------------------- OTHER DEFINITIONS --------------------------------------

SEQUENCE schedule_method_id_seq IS MINVALUE 1;

--This get refreshed in Dictionary.plsql at the end of Rebuild_Dictionary_Storage___, but only if packages_.COUNT > 0   
DECLARE
   stmt_ VARCHAR2(32000);
BEGIN
   Installation_SYS.Remove_Materialized_View('Batch_Schedulable_Method_Mv', TRUE);
   --SOLSETFW
   stmt_ := 'CREATE MATERIALIZED VIEW Batch_Schedulable_Method_Mv
   BUILD DEFERRED
   USING NO INDEX
   REFRESH COMPLETE ON DEMAND
   EVALUATE USING CURRENT EDITION
   AS
   SELECT a.module       module,
          b.lu_name      lu_name,
          a.lu_prompt    lu_prompt,
          b.package_name package_name,
          b.method_name  method_name,
          c.name         module_name,
          b.rowid        objid
   FROM   dictionary_sys_tab        a,
          dictionary_sys_method_tab b,
          module_tab                c
   WHERE  b.lu_name = a.lu_name
         AND    a.module = c.module
         AND   c.active = ''TRUE''
         AND    b.package_name LIKE ''%_API''
         AND    b.method_name NOT IN (''Init'',
                                      ''Exist'',
                                      ''Exists'',
                                      ''Get'',
                                      ''Modify__'',
                                      ''New__'',
                                      ''Remove__'',
                                      ''Lock__'',
                                      ''Get_Objkey'',
                                      ''Get_Key_By_Rowkey'',
                                      ''Rowkey_Exist'',
                                      ''Get_By_Rowkey'',
                                      ''Get_Metadata_Version_'',
                                      ''Get_Metadata_Content_'',
                                      ''Crud_Update'',
                                      ''Crud_Delete'',
                                      ''Crud_Default'',
                                      ''Crud_Create'',
                                      ''Language_Refreshed'',
                                      ''Exist_Db'',
                                      ''Exists_Db'',
                                      ''Verify_Metadata_Sql_Content_'',
                                      ''Verify_Metadata_Plsql_Content_'',
                                      ''Get_Metadata_Category_'',
                                      ''Get_Metadata_Service_Group_'',
                                      ''Enumerate'',
                                      ''Encode'',
                                      ''Decode'',
                                      ''Enumerate_Db'',
                                      ''Decode_List'',
                                      ''Exist_List'',
                                      ''Encode_List'',
                                      ''Exists_List'',
                                      ''Get_Client_Value'',
                                      ''Get_Db_Value'',
                                      ''Exist_List_Db'',
                                      ''Exists_List_Db'',
                                      ''Enumerate_Client_And_Db'',
                                      ''Get_Description'',
                                      ''Get_State'',
                                      ''New'',
                                      ''Finite_State_Events__'',
                                      ''Finite_State_Decode__'',
                                      ''Enumerate_Events__'',
                                      ''Enumerate_States__'',
                                      ''Finite_State_Encode__'',
                                      ''Enumerate_States_Db__'',
                                      ''Get_Objstate'',
                                      ''Get_Objevents'',
                                      ''Finite_State_Init_'',
                                      ''Check_Exist'',
                                      ''Ev_Set_Active'',
                                      ''Ev_Set_Blocked'',
                                      ''Ev_Set_Hidden'',
                                      ''Set_Active__'',
                                      ''Set_Blocked__'',
                                      ''Set_Hidden__''
                                      )
         AND NOT EXISTS (SELECT 1
                 FROM   user_arguments e
                 WHERE  (e.in_out IN (''OUT'', ''IN/OUT'') OR e.data_type NOT IN (''VARCHAR2'', ''NUMBER'', ''DATE''))
                 AND    e.package_name = UPPER(b.package_name)
                 AND    e.object_name = UPPER(b.method_name))';

   -- Approved since no user input
   @ApproveDynamicStatement(2018-10-11, anjgse)
   EXECUTE IMMEDIATE stmt_;
END;

--This get refreshed in Dictionary.plsql at the end of Rebuild_Dictionary_Storage___, but only if packages_.COUNT > 0.
DECLARE
   stmt_ VARCHAR2(32000);
BEGIN
Installation_SYS.Remove_Materialized_View('Batch_Sche_Validate_Method_MV',TRUE);
--SOLSETFW
stmt_ := 'CREATE MATERIALIZED VIEW Batch_Sche_Validate_Method_MV
BUILD DEFERRED
USING NO INDEX
REFRESH COMPLETE ON DEMAND
EVALUATE USING CURRENT EDITION
AS
SELECT a.module       module,
       b.lu_name      lu_name,
       a.lu_prompt    lu_prompt,
       b.package_name package_name,
       b.method_name  method_name,
       c.name         module_name,
       b.rowid        objid
FROM   dictionary_sys_tab        a,
       dictionary_sys_method_tab b,
       module_tab                c
WHERE  b.lu_name = a.lu_name
AND    a.module = c.module
AND   c.active = ''TRUE''
AND    b.package_name LIKE ''%_API''
AND    b.method_name NOT IN (''Init'',
                             ''Exist'',
                             ''Exists'',
                             ''Get'',
                             ''Modify__'',
                             ''New__'',
                             ''Remove__'',
                             ''Lock__'',
                             ''Get_Objkey'',
                             ''Get_Key_By_Rowkey'',
                             ''Rowkey_Exist'',
                             ''Get_By_Rowkey'',
                             ''Get_Metadata_Version_'',
                             ''Get_Metadata_Content_'',
                             ''Crud_Update'',
                             ''Crud_Delete'',
                             ''Crud_Default'',
                             ''Crud_Create'',
                             ''Language_Refreshed'',
                             ''Exist_Db'',
                             ''Exists_Db'',
                             ''Verify_Metadata_Sql_Content_'',
                             ''Verify_Metadata_Plsql_Content_'',
                             ''Get_Metadata_Category_'',
                             ''Get_Metadata_Service_Group_'',
                             ''Enumerate'',
                             ''Encode'',
                             ''Decode'',
                             ''Enumerate_Db'',
                             ''Decode_List'',
                             ''Exist_List'',
                             ''Encode_List'',
                             ''Exists_List'',
                             ''Get_Client_Value'',
                             ''Get_Db_Value'',
                             ''Exist_List_Db'',
                             ''Exists_List_Db'',
                             ''Enumerate_Client_And_Db'',
                             ''Get_Description'',
                             ''Get_State'',
                             ''New'',
                             ''Finite_State_Events__'',
                             ''Finite_State_Decode__'',
                             ''Enumerate_Events__'',
                             ''Enumerate_States__'',
                             ''Finite_State_Encode__'',
                             ''Enumerate_States_Db__'',
                             ''Get_Objstate'',
                             ''Get_Objevents'',
                             ''Finite_State_Init_'',
                             ''Check_Exist'',
                             ''Ev_Set_Active'',
                             ''Ev_Set_Blocked'',
                             ''Ev_Set_Hidden'',
                             ''Set_Active__'',
                             ''Set_Blocked__'',
                             ''Set_Hidden__''
                             )
AND NOT EXISTS (SELECT 1
        FROM   user_arguments e
        WHERE  (e.in_out IN (''OUT'', ''IN/OUT'') OR (e.in_out = ''IN'' AND e.data_type !=''VARCHAR2''))
        AND    e.package_name = UPPER(b.package_name)
        AND    e.object_name = UPPER(b.method_name))';

-- Approved since no user input
@ApproveDynamicStatement(2018-10-11,anjgse)
EXECUTE IMMEDIATE stmt_;
END;