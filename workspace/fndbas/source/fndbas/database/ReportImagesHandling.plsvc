-----------------------------------------------------------------------------
--
--  Logical unit: ReportImagesHandling
--  Component:    FNDBAS
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  191127  subblk  TSMI-68, Created.
-----------------------------------------------------------------------------

layer Core;

PROCEDURE Upload_File___ (
	objkey_ IN VARCHAR2)
IS
   key_              Vrt_Import_File_Key;
   rec_              Vrt_Import_File_Rec;
   objid_            VARCHAR2(2000);
   objversion_       VARCHAR2(2000);
   info_             VARCHAR2(2000);
   attr_             VARCHAR2(4000);
BEGIN
	key_.Objkey       := objkey_;
   rec_              := Get_Record___(key_);
   
   IF rec_.image_type = 'IMAGE' THEN
      Client_SYS.Add_To_Attr('REPORT_ID', rec_.report_id, attr_);
      Client_SYS.Add_To_Attr('IMAGE_NAME', rec_.image_name, attr_);
      Client_SYS.Add_To_Attr('MODULE', rec_.module, attr_);
      IF rec_.prevent_overwrite = TRUE THEN
         Client_SYS.Add_To_Attr('PREVENT_OVERWRITE', 'TRUE', attr_);
      ELSE
         Client_SYS.Add_To_Attr('PREVENT_OVERWRITE', 'FALSE', attr_);
      END IF;
      Report_Images_API.New__(info_, objid_, objversion_, attr_, 'DO');
      Report_Images_API.Write_Image__(objversion_, objid_, rec_.file_data);
   END IF;
   
   IF rec_.image_type = 'LOGO' THEN
      Client_SYS.Add_To_Attr('IMAGE_NAME', rec_.image_name, attr_);
      IF rec_.prevent_overwrite = TRUE THEN
         Client_SYS.Add_To_Attr('PREVENT_OVERWRITE', 'TRUE', attr_);
      ELSE
         Client_SYS.Add_To_Attr('PREVENT_OVERWRITE', 'FALSE', attr_);
      END IF;
      Report_Logos_API.New__(info_, objid_, objversion_, attr_, 'DO');
      Report_Logos_API.Write_Image__(objversion_, objid_, rec_.file_data);
   END IF;
   
   IF rec_.image_type = 'SIGN' THEN
      Client_SYS.Add_To_Attr('IMAGE_NAME', rec_.image_name, attr_);
      IF rec_.prevent_overwrite = TRUE THEN
         Client_SYS.Add_To_Attr('PREVENT_OVERWRITE', 'TRUE', attr_);
      ELSE
         Client_SYS.Add_To_Attr('PREVENT_OVERWRITE', 'FALSE', attr_);
      END IF;
      Report_Signatures_API.New__(info_, objid_, objversion_, attr_, 'DO');
      Report_Signatures_API.Write_Image__(objversion_, objid_, rec_.file_data);
   END IF;
END Upload_File___;


PROCEDURE Prevent_Overwrite_Image___ (
	key_ IN Report_Images_Key)
IS
BEGIN
	Report_Images_API.Prevent_Overwrite(key_.report_id, key_.image_name, 'TRUE');
END Prevent_Overwrite_Image___;


PROCEDURE Enable_Overwrite_Image___ (
	key_ IN Report_Images_Key)
IS
BEGIN
	Report_Images_API.Enable_Overwrite(key_.report_id, key_.image_name, 'FALSE');
END Enable_Overwrite_Image___;


PROCEDURE Prevent_Overwrite_Logo___ (
	key_ IN Report_Logos_Key)
IS
BEGIN
	Report_Logos_API.Prevent_Overwrite(key_.image_name, 'TRUE');
END Prevent_Overwrite_Logo___;


PROCEDURE Enable_Overwrite_Logo___ (
	key_ IN Report_Logos_Key)
IS
BEGIN
	Report_Logos_API.Enable_Overwrite(key_.image_name, 'FALSE');
END Enable_Overwrite_Logo___;


PROCEDURE Prevent_Overwrite_Signature___ (
	key_ IN Report_Signatures_Key)
IS
BEGIN
	Report_Signatures_API.Prevent_Overwrite(key_.image_name, 'TRUE');
END Prevent_Overwrite_Signature___;


PROCEDURE Enable_Overwrite_Signature___ (
	key_ IN Report_Signatures_Key)
IS
BEGIN
	Report_Signatures_API.Enable_Overwrite(key_.image_name, 'FALSE');
END Enable_Overwrite_Signature___;


FUNCTION Check_File___ (
	image_name_ IN VARCHAR2,
	image_type_ IN VARCHAR2,
	report_id_  IN VARCHAR2) RETURN NUMBER
IS
   count_  NUMBER := 0;
   CURSOR get_image(report_id_  IN VARCHAR2, image_name_ IN VARCHAR2) IS
      SELECT 1
      FROM report_images
      WHERE report_id = report_id_
      AND image_name = image_name_;
   CURSOR get_logo(image_name_ IN VARCHAR2) IS
      SELECT 1
      FROM report_logos
      WHERE image_name = image_name_;
   CURSOR get_signature(image_name_ IN VARCHAR2) IS
      SELECT 1
      FROM report_signatures
      WHERE image_name = image_name_;
BEGIN
   IF LENGTH(image_name_) > 50 THEN
      Error_SYS.Record_General(lu_name_, 'MAXCHAREXCEED: Image name should be less than 50 characters');
   END IF;
	IF image_type_ = 'IMAGE' THEN
      OPEN get_image(report_id_, image_name_);
      FETCH get_image INTO count_;
      CLOSE get_image;
   ELSIF image_type_ = 'LOGO' THEN
      OPEN get_logo(image_name_);
      FETCH get_logo INTO count_;
      CLOSE get_logo;
   ELSIF image_type_ = 'SIGN' THEN
      OPEN get_signature(image_name_);
      FETCH get_signature INTO count_;
      CLOSE get_signature;
   END IF;
   RETURN count_;
END Check_File___;


PROCEDURE Overwrite_File___ (
	objkey_ IN VARCHAR2)
IS
   key_              Vrt_Import_File_Key;
   rec_              Vrt_Import_File_Rec;
BEGIN
	key_.Objkey       := objkey_;
   rec_              := Get_Record___(key_);
   IF rec_.image_type = 'IMAGE' THEN
      Report_Images_API.Overwrite(rec_.report_id, rec_.image_name, rec_.file_data);
   ELSIF rec_.image_type = 'LOGO' THEN
      Report_Logos_API.Overwrite(rec_.image_name, rec_.file_data);
   ELSIF rec_.image_type = 'SIGN' THEN
      Report_Signatures_API.Overwrite(rec_.image_name, rec_.file_data);
   END IF;
END Overwrite_File___;


PROCEDURE Delete_Image___ (
	key_ IN Report_Images_Key)
IS
BEGIN
	Report_Images_API.Delete_Image(key_.report_id, key_.image_name);
END Delete_Image___;


PROCEDURE Delete_Logo___ (
	key_ IN Report_Logos_Key)
IS
BEGIN
	Report_Logos_API.Delete_Logo(key_.image_name);
END Delete_Logo___;


PROCEDURE Delete_Sign___ (
	key_ IN Report_Signatures_Key)
IS
BEGIN
	Report_Signatures_API.Delete_Sign(key_.image_name);
END Delete_Sign___;
