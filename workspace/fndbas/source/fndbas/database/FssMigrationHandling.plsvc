-----------------------------------------------------------------------------
--
--  Logical unit: FssMigrationHandling
--  Component:    FNDBAS
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------

layer Core;

FUNCTION Export_Metadata___ (
   export_type_ IN VARCHAR2) RETURN Stream_Data_Rec
IS
   rec_ Stream_Data_Rec;
   file_clob_           CLOB;
   file_blob_           BLOB;
   file_size_           INTEGER := Dbms_Lob.lobmaxsize;
   dest_offset_         INTEGER := 1;
   src_offset_          INTEGER := 1;
   blob_csid_           NUMBER  := Dbms_Lob.default_csid;
   lang_context_        NUMBER  := Dbms_Lob.default_lang_ctx;
   warning_             INTEGER;
   newline_             CONSTANT VARCHAR2(2) := chr(13)||chr(10);
   CURSOR get_fss_records IS 
      SELECT *
      FROM   Fss_File;
BEGIN
   file_clob_ := '-- ----------------------------------------------------------------------------------------';
   Dbms_Lob.Append(file_clob_, newline_);
   Dbms_Lob.Append(file_clob_, '--  This is an auto genereated file from the FssMigrationHandling projection.');
   Dbms_Lob.Append(file_clob_, newline_);
   Dbms_Lob.Append(file_clob_, '-- ----------------------------------------------------------------------------------------');
   Dbms_Lob.Append(file_clob_, newline_);
   Dbms_Lob.Append(file_clob_, newline_);

   Dbms_Lob.Append(file_clob_, 'DECLARE');
   Dbms_Lob.Append(file_clob_, newline_);
   Dbms_Lob.Append(file_clob_, 'BEGIN');
   Dbms_Lob.Append(file_clob_, newline_);

   FOR rec_ IN get_fss_records LOOP
      Dbms_Lob.Append(file_clob_, '  Fss_File_API.Create_File_Ref_Rec(Database_SYS.Unistr(''');

      Dbms_Lob.Append(file_clob_, Database_SYS.Asciistr(rec_.file_id));
      Dbms_Lob.Append(file_clob_, '''),''');

      Dbms_Lob.Append(file_clob_, rec_.lu_name);
      Dbms_Lob.Append(file_clob_, '''');

      Dbms_Lob.Append(file_clob_, CASE WHEN rec_.file_name IS NOT NULL THEN ',Database_SYS.Unistr(''' ELSE ',Database_SYS.Unistr(' END);
      Dbms_Lob.Append(file_clob_, Database_SYS.Asciistr(COALESCE(rec_.file_name, '''''')));
      Dbms_Lob.Append(file_clob_, CASE WHEN rec_.file_name IS NOT NULL THEN ''') ' ELSE ') ' END);

      Dbms_Lob.Append(file_clob_, CASE WHEN rec_.file_extension IS NOT NULL THEN ',''' ELSE ',' END);
      Dbms_Lob.Append(file_clob_, COALESCE(rec_.file_extension, ''''''));
      Dbms_Lob.Append(file_clob_, CASE WHEN rec_.file_extension IS NOT NULL THEN ''' ' ELSE ' ' END);

      Dbms_Lob.Append(file_clob_, CASE WHEN rec_.file_type IS NOT NULL THEN ',''' ELSE ',' END);
      Dbms_Lob.Append(file_clob_, COALESCE(rec_.file_type, ''''''));
      Dbms_Lob.Append(file_clob_, CASE WHEN rec_.file_type IS NOT NULL THEN ''' ' ELSE ' ' END);

      Dbms_Lob.Append(file_clob_, ',');
      Dbms_Lob.Append(file_clob_, TO_CHAR(rec_.file_length));

      Dbms_Lob.Append(file_clob_, ');');
      Dbms_Lob.Append(file_clob_, newline_);
   END LOOP;

   Dbms_Lob.Append(file_clob_, 'END;');
   Dbms_Lob.Append(file_clob_, newline_);
   Dbms_Lob.Append(file_clob_, '/');
   Dbms_Lob.Append(file_clob_, newline_);
   Dbms_Lob.Append(file_clob_, newline_);
   Dbms_Lob.Append(file_clob_, 'COMMIT');
   Dbms_Lob.Append(file_clob_, newline_);
   Dbms_Lob.Append(file_clob_, '/');
   Dbms_Lob.Append(file_clob_, newline_);
   Dbms_Lob.Append(file_clob_, newline_);
   Dbms_Lob.Append(file_clob_, '-- ----------------------------------------------------------------------------------------');

   Dbms_Lob.Createtemporary(file_blob_, TRUE);
   Dbms_Lob.Converttoblob(file_blob_, file_clob_, file_size_, dest_offset_, src_offset_, blob_csid_, lang_context_, warning_);

   rec_.stream_data := file_blob_;
   rec_.mime_type := 'application/sql';
   rec_.file_name := 'FssMetadata' || export_type_;
   RETURN rec_;
END Export_Metadata___;


FUNCTION Export_Metadata___ RETURN Stream_Data_Rec
IS
BEGIN
   RETURN Export_Metadata___('.sql');
END Export_Metadata___;


PROCEDURE Remove_Temp_File_References___
IS
BEGIN
   IF Database_SYS.Table_Exist('${PROJECTION}_FILE_INFO_VIRTUAL_VRT') THEN
      @ApproveDynamicStatement(2021-10-06,buralk)
      EXECUTE IMMEDIATE 'DELETE FROM ${PROJECTION}_FILE_INFO_VIRTUAL_VRT';
   END IF;  
END Remove_Temp_File_References___;
