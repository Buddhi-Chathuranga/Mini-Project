-----------------------------------------------------------------------------
--
--  Logical unit: OracleProfile
--  Component:    FNDBAS
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

COLUMN Failed_Login_Attempts IS
   Flags      = 'A----'
   Datatype   = 'STRING(40)/UPPERCASE'
   Prompt     = 'Failed Login_attempts';

COLUMN Password_Life_Time IS
   Flags      = 'A----'
   Datatype   = 'STRING(40)/UPPERCASE'
   Prompt     = 'Password Life Time';

COLUMN Password_Reuse_Max IS
   Flags      = 'A----'
   Datatype   = 'STRING(40)/UPPERCASE'
   Prompt     = 'Password Reuse Max';

COLUMN Password_Lock_Time IS
   Flags      = 'A----'
   Datatype   = 'STRING(40)/UPPERCASE'
   Prompt     = 'Password Lock Time';

COLUMN Password_Grace_Time IS
   Flags      = 'A----'
   Datatype   = 'STRING(40)/UPPERCASE'
   Prompt     = 'Password Grace Time';

COLUMN Password_Verify_Function IS
   Flags      = 'A----'
   Datatype   = 'STRING(40)/UPPERCASE'
   Prompt     = 'Password Verify Function';

COLUMN Composite_Limit IS
   Flags      = 'A----'
   Datatype   = 'STRING(40)/UPPERCASE'
   Prompt     = 'Composite Limit';

COLUMN Sessions_Per_User IS
   Flags      = 'A----'
   Datatype   = 'STRING(40)/UPPERCASE'
   Prompt     = 'Sessions Per User';

COLUMN Cpu_Per_Session IS
   Flags      = 'A----'
   Datatype   = 'STRING(40)/UPPERCASE'
   Prompt     = 'Cpu Per Session';

COLUMN Cpu_Per_Call IS
   Flags      = 'A----'
   Datatype   = 'STRING(40)/UPPERCASE'
   Prompt     = 'Cpu Per Call';

COLUMN Logical_Reads_Per_Session IS
   Flags      = 'A----'
   Datatype   = 'STRING(40)/UPPERCASE'
   Prompt     = 'Logical Reads Per Session';

COLUMN Logical_Reads_Per_Call IS
   Flags      = 'A----'
   Datatype   = 'STRING(40)/UPPERCASE'
   Prompt     = 'Logical Reads Per Call';

COLUMN Idle_Time IS
   Flags      = 'A----'
   Datatype   = 'STRING(40)/UPPERCASE'
   Prompt     = 'Idle Time';

COLUMN Connect_Time IS
   Flags      = 'A----'
   Datatype   = 'STRING(40)/UPPERCASE'
   Prompt     = 'Connect Time';

COLUMN Private_Sga IS
   Flags      = 'A----'
   Datatype   = 'STRING(40)/UPPERCASE'
   Prompt     = 'Private Sga';

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------


-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

@Overtake Base
VIEW Oracle_Profile IS
   Prompt = 'Available Oracle Profiles'
   Table = 'DBA_PROFILES'
   Objversion = 'ltrim(lpad(profile,2000))'
   Objid = 'profile'
   Objkey = 'NONE'
SELECT distinct profile               profile,
       sysdate                        objversion,
       profile                        objid
FROM   dba_profiles;

VIEW Oracle_Profile_Limits IS
   Prompt = 'Oracle Profile Limits'
SELECT profile                                                                        profile,
       Oracle_Profile_API.Get_Limit(profile,'FAILED_LOGIN_ATTEMPTS','PASSWORD')    failed_login_attempts,       
       Oracle_Profile_API.Get_Limit(profile,'PASSWORD_LIFE_TIME','PASSWORD')       password_life_time,       
       Oracle_Profile_API.Get_Limit(profile,'PASSWORD_REUSE_TIME','PASSWORD')      password_reuse_time,       
       Oracle_Profile_API.Get_Limit(profile,'PASSWORD_REUSE_MAX','PASSWORD')       password_reuse_max,       
       Oracle_Profile_API.Get_Limit(profile,'PASSWORD_LOCK_TIME','PASSWORD')       password_lock_time,       
       Oracle_Profile_API.Get_Limit(profile,'PASSWORD_GRACE_TIME','PASSWORD')      password_grace_time,       
       Oracle_Profile_API.Get_Limit(profile,'PASSWORD_VERIFY_FUNCTION','PASSWORD') password_verify_function,       
       Oracle_Profile_API.Get_Limit(profile,'COMPOSITE_LIMIT','KERNEL')            composite_limit,       
       Oracle_Profile_API.Get_Limit(profile,'SESSIONS_PER_USER','KERNEL')          sessions_per_user,       
       Oracle_Profile_API.Get_Limit(profile,'CPU_PER_SESSION','KERNEL')            cpu_per_session,       
       Oracle_Profile_API.Get_Limit(profile,'CPU_PER_CALL','KERNEL')               cpu_per_call,       
       Oracle_Profile_API.Get_Limit(profile,'LOGICAL_READS_PER_SESSION','KERNEL')  logical_reads_per_session,       
       Oracle_Profile_API.Get_Limit(profile,'LOGICAL_READS_PER_CALL','KERNEL')     logical_reads_per_call,       
       Oracle_Profile_API.Get_Limit(profile,'IDLE_TIME','KERNEL')                  idle_time,       
       Oracle_Profile_API.Get_Limit(profile,'CONNECT_TIME','KERNEL')               connect_time,       
       Oracle_Profile_API.Get_Limit(profile,'PRIVATE_SGA','KERNEL')                private_sga,       
       objversion                                                                  objversion,
       objid                                                                       objid
FROM   ORACLE_PROFILE;

