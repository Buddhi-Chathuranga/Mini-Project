-----------------------------------------------------------------------------
--
--  Fragment:     AppearanceConfigACPHandling
--  Component:    FNDBAS
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------

layer Core;

FUNCTION Add___ (
   item_rowkey_ IN VARCHAR2,
   item_type_   IN VARCHAR2,
   package_id_  IN VARCHAR2) RETURN VARCHAR2
IS
   info_ VARCHAR2(32000);
BEGIN
   IF item_type_='APPEARANCE_CONFIG' THEN
      App_Config_Package_Item_API.Add_Item_To_Package(info_ , package_id_, item_rowkey_, App_Config_Item_Type_API.DB_APPEARANCE_CONFIG);
   END IF;

   info_ := REPLACE(REPLACE(info_, chr(31), ': '),chr(30),'.');
   info_ := LTRIM(info_, 'INFO:');
   RETURN info_;  
END Add___;

FUNCTION Create_Package_If_Not_Exist___ (
   package_id_  IN VARCHAR2,
   new_package_name_ IN VARCHAR2,
   new_package_desc_ IN VARCHAR2) RETURN VARCHAR2
IS
   new_package_rec_     app_config_package_tab%ROWTYPE;
BEGIN
   IF (package_id_ IS NULL) THEN
      new_package_rec_.name := new_package_name_;
      new_package_rec_.description := new_package_desc_;
      App_Config_Package_API.New__(new_package_rec_);
      RETURN new_package_rec_.package_id;
   ELSE
      RETURN package_id_;
   END IF;
END Create_Package_If_Not_Exist___;

FUNCTION Add_To_Package___ (
   code_ IN VARCHAR2,
   item_type_   IN VARCHAR2,
   package_id_  IN VARCHAR2,
   new_package_name_ IN VARCHAR2,
   new_package_desc_ IN VARCHAR2) RETURN VARCHAR2
IS
   add_to_package_id_   VARCHAR2(100);
   info_                VARCHAR2(32000);
   item_rowkey_ VARCHAR2(100);
BEGIN
   item_rowkey_ :=  Fnd_Branding_API.Get_Objkey(code_);
   add_to_package_id_ := Create_Package_If_Not_Exist___(package_id_, new_package_name_, new_package_desc_);

   info_ := Add___(item_rowkey_, item_type_, add_to_package_id_);
   IF info_ IS NULL THEN
      info_ := Language_SYS.Translate_Constant(lu_name_, 'ITEM_ADDED: Appearance Configuration item added to package.');
   END IF; 
   RETURN info_;
END Add_To_Package___;

FUNCTION Remove_From_Package___ (
   code_ IN VARCHAR2) RETURN VARCHAR2
IS
   package_id_ VARCHAR2(100);
   item_rowkey_ VARCHAR2(100);
BEGIN
   item_rowkey_ :=  Fnd_Branding_API.Get_Objkey(code_);
   package_id_ := App_Config_Package_Item_API.Get_Item_Package_Id(item_rowkey_);
   App_Config_Package_Item_API.Remove_Item(package_id_, item_rowkey_);
   RETURN Language_SYS.Translate_Constant(lu_name_, 'ITEM_REMOVED: Appearance Configuration item removed from package.');
END Remove_From_Package___;

FUNCTION Add_Multi_To_Package___ (
   codes_ IN VARCHAR2,
   item_type_ IN VARCHAR2,
   package_id_ IN VARCHAR2,
   new_package_name_ IN VARCHAR2,
   new_package_desc_ IN VARCHAR2) RETURN VARCHAR2
IS
   codes_array_ JSON_ARRAY_T := JSON_ARRAY_T(codes_);
   result_ VARCHAR2(32000);
   info_ VARCHAR2(32000);
   add_to_package_id_   VARCHAR2(100);
   item_rowkey_ VARCHAR2(100);
BEGIN
   add_to_package_id_ := Create_Package_If_Not_Exist___(package_id_, new_package_name_, new_package_desc_);
   
   FOR i_ IN 0 .. codes_array_.get_size - 1 LOOP
      item_rowkey_ :=  Fnd_Branding_API.Get_Objkey(codes_array_.get_String(i_));
      info_ := Add___(item_rowkey_, item_type_, add_to_package_id_);
      IF info_ IS NOT NULL THEN
         result_ := result_ || info_ || chr(10);
      END IF;
   END LOOP;
   
   IF result_ IS NULL THEN
      result_ := Language_SYS.Translate_Constant(lu_name_, 'ITEMS_ADDED: Appearance Configuration item(s) added to package.');
   END IF; 
   RETURN result_;
END Add_Multi_To_Package___;

FUNCTION Remove_Multi_From_Package___ (
   codes_ IN VARCHAR2) RETURN VARCHAR2
IS
   package_id_ VARCHAR2(100);
   codes_array_ JSON_ARRAY_T := JSON_ARRAY_T(codes_);
   item_rowkey_ VARCHAR2(100);
BEGIN
   FOR i_ IN 0 .. codes_array_.get_size - 1 LOOP
      item_rowkey_ :=  Fnd_Branding_API.Get_Objkey(codes_array_.get_String(i_));
      package_id_ := App_Config_Package_Item_API.Get_Item_Package_Id(item_rowkey_);
      App_Config_Package_Item_API.Remove_Item(package_id_, item_rowkey_);
   END LOOP;
   RETURN Language_SYS.Translate_Constant(lu_name_, 'ITEMS_REMOVED: Appearance Configuration item(s) removed from package(s).');
END Remove_Multi_From_Package___;
