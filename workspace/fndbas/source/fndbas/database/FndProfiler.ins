-----------------------------------------------------------------------------
--
--  Logical unit: FndProfiler.ins
--
--  Date    Sign  History
--  ------  ----  -----------------------------------------------------------
--  130531  HAAR  Created. 
-----------------------------------------------------------------------------

DEFINE MODULE        = FNDBAS
DEFINE LU            = FndProfiler
DEFINE TABLE         = FND_PROFILER_TAB
DEFINE VIEW          = FND_PROFILER
DEFINE VIEW1         = FND_PROFILER_RUNS
DEFINE VIEW2         = FND_PROFILER_METHOD_INFO
DEFINE VIEW3         = FND_PROFILER_CHILD_INFO

SET SERVEROUTPUT ON
PROMPT Create FndProfiler VIEWS

DECLARE 
   stmt_ VARCHAR2(4000);
   
   table_not_exists EXCEPTION;
   PRAGMA EXCEPTION_INIT(table_not_exists, -942);
   
   PROCEDURE Run_Ddl_Command___ (
      stmt_      IN VARCHAR2,
      procedure_ IN VARCHAR2,
      show_info_ IN BOOLEAN DEFAULT FALSE,
      raise_     IN BOOLEAN DEFAULT TRUE )
   IS
      PROCEDURE Show_Message___ (
         message_ IN VARCHAR2 )
      IS
         temp_msg_         VARCHAR2(4000);
         space_position_   NUMBER;
      BEGIN
         temp_msg_ := message_;
         WHILE (LENGTH(temp_msg_) > 255) LOOP
            space_position_ := INSTR(SUBSTR(temp_msg_,1,255), ' ', -1);
            IF space_position_ < 240 THEN
               space_position_ := 240;
            END IF;
            Log_SYS.Fnd_Trace_(Log_SYS.debug_, SUBSTR(temp_msg_,1,space_position_));
            temp_msg_ := SUBSTR(temp_msg_, space_position_+1);
         END LOOP;
         IF temp_msg_ IS NOT NULL THEN
            Log_SYS.Fnd_Trace_(Log_SYS.debug_, temp_msg_);
         END IF;
      END Show_Message___;
   BEGIN
      IF show_info_ THEN
         Log_SYS.Fnd_Trace_(Log_SYS.debug_, 'Executing ' || stmt_);
      END IF;
      -- Safe due to deployed as appowner
      -- ifs_assert_safe haarse 2013-05-23
      EXECUTE IMMEDIATE stmt_;
   EXCEPTION
      WHEN table_not_exists THEN 
         Log_SYS.Installation_Trace_('INFO', 'In order to install and use FndProfiler you need to run ORACLE_HOME/rdbms/admin/dbmshptab.sql as APPOWNER.');
         Log_SYS.Installation_Trace_('INFO', 'After you have run the above script re-run FndProfiler.ins as APPOWNER.');
         Log_SYS.Installation_Trace_('INFO', 'Remember also to create a directory object called FND_PROFILER_DIR.');
      WHEN OTHERS THEN
         Show_Message___ (procedure_ || ' generates error when executing: ');
         Show_Message___ (stmt_);
         IF raise_ THEN
            RAISE;
         END IF;
   END Run_Ddl_Command___;
BEGIN
   stmt_ := '
CREATE OR REPLACE VIEW &VIEW1 AS
SELECT d.runid                          runid,
       d.run_comment                    run_comment,
       d.total_elapsed_time             total_elapsed,
       d.run_timestamp                  date_created,
       f.identity                       identity,
       f.statement                      statement,
       f.objversion                     objversion,
       f.objid                          objid
FROM   dbmshp_runs d, fnd_profiler f
WHERE  d.runid = f.runid
WITH   read only';
   Run_Ddl_Command___(stmt_, 'FndProfiler Views');
   
   stmt_ := '
COMMENT ON TABLE &VIEW1
   IS ''LU=&LU^PROMPT=Fnd Profiler runs^MODULE=&MODULE^''';
   Run_Ddl_Command___(stmt_, 'FndProfiler Views');

   stmt_ := '
COMMENT ON COLUMN &VIEW1..runid
   IS ''FLAGS=KMI-L^DATATYPE=NUMBER^PROMPT=Runid^''';
   Run_Ddl_Command___(stmt_, 'FndProfiler Views');

   stmt_ := '
CREATE OR REPLACE VIEW &VIEW2 AS
SELECT runid                          runid,
       symbolid                       symbolid,
       module                         object_name,
       type                           object_type,
       function                       method,
       subtree_elapsed_time           subtree_elapsed,
       function_elapsed_time          function_elapsed,
       calls                          calls,
       line#                          line,
       rowid                          objid,
       ltrim(lpad(to_char(sysdate,''YYYYMMDDHH24MISS''),2000)) objversion
FROM   dbmshp_function_info
WITH   read only';
   Run_Ddl_Command___(stmt_, 'FndProfiler Views');

   stmt_ := '
COMMENT ON TABLE &VIEW2
   IS ''LU=&LU^PROMPT=Fnd Profiler method info^MODULE=&MODULE^''';
   Run_Ddl_Command___(stmt_, 'FndProfiler Views');

   stmt_ := '
COMMENT ON COLUMN &VIEW2..runid
   IS ''FLAGS=KMI-L^DATATYPE=NUMBER^PROMPT=Runid^''';
   Run_Ddl_Command___(stmt_, 'FndProfiler Views');

   stmt_ := '
CREATE OR REPLACE VIEW &VIEW3 AS
SELECT p.runid                          runid,
       p.parentsymid                    parentsid,
       fp.module                        parent_object_name,
       fp.type                          parent_object_type,
       fp.function                      parent_method,
       fp.line#                         parent_line,
       p.childsymid                     childsid,
       fc.module                        child_object_name,
       fc.type                          child_object_type,
       fc.function                      child_method,
       fc.line#                         child_line,
       p.subtree_elapsed_time           subtree_elapsed,
       p.function_elapsed_time          function_elapsed,
       p.calls                          calls,
       p.rowid                          objid,
       ltrim(lpad(to_char(sysdate,''YYYYMMDDHH24MISS''),2000)) objversion
FROM   dbmshp_parent_child_info p, dbmshp_function_info fp, dbmshp_function_info fc
WHERE  p.runid = fp.runid
AND    p.parentsymid = fp.symbolid
AND    p.runid = fc.runid
AND    p.childsymid = fc.symbolid
WITH   read only';
   Run_Ddl_Command___(stmt_, 'FndProfiler Views');

   stmt_ := '
COMMENT ON TABLE &VIEW3
   IS ''LU=&LU^PROMPT=Fnd Profiler child info^MODULE=&MODULE^''';
   Run_Ddl_Command___(stmt_, 'FndProfiler Views');

   stmt_ := '
COMMENT ON COLUMN &VIEW3..runid
   IS ''FLAGS=KMI-L^DATATYPE=NUMBER^PROMPT=Runid^''';
   Run_Ddl_Command___(stmt_, 'FndProfiler Views');
END;
/

COMMIT
/

UNDEFINE MODULE
UNDEFINE LU
UNDEFINE TABLE
UNDEFINE VIEW
UNDEFINE VIEW1
UNDEFINE VIEW2
UNDEFINE VIEW3
