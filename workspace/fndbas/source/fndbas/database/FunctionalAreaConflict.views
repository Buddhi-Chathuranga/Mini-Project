-----------------------------------------------------------------------------
--
--  Logical unit: FunctionalAreaConflict
--  Component:    FNDBAS
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

COLUMN Userid IS
   Flags      = 'PM---'
   Datatype   = 'STRING(30)'
   Prompt     = 'User Id';

COLUMN Sec_Object IS
   Flags      = 'KM---'
   Datatype   = 'STRING(100)'
   Prompt     = 'Security Object';

COLUMN Sec_Object_Type IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Security Object Type';

COLUMN Permission_Set IS
   Flags      = 'A----'
   Datatype   = 'STRING(2000)'
   Prompt     = 'Permission Set';

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------


-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

VIEW Func_Area_User_Permissions IS
   Prompt = 'Functional Area Conflict'
SELECT  u.identity                                        userid,
        u.description                                     description,
        fa.functional_area_id                             functional_area_id,
        fa.conflict_area_id                               conflict_area_id,
        fa.conflict_name                                  conflict_name
FROM    fnd_user_tab u,
        functional_area_conflict_tab fa
WHERE   Functional_Area_Conflict_API.Is_Accessible_Area(fa.functional_area_id,u.identity) = 'TRUE'
AND     Functional_Area_Conflict_API.Is_Accessible_Area(fa.conflict_area_id,u.identity) = 'TRUE';

VIEW Func_Area_Conflict_View IS
   Prompt = 'Functional Area Conflict'
SELECT  fa.conflict_name                                 conflict_name,    
        fa.functional_area_id                            functional_area_id,
        fa.conflict_type                                 conflict_type,
       -- Func_Area_Conflict_Type_API.Decode(conflict_type) conflict_type,
        fa.conflict_area_id                              conflict_area_id       
FROM    functional_area_conflict_tab fa
UNION
SELECT  fa.conflict_name                                 conflict_name,
        fa.conflict_area_id                              functional_area_id,
        fa.conflict_type                                 conflict_type,
      --  Func_Area_Conflict_Type_API.Decode(conflict_type) conflict_type,
        fa.functional_area_id                            conflict_area_id
FROM    functional_area_conflict_tab fa;

VIEW User_Functional_Area_Conflicts IS
   Prompt = 'Functional Area Conflict'
SELECT  ua1.userid                                                                  userid,
        ua1.conflict_name                                                           conflict_name,
        ua1.description                                                             description,
        ua1.functional_area_id                                                      functional_area_id,
        fc.conflict_area_id                                                         conflict_area_id,
        --fc.conflict_type                                  conflict_type_db,
        --Func_Area_Conflict_Type_API.Decode(conflict_type) conflict_type,
        fc.conflict_type                                                            conflict_type,
        Func_Area_Conflict_Type_API.Decode(conflict_type)                           conflict_type_db,
        ua1.functional_area_id ||  CONCAT(', ', fc.conflict_area_id)                functional_areas,
        fc.rowkey                                                                   objkey
FROM    func_area_user_permissions ua1, func_area_user_permissions ua2,
        functional_area_conflict_tab fc
WHERE   ua1.functional_area_id =  fc.functional_area_id
AND     ua2.conflict_area_id   =  fc.conflict_area_id
AND     ua1.userid = ua2.userid
AND     ua1.conflict_name = ua2.conflict_name;

VIEW User_Func_No_Conflict_Areas IS
   Prompt = 'Functional Area Conflict'
SELECT  userid                                             userid,
        functional_area_id                                 functional_area_id
FROM    func_area_user_permissions
MINUS
( SELECT userid,functional_area_id
    FROM user_functional_area_conflicts
  UNION
  SELECT userid,conflict_area_id
    FROM user_functional_area_conflicts
 );

VIEW User_Area_All_Permissions IS
   Prompt = 'User Functional Area Conflict'
   Functional_Area_Id.Flags = 'PM---'
   Functional_Area_Id.Datatype = 'STRING(30)'
   Conflict_Area_Id.Flags = 'KM---'
   Conflict_Area_Id.Datatype = 'STRING(30)'
   Conflict_Type.Flags = 'AM---'
SELECT  userid                                        userid,
        functional_area_id                            functional_area_id,
        conflict_area_id                              conflict_area_id,
        conflict_type_db                              conflict_type_db,
        conflict_type                                 conflict_type
FROM    user_functional_area_conflicts
UNION
SELECT  userid                                        userid,
        conflict_area_id                              functional_area_id,
        functional_area_id                            conflict_area_id,
        conflict_type_db                              conflict_type_db,
        conflict_type                                 conflict_type
FROM    user_functional_area_conflicts
UNION
SELECT  userid                                         userid,
        functional_area_id                             functional_area_id,
        null                                           conflict_area_id,
        null                                           conflict_type_db,
        null                                           conflict_type
FROM    user_func_no_conflict_areas;

VIEW Func_Area_Conflict_Permissions IS
   Prompt = 'Functional Area Conflict Permissions'
   Functional_Area_Id.Flags = 'PM---'
   Functional_Area_Id.Datatype = 'STRING(30)'
   Conflict_Area_Id.Flags = 'PM---'
   Conflict_Area_Id.Datatype = 'STRING(30)'
SELECT  ufc.userid                                       userid,
        act.functional_area_id                           functional_area_id,
        act.activity_name                                sec_object,
        ufc.conflict_area_id                             conflict_area_id,
        'ACTIVITY'                                       sec_object_type_db,
        Func_Area_Sec_Object_Type_API.Decode('ACTIVITY') sec_object_type,
        Functional_Area_Conflict_API.Get_Permission_Set(ufc.userid,act.activity_name,'ACTIVITY') Permission_Set
FROM    user_functional_area_conflicts ufc,
        functional_area_activity_tab act
WHERE   ufc.functional_area_id =  act.functional_area_id
UNION
SELECT  ufc.userid                                       userid,
        act.functional_area_id                           functional_area_id,
        act.activity_name                                sec_object,
        ufc.functional_area_id                           conflict_area_id,
        Func_Area_Sec_Object_Type_API.Decode('ACTIVITY') sec_object_type,
        'ACTIVITY'                                       sec_object_type_db,
        Functional_Area_Conflict_API.Get_Permission_Set(ufc.userid,act.activity_name,'ACTIVITY') Permission_Set
FROM    user_functional_area_conflicts ufc,
        functional_area_activity_tab act
WHERE   ufc.conflict_area_id =  act.functional_area_id
UNION
SELECT  ufc.userid                                        userid,
        met.functional_area_id                            functional_area_id,
        met.package_name|| '.'||met.method_name           sec_object,
        ufc.conflict_area_id                              conflict_area_id,
        'METHOD'                                          sec_object_type_db,
        Func_Area_Sec_Object_Type_API.Decode('METHOD')    sec_object_type,
        Functional_Area_Conflict_API.Get_Permission_Set(ufc.userid,met.package_name|| '.'||met.method_name,'METHOD') Permission_Set
FROM    user_functional_area_conflicts ufc,
        functional_area_method_tab  met
WHERE   ufc.functional_area_id = met.functional_area_id
UNION
SELECT  ufc.userid                                        userid,
        met.functional_area_id                            functional_area_id,
        met.package_name|| '.'||met.method_name           sec_object,
        ufc.functional_area_id                            conflict_area_id,
        'METHOD'                                          sec_object_type_db,
        Func_Area_Sec_Object_Type_API.Decode('METHOD')    sec_object_type,
        Functional_Area_Conflict_API.Get_Permission_Set(ufc.userid,met.package_name|| '.'||met.method_name,'METHOD') Permission_Set
FROM    user_functional_area_conflicts ufc,
        functional_area_method_tab  met
WHERE   ufc.conflict_area_id = met.functional_area_id
UNION
SELECT  ufc.userid                                         userid ,
        vw.functional_area_id                              functional_area_id,
        vw.view_name                                       sec_object,
        ufc.conflict_area_id                               conflict_area_id,
        'VIEW'                                             sec_object_type_db,
        Func_Area_Sec_Object_Type_API.Decode('VIEW')       sec_object_type,
        Functional_Area_Conflict_API.Get_Permission_Set(ufc.userid,vw.view_name,'VIEW')  Permission_Set
FROM    user_functional_area_conflicts ufc,
        functional_area_view_tab vw
WHERE   ufc.functional_area_id =  vw.functional_area_id
UNION
SELECT  ufc.userid                                         userid,
        vw.functional_area_id                              functional_area_id,
        vw.view_name                                       sec_object,
        ufc.functional_area_id                             conflict_area_id,
        'VIEW'                                             sec_object_type_db,
        Func_Area_Sec_Object_Type_API.Decode('VIEW')       sec_object_type,
        Functional_Area_Conflict_API.Get_Permission_Set(ufc.userid,vw.view_name,'VIEW') Permission_Set
FROM    user_functional_area_conflicts ufc,
        functional_area_view_tab vw
WHERE   ufc.conflict_area_id =  vw.functional_area_id
UNION
SELECT  ufc.userid                                       userid,
        prt.functional_area_id                           functional_area_id,
        prt.projection_name                                sec_object,
        ufc.conflict_area_id                             conflict_area_id,
        'PROJECTION'                                       sec_object_type_db,
        Func_Area_Sec_Object_Type_API.Decode('PROJECTION') sec_object_type,
        Functional_Area_Conflict_API.Get_Permission_Set(ufc.userid,prt.projection_name,'PROJECTION') Permission_Set
FROM    user_functional_area_conflicts ufc,
        FUNC_AREA_PROJECTION_TAB prt
WHERE   ufc.functional_area_id =  prt.functional_area_id
UNION
SELECT  ufc.userid                                       userid,
        prt.functional_area_id                           functional_area_id,
        prt.projection_name                              sec_object,
        ufc.functional_area_id                           conflict_area_id,
        'PROJECTION'                                       sec_object_type_db,
        Func_Area_Sec_Object_Type_API.Decode('PROJECTION') sec_object_type,        
        Functional_Area_Conflict_API.Get_Permission_Set(ufc.userid,prt.projection_name,'PROJECTION') Permission_Set
FROM    user_functional_area_conflicts ufc,
        FUNC_AREA_PROJECTION_TAB prt
WHERE   ufc.conflict_area_id =  prt.functional_area_id
UNION
SELECT  ufc.userid                                        userid,
        pat.functional_area_id                            functional_area_id,
        pat.projection_name|| '.'||pat.projection_action           sec_object,
        ufc.conflict_area_id                              conflict_area_id,
        'PROJECTION_ACTION'                                          sec_object_type_db,
        Func_Area_Sec_Object_Type_API.Decode('PROJECTION_ACTION')    sec_object_type,
        Functional_Area_Conflict_API.Get_Permission_Set(ufc.userid,pat.projection_name|| '.'||pat.projection_action,'PROJECTION_ACTION') Permission_Set
FROM    user_functional_area_conflicts ufc,
        func_area_proj_action_tab  pat
WHERE   ufc.functional_area_id = pat.functional_area_id
UNION
SELECT  ufc.userid                                        userid,
        pat.functional_area_id                            functional_area_id,
        pat.projection_name|| '.'||pat.projection_action           sec_object,
        ufc.functional_area_id                            conflict_area_id,
        'PROJECTION_ACTION'                                          sec_object_type_db,
        Func_Area_Sec_Object_Type_API.Decode('PROJECTION_ACTION')    sec_object_type,
        Functional_Area_Conflict_API.Get_Permission_Set(ufc.userid,pat.projection_name|| '.'||pat.projection_action,'PROJECTION_ACTION') Permission_Set
FROM    user_functional_area_conflicts ufc,
        func_area_proj_action_tab  pat
WHERE   ufc.conflict_area_id = pat.functional_area_id
UNION
SELECT  ufc.userid                                        userid,
        pet.functional_area_id                            functional_area_id,
        pet.projection_name|| '.'||pet.projection_entity           sec_object,
        ufc.conflict_area_id                              conflict_area_id,
        'PROJECTION_ENTITY'                                          sec_object_type_db,
        Func_Area_Sec_Object_Type_API.Decode('PROJECTION_ENTITY')    sec_object_type,
        Functional_Area_Conflict_API.Get_Permission_Set(ufc.userid,pet.projection_name|| '.'||pet.projection_entity,'PROJECTION_ENTITY') Permission_Set
FROM    user_functional_area_conflicts ufc,
        func_area_proj_entity_tab  pet
WHERE   ufc.functional_area_id = pet.functional_area_id
UNION
SELECT  ufc.userid                                        userid,
        pet.functional_area_id                            functional_area_id,
        pet.projection_name|| '.'||pet.projection_entity           sec_object,
        ufc.functional_area_id                            conflict_area_id,
        'PROJECTION_ENTITY'                                          sec_object_type_db,
        Func_Area_Sec_Object_Type_API.Decode('PROJECTION_ENTITY')    sec_object_type,
        Functional_Area_Conflict_API.Get_Permission_Set(ufc.userid,pet.projection_name|| '.'||pet.projection_entity,'PROJECTION_ENTITY') Permission_Set
FROM    user_functional_area_conflicts ufc,
        func_area_proj_entity_tab  pet
WHERE   ufc.conflict_area_id = pet.functional_area_id
UNION
SELECT  ufc.userid                                        userid,
        peat.functional_area_id                            functional_area_id,
        peat.projection_name|| '.'||peat.projection_entity || '.'||peat.entity_action          sec_object,
        ufc.conflict_area_id                              conflict_area_id,
        'PROJECTION_ENTITY_ACTION'                                          sec_object_type_db,
        Func_Area_Sec_Object_Type_API.Decode('PROJECTION_ENTITY_ACTION')    sec_object_type,
        Functional_Area_Conflict_API.Get_Permission_Set(ufc.userid,peat.projection_name|| '.'||peat.projection_entity|| '.'||peat.entity_action,'PROJECTION_ENTITY_ACTION') Permission_Set
FROM    user_functional_area_conflicts ufc,
        func_area_proj_ent_act_tab  peat
WHERE   ufc.functional_area_id = peat.functional_area_id
UNION
SELECT  ufc.userid                                        userid,
        peat.functional_area_id                            functional_area_id,
        peat.projection_name|| '.'||peat.projection_entity || '.'||peat.entity_action          sec_object,
        ufc.functional_area_id                            conflict_area_id,
        'PROJECTION_ENTITY_ACTION'                                          sec_object_type_db,
        Func_Area_Sec_Object_Type_API.Decode('PROJECTION_ENTITY_ACTION')    sec_object_type,
        Functional_Area_Conflict_API.Get_Permission_Set(ufc.userid,peat.projection_name|| '.'||peat.projection_entity|| '.'||peat.entity_action,'PROJECTION_ENTITY_ACTION') Permission_Set
FROM    user_functional_area_conflicts ufc,
        func_area_proj_ent_act_tab  peat
WHERE   ufc.conflict_area_id = peat.functional_area_id;

 
VIEW Func_Conflict_Permissions IS
   Prompt = 'Functional Area Conflict Permissions'
   Functional_Area_Id.Flags = 'PM---'
   Functional_Area_Id.Datatype = 'STRING(30)'
SELECT  ufc.userid                                        userid,
        ufc.conflict_name                                 conflict_name,
        met.functional_area_id                            functional_area_id,
        met.package_name|| '.'||met.method_name           sec_object,
        met.package_name                                  package_name,
        met.method_name                                   method_name,
        'METHOD'                                          sec_object_type_db,
        Func_Area_Sec_Object_Type_API.Decode('METHOD')    sec_object_type,
        Functional_Area_Conflict_API.Get_Permission_Set(ufc.userid,met.package_name|| '.'||met.method_name,'METHOD') Permission_Set
FROM    user_functional_area_conflicts ufc,
        functional_area_method_tab  met
WHERE   ufc.functional_area_id = met.functional_area_id
UNION
SELECT  ufc.userid                                        userid,
        ufc.conflict_name                                 conflict_name,
        pat.functional_area_id                            functional_area_id,
        pat.projection_name|| '.'||pat.projection_action  sec_object,
        pat.projection_name                               package_name,
        pat.projection_action                             method_name,
        'PROJECTION_ACTION'                               sec_object_type_db,
        Func_Area_Sec_Object_Type_API.Decode('PROJECTION_ACTION')    sec_object_type,
        Functional_Area_Conflict_API.Get_Permission_Set(ufc.userid,pat.projection_name|| '.'||pat.projection_action,'PROJECTION_ACTION') Permission_Set
FROM    user_functional_area_conflicts ufc,
        func_area_proj_action_tab  pat
WHERE   ufc.functional_area_id = pat.functional_area_id
UNION 
SELECT  ufc.userid                                        userid,
        ufc.conflict_name                                 conflict_name,
        pat.functional_area_id                            functional_area_id,
        pat.projection_name|| '.'||pat.projection_action  sec_object,
        pat.projection_name                               package_name,
        pat.projection_action                             method_name,
        'PROJECTION_ACTION'                                          sec_object_type_db,
        Func_Area_Sec_Object_Type_API.Decode('PROJECTION_ACTION')    sec_object_type,
        Functional_Area_Conflict_API.Get_Permission_Set(ufc.userid,pat.projection_name|| '.'||pat.projection_action,'PROJECTION_ACTION') Permission_Set
FROM    user_functional_area_conflicts ufc,
        func_area_proj_action_tab  pat
WHERE   ufc.functional_area_id = pat.functional_area_id
UNION
SELECT  ufc.userid                                        userid,
        ufc.conflict_name                                 conflict_name,
        ufc.conflict_area_id                              functional_area_id,
        met.package_name|| '.'||met.method_name           sec_object,
        met.package_name                                  package_name,
        met.method_name                                   method_name,
        'METHOD'                                          sec_object_type_db,
        Func_Area_Sec_Object_Type_API.Decode('METHOD')    sec_object_type,
        Functional_Area_Conflict_API.Get_Permission_Set(ufc.userid,met.package_name|| '.'||met.method_name,'METHOD') Permission_Set
FROM    user_functional_area_conflicts ufc,
        functional_area_method_tab  met
WHERE   ufc.conflict_area_id = met.functional_area_id
UNION
SELECT  ufc.userid                                        userid,
        ufc.conflict_name                                 conflict_name,
        pat.functional_area_id                            functional_area_id,
        pat.projection_name|| '.'||pat.projection_action  sec_object,
        pat.projection_name                               package_name,
        pat.projection_action                             method_name,
        'PROJECTION_ACTION'                               sec_object_type_db,
        Func_Area_Sec_Object_Type_API.Decode('PROJECTION_ACTION')    sec_object_type,
        Functional_Area_Conflict_API.Get_Permission_Set(ufc.userid,pat.projection_name|| '.'||pat.projection_action,'PROJECTION_ACTION') Permission_Set
FROM    user_functional_area_conflicts ufc,
        func_area_proj_action_tab  pat
WHERE   ufc.functional_area_id = pat.functional_area_id;



