-----------------------------------------------------------------------------
--
--  Logical unit: AppearanceConfiguration
--  Component:    FNDBAS
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------

layer Core;

@Override
PROCEDURE CRUD_Default___ (
   rec_ IN OUT Fnd_Branding_Property_Default_Rec )
IS
BEGIN
   super(rec_);
   rec_.theme := 'default';
END CRUD_Default___;

@Override
PROCEDURE CRUD_Default___ (
   rec_ IN OUT Fnd_Branding_Property_Dark_Rec )
IS
BEGIN
   super(rec_);
   rec_.theme := 'working-late';
END CRUD_Default___;

@Override
PROCEDURE CRUD_Create___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Fnd_Branding_Property_Default_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT VARCHAR2,
   action_ IN  VARCHAR2 )
IS
BEGIN
   IF NOT Client_SYS.Item_Exist('VALUE', attr_) THEN
      Client_SYS.Add_To_Attr('VALUE', 'NOT-SET', attr_);
   END IF; 
   
   super(etag_, key_, attr_, info_, action_);
END CRUD_Create___;

@Override
PROCEDURE CRUD_Create___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Fnd_Branding_Property_Dark_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT VARCHAR2,
   action_ IN  VARCHAR2 )
IS
BEGIN
   IF NOT Client_SYS.Item_Exist('VALUE', attr_) THEN
      Client_SYS.Add_To_Attr('VALUE', 'NOT-SET', attr_);
   END IF; 
   
   super(etag_, key_, attr_, info_, action_);
END CRUD_Create___;

FUNCTION Get_All_Branding_Property_Lists___
   RETURN Branding_Property_List_Arr
IS
   rec_ Branding_Property_List_Rec;
   property_list_ Branding_Property_List_Arr := Branding_Property_List_Arr();
   resource_str_ VARCHAR2(20) := 'RESOURCE: ';
   CURSOR properties IS
      SELECT t1.*,t2.type, t2.css_property, t2.css_override FROM (SELECT * FROM fnd_branding_property_tab) t1 left join
         fnd_branding_token_tab t2 ON t1.property = t2.property;
BEGIN
   FOR rec IN properties LOOP
      IF (rec.value != 'NOT-SET') THEN 
         rec_.code := rec.code;
         rec_.property := rec.property;
         rec_.theme := rec.theme;
         rec_.value := rec.value;
         rec_.type := rec.type;
         rec_.css_property := rec.css_property;
         rec_.css_override := rec.css_override;
         
         IF (INSTR(rec_.value, resource_str_) = 1) THEN
            rec_.date_modified := Fnd_Branding_Resource_API.Get_Time_Modified(
               substr(rec_.value, length(resource_str_) + 1));  
         END IF;
        
         property_list_.extend;
         property_list_(property_list_.last) := rec_;
      END IF;   
   END LOOP;

   RETURN property_list_;
  
END Get_All_Branding_Property_Lists___;


-- We might use this method in the future. 
-- Returns theme identifier instead of the db value in the same names used in Aurena
-- working-late => dark
-- default -> light
FUNCTION Get_All_Branding_Property_Lists_Alt___
   RETURN Branding_Property_List_Arr
IS
   rec_ Branding_Property_List_Rec;
   property_list_ Branding_Property_List_Arr := Branding_Property_List_Arr();
   resource_str_ VARCHAR2(20) := 'RESOURCE: ';
   CURSOR properties IS
      SELECT t1.*,t2.type, t2.css_property, t2.css_override FROM (SELECT * FROM fnd_branding_property_tab) t1 left join
         fnd_branding_token_tab t2 ON t1.property = t2.property;
BEGIN
   FOR rec IN properties LOOP
      IF (rec.value != 'NOT-SET') THEN 
         rec_.code := rec.code;
         rec_.property := rec.property;
         rec_.theme := lower(Fnd_Branding_Theme_Type_API.Db_Value_To_Identifier(rec.theme));
         rec_.value := rec.value;
         rec_.type := rec.type;
         rec_.css_property := rec.css_property;
         rec_.css_override := rec.css_override;
         
         IF (INSTR(rec_.value, resource_str_) = 1) THEN
            rec_.date_modified := Fnd_Branding_Resource_API.Get_Time_Modified(
               substr(rec_.value, length(resource_str_) + 1));  
         END IF;
        
         property_list_.extend;
         property_list_(property_list_.last) := rec_;
      END IF;   
   END LOOP;

   RETURN property_list_;
  
END Get_All_Branding_Property_Lists_Alt___;

FUNCTION Get_All_Brandings___
   RETURN Branding_List_Arr
IS
   rec_ Branding_List_Rec;
   branding_list_ Branding_List_Arr := Branding_List_Arr();
   
   CURSOR brandings IS
      SELECT t.code, t.name, t.context, t.state
      FROM fnd_branding_tab t;
     
BEGIN
   
   FOR rec IN brandings LOOP
      rec_.code := rec.code;
      rec_.name := rec.name;
      rec_.context := rec.context;
      rec_.state := rec.state;
      branding_list_.extend;
      branding_list_(branding_list_.last) := rec_;
   END LOOP;
   RETURN branding_list_;
  
END Get_All_Brandings___;



PROCEDURE Copy_Default_Properties___ (
   code_ IN VARCHAR2)
IS   
   CURSOR get_default_rows IS
      SELECT *
      FROM fnd_branding_property_tab t
      WHERE t.theme = 'default'
      AND t.code = code_ ;
      
   attr_ VARCHAR2(32000);
   info_ VARCHAR2(32000);
   objid_ VARCHAR2(32000);
   objversion_ VARCHAR2(32000);
  
   
BEGIN
   FOR rec_ IN get_default_rows LOOP
      
      IF (NOT Fnd_Branding_Property_API.Exists_Db(rec_.code, rec_.property, 'working-late')) THEN
         Client_SYS.Clear_Attr(attr_);
         Client_SYS.Add_To_Attr('CODE', rec_.code, attr_);
         Client_SYS.Add_To_Attr('PROPERTY', rec_.property, attr_);
         Client_SYS.Add_To_Attr('THEME_DB', 'working-late' , attr_);
         Client_SYS.Add_To_Attr('VALUE', rec_.value, attr_);
         
         Fnd_Branding_Property_API.New__(info_, objid_, objversion_, attr_, 'DO');
      END IF;
      
   END LOOP;

END Copy_Default_Properties___;


PROCEDURE Copy_Default_Property___ (
   code_ IN VARCHAR2,
   property_ IN   VARCHAR2)
IS
   value_ VARCHAR2(32000);
   attr_ VARCHAR2(32000);
   info_ VARCHAR2(32000);
   
   objid_ VARCHAR2(32000);
   objversion_ VARCHAR2(32000);
   
BEGIN
   
   SELECT t.value INTO value_
   FROM fnd_branding_property_tab t
   WHERE t.theme = 'default'
   AND t.code = code_ AND t.property = property_;
   
   SELECT objid, objversion INTO objid_, objversion_
   FROM Fnd_Branding_Property t
   WHERE t.theme_db = 'working-late'
   AND t.code = code_ AND t.property = property_;
   
   IF (value_ IS NOT NULL ) THEN
      Client_SYS.Clear_Attr(attr_);
      Client_SYS.Add_To_Attr('VALUE', value_, attr_);
      Fnd_Branding_Property_API.Modify__(info_, objid_, objversion_, attr_, 'DO');
   END IF;
   
EXCEPTION
   when no_data_found THEN
      NULL;
      
END Copy_Default_Property___;


PROCEDURE Unpublish___ (
   code_ IN VARCHAR2)
IS

BEGIN
   UPDATE fnd_branding_tab
         SET state = 'UNPUBLISHED'
       WHERE code = code_;
   Fnd_Branding_API.Update_Def_Modified_Date(code_);
END Unpublish___;


PROCEDURE Publish___ (
   code_ IN VARCHAR2)
IS
   is_invalid_custom_ NUMBER;
   multiple_mappings_ NUMBER;
   
BEGIN
   SELECT count(*) INTO is_invalid_custom_
         FROM fnd_branding_tab t WHERE t.code = code_ AND t.context = 'CUSTOM'
         AND (t.context_expression IS NULL or t.context_expression = '');
      
   SELECT count(*) INTO multiple_mappings_
      FROM fnd_branding_tab t1 WHERE t1.state = 'PUBLISHED' AND t1.context_expression = 
            (SELECT t2.context_expression FROM fnd_branding_tab t2 WHERE t2.code = code_);   
   
   IF (is_invalid_custom_ > 0) THEN 
      Error_SYS.Appl_General(lu_name_, '100001: Missing Context expression.');
      
   ELSIF (multiple_mappings_ > 0) THEN 
      Error_SYS.Appl_General(lu_name_, '100002: Only 1 Published appearance can be set for each context.');
   ELSE 
      Fnd_Branding_API.Update_Def_Modified_Date(code_);
      UPDATE fnd_branding_tab
            SET state = 'PUBLISHED'
          WHERE code = code_;
   END IF;
   
END Publish___;


@Override
PROCEDURE CRUD_Default_Copy___ (
   objid_  IN  VARCHAR2,
   key_    IN  Fnd_Branding_Key,
   values_ IN  Copy_Values_Rec,
   attr_   OUT VARCHAR2,
   info_   OUT VARCHAR2 )
IS
BEGIN
   super(objid_, key_, values_, attr_, info_);
   Client_SYS.Set_Item_Value('DUPLICATE_CHECK', key_.code, attr_);
   Client_SYS.Set_Item_Value('STATE_DB', 'UNPUBLISHED', attr_);
END CRUD_Default_Copy___;


@Override
PROCEDURE CRUD_Create___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Fnd_Branding_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT VARCHAR2,
   action_ IN  VARCHAR2 )
IS
   duplicate_check_ VARCHAR2(100);
BEGIN
   super(etag_, key_, attr_, info_, action_);
   duplicate_check_ := Client_SYS.Get_Item_Value('DUPLICATE_CHECK', attr_);
   IF (duplicate_check_ IS NOT NULL AND duplicate_check_ != 'None') THEN
      Fnd_Branding_API.Duplicate_Branding(duplicate_check_, key_.code);
      
   END IF;
END CRUD_Create___;


FUNCTION New_Detail___ (
   master_ IN Upload_Resource_Virtual_Key,
   detail_ IN Resource_File_Virtual_Rec ) RETURN VARCHAR2
IS
   rec_      Resource_File_Virtual_Rec := detail_;
   tab_      ${PROJECTION}_RESOURCE_FILE_VIRTUAL_VRT%ROWTYPE;
   count_    NUMBER;
BEGIN   
   SELECT COUNT(*) INTO count_ FROM ${PROJECTION}_RESOURCE_FILE_VIRTUAL_VRT;
   
   rec_.objkey := sys_guid();
   rec_.parent_objkey := master_.objkey;
   tab_.objkey                         := rec_.objkey;
   tab_.parent_objkey                  := rec_.parent_objkey;
   tab_.file_data                      := rec_.file_data;
   tab_.obj_created_by                 := fnd_session_API.Get_Fnd_User;
   tab_.upload_count                   := count_ + 1;
   INSERT INTO ${PROJECTION}_RESOURCE_FILE_VIRTUAL_VRT VALUES tab_;     
   RETURN rec_.objkey;
END New_Detail___;


FUNCTION Create_File_Record___ (
   key_        IN Upload_Resource_Virtual_Key) RETURN Resource_File_Virtual_Key_Struct_Rec
IS
   resource_file_        Resource_File_Virtual_Rec; 
   rec_                  Resource_File_Virtual_Key_Struct_Rec;
BEGIN
   resource_file_.file_data := empty_blob();
   rec_.objkey := New_Detail___(key_,resource_file_);
   RETURN rec_;
END Create_File_Record___;


PROCEDURE Clear_Resource_File_Virtual___ (
   key_ IN Upload_Resource_Virtual_Key)
IS
BEGIN
	DELETE FROM ${PROJECTION}_RESOURCE_FILE_VIRTUAL_VRT;
   DELETE FROM ${PROJECTION}_UPLOAD_RESOURCE_VIRTUAL_VRT WHERE objkey != key_.objkey;
END Clear_Resource_File_Virtual___;


PROCEDURE Set_File_Info___ (
   key_ IN Upload_Resource_Virtual_Key,
   file_names_ IN VARCHAR2)
IS
   upl_file_names_          VARCHAR2(20000) := file_names_;
   err_                     VARCHAR2(100);
   
   CURSOR get_resources_ IS 
   SELECT file_data,objkey,objmodified FROM ${PROJECTION}_RESOURCE_FILE_VIRTUAL_VRT
   WHERE parent_objkey = key_.objkey
   ORDER BY upload_count;
   
   rec_ Resource_File_Virtual_Rec;
   
   file_ext_ VARCHAR2(20);
   file_type_ VARCHAR2(20);
   
BEGIN
   IF upl_file_names_ IS NOT NULL THEN
      upl_file_names_ := lower(upl_file_names_) ||',';
   END IF;
   
   FOR resource_rec_ IN get_resources_
   LOOP
      BEGIN
         rec_ := NULL;
         rec_.objkey := resource_rec_.objkey;
         rec_.file_data := resource_rec_.file_data;
         rec_.objmodified := resource_rec_.objmodified;
         
         IF upl_file_names_ IS NOT NULL THEN        
            rec_.file_name := SUBSTR(upl_file_names_,0,INSTR(upl_file_names_,',')-1);
            upl_file_names_ := SUBSTR(upl_file_names_,INSTR(upl_file_names_,',')+1);
         END IF;    

         file_ext_ := Get_File_Extension___(rec_.file_name);
         file_type_ := Get_File_Type___(file_ext_);
         
         
         IF Fnd_Branding_Resource_API.exists(rec_.file_name) THEN
            UPDATE fnd_branding_resource_tab
            SET file_data = rec_.file_data,
                date_modified = rec_.objmodified,
                type = file_type_
            WHERE file_name = rec_.file_name;
         ELSE
            INSERT INTO fnd_branding_resource_tab(file_name, file_data, date_modified, type, rowversion)
            VALUES (rec_.file_name, rec_.file_data, rec_.objmodified, file_type_, sysdate);
         END IF;  
         
      EXCEPTION  
         WHEN OTHERS THEN
            IF SQLCODE IN (-31011) THEN 
               err_ := rec_.file_name || ' is not valid and can not be imported'; 
               Error_Sys.Record_General(NULL,err_);
            ELSE
               RAISE;
            END IF;
      END;
   END LOOP;
END Set_File_Info___;


FUNCTION Get_File_Extension___(file_name_ IN VARCHAR2) 
   RETURN VARCHAR2
IS
BEGIN
   RETURN substr(file_name_,   nullif( instr(file_name_,'.', -1) +1, 1) );
END Get_File_Extension___;

FUNCTION Get_File_Type___(extension_ IN VARCHAR2) 
   RETURN VARCHAR2
IS
BEGIN
   IF (extension_ = 'jpg' OR extension_ = 'jpeg' OR extension_ = 'png' ) THEN
      RETURN 'IMAGE';
   ELSIF (extension_ = 'ttf' OR extension_ = 'otf' OR extension_ = 'woff' OR extension_ = 'woff2') THEN
      RETURN 'FONT';
   ELSE 
      RETURN NULL;
   END IF;
END Get_File_Type___;


FUNCTION Files_With_Same_Name_Exists___ (
   file_names_ IN VARCHAR2) RETURN BOOLEAN
IS
   file_count_ NUMBER;
   distinct_file_count_ NUMBER;
   file_names_lower_ VARCHAR2(2000);
   
BEGIN
   file_names_lower_ := LOWER(file_names_);
   
	SELECT COUNT(DISTINCT REGEXP_SUBSTR (file_names_lower_,'[^,]+',1,LEVEL)) INTO distinct_file_count_ FROM dual 
         CONNECT BY REGEXP_SUBSTR (file_names_lower_,'[^,]+',1,LEVEL) IS NOT NULL;
         
   SELECT COUNT(REGEXP_SUBSTR (file_names_lower_,'[^,]+',1,LEVEL)) INTO file_count_ FROM dual 
         CONNECT BY REGEXP_SUBSTR (file_names_lower_,'[^,]+',1,LEVEL) IS NOT NULL;
         
   IF (file_count_ > distinct_file_count_) THEN
      RETURN TRUE; 
   ELSE
      RETURN FALSE;
   END IF;
END Files_With_Same_Name_Exists___;


FUNCTION Files_With_Same_Name_Exists_Db___ (
   file_names_ IN VARCHAR2) RETURN VARCHAR2
IS
   tmp_file_name_ VARCHAR2(200);
   conflicting_files_ VARCHAR2(1000);
   
   CURSOR get_files_db_ IS 
   SELECT file_name FROM fnd_branding_resource_tab;
   
BEGIN
	FOR file_ IN (SELECT REGEXP_SUBSTR (file_names_, '[^,]+', 1, LEVEL) files_
                     FROM DUAL
               CONNECT BY REGEXP_SUBSTR (file_names_, '[^,]+', 1, LEVEL) IS NOT NULL)
   LOOP
      tmp_file_name_ := lower(file_.files_);
      FOR rec IN get_files_db_
      LOOP
         IF (tmp_file_name_ = rec.file_name) THEN
            conflicting_files_ := conflicting_files_ || tmp_file_name_ || ', ';
         END IF;
      END LOOP;
   END LOOP;
   
   IF ( conflicting_files_ IS NOT NULL ) THEN
      conflicting_files_ := SUBSTR(conflicting_files_, 0, LENGTH(conflicting_files_) - 2);
   END IF;
   
   RETURN conflicting_files_;
END Files_With_Same_Name_Exists_Db___;


PROCEDURE Set_Resource___ (
   code_ IN VARCHAR2,
   property_ IN VARCHAR2,
   theme_ IN VARCHAR2,
   file_name_ IN VARCHAR2,
   date_modified_ IN VARCHAR2)
IS
   
BEGIN
	Fnd_Branding_Property_API.Set_Resource(
      code_, 
      property_, 
      Fnd_Branding_Theme_Type_API.Identifier_To_Db_Value(theme_) ,
      file_name_,
      date_modified_);
END Set_Resource___;

PROCEDURE Set_Url___ (
   code_ IN VARCHAR2,
   property_ IN VARCHAR2,
   theme_ IN VARCHAR2,
   custom_url_ IN VARCHAR2)
IS
BEGIN
	Fnd_Branding_Property_API.Set_Url(
      code_, 
      property_, 
      Fnd_Branding_Theme_Type_API.Identifier_To_Db_Value(theme_) ,
      custom_url_);
END Set_Url___;


FUNCTION Check_Resource_Mapped___ (
   file_name_ IN VARCHAR2) RETURN BOOLEAN
IS
BEGIN
   RETURN Fnd_Branding_Property_API.Check_Resource_Mapped(file_name_);
END Check_Resource_Mapped___;


FUNCTION Get_Tokens___ (
   code_ IN VARCHAR2,
   theme_ IN VARCHAR2) RETURN Objid_Arr
IS
   base_collection_       Objid_Arr := Objid_Arr();
   CURSOR get_tokens_ IS    
      SELECT t1.property, t1.objid FROM  fnd_branding_token t1 RIGHT JOIN (SELECT property FROM fnd_branding_token MINUS (SELECT property FROM fnd_branding_property_tab
      WHERE code = code_ AND theme = theme_)) t2   ON t1.property = t2.property;
BEGIN
   
   FOR rec_ IN get_tokens_ LOOP
      base_collection_.extend;
      base_collection_(base_collection_.last) := rec_.objid;
   END LOOP;  
   RETURN base_collection_;
END Get_Tokens___;


PROCEDURE Insert_Test_Data___
IS
   resource_logo_light_ CLOB;
   resource_logo_dark_ CLOB;
   resource_font_ CLOB;
BEGIN

   Insert_Test_Branding___('-100199', 'Test-Global', 'GLOBAL', 'CONTEXT_FULL', 'UNPUBLISHED');
   
   Insert_Test_Property___('-100199', 'W-100-COLOR', 'default', '#58BFB3');
   Insert_Test_Property___('-100199', 'W-100-IMAGE', 'default', 'RESOURCE: logo-wide-global-light-210726-112122.png');
   Insert_Test_Property___('-100199', 'W-110-COLOR', 'default', '#1C3A67');
   Insert_Test_Property___('-100199', 'W-200-COLOR', 'default', '#6D94CE');
   Insert_Test_Property___('-100199', 'W-200-IMAGE', 'default', 'assets/branding/cy-tests/logo-global-light.png');
   Insert_Test_Property___('-100199', 'W-220-COLOR', 'default', '#1C3A67');
   Insert_Test_Property___('-100199', 'W-220-TEXT', 'default', 'GLOBAL BRANDING LIGHT');
   Insert_Test_Property___('-100199', 'W-400-COLOR', 'default', '#8AB8FC');
   Insert_Test_Property___('-100199', 'W-410-COLOR', 'default', '#0E1FA1');
   Insert_Test_Property___('-100199', 'W-600-FONT', 'default', 'assets/branding/cy-tests/global-font.woff2');


   Insert_Test_Property___('-100199', 'W-100-COLOR', 'working-late', '#1C3A67');
   Insert_Test_Property___('-100199', 'W-100-IMAGE', 'working-late', 'RESOURCE: logo-wide-global-dark-210726-112122.png');
   Insert_Test_Property___('-100199', 'W-110-COLOR', 'working-late', '#58BFB3');
   Insert_Test_Property___('-100199', 'W-200-COLOR', 'working-late', '#373F83');
   Insert_Test_Property___('-100199', 'W-200-IMAGE', 'working-late', 'assets/branding/cy-tests/logo-global-dark.png');
   Insert_Test_Property___('-100199', 'W-220-COLOR', 'working-late', '#58BFB3');
   Insert_Test_Property___('-100199', 'W-220-TEXT', 'working-late', 'GLOBAL BRANDING DARK');
   Insert_Test_Property___('-100199', 'W-400-COLOR', 'working-late', '#0E1FA1');
   Insert_Test_Property___('-100199', 'W-410-COLOR', 'working-late', '#8AB8FC');
   Insert_Test_Property___('-100199', 'W-600-FONT', 'working-late', 'assets/branding/cy-tests/global-font.woff2');


   Insert_Test_Branding___('-100299', 'Test-Custom', 'CUSTOM', 'USER=IFSAPP', 'UNPUBLISHED');
   
   Insert_Test_Property___('-100299', 'W-100-IMAGE', 'default', 'assets/branding/cy-tests/logo-wide-custom-light.png');
   Insert_Test_Property___('-100299', 'W-200-IMAGE', 'default', 'assets/branding/cy-tests/logo-custom-light.png');
   Insert_Test_Property___('-100299', 'W-210-IMAGE', 'default', 'assets/branding/cy-tests/background-light.jpg');
   Insert_Test_Property___('-100299', 'W-220-FONT', 'default', 'RESOURCE: custom-font-210726-127422.woff2');
   Insert_Test_Property___('-100299', 'W-220-TEXT', 'default', 'CUSTOM BRANDING LIGHT');

   Insert_Test_Property___('-100299', 'W-100-IMAGE', 'working-late', 'assets/branding/cy-tests/logo-wide-custom-dark.png');
   Insert_Test_Property___('-100299', 'W-200-IMAGE', 'working-late', 'assets/branding/cy-tests/logo-custom-dark.png');
   Insert_Test_Property___('-100299', 'W-210-IMAGE', 'working-late', 'assets/branding/cy-tests/background-dark.jpg');
   Insert_Test_Property___('-100299', 'W-220-FONT', 'working-late', 'RESOURCE: custom-font-210726-127422.woff2');
   Insert_Test_Property___('-100299', 'W-220-TEXT', 'working-late', 'CUSTOM BRANDING DARK');

   resource_logo_light_ := 'iVBORw0KGgoAAAANSUhEUgAAAZAAAACWCAMAAADHTy5XAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA4FpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDYuMC1jMDAyIDc5LjE2NDQ4OCwgMjAyMC8wNy8xMC0yMjowNjo1MyAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDplYTE3ZGRmMi1lNjA3LWIyNDEtYWVlOS1iYjA0MDY2YTYyNDciIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6MTA3RjJEQTFFNDk5MTFFQjkwNkNCMzAzNjhGMzhBQTMiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MTA3RjJEQTBFNDk5MTFFQjkwNkNCMzAzNjhGMzhBQTMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIDIyLjAgKFdpbmRvd3MpIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6YjE4MTM3YmMtNDQ4My0yYzRhLTgwNGItMzczMzg2NWNlNWUxIiBzdFJlZjpkb2N1bWVudElEPSJhZG9iZTpkb2NpZDpwaG90b3Nob3A6MDI0OTA2MDMtN2FhMS1iMTQ1LWI4NGUtOTU2ZWQ5NGNkNzhlIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+hprdGAAAAsFQTFRFAAtLQEh4f4Wlv8LS7/D0z9Hdn6O7cHaaEBpW/f3+ICpiCRRRAQxM3d7nMDltDBZTYGePr7LH3+DoHihgBxJQW2KLBRBP+fn77e7y6OnvgYamBA9O5+juJS5lAg1MFB5ZBhFP/Pz9vL/Q19njlpu1Vl2I4eLqjJGuLTZr8vP2DxlW5OXsubzOUFiDmJy2p6vBND1wrbHFChVSYmmQtLfKKzRpAw5Nqa3Cj5Swi5CtFiBbpam/+/v89fX4sLPH0NLe0tTfRk58Mzxv9vb56ervCBNRRU18MjtueX+g9PT3+Pj68PH0UlmF+vr7U1qGdHqde4GiVFuG8fL1anCWQ0t6FR9aGSNdKDFnGiRdSFB+4+TrGCJcs7bJqq7DQUl5ztDc293moqa9jpOv5ebtoKS87O3y3N7mREx7sbTInqK7hYqpw8bVOkJ0goenycvZHCZffIKjh4yqbXOYZGuSEhxYy83aPkZ32tzlfoSkxcjW1Nbh8/T3TlaCpqrAdXueY2qR6+zxeH6gmp64xsjXwsXUJzBnuLvNjZKvQkp6oaW909XgIixjo6e+SVF/6uvwKTJomZ23N0BypKi/bnSZIStiqKzCzM7bd32fEx1YrLDEvcDQ0dPftrnLsrXJkpeyGyVerrHGlJmzdnyeyszaVVyHLjdrl5u2DhhVNT5wvsHReoChkJWxS1OAu77PLzhscXebJi9mt7rMHylhPUV2LDVqnKC5aW+VFyFb9/f5OEFzZ26UWmGLm5+4YWiP7u/ziI2rWF+JwcTTwMPTP0d3OUJzXmWNq6/E2dvkgIWlT1eD3t/ohouqJC1kKjNp4OHplZq0io+s1tjiiY6syMrYb3WZxMfVIyxkhImo5uftcnibCxZT2Nrja3GXDRdUkZaxZm2Tur3OaG+U4uPrV16Ix8nXXGOMO0N1tbjLTVWBUVmE////S7UwhQAAAOt0Uk5T////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////AC/pjZQAAAl9SURBVHja7J33YxRFFMfn+l16IQkJIQkJkERACQkhmITeO4TQAoIiVXoVREWaUgXpCIoUlSYCKsWKvffee5m/wturs7MzWy67F7L3vj+FefP27c2HnZ2+CINuKCEoAgACAiAABARAAAgIgAAQEAABICAAAgIgAAQEQAAICIAAEBAAASAgAAICIAAEBEAACAiAABAdNXhf2c7Hnl81A4r+RgBy/FhSJfKrvnwmlH7TAsla1xWRavXjGCj/pgNSM+ciohW3CgA0FZALHyGGMm8GAk0CpOdExFHdcGAQdSArX8xDXJ2tlfW1IA2yhX+WrFUqq5YwFmW3OIsgq7XKlnbDAdm0Jk/2560YY0IgouyuVHsTA+n7fqJfK48uSVe84c5DzQ1EUKfUJgHSb3lZlWtY51uRNs2rNT0QbyXmNBbIYOIpzEq0bc65v/f4eBShZmWZH4jXLc0wIEWDkhIQil+2tWufWdvnTchDjVVGLABBbocxQF5/COmuubEARBURzUCmTUQGKKFHLABB7jS9gbR5tQUyRMs6xAIQwlUfIEW7kFEaGxNAkFNPIJ7ieGScXooJIHE6Aln5NzJS4/rGAhDFR0Q1kJriLshYdYsJIJ10ArJvIDJadTEBBNn1AHLlvlaG80AlsQEkVQcgU7uiKCivpSmAuH0j726ut6vRQNrMzURR0RFTAAlaHVZ3JF0RZSD9bkNR0n0qgaTYOLLrC4QXxqEKCMZpccyf2UggjoXR4oGuqgRiVTEipAcQ5TDyQLCN+TPTGgWkY3LUeKDMWpMBwZ203ocikNQCFEUVmg2IU3szSz7qoajyYJV08wbiQJpvXzbqli5R5YFuMxsQrC+Qoa2jywN1GQ5A5KLej6KtQrMBsegJ5FBC1IG8BUBkonaOOg+UfA8A4bd4DSv2ywe5jYXNAIRrGWsUj4IF+PUGjm0AAOEZEg17g5zxXt2+6CamrTLbXEDc+gF50Cgeb3r8beqq51jWJ6DZG+UaK2F9KMSC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';
   Insert_Test_Resource___('logo-wide-global-light-210726-112122.png', 'IMAGE', resource_logo_light_);
   
   resource_logo_dark_ := 'iVBORw0KGgoAAAANSUhEUgAAAZAAAACWCAMAAADHTy5XAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA4FpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDYuMC1jMDAyIDc5LjE2NDQ4OCwgMjAyMC8wNy8xMC0yMjowNjo1MyAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDplYTE3ZGRmMi1lNjA3LWIyNDEtYWVlOS1iYjA0MDY2YTYyNDciIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6RkE5M0JDQjVFNDk4MTFFQkI5QUJERDdDRjgyNzdDMTMiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6RkE5M0JDQjRFNDk4MTFFQkI5QUJERDdDRjgyNzdDMTMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIDIyLjAgKFdpbmRvd3MpIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6YjE4MTM3YmMtNDQ4My0yYzRhLTgwNGItMzczMzg2NWNlNWUxIiBzdFJlZjpkb2N1bWVudElEPSJhZG9iZTpkb2NpZDpwaG90b3Nob3A6MDI0OTA2MDMtN2FhMS1iMTQ1LWI4NGUtOTU2ZWQ5NGNkNzhlIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+KBHW2AAAAkxQTFRF/4BZ/6CD/7+s/9/V//f1/+fg/4Jc/8/B/7ii/5Bu/4hj//7+/49t/4Rf/4Zh/4Ba//bz/62U/5h4/+/q/+7p//38/7CX//n3/9fL//r4/4Ne//Pv/9LE/5l6/7GZ/9zR/5Z2/8u7//z7/4xp/5Jx/7ql//79/9jM/4pm/97T/4Nd/+ni/8Ct/4Fa//Tw//Dr/8a0/6qQ/8Wz/4Vg/4dj/+vl/6uR/4Fb/4tn/8y8/5p7/9TH/9rO//Lt/4ll/9PG/6iN/5V1/5Ny/9bK/8e2/7yo//z6/+jg/6OH/4Re/6mP/7um/6GF/6KG//Ht/7eh/41q/6SI/7We//j1/6eM//v5/+LZ/9XI/6mO/72p/51//4pn/5Rz//Tx//j2/8i3/8y9/7ag/9PF/5+B/+be/9HC/8/A/8Sy/7Ka/7Sd/6GE/6KF/+3o/8Ox/76q/6SJ/8Kw//Xy/5R0/+ff/+Xd/+Tc/+Pa/829/9TG/9DB/+HX/5Fv//Lu/8e1/+7o/45r/7yn/9DC/8a1/+HY/+3n/8Gu/5t9/9nO/+rj/7+r//Xx/9HD/+jh/7ij/7CY/6yS/56B/9bJ/9fK/5d4/86//5x9/4di/9vP/93T/+DW/6WK/72o/+Xc/7Oc/+DX/9vQ/41r/8q5/5p8/5d3/82+/9nN/8m4/97U/+zm//f0/4to//v6/+Pb//Hs/93S/5V0/6+W/7mj/7Wf/6aL/6iO/8q6/+Tb/6uS/66V/5+C/8Kv/+vk/7Ob/8Cs/9rP/5x+/8Ow/5Fw/5Jw////dA0HFAAAAMR0Uk5T////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////ABp28sIAAAlOSURBVHja7J33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';
   Insert_Test_Resource___('logo-wide-global-dark-210726-112122.png', 'IMAGE', resource_logo_dark_);
   
   resource_font_ := '';
   Insert_Test_Resource___('custom-font-210726-127422.woff2', 'FONT', resource_font_);

END Insert_Test_Data___;

PROCEDURE Insert_Test_Branding___(
   code_    IN VARCHAR2,
   name_    IN VARCHAR2,
   context_ IN VARCHAR2,
   context_expression_ IN VARCHAR2,
   state_   IN VARCHAR2)
IS
    rec_  fnd_branding_tab%ROWTYPE;
BEGIN
   IF Fnd_Branding_API.exists(code_) THEN
      DELETE FROM fnd_branding_tab WHERE code = code_;
   END IF;
   rec_.code := code_;
   rec_.name := name_;
   rec_.context := context_;
   rec_.context_expression := context_expression_;
   rec_.enable_b2_b := 1;
   rec_.enable_b2_e := 1;
   rec_.state := state_;
   rec_.rowversion := sysdate;
   rec_.rowkey := sys_guid();
   INSERT INTO fnd_branding_tab VALUES rec_;
END Insert_Test_Branding___;


PROCEDURE Insert_Test_Property___(
   code_       IN VARCHAR2,
   property_   IN VARCHAR2,
   theme_db_      IN VARCHAR2,
   value_      IN VARCHAR2)
IS
    rec_  fnd_branding_property_tab%ROWTYPE;
BEGIN
   IF Fnd_Branding_Property_API.Exists_Db(code_, property_, theme_db_) THEN
      DELETE FROM fnd_branding_property_tab WHERE code = code_ AND property = property_ AND theme = theme_db_;
   END IF;
   rec_.code := code_;
   rec_.property := property_;
   rec_.theme := theme_db_;
   rec_.value := value_;
   rec_.rowversion := sysdate;
   rec_.rowkey := sys_guid();
   INSERT INTO fnd_branding_property_tab VALUES rec_;
END Insert_Test_Property___;


PROCEDURE Insert_Test_Resource___(
   file_name_    IN VARCHAR2,
   type_    IN VARCHAR2,
   file_data_clob_ IN CLOB)
IS
    rec_ fnd_branding_resource_tab%ROWTYPE;
BEGIN
   IF Fnd_Branding_Resource_API.exists(file_name_) THEN
      DELETE FROM fnd_branding_resource_tab WHERE file_name = file_name_;
   END IF;
   
   rec_.file_name := file_name_;
   rec_.type := type_;
   rec_.file_data := Utility_SYS.Convert_Base64_Clob_To_Blob(file_data_clob_);
   
   rec_.date_modified := sysdate;
   rec_.rowversion := sysdate;
   rec_.rowkey := sys_guid();
   INSERT INTO fnd_branding_resource_tab VALUES rec_;
END Insert_Test_Resource___;


PROCEDURE Remove_Test_Data___
IS
   resource_logo_light_ CLOB;
   resource_logo_dark_ CLOB;
   resource_font_ CLOB;
BEGIN
   DELETE FROM fnd_branding_tab WHERE code = '-100199';
   DELETE FROM fnd_branding_tab WHERE code = '-100299';
   
   DELETE FROM fnd_branding_property_tab WHERE code = '-100199';
   DELETE FROM fnd_branding_property_tab WHERE code = '-100299';
   
   DELETE FROM fnd_branding_resource_tab WHERE file_name = 'logo-wide-global-light-210726-112122.png';
   DELETE FROM fnd_branding_resource_tab WHERE file_name = 'logo-wide-global-dark-210726-112122.png';
   DELETE FROM fnd_branding_resource_tab WHERE file_name = 'custom-font-210726-127422.woff2';
   
END Remove_Test_Data___;
