--------------------------------------------------------------------------------------------
--
--  Date    Sign    History
--  ------  ------  -----------------------------------------------------------
--  021121  HAAR    Export file for method DATABASE_SYS.EXECUTE_ANALYZE_SCHEMA__
--                  and FND_MONITOR_ENTRY_API.PERFORM_MONITORING__.
--  021211  HAAR    Minor chages for translations (ToDo#4146).
--  021212  HAAR    Added all Foundation1 background jobs (ToDo#4190).
--  021212  HAAR    Export file for method GENERAL_SYS.FND_HEAVY_CLEANUP_.
--  021212  HAAR    Export file for method GENERAL_SYS.FND_LIGHT_CLEANUP_.
--  021217  HAAR    Export file for method DATABASE_SYS.REBUILD_INDEXES__.
--  021217  HAAR    Export file for method DATABASE_SYS.VALIDATE_INDEXES__.
--  030221  ROOD    Changed module from FNDSER to FNDBAS (ToDo#4149).
--  030317  ROOD    Moved Cleanup methods to Batch_SYS (ToDo#4143).
--  030509  HAAR    Added commit in script (ToDo#4261).
--  031106  ROOD    Added basic data translations for Cleanup methods.
--  040305  HAAR    Export file for method SCHEDULED_REPORT_API.RUN__ (Bug#39376).
--  040311  HAAR    Added check for not Autostarting to many jobs.
--  041014  ROOD    Replaced SCHEDULED_REPORT_API.RUN__ with ARCHIVE_API.CREATE_AND_PRINT_REPORT__ (F1PR419).
--  041230  HAAR    Export file for method SERVER_LOG_UTILITY_API.TRANSFER_AUDIT_RECORDS_ (F1PR480).
--  051014  HAAR    Export file for task DATABASE_SYS.EXECUTE_ANALYZE_OTHERS__ (F1PR480).
--  060810  UTGULK  Added new batch schedule method parameter-EXTERNAL_ARCHIVE_ATTR. (Bug#59182).
--  070104  HAAR    Added new batch schedules for Application Search (F1PR458).
--  070927  HAAR    Added new batch schedule for Enable Search Domain (Bug#67990).
--  070917  RISRLK  Added Business Analytics schedule tasks
--  080415  HAARSE  Added task for Timespanned Users (Bug#73104).
--  080514  UTGULK  Added new batch schedule for clean up of materialized view logs. (Bug#73954).
--  080627  LALISE  Modified number of days between cleanups to 5 for method CLEANUP_SYSTEM_TEMPLATES__ (Bug#75132)
--  080724  HADILK  Removed the scheduling of clean up of materialized view logs temporarily (Bug#75958)
--  080630  HAAR    Added support for Scheduled Task Sequences (Bug#72846).
--  090126  HAAR    Added missing code (Bug#80045).
--  090714  RISRLK  Added new schedule task XLR_MV_REFRESH_CATEGORY_API.REFRESH_MV_CATEGORIES (Bug#77385)
--  100315  DUWILK  Added new schdule task to Shrink Lob Segments (Bug#87984).
--  100318  HAAR    Added new schedule task Server_Log_Utility_API.Alert_Log_Errors (EACS-433).
--  100306  DUWILK  Added method to Refresh Cache for Segregation of Duties.(Bug#84256)
--  100422  NaBaLK  Added method to Cleanup Structure Data (Bug#90097)
--  100927  SJayLK  Added new scheduled task BI_TIME_DIMENSION_API.GENERATE_TIME_DATA_SCHEDULE (Bug#93211)
--  111223  MaBoSE  Added new schedule for cleanup of InstallTemSys logs
--  130304  KrGuSE  Added two required parameters to DATABASE_SYS.VALIDATE_INDEXES__ (Bug #108184)
--  131219  SJayLK  Removed BI Methods
--  140923  WaWiLK  Added new schedule for Streams cleanup (TEBASE-612)
--  140929  MADRSE  Added new database task for releasing of application messages
--  141001  MADDLK  Added Exported file for task APPLICATION_MSG_STATISTICS_API.FORWARD_STATISTICS.(TEBASE-581)

--------------------------------------------------------------------------------------------
SET SERVEROUTPUT ON

PROMPT Remove unused methods
BEGIN
   Batch_SYS.Remove_Step_F_Batch_Sch_Chain(Batch_Schedule_Method_API.Get_Schedule_Method_Id('Fnd_Session_API.Cleanup_'));
EXCEPTION
   WHEN OTHERS THEN
      NULL;
END;
/
BEGIN
   Batch_SYS.Remove_Batch_Schedule_Method('Fnd_Session_API.Cleanup_');
EXCEPTION
   WHEN OTHERS THEN
      NULL;
END;
/

PROMPT Register Batch Schedule Method "DATABASE_SYS.EXECUTE_ANALYZE_SCHEMA__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'DATABASE_SYS.EXECUTE_ANALYZE_SCHEMA__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Gather Statistics');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'ATTRIBUTE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
-- Adding parameters
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'METHOD', 'AUTOMATIC','TRUE');
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'SCHEMA', '','FALSE');
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'ESTIMATE_PERCENT', '','FALSE');
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'APPOWNER', 'TRUE','TRUE');
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'DICTIONARY', 'FALSE','TRUE');
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'FIXED_OBJECTS', 'FALSE','FALSE');
END;
/

PROMPT Register Batch Schedule Method "DATABASE_SYS.COMPILE_ALL_INVALID_OBJECTS"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'DATABASE_SYS.COMPILE_ALL_INVALID_OBJECTS');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Compile invalid Materialized views');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'TRUE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'PARAMETER');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
-- Adding parameters
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'OBJECT_TYPE_', 'MATERIALIZED VIEW', 'TRUE', NULL);
END;
/

/*
PROMPT Register Batch Schedule Method "DATABASE_SYS.EXECUTE_ANALYZE_OTHERS__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'DATABASE_SYS.EXECUTE_ANALYZE_OTHERS__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Analyze System Statistics and Fixed objects');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'TRUE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'PARAMETER');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
-- Adding parameters
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'SYSTEM_', 'TRUE', 'TRUE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'STATIC_', 'TRUE', 'TRUE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'INTERVAL_', 30, 'TRUE', NULL);
END;
/
*/

PROMPT Register Batch Schedule Method "FND_MONITOR_ENTRY_API.PERFORM_MONITORING__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'FND_MONITOR_ENTRY_API.PERFORM_MONITORING__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Foundation1 Monitoring');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'TRUE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
-- Adding parameters
END;
/

PROMPT Register Batch Schedule Method "BATCH_SYS.FND_HEAVY_CLEANUP_"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'BATCH_SYS.FND_HEAVY_CLEANUP_');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Heavy Cleanup');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'TRUE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
-- Adding parameters
END;
/

PROMPT Register Batch Schedule Method "BATCH_SYS.FND_LIGHT_CLEANUP_"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'BATCH_SYS.FND_LIGHT_CLEANUP_');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Light Cleanup');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'TRUE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
-- Adding parameters
END;
/

PROMPT Register Batch Schedule Method "DATABASE_SYS.REBUILD_INDEXES__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'DATABASE_SYS.REBUILD_INDEXES__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Rebuild indexes');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'TRUE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'PARAMETER');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
-- Adding parameters
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'PERCENT_DELETED_', '20','TRUE');
END;
/


PROMPT Register Batch Schedule Method "DATABASE_SYS.VALIDATE_INDEXES__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'DATABASE_SYS.VALIDATE_INDEXES__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Validate indexes');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'TRUE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'PARAMETER');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_DAY_DB', 'FALSE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
-- Adding parameters
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'MAX_ATTEMPTS_', 5, 'TRUE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'SLEEP_BEFORE_RETRY_SECONDS_', 10, 'TRUE', NULL);
END;
/

PROMPT Register Batch Schedule Method "ARCHIVE_API.CREATE_AND_PRINT_REPORT__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'ARCHIVE_API.CREATE_AND_PRINT_REPORT__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Scheduled Reports');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'MESSAGE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
-- Adding parameters
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'REPORT_ATTR', '','TRUE');
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'PARAMETER_ATTR', '','TRUE');
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'MESSAGE_ATTR', '','TRUE');
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'ARCHIVING_ATTR', '','TRUE');
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'DISTRIBUTION_LIST', '','TRUE');
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'EXTERNAL_ARCHIVE_ATTR', '','FALSE');
END;
/

PROMPT Register Batch Schedule Method "OBJECT_CONNECTION_SYS.REMOVE_DANGLING_CONNECTIONS_"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'OBJECT_CONNECTION_SYS.REMOVE_DANGLING_CONNECTIONS_');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Remove Dangling Object Connections');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'TRUE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
-- Adding parameters
END;
/

PROMPT Register Batch Schedule Method "SECURITY_SYS.VALIDATE_TIMESPAN_FOR_USERS__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'SECURITY_SYS.VALIDATE_TIMESPAN_FOR_USERS__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Validate Timespan For Users');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
-- Adding parameters
END;
/

PROMPT Register Batch Schedule Method "BATCH_SCHEDULE_CHAIN_API.RUN_BATCH_SCHEDULE_CHAIN__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'BATCH_SCHEDULE_CHAIN_API.RUN_BATCH_SCHEDULE_CHAIN__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Scheduled Chains');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'PARAMETER');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
-- Adding parameters
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'SCHEDULE_ID_', to_number(NULL), 'TRUE', NULL);
END;
/

PROMPT Register Batch Schedule Method "SECURITY_SYS.CLEANUP__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'SECURITY_SYS.CLEANUP__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Cleanup of Security Cache');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
END;
/


PROMPT Register Batch Schedule Method "DATABASE_SYS.ENABLE_ROWKEY"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'DATABASE_SYS.ENABLE_ROWKEY');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Enables rowkey for one Logical Unit');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'PARAMETER');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
-- Adding parameters
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'LU_', to_char(NULL), 'TRUE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'ONLINE_', to_char(NULL), 'FALSE', '''TRUE''');
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'EXECUTION_DATE_', to_date(NULL), 'FALSE', 'SYSDATE');
END;
/


------------------------------------------------------------------------------------------
-- Methods for Fnd_Heavy_Cleanup and Fnd_Light_Cleanup
------------------------------------------------------------------------------------------
PROMPT Register Batch Schedule Method "BATCH_SYS.CLEANUP__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'BATCH_SYS.CLEANUP__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Batch Job cleanup');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
END;
/

PROMPT Register Batch Schedule Method "PRINT_JOB_API.CLEANUP__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'PRINT_JOB_API.CLEANUP__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Print Job cleanup');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
END;
/

PROMPT Register Batch Schedule Method "ARCHIVE_API.CLEANUP__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'ARCHIVE_API.CLEANUP__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Archive cleanup');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
END;
/

PROMPT Register Batch Schedule Method "HISTORY_LOG_UTIL_API.CLEANUP__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'HISTORY_LOG_UTIL_API.CLEANUP__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'History cleanup');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
END;
/

PROMPT Register Batch Schedule Method "BATCH_SCHEDULE_API.CLEANUP__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'BATCH_SCHEDULE_API.CLEANUP__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Scheduled Task cleanup');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
END;
/


PROMPT Register Batch Schedule Method "SEC_CHECKPOINT_LOG_API.CLEANUP__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'SEC_CHECKPOINT_LOG_API.CLEANUP__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Security Checkpoint cleanup');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
END;
/

PROMPT Register Batch Schedule Method "SERVER_LOG_UTILITY_API.CLEANUP__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'SERVER_LOG_UTILITY_API.CLEANUP__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Server Log cleanup');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
END;
/

PROMPT Register Batch Schedule Method "INSTALL_TEM_SYS.CLEANUP__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'INSTALL_TEM_SYS.CLEANUP__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Install Tem Log cleanup');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
END;
/

PROMPT Register Batch Schedule Method "TRANSACTION_SYS.CLEANUP__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'TRANSACTION_SYS.CLEANUP__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Background Job cleanup');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
END;
/

PROMPT Register Batch Schedule Method "CONNECTIVITY_SYS.CLEANUP__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'CONNECTIVITY_SYS.CLEANUP__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Connectivity cleanup');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
END;
/

PROMPT Register Batch Schedule Method "IAL_OBJECT_UTIL_API.INITIATE_REPLICATION__"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'IAL_OBJECT_UTIL_API.INITIATE_REPLICATION__');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Scheduled IAL Replication');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
END;
/

PROMPT Register Batch Schedule Method "FND_OBJ_SUBSCRIPTION_UTIL_API.CLEANUP_SUBSCRIPTIONS_"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'FND_OBJ_SUBSCRIPTION_UTIL_API.CLEANUP_SUBSCRIPTIONS_');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Cleanup Streams Subscriptions');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_DAY_DB', 'FALSE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
END;
/

PROMPT Register Batch Schedule Method "APPLICATION_MSG_STATISTICS_API.FORWARD_STATISTICS"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'APPLICATION_MSG_STATISTICS_API.FORWARD_STATISTICS');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Forward Application Message Statistics');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'TRUE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_DAY_DB', 'FALSE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
-- Adding parameters
END;
/

------------------------------------------------------------------------------------------
-- Register Chains
------------------------------------------------------------------------------------------
PROMPT Register Batch Schedule Chain "Foundation1 Heavy Cleanup"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   step_no_            NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
   -- Construct Main Message
   info_msg_ := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Foundation1 Heavy Cleanup');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   -- Register Batch Schedule Chain
   Batch_SYS.Register_Batch_Schedule_Chain(schedule_method_id_, info_msg_);
   -- Adding Sequences
   -- Construct Main Message
   info_msg_ := Message_SYS.Construct('');
   step_no_  := 10;
   Message_SYS.Add_Attribute(info_msg_, 'BREAK_ON_ERROR_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'PRINT_JOB_API.CLEANUP__');
   Batch_SYS.Register_Schedule_Chain_Step(schedule_method_id_, step_no_, info_msg_);
   -- Construct Main Message
   info_msg_ := Message_SYS.Construct('');
   step_no_  := 20;
   Message_SYS.Add_Attribute(info_msg_, 'BREAK_ON_ERROR_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'ARCHIVE_API.CLEANUP__');
   Batch_SYS.Register_Schedule_Chain_Step(schedule_method_id_, step_no_, info_msg_);
   -- Construct Main Message
   info_msg_ := Message_SYS.Construct('');
   step_no_  := 30;
   Message_SYS.Add_Attribute(info_msg_, 'BREAK_ON_ERROR_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'HISTORY_LOG_UTIL_API.CLEANUP__');
   Batch_SYS.Register_Schedule_Chain_Step(schedule_method_id_, step_no_, info_msg_);
   -- Construct Main Message
   info_msg_ := Message_SYS.Construct('');
   step_no_  := 40;
   Message_SYS.Add_Attribute(info_msg_, 'BREAK_ON_ERROR_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'BATCH_SCHEDULE_API.CLEANUP__');
   Batch_SYS.Register_Schedule_Chain_Step(schedule_method_id_, step_no_, info_msg_);
   -- Construct Main Message
   info_msg_ := Message_SYS.Construct('');
   step_no_  := 60;
   Message_SYS.Add_Attribute(info_msg_, 'BREAK_ON_ERROR_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'SEC_CHECKPOINT_LOG_API.CLEANUP__');
   Batch_SYS.Register_Schedule_Chain_Step(schedule_method_id_, step_no_, info_msg_);
   -- Construct Main Message
   info_msg_ := Message_SYS.Construct('');
   step_no_  := 70;
   Message_SYS.Add_Attribute(info_msg_, 'BREAK_ON_ERROR_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'SERVER_LOG_UTILITY_API.CLEANUP__');
   Batch_SYS.Register_Schedule_Chain_Step(schedule_method_id_, step_no_, info_msg_);
   -- Construct Main Message
   info_msg_ := Message_SYS.Construct('');
   step_no_  := 80;
   Message_SYS.Add_Attribute(info_msg_, 'BREAK_ON_ERROR_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'SECURITY_SYS.CLEANUP__');
   Batch_SYS.Register_Schedule_Chain_Step(schedule_method_id_, step_no_, info_msg_);
END;
/

PROMPT Register Batch Schedule Chain "Foundation1 Light Cleanup"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   step_no_            NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
   -- Construct Main Message
   info_msg_ := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Foundation1 Light Cleanup');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   -- Register Batch Schedule Chain
   Batch_SYS.Register_Batch_Schedule_Chain(schedule_method_id_, info_msg_);
   -- Adding Sequences
   -- Construct Main Message
   info_msg_ := Message_SYS.Construct('');
   step_no_  := 10;
   Message_SYS.Add_Attribute(info_msg_, 'BREAK_ON_ERROR_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'TRANSACTION_SYS.CLEANUP__');
   Batch_SYS.Register_Schedule_Chain_Step(schedule_method_id_, step_no_, info_msg_);
   -- Construct Main Message
   info_msg_ := Message_SYS.Construct('');
   step_no_  := 30;
   Message_SYS.Add_Attribute(info_msg_, 'BREAK_ON_ERROR_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'CONNECTIVITY_SYS.CLEANUP__');
   Batch_SYS.Register_Schedule_Chain_Step(schedule_method_id_, step_no_, info_msg_);
   -- Construct Main Message
   info_msg_ := Message_SYS.Construct('');
   step_no_  := 40;
   Message_SYS.Add_Attribute(info_msg_, 'BREAK_ON_ERROR_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'IAL_OBJECT_UTIL_API.INITIATE_REPLICATION__');
   Batch_SYS.Register_Schedule_Chain_Step(schedule_method_id_, step_no_, info_msg_);
   -- Construct Main Message
   info_msg_ := Message_SYS.Construct('');
   step_no_  := 50;
   Message_SYS.Add_Attribute(info_msg_, 'BREAK_ON_ERROR_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'DATABASE_SYS.COMPILE_ALL_INVALID_OBJECTS');
   Batch_SYS.Register_Schedule_Chain_Step(schedule_method_id_, step_no_, info_msg_);
END;
/

------------------------------------------------------------------------------------------
-- Foundation1 Tasks (Autostarted)
------------------------------------------------------------------------------------------
PROMPT Autostart Schedule Tasks "BATCH_SYS.FND_LIGHT_CLEANUP_"
PROMPT Autostart Schedule Tasks "BATCH_SYS.FND_HEAVY_CLEANUP_"
PROMPT Autostart Schedule Tasks "SECURITY_SYS.VALIDATE_TIMESPAN_FOR_USERS__"
PROMPT Autostart Schedule Tasks "FND_OBJ_SUBSCRIPTION_UTIL_API.CLEANUP_SUBSCRIPTIONS_"
DECLARE

   PROCEDURE New_Batch_Schedule___ (
      method_name_     IN VARCHAR2,
      schedule_name_   IN VARCHAR2,
      execution_plan_  IN VARCHAR2,
      installation_id_ IN VARCHAR2,
      check_executing_ IN VARCHAR2 DEFAULT Fnd_Boolean_API.DB_FALSE )
   IS
      schedule_method_id_  NUMBER;
      schedule_id_         NUMBER;
      seq_no_              NUMBER;
      next_execution_date_ DATE;
      start_date_          DATE := sysdate;

      CURSOR get_method IS
         SELECT name, value
         FROM   batch_schedule_method_par_tab
         WHERE  schedule_method_id = Batch_Schedule_Method_API.Get_Schedule_Method_Id(method_name_);
   BEGIN
      Batch_SYS.Register_Batch_Schedule(schedule_id_,
                                   next_execution_date_,
                                   start_date_,
                                   null,
                                   schedule_name_,
                                   method_name_,
                                   'TRUE',
                                   execution_plan_,
                                   Nvl(Fnd_Session_API.Get_Language, 'en'),
                                   installation_id_,
                                   check_executing_);
      -- Add default values
      FOR rec IN get_method LOOP
         Batch_SYS.Register_Batch_Schedule_Param(seq_no_, schedule_id_, rec.name, rec.value);
      END LOOP;
   EXCEPTION
      WHEN others THEN
         NULL;
   END New_Batch_Schedule___;

   PROCEDURE Remove_Server_Process___ (
      method_name_ IN VARCHAR2 )
   IS
      job_   NUMBER;
      CURSOR get_job IS
      SELECT job
      FROM   user_jobs
      WHERE  UPPER(what) like '%'||method_name_||'%';
   BEGIN
      OPEN  get_job;
      FETCH get_job into job_;
      CLOSE get_job;
      dbms_job.remove(job_);
   EXCEPTION
      WHEN OTHERS THEN
         NULL;
   END Remove_Server_Process___;

BEGIN
   --
   ------------------------------------------------------------------------------------------
   -- Light and Heavy cleanup (moved from General_SYS to Batch_SYS from release 3.1.0.
   ------------------------------------------------------------------------------------------
   New_Batch_Schedule___('BATCH_SYS.FND_LIGHT_CLEANUP_', 'Light Cleanup', 'EVERY 00:10', 'Light Cleanup');
   Remove_Server_Process___('GENERAL_SYS.FND_LIGHT_CLEANUP_');
   New_Batch_Schedule___('BATCH_SYS.FND_HEAVY_CLEANUP_', 'Heavy Cleanup', 'DAILY AT 00:00', 'Heavy Cleanup');
   Remove_Server_Process___('GENERAL_SYS.FND_HEAVY_CLEANUP_');
   New_Batch_Schedule___('SECURITY_SYS.VALIDATE_TIMESPAN_FOR_USERS__', 'Validate Timespan For Users', 'DAILY AT 00:00', 'Validate Timespan For Users');
   New_Batch_Schedule___('FND_OBJ_SUBSCRIPTION_UTIL_API.CLEANUP_SUBSCRIPTIONS_', 'Cleanup Streams Subscriptions', 'DAILY AT 00:00', 'Cleanup Streams Subscriptions');
END;
/

PROMPT Register Batch Schedule Method "DATABASE_SYS.SHRINK_LOB_SEGMENTS"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
$IF Component_Entedition_SYS.INSTALLED $THEN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'DATABASE_SYS.SHRINK_LOB_SEGMENTS');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Shrink Lob Segments');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'PARAMETER');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_DAY_DB', 'FALSE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
-- Adding parameters
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'ALLOCATED_LOB_SIZE_', 1000, 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'RECLAIMED_SIZE_', 100, 'FALSE', NULL);
$ELSE
   NULL;
$END   
END;
/


PROMPT Register Batch Schedule Method "FUNC_AREA_CONFLICT_CACHE_API.Refresh_Cache"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'FUNC_AREA_CONFLICT_CACHE_API.REFRESH_CACHE');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Refresh Cache for Segregation of Duties');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'NONE');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
END;
/


PROMPT Register Batch Schedule Method "APP_MESSAGE_PROCESSING_API.RUN_APPLICATION_SERVER_TASK"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'APP_MESSAGE_PROCESSING_API.RUN_APPLICATION_SERVER_TASK');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Run Application Server Task');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'PARAMETER');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', '');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_EXECUTING_DB', 'TRUE');
   Message_SYS.Add_Attribute(info_msg_, 'CHECK_DAY_DB', 'FALSE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
-- Adding parameters
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'APPLICATION_MESSAGE_ID_', to_number(NULL), 'TRUE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'ONE_TIME_TASK_', to_char(NULL), 'TRUE', '''FALSE''');
END;
/

PROMPT Register Batch Schedule Method "Database_SYS.Rowkey_Update_"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'DATABASE_SYS.ROWKEY_UPDATE_');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Update of rowkey columns');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'FNDBAS');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'ATTRIBUTE');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
-- Adding parameters
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'CHUNK_SIZE', '','TRUE', '100000');
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'PARALLEL', '','TRUE', '''Y''');
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'EXEC_TIME_HRS', '','TRUE', '1');
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'ALTER_TABLES', '','TRUE', '''N''');
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'ONLY_PRIO_TABLES', '','TRUE', '''Y''');
END;
/

COMMIT
/

