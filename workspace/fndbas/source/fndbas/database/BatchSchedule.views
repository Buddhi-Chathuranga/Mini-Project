-----------------------------------------------------------------------------
--
--  Logical unit: BatchSchedule
--  Component:    FNDBAS
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------

VIEW Batch_Schedule_Pub IS
   Prompt = 'Batch Schedule'
   Start_Date.Flags = 'A-IU-'
SELECT schedule_id                             schedule_id,
       schedule_name                           schedule_name,
       Fnd_Boolean_API.Decode(active)          active,
       Batch_Schedule_Type_API.Decode(batch_schedule_type) batch_schedule_type,
       batch_schedule_type                     batch_schedule_type_db,
       active                                  active_db,
       execution_plan                          execution_plan,
       next_execution_date                     next_execution_date,
       last_execution_date                     last_execution_date,
       start_date                              start_date,
       stop_date                               stop_date,
       modified_date                           modified_date,
       username                                username,
       lang_code                               lang_code,
       executions                              executions,
       timed_executions                        timed_executions,
       execution_time                          execution_time,
       execution_time / CASE timed_executions WHEN 0 THEN 1 ELSE timed_executions END average_time,
       schedule_method_id                      schedule_method_id,
       decode(installation_id,
                 to_char(schedule_id),
                 NULL,
                    installation_id)           installation_id,
       Fnd_Boolean_API.Decode(check_executing) check_executing,
       check_executing                         check_executing_db,
       rowid                                   objid,
       TO_CHAR(rowversion,'YYYYMMDDHH24MISS')  objversion,
       rowkey                                  objkey
FROM   batch_schedule_tab
WHERE  ((Batch_Schedule_API.Is_Method_Po_Available__(Batch_Schedule_Method_API.Get_Method_Name(schedule_method_id), Batch_Schedule_Method_API.Get_Po_Id(schedule_method_id)) = 'TRUE') OR
        (Batch_Schedule_Chain_API.Is_Pres_Object_Available__(Batch_Schedule_Chain_API.Get_Po_Id(schedule_method_id))) = 'TRUE');


-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

@Override
VIEW Batch_Schedule IS
WHERE  ((Batch_Schedule_API.Is_Method_Po_Available__(Batch_Schedule_Method_API.Get_Method_Name(schedule_method_id), Batch_Schedule_Method_API.Get_Po_Id(schedule_method_id)) = 'TRUE') OR
        (Batch_Schedule_Chain_API.Is_Pres_Object_Available__(Batch_Schedule_Chain_API.Get_Po_Id(schedule_method_id))) = 'TRUE');

VIEW Batch_Schedule_Report IS
   Prompt = 'Batch Schedule_Report'
   Last_Execution_Date.Datatype = 'DATE/TIME'
   Report_Id.Flags = 'A----'
   Report_Id.Datatype = 'NUMBER'
   Report_Id.Prompt = 'Report Id'
   Report_Title.Flags = 'A----'
   Report_Title.Datatype = 'NUMBER'
   Report_Title.Prompt = 'Report Title'
SELECT b.schedule_id                    schedule_id,
       b.schedule_name                  schedule_name,
       Fnd_Boolean_API.Decode(b.active) active,
       b.active                         active_db,
       b.execution_plan                 execution_plan,
       b.next_execution_date            next_execution_date,
       b.last_execution_date            last_execution_date,
       b.modified_date                  modified_date,
       b.username                       username,
       b.schedule_method_id             schedule_method_id,
       b.start_date                     start_date,
       b.stop_date                      stop_date,
       b.lang_code                      lang_code,
       b.executions                     executions,
       decode(b.installation_id, to_char(b.schedule_id), NULL, b.installation_id) installation_id,
       b.external_id                    report_id,
       Batch_Schedule_Type_API.Decode(batch_schedule_type) batch_schedule_type,
       batch_schedule_type              batch_schedule_type_db,
       r.report_title                   report_title,
       Fnd_Boolean_API.Decode(b.check_executing) check_executing,
       b.check_executing                check_executing_db,
       b.rowkey                         objkey
FROM   batch_schedule_tab b, TABLE(Report_Definition_API.Report_Definition__) r
WHERE  b.external_id   = r.report_id;

VIEW Batch_Schedule_Task IS
   Prompt = 'Task Schedule'
   Schedule_Id.Prompt = 'Schedule ID'
   Schedule_Name.Flags = 'A---L'
   Active_Db.Flags = 'A---L'
   Execution_Plan.Flags = 'A---L'
   Start_Date.Flags = 'A---L'
   Start_Date.Datatype = 'DATE/DATETIME'
   Next_Execution_Date.Flags = 'A---L'
   Next_Execution_Date.Datatype = 'DATE/DATETIME'
   Modified_Date.Flags = 'A---L'
   Modified_Date.Datatype = 'DATE/DATETIME'
   Lang_Code.Flags = 'A---L'
   Executions.Flags = 'A---L'
   Task_Name.Flags = 'A---L'
   Task_Name.Datatype = 'STRING(200)'
   Task_Name.Prompt = 'Task Name'
   Module.Flags = 'A---L'
   Module.Datatype = 'STRING(6)/UPPERCASE'
   Module.Prompt = 'Module'
   End_Date.Flags = 'A---L'
   End_Date.Datatype = 'DATE/DATETIME'
   End_Date.Prompt = 'End Date'
   Scheduled_By.Flags = 'A---L'
   Scheduled_By.Datatype = 'STRING(30)/UPPERCASE'
   Scheduled_By.Prompt = 'Scheduled By'
SELECT sch.schedule_id                            schedule_id,
       sch.schedule_name                          schedule_name,
       sm.description                             task_name,
       sm.module                                  module,
       sch.active                                 active_db,
       sch.execution_plan                         execution_plan,
       sch.start_date                             start_date,
       sch.stop_date                              end_date,
       sch.next_execution_date                    next_execution_date,
       sch.username                               scheduled_by,
       sch.modified_date                          modified_date,
       sch.lang_code                              lang_code,
       sch.executions                             executions,
       sch.rowkey                                 objkey,
       to_char(sch.rowversion,'YYYYMMDDHH24MISS') objversion,
       sch.rowid                                  objid
  FROM batch_schedule_tab        sch,
       batch_schedule_method_tab sm
WHERE (sch.schedule_method_id  = sm.schedule_method_id)
  AND (sch.batch_schedule_type = 'TASK');

