---------------------------------------------------------------------------------------------
--  Module : FNDBAS
--
--  Purpose: Upgrade database objects for IFS Base Functionality
--           from version 21.1.0 to 21.2.0
--
--  File   : 2120.upg
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  ------------------------------------------------------------------------
--  210331   rakuse  Created.
--  210416   rakuse  Changes to FND_CLIENT_HOMEPAGE_TAB.
--  210419   rakuse  Dropping QUICK_REPORT_VARIABLES_TAB (EXPFWCG-49).
--  210505   rakuse  Added OBJECT_CONNECTION_LANGUAGE_TAB (TEAURENAFW-5680).
--  210617   lgunlk  Updated BPMN_PROCESS_TAB & BPMN_VERSION_TAB with existing Workflows in BPA_MODEL_STAGE_TAB (TEWF-398)
--  210622   lgunlk  Dropping BPA_DIAGRAM_TAB/ BPA_DIAGRAM view/ BPA_DIAGRAM_API|BPA_SERVICE_SVC packages/BPASERVICE projection (TEWF-390)
--  210705   rakuse  Added TIME_FORMAT system parameter (TEAURENAFW-5980).
--  210719   kadalk  Moved URL_EXT_SERVER to FndSetting.ins (TEAURENAFW-6184)
--  210721   lgunlk  Moved BPMN_PROCESS_TAB & BPMN_VERSION_TAB with existing Workflows in BPA_MODEL_STAGE_TAB into 'FNDWF' component(TEWF-450)
--  210721   lgunlk  Moved BPA_DIAGRAM_TAB/ BPA_DIAGRAM view/ BPA_DIAGRAM_API|BPA_SERVICE_SVC packages/BPASERVICE projection into 'FNDWF' component(TEWF-450)
--  210722   lgunlk  Changed Database_SYS into Installation_SYS in Removing columns from OBJECT_CONNECTION_SYS_TAB
--  ------   ------  ------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SET SERVEROUTPUT ON
PROMPT START upgrading WITH 2120.upg

---------------------------------------------------------------------------------------------
------------------------------ Instructions for upg files -----------------------------------
---------------------------------------------------------------------------------------------
--
--  Main section should contain all upgrade operations.
--  Next section should contain removal of obsolete objects (any removal of data inside upg is prohibited!).
--  Removal of backup tables and obsolete columns should be added to <component>Cl.sql script!
--
--  If possible, everything regarding one table should be placed in one section.
--  If this is not possible, a proper comment about the reason should be added.
--
--  Each section should be started with a "-----" line and a empty line.
--  This section should then start with a line like: "-- ***** Example_Tab Start *****"
--  and end with a line like:                       "-- ***** Example_Tab End *****"
--
--  Don't forget UPPER/lower case !
--
--  Every part inside the section should start with a "PROMPT" line explaining what is done by the block.
--
--  If the PL/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.
--
--  Remember ordinary coding standard rules !
--
--  Don't drop any Table/Column !
--
--  Don't forget performance when updating large table !
--
--  No unnecessary blank lines or comments !
--
--  If possible, use pure SQL commands
--
--  If possible, try to group several updates together in one statement.
--
--  Timestamps will be added automatically at the end of the project.
--
--  For more information refer to the "Upgrade Script Standards" and the "Performance" technical documents.
--
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES -----------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
--------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ------------------
---------------------------------------------------------------------------------------------

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Started');

PROMPT Code generator tables changes

PROMPT Adding ROWKEY and SCHEMA_VERSION to FND_MODEL_DESIGN_DATA_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'FND_MODEL_DESIGN_DATA_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);   
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Set_Table_Column(columns_, 'SCHEMA_VERSION', 'NUMBER', 'Y');   
   Installation_SYS.Alter_Table(table_name_, columns_, TRUE);   
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'FND_MODEL_DESIGN_DATA_RK';
   table_name_ VARCHAR2(30) := 'FND_MODEL_DESIGN_DATA_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_           VARCHAR2(30) := 'FND_MODEL_DESIGN_UX';
   obsolete_index_name_  VARCHAR2(30) := 'FND_MODEL_DESIGN_IX';
   table_name_           VARCHAR2(30) := 'FND_MODEL_DESIGN_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   IF Installation_SYS.Index_Exist(obsolete_index_name_) THEN
      Installation_SYS.Remove_Indexes(table_name_, obsolete_index_name_, TRUE);
   END IF;
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'NAME');
   Installation_SYS.Set_Table_Column(columns_, 'ARTIFACT');
   Installation_SYS.Set_Table_Column(columns_, 'KIND');
   Installation_SYS.Create_Index(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Removing ENTITY_CONNECTIONS from FND_MODEL_DESIGN_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'FND_MODEL_DESIGN_TAB';
   column_    Installation_SYS.ColRec;
BEGIN
   column_ := Installation_SYS.Set_Column_Values('ENTITY_CONNECTIONS');
   Installation_SYS.Alter_Table_Column(table_name_, 'DROP COLUMN', column_);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Changing datatype for VERSION in FND_MODEL_DESIGN_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'FND_MODEL_DESIGN_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'VERSION', 'TIMESTAMP(6)', 'N');
   Installation_SYS.Alter_Table(table_name_, columns_, TRUE);   
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'FND_MODEL_API_DOC_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'MODEL_ID', 'VARCHAR2(250)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(2000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'NAME', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'VERSION', 'TIMESTAMP(6)', 'N');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   
   column_ := Installation_SYS.Set_Column_Values('TEMPLATE', 'CLOB', 'Y', NULL, 'LOB (TEMPLATE) STORE AS (TABLESPACE &IFSAPP_LOB CHUNK 4096 ENABLE STORAGE IN ROW)');
   Installation_SYS.Add_Lob_Column(table_name_, column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'FND_MODEL_API_DOC_PK';
   table_name_ VARCHAR2(30) := 'FND_MODEL_API_DOC_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'MODEL_ID');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Removing table FND_OBJECT_CONNECTION_DATA_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   
BEGIN
   Installation_SYS.Remove_Table('FND_OBJECT_CONNECTION_DATA_TAB', TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_1');

PROMPT Create table CUSTOM_CONNECTOR_LIBRARY_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   column_       Installation_SYS.colRec;
   table_name_    VARCHAR2(30) := 'CUSTOM_CONNECTOR_LIBRARY_TAB';
BEGIN 
    Installation_SYS.Rename_Column (table_name_,'INSTANCE_NAME','CUSTOM_INSTANCE_TYPE',FALSE,FALSE);
    
    column_ := Installation_SYS.Set_Column_Values ('JAR_NAME', 'VARCHAR2(200)', 'N');
    Installation_SYS.Alter_Table_Column (table_name_, 'A', column_, TRUE);
    
    column_ := Installation_SYS.Set_Column_Values('JAR_FILE', 'BLOB', 'N');
    Installation_SYS.Alter_Lob_Column(table_name_, column_, TRUE);
    Installation_SYS.Alter_Table_Column (table_name_, 'M', column_, TRUE);
    
    column_ := Installation_SYS.Set_Column_Values ('DESCRIPTION');
    Installation_SYS.Alter_Table_Column (table_name_, 'D', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'CUSTOM_CONNECTOR_LIBRARY_PK';
   table_name_ VARCHAR2(30) := 'CUSTOM_CONNECTOR_LIBRARY_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'GROUP_NAME');
   Installation_SYS.Set_Table_Column(columns_, 'INSTANCE_NAME');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'CUSTOM_CONNECTOR_LIBRARY_RK';
   table_name_ VARCHAR2(30) := 'CUSTOM_CONNECTOR_LIBRARY_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_2');

PROMPT Create table CUSTOM_READER_PARAM_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'CUSTOM_READER_PARAM_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'INSTANCE_NAME', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'PARAMETER_NAME', 'VARCHAR2(30)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'PARAMETER_VALUE', 'VARCHAR2(30)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'CUSTOM_READER_PARAM_PK';
   table_name_ VARCHAR2(30) := 'CUSTOM_READER_PARAM_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'INSTANCE_NAME');
   Installation_SYS.Set_Table_Column(columns_, 'PARAMETER_NAME');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'CUSTOM_READER_PARAM_RK';
   table_name_ VARCHAR2(30) := 'CUSTOM_READER_PARAM_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_3');

PROMPT Create table CUSTOM_SENDER_PARAM_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'CUSTOM_SENDER_PARAM_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'INSTANCE_NAME', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'PARAMETER_NAME', 'VARCHAR2(30)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'PARAMETER_VALUE', 'VARCHAR2(30)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'CUSTOM_SENDER_PARAM_PK';
   table_name_ VARCHAR2(30) := 'CUSTOM_SENDER_PARAM_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'INSTANCE_NAME');
   Installation_SYS.Set_Table_Column(columns_, 'PARAMETER_NAME');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'CUSTOM_SENDER_PARAM_RK';
   table_name_ VARCHAR2(30) := 'CUSTOM_SENDER_PARAM_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_4');

PROMPT Updating ROUTING_RULE_XXX tables

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   column_   	  Installation_SYS.colRec;
   table_name_    VARCHAR2(30) := 'ROUTING_RULE_CONDITION_TAB';
BEGIN 
    column_ := Installation_SYS.Set_Column_Values ('OP', 'VARCHAR2(20)');
    Installation_SYS.Alter_Table_Column (table_name_, 'M', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   column_   	  Installation_SYS.colRec;
   table_name_    VARCHAR2(30) := 'ROUTING_RULE_TAB';
BEGIN 
    column_ := Installation_SYS.Set_Column_Values ('LOCATION_TYPE', 'VARCHAR2(20)');
    Installation_SYS.Alter_Table_Column (table_name_, 'M', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_5');

PROMPT Add columns SELECT_STATEMENT AND INDEX_COLUMNS TO table IAL_OBJECT_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   columns_    Installation_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'IAL_OBJECT_TAB';
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'INDEX_COLUMNS', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Alter_Table(table_name_, columns_, TRUE);
   
   column_ := Installation_SYS.Set_Column_Values('SELECT_STATEMENT', 'CLOB', 'Y', NULL, 'LOB (SELECT_STATEMENT) STORE AS (TABLESPACE &IFSAPP_LOB CHUNK 4096 ENABLE STORAGE IN ROW)');
   Installation_SYS.Add_Lob_Column(table_name_, column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT UPDATE SELECT_STATEMENT OF EXISTING IAL_OBJECTS IN IAL_OBJECT_TAB USING ALL_VIEWS

-- [IFS COMPLETE BLOCK BEGINEND]
BEGIN
   UPDATE ial_object_tab i
   SET    i.select_statement = (SELECT TO_LOB(a.text)
                                FROM   all_views a
                                WHERE  a.view_name = i.name || '_IAL'
                                AND    a.view_name LIKE '%\_IAL' ESCAPE '\'
                                AND    a.owner = '&IAL_OWNER')
   WHERE  select_statement IS NULL;

   UPDATE ial_object_tab 
   SET    select_statement = REGEXP_REPLACE(
                                            REGEXP_REPLACE(
                                                           REGEXP_REPLACE(select_statement, 
                                                                          '&APPLICATION_OWNER', CHR(38) || 'AO.', 1, 0, 'i'), 
                                                           '&IAL_OWNER', CHR(38) || 'IAL.', 1, 0, 'i'), 
                                                           '((WITH)(\s)+(READ)(\s)+(ONLY))', '', 1, 0, 'i');
   COMMIT;
EXCEPTION
   WHEN OTHERS THEN
      ROLLBACK;
      RAISE;
END;
-- [END IFS COMPLETE BLOCK]
/

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_6');

PROMPT Updating table ROUTING_ADDRESS_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   column1_   	  Installation_SYS.colRec;
   column2_   	  Installation_SYS.colRec;
   column3_   	  Installation_SYS.colRec;
   table_name_    VARCHAR2(30) := 'ROUTING_ADDRESS_TAB';
BEGIN 
    column1_ := Installation_SYS.Set_Column_Values ('CUSTOM_TYPE');
    Installation_SYS.Alter_Table_Column (table_name_, 'D', column1_, TRUE);
    column2_ := Installation_SYS.Set_Column_Values ('CUSTOM_LU_NAME');
    Installation_SYS.Alter_Table_Column (table_name_, 'D', column2_, TRUE);
    column3_ := Installation_SYS.Set_Column_Values ('CUSTOM_ADDRESS_DATA', 'VARCHAR2(2000)', 'Y');
    Installation_SYS.Alter_Table_Column (table_name_, 'A', column3_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_7');

PROMPT Drop obsolete BATCH_PROC_QUEUE queue tables _ADDRESS_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_table EXCEPTION;
   PRAGMA   EXCEPTION_INIT(no_table, -24002);
BEGIN
   Dbms_Aqadm.Drop_Queue_Table('BATCH_PROC_QUEUE_TAB', TRUE);
   Dbms_Aqadm.Drop_Queue_Table('BATCH_PROC_QUEUE_MAIN_TAB', TRUE);
EXCEPTION
      WHEN no_table THEN
         NULL;
      WHEN OTHERS THEN
         RAISE;
END;
-- [END IFS COMPLETE BLOCK]
/

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_8');

PROMPT Add new column DEFAULT_IDP and FROM_SCIM to FND_USER_TAB table

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'FND_USER_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN  
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'DEFAULT_IDP', 'VARCHAR2(5)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'FROM_SCIM', 'VARCHAR2(5)', 'Y');
   Installation_SYS.Alter_Table(table_name_, columns_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK BEGINEND]
BEGIN
   UPDATE FND_USER_TAB
   SET default_idp = NVL(default_idp,'TRUE'),
      from_scim = NVL(from_scim,'FALSE')
   WHERE default_idp IS NULL OR from_scim IS NULL;
   COMMIT;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'FND_USER_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN  
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'DEFAULT_IDP', 'VARCHAR2(5)', 'Y', '$DEFAULT_NULL$');
   Installation_SYS.Set_Table_Column(columns_, 'FROM_SCIM', 'VARCHAR2(5)', 'Y','$DEFAULT_NULL$');   
   Installation_SYS.Alter_Table(table_name_, columns_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_9');

PROMPT Remove obsolete montoring entries

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_table EXCEPTION;
   PRAGMA   EXCEPTION_INIT(no_table, -942);
BEGIN
   EXECUTE IMMEDIATE 'DELETE FROM fnd_monitor_entry_tab WHERE category_id IN (''PLSQLAP'', ''LICENSE'', ''APPLICATION_SEARCH'')';
EXCEPTION
   WHEN no_table THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_table EXCEPTION;
   PRAGMA   EXCEPTION_INIT(no_table, -942);
BEGIN
   EXECUTE IMMEDIATE 'DELETE FROM fnd_monitor_category_tab WHERE category_id IN (''PLSQLAP'', ''LICENSE'', ''APPLICATION_SEARCH'')';
EXCEPTION
   WHEN no_table THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_table EXCEPTION;
   PRAGMA   EXCEPTION_INIT(no_table, -942);
BEGIN
   EXECUTE IMMEDIATE 'DELETE FROM fnd_user_tab WHERE identity = ''IFSMONITORING''';
EXCEPTION
   WHEN no_table THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_table EXCEPTION;
   PRAGMA   EXCEPTION_INIT(no_table, -942);
BEGIN
   EXECUTE IMMEDIATE 'DELETE FROM fnd_user_pin_tab WHERE user_identity = ''IFSMONITORING''';
EXCEPTION
   WHEN no_table THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_table EXCEPTION;
   PRAGMA   EXCEPTION_INIT(no_table, -942);
BEGIN
   EXECUTE IMMEDIATE 'DELETE FROM fnd_user_pin_monitor_tab WHERE user_identity = ''IFSMONITORING''';
EXCEPTION
   WHEN no_table THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_table EXCEPTION;
   PRAGMA   EXCEPTION_INIT(no_table, -942);
BEGIN
   EXECUTE IMMEDIATE 'DELETE FROM fnd_role_tab WHERE role = ''FND_MONITORING''';
EXCEPTION
   WHEN no_table THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_table EXCEPTION;
   PRAGMA   EXCEPTION_INIT(no_table, -942);
BEGIN
   EXECUTE IMMEDIATE 'DELETE FROM fnd_user_role_tab WHERE role = ''FND_MONITORING''';
EXCEPTION
   WHEN no_table THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_table EXCEPTION;
   PRAGMA   EXCEPTION_INIT(no_table, -942);
BEGIN
   EXECUTE IMMEDIATE 'DELETE FROM fnd_grant_role_tab WHERE role = ''FND_MONITORING''';
EXCEPTION
   WHEN no_table THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_table EXCEPTION;
   PRAGMA   EXCEPTION_INIT(no_table, -942);
BEGIN
   EXECUTE IMMEDIATE 'DELETE FROM fnd_user_role_runtime_tab WHERE role = ''FND_MONITORING''';
EXCEPTION
   WHEN no_table THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_role EXCEPTION;
   PRAGMA  EXCEPTION_INIT(no_role, -1919);
BEGIN
   EXECUTE IMMEDIATE 'DROP ROLE FND_MONITORING';
EXCEPTION
   WHEN no_role THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

COMMIT;

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_11');

PROMPT Removing obsolete presentation objects

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   pres_object_type_ VARCHAR2(100) := 'WIN';
BEGIN
   DELETE FROM pres_object_grant_tab t WHERE t.po_id IN (
      SELECT po.po_id FROM pres_object_tab po WHERE po.pres_object_type = pres_object_type_
   );

   DELETE FROM pres_object_build_tab t WHERE t.po_id IN (
      SELECT po.po_id FROM pres_object_tab po WHERE po.pres_object_type = pres_object_type_
   );

   DELETE FROM pres_object_change_tab t WHERE t.po_id IN (
      SELECT po.po_id FROM pres_object_tab po WHERE po.pres_object_type = pres_object_type_
   );

   DELETE FROM pres_object_dep_build_tab t
   WHERE t.from_po_id IN (
      SELECT po.po_id FROM pres_object_tab po WHERE po.pres_object_type = pres_object_type_
   ) OR t.to_po_id IN (
      SELECT po.po_id FROM pres_object_tab po WHERE po.pres_object_type = pres_object_type_
   );

   DELETE FROM pres_object_dep_change_tab t
   where t.from_po_id in (
      select po.po_id from pres_object_tab po where po.pres_object_type = pres_object_type_
   ) or t.to_po_id in (
      select po.po_id from pres_object_tab po where po.pres_object_type = pres_object_type_
   );

   DELETE FROM pres_object_dependency_tab t
   WHERE t.from_po_id IN (
      SELECT po.po_id FROM pres_object_tab po WHERE po.pres_object_type = pres_object_type_
   ) OR t.to_po_id IN (
      SELECT po.po_id FROM pres_object_tab po WHERE po.pres_object_type = pres_object_type_
   );

   DELETE FROM pres_object_description_tab t WHERE t.po_id IN (
      SELECT po.po_id FROM pres_object_tab po WHERE po.pres_object_type = pres_object_type_
   );

   DELETE FROM pres_object_exclude_tab t WHERE t.po_id IN (
      SELECT po.po_id FROM pres_object_tab po WHERE po.pres_object_type = pres_object_type_
   );

   DELETE FROM pres_object_include_tab t WHERE t.po_id IN (
      SELECT po.po_id FROM pres_object_tab po WHERE po.pres_object_type = pres_object_type_
   );

   DELETE FROM pres_object_include_sec_tab t WHERE t.po_id IN (
      SELECT po.po_id FROM pres_object_tab po WHERE po.pres_object_type = pres_object_type_
   );

   DELETE FROM pres_object_sec_change_tab t WHERE t.po_id IN (
      SELECT po.po_id FROM pres_object_tab po WHERE po.pres_object_type = pres_object_type_
   );

   DELETE FROM pres_object_security_tab t WHERE t.po_id IN (
      SELECT po.po_id FROM pres_object_tab po WHERE po.pres_object_type = pres_object_type_
   );

   DELETE FROM pres_object_security_build_tab t WHERE t.po_id IN (
      SELECT po.po_id FROM pres_object_tab po WHERE po.pres_object_type = pres_object_type_
   );

   DELETE FROM pres_object_tab po WHERE po.pres_object_type = pres_object_type_;
END;
-- [END IFS COMPLETE BLOCK]
/

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_12');

PROMPT Remove obsolete role FND_ENDUSER

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_table EXCEPTION;
   PRAGMA   EXCEPTION_INIT(no_table, -942);
BEGIN
   EXECUTE IMMEDIATE 'DELETE FROM fnd_role_tab WHERE role = ''FND_ENDUSER''';
EXCEPTION
   WHEN no_table THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_table EXCEPTION;
   PRAGMA   EXCEPTION_INIT(no_table, -942);
BEGIN
   EXECUTE IMMEDIATE 'DELETE FROM fnd_user_role_tab WHERE role = ''FND_ENDUSER''';
EXCEPTION
   WHEN no_table THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_table EXCEPTION;
   PRAGMA   EXCEPTION_INIT(no_table, -942);
BEGIN
   EXECUTE IMMEDIATE 'DELETE FROM fnd_grant_role_tab WHERE role = ''FND_ENDUSER''';
EXCEPTION
   WHEN no_table THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_table EXCEPTION;
   PRAGMA   EXCEPTION_INIT(no_table, -942);
BEGIN
   EXECUTE IMMEDIATE 'DELETE FROM fnd_user_role_runtime_tab WHERE role = ''FND_ENDUSER''';
EXCEPTION
   WHEN no_table THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_role EXCEPTION;
   PRAGMA  EXCEPTION_INIT(no_role, -1919);
BEGIN
   EXECUTE IMMEDIATE 'DROP ROLE FND_ENDUSER';
EXCEPTION
   WHEN no_role THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Remove obsolete role FND_RUNTIME

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_table EXCEPTION;
   PRAGMA   EXCEPTION_INIT(no_table, -942);
BEGIN
   EXECUTE IMMEDIATE 'DELETE FROM fnd_role_tab WHERE role = ''FND_RUNTIME''';
EXCEPTION
   WHEN no_table THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_table EXCEPTION;
   PRAGMA   EXCEPTION_INIT(no_table, -942);
BEGIN
   EXECUTE IMMEDIATE 'DELETE FROM fnd_user_role_tab WHERE role = ''FND_RUNTIME''';
EXCEPTION
   WHEN no_table THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_table EXCEPTION;
   PRAGMA   EXCEPTION_INIT(no_table, -942);
BEGIN
   EXECUTE IMMEDIATE 'DELETE FROM fnd_grant_role_tab WHERE role = ''FND_RUNTIME''';
EXCEPTION
   WHEN no_table THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_table EXCEPTION;
   PRAGMA   EXCEPTION_INIT(no_table, -942);
BEGIN
   EXECUTE IMMEDIATE 'DELETE FROM fnd_user_role_runtime_tab WHERE role = ''FND_RUNTIME''';
EXCEPTION
   WHEN no_table THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_role EXCEPTION;
   PRAGMA  EXCEPTION_INIT(no_role, -1919);
BEGIN
   EXECUTE IMMEDIATE 'DROP ROLE FND_RUNTIME';
EXCEPTION
   WHEN no_role THEN
      NULL;
END;
-- [END IFS COMPLETE BLOCK]
/

COMMIT;

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_13');

PROMPT Create table CLIENT_NOTIFY_NODE_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'CLIENT_NOTIFY_NODE_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'NODE_ID', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'NODE_NAME', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'NODE_GROUP', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'CREATED_TIMESTAMP', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'TIMESTAMP', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'LOAD_FACTOR', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'NUMBER', 'N');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'CLIENT_NOTIFY_NODE_PK';
   table_name_ VARCHAR2(30) := 'CLIENT_NOTIFY_NODE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'NODE_ID');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   sequence_name_ VARCHAR2(30) := 'CLIENT_NOTIFY_QUEUE_SEQ';
BEGIN
   Installation_SYS.Create_Sequence(sequence_name_, 'START WITH 1', TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Create table CLIENT_NOTIFY_QUEUE_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'CLIENT_NOTIFY_QUEUE_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'MESSAGE_SEQ_NO', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'TIMESTAMP', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'MESSAGE_GROUP', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'METHOD', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'METHOD_REFERENCE', 'VARCHAR2(2000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'NUMBER', 'N');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'CLIENT_NOTIFY_QUEUE_PK';
   table_name_ VARCHAR2(30) := 'CLIENT_NOTIFY_QUEUE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'MESSAGE_SEQ_NO');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_  VARCHAR2(30) := 'CLIENT_NOTIFY_QUEUE_SENT_TAB';
   index_name_  VARCHAR2(30) := 'CLIENT_NOTIFY_QUEUE_SENT_PK';
   index_name2_ VARCHAR2(30) := 'CLIENT_NOTIFY_QUEUE_SENT_IX';
   index_name3_ VARCHAR2(30) := 'CLIENT_NOTIFY_QUEUE_SENTN_IX';
   fk_name_     VARCHAR2(30) := 'CLIENT_NOTIFY_QUEUE_SM_FK';
   fk_name2_    VARCHAR2(30) := 'CLIENT_NOTIFY_QUEUE_SN_FK';
   node_name_   VARCHAR2(30) := 'NODE_ID';
   mess_name_   VARCHAR2(30) := 'MESSAGE_SEQ_NO';
   columns_     Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, node_name_, 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, mess_name_, 'NUMBER', 'N');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, node_name_);
   Installation_SYS.Set_Table_Column(columns_, mess_name_);
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, mess_name_);
   Installation_SYS.Create_Index(table_name_, index_name2_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, node_name_);
   Installation_SYS.Create_Index(table_name_, index_name3_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, mess_name_);
   Installation_SYS.Create_Constraint(table_name_, fk_name_, columns_, 'F', NULL, NULL, TRUE, TRUE, FALSE,
      'REFERENCES CLIENT_NOTIFY_QUEUE_TAB(MESSAGE_SEQ_NO)','ON DELETE CASCADE');
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, node_name_);
   Installation_SYS.Create_Constraint(table_name_, fk_name2_, columns_, 'F', NULL, NULL, TRUE, TRUE, FALSE,
      'REFERENCES CLIENT_NOTIFY_NODE_TAB(NODE_ID)','ON DELETE CASCADE');
END;
-- [END IFS COMPLETE BLOCK]
/


-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_  VARCHAR2(30) := 'CLIENT_NOTIFY_QUEUE_PREREQ_TAB';
   index_name_  VARCHAR2(30) := 'CLIENT_NOTIFY_QUEUE_PREREQ_PK';
   index_name2_ VARCHAR2(30) := 'CLIENT_NOTIFY_QUEUE_PREREQ_IX';
   index_name3_ VARCHAR2(30) := 'CLIENT_NOTIFY_QUEUE_PREREQ2_IX';
   fk_name_     VARCHAR2(30) := 'CLIENT_NOTIFY_QUEUE_PM_FK';
   fk_name2_    VARCHAR2(30) := 'CLIENT_NOTIFY_QUEUE_PM2_FK';
   mess_name_   VARCHAR2(30) := 'MESSAGE_SEQ_NO';
   prereq_name_ VARCHAR2(30) := 'PREREQ_SEQ_NO';
   columns_     Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, prereq_name_, 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, mess_name_, 'NUMBER', 'N');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, prereq_name_);
   Installation_SYS.Set_Table_Column(columns_, mess_name_);
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, mess_name_);
   Installation_SYS.Create_Index(table_name_, index_name2_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, prereq_name_);
   Installation_SYS.Create_Index(table_name_, index_name3_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, mess_name_);
   Installation_SYS.Create_Constraint(table_name_, fk_name_, columns_, 'F', NULL, NULL, TRUE, TRUE, FALSE,
      'REFERENCES CLIENT_NOTIFY_QUEUE_TAB(MESSAGE_SEQ_NO)','ON DELETE CASCADE');
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, prereq_name_);
   Installation_SYS.Create_Constraint(table_name_, fk_name2_, columns_, 'F', NULL, NULL, TRUE, TRUE, FALSE,
      'REFERENCES CLIENT_NOTIFY_QUEUE_TAB(MESSAGE_SEQ_NO)','ON DELETE CASCADE');
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Create table CLIENT_NOTIFY_PROPERTY_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'CLIENT_NOTIFY_PROPERTY_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'PROPERTY_GROUP', 'VARCHAR2(20)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'PROPERTY_NAME', 'VARCHAR2(1000)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'PROPERTY_VALUE', 'VARCHAR2(4000)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'PROPERTY_SOURCE', 'VARCHAR2(20)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'PROPERTY_TYPE', 'VARCHAR2(20)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'TIMESTAMP', 'TIMESTAMP(6)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'STANDARD_VALUE', 'VARCHAR2(4000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'CLIENT_NOTIFY_PROPERTY_PK';
   table_name_ VARCHAR2(30) := 'CLIENT_NOTIFY_PROPERTY_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'PROPERTY_GROUP');
   Installation_SYS.Set_Table_Column(columns_, 'PROPERTY_NAME');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'CLIENT_NOTIFY_PROPERTY_RK';
   table_name_ VARCHAR2(30) := 'CLIENT_NOTIFY_PROPERTY_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Create table CLIENT_NOTIFY_STAT_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'CLIENT_NOTIFY_STAT_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'MESSAGE_SEQ_NO', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'STAT_CATEGORY', 'VARCHAR2(20)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'NODE_ID', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'START_TIMESTAMP', 'TIMESTAMP(6)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'METHOD', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'METHOD_REFERENCE', 'VARCHAR2(2000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'END_TIMESTAMP', 'TIMESTAMP(6)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'NUMBER', 'N');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'CLIENT_NOTIFY_STAT_PK';
   table_name_ VARCHAR2(30) := 'CLIENT_NOTIFY_STAT_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'MESSAGE_SEQ_NO');
   Installation_SYS.Set_Table_Column(columns_, 'STAT_CATEGORY');
   Installation_SYS.Set_Table_Column(columns_, 'NODE_ID');
   Installation_SYS.Set_Table_Column(columns_, 'START_TIMESTAMP');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_14');

PROMPT Create table FND_CLIENT_HOMEPAGE_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'FND_CLIENT_HOMEPAGE_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'CLIENT', 'VARCHAR2(250)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'PAGE', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'HOME_FOR_ENTITY', 'VARCHAR2(128)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'CONTEXT', 'VARCHAR2(500)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Create index FND_CLIENT_HOMEPAGE_PK

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'FND_CLIENT_HOMEPAGE_PK';
   table_name_ VARCHAR2(30) := 'FND_CLIENT_HOMEPAGE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'CLIENT');
   Installation_SYS.Set_Table_Column(columns_, 'PAGE');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Create index FND_CLIENT_HOMEPAGE_RK

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'FND_CLIENT_HOMEPAGE_RK';
   table_name_ VARCHAR2(30) := 'FND_CLIENT_HOMEPAGE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_15');

PROMPT Add table REPORT_NODE_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'REPORT_NODE_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'NODE_ID', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'CLUSTER_NAME', 'VARCHAR2(4)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'LOCK_HANDLE', 'VARCHAR2(128)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'INVOKE_LOCK_HANDLE', 'VARCHAR2(128)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'CREATED_TIMESTAMP', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'TIMESTAMP', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'LOAD_FACTOR', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'NUMBER', 'N');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Create index REPORT_NODE_PK
-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_NODE_PK';
   table_name_ VARCHAR2(30) := 'REPORT_NODE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'NODE_ID');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Add TABLE REPORT_PDF_A_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'REPORT_PDF_A_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'PROPERTY_NAME', 'VARCHAR2(200)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'PROPERTY_DESC', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'PROPERTY_VALUE', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Create index REPORT_PDF_A_PK
-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_PDF_A_PK';
   table_name_ VARCHAR2(30) := 'REPORT_PDF_A_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'PROPERTY_NAME');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_PDF_A_RK';
   table_name_ VARCHAR2(30) := 'REPORT_PDF_A_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/


PROMPT Add entity ReportAddressLabel

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   sequence_name_ VARCHAR2(30) := 'REPORT_MESSAGE_SEQ';
BEGIN
   Installation_SYS.Create_Sequence(sequence_name_, 'START WITH 1', TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'REPORT_ADDRESS_LABEL_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'APPLICATION_MESSAGE_ID', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'SEQ_NO', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'TRANSPORT_CONNECTOR', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ADDRESS_DATA', 'VARCHAR2(4000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ADDRESS_DATA_2', 'VARCHAR2(2000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'SENDER', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'SENDER_ORGANIZATION', 'VARCHAR2(500)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'RECEIVER', 'VARCHAR2(2000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'RECEIVER_ORGANIZATION', 'VARCHAR2(500)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'OPTIONS', 'VARCHAR2(2000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'TRANSFORMER', 'VARCHAR2(4000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'RESPONSE_TRANSFORMER', 'VARCHAR2(4000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ENVELOPE', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'STATE', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'SENT', 'DATE', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'EXPIRES', 'DATE', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'RECEIPT_REQUIRED', 'DATE', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'RETRIED_COUNT', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'MAX_RETRIES', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'RETRY_INTERVAL', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ERROR_TEXT', 'VARCHAR2(2000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ENCODING', 'VARCHAR2(50)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'SUB_SYSTEM', 'VARCHAR2(50)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'SENDER_INSTANCE', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'REPLY', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ZIP', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ENVELOPE_RESPONSE', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'RESPONSE', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'CHAIN_LINK_NO', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'MAIN_ADDRESS', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_ADDRESS_LABEL_PK';
   table_name_ VARCHAR2(30) := 'REPORT_ADDRESS_LABEL_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'APPLICATION_MESSAGE_ID');
   Installation_SYS.Set_Table_Column(columns_, 'SEQ_NO');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_ADDRESS_LABEL_RK';
   table_name_ VARCHAR2(30) := 'REPORT_ADDRESS_LABEL_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Add entity ReportApplicationMessage

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'REPORT_APPLICATION_MESSAGE_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'APPLICATION_MESSAGE_ID', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'PARENT_MESSAGE_ID', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'SEQ_NO', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'SENDER', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'RECEIVER', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'MESSAGE_TYPE', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'MESSAGE_FUNCTION', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'STATE', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'STATE_DATE', 'DATE', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'SUBJECT', 'VARCHAR2(2000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ARCHIVE', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'OPTIONS', 'VARCHAR2(2000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'EXTERNAL_MESSAGE_ID', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'QUEUE', 'VARCHAR2(50)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'QUEUE_THREAD_NO', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'NEXT_STATE', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'NEXT_EXECUTION_TIME', 'DATE', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ERROR_TEXT', 'VARCHAR2(2000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'INITIATED', 'DATE', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'INITIATED_BY', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'EXECUTE_AS', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'LOCALE', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'CREATED_FROM', 'VARCHAR2(2000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'INBOUND', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'CONNECTIVITY_ID', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROUTE_RULE_SEQ', 'VARCHAR2(500)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROUTE_RULE_CANDIDATES', 'VARCHAR2(4000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'CREATED_BY', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'CREATED_DATE', 'DATE', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'TAG', 'VARCHAR2(30)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'INVOKE_TIMEOUT', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'CREATED_TIMESTAMP', 'TIMESTAMP(6)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'FINISHED_TIMESTAMP', 'TIMESTAMP(6)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_APPLICATION_MESSAGE_PK';
   table_name_ VARCHAR2(30) := 'REPORT_APPLICATION_MESSAGE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'APPLICATION_MESSAGE_ID');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_APPLICATION_MESSAGE_RK';
   table_name_ VARCHAR2(30) := 'REPORT_APPLICATION_MESSAGE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REP_APPLICATION_MESSAGE_IX_1';
   table_name_ VARCHAR2(30) := 'REPORT_APPLICATION_MESSAGE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'QUEUE');
   Installation_SYS.Set_Table_Column(columns_, 'QUEUE_THREAD_NO');
   Installation_SYS.Set_Table_Column(columns_, 'STATE');
   Installation_SYS.Set_Table_Column(columns_, 'SEQ_NO');
   Installation_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REP_APPLICATION_MESSAGE_IX_2';
   table_name_ VARCHAR2(30) := 'REPORT_APPLICATION_MESSAGE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'TAG');
   Installation_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REP_APPLICATION_MESSAGE_IX_3';
   table_name_ VARCHAR2(30) := 'REPORT_APPLICATION_MESSAGE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROUTE_RULE_SEQ');
   Installation_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Add entity ReportBatchPrQueue

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   sequence_name_ VARCHAR2(30) := 'REPORT_BATCH_PR_QUEUE_SEQ';
BEGIN
   Installation_SYS.Create_Sequence(sequence_name_, 'START WITH 1', TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'REPORT_BATCH_PR_QUEUE_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'MESSAGE_SEQ_NO', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'CLUSTER_NAME', 'VARCHAR2(4)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'NODE_ID', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'TIMESTAMP', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'METHOD', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'QUEUE', 'VARCHAR2(50)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'APPLICATION_MESSAGE_ID', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'GROUP_NAME', 'VARCHAR2(50)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'INSTANCE_NAME', 'VARCHAR2(50)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'PARAMETER_NAME', 'VARCHAR2(50)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'EXECUTION_MODE', 'VARCHAR2(50)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'PRIORITY', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'RESTRICTED_QUEUE_THREAD_NO', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'RESTRICTED_QUEUE_CHECK', 'VARCHAR2(5)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'RESTRICTED_QUEUE_NAME', 'VARCHAR2(50)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'RESTRICTED_QUEUE_TYPE', 'VARCHAR2(50)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'READER_MESSAGE_ID', 'VARCHAR2(4000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'JMS_QUEUE_NAME', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'JMS_DELIVERY_DELAY', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'PROPERTY_GROUP', 'VARCHAR2(20)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ADMIN_METHOD', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ADMIN_VALUE', 'VARCHAR2(2000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'NUMBER', 'N');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_BATCH_PR_QUEUE_PK';
   table_name_ VARCHAR2(30) := 'REPORT_BATCH_PR_QUEUE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'MESSAGE_SEQ_NO');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_BATCH_PROC_QUEUE_IX';
   table_name_ VARCHAR2(30) := 'REPORT_BATCH_PR_QUEUE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'APPLICATION_MESSAGE_ID');
   Installation_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_  VARCHAR2(30) := 'REPORT_BATCH_PR_QUEUE_SENT_TAB';
   index_name_  VARCHAR2(30) := 'REPORT_BATCH_PR_QUEUE_SENT_PK';
   index_name2_ VARCHAR2(30) := 'REPORT_BATCH_PR_QUEUE_SENT_IX';
   columns_     Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'NODE_ID', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'MESSAGE_SEQ_NO', 'NUMBER', 'N');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'NODE_ID');
   Installation_SYS.Set_Table_Column(columns_, 'MESSAGE_SEQ_NO');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'MESSAGE_SEQ_NO');
   Installation_SYS.Create_Index(table_name_, index_name2_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Add entity ReportConfigInstance

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'REPORT_CONFIG_INSTANCE_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'GROUP_NAME', 'VARCHAR2(20)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'INSTANCE_NAME', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'INSTANCE_TYPE', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(1000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_CONFIG_INSTANCE_PK';
   table_name_ VARCHAR2(30) := 'REPORT_CONFIG_INSTANCE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'GROUP_NAME');
   Installation_SYS.Set_Table_Column(columns_, 'INSTANCE_NAME');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_CONFIG_INSTANCE_RK';
   table_name_ VARCHAR2(30) := 'REPORT_CONFIG_INSTANCE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Add entity ReportConfigInstParam

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'REPORT_CONFIG_INST_PARAM_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'GROUP_NAME', 'VARCHAR2(20)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'INSTANCE_NAME', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'PARAMETER_NAME', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'PARAMETER_VALUE', 'VARCHAR2(4000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_CONFIG_INST_PARAM_PK';
   table_name_ VARCHAR2(30) := 'REPORT_CONFIG_INST_PARAM_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'GROUP_NAME');
   Installation_SYS.Set_Table_Column(columns_, 'INSTANCE_NAME');
   Installation_SYS.Set_Table_Column(columns_, 'PARAMETER_NAME');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_CONFIG_INST_PARAM_RK';
   table_name_ VARCHAR2(30) := 'REPORT_CONFIG_INST_PARAM_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Add entity ReportLocale

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'REPORT_LOCALE_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'LOCALE', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'COUNTRY', 'VARCHAR2(50)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'LANGUAGE', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'VARIANT', 'VARCHAR2(50)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'SCRIPT', 'VARCHAR2(50)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_LOCALE_PK';
   table_name_ VARCHAR2(30) := 'REPORT_LOCALE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'LOCALE');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_LOCALE_RK';
   table_name_ VARCHAR2(30) := 'REPORT_LOCALE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Add entity ReportMessageBody

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'REPORT_MESSAGE_BODY_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'APPLICATION_MESSAGE_ID', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'SEQ_NO', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'BODY_TYPE', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'REPLY', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'BODY_ID', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'NAME', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ADDRESS_SEQ_NO', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'MESSAGE_TEMPLATE', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'FILE_PATH', 'VARCHAR2(4000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);

   column_ := Installation_SYS.Set_Column_Values('MESSAGE_VALUE', 'BLOB', 'Y', NULL, 'LOB (MESSAGE_VALUE) STORE AS (TABLESPACE &IFSAPP_LOB CHUNK 4096 ENABLE STORAGE IN ROW)');
   Installation_SYS.Add_Lob_Column(table_name_, column_, TRUE);

   column_ := Installation_SYS.Set_Column_Values('MESSAGE_TEXT', 'CLOB', 'Y', NULL, 'LOB (MESSAGE_TEXT) STORE AS (TABLESPACE &IFSAPP_LOB CHUNK 4096 ENABLE STORAGE IN ROW)');
   Installation_SYS.Add_Lob_Column(table_name_, column_, TRUE);

   column_ := Installation_SYS.Set_Column_Values('PARAMETERS', 'CLOB', 'Y', NULL, 'LOB (PARAMETERS) STORE AS (TABLESPACE &IFSAPP_LOB CHUNK 4096 ENABLE STORAGE IN ROW)');
   Installation_SYS.Add_Lob_Column(table_name_, column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_MESSAGE_BODY_PK';
   table_name_ VARCHAR2(30) := 'REPORT_MESSAGE_BODY_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'APPLICATION_MESSAGE_ID');
   Installation_SYS.Set_Table_Column(columns_, 'SEQ_NO');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_MESSAGE_BODY_RK';
   table_name_ VARCHAR2(30) := 'REPORT_MESSAGE_BODY_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Add entity ReportPrintAgentTask

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'REPORT_PRINT_AGENT_TASK_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'INSTANCE_NAME', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(1000)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'QUEUE', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'EXECUTE_AS', 'VARCHAR2(20)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'LOCALE', 'VARCHAR2(12)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'PRINT_LOCALE', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'DEFAULT_LANGUAGE', 'VARCHAR2(1000)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'DEBUG_LEVEL', 'VARCHAR2(20)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'REPORT_FORMATTER_NAME', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'DEBUG_URL', 'VARCHAR2(1000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'DEBUG_PASSWORD', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_PRINT_AGENT_TASK_PK';
   table_name_ VARCHAR2(30) := 'REPORT_PRINT_AGENT_TASK_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'INSTANCE_NAME');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_PRINT_AGENT_TASK_RK';
   table_name_ VARCHAR2(30) := 'REPORT_PRINT_AGENT_TASK_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Add entity ReportPrinterMapping

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'REPORT_PRINTER_MAPPING_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'TEMPLATE_INSTANCE_NAME', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'LOGICAL_PRINTER_ID', 'VARCHAR2(30)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'PHYSICAL_PRINTER', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_PRINTER_MAPPING_PK';
   table_name_ VARCHAR2(30) := 'REPORT_PRINTER_MAPPING_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'TEMPLATE_INSTANCE_NAME');
   Installation_SYS.Set_Table_Column(columns_, 'LOGICAL_PRINTER_ID');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_PRINTER_MAPPING_RK';
   table_name_ VARCHAR2(30) := 'REPORT_PRINTER_MAPPING_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Add entity ReportQueue

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'REPORT_QUEUE_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'INSTANCE_NAME', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(1000)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'STATIC_CONFIG', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ENABLED', 'VARCHAR2(5)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'EXECUTION_MODE', 'VARCHAR2(20)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'STOP_QUEUE', 'VARCHAR2(5)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'LOG_LEVEL', 'VARCHAR2(20)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'PRIORITY', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'THREAD_COUNT', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_QUEUE_PK';
   table_name_ VARCHAR2(30) := 'REPORT_QUEUE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'INSTANCE_NAME');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'REPORT_QUEUE_RK';
   table_name_ VARCHAR2(30) := 'REPORT_QUEUE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   columns_    Installation_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'REPORT_RESTRCTED_QUEUE_KEY_TAB';
   index_name_ VARCHAR2(30) := 'REPORT_RESTRCTED_QUEUE_KEY_PK';
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'QUEUE_TYPE', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'QUEUE_NAME', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'QUEUE_THREAD_NO', 'NUMBER', 'N');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'QUEUE_TYPE');
   Installation_SYS.Set_Table_Column(columns_, 'QUEUE_NAME');
   Installation_SYS.Set_Table_Column(columns_, 'QUEUE_THREAD_NO');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   columns_    Installation_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'REPORT_READER_TIMERS_TAB';
   index_name_ VARCHAR2(30) := 'REPORT_READER_TIMERS_PK';
BEGIN   
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'READER_NAME', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'TIMESTAMP', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'SERVER_NAME', 'VARCHAR2(100)', 'N');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'READER_NAME');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Add utility ReportRuntime 
PROMPT ======================================================================================
PROMPT Create temporary tables corresponding to runtime tables without ROWKEY and ROWVERSION
PROMPT Create types used in DML statements by synchronization procedures
PROMPT ======================================================================================

-- [IFS COMPLETE BLOCK BEGINEND]
BEGIN
   --
   -- Create temporary tables corresponding to runtime tables without ROWKEY and ROWVERSION
   --
   DECLARE
      PROCEDURE Execute(sql_ IN VARCHAR2) IS
      BEGIN
         --@ApproveDynamicStatement(2019-10-31,madrse)
         EXECUTE IMMEDIATE sql_;
      END Execute;

      PROCEDURE Create_Temporary_Table (
         tmp_table_name_ IN VARCHAR2,
         src_table_name_ IN VARCHAR2,
         pk_columns_     IN VARCHAR2) IS
      BEGIN
         Installation_SYS.Remove_Table(tmp_table_name_, TRUE);
         Dbms_Output.Put_Line('Creating temporary table ' || tmp_table_name_);
         Execute('CREATE GLOBAL TEMPORARY TABLE ' || tmp_table_name_ || ' ON COMMIT DELETE ROWS AS SELECT * FROM ' || src_table_name_ || ' WHERE 1 = 2');
         Execute('ALTER TABLE ' || tmp_table_name_ || ' DROP COLUMN rowkey');
         Execute('ALTER TABLE ' || tmp_table_name_ || ' DROP COLUMN rowversion');
         Execute('CREATE UNIQUE INDEX ' || REPLACE(tmp_table_name_, '_TAB', '_UIX') || ' ON ' || tmp_table_name_ || '(' || pk_columns_ || ')');
      END;
   BEGIN
      Create_Temporary_Table('REPORT_CONFIG_INST_TMP_TAB'      , 'REPORT_CONFIG_INSTANCE_TAB'        , 'GROUP_NAME, INSTANCE_NAME');
      Create_Temporary_Table('REPORT_CONF_INST_PARAM_TMP_TAB', 'REPORT_CONFIG_INST_PARAM_TAB'  , 'GROUP_NAME, INSTANCE_NAME, PARAMETER_NAME');
   END;

   --
   -- Create types used in DML statements by synchronization procedures
   --
   DECLARE
      columns_ Installation_SYS.ColumnTabType;
   BEGIN
      Installation_SYS.Remove_Type('REPORT_RUNTIME_PARAM_TYPE', TRUE);
      Installation_SYS.Remove_Type('REPORT_RUNTIME_PARAMS_TYPE', TRUE);

      Installation_SYS.Reset_Column_Table(columns_);
      Installation_SYS.Set_Table_Column(columns_, 'GROUP_NAME', 'VARCHAR2(20)', 'Y');
      Installation_SYS.Set_Table_Column(columns_, 'INSTANCE_NAME', 'VARCHAR2(50)', 'Y');
      Installation_SYS.Set_Table_Column(columns_, 'INSTANCE_TYPE', 'VARCHAR2(50)', 'Y');
      Installation_SYS.Set_Table_Column(columns_, 'PARAMETER_NAME', 'VARCHAR2(50)', 'Y');
      Installation_SYS.Set_Table_Column(columns_, 'PARAMETER_VALUE', 'VARCHAR2(4000)', 'Y');
      Installation_SYS.Create_Type('REPORT_RUNTIME_PARAM_TYPE', columns_, TRUE);

      Installation_SYS.Create_Type('REPORT_RUNTIME_PARAMS_TYPE', 'REPORT_RUNTIME_PARAM_TYPE', TRUE);
   END;
END;
-- [END IFS COMPLETE BLOCK]
/

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_16');

PROMPT Create table OBJECT_CONNECTION_LANGUAGE_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'OBJECT_CONNECTION_LANGUAGE_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'LU_NAME', 'VARCHAR2(30)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'LANG_CODE', 'VARCHAR2(5)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'LU_ATTR', 'VARCHAR2(1000)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'KEY_ATTR', 'VARCHAR2(2000)', 'N');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'OBJECT_CONNECTION_LANGUAGE_PK';
   table_name_ VARCHAR2(30) := 'OBJECT_CONNECTION_LANGUAGE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'LU_NAME');
   Installation_SYS.Set_Table_Column(columns_, 'LANG_CODE');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_17');

PROMPT Removing columns from OBJECT_CONNECTION_SYS_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   column_     Installation_SYS.ColRec;
   table_name_ VARCHAR2(30) := 'OBJECT_CONNECTION_SYS_TAB';
BEGIN
   -- Drop KEY_ATTR
   column_ := Installation_SYS.Set_Column_Values('KEY_ATTR');
   Installation_SYS.Remove_Lob_Column(table_name_, column_, TRUE);    
   
   -- Drop LU_ATTR
   column_ := Installation_SYS.Set_Column_Values('LU_ATTR');
   Installation_SYS.Alter_Table_Column(table_name_, 'DROP COLUMN', column_, TRUE); 
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   pk_name_    VARCHAR2(30) := 'OBJECT_CONNECTION_SYS_PK';
   index_name_ VARCHAR2(30) := 'OBJECT_CONNECTION_SYS_IX';
   table_name_ VARCHAR2(30) := 'OBJECT_CONNECTION_SYS_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   -- Renaming wrongly spelled index names
   IF Installation_SYS.Index_Exist('OBJECT_CONECTION_SYS_PK', table_name_) THEN
      Installation_SYS.Rename_Constraint(table_name_, 'OBJECT_CONECTION_SYS_PK', pk_name_, TRUE);
   END IF;
   IF Installation_SYS.Index_Exist('OBJECT_CONECTION_SYS_IX', table_name_) THEN
      Installation_SYS.Rename_Index('OBJECT_CONECTION_SYS_IX', index_name_, TRUE);
   END IF;
   IF Installation_SYS.Index_Exist(index_name_, 'OBJECT_CONNECTION_SYS_TAB') = FALSE THEN
      Installation_SYS.Reset_Column_Table(columns_);
      Installation_SYS.Set_Table_Column(columns_, 'BASED_ON');
      Installation_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   END IF;
END;
-- [END IFS COMPLETE BLOCK]
/

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_18_1');

PROMPT Create table FND_EVENT_REST_BLOB_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'FND_EVENT_REST_BLOB_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'EVENT_LU_NAME', 'VARCHAR2(25)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'EVENT_ID', 'VARCHAR2(32)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ACTION_NUMBER', 'NUMBER(6)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ATTACHMENT_NUMBER', 'NUMBER(6)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'FILE_NAME', 'VARCHAR2(4000)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);

   column_ := Installation_SYS.Set_Column_Values('FILE_CONTENT', 'BLOB', 'N', NULL, 'LOB (FILE_CONTENT) STORE AS (TABLESPACE &IFSAPP_LOB CHUNK 4096 ENABLE STORAGE IN ROW)');
   Installation_SYS.Add_Lob_Column(table_name_, column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'FND_EVENT_REST_BLOB_PK';
   table_name_ VARCHAR2(30) := 'FND_EVENT_REST_BLOB_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'EVENT_LU_NAME');
   Installation_SYS.Set_Table_Column(columns_, 'EVENT_ID');
   Installation_SYS.Set_Table_Column(columns_, 'ACTION_NUMBER');
   Installation_SYS.Set_Table_Column(columns_, 'ATTACHMENT_NUMBER');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'FND_EVENT_REST_BLOB_RK';
   table_name_ VARCHAR2(30) := 'FND_EVENT_REST_BLOB_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_19');

PROMPT Creating table IAM_ADMIN_EVENT_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'IAM_ADMIN_EVENT_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'EVENT_ID', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'EVENT_TIME', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'OPERATION_TYPE', 'VARCHAR2(20)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'RESOURCE_TYPE', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'RESOURCE_PATH', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'REALM_ID', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'REPRESENTATION', 'VARCHAR2(4000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ERROR', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'CLIENT_ID', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'USER_NAME', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'IP_ADDRESS', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'IAM_ADMIN_EVENT_PK';
   table_name_ VARCHAR2(30) := 'IAM_ADMIN_EVENT_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'EVENT_ID');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'IAM_ADMIN_EVENT_RK';
   table_name_ VARCHAR2(30) := 'IAM_ADMIN_EVENT_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Creating table IAM_LOGIN_EVENT_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'IAM_LOGIN_EVENT_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'EVENT_ID', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'EVENT_TIME', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'EVENT_TYPE', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'REALM_ID', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'CLIENT_ID', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'USER_NAME', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'SESSION_ID', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ERROR', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'IP_ADDRESS', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'IAM_LOGIN_EVENT_PK';
   table_name_ VARCHAR2(30) := 'IAM_LOGIN_EVENT_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'EVENT_ID');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'IAM_LOGIN_EVENT_RK';
   table_name_ VARCHAR2(30) := 'IAM_LOGIN_EVENT_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Creating table IAM_LOGIN_EVENT_DETAIL_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'IAM_LOGIN_EVENT_DETAIL_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'EVENT_ID', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'PARAMETER', 'VARCHAR2(200)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'VALUE', 'VARCHAR2(400)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'IAM_LOGIN_EVENT_DETAIL_PK';
   table_name_ VARCHAR2(30) := 'IAM_LOGIN_EVENT_DETAIL_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'EVENT_ID');
   Installation_SYS.Set_Table_Column(columns_, 'PARAMETER');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'IAM_LOGIN_EVENT_DETAIL_RK';
   table_name_ VARCHAR2(30) := 'IAM_LOGIN_EVENT_DETAIL_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Creating table FSS_FILE_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'FSS_FILE_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'FILE_ID', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'LU_NAME', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'FILE_NAME', 'VARCHAR2(200)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'FILE_EXTENSION', 'VARCHAR2(20)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'FILE_TYPE', 'VARCHAR2(50)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'FILE_LENGTH', 'NUMBER', 'N', '$DEFAULT_NULL$');   
   Installation_SYS.Set_Table_Column(columns_, 'CREATED_DATE', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'MODIFIED_DATE', 'DATE', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Set_Table_Column(columns_, 'ROWSTATE', 'VARCHAR2(20)', 'N');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'FSS_FILE_PK';
   table_name_ VARCHAR2(30) := 'FSS_FILE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'FILE_ID');
   Installation_SYS.Set_Table_Column(columns_, 'LU_NAME');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'FSS_FILE_RK';
   table_name_ VARCHAR2(30) := 'FSS_FILE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Upgrading IfsCamSys (Camunda) Schema Objects From 7.11 to 7.15

DEFINE CAMUNDA_APPOWNER         = IFSCAMSYS

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'ACT_IDX_HI_JOB_LOG_JOB_CONF';
   table_name_ VARCHAR2(30) := 'ACT_HI_JOB_LOG';
   columns_    &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColumnTabType;
BEGIN
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Reset_Column_Table(columns_);
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'JOB_DEF_CONFIGURATION_');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

DELETE FROM &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG WHERE ID_ = '1' AND VERSION_ = '7.11.3';
INSERT INTO &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG (ID_, TIMESTAMP_, VERSION_) VALUES ('1', CURRENT_TIMESTAMP, '7.11.3');


-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'ACT_IDX_HI_ACT_INST_START';
   table_name_ VARCHAR2(30) := 'ACT_HI_ACTINST';
BEGIN
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Remove_Indexes(table_name_, index_name_);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'ACT_IDX_HI_ACT_INST_START_END';
   table_name_ VARCHAR2(30) := 'ACT_HI_ACTINST';
   columns_    &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColumnTabType;
BEGIN
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Reset_Column_Table(columns_);
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'START_TIME_');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'END_TIME_');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

DELETE FROM &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG WHERE ID_ = '2' AND VERSION_ = '7.11.8';
INSERT INTO &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG (ID_, TIMESTAMP_, VERSION_) VALUES ('2', CURRENT_TIMESTAMP, '7.11.8');


DELETE FROM &CAMUNDA_APPOWNER..ACT_GE_PROPERTY WHERE NAME_ = 'telemetry.lock' AND VALUE_ = '0';
DELETE FROM &CAMUNDA_APPOWNER..ACT_GE_PROPERTY WHERE NAME_ = 'installationId.lock' AND VALUE_ = '0';
DELETE FROM &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG WHERE ID_ = '3' AND VERSION_ = '7.11.19';  
INSERT INTO &CAMUNDA_APPOWNER..ACT_GE_PROPERTY (NAME_, VALUE_, REV_) VALUES ('telemetry.lock', '0', 1);
INSERT INTO &CAMUNDA_APPOWNER..ACT_GE_PROPERTY (NAME_, VALUE_, REV_) VALUES ('installationId.lock', '0', 1);
INSERT INTO &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG (ID_, TIMESTAMP_, VERSION_) VALUES ('3', CURRENT_TIMESTAMP, '7.11.19');


-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'ACT_HI_OP_LOG';
   column_ &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColRec;
BEGIN   
   column_ := &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Column_Values('ANNOTATION_', 'NVARCHAR2(2000)', 'Y');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Alter_Table_Column(table_name_, 'ADD', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/      

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'ACT_RU_JOB';
   column_ &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColRec;
BEGIN   
   column_ := &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Column_Values('REPEAT_OFFSET_', 'NUMBER(19,0)', 'Y', 0);
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Alter_Table_Column(table_name_, 'ADD', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/   

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'ACT_HI_INCIDENT';
   column_ &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColRec;
BEGIN   
   column_ := &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Column_Values('HISTORY_CONFIGURATION_', 'NVARCHAR2(255)', 'Y');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Alter_Table_Column(table_name_, 'ADD', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/   

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'ACT_IDX_HI_DETAIL_VAR_INST_ID';
   table_name_ VARCHAR2(30) := 'ACT_HI_DETAIL';
   columns_    &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColumnTabType;
BEGIN
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Reset_Column_Table(columns_);
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'VAR_INST_ID_');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

DELETE FROM &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG WHERE ID_ = '100' AND VERSION_ = '7.12.0';
INSERT INTO &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG (ID_, TIMESTAMP_, VERSION_) VALUES ('100', CURRENT_TIMESTAMP, '7.12.0');


-- NOTE: This patch was a repeat of patch 7.11.8
DELETE FROM &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG WHERE ID_ = '101' AND VERSION_ = '7.12.1';
INSERT INTO &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG (ID_, TIMESTAMP_, VERSION_) VALUES ('101', CURRENT_TIMESTAMP, '7.12.1');
   

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'ACT_IDX_HI_INCIDENT_CREATE_TI';
   table_name_ VARCHAR2(30) := 'ACT_HI_INCIDENT';
   columns_    &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColumnTabType;
BEGIN
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Reset_Column_Table(columns_);
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'CREATE_TIME_');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'ACT_IDX_HI_INCIDENT_END_TIME';
   table_name_ VARCHAR2(30) := 'ACT_HI_INCIDENT';
   columns_    &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColumnTabType;
BEGIN
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Reset_Column_Table(columns_);
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'END_TIME_');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

DELETE FROM &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG WHERE ID_ = '102' AND VERSION_ = '7.12.11';
INSERT INTO &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG (ID_, TIMESTAMP_, VERSION_) VALUES ('102', CURRENT_TIMESTAMP, '7.12.11');


-- NOTE: This patch was a repeat of patch 7.11.19
DELETE FROM &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG WHERE ID_ = '103' AND VERSION_ = '7.12.12';  
INSERT INTO &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG (ID_, TIMESTAMP_, VERSION_) VALUES ('103', CURRENT_TIMESTAMP, '7.12.12');


-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'ACT_IDX_HI_VAR_PI_NAME_TYPE';
   table_name_ VARCHAR2(30) := 'ACT_HI_VARINST';
   columns_    &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColumnTabType;
BEGIN
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Reset_Column_Table(columns_);
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'PROC_INST_ID_');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'NAME_');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'VAR_TYPE_');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'ACT_HI_JOB_LOG';
   column_ &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColRec;
BEGIN   
   column_ := &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Column_Values('HOSTNAME_', 'NVARCHAR2(255)', 'Y', NULL);
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Alter_Table_Column(table_name_, 'ADD', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/ 

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'ACT_RU_JOB';
   column_ &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColRec;
BEGIN   
   column_ := &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Column_Values('FAILED_ACT_ID_', 'NVARCHAR2(255)', 'Y');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Alter_Table_Column(table_name_, 'ADD', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/ 

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'ACT_HI_JOB_LOG';
   column_ &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColRec;
BEGIN   
   column_ := &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Column_Values('FAILED_ACT_ID_', 'NVARCHAR2(255)', 'Y');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Alter_Table_Column(table_name_, 'ADD', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/ 

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'ACT_RU_INCIDENT';
   column_ &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColRec;
BEGIN   
   column_ := &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Column_Values('FAILED_ACTIVITY_ID_', 'NVARCHAR2(255)', 'Y');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Alter_Table_Column(table_name_, 'ADD', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'ACT_HI_INCIDENT';
   column_ &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColRec;
BEGIN   
   column_ := &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Column_Values('FAILED_ACTIVITY_ID_', 'NVARCHAR2(255)', 'Y');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Alter_Table_Column(table_name_, 'ADD', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'ACT_RU_AUTHORIZATION';
   column_ &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColRec;
BEGIN   
   column_ := &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Column_Values('REMOVAL_TIME_', 'TIMESTAMP(6)', 'Y');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Alter_Table_Column(table_name_, 'ADD', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'ACT_IDX_AUTH_RM_TIME';
   table_name_ VARCHAR2(30) := 'ACT_RU_AUTHORIZATION';
   columns_    &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColumnTabType;
BEGIN
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Reset_Column_Table(columns_);
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'REMOVAL_TIME_');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'ACT_RU_AUTHORIZATION';
   column_ &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColRec;
BEGIN   
   column_ := &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Column_Values('ROOT_PROC_INST_ID_', 'NVARCHAR2(64)', 'Y');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Alter_Table_Column(table_name_, 'ADD', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'ACT_IDX_AUTH_ROOT_PI';
   table_name_ VARCHAR2(30) := 'ACT_RU_AUTHORIZATION';
   columns_    &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColumnTabType;
BEGIN
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Reset_Column_Table(columns_);
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'ROOT_PROC_INST_ID_');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'ACT_RU_JOBDEF';
   column_ &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColRec;
BEGIN   
   column_ := &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Column_Values('DEPLOYMENT_ID_', 'NVARCHAR2(64)', 'Y');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Alter_Table_Column(table_name_, 'ADD', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'ACT_RU_VARIABLE';
   column_ &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColRec;
BEGIN   
   column_ := &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Column_Values('PROC_DEF_ID_', 'NVARCHAR2(64)', 'Y');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Alter_Table_Column(table_name_, 'ADD', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'ACT_HI_DETAIL';
   column_ &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColRec;
BEGIN   
   column_ := &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Column_Values('INITIAL_', 'NUMBER(1,0)');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Alter_Table_Column(table_name_, 'ADD', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

DELETE FROM &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG WHERE ID_ = '200' AND VERSION_ = '7.13.0';
INSERT INTO &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG (ID_, TIMESTAMP_, VERSION_) VALUES ('200', CURRENT_TIMESTAMP, '7.13.0');

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'ACT_IDX_TASK_OWNER';
   table_name_ VARCHAR2(30) := 'ACT_RU_TASK';
   columns_    &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColumnTabType;
BEGIN
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Reset_Column_Table(columns_);
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'OWNER_');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

DELETE FROM &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG WHERE ID_ = '201' AND VERSION_ = '7.13.5_1';
INSERT INTO &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG (ID_, TIMESTAMP_, VERSION_) VALUES ('201', CURRENT_TIMESTAMP, '7.13.5_1');


-- NOTE: This patch was a repeat of patch 7.12.11
DELETE FROM &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG WHERE ID_ = '202' AND VERSION_ = '7.13.5_2';
INSERT INTO &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG (ID_, TIMESTAMP_, VERSION_) VALUES ('202', CURRENT_TIMESTAMP, '7.13.5_2');
   

-- NOTE: This patch was a repeat of patches 7.11.19 and 7.12.12
DELETE FROM &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG WHERE ID_ = '203' AND VERSION_ = '7.13.6';  
INSERT INTO &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG (ID_, TIMESTAMP_, VERSION_) VALUES ('203', CURRENT_TIMESTAMP, '7.13.6');

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'ACT_RU_VARIABLE';
   column_ &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColRec;
BEGIN   
   column_ := &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Column_Values('BATCH_ID_', 'NVARCHAR2(64)', 'Y');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Alter_Table_Column(table_name_, 'ADD', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'ACT_IDX_BATCH_ID';
   table_name_ VARCHAR2(30) := 'ACT_RU_VARIABLE';
   columns_    &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColumnTabType;
BEGIN
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Reset_Column_Table(columns_);
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'BATCH_ID_');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   constraint_name_ VARCHAR2(30) := 'ACT_FK_VAR_BATCH';
   table_name_ VARCHAR2(30) := 'ACT_RU_VARIABLE';
   columns_    &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColumnTabType;
BEGIN
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Reset_Column_Table(columns_);
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'BATCH_ID_');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Create_Constraint(table_name_, constraint_name_, columns_, 'F', NULL, NULL, TRUE, TRUE, FALSE, 'references ACT_RU_BATCH (ID_)');
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'ACT_IDX_VARIABLE_TASK_NAME_TYP';
   table_name_ VARCHAR2(30) := 'ACT_RU_VARIABLE';
   columns_    &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColumnTabType;
BEGIN
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Reset_Column_Table(columns_);
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'TASK_ID_');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'NAME_');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'TYPE_');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

DELETE FROM &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG WHERE ID_ = '300' AND VERSION_ = '7.14.0';  
INSERT INTO &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG (ID_, TIMESTAMP_, VERSION_) VALUES ('300', CURRENT_TIMESTAMP, '7.14.0');


-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'ACT_IDX_JOB_HANDLER';
   table_name_ VARCHAR2(30) := 'ACT_RU_JOB';
BEGIN
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Remove_Indexes(table_name_, index_name_);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'ACT_IDX_JOB_HANDLER';
   table_name_ VARCHAR2(30) := 'ACT_RU_JOB';
   columns_    &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColumnTabType;
BEGIN
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Reset_Column_Table(columns_);
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'HANDLER_TYPE_');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, SUBSTR('HANDLER_CFG_', 1, 1850));   
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

DELETE FROM &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG WHERE ID_ = '301' AND VERSION_ = '7.14.3';  
INSERT INTO &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG (ID_, TIMESTAMP_, VERSION_) VALUES ('301', CURRENT_TIMESTAMP, '7.14.3');


-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'ACT_RU_TASK_METER_LOG';
   columns_    &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColumnTabType;
   column_     &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColRec;
BEGIN
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Reset_Column_Table(columns_);
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'ID_', 'NVARCHAR2(64)');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'ASSIGNEE_HASH_', 'NUMBER(19,0)');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'TIMESTAMP_', 'TIMESTAMP(6)');

   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   constraint_name_ VARCHAR2(30) := 'ACT_RU_TASK_METER_LOG_PK';
   table_name_ VARCHAR2(30) := 'ACT_RU_TASK_METER_LOG';
   columns_    &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColumnTabType;
BEGIN
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Reset_Column_Table(columns_);
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'ID_');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Create_Constraint(table_name_, constraint_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'ACT_IDX_TASK_METER_LOG_TIME';
   table_name_ VARCHAR2(30) := 'ACT_RU_TASK_METER_LOG';
   columns_    &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColumnTabType;
BEGIN
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Reset_Column_Table(columns_);
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Table_Column(columns_, 'TIMESTAMP_');  
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'ACT_RU_INCIDENT';
   column_ &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColRec;
BEGIN   
   column_ := &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Column_Values('ANNOTATION_', 'NVARCHAR2(2000)', 'Y');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Alter_Table_Column(table_name_, 'ADD', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'ACT_HI_INCIDENT';
   column_ &CAMUNDA_APPOWNER..Camunda_Install_SYS.ColRec;
BEGIN   
   column_ := &CAMUNDA_APPOWNER..Camunda_Install_SYS.Set_Column_Values('ANNOTATION_', 'NVARCHAR2(2000)', 'Y');
   &CAMUNDA_APPOWNER..Camunda_Install_SYS.Alter_Table_Column(table_name_, 'ADD', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

DELETE FROM &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG WHERE ID_ = '400' AND VERSION_ = '7.15.0';  
INSERT INTO &CAMUNDA_APPOWNER..ACT_GE_SCHEMA_LOG (ID_, TIMESTAMP_, VERSION_) VALUES ('400', CURRENT_TIMESTAMP, '7.15.0');

COMMIT;

PROMPT Creating table FND_ODP_INTERNAL_LIBS_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'FND_ODP_INTERNAL_LIBS_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'FILE_NAME', 'VARCHAR2(4000)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'MODULE', 'VARCHAR2(6)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);

   column_ := Installation_SYS.Set_Column_Values('CONTENT', 'BLOB', 'Y', NULL, 'LOB (CONTENT) STORE AS (TABLESPACE &IFSAPP_LOB CHUNK 4096 ENABLE STORAGE IN ROW)');
   Installation_SYS.Add_Lob_Column(table_name_, column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Creating index FND_ODP_INTERNAL_LIBS_PK

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'FND_ODP_INTERNAL_LIBS_PK';
   table_name_ VARCHAR2(30) := 'FND_ODP_INTERNAL_LIBS_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'FILE_NAME');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Creating index FND_ODP_INTERNAL_LIBS_RK

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'FND_ODP_INTERNAL_LIBS_RK';
   table_name_ VARCHAR2(30) := 'FND_ODP_INTERNAL_LIBS_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Add ROW_LEVEL_SECURITY column to the DICTIONARY_SYS_VIEW_TAB and DICTIONARY_SYS_VIEW_COLUMN_TAB tables

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   column_         Installation_SYS.ColRec;
BEGIN
   column_ := Installation_SYS.Set_Column_Values('ROW_LEVEL_SECURITY', 'VARCHAR2(1000)', 'Y');

   Installation_SYS.Alter_Table_Column('DICTIONARY_SYS_VIEW_TAB', 'ADD', column_, TRUE);
   Installation_SYS.Alter_Table_Column('DICTIONARY_SYS_VIEW_COLUMN_TAB', 'ADD', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Add DEFINITION_MODIFIED_DATE column to the FND_BRANDING_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   column_       Installation_SYS.colRec;
   table_name_    VARCHAR2(30) := 'FND_BRANDING_TAB';
BEGIN 
    column_ := Installation_SYS.Set_Column_Values ('DEFINITION_MODIFIED_DATE', 'DATE', 'Y');
    Installation_SYS.Alter_Table_Column (table_name_, 'A', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT INSERT 'TIME_FORMAT' parameter INTO FND_SETTING_TAB.

DECLARE
  newrec_ FND_SETTING_TAB%ROWTYPE;  
BEGIN
  newrec_.parameter        := 'TIME_FORMAT';
  newrec_.parameter_desc   := 'Aurena - Time format settings';
  newrec_.dynamic          := '177.2';
  newrec_.value            := 'LOCALE';
  newrec_.domain           := 'FORCED24H^LOCALE^';
  newrec_.domain_desc      := 'Time format is forced to show 24h clock, ignoring browser locale settings^Time format is based on browser locale settings^';
  newrec_.domain           := 'FORCED24H^LOCALE^';
  newrec_.category         := 'Aurena User Settings';
  newrec_.value_type       := 'FIXED STRING';
  newrec_.module           := 'FNDBAS';
  newrec_.client_read_only := 'FALSE';
  newrec_.rowversion       := SYSDATE;
  
  INSERT INTO FND_SETTING_TAB VALUES newrec_;
  COMMIT;

EXCEPTION
   WHEN dup_val_on_index THEN
      NULL;
END;
/

PROMPT Increase colum SIZE OF VALUE, DOMAIN, DOMAIN_DESC

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'FND_SETTING_TAB';
   column_     Installation_SYS.ColRec;
BEGIN
   column_ := Installation_SYS.Set_Column_Values ('VALUE', 'VARCHAR2(4000)', 'N');
   Installation_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   
   column_ := Installation_SYS.Set_Column_Values ('DOMAIN', 'VARCHAR2(4000)', 'N');
   Installation_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   
   column_ := Installation_SYS.Set_Column_Values ('DOMAIN_DESC', 'VARCHAR2(4000)', 'N');
   Installation_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Populating Reporting Queue tables with values from Connect tables.

-- [IFS COMPLETE BLOCK DECLAREEND]
BEGIN
   INSERT INTO report_config_instance_tab
          (group_name, instance_name, instance_type, description, rowversion)
   SELECT DISTINCT group_name, instance_name, instance_type, description, 1
   FROM   config_instance_tab
   WHERE  (   (instance_type = 'PrintAgent') 
          OR ((instance_type = 'MessageQueue' AND instance_name IN (SELECT QUEUE 
                                                                    FROM   connect_print_agent_task_tab))))
   AND (group_name, instance_name) NOT IN (SELECT group_name, instance_name 
                                           FROM report_config_instance_tab);

   INSERT INTO report_config_inst_param_tab
          (group_name, instance_name, parameter_name, parameter_value, rowversion)
   SELECT group_name, instance_name, parameter_name, parameter_value, 1
   FROM   config_instance_param_tab
   WHERE  (group_name, instance_name) IN (SELECT group_name, instance_name 
                                          FROM   report_config_instance_tab)
   AND    (group_name, instance_name, parameter_name) NOT IN (SELECT group_name, instance_name, parameter_name
                                                              FROM   report_config_inst_param_tab);

	INSERT INTO report_queue_tab
          (instance_name, description, static_config, enabled, execution_mode, stop_queue, log_level, priority, thread_count, rowversion)
   SELECT instance_name, description, static_config, enabled, execution_mode, stop_queue, log_level, priority, thread_count, 1
   FROM   connect_queue_tab
   WHERE  instance_name IN (SELECT instance_name
                            FROM   report_config_instance_tab
                            WHERE  instance_type = 'MessageQueue')
   AND    (instance_name) NOT IN (SELECT instance_name
                                  FROM   report_queue_tab);

	INSERT INTO report_print_agent_task_tab
          (instance_name, description, queue, execute_as, locale, print_locale, default_language, debug_level, report_formatter_name, debug_url, debug_password, rowversion)
   SELECT instance_name, description, queue, execute_as, locale, print_locale, default_language, debug_level, report_formatter_name, debug_url, debug_password, 1
   FROM   connect_print_agent_task_tab
   WHERE  instance_name NOT IN (SELECT instance_name
                                FROM   report_print_agent_task_tab);

	INSERT INTO report_printer_mapping_tab
         (template_instance_name, logical_printer_id, physical_printer, rowversion)
   SELECT template_instance_name, logical_printer_id, physical_printer, 1
   FROM   printer_mapping_tab
   WHERE  (template_instance_name, logical_printer_id) NOT IN (SELECT template_instance_name, logical_printer_id
                                                               FROM   report_printer_mapping_tab);
   COMMIT;																
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Alter cloumns in IAM_ADMIN_EVENT_TAB TABLE

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'IAM_ADMIN_EVENT_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'EVENT_TIME', 'DATE', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'OPERATION_TYPE', 'VARCHAR2(20)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'RESOURCE_TYPE', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'RESOURCE_PATH', 'VARCHAR2(3000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'REALM_ID', 'VARCHAR2(300)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ERROR', 'VARCHAR2(300)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'CLIENT_ID', 'VARCHAR2(300)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'USER_NAME', 'VARCHAR2(300)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'IP_ADDRESS', 'VARCHAR2(300)', 'Y');
   Installation_SYS.Alter_Table(table_name_, columns_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Alter cloumns in IAM_LOGIN_EVENT_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'IAM_LOGIN_EVENT_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'EVENT_TIME', 'DATE', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'EVENT_TYPE', 'VARCHAR2(300)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'REALM_ID', 'VARCHAR2(300)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'CLIENT_ID', 'VARCHAR2(300)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'USER_NAME', 'VARCHAR2(300)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'SESSION_ID', 'VARCHAR2(300)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ERROR', 'VARCHAR2(300)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'IP_ADDRESS', 'VARCHAR2(300)', 'Y');
   Installation_SYS.Alter_Table(table_name_, columns_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Alter cloumns in IAM_LOGIN_EVENT_DETAIL_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'IAM_LOGIN_EVENT_DETAIL_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'PARAMETER', 'VARCHAR2(300)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'VALUE', 'VARCHAR2(3000)', 'Y');
   Installation_SYS.Alter_Table(table_name_, columns_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

PROMPT Creating table FND_BRANDING_RESOURCE_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'FND_BRANDING_RESOURCE_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'FILE_NAME', 'VARCHAR2(200)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'TYPE', 'VARCHAR2(20)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'DATE_MODIFIED', 'DATE', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);

   column_ := Installation_SYS.Set_Column_Values('FILE_DATA', 'BLOB', 'Y', NULL, 'LOB (FILE_DATA) STORE AS (TABLESPACE &IFSAPP_LOB CHUNK 4096 ENABLE STORAGE IN ROW)');
   Installation_SYS.Add_Lob_Column(table_name_, column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'FND_BRANDING_RESOURCE_PK';
   table_name_ VARCHAR2(30) := 'FND_BRANDING_RESOURCE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'FILE_NAME');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'FND_BRANDING_RESOURCE_RK';
   table_name_ VARCHAR2(30) := 'FND_BRANDING_RESOURCE_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK BEGINEND]
BEGIN
   
	--Updating System users
	UPDATE FND_USER_TAB
	SET user_type ='SYSTEM_USER'
	WHERE identity = 'IFSSYNC';
   
	COMMIT;
		
END;
-- [END IFS COMPLETE BLOCK]
/
---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_18');

PROMPT Removing queue table REPORT_BATCH_PROC_RESP_QUEUE_TAB

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   no_table EXCEPTION;
   PRAGMA   EXCEPTION_INIT(no_table, -24002);
BEGIN
   Dbms_Aqadm.Drop_Queue_Table('REPORT_BATCH_PROC_RESP_QUEUE_TAB', true);   
EXCEPTION
   WHEN no_table THEN
      NULL;
   WHEN OTHERS THEN
      RAISE;
END;
-- [END IFS COMPLETE BLOCK]
/

COMMIT;

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES/COLUMNS -----------------------------
---------------------------------------------------------------------------------------------

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_18');

PROMPT Removing table QUICK_REPORT_VARIABLES_TAB

-- [IFS COMPLETE BLOCK BEGINEND]
BEGIN
   Installation_SYS.Remove_Table('QUICK_REPORT_VARIABLES_TAB', TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Timestamp_19');

PROMPT Removing view ORACLE_ALERT_LOG

-- [IFS COMPLETE BLOCK BEGINEND]
BEGIN
   Installation_SYS.Remove_View('ORACLE_ALERT_LOG', TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

DELETE FROM server_log_tab
WHERE category_id = 'Alert Log';

DELETE FROM server_log_category_tab
WHERE category_id = 'Alert Log';

COMMIT;

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PROJECTIONS ------------------------------------
---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE INDEXES/SEQUENCES ------------------------------
---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

PROMPT Upgrade statements IN FILE 2120.upg ends here.

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2120.upg', 'Finished');


-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
