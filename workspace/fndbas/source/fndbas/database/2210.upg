---------------------------------------------------------------------------------------------
--  Module : FNDBAS
--
--  Purpose: Upgrade database objects for IFS Base Functionality
--           from version 21.2.0 to 22.1.0
--
--  File   : 2210.upg
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  ------------------------------------------------------------------------
--  210917   stdafi  Created
--  210917   stdafi  Added column DELIVERY_PACKAGE_NAME to DELIVERY_REGISTRATION_TAB.
--  211004   achslk  Added BPA_ASYNC_CLEANUP_TAB table create script
--  211111   rakuse  Extended FND_MODEL_DESIGN_DATA_TAB with CONTENT_HASH, BASED_ON_CONTENT and BASED_ON_CONTENT_HASH (TEAURENAFW-6888).
--  220209   lgunlk  Removed BPA_ASYNC_CLEANUP_TAB and moved to FNDWF component (TEWF-825)
--  ------   ------  ------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SET SERVEROUTPUT ON
PROMPT START upgrading WITH 2210.upg

---------------------------------------------------------------------------------------------
------------------------------ Instructions for upg files -----------------------------------
---------------------------------------------------------------------------------------------
--
--  Main section should contain all upgrade operations.
--  Next section should contain removal of obsolete objects (any removal of data inside upg is prohibited!).
--  Removal of backup tables and obsolete columns should be added to <component>Cl.sql script!
--
--  If possible, everything regarding one table should be placed in one section.
--  If this is not possible, a proper comment about the reason should be added.
--
--  Each section should be started with a "-----" line and a empty line.
--  This section should then start with a line like: "-- ***** Example_Tab Start *****"
--  and end with a line like:                       "-- ***** Example_Tab End *****"
--
--  Don't forget UPPER/lower case !
--
--  Every part inside the section should start with a "PROMPT" line explaining what is done by the block.
--
--  If the PL/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.
--
--  Remember ordinary coding standard rules !
--
--  Don't drop any Table/Column !
--
--  Don't forget performance when updating large table !
--
--  No unnecessary blank lines or comments !
--
--  If possible, use pure SQL commands
--
--  If possible, try to group several updates together in one statement.
--
--  Timestamps will be added automatically at the end of the project.
--
--  For more information refer to the "Upgrade Script Standards" and the "Performance" technical documents.
--
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES -----------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
--------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ------------------
---------------------------------------------------------------------------------------------

-- ***** DELIVERY_REGISTRATION_TAB Start *****

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'DELIVERY_REGISTRATION_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'DELIVERY_PACKAGE_NAME', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Alter_Table(table_name_, columns_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- ***** DELIVERY_REGISTRATION_TAB End *****

-- ***** FND_AV_SCANNING_LOG_TAB Start *****

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'FND_AV_SCANNING_LOG_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   IF (Installation_SYS.Table_Exist(table_name_)) THEN
      Installation_SYS.Rename_Column(table_name_, 'TABLE_NAME', 'FILE_ID');
      Installation_SYS.Rename_Column(table_name_, 'REF_ROWKEY', 'LU_NAME');
      
      Installation_SYS.Reset_Column_Table(columns_);
      Installation_SYS.Set_Table_Column(columns_, 'INFO', 'VARCHAR2(1000)', 'Y');
      Installation_SYS.Alter_Table(table_name_, columns_, TRUE);
   ELSE
      Installation_SYS.Reset_Column_Table(columns_);
      Installation_SYS.Set_Table_Column(columns_, 'TIMESTAMP', 'TIMESTAMP(9)', 'N');
      Installation_SYS.Set_Table_Column(columns_, 'TABLE_NAME', 'VARCHAR2(50)', 'N');
      Installation_SYS.Set_Table_Column(columns_, 'REF_ROWKEY', 'VARCHAR2(50)', 'N');
      Installation_SYS.Set_Table_Column(columns_, 'AGENT', 'VARCHAR2(10)', 'N', '''FSS''');
      Installation_SYS.Set_Table_Column(columns_, 'EVENT', 'VARCHAR2(100)', 'Y');
      Installation_SYS.Set_Table_Column(columns_, 'IDENTITY', 'VARCHAR2(30)', 'N');
      Installation_SYS.Set_Table_Column(columns_, 'INFO', 'VARCHAR2(1000)', 'Y');
      Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   END IF;
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
	method_name_	VARCHAR2(200) := 'DATABASE_SYS.GRANT_ALL_PROJECTIONS_READONLY';
BEGIN
	DELETE FROM batch_schedule_tab
	WHERE schedule_method_id IN (SELECT schedule_method_id 
								 FROM batch_schedule_method_tab 
								 WHERE method_name = method_name_);
 
END;
-- [END IFS COMPLETE BLOCK]
/

-----------------------------------------------------------------------------
-------------------- INDEX DEFINITIONS --------------------------------------
-----------------------------------------------------------------------------

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'FND_AV_SCANNING_LOG_PK';
   table_name_ VARCHAR2(30) := 'FND_AV_SCANNING_LOG_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'TIMESTAMP');
   Installation_SYS.Set_Table_Column(columns_, 'TABLE_NAME');
   Installation_SYS.Set_Table_Column(columns_, 'REF_ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/


-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'FND_AV_SCANNING_LOG_RK';
   table_name_ VARCHAR2(30) := 'FND_AV_SCANNING_LOG_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- ***** FND_AV_SCANNING_LOG_TAB End *****

-- ***** FND_BLOB_SCAN_INFO_TAB Start *****

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'FND_BLOB_SCAN_INFO_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'TABLE_NAME', 'VARCHAR2(30)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'REF_ROWKEY', 'VARCHAR2(50)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'AGENT', 'VARCHAR2(10)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'AV_DATABASE_VERSION', 'VARCHAR2(100)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/


-----------------------------------------------------------------------------
-------------------- INDEX DEFINITIONS --------------------------------------
-----------------------------------------------------------------------------

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'FND_BLOB_SCAN_INFO_PK';
   table_name_ VARCHAR2(30) := 'FND_BLOB_SCAN_INFO_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'TABLE_NAME');
   Installation_SYS.Set_Table_Column(columns_, 'REF_ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/


-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'FND_BLOB_SCAN_INFO_RK';
   table_name_ VARCHAR2(30) := 'FND_BLOB_SCAN_INFO_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- ***** FND_BLOB_SCAN_INFO_TAB End *****



EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2210.upg', 'Timestamp_1');

PROMPT Extending FND_MODEL_DESIGN_DATA_TAB with CONTENT_HASH, BASED_ON_CONTENT and BASED_ON_CONTENT_HASH

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'FND_MODEL_DESIGN_DATA_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'MODEL_ID', 'VARCHAR2(250)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'SCOPE_ID', 'VARCHAR2(250)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'DATA_ID', 'VARCHAR2(250)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ARTIFACT', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'NAME', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'LINE_NO', 'NUMBER(10)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'LAYER_NO', 'NUMBER(2)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'CONTENT_HASH', 'VARCHAR2(40)', 'N', '''Unknown''');
   Installation_SYS.Set_Table_Column(columns_, 'BASED_ON_CONTENT_HASH', 'VARCHAR2(40)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'REFERENCE', 'VARCHAR2(1000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'VISIBILITY', 'VARCHAR2(10)', 'N', '''Public''');
   Installation_SYS.Set_Table_Column(columns_, 'DEPENDENCIES', 'VARCHAR2(1000)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'SCHEMA_VERSION', 'NUMBER', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);

   column_ := Installation_SYS.Set_Column_Values('CONTENT', 'CLOB', 'N', NULL, 'LOB (CONTENT) STORE AS (TABLESPACE &IFSAPP_LOB CHUNK 4096 ENABLE STORAGE IN ROW)');
   Installation_SYS.Add_Lob_Column(table_name_, column_, TRUE);

   column_ := Installation_SYS.Set_Column_Values('BASED_ON_CONTENT', 'CLOB', 'Y', NULL, 'LOB (BASED_ON_CONTENT) STORE AS (TABLESPACE &IFSAPP_LOB CHUNK 4096 ENABLE STORAGE IN ROW)');
   Installation_SYS.Add_Lob_Column(table_name_, column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2210.upg', 'Timestamp_2');

PROMPT Updating FND_MODEL_DESIGN_DATA_TAB

DECLARE
   RUNTIME_MAX_LAYER NUMBER := 79;
   
   CURSOR get_configured_content IS
     SELECT t2.content, t2.content_hash, t1.rowkey
     FROM fnd_model_design_data_tab t1, fnd_model_design_data_tab t2
     WHERE t1.layer_no > 1
     AND   t1.based_on_content_hash IS NULL
     AND   t2.model_id   = t1.model_id
     AND   t2.scope_id   = 'global'
     AND   t2.data_id    = t1.data_id
     AND   t2.layer_no   = (SELECT   MAX(t3.layer_no)
                            FROM  fnd_model_design_data_tab t3
                            WHERE t3.model_id = t2.model_id
                            AND   t3.data_id  = t2.data_id
                            AND   t3.scope_id = t2.scope_id
                            AND   t3.layer_no <= RUNTIME_MAX_LAYER)
     FOR UPDATE NOWAIT;

BEGIN
   -- Hash all content that has not yet been hashed (=Unknown)
   UPDATE fnd_model_design_data_tab
      SET content_hash = dbms_crypto.Hash(content, dbms_crypto.HASH_SH1 )
      WHERE content_hash = 'Unknown';

   -- Set based_on_content and based_on_content_hash for configured artifacts
   FOR next_ IN get_configured_content LOOP
      UPDATE fnd_model_design_data_tab
         SET based_on_content      = next_.content,
             based_on_content_hash = next_.content_hash
         WHERE rowkey = next_.rowkey;
   END LOOP;   
END;
/
COMMIT;
/

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2210.upg', 'Timestamp_3');

PROMPT Extending FND_MODEL_DESIGN_DATA_TAB with ROWVERSION

DECLARE
   table_name_ VARCHAR2(30) := 'FND_MODEL_DESIGN_DATA_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'Y');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;

PROMPT Updating FND_MODEL_DESIGN_DATA_TAB

DECLARE
BEGIN
   -- Fill rowversion with SYSDATE.
   UPDATE fnd_model_design_data_tab
      SET rowversion = SYSDATE
      WHERE rowversion IS NULL;
END;
/
COMMIT;
/

DECLARE
   table_name_ VARCHAR2(30) := 'FND_MODEL_DESIGN_DATA_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/


-- *****FSS_FILE_TAB Start *****

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'FSS_FILE_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'CREATED_BY', 'VARCHAR2(50)', 'Y');
   Installation_SYS.Set_Table_Column(columns_, 'MODIFIED_BY', 'VARCHAR2(50)', 'Y');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   table_name_ VARCHAR2(30) := 'FND_CONDITIONAL_FORMAT_TAB';
   columns_    Installation_SYS.ColumnTabType;
   column_     Installation_SYS.ColRec;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'FORMAT_KEY', 'VARCHAR2(500)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'FORMAT_URL', 'VARCHAR2(500)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'USER_ID', 'VARCHAR2(10)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'PRIORITY', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'FORMATTING_ATTRIBUTE', 'VARCHAR2(500)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'FORMATTING_ATTRIBUTE_LABEL', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'DISPLAY_CONDITION', 'VARCHAR2(1000)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'STYLE', 'VARCHAR2(100)', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROW_LEVEL', 'NUMBER', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Installation_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);

   column_ := Installation_SYS.Set_Column_Values('CONDITIONS_ARRAY', 'CLOB', 'N', NULL, 'LOB (CONDITIONS_ARRAY) STORE AS (TABLESPACE &IFSAPP_LOB CHUNK 4096 ENABLE STORAGE IN ROW)');
   Installation_SYS.Add_Lob_Column(table_name_, column_, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'FND_CONDITIONAL_FORMAT_PK';
   table_name_ VARCHAR2(30) := 'FND_CONDITIONAL_FORMAT_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'FORMAT_KEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- [IFS COMPLETE BLOCK DECLAREEND]
DECLARE
   index_name_ VARCHAR2(30) := 'FND_CONDITIONAL_FORMAT_RK';
   table_name_ VARCHAR2(30) := 'FND_CONDITIONAL_FORMAT_TAB';
   columns_    Installation_SYS.ColumnTabType;
BEGIN
   Installation_SYS.Reset_Column_Table(columns_);
   Installation_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Installation_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
-- [END IFS COMPLETE BLOCK]
/

-- ***** FSS_FILE_TAB End *****

---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES/COLUMNS -----------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE INDEXES/SEQUENCES ------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

PROMPT Upgrade statements IN FILE 2210.upg ends here.

EXEC Installation_SYS.Log_Detail_Time_Stamp('FNDBAS', '2210.upg', 'Finished');

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
