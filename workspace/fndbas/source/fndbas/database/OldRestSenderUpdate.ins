-----------------------------------------------------------------------------
--  Module : FNDBAS
--
--  Purpose: Updating Old Rest Sender Addresses
--
--  File   : OldRestSenderUpdate.ins
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  --------------------------------------------------
--  200820   NadeLK  Created
--  ------   ------  --------------------------------------------------
-----------------------------------------------------------------------------
SET serveroutput ON

DECLARE
      TYPE v_array IS VARRAY(1000) OF VARCHAR2(4000); 
      updated_ BOOLEAN;
      --
      FUNCTION split(str varchar2, patt varchar2) RETURN v_array IS
          s BINARY_integer;
          e BINARY_integer;
          i BINARY_integer;
          token v_array;
      BEGIN
        token := v_array();
        i :=1;
        s := 0;
        e := INSTR(str, patt);
        WHILE(e > 0) LOOP
            token.extend; 
            token(i) := substr(str, s+1, e-s-1);
            s := e;
            e := INSTR(str, patt, s+1);
            i := i + 1;
        END LOOP;
        token.extend;
        token(i) := substr(str, s+1, length(str) -1);
        RETURN token;
      END split;

      FUNCTION update_rest_options RETURN BOOLEAN
      IS
         options_         VARCHAR2(32000);
         updated_options_ VARCHAR2(32000);
         attr_            VARCHAR2(32000);
         info_            VARCHAR2(32000);
         line_            varchar(4000);
         lines_           v_array;
         option_          VARCHAR2(32000);
         objid_           VARCHAR2(32000);
         objversion_      VARCHAR2(32000);
         CURSOR get_options IS
          SELECT t.options,t.rowid, t.rowversion  
          FROM ROUTING_ADDRESS_RUNTIME_TAB t
          WHERE t.transport_connector='REST'
          FOR UPDATE NOWAIT;
      BEGIN
        FOR opt_rec in get_options LOOP
		   updated_options_ := '';		
           options_ := opt_rec.options;      
           IF(options_ IS NOT NULL) THEN
              lines_ := split(options_, chr(10));
              FOR i in 1.. lines_.count LOOP
                line_ := lines_(i);
                IF(i=1) THEN
                   IF(instr(line_,'ROPC')>0 OR instr(line_,'ClientCredentials')>0) THEN
                      IF(instr(line_,'endpoint_token_parameters:')=0 AND instr(line_,'http_method:')=0) THEN
                         line_ := line_||' endpoint_token_parameters:';
                         line_ := line_||' http_method:NONE';
                      END IF;
                   END IF;
                   IF(instr(line_,'http_method:')=0) THEN
                      line_ := line_||' http_method:NONE';
                      dbms_output.put_line('line : '||line_);
                   END IF;  
                END IF;
                updated_options_ := updated_options_||line_||chr(10);
              END LOOP;
           END IF;
           Client_SYS.Add_To_Attr('OPTIONS',updated_options_,attr_);
           dbms_output.put_line('updated_options_ : '||updated_options_);
           Routing_Address_Runtime_Api.Modify__(info_,opt_rec.rowid,opt_rec.rowversion,attr_,'DO');
         END LOOP;
         RETURN TRUE;
      EXCEPTION
          WHEN OTHERS THEN
            RAISE;          
      END update_rest_options;
BEGIN
   updated_ := update_rest_options;
END;
/

COMMIT
/



