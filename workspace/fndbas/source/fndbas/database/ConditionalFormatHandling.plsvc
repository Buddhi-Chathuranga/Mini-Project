-----------------------------------------------------------------------------
--
--  Logical unit: ConditionalFormatHandling
--  Component:    FNDBAS
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------

layer Core;

FUNCTION Get_User_Id___ RETURN VARCHAR2
IS
BEGIN
   RETURN Fnd_Session_API.Get_Fnd_User();
END Get_User_Id___;

----------------------------- CONDITIONAL FORMAT EDIT DIALOG -------------------------------

@Override
PROCEDURE CRUD_Create___(
   rec_ IN OUT Conditional_Format_Virtual_Rec )
IS
BEGIN
   super(rec_);
   Fill_Records___(rec_.Objkey);
END CRUD_Create___;

@Override
PROCEDURE CRUD_Delete___(
   rec_ IN OUT Conditional_Format_List_Virtual_Rec )
IS
BEGIN
   Fill_Deleted_Records___(rec_.Objkey);
   super(rec_);
END CRUD_Delete___;

PROCEDURE Fill_Records___(
    objkey_ IN VARCHAR2)
IS
   colrec_       Conditional_Format_Virtual_Rec;
   colrec_key_   Conditional_Format_Virtual_Key;
   subcolrec_    Conditional_Format_List_Virtual_Rec;
   
   CURSOR get_conditional_format IS
      SELECT format_key,
             formatting_attribute_label,
             formatting_attribute,
             priority,
             conditions_array,
             display_condition,
             style,
             row_level
      FROM fnd_conditional_format
      WHERE format_url = colrec_.format_url
      AND user_id = colrec_.user_id;
      
BEGIN
   
   colrec_key_.Objkey := objkey_;
   colrec_            := Get_Record___(colrec_key_);

   FOR rec_ IN get_conditional_format LOOP
      subcolrec_.format_key := rec_.format_key;
      subcolrec_.formatting_attribute := rec_.formatting_attribute;
      subcolrec_.conditions_array := rec_.conditions_array;
      subcolrec_.priority := rec_.priority;
      subcolrec_.formatting_attribute_label := rec_.formatting_attribute_label;
      subcolrec_.display_condition := rec_.display_condition;
      subcolrec_.style := rec_.style;
      subcolrec_.row_level := CASE rec_.row_level WHEN 1 THEN TRUE WHEN 0 THEN FALSE END;
      New_Detail___(colrec_key_, subcolrec_);
   END LOOP;
   
END Fill_Records___;

PROCEDURE Save_Conditional_Formats___ (
   objkey_ IN VARCHAR2)
IS
   info_                   VARCHAR2(4000);
   objid_                  VARCHAR2(100);
   objversion_             VARCHAR2(100);
   attr_                   VARCHAR2(4000);
   
   newrec_        Conditional_Format_Virtual_Rec;
   key_           Conditional_Format_Virtual_Key;
   fndkey_        Fnd_Conditional_Format_Key;
   fnddeletekey_  Fnd_Conditional_Format_Key;
   
      CURSOR get_deleted_records IS
      SELECT format_key
      FROM ${PROJECTION}_DELETED_RECORDS_VIRTUAL_VRT;
   
BEGIN
   key_.objkey := objkey_;
   newrec_ := Get_Record___(key_);
   Client_SYS.Clear_Attr(attr_);
   
   -- Modify records
   FOR rec_ IN Get_Details_Array___ (key_) LOOP
      fndkey_.format_key := rec_.format_key;
      Get_Objid_Objversion___(objid_, objversion_, fndkey_);
      Client_SYS.Add_To_Attr('FORMATTING_ATTRIBUTE', rec_.formatting_attribute, attr_);
      Client_SYS.Add_To_Attr('FORMATTING_ATTRIBUTE_LABEL', rec_.formatting_attribute_label, attr_);
      Client_SYS.Add_To_Attr('PRIORITY', rec_.priority, attr_);
      IF rec_.conditions_array IS NOT NULL THEN
         Fnd_Conditional_Format_API.Write_Conditions_Array__(objversion_, objid_, rec_.conditions_array);
      END IF;
      Client_SYS.Add_To_Attr('DISPLAY_CONDITION', rec_.display_condition, attr_);
      Client_SYS.Add_To_Attr('STYLE', rec_.style, attr_);
      Client_SYS.Add_To_Attr('ROW_LEVEL', rec_.row_level, attr_);
      Fnd_Conditional_Format_API.Modify__(info_, objid_, objversion_, attr_, 'DO');  
   END LOOP;
   
   --Delete records
   FOR delete_rec_ IN get_deleted_records LOOP
      IF Fnd_Conditional_Format_API.Exists(delete_rec_.format_key) THEN
         fnddeletekey_.format_key := delete_rec_.format_key;
         Get_Objid_Objversion___(objid_, objversion_, fnddeletekey_);
         Fnd_Conditional_Format_API.Remove__(info_, objid_, objversion_, 'DO');
      END IF;
   END LOOP;
  
END Save_Conditional_Formats___;

PROCEDURE Fill_Deleted_Records___(
    objkey_ IN VARCHAR2)
IS
 
   colrec_     Conditional_Format_List_Virtual_Rec;
   colrec_key_ Conditional_Format_List_Virtual_Key;
   subcolrec_  Deleted_Records_Virtual_Rec;
      
BEGIN
   colrec_key_.Objkey := objkey_;
   colrec_            := Get_Record___(colrec_key_);
   subcolrec_.objkey           := sys_guid();
   subcolrec_.parent_objkey    := objkey_;
   subcolrec_.format_key := colrec_.format_key;
   CRUD_Create___(subcolrec_);
END Fill_Deleted_Records___;