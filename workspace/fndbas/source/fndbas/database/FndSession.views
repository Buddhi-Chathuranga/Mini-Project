-----------------------------------------------------------------------------
--
--  Logical unit: FndSession
--  Component:    FNDBAS
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------
COLUMN Sid IS
   Flags      = 'KMI-L'
   Datatype   = 'NUMBER'
   Prompt     = 'Sid';

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------

VIEW Fnd_Session IS
Prompt = 'Foundation Session Public View'
 SELECT nvl(Sys_Context('FNDSESSION_CTX', 'FND_USER'), user)   fnd_user,
        nvl(Sys_Context('FNDSESSION_CTX', 'LANGUAGE'), 'en')   language
 FROM   dual;

-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

VIEW Fnd_Runtime IS
SELECT
       sid                            sid,
       Audsid                         objversion,
       Audsid                         objid
FROM   v$session
WHERE  type = 'USER'
AND    audsid != 0;


VIEW Fnd_Session_Runtime IS
   Prompt = 'Fnd Session'
   SELECT s.sid                            sid,
       s.audsid                            audsid,
       s.serial#                           serial_no,
       Fnd_Session_API.Get_Category(s.username, s.client_identifier, s.program, s.type) category,
       case s.username 
         when 'IFSSYS' then          
           case nvl(substr(s.client_info, 31, 1), 'X')
              when 'X' then
                 null
              else
                 rtrim(substr(s.client_info, 1, 30))
           end                                 
         else
           s.username
       end                                 fnd_user,       
       s.username                          oracle_user,      
       s.status                            status,       
       logon_time                          creation_time,      
       decode(s.status, 'ACTIVE', SYSDATE, sysdate - last_call_et/(24*3600)) last_call,
       decode(s.status, 'ACTIVE',last_call_et,NULL) elapsed_time,
       Fnd_Session_API.Get_Sql_Statement(s.sql_address, s.sql_hash_value, s.sql_id) sql_statement,
       s.inst_id                           inst_id,
       case s.status
         when 'ACTIVE' then
             s.module
          else  
            null
          end                             package,
       case s.status
         when 'ACTIVE' then
            s.action
          else  
            null
          end                              method
FROM   gv$session s
       WHERE   s.type = 'USER'
       AND     s.audsid != 0;

