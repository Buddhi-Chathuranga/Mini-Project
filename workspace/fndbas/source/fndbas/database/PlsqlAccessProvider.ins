--
-- Install all Foundation1 setting parameters for Connect integration
--
--------------------------------------------------------------------------------------------
--
--  Date    Sign    History
--  ------  ------  -----------------------------------------------------------
--  030509  HAAR    Added commit in script (ToDo#4261).
--  040317  jhmase  New timestamp
--  040916  jhmase  Bug #47013 - New description on CONNECT receiver. Present CONNECT
--                  receiver is updated and Site Id set to NULL.
--------------------------------------------------------------------------------------------
SET SERVEROUTPUT ON

DECLARE
   PROCEDURE Update_Receiver (
      receiver_    IN VARCHAR2,
      description_ IN VARCHAR2 )
   IS
      info_  VARCHAR2(100);
      objid_ VARCHAR2(100);
      objv_  VARCHAR2(2000);
      attr_  VARCHAR2(2000);
      c1_rec message_receiver%ROWTYPE;
      CURSOR c1 IS
         SELECT *
         FROM   message_receiver
         WHERE  receiver = receiver_;
   BEGIN
      OPEN c1;
      FETCH c1 INTO c1_rec;
      IF c1%NOTFOUND THEN
         CLOSE c1;
         RETURN;
      END IF;
      CLOSE c1;
      IF c1_rec.description = description_ THEN
         RETURN;
      END IF;
      objid_ := c1_rec.objid;
      objv_  := c1_rec.objversion;
      Client_SYS.Clear_Attr(attr_);
      Client_SYS.Add_To_Attr('DESCRIPTION', description_, attr_);
      Client_SYS.Add_To_Attr('SITE_ID', '', attr_);
      Message_Receiver_API.Modify__(info_, objid_, objv_, attr_, 'DO');
   EXCEPTION
      WHEN OTHERS THEN
         NULL;
   END Update_Receiver;
   PROCEDURE New_Receiver (
      receiver_    IN VARCHAR2,
      description_ IN VARCHAR2 )
   IS
      info_  VARCHAR2(100);
      objid_ VARCHAR2(100);
      objv_  VARCHAR2(2000);
      attr_  VARCHAR2(2000);
      already_installed EXCEPTION;
      PRAGMA exception_init(already_installed, -20112);
   BEGIN
      Client_SYS.Clear_Attr(attr_);
      Client_SYS.Add_To_Attr('RECEIVER', receiver_, attr_);
      Client_SYS.Add_To_Attr('DESCRIPTION', description_, attr_);
      Message_Receiver_API.New__(info_, objid_, objv_, attr_, 'DO');
   EXCEPTION
      WHEN already_installed THEN
         IF receiver_ = 'CONNECT' THEN
            Update_Receiver(receiver_, description_);
         END IF;
   END New_Receiver;
   PROCEDURE New_Media (
      media_code_  IN VARCHAR2,
      description_ IN VARCHAR2 )
   IS
      info_  VARCHAR2(100);
      objid_ VARCHAR2(100);
      objv_  VARCHAR2(2000);
      attr_  VARCHAR2(2000);
      already_installed EXCEPTION;
      PRAGMA exception_init(already_installed, -20112);
   BEGIN
      Client_SYS.Clear_Attr(attr_);
      Client_SYS.Add_To_Attr('MEDIA_CODE', media_code_, attr_);
      Client_SYS.Add_To_Attr('DESCRIPTION', description_, attr_);
      Message_Media_API.New__(info_, objid_, objv_, attr_, 'DO');
   EXCEPTION
      WHEN already_installed THEN
         NULL;
   END New_Media;
   PROCEDURE Activate_Class (
      class_id_  IN VARCHAR2 )
   IS
      info_  VARCHAR2(100);
      objid_ VARCHAR2(100);
      objv_  VARCHAR2(2000);
      attr_  VARCHAR2(2000);
      not_installed EXCEPTION;
      PRAGMA exception_init(not_installed, -20115);
      CURSOR c1 IS
         SELECT objid, objversion
         FROM   message_class
         WHERE  class_id = class_id_;
   BEGIN
      OPEN c1;
      FETCH c1 INTO objid_, objv_;
      IF ( c1%NOTFOUND ) THEN
         RAISE not_installed;
      END IF;
      Client_SYS.Clear_Attr(attr_);
      Client_SYS.Add_To_Attr('SEND_DB', 'TRUE', attr_);
      Client_SYS.Add_To_Attr('RECEIVE_DB', 'FALSE', attr_);
      Message_Class_API.Modify__(info_, objid_, objv_, attr_, 'DO');
      EXCEPTION
        WHEN others THEN
           dbms_output.put_line(sqlerrm);
   END Activate_Class;
BEGIN
   --
   -- Register Message Class for Connect integration - used by Connectivity
   --
   Message_Class_API.Install_Class__('EVENT_MSG', '',
                                     'IFS/Connect notifications');
   Activate_Class('EVENT_MSG');
   --
   Message_Class_API.Install_Class__('CONNECT_MSG', '',
                                     'IFS/Connect messages');
   Activate_Class('CONNECT_MSG');
   --
   Message_Class_API.Install_Class__('CONNECT_SEND', '',
                                     'IFS/Connect transport of Connectivity messages');
   Activate_Class('CONNECT_SEND');
   --
   -- Register Message Media for Connect integration - used by Connectivity
   --
   New_Media ('CONNECT','IFS/Connect integration - Default media code');
   --
   -- Register Message Receiver for Connect integration - used by Connectivity
   --
   New_Receiver ('CONNECT','IFS/Connect default receiver - Site Id MUST be empty');

END;
/

COMMIT
/

