DEFINE TABLE    = INSTALL_TEM_SYS_TAB
DEFINE SEQUENCE = INSTALL_TEM_SYS_SEQ

PROMPT Creating &TABLE

DECLARE
   stmt_            VARCHAR2(2000);
   dummy_           NUMBER;
   CURSOR check_tab_exist (table_ IN VARCHAR2) IS
      SELECT 1
      FROM dba_tables
      WHERE owner = UPPER('&APPLICATION_OWNER')
      AND table_name = table_;
   CURSOR check_key_exist (table_ IN VARCHAR2, index_name_ IN VARCHAR2) IS
      SELECT 1
      FROM dba_indexes
      WHERE owner = UPPER('&APPLICATION_OWNER')
      AND table_name = table_
      AND index_name = index_name_;
   CURSOR check_seq_exist (seq_ IN VARCHAR2) IS
      SELECT 1
      FROM dba_objects
      WHERE owner = UPPER('&APPLICATION_OWNER')
      AND object_name = seq_;
   PROCEDURE Alter_Column (
      table_       IN VARCHAR2,
      column_name_ IN VARCHAR2,
      type_        IN VARCHAR2 )
   IS
      stmt_  VARCHAR2(1000);
      dummy_ NUMBER;
      CURSOR check_col_exist IS
         SELECT 1
         FROM dba_tab_columns
         WHERE owner = UPPER('&APPLICATION_OWNER')
         AND table_name = table_
         AND column_name = column_name_;
   BEGIN
      OPEN check_col_exist;
      FETCH check_col_exist INTO dummy_;
      IF check_col_exist%FOUND THEN
         CLOSE check_col_exist;
         stmt_ := 'ALTER TABLE &APPLICATION_OWNER..'||table_ ||
                  ' MODIFY '||  column_name_ || ' ' || type_;
         EXECUTE IMMEDIATE stmt_;
      ELSE
         CLOSE check_col_exist;
         stmt_ := 'ALTER TABLE &APPLICATION_OWNER..'||table_ ||
                  ' ADD '||  column_name_ || ' ' || type_;
         EXECUTE IMMEDIATE stmt_;
      END IF;
   END Alter_Column;
BEGIN
   OPEN check_tab_exist ('&TABLE');
   FETCH check_tab_exist INTO dummy_;
   IF check_tab_exist%FOUND THEN
      CLOSE check_tab_exist;
   ELSE
      CLOSE check_tab_exist;
      stmt_ := 'CREATE TABLE &APPLICATION_OWNER..&TABLE '||
               '(log_id        NUMBER NOT NULL) ' ||
               'TABLESPACE &IFSAPP_DATA';
      EXECUTE IMMEDIATE stmt_;
   END IF;
   OPEN check_key_exist('&TABLE', 'INSTALL_TEM_SYS_PK');
   FETCH check_key_exist INTO dummy_;
   IF check_key_exist%FOUND THEN
      CLOSE check_key_exist;
   ELSE
      CLOSE check_key_exist;
      stmt_ := 'ALTER TABLE &APPLICATION_OWNER..&TABLE '||
               'ADD CONSTRAINT INSTALL_TEM_SYS_PK PRIMARY KEY (LOG_ID) '||
               'USING INDEX TABLESPACE &IFSAPP_INDEX';
      EXECUTE IMMEDIATE stmt_;
   END IF;
   Alter_Column('&TABLE', 'ACTION',   'VARCHAR2(30)');
   Alter_Column('&TABLE', 'CATEGORY', 'VARCHAR2(30)');
   Alter_Column('&TABLE', 'CREATED',  'DATE');
   Alter_Column('&TABLE', 'LAST_MODIFIED', 'DATE');
   Alter_Column('&TABLE', 'GUID',     'VARCHAR2(15)');
   Alter_Column('&TABLE', 'TEXT1',    'VARCHAR2(1000)');
   Alter_Column('&TABLE', 'TEXT2',    'VARCHAR2(1000)');
   Alter_Column('&TABLE', 'TEXT3',    'VARCHAR2(1000)');
   Alter_Column('&TABLE', 'TEXT4',    'VARCHAR2(1000)');
   Alter_Column('&TABLE', 'TEXT5',    'VARCHAR2(1000)');
   Alter_Column('&TABLE', 'TEXT6',    'VARCHAR2(1000)');
   Alter_Column('&TABLE', 'TEXT7',    'VARCHAR2(1000)');
   Alter_Column('&TABLE', 'TEXT8',    'VARCHAR2(1000)');
   Alter_Column('&TABLE', 'TEXT9',    'VARCHAR2(1000)');
   Alter_Column('&TABLE', 'TEXT10',   'VARCHAR2(1000)');
   OPEN check_key_exist('&TABLE', 'INSTALL_TEM_SYS_IX');
   FETCH check_key_exist INTO dummy_;
   IF check_key_exist%FOUND THEN
      CLOSE check_key_exist;
   ELSE
      CLOSE check_key_exist;
      stmt_ := 'CREATE INDEX &APPLICATION_OWNER..INSTALL_TEM_SYS_IX ON &APPLICATION_OWNER..&TABLE (GUID, ACTION) '||
               'TABLESPACE &IFSAPP_INDEX';
      EXECUTE IMMEDIATE stmt_;
   END IF;
   OPEN check_seq_exist ('&SEQUENCE');
   FETCH check_seq_exist INTO dummy_;
   IF check_seq_exist%FOUND THEN
      CLOSE check_seq_exist;
   ELSE
      CLOSE check_seq_exist;
      EXECUTE IMMEDIATE 'SELECT nvl(MAX(log_id),0)+1 FROM &APPLICATION_OWNER..&TABLE' INTO dummy_;
      stmt_ := 'CREATE SEQUENCE &APPLICATION_OWNER..&SEQUENCE '||
               'START WITH '||dummy_;
      EXECUTE IMMEDIATE stmt_;
   END IF;
END;
/

