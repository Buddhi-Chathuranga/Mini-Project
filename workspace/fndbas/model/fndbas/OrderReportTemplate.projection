projection OrderReportTemplate;
component FNDBAS;
layer Core;
description "Template for all report ordering";
category Users;
-------------------------------- ENTITISETS ---------------------------------

entityset VirtualOrderReports for VirtualOrderReport {
   context Company(GlobalCompanyId);
}

entityset DistUserSet for DistributionUsersQuery;
entityset DistGroupSet for DistributionGroupQuery;

----------------------------- ORDER REPORT API ------------------------------

@Override
virtual VirtualOrderReport {
   crud = Create, Update;
   attribute IsCustom Text {
      fetch = "Aurena_Report_Metadata_SYS.Is_Custom_Defined__(report_id)";
   }
   attribute ReportMode Text {
      fetch = "Report_Definition_Api.Get_Report_Mode(report_id)";
   }
   attribute Args Text;
   attribute GlobalCompanyId Text;

   attribute ReportId Text;
   attribute ReportTitle Text {
      fetch = "Report_Definition_Api.Get_Report_Title(report_id)";
   }
   attribute ResultKey Number;
   attribute ScheduleJobId Number;
   attribute RenderingCompleted Boolean;
   // Only for development purposes. Remove once dev is finished.
   --attribute DebugUsedParams Text;

      //NOTE: At least one reference needs to be specified in order to get the
   //      generated parameteter to work property, else metadata will be corrupt.
   //      Remove DummyReportIdRef when another reference is defined
   --attribute DummyReportId Text;
   --reference DummyReportIdRef(DummyReportId) to ReportDefinition(ReportId);

   --------- Distribution ---------
   attribute DistributionUsers Text;
   attribute DistributionGroups Text;

   ----------- Schedule -----------
   attribute ScheduleId Number;
   attribute Executions Number {
      fetch = "Batch_Schedule_API.Get_Executions(schedule_id)";
   }
   attribute ScheduleName Text {
      label = "Name";
   }
   attribute ScheduleOption Enumeration(ScheduleOption) {
      label = "Options";
   }
   attribute ScheduleTime Time {
      label = "Time";
   }
   attribute ScheduledDays Enumeration(DaysOfWeek) {
      label = "Select days";
      multiselect = [true];
   }
   attribute ScheduledDayNumber Integer {
      label = "Day";
   }
   attribute ScheduleDatetime Timestamp {
      label = "Date And Time";
   }
   attribute ScheduleInterval Text {
      label = "Every (HH:MM)";
   }
   attribute ExecutionPlan Text {
      label = "Custom Expression";
   }
   attribute NextExecutionDate Timestamp;

   attribute StartDate Date;
   attribute StopDate Date {
      label = "End Date";
   }

   ------ Schedule Options -------
   attribute Active Boolean("TRUE", "FALSE") {
      label = "Set as Active";
      required = [true];
      default = "TRUE";
   }
   attribute LangCode Text;
   attribute StreamMsgOnCompletion Boolean("TRUE", "FALSE") {
      label = "Send Stream Notification";
      required = [true];
      default = "TRUE";
   }
   attribute StreamNotes Text {
      label = "Message";
      maxlength = 2000;
   }

   ---- Report Settings ----------
   attribute LayoutName Text;
   attribute ReportLangCode Text;
   attribute ReportSetting Enumeration(ReportSettings) {
      required = [true];
      default = "'NONE'";
   }
   attribute ReportPrinterId Text;
   attribute ReportSendEmailTo Text;

   attribute ReportSendPdf Boolean("TRUE", "FALSE") {
      required = [true];
      default = "FALSE";
   }
   attribute ReportSendPdfTo Text;

   attribute ArchiveDocument Boolean("TRUE", "FALSE") {
      required = [true];
      default = "FALSE";
      label = "Archive the report as a document";
   }
   attribute ArchiveDocumentNo Text {
      label = "Document No";
   }

   reference AssistantLangCodeRef(LangCode) to LanguageCode(LangCode) {
      label = "Language Code";
   }
   reference LayoutNameRef(ReportId, LayoutName) to ReportLayoutDefinition(ReportId, LayoutName);
   reference ReportLangCodeRef(ReportLangCode) to LanguageCode(LangCode);
   reference PrinterIdRef(ReportPrinterId) to LogicalPrinter(PrinterId);

   // Specific Report Parameters
   // will be dynamically created differently for each report id
   dynamic attributes DynamicParam("$CLONED_ID$");

   attribute Parameter1 Text;
   attribute Parameter2 Text;
   attribute Parameter3 Text;
   attribute Parameter4 Text;
   attribute Parameter5 Text;
   attribute Parameter6 Text;
   attribute Parameter7 Text;
   attribute Parameter8 Text;
   attribute Parameter9 Text;
   attribute Parameter10 Text;
   attribute Parameter11 Text;
   attribute Parameter12 Text;
   attribute Parameter13 Text;
   attribute Parameter14 Text;
   attribute Parameter15 Text;
   attribute Parameter16 Text;
   attribute Parameter17 Text;
   attribute Parameter18 Text;
   attribute Parameter19 Text;
   attribute Parameter20 Text;
   attribute Parameter21 Text;
   attribute Parameter22 Text;
   attribute Parameter23 Text;
   attribute Parameter24 Text;
   attribute Parameter25 Text;
   attribute Parameter26 Text;
   attribute Parameter27 Text;
   attribute Parameter28 Text;
   attribute Parameter29 Text;
   attribute Parameter30 Text;

   action OrderReport Structure(ReportResult);
   action ScheduleReport Number;
}

---------------------------------- QUERIES ----------------------------------

query DistributionUsersQuery {
   from = "FND_USER";
   keys = Identity;
   attribute Identity Text;
   attribute Description Text;
}

query DistributionGroupQuery {
   from = "DISTRIBUTION_GROUP";
   keys = GroupName;
   attribute GroupName Text;
   attribute Description Text;
}

structure ReportResult {
   attribute ResultKey     Number;
   attribute ScheduleJobId Number;
   attribute RenderingCompleted Boolean;
}
---------------------------------- ACTION -----------------------------------
// This method is to support RMB actions from pages. The values can be transferred directly via other clients.
action OrderReport Number {
   initialcheck implementation;
   parameter ReportAttr Text;
   parameter ParameterValues Text;
   parameter DistribList Text;
}
--------------------------------- FUNCTIONS ---------------------------------

function ValidateCustomExecutionPlan Timestamp {
   parameter ExecutionPlan Text;
}

function EnumerateLayout List<Entity(ReportLayoutDefinition)> {
   parameter ReportId Text;
}

function EnumerateReportLanguages List<Entity(LanguageCode)> {
   parameter ReportId Text;
}

------------------------------- ENUMERATIONS --------------------------------

enumeration ReportSettings {
   value = "NONE" {
      label = "Do nothing";
   }
   value = "PRINTER" {
      label = "Print using";
   }
   value = "EMAIL" {
      label = "E-Mail to";
   }
}