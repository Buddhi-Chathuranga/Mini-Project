projection UserProfileService;
component FNDBAS;
layer Core;
description "Projection to handle User Profile with the Client";
category Users, ExternalB2B;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset FndClientProfileValues for FndrrClientProfileValue;
entityset FndClientProfiles for FndrrClientProfile;
------------------------------ ENTITY DETAILS -------------------------------

@Override
entity FndrrClientProfileValue {
   where = "profile_section like 'User/ifsweb%' or profile_section like 'User/General/ifsweb%' or profile_section like 'User/General/Regional Settings%'";
}

@Override
entity FndrrClientProfile {
   array ClientProfileValues(ProfileId) to FndrrClientProfileValue(ProfileId);
}

----------------------------- USERPROFILE DATA ------------------------------

function GetProfileSectionValues List<Entity(FndrrClientProfileValue)> {
   basedon  FndClientProfileValues;
   parameter ProfileSection Text;
}
-- Obsolete! Remove once GetProfileSectionValues is used by clientFW. /Rakuse
action GetProfileSection List<Entity(FndrrClientProfileValue)> {
   initialcheck none;
   parameter ProfileSection Text;
}

function GetProfileId Text {
   parameter Userid Text;
}

function GetProfileDetails List<Entity(FndrrClientProfile)> {
   basedon FndClientProfiles;
}

action SetProfileTextValue {
   initialcheck implementation;
   parameter ProfileSection Text;
   parameter ProfileEntry Text;
   parameter ProfileValue Text;
}

action SetClientProfileValue {
   initialcheck implementation;
   parameter ProfileSection Text;
   parameter ProfileEntry Text;
   parameter ProfileValue Text;
}

action GetTextValue Text {
   initialcheck none;
   parameter ProfileSection Text;
   parameter ProfileEntry Text;
}

action RemoveProfileSection {
   initialcheck implementation;
   parameter ProfileSection Text;
}

action RemoveProfileEntry {
   initialcheck implementation;
   parameter ProfileSection Text;
   parameter ProfileEntry Text;
}

---------------------------- MY ELEMENT ACTIONS -----------------------------

action SaveAllMyElements Text {
   initialcheck implementation;
   parameter ModifiedIds List<Text>;
   parameter DeletedIds List<Text>;
   parameter Data LongText;
}

action GetAllMyElements LongText {
   initialcheck implementation;
}

action GetMyElementsInPage LongText {
   initialcheck implementation;
   parameter PageId Text;
}

action GetMyElementIndexes List<Number> {
   initialcheck implementation;
   parameter Ids List<Text>;
   parameter PageId Text;
}

action AddElementsToPage Text {
   initialcheck implementation;
   parameter Ids List<Text>;
   parameter Indexes List<Number>;
   parameter PageId Text;
}

action GetSavedSearch List<Text> {
   initialcheck implementation;
}