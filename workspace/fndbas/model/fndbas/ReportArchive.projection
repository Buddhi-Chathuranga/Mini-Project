projection ReportArchive;
component FNDBAS;
layer Core;
description "Report Archive";
category Users;


----------------------------- MAIN ENTRY POINTS -----------------------------

entityset ArchiveSet for Archive;
entityset ArchiveDocumentSet for ArchiveDocuments;
entityset PdfArchiveSet for PdfArchive;
entityset PrintJobSet for PrintJob;
entityset XmlVirtualset for  XmlVirtual;
entityset ForwardAssistantVirtuals for ForwardAssistantVirtual;
entityset UserGroupSet for UserGroupVirtual;
entityset DistributionGroupSet for DistributionGroupVirtual;

query ArchiveDocuments {
   from = "pdf_archive";
   keys = ResultKey, Id;
   attribute ResultKey     Number;
   attribute Id            Text;
   attribute ReportTitle   Text {
      fetch = "ARCHIVE_API.Get_Report_Title(result_key)";
   }
   attribute LangCode      Text;
   attribute Pdf           Stream
      {
      fileinfo {
         filename FileName;
         mimetype MimetypePdf;
         attachment = [false];

      }
   }
   attribute PrintJobId    Number;
   attribute PdfSize       Number;
   attribute FileName      Text;
   attribute Notes         Text;
   attribute MimetypePdf   Text {
      fetch = "Pdf_Archive_API.Get_Mime_type(result_key,id)";
   }

}

@Override
entity PdfArchive {

   crud = Read;

   attribute ReportTitle   Text {
      fetch = "ARCHIVE_API.Get_Report_Title(result_key)";
   }


}

@Override
entity Archive {
   crud = Read;
   keys = ResultKey, Owner;
   where = "SHOW_STATE = 'V'";

   attribute ReportMode Text {

      fetch = "Report_definition_api.Get_Report_Mode(report_id)";

   }
   action ChangeExpDate {
      ludependencies = Archive, ArchiveDistribution;
      parameter ExpDate Date;
   }

}

@Override
entity PrintJob {
   crud = Read, Delete;
   attribute ResultKey Number {

      fetch = "Print_Job_Contents_api.Get_Result_Key(print_job_id)";

   }

}

structure ChangeExpDateStructure {
   attribute ExpireDate Date;
}

virtual XmlVirtual {
   attribute FileName Text;
   attribute FileData Stream {
      fileinfo {
         filename FileName;
      }

   }
}

virtual ForwardAssistantVirtual {
   attribute Name Text;
   attribute GroupName Text;
   attribute Action Text;
   array UserGroupArray(Objkey) to UserGroupVirtual(ParentObjkey);
   array DistributionGroupArray(Objkey) to DistributionGroupVirtual(ParentObjkey);

   action UpdateSelectedUserGroupList {
      initialcheck none;
      ludependencies = ForwardAssistantVirtual, UserGroupVirtual;
      parameter SelectedUserGroupList Text;
   }

   action UpdateSelectedDistributionGroupList {
      initialcheck none;
      ludependencies = ForwardAssistantVirtual, UserGroupVirtual;
      parameter SelectedDistributionGroupList Text;
   }
}

virtual UserGroupVirtual {
   attribute Identity Text;
   attribute Description Text;
   attribute IsSelected Boolean("TRUE", "FALSE");
}

virtual DistributionGroupVirtual {
   attribute GroupName Text;
   attribute Description Text;
   attribute IsSelected Boolean("TRUE", "FALSE");
}

------------------------------ ENTITY DETAILS -------------------------------


function MultipleDocuments Text {
   parameter ResultKey Number;

}

function GetResultKey Text {
   parameter PrintJobId Number;
}


action GetFullXml Text {
   initialcheck implementation;
   parameter ResultKey Number;
}

action Restart {
   initialcheck implementation;
   parameter PrintJobId Number;
}


action ForwardArchive {
   initialcheck implementation;
   parameter ResultKey Number;
   parameter UserList Text;
   parameter GroupList Text;
}
