projection PrintDialog;
component FNDBAS;
layer Core;
description "Put some useful description here ...";
category Users, ExternalB2B;
----------------------------- MAIN ENTRY POINTS -----------------------------

entityset ReportLayoutDefinitionSet for ReportLayoutDefinition;
entityset ReportLayoutSet for  ReportLayout;
entityset ReportFormatSet for PrintArchive;
entityset PdfArchiveSet for PdfArchive;
entityset LanguageCodeSet for LanguageCode {
   where = "Installed = 'True'";
}
entityset LogicalPrinterSet for LogicalPrinter;

------------------------------ ENTITY DETAILS -------------------------------

structure ReportLayoutItem {
   attribute LayoutId      Text;
   attribute Description   Text;
}

structure PrintDialogStruct {
   attribute ResultKey Number;
   attribute ReportId Text;
   attribute ReportTitle Text;
   attribute LayoutName Text;
   reference LayoutNameRef(ReportId, LayoutName) to ReportLayoutDefinition(ReportId, LayoutName);

   attribute LangCode Text;
   reference LangCodeRef(LangCode) to LanguageCode(LangCode);

   attribute LangCodeNF Text;
   attribute LangCodeRfc3066 Text;
   reference NumberFormatRef(LangCodeNF) to LanguageCode(LangCode) {
      copy LangCodeRfc3066 to LangCodeRfc3066;
   }
   attribute Description Text;
   attribute PrinterId   Text;
   reference PrinterIdRef(PrinterId) to LogicalPrinter(PrinterId) {
      copy PrinterId to PrinterId;
      copy Description to Description;
   }
   attribute Copies Number;
   attribute Pages  Text;
   attribute FromPage Number;
   attribute ToPage  Number;
   attribute Address Text;
   attribute Notes Text;


   attribute FieldInfo Text;
   attribute LangCodeFixed Boolean {
      editable = [false];
   }
   attribute PrinterIdFixed Boolean {
      editable = [false];
   }
   attribute LayoutNameFixed Boolean {
      editable = [false];
   }
   attribute CopiesFixed Boolean {
      editable = [false];
   }
   attribute EmailFixed Boolean {
      editable = [false];
   }
   attribute PagesFixed Boolean {
      editable = [false];
   }
   attribute LangCodeRfc3066Fixed Boolean {
      editable = [false];
   }
}

@Override
entity PrintArchive using ReportFormat {
   crud = Read, Update, Create;
   reference LayoutNameRef(ReportId, LayoutName) to ReportLayoutDefinition(ReportId, LayoutName);

   reference LangCodeRef(LangCode) to LanguageCode(LangCode);

   attribute LangCodeNF Text {
      fetch = "Language_Code_Api.Get_Lang_Code_From_Rfc3066(lang_code_rfc3066)";
   }

   reference NumberFormatRef(LangCodeNF) to LanguageCode(LangCode) {
      copy LangCodeRfc3066 to LangCodeRfc3066;
   }
   reference PrinterIdRef(PrinterId) to LogicalPrinter(PrinterId) {
      copy Description to Description;
   }
   where = "WHERE Security_Sys.Is_Projection_Available_(Aurena_Report_Metadata_SYS.Get_Projection_Name__(t.report_id)) = 'TRUE' or Security_SYS.Has_System_Privilege('ADMINISTRATOR') = 'TRUE'  or result_key in (SELECT ta.result_key FROM archive_distribution ta WHERE ta.user_name = Fnd_Session_Api.Get_Fnd_User() AND ta.result_key = result_key )";


}

@Override
entity ReportLayoutDefinition {
   attribute Layout Text {
      updatable = [false];
      insertable = [false];
      editable = [false];
      fetch = "Layout_Title || ' ( ' || Paper_Format || ')'";
   }
}

@Override
entity PdfArchive {
   attribute Pdf Stream {
      fileinfo {
         filename FileName;
         mimetype Notes;
         attachment = [false];
      }
   }

   attribute Notes Text {
      fetch = "Pdf_Archive_API.Get_Mime_type(result_key,id)";
   }
}

structure PreviewResult {
   attribute PrintJobId     Number;
   attribute RenderedOutputId Text;
}

function  EnumerateLayout List<Entity(ReportLayoutDefinition)> {
   parameter ReportId Text;
}

function EnumerateReportLanguages List<Entity(LanguageCode)> {
   parameter ReportId Text;
}

function NavigateToApplicaitonUrl  Text {
   parameter ResultKey Text;
}

function IsSetProperty Boolean {
   parameter FieldName Text;
   parameter FieldInfo Text;
}

action PrintDialogInit Structure(PrintDialogStruct) {
   initialcheck implementation;
   parameter ResultKey Number;
}

action PrintDialogBulkInit List<Structure(PrintDialogStruct)> {
   initialcheck implementation;
   parameter ResultKeyList  Text;
}

action ReportFormatRequestPlap Structure(PreviewResult) {
   initialcheck implementation;
   parameter ResultKey Number;
   parameter LayoutName Text {
      required = [false];
   }
   parameter LanguageCode Text {
      required = [false];
   }
   parameter NumberFormatting Text {
      required = [false];
   }
}

action ReportDirectPrintRequest Structure(PreviewResult) {
   initialcheck implementation;
   parameter ResultKey Number;
   parameter LayoutName Text {
      required = [false];
   }
   parameter LanguageCode Text {
      required = [false];
   }
   parameter NumberFormatting Text {
      required = [false];
   }
   parameter IsPreview Boolean {
      required = [false];
   }
}

action ReportPrintRequest {
   initialcheck implementation;
   parameter ResultKey Number;
   parameter LayoutName Text {
      required = [false];
   }
   parameter LanguageCode Text {
      required = [false];
   }
   parameter NumberFormatting Text {
      required = [false];
   }
   parameter LogicalPrinter Text {
      required = [false];
   }
   parameter Copies  Number {
      required = [false];
   }
   parameter Pages Text {
      required = [false];
   }

   parameter Email   Text {
      required = [false];
   }
}

action UpdatePrinterId {
   initialcheck implementation;
   parameter ResultKey Number;
   parameter RenderedOutputId Text;
   parameter PrinterId Text;
}
