client ConditionalFormat;
component FNDBAS;
layer Core;
projection ConditionalFormatHandling;


-------------------------------- MAIN PAGES ---------------------------------

page ManageFormatDialog using ConditionalFormatVirtualSet {
   command OpenDialogCommand;
}

----------------------------------- LISTS -----------------------------------
list ManageFormatColumnsList for ConditionalFormatListVirtual {
   label = "Manage Formatting";
   orderby = Priority desc;
   toolbar {
      enabled = [false];
   }
   crudactions {
      new {
         enabled = [false];
      }
      edit {
         enabled = [false];
      }
   }
   field FormattingAttributeLabel {
      label = "Attribute";
   }
   field DisplayCondition {
      size = Large;
      label = "Condtion";
   }
   field Style {
      colorpicker {
         colorpalette Dataviz;
      }
   }
   field RowLevel {
      label = "Apply to Entire Row";
   }
   command EditConditionalFormat;
}

--------------------------- MANAGE FORMAT DIALOG ----------------------------
assistant ManageFormatDialog using ConditionalFormatVirtualSet {
   label = "Manage Formatting";
   savemode = OnLostFocus;
   input(FormatUrl, UserId);

   steps {
      step {
         list ManageFormatColumnsList(DetailsArray);
      }
      final step {
      }
      cancelled step {
      }
   }
   finish command {
      label = "OK";
      execute {
         call SaveConditionalFormats(Objkey);
      }
   }
}

command OpenDialogCommand for ConditionalFormatVirtual {
   mode = Global;
   variable FormatUrl Text;
   execute {
      set FormatUrl = "page/${pageinfo.client}/${pageinfo.name}/list/${listinfo.name}";
      call GetUserId() into UserId;
      assistant ManageFormatDialog(FormatUrl, UserId) {
         when OK {
            exit OK;
         }
         when CANCEL {
            exit CANCEL;
         }
      }
   }
}

command EditConditionalFormat {
   style = IconOnly;
   icon = "edit";
   mode = SingleRecord;
   execute {
      editconditionalformat(FormatKey);
      exit;
   }
}

