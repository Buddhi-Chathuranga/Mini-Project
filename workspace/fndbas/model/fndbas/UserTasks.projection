projection UserTasks;
component FNDBAS;
layer Core;
description "Projection Contains Functionality for User Tasks";
category Users, ExternalB2B;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset MyTodoItem for MyTodo;
entityset TodoItems for TodoItem;
entityset TodoItemVirtualSet for TodoItemVirtual;


------------------------------ ENTITY DETAILS -------------------------------
@Override
entity MyTodo using MyTodoItem {

   where = "folder_id = (select k.folder_id from TODO_FOLDER k where k.identity = Fnd_Session_API.Get_Fnd_User and k.folder_type_db = 'Todo')";
   crud = Create, Update, Delete;

   reference Title(ItemId) to  TodoItem(ItemId) {
      prefetch Title as Title;
   }

   reference ItemType(ItemId) to TodoItem(ItemId) {
      prefetch ItemType as ItemType;
   }

   reference Priority(ItemId) to TodoItem(ItemId) {
      prefetch Priority as Priority;
   }

   reference UrltoResource(ItemId) to TodoItem(ItemId) {
      prefetch WebUrl as UrltoResource;
   }

   reference CompletedRef(ItemId) to TodoItem(ItemId) {
      prefetch Completed as Completed;
   }
   reference ItemMessage(ItemId) to TodoItem(ItemId) {
      prefetch ItemMessage as ItemMessage;
   }

   @DynamicComponentDependency ENTERP
   reference PersonName(SentBy) to PersonInfo(PersonId) {
      prefetch Name as PersonName;
   }

}

@Override
entity MySentItem using MyTodoItem {

   where = "folder_id = (select k.folder_id from TODO_FOLDER k where k.identity = Fnd_Session_API.Get_Fnd_User and k.folder_type_db = 'SentItems')";
   crud = Update, Delete;

   reference Title(ItemId) to TodoItem(ItemId) {
      prefetch Title as Title;
   }

   reference ItemType(ItemId) to TodoItem(ItemId) {
      prefetch ItemType as ItemType;

   }

   reference Url(ItemId) to TodoItem(ItemId) {
      prefetch Url as Url;
   }

   reference Completed(ItemId) to TodoItem(ItemId) {
      prefetch Completed as Completed;
   }

   reference Priority(ItemId) to TodoItem(ItemId) {
      prefetch Priority as Priority;
   }
   reference ItemMessage(ItemId) to TodoItem(ItemId) {
      prefetch ItemMessage as ItemMessage;
   }
   attribute MyText Enumeration(TodoPriority) {
      fetch = "null";
   }
}

@Override
entity TodoItem {
   attribute Priority Enumeration(TodoPriority) {
      label = "Priority";
   }
   reference RefDueDate(ItemId) to MyTodoItem(ItemId) {
      prefetch DueDate as DueDate;
   }
   reference RefFlag(ItemId) to MyTodoItem(ItemId) {
      prefetch Flag as Flag;
   }
}

virtual TodoItemVirtual using MyTodoItem {
   attribute KeyRef Text;
   attribute Url Text;
}

action CompleteTask {
   initialcheck none;
   ludependencies = MyTodoItem;
   parameter ItemId Text;
}

action SetPriority {
   initialcheck none;
   ludependencies = MyTodoItem;
   parameter ItemId Text;
   parameter Priority Text;
}

action CreateNewBasicTask {
   initialcheck none;
   ludependencies = MyTodoItem;
   parameter PersonId Text {
      required = [FALSE];
   }
   parameter Title Text;
   parameter Message Text;
   parameter Priority Text;
   parameter BusinessObject Text;
   parameter Url Text;
   parameter KeyRef Text;
   parameter Flag Text;
   parameter DueDate Timestamp;
}

action ModifyMyTask {
   initialcheck none;
   ludependencies = MyTodoItem;
   parameter ItemId Text;
   parameter Title Text;
   parameter ItemMessage Text;
   parameter Priority Text;
   parameter Flag Text;
   parameter DueDate Timestamp;
}

action MarkAsRead {
   initialcheck none;
   ludependencies = MyTodoItem;
   parameter ItemId Text;
}

action MarkAsUnread {
   initialcheck none;
   ludependencies = MyTodoItem;
   parameter ItemId Text;
}

action SetMyTodoFlag {
   initialcheck none;
   ludependencies = MyTodoItem;
   parameter ItemId Text;
   parameter Flag Text;
}

action ClearMyTodoFlag {
   initialcheck none;
   ludependencies = MyTodoItem;
   parameter ItemId Text;
}

function ValidPerson Boolean {
   parameter PersonId Text;

}

-------------------------------- STRUCTURES ---------------------------------

structure ViewEditTaskStructure {
   attribute ItemId Text;
   attribute Title Text;
   attribute ItemMessage Text;
   attribute Priority Enumeration(TodoPriority);
   attribute DueDate Timestamp;
   attribute Flag Enumeration(TodoFlag);
   attribute WebUrl Text;

}
