client OperationalReports;
component FNDBAS;
layer Core;
include fragment ActiveComponentSelector;

--------------------------------- NAVIGATOR ---------------------------------
navigator {
   entry ReportsOverview parent SqlQuickReports.ReportingTopNode at index 1 {
      label = "Order Report";
      page ReportsOverview;
   }
}
-------------------------------- MAIN PAGES ---------------------------------
page ReportsOverview using ReportOverviewSet {
   label = "Order Report";
   list ReportOverviewList;
}

--------------------------------- COMMANDS ----------------------------------

command OrderReportCommand for ReportsOverview {
   label = "Order Report";
   variable FileName Text;
   execute {
      if [ReportType = "OPERATIONAL"] {
         if [CustomPage = null] {
            --call InitializeTemplate();
            navigate "assistant/${ClientName}/OrderReport";
         }
         else {
            navigate "${CustomPage}";
         }
      }
      if [ReportType = "BUSINESS_REPORTER"] {
--         call InitializeTemplate();
         navigate "assistant/${ClientName}/OrderReport";
      }
      if [ReportType = "SQL"] {
         navigate "quickreport/${ReportId}";
      }
	   if [ReportType = "QUERY"] {
         navigate "quickreport/${ReportId}";
      }
      if [ReportType = "MS_REPORT"] {
         navigate "page/QuickReportViewer/SSRS;$filter=QuickReportId eq ${ReportId}";
      }
      if [ReportType = "DASHBOARD"] {
         navigate "page/QuickReportViewer/SSRS;$filter=QuickReportId eq ${ReportId}";
      }
      if [ReportType = "CR"] {
         navigate "page/QuickReportViewer/Crystal;$filter=QuickReportId eq ${ReportId}";
      }
      if [ReportType = "WEB_REPORT"] {
         call GetQuickReportFileName(ReportId) into FileName;

         navigate "${FileName}";
      }
   }
}

command ScheduleReportCommand for ReportsOverview {
   label = "Schedule Report";
   mode = SingleRecord;
   enabled = [(ReportType = "OPERATIONAL" and CustomPage = null) or ReportType = "BUSINESS_REPORTER"];
   execute {
      --call InitializeTemplate();
      navigate "assistant/${ClientName}/ScheduleReport";
   }
}

--------------------------------- SELECTORS ---------------------------------

@Override
selector ReportDomainSelector for ReportDomain {
   field DomainId;
   field Description;
}

@Override
selector ReportCategorySelector for ReportCategory {
   field CategoryId;
   field Description;
}

----------------------------- VISUAL COMPONENTS -----------------------------

list ReportOverviewList for ReportsOverview {
   label = "Report Overview";

   crudactions {
      edit {
         enabled = [false];
      }
   }

   static ReportName {
      size = Large;
   }
   --static LuName;
   field ReportType;
   lov DomainIdRef with ReportDomainSelector {
      description = DomainIdRef.Description;
      size = Large;
   }
   lov CategoryRef with ReportCategorySelector {
      description = CategoryRef.Description;
      size = Large;
   }
   field Schedulable {
      required = [true];
   }
   field ReportId {
      columnvisible = [false];
   }
   field ComponentRef {
      columnvisible = [false];
   }

   command OrderReportCommand;
   command ScheduleReportCommand;
}