client CustomBranding;
component FNDBAS;
layer Core;

--------------------------------- FRAGMENTS ---------------------------------

----------------------------- NAVIGATOR ENTRIES -----------------------------

-------------------------------- MAIN PAGES ---------------------------------

page BrandingPage using Brandings {

   label = "Appearance Configuration";
   crudactions {

      delete {
         message = "Delete appearance configuration?";
      }

   }
   selector BrandingSelector;

   markdowntext {
      text = "Use the following format for Value:
-	Color: #ffffff
-	Image or logo: `https://example.com/image.png` (Supported formats: png, jpg)
-	Font: : `https://example.com/font.woff2` (Supported formats: woff, woff2, ttf, otf)

To preview, use the Appearance Designer in the user menu. To publish, go to the Appearance Context Mapping page.
";
   }

   group BrandGroup;

// Ignoring the appType for now..
// group BusinessGroup;

   tabs {
      tab {
         label = "Light";
         list PropertyDefaultList(PropertiesDefault);
      }
      tab {
         label = "Dark";
         list PropertyDarkList(PropertiesDark);
      }
   }

   command NavigateToConfigCommand;
   global ActivePotential Text = "test";

}

page BrandingConfiguration using Brandings {
   label = "Appearance Context Mapping";

   markdowntext {
      text = "Custom contexts are mapped using the Context expression
- Attributes: [ COMPANY, USER, USERGROUP, WAGECLASS, LEDGER ]
- Operators: [ =, !=, AND, OR, ( ) ]
- Values are case sensitive. Values with spaces or special characters must be enclosed with quotation marks. Note: user identifier must be uppercase.
- Example: (COMPANY = 'Aaa Bbb' OR COMPANY = Cccc) AND USER != ALAIN

To preview, use the Appearance Designer in the user menu.

To publish: Only 1 published appearance can be set for each context. Unpublish any conflicts first
";
   }
   list BrandingList using Brandings;
}

--------------------------------- COMMANDS ----------------------------------

command CopyDefaultToDarkCommand for FndBrandingPropertyDefault {
   label = "Copy Light Properties";
   mode = Global;
   execute {
      call CopyDefaultProperties(Code, "working-late");
   }
}

command CopySingleToDarkCommand for FndBrandingPropertyDark {
   label = "Copy ${Property} from Light";
   mode = SingleRecord;
   execute {
      call CopyDefaultProperty(Code, Property, "working-late");
   }
}

command UnpublishCommand for FndBranding {
   label = "Unpublish";
   mode = SelectedRecords;
   enabled = [(State = "Published")];

   execute {
      call Unpublish(Code);
   }
}

command PublishCommand for FndBranding {
   label = "Publish";
   mode = SelectedRecords;
   enabled = [(State = "Unpublished")];

   execute {
      call Publish(Code);
   }
}

command NavigateToConfigCommand for FndBranding {
   label = "Context Mapping";
   mode = Global;

   execute {
      navigate {
         page BrandingConfiguration;
      }
   }
}

command BulkNavigateToMainCommand for FndBranding {
   label = "Appearance Configuration";
   mode = SelectedRecords;
   enabled = [component.BrandingList.SelectionCount > 0];

   bulkexecute {
      bulknavigate BrandingPage(Code);
   }
}

command NavigateToMainCommand for FndBranding {
   label = "Appearance Configuration";
   mode = Global;
   enabled = [component.BrandingList.SelectionCount = 0];

   execute {
      navigate BrandingPage;
   }
}

--------------------------------- SELECTORS ---------------------------------

selector BrandingSelector for FndBranding {
   label = "${Code} - ${Context}";
   field Code {
      label = "Appearance ID";
   }
   field Name;
   badge Context {
      emphasis Info = [Context = "Global"];
      emphasis Normal = [Context = "Custom"];
   }
   badge State {
      label = "Status";
      emphasis Ok = [State = "Published"];
      emphasis StateChanged = [State = "Unpublished"];

   }
}

selector TokenSelector for FndBrandingToken {
   field Property;
   field Description;
}

---------------------------------- GROUPS -----------------------------------

group BrandGroup for FndBranding {
   label = "";

   field Code {
      editable = [false];
      label = "Appearance ID";
      size = Small;

   }
   field Name {
      size = Medium;
   }
   field Description {
      size = Medium;
   }
   badge Context {
      emphasis Info = [Context = "Global"];
      emphasis Normal = [Context = "Custom"];
      size = Small;
   }
   badge State {
      label = "Status";
      editable = [false];
      emphasis Ok = [State = "Published"];
      emphasis StateChanged = [State = "Unpublished"];
      size = Small;
      icon = "edit-alt";
   }
   field Notes {
      multiline = true;
      size = Small;
   }

}

group BusinessGroup for FndBranding {
   label = "Business";

   field EnableB2E {
      label = "Enable on B2E";
   }
   field EnableB2B {
      label = "Enable on B2B";
   }
}

----------------------------------- LISTS -----------------------------------

list BrandingList for FndBranding {

   label = "Branding Context Mapping";
   crudactions {
      new {
         enabled = [false];
      }
      duplicate {
         enabled = [false];
      }
      delete {
         enabled = [false];
      }
   }
   field Code {
      size = Small;
      label = "Appearance ID";
   }
   field Name {
      size = Medium;
   }
   field Description {
      columnvisible = [false];
      size = Large;
   }
   badge Context {

      size = Small;
      editable = [false];
      emphasis Info = [Context = "Global"];
      emphasis Normal = [Context = "Custom"];
   }
   field ContextExpression {
      size = Medium;
      editable = [Context = "Custom"];
      size = Medium;
   }

   badge State {
      size = Small;
      label = "Status";
      editable = [false];
      emphasis Ok = [State = "Published"];
      emphasis StateChanged = [State = "Unpublished"];
      icon = "edit-alt";
   }

   field Notes {
      size = Small;
      multiline = true;
   }

   command UnpublishCommand;
   command PublishCommand;
   command BulkNavigateToMainCommand;
   command NavigateToMainCommand;
}

list PropertyDefaultList for FndBrandingPropertyDefault {
   editmode = SingleCellEdit;
   multiselect = [true];

   fieldset PropertyFieldSet;
}

list PropertyDarkList for FndBrandingPropertyDark {
   editmode = SingleCellEdit;
   multiselect = [true];

   fieldset PropertyFieldSet;
   command CopyDefaultToDarkCommand;
   command CopySingleToDarkCommand;

}

fieldset PropertyFieldSet {
   lov PropertyRef with TokenSelector using Tokens {
      label = "Property";

      search = Property, Description;
      advancedview PropertyLovsList;
   }
   field PropertyRef.Description {
      size = Large;

      label = "Description";
   }
   field Value {
      size = Large;
   }
}

list PropertyLovsList for FndBrandingToken {
   label = "Property";

   field Property;
   field Description {
      size = Large;
   }
   field Type;
}

---------------------------------- DIALOGS ----------------------------------


-------------------------------- SINGLETONS ---------------------------------


---------------------------------- CHARTS -----------------------------------


--------------------------------- CALENDERS ---------------------------------


---------------------------------- SHEETS -----------------------------------


----------------------------- STATE INDICATORS ------------------------------


----------------------------------- TREES -----------------------------------


---------------------------------- PLUGINS ----------------------------------


------------------------------- IMAGE VIEWERS -------------------------------
