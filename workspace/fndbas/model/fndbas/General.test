<?xml version="1.0" encoding="UTF-8"?>
<TEST xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:ifsworld-com:schemas:test_test">
   <NAME>General</NAME>
   <COMPONENT>FNDBAS</COMPONENT>
   <SET_UPS>
      <COMMAND>
         <PLSQL_BLOCK>CREATE OR REPLACE PACKAGE General_TST IS
   PROCEDURE A;
   PROCEDURE B;
   PROCEDURE C;
   PROCEDURE D;
   PROCEDURE E;
   FUNCTION F RETURN VARCHAR2; 
   FUNCTION G RETURN VARCHAR2;
   PROCEDURE Init;
END General_TST;</PLSQL_BLOCK>
      </COMMAND>
      <COMMAND>
         <PLSQL_BLOCK>CREATE OR REPLACE PACKAGE BODY General_TST IS
   PROCEDURE A IS
      string_ VARCHAR2(1000);
   BEGIN
      string_ := General_SYS.Method_Check_(&apos;A&apos;);
      Dbms_Output.Put_Line(string_);
   END A;

   PROCEDURE B IS
      string_ VARCHAR2(1000);
   BEGIN
      string_ := General_SYS.Method_Check_(&apos;B&apos;);
      Dbms_Output.Put_Line(string_);
      A;
   END B;

   PROCEDURE C IS
      string_ VARCHAR2(1000);
   BEGIN
      string_ := General_SYS.Method_Check_(&apos;C&apos;);
      Dbms_Output.Put_Line(string_);
      B;
   END C;

   PROCEDURE D IS
      cursor_ NUMBER;
      cnt_    NUMBER;
      string_ VARCHAR2(1000);
   BEGIN
      string_ := General_SYS.Method_Check_(&apos;D&apos;);
      Dbms_Output.Put_Line(string_);
      cursor_ := dbms_sql.open_cursor;
      dbms_sql.parse(cursor_, &apos;BEGIN General_TST.E; END;&apos;, dbms_sql.native);
      cnt_ := dbms_sql.execute(cursor_);
      dbms_sql.close_cursor(cursor_);
   END D;

   PROCEDURE E IS
      cursor_ NUMBER;
      cnt_    NUMBER;
      string_ VARCHAR2(1000);
   BEGIN
      string_ := General_SYS.Method_Check_(&apos;E&apos;);
      Dbms_Output.Put_Line(string_);
      EXECUTE IMMEDIATE &apos;BEGIN General_TST.A; END;&apos;;
   END E;

   FUNCTION F RETURN VARCHAR2 
   IS
      CURSOR get IS 
         SELECT General_TST.g x, utility_sys.Between_Str(&apos;qwe&apos;, &apos;q&apos;, &apos;e&apos;) y
         FROM dual;
      string_ VARCHAR2(1000);
   BEGIN
      string_ := General_SYS.Method_Check_(&apos;F&apos;);
      Dbms_Output.Put_Line(string_);
      FOR r IN get LOOP
         RETURN r.x;
      END loop;
      RETURN NULL;
   END F;

   FUNCTION G RETURN VARCHAR2 IS
      string_ VARCHAR2(1000);
   BEGIN
      string_ := General_SYS.Method_Check_(&apos;G&apos;);
      Dbms_Output.Put_Line(string_);
      RETURN NULL;
   END G;

   PROCEDURE Init 
   IS
   BEGIN
      NULL;
   END Init;

BEGIN
   FOR r IN (SELECT General_TST.f FROM dual) LOOP
      NULL;
   END LOOP;      
END General_TST;</PLSQL_BLOCK>
      </COMMAND>
   </SET_UPS>
   <TEAR_DOWNS>
      <COMMAND>
         <PLSQL_BLOCK>DROP PACKAGE General_TST</PLSQL_BLOCK>
      </COMMAND>
   </TEAR_DOWNS>
   <TEST_CASES>
      <TEST_CASE>
         <NAME>Elaboration</NAME>
         <PLSQL_BLOCK>DECLARE
   result_ VARCHAR2(1000);
BEGIN
   General_TST.Init;
END;</PLSQL_BLOCK>
         <TEST_RUNS>
            <TEST_RUN>
               <TEST_RUN_TYPE>RUN</TEST_RUN_TYPE>
               <EXPECTED_RESULTS>
                  <EXPECTED_RESULT>
                     <TEXT>NOCHECK for method F</TEXT>
                  </EXPECTED_RESULT>
                  <EXPECTED_RESULT>
                     <TEXT>NOCHECK for method G</TEXT>
                  </EXPECTED_RESULT>
               </EXPECTED_RESULTS>
            </TEST_RUN>
         </TEST_RUNS>
      </TEST_CASE>
      <TEST_CASE>
         <NAME>A</NAME>
         <PLSQL_BLOCK>DECLARE
   result_ VARCHAR2(1000);
BEGIN
   General_TST.A;
END;</PLSQL_BLOCK>
         <TEST_RUNS>
            <TEST_RUN>
               <TEST_RUN_TYPE>RUN</TEST_RUN_TYPE>
               <EXPECTED_RESULTS>
                  <EXPECTED_RESULT>
                     <TEXT>CHECK for method A</TEXT>
                  </EXPECTED_RESULT>
               </EXPECTED_RESULTS>
            </TEST_RUN>
         </TEST_RUNS>
      </TEST_CASE>
      <TEST_CASE>
         <NAME>B</NAME>
         <PLSQL_BLOCK>DECLARE
   result_ VARCHAR2(1000);
BEGIN
   General_TST.B;
END;</PLSQL_BLOCK>
         <TEST_RUNS>
            <TEST_RUN>
               <TEST_RUN_TYPE>RUN</TEST_RUN_TYPE>
               <EXPECTED_RESULTS>
                  <EXPECTED_RESULT>
                     <TEXT>CHECK for method B</TEXT>
                  </EXPECTED_RESULT>
                  <EXPECTED_RESULT>
                     <TEXT>NOCHECK for method A</TEXT>
                  </EXPECTED_RESULT>
               </EXPECTED_RESULTS>
            </TEST_RUN>
         </TEST_RUNS>
      </TEST_CASE>
      <TEST_CASE>
         <NAME>C</NAME>
         <PLSQL_BLOCK>DECLARE
   result_ VARCHAR2(1000);
BEGIN
   General_TST.C;
END;</PLSQL_BLOCK>
         <TEST_RUNS>
            <TEST_RUN>
               <TEST_RUN_TYPE>RUN</TEST_RUN_TYPE>
               <EXPECTED_RESULTS>
                  <EXPECTED_RESULT>
                     <TEXT>CHECK for method C</TEXT>
                  </EXPECTED_RESULT>
                  <EXPECTED_RESULT>
                     <TEXT>NOCHECK for method B</TEXT>
                  </EXPECTED_RESULT>
                  <EXPECTED_RESULT>
                     <TEXT>NOCHECK for method A</TEXT>
                  </EXPECTED_RESULT>
               </EXPECTED_RESULTS>
            </TEST_RUN>
         </TEST_RUNS>
      </TEST_CASE>
      <TEST_CASE>
         <NAME>D</NAME>
         <PLSQL_BLOCK>DECLARE
   result_ VARCHAR2(1000);
BEGIN
   General_TST.D;
END;</PLSQL_BLOCK>
         <TEST_RUNS>
            <TEST_RUN>
               <TEST_RUN_TYPE>RUN</TEST_RUN_TYPE>
               <EXPECTED_RESULTS>
                  <EXPECTED_RESULT>
                     <TEXT>CHECK for method D</TEXT>
                  </EXPECTED_RESULT>
                  <EXPECTED_RESULT>
                     <TEXT>NOCHECK for method E</TEXT>
                  </EXPECTED_RESULT>
                  <EXPECTED_RESULT>
                     <TEXT>NOCHECK for method A</TEXT>
                  </EXPECTED_RESULT>
               </EXPECTED_RESULTS>
            </TEST_RUN>
         </TEST_RUNS>
      </TEST_CASE>
      <TEST_CASE>
         <NAME>E</NAME>
         <PLSQL_BLOCK>DECLARE
   result_ VARCHAR2(1000);
BEGIN
   General_TST.E;
END;</PLSQL_BLOCK>
         <TEST_RUNS>
            <TEST_RUN>
               <TEST_RUN_TYPE>RUN</TEST_RUN_TYPE>
               <EXPECTED_RESULTS>
                  <EXPECTED_RESULT>
                     <TEXT>CHECK for method E</TEXT>
                  </EXPECTED_RESULT>
                  <EXPECTED_RESULT>
                     <TEXT>NOCHECK for method A</TEXT>
                  </EXPECTED_RESULT>
               </EXPECTED_RESULTS>
            </TEST_RUN>
         </TEST_RUNS>
      </TEST_CASE>
      <TEST_CASE>
         <NAME>F</NAME>
         <PLSQL_BLOCK>DECLARE
   result_ VARCHAR2(1000);
BEGIN
   SELECT General_TST.F INTO result_ FROM dual;
END;</PLSQL_BLOCK>
         <TEST_RUNS>
            <TEST_RUN>
               <TEST_RUN_TYPE>RUN</TEST_RUN_TYPE>
               <EXPECTED_RESULTS>
                  <EXPECTED_RESULT>
                     <TEXT>CHECK for method F</TEXT>
                  </EXPECTED_RESULT>
                  <EXPECTED_RESULT>
                     <TEXT>NOCHECK for method G</TEXT>
                  </EXPECTED_RESULT>
               </EXPECTED_RESULTS>
            </TEST_RUN>
         </TEST_RUNS>
      </TEST_CASE>
      <TEST_CASE>
         <NAME>G</NAME>
         <PLSQL_BLOCK>BEGIN
  FOR r IN (SELECT General_TST.F FROM dual) LOOP
     NULL;
  END LOOP;
END;</PLSQL_BLOCK>
         <TEST_RUNS>
            <TEST_RUN>
               <TEST_RUN_TYPE>RUN</TEST_RUN_TYPE>
               <EXPECTED_RESULTS>
                  <EXPECTED_RESULT>
                     <TEXT>CHECK for method F</TEXT>
                  </EXPECTED_RESULT>
                  <EXPECTED_RESULT>
                     <TEXT>NOCHECK for method G</TEXT>
                  </EXPECTED_RESULT>
               </EXPECTED_RESULTS>
            </TEST_RUN>
         </TEST_RUNS>
      </TEST_CASE>
      <TEST_CASE>
         <NAME>Nested</NAME>
         <PLSQL_BLOCK>DECLARE
   PROCEDURE Nested IS
   BEGIN
     FOR r IN (SELECT General_Tst.f FROM dual) LOOP
        NULL;
     END LOOP;
   END Nested;
BEGIN
   Nested;
END;</PLSQL_BLOCK>
         <TEST_RUNS>
            <TEST_RUN>
               <TEST_RUN_TYPE>RUN</TEST_RUN_TYPE>
               <EXPECTED_RESULTS>
                  <EXPECTED_RESULT>
                     <TEXT>CHECK for method F</TEXT>
                  </EXPECTED_RESULT>
                  <EXPECTED_RESULT>
                     <TEXT>NOCHECK for method G</TEXT>
                  </EXPECTED_RESULT>
               </EXPECTED_RESULTS>
            </TEST_RUN>
         </TEST_RUNS>
      </TEST_CASE>
      <TEST_CASE>
         <NAME>ExecuteImmediate</NAME>
         <PLSQL_BLOCK>BEGIN
   EXECUTE IMMEDIATE &apos;
DECLARE
   PROCEDURE Nested IS
   BEGIN
     FOR r IN (SELECT General_TST.f FROM dual) LOOP
        null;
     END LOOP;
   END Nested;
BEGIN
   Nested;
END;&apos;;
END;</PLSQL_BLOCK>
         <TEST_RUNS>
            <TEST_RUN>
               <TEST_RUN_TYPE>RUN</TEST_RUN_TYPE>
               <EXPECTED_RESULTS>
                  <EXPECTED_RESULT>
                     <TEXT>CHECK for method F</TEXT>
                  </EXPECTED_RESULT>
                  <EXPECTED_RESULT>
                     <TEXT>NOCHECK for method G</TEXT>
                  </EXPECTED_RESULT>
               </EXPECTED_RESULTS>
            </TEST_RUN>
         </TEST_RUNS>
      </TEST_CASE>
   </TEST_CASES>
</TEST>
