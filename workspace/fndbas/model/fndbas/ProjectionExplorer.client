client ProjectionExplorer;
component FNDBAS;
layer Core;

--------------------------------- FRAGMENTS ---------------------------------

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   @DynamicComponentDependency FNDADM
   entry ProjExplorerEntry parent FndadmNavigator.IntegrationFolder at index 400 {
      label = "API Explorer";
      page ProjExplorerPage;
   }
}
-------------------------------- MAIN PAGES ---------------------------------
page ProjExplorerPage using ProjExplorerQuerySet {
   label = "API Explorer";
   list ProjExplorerList;
}

--------------------------------- COMMANDS ----------------------------------
command ServiceDocumentMainCommand for ProjExplorerQuery {
   label = "Odata";
   variable ServiceUrlMain Text;
   enabled = [Categories != "Integration" and Categories != "ExternalB2B" and ProjectionName != null and ProjectionName != ""];
   mode = SingleRecord;
   execute {
      call GetServiceUrlMain(ProjectionName) into ServiceUrlMain;
      navigate "${pageinfo.server}${ServiceUrlMain}";
   }
}

command ServiceDocumentB2bCommand for ProjExplorerQuery {
   label = "Odata";
   variable ServiceUrlB2b Text;
   enabled = [Categories != "Integration" and Categories != "Users" and ProjectionName != null and ProjectionName != ""];
   mode = SingleRecord;
   execute {
      call GetServiceUrlB2b(ProjectionName) into ServiceUrlB2b;
      navigate "${pageinfo.server}${ServiceUrlB2b}";
   }
}

command ServiceDocumentIntCommand for ProjExplorerQuery {
   label = "Odata";
   variable ServiceUrlInt Text;
   enabled = [Categories != "ExternalB2B" and Categories != "Users" and Categories != "ExternalB2B,Users" and Categories != "Users,ExternalB2B" and ProjectionName != null and ProjectionName != ""];
   mode = SingleRecord;
   execute {
      call GetServiceUrlInt(ProjectionName) into ServiceUrlInt;
      navigate "${pageinfo.server}${ServiceUrlInt}";
   }
}

command OpenApiV2MainCommand for ProjExplorerQuery {
   label = "OpenAPI v2";
   variable OpenApiV2UrlMain Text;
   enabled = [Categories != "Integration" and Categories != "ExternalB2B" and ProjectionName != null and ProjectionName != ""];
   mode = SingleRecord;
   execute {
      call GetOpenApiV2UrlMain(ProjectionName) into OpenApiV2UrlMain;
      navigate "${pageinfo.server}${OpenApiV2UrlMain}";
   }
}

command OpenApiV2B2bCommand for ProjExplorerQuery {
   label = "OpenAPI v2";
   variable OpenApiV2UrlB2b Text;
   enabled = [Categories != "Integration" and Categories != "Users" and ProjectionName != null and ProjectionName != ""];
   mode = SingleRecord;
   execute {
      call GetOpenApiV2UrlB2b(ProjectionName) into OpenApiV2UrlB2b;
      navigate "${pageinfo.server}${OpenApiV2UrlB2b}";
   }
}

command OpenApiV2IntCommand for ProjExplorerQuery {
   label = "OpenAPI v2";
   variable OpenApiV2UrlInt Text;
   enabled = [Categories != "ExternalB2B" and Categories != "Users" and Categories != "ExternalB2B,Users" and Categories != "Users,ExternalB2B" and ProjectionName != null and ProjectionName != ""];
   mode = SingleRecord;
   execute {
      call GetOpenApiV2UrlInt(ProjectionName) into OpenApiV2UrlInt;
      navigate "${pageinfo.server}${OpenApiV2UrlInt}";
   }
}

command OpenApiV2MainMinCommand for ProjExplorerQuery {
   label = "OpenAPI v2 (Minimal)";
   variable OpenApiV2UrlMainMin Text;
   enabled = [Categories != "Integration" and Categories != "ExternalB2B" and ProjectionName != null and ProjectionName != ""];
   mode = SingleRecord;
   execute {
      call GetOpenApiV2UrlMainMinimal(ProjectionName) into OpenApiV2UrlMainMin;
      navigate "${pageinfo.server}${OpenApiV2UrlMainMin}";
   }
}

command OpenApiV2B2bMinCommand for ProjExplorerQuery {
   label = "OpenAPI v2 (Minimal)";
   variable OpenApiV2UrlB2bMin Text;
   enabled = [Categories != "Integration" and Categories != "Users" and ProjectionName != null and ProjectionName != ""];
   mode = SingleRecord;
   execute {
      call GetOpenApiV2UrlB2bMinimal(ProjectionName) into OpenApiV2UrlB2bMin;
      navigate "${pageinfo.server}${OpenApiV2UrlB2bMin}";
   }
}

command OpenApiV2IntMinCommand for ProjExplorerQuery {
   label = "OpenAPI v2 (Minimal)";
   variable OpenApiV2UrlIntMin Text;
   enabled = [Categories != "ExternalB2B" and Categories != "Users" and Categories != "ExternalB2B,Users" and Categories != "Users,ExternalB2B" and ProjectionName != null and ProjectionName != ""];
   mode = SingleRecord;
   execute {
      call GetOpenApiV2UrlIntMinimal(ProjectionName) into OpenApiV2UrlIntMin;
      navigate "${pageinfo.server}${OpenApiV2UrlIntMin}";
   }
}

command OpenApiV3MainCommand for ProjExplorerQuery {
   label = "OpenAPI v3";
   variable OpenApiV3UrlMain Text;
   enabled = [Categories != "Integration" and Categories != "ExternalB2B" and ProjectionName != null and ProjectionName != ""];
   mode = SingleRecord;
   execute {
      call GetOpenApiV3UrlMain(ProjectionName) into OpenApiV3UrlMain;
      navigate "${pageinfo.server}${OpenApiV3UrlMain}";
   }
}

command OpenApiV3B2bCommand for ProjExplorerQuery {
   label = "OpenAPI v3";
   variable OpenApiV3UrlB2b Text;
   enabled = [Categories != "Integration" and Categories != "Users" and ProjectionName != null and ProjectionName != ""];
   mode = SingleRecord;
   execute {
      call GetOpenApiV3UrlB2b(ProjectionName) into OpenApiV3UrlB2b;
      navigate "${pageinfo.server}${OpenApiV3UrlB2b}";
   }
}

command OpenApiV3IntCommand for ProjExplorerQuery {
   label = "OpenAPI v3";
   variable OpenApiV3UrlInt Text;
   enabled = [Categories != "ExternalB2B" and Categories != "Users" and Categories != "ExternalB2B,Users" and Categories != "Users,ExternalB2B" and ProjectionName != null and ProjectionName != ""];
   mode = SingleRecord;
   execute {
      call GetOpenApiV3UrlInt(ProjectionName) into OpenApiV3UrlInt;
      navigate "${pageinfo.server}${OpenApiV3UrlInt}";
   }
}

command ApiDocMainCommand for ProjExplorerQuery {
   label = "API Doc";
   variable OpenApiV3UrlMain Text;
   enabled = [Categories != "Integration" and Categories != "ExternalB2B" and ProjectionName != null and ProjectionName != ""];
   mode = SingleRecord;
   execute {
      call GetOpenApiV3UrlMain(ProjectionName) into OpenApiV3UrlMain;
      navigate "${pageinfo.server}/extensibility/apidoc-viewer/?openApiUrl=${pageinfo.server}${OpenApiV3UrlMain}";
   }
}

command ApiDocB2bCommand for ProjExplorerQuery {
   label = "API Doc";
   variable OpenApiV3UrlB2b Text;
   enabled = [Categories != "Integration" and Categories != "Users" and ProjectionName != null and ProjectionName != ""];
   mode = SingleRecord;
   execute {
      call GetOpenApiV3UrlB2b(ProjectionName) into OpenApiV3UrlB2b;
      navigate "${pageinfo.server}/extensibility/apidoc-viewer/?openApiUrl=${pageinfo.server}${OpenApiV3UrlB2b}";
   }
}

command ApiDocIntCommand for ProjExplorerQuery {
   label = "API Doc";
   variable OpenApiV3UrlInt Text;
   enabled = [Categories != "ExternalB2B" and Categories != "Users" and Categories != "ExternalB2B,Users" and Categories != "Users,ExternalB2B" and ProjectionName != null and ProjectionName != ""];
   mode = SingleRecord;
   execute {
      call GetOpenApiV3UrlInt(ProjectionName) into OpenApiV3UrlInt;
      navigate "${pageinfo.server}/extensibility/apidoc-viewer/?openApiUrl=${pageinfo.server}${OpenApiV3UrlInt}";
   }
}

--------------------------------- SELECTORS ---------------------------------


---------------------------------- GROUPS -----------------------------------


----------------------------------- LISTS -----------------------------------
list ProjExplorerList for ProjExplorerQuery {
   label = "";
   field ProjectionName {
      size = Large;

   }
   field Description {
      size = Large;

   }
   field Component;
   field Categories;
   field Layer;
   field ApiClass {
      label = "API Class";
   }
   badge Deprecated {
      emphasis Complementary1 = [Deprecated = true];
      emphasis Complementary2 = [Deprecated = false];
   }

   commandgroup Specifications {
      label = "Specifications";
      commandgroup OpenApiCommandGroup2 {
         label = "Specifications";
         commandgroup MainGroup {
            label = "Users";
            command OpenApiV2MainCommand;
            command OpenApiV2MainMinCommand;
            command OpenApiV3MainCommand;
            command ServiceDocumentMainCommand;
         }
         commandgroup B2BGroup {
            label = "ExternalB2B";
            command OpenApiV2B2bCommand;
            command OpenApiV2B2bMinCommand;
            command OpenApiV3B2bCommand;
            command ServiceDocumentB2bCommand;
         }
         commandgroup IntGroup {
            label = "Integration";
            command OpenApiV2IntCommand;
            command OpenApiV2IntMinCommand;
            command OpenApiV3IntCommand;
            command ServiceDocumentIntCommand;
         }
      }
   }

   commandgroup Documentation {
      label = "Documentation";
      commandgroup ReDocDocumentationCommandGroup {
         label = "Documentation";
         commandgroup DocMainGroup {
            label = "Users";
            command ApiDocMainCommand;
         }
         commandgroup DocB2bGroup {
            label = "ExternalB2B";
            command ApiDocB2bCommand;
         }
         commandgroup DocIntGroup {
            label = "Integration";
            command ApiDocIntCommand;
         }
      }
   }
}
---------------------------------- DIALOGS ----------------------------------


-------------------------------- SINGLETONS ---------------------------------


---------------------------------- CHARTS -----------------------------------


--------------------------------- CALENDERS ---------------------------------


---------------------------------- SHEETS -----------------------------------


----------------------------- STATE INDICATORS ------------------------------


----------------------------------- TREES -----------------------------------


---------------------------------- PLUGINS ----------------------------------


------------------------------- IMAGE VIEWERS -------------------------------
