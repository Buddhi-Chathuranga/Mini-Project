projection ScheduledDatabaseTasksHandling;
component FNDBAS;
layer Core;
description "Handling Scheduled Database Tasks";
category Users, ExternalB2B;
include fragment ScheduledTasksAndChains;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset ScheduledDatabaseTasks for ScheduledDatabaseTask {
   where = "Batch_schedule_type_db = 'TASK'";
}

entityset NewScheduledTaskVirtuals for NewScheduledTaskVirtual;
entityset NewScheduledTaskMethodParVirtuals for NewScheduledTaskMethodParVirtual;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity ScheduledDatabaseTask using BatchSchedule {
   // Filter out report tasks
   where = "schedule_method_id NOT IN (SELECT schedule_method_id
                                         FROM batch_schedule_method
                                        WHERE method_name = 'ARCHIVE_API.CREATE_AND_PRINT_REPORT__')  ";
   attribute StartDate Date {
      fetch = "TRUNC(start_date)";
   }
   attribute StopDate Date {
      fetch = "TRUNC(stop_date)";
   }

   action RunBatchSchedule;
}

@Override
entity BatchSchedulePar {
   crud = Read, Update;
   attribute Value Text {
      editable = [true];
   }
   attribute Mandatory Boolean {
      fetch = "Mandatory_DB";
      editable = [false];
   }
}

// Filter out report tasks
@Override
entity BatchScheduleMethod {
   where = "method_name <> 'ARCHIVE_API.CREATE_AND_PRINT_REPORT__'";
   reference ComponentRef(Module) to Module(Module);
}

---------------------------------- QUERIES ----------------------------------
query BatchScheduleGrantedMethod {
   from = "BATCH_SCHEDULE_METHOD_PUB";
   where = "method_name <> 'ARCHIVE_API.CREATE_AND_PRINT_REPORT__'";
   attribute ScheduleMethodId Number;
   attribute Description Text;
   attribute MethodName Text;
   attribute Module Text;
   attribute CheckDay Boolean {
      fetch = "CHECK_DAY_DB";
   }
   keys = ScheduleMethodId;
   reference ComponentRef(Module) to Module(Module);
}
--------------------------------- VIRTUALS ----------------------------------
virtual NewScheduledTaskVirtual using BatchSchedule {
   // Fix the data datatypes that were wrong in the model
   attribute NextExecutionDate Timestamp;
   attribute StartDate Date;
   attribute StopDate Date;
   attribute Today Date {
      editable = [false];
      fetch = "TRUNC(sysdate)";
   }

   attribute ModifiedDate Timestamp;

   // Due to a bug in the fw we have to respecify the attributes that were added to the entity in order to avoid compile errors
   attribute ScheduleTime Time;
   attribute ScheduleOption Enumeration(ScheduleOption);
   attribute ScheduledDays Enumeration(DaysOfWeek)
      {
      multiselect = [true];
   }
   attribute ScheduledDayNumber Integer;
   attribute ScheduleDatetime Timestamp;
   attribute ScheduleInterval Text;

   attribute EnableParamNext Text;

   attribute BackNavigate Text;

   action AddParamToSchedule
      {
      parameter ScheduleMethodId Number;
   }
   action CreateTaskSchedule Text {
      ludependencies = BatchSchedule;
   }

   action CleanupTaskVirtual;

   array MethodParam(ScheduleMethodId) to NewScheduledTaskMethodParVirtual(ScheduleMethodId);
   reference AssistantLangCodeRef(LangCode) to LanguageCode(LangCode);
   reference ScheduleMethodIdAstRef(ScheduleMethodId) to BatchScheduleGrantedMethod(ScheduleMethodId) {
      copy Description to ScheduleName;
   }
   ludependencies = NewScheduledTaskMethodParVirtual;

}

virtual NewScheduledTaskMethodParVirtual using BatchScheduleMethodPar {
   crud = Read, Update;
   attribute UserValue Text;
   ludependencies = ScheduledTaskVirtual;
}