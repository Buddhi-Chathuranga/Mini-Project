----------------------------------------------------------------------------------------------------------------
--	File:  installnorefresh.tem
--
--	Purpose: Template to register component versions in database.
--
--	  The template will be used when creating install.tem by IFS ConfigBuilder, when no database
--	  code exist to be deployed, only register of components version will be performed.
--   The file should be run as the application owner.
--
--  Date    Sign  History
--  ------  ----  -----------------------------------------------------------------------------------------------
--  110314  StDa  Created
--  120124  MaBo  Only lowercase letters in filename
--  150831  MaBo  Updated for IFS Applications9
--  180328  MaBo  Addes support for multi delivery
--  200910  chah  Added Delivery Registration Functionality.
-----------------------------------------------------------------------------------------------------------------

-- [Type:NoRefresh]

SPOOL _installtem.log
SET VERIFY OFF
SET FEEDBACK OFF
SET ARRAYSIZE 1
SET TRIMSPOOL ON

--
-- Variables for logging during installation/upgrade
--
-- TRUE enables logging/FALSE disables logging
--
DEFINE LOGGING=TRUE
--
-- TRUE enables logging to table/FALSE enables logging to log file
--
DEFINE PERSISTENT=FALSE
--
-- TRUE enables logging of Database_SYS and Installation_SYS methods 
-- regardless of what parameter to method says.
-- If FALSE then parameter decides if logging occurs
--
DEFINE SHOW_INFO=FALSE

EXEC Installation_SYS.Set_Installation_Mode(TRUE);

EXEC Log_SYS.Set_Log_Level_(Log_SYS.error_, TRUE);

-- [InstallTemTypeStart]

-- This section is generated by the CreateInstallTem process.

-- [InstallTemTypeStop]

START define.tem

-- [DB GENERAL]
EXEC Installation_SYS.Log_Time_Stamp_Setup('&LOGGING', '&PERSISTENT');

EXEC Installation_SYS.Set_Show_Info(&SHOW_INFO);

EXEC Installation_SYS.Set_Installation_Mode(TRUE);

EXEC Installation_SYS.Set_Log_Level(1, TRUE);

ALTER SESSION SET PLSQL_DEBUG=FALSE;
ALTER SESSION SET PLSQL_OPTIMIZE_LEVEL=2;
-- [END DB GENERAL]

EXEC Installation_SYS.Log_Time_Stamp('install.tem','Component registration','Started');

-- The CompRegAndDep.sql is generated by the CreateInstallTem process
START CompRegAndDep.sql

EXEC Installation_SYS.Log_Time_Stamp('install.tem','Component registration','Finished');

EXEC Installation_SYS.Log_Time_Stamp('install.tem','Deploying components','Started');

SPOOL OFF

-- [ComponentSectionBaseServerStart]

-- This section is generated by the CreateInstallTem process

-- [ComponentSectionBaseServerStop]

SPOOL _installtem.log APPEND

SET SERVEROUT ON

EXEC Log_SYS.Set_Log_Level_(Log_SYS.error_, TRUE);

EXEC Installation_SYS.Log_Time_Stamp('install.tem','Deploying components','Finished');

EXEC Installation_SYS.Log_Time_Stamp('install.tem','Installation_SYS.Create_Component_Package(TRUE)','Started');

EXEC Installation_SYS.Create_Component_Package(TRUE);

EXEC Installation_SYS.Log_Time_Stamp('install.tem','Installation_SYS.Create_Component_Package(TRUE)','Finished');

-- [IGNORE IN MULTI INSTALL]

EXEC Installation_SYS.Log_Time_Stamp('install.tem','Refresh Database Objects','Started');

EXEC Install_Tem_SYS.Installation_Support('COMPILE_BASE_PACKAGES', '&REMOVE_DEBUG_INFO');

PROMPT
PROMPT Removing Debug Information
PROMPT
SET SERVEROUTPUT ON
EXEC Installation_SYS.Remove_Debug_Information('&REMOVE_DEBUG_INFO');

PROMPT
PROMPT Compiling Invalid Objects
PROMPT

SET SERVEROUTPUT ON

EXEC Log_SYS.Set_Log_Level_(Log_SYS.error_, TRUE);

EXEC Database_SYS.Compile_All_Invalid_Objects;

EXEC Installation_SYS.Log_Time_Stamp('install.tem','Refresh Database Objects','Finished');

-- [END IGNORE IN MULTI INSTALL]

SPOOL OFF

SPOOL _installtem.log APPEND

SET SERVEROUTPUT ON

EXEC Installation_SYS.Log_Time_Stamp('install.tem','Version and Delivery Registration','Started');

-- the VersionRegistration.sql file will be fed with information from version.yaml file, unless it will be empty

START VersionRegistration.sql

-- the DeliveryRegistration.sql file will be fed when it is used to create deliveries, unless it will be empty

START DeliveryRegistration.sql

SET SERVEROUTPUT ON

EXEC Installation_SYS.Log_Time_Stamp('install.tem','Version and Delivery Registration','Finished');

EXEC Log_SYS.Set_Log_Level_(Log_SYS.error_, TRUE);

EXEC Database_SYS.Compile_Schema_('&IAL_OWNER', '&COMPILE_OTHER_SCHEMA', FALSE);

SPOOL OFF

