----------------------------------------------------------------------------------------------------------------
--	File:  default.tem
--
--	Purpose: Template to install/upgrade database objects.
--
--   The default.tem is a template for sub templates created by ConfigBulder.
--   The created tem will be named according to the code to deploy.
--   The file must be checked and possibly edited before usage.
--   The file should be run as the application owner.
--
--
--  Date    Sign  History
--  ------  ----  -----------------------------------------------------------
--  101021  STDA  Created.
--  101021  MaBo  Added define.tem call
----------------------------------------------------------------------------------------------------------------

SPOOL _[default].log

-- [InstallTemTypeStart]

-- This section will be replaced by CreateInstallTem process.

-- [InstallTemTypeStop]

START define.tem

--
-- Variables for logging during installation/upgrade
--
-- TRUE enables logging/FALSE disables logging
--
DEFINE LOGGING=TRUE
--
-- TRUE enables logging to table/FALSE enables logging to log file
--
DEFINE PERSISTENT=FALSE
--
-- TRUE enables logging of Database_SYS and Installation_SYS methods 
-- regardless of what parameter to method says.
-- If FALSE then parameter decides if logging occurs
--
DEFINE SHOW_INFO=FALSE
--
   
-- [DB GENERAL]
PROMPT Enable installation logging if setup. 
DECLARE
   stmt_ VARCHAR2(1000) :=
'BEGIN '||
'   &APPLICATION_OWNER..Installation_SYS.Log_Time_Stamp_Setup(''&LOGGING'', ''&PERSISTENT'');'||
'END;';
BEGIN
-- Run as dynamic SQL to avoid errors
   EXECUTE IMMEDIATE stmt_;
EXCEPTION
   WHEN OTHERS THEN 
      NULL;
END;
/

PROMPT Enable/Disable Show_Info 
DECLARE
   stmt_ VARCHAR2(1000) :=
'BEGIN '||
'   &APPLICATION_OWNER..Installation_SYS.Set_Show_Info(&SHOW_INFO);'||
'END;';
BEGIN
-- Run as dynamic SQL to avoid errors
   EXECUTE IMMEDIATE stmt_;
EXCEPTION
   WHEN OTHERS THEN 
      NULL;
END;
/

PROMPT Set Installation mode for Installation_SYS 
DECLARE
   stmt_ VARCHAR2(1000) :=
'BEGIN '||
'   &APPLICATION_OWNER..Installation_SYS.Set_Installation_Mode(TRUE);'||
'END;';
BEGIN
-- Run as dynamic SQL to avoid errors
   EXECUTE IMMEDIATE stmt_;
EXCEPTION
   WHEN OTHERS THEN 
      NULL;
END;
/
-- [END DB GENERAL]

-- [ComponentSectionStart]

-- This section will be built with calls to files in components when creating [xxxxxx].tem in ConfigBuilder

-- [ComponentSectionStop]

SPOOL OFF

SPOOL _[default].log APPEND

PROMPT Disable installation logging
DECLARE
   stmt_ VARCHAR2(1000) :=
'BEGIN '||
'   &APPLICATION_OWNER..Installation_SYS.Log_Time_Stamp_Setup(''FALSE'', ''FALSE'');'||
'END;';
BEGIN
-- Run as dynamic SQL to avoid errors
   EXECUTE IMMEDIATE stmt_;
EXCEPTION
   WHEN OTHERS THEN 
      NULL;
END;
/

PROMPT Disable Show_Info 
DECLARE
   stmt_ VARCHAR2(1000) :=
'BEGIN '||
'   &APPLICATION_OWNER..Installation_SYS.Set_Show_Info(FALSE);'||
'END;';
BEGIN
-- Run as dynamic SQL to avoid errors
   EXECUTE IMMEDIATE stmt_;
EXCEPTION
   WHEN OTHERS THEN 
      NULL;
END;
/

SPOOL OFF
