----------------------------------------------------------------------------------------------------------------
--	File:  ial.tem
--
--	Purpose: Template to install/upgrade IAL database objects.
--
--	  The template is meant as a starting point to create a script
--	  to install/upgrade the IAL database objects. The template must be checked and
--   possibly edited before usage.
--   The file should be run as the IAL owner.
--
--  Date    Sign  History
--  ------  ----  -----------------------------------------------------------
--  060215  STDA  Created.
--  101021  MaBo  Added define.tem call
--  160510  NaBa  Added APPOWNER and IAL defines
-----------------------------------------------------------------------------------------------------------------

SPOOL _ialtem.log

-- [InstallTemTypeStart]

-- This section will be replaced by CreateInstallTem process.

-- [InstallTemTypeStop]

START define.tem
--
-- The name of the application owner
--
DEFINE APPOWNER = &APPLICATION_OWNER
--
-- The name of the information access layer (IAL) owner
--
DEFINE IAL = &IAL_OWNER
--
-- Variables for logging during installation/upgrade
--
-- TRUE enables logging/FALSE disables logging
--
DEFINE LOGGING=TRUE
--
-- TRUE enables logging to table/FALSE enables logging to log file
--
DEFINE PERSISTENT=FALSE
--
-- TRUE enables logging of Database_SYS and Installation_SYS methods 
-- regardless of what parameter to method says.
-- If FALSE then parameter decides if logging occurs
--
DEFINE SHOW_INFO=FALSE
--
   
-- [DB GENERAL]
PROMPT Enable installation logging if setup. 
DECLARE
   stmt_ VARCHAR2(1000) :=
'BEGIN '||
'   &APPLICATION_OWNER..Installation_SYS.Log_Time_Stamp_Setup(''&LOGGING'', ''&PERSISTENT'');'||
'END;';
BEGIN
-- Run as dynamic SQL to avoid errors
   EXECUTE IMMEDIATE stmt_;
EXCEPTION
   WHEN OTHERS THEN 
      NULL;
END;
/

PROMPT Enable/Disable Show_Info 
DECLARE
   stmt_ VARCHAR2(1000) :=
'BEGIN '||
'   &APPLICATION_OWNER..Installation_SYS.Set_Show_Info(&SHOW_INFO);'||
'END;';
BEGIN
-- Run as dynamic SQL to avoid errors
   EXECUTE IMMEDIATE stmt_;
EXCEPTION
   WHEN OTHERS THEN 
      NULL;
END;
/

PROMPT Set Installation mode for Installation_SYS 
DECLARE
   stmt_ VARCHAR2(1000) :=
'BEGIN '||
'   &APPLICATION_OWNER..Installation_SYS.Set_Installation_Mode(TRUE);'||
'END;';
BEGIN
-- Run as dynamic SQL to avoid errors
   EXECUTE IMMEDIATE stmt_;
EXCEPTION
   WHEN OTHERS THEN 
      NULL;
END;
/
-- [END DB GENERAL]

DEFINE AO = &APPLICATION_OWNER

-- [ComponentSectionStart]

-- This section will be built with calls to files in components when creating ial.tem in ConfigBuilder

-- [ComponentSectionStop]

SPOOL OFF

SPOOL _ialtem.log APPEND

PROMPT Disable installation logging
DECLARE
   stmt_ VARCHAR2(1000) :=
'BEGIN '||
'   &APPLICATION_OWNER..Installation_SYS.Log_Time_Stamp_Setup(''FALSE'', ''FALSE'');'||
'END;';
BEGIN
-- Run as dynamic SQL to avoid errors
   EXECUTE IMMEDIATE stmt_;
EXCEPTION
   WHEN OTHERS THEN 
      NULL;
END;
/

PROMPT Disable Show_Info 
DECLARE
   stmt_ VARCHAR2(1000) :=
'BEGIN '||
'   &APPLICATION_OWNER..Installation_SYS.Set_Show_Info(FALSE);'||
'END;';
BEGIN
-- Run as dynamic SQL to avoid errors
   EXECUTE IMMEDIATE stmt_;
EXCEPTION
   WHEN OTHERS THEN 
      NULL;
END;
/

SPOOL OFF
