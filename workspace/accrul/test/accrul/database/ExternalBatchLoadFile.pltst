-----------------------------------------------------------------------------
--
--  Logical unit: ExternalBatchLoadFile
--  Component:    ACCRUL
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  210707  Nudilk  Created.
-----------------------------------------------------------------------------

layer Core;


-------------------- LU SPECIFIC IMPLEMENTATION METHODS ---------------------


-------------------- LU SPECIFIC PUBLIC METHODS -----------------------------

UNITTEST "Validate_External_File_Load should return import_message_id_ when transfered state row exist in external_batch_load_file_tab, Otherwise raise errors." FOR
   PROCEDURE Validate_External_File_Load(
      import_message_id_    OUT NUMBER,
      load_file_id_      IN     NUMBER,
      file_name_         IN     VARCHAR2);
USING
   @MockTable external_batch_load_file_tab
   VALUES
      | import_message_id | load_file_id | state         | file_name                  | file_data |
      | 1                 | 1            | 'LOADED'      | 'Ext_Voucher_1.txt'        |  'A'      |
      | 2                 | 1            | 'TRANSFERRED' | 'Ext_Voucher_1.txt'        |  'A'      |
      | 3                 | 1            | 'IMPORTED'    | 'Ext_Voucher_1.txt'        |  'A'      |
      | 4                 | 2            | 'TRANSFERRED' | 'Ext_Voucher_1.txt'        |  'A'      |
      | 5                 | 1            | 'TRANSFERRED' | 'Ext_Voucher_2.txt'        |  'A'      |
      | 6                 | 2            | 'TRANSFERRED' | 'Empty_File.txt'           |  NULL     |
   END VALUES;

IS
   output1_  NUMBER;
BEGIN
   FOR
      | import_message_id_ | load_file_id_ | file_name_           |
      | 2                  | 1             | 'Ext_Voucher_1.txt'  |
      | NULL               | 1             | 'Invalid_File.txt'   |
      | NULL               | 1             | NULL                 |
      | NULL               | 2             | 'Empty_File.txt'     |
   LOOP
      IF file_name_ = 'Invalid_File.txt' THEN
         ASSERT FAIL '%NOTRANSFERDATAEXIST%' EXECUTE Validate_External_File_Load(output1_, load_file_id_, file_name_);
      ELSIF file_name_ = 'Empty_File.txt' THEN
         ASSERT FAIL '%NODATAINCLOB%' EXECUTE Validate_External_File_Load(output1_, load_file_id_, file_name_);
      ELSE
         Validate_External_File_Load(output1_, load_file_id_, file_name_);
         IF output1_ IS NULL AND import_message_id_ IS NULL THEN
            ASSERT TRUE;
         ELSE
            ASSERT output1_ = import_message_id_ MESSAGE 'Expected '||import_message_id_||' but  was '||output1_;
         END IF;
      END IF;
   END LOOP;
END UNITTEST;


UNITTEST "Check_Matched_Row_Exist should return true when matching load_file_id exists otherwise it should return false." FOR
   FUNCTION Check_Matched_Row_Exist(
      load_file_id_ IN     NUMBER) RETURN BOOLEAN;
USING
   @MockTable external_batch_load_file_tab
   VALUES
      | load_file_id |
      | 1            |
   END VALUES;

IS
   return_   BOOLEAN;
   expected_ BOOLEAN;
BEGIN
   FOR
      | expected_ | load_file_id_ |
      | TRUE      | 1             |
      | FALSE     | 2             |
      | FALSE     | NULL          |
   LOOP
      return_ := Check_Matched_Row_Exist(load_file_id_);
      ASSERT return_ = expected_ MESSAGE 'Expected '||expected_||' but returned '||return_;
   END LOOP;
END UNITTEST;


UNITTEST "Check_Matched_Message_Id should return import_message_id when load_file_id exist in external_batch_load_file_tab, otherwise return 0." FOR
   FUNCTION Check_Matched_Message_Id(
      load_file_id_ IN     NUMBER) RETURN NUMBER;
USING
   @MockTable external_batch_load_file_tab
   VALUES
      | import_message_id | load_file_id |
      | 1                 | 1            |
      | 2                 | 1            |
      | 3                 | NULL         |
   END VALUES;

IS
   return_   NUMBER;
   expected_ NUMBER;
BEGIN
   FOR
      | expected_ | load_file_id_ |
      | 2         | 1             |
      | 0         | NULL          |
      | 0         | 2             |

   LOOP
      return_ := Check_Matched_Message_Id(load_file_id_);

      ASSERT return_ = expected_ MESSAGE 'Expected '||expected_||' but returned '||return_;
   END LOOP;
END UNITTEST;


UNITTEST "Get_Matched_Message_Id should mininum import_message_id when matching file_name exist in Loaded state of the external_batch_load_file_tab otherwise return 0." FOR
   FUNCTION Get_Matched_Message_Id(
      file_name_ IN     VARCHAR2) RETURN NUMBER;
USING
   @MockTable external_batch_load_file_tab
   VALUES
      | import_message_id | file_name                  | load_file_id | state          |
      | 1                 | 'Ext_Voucher_1.txt'        | NULL         | 'TRANSFERRED'  |
      | 2                 | 'Ext_Voucher_1.txt'        | NULL         | 'LOADED'       |
      | 3                 | 'Ext_Voucher_1.txt'        | NULL         | 'LOADED'       |
      | 4                 | 'Ext_Voucher_2.txt'        | NULL         | 'TRANSFERRED'  |
   END VALUES;

IS
   return_   NUMBER;
   expected_ NUMBER;
BEGIN
   FOR
      | expected_ | file_name_                  |
      | 2         | 'Ext_Voucher_1.txt'         |
      | 0         | NULL                        |
      | 0         | 'Ext_Voucher_2.txt'         |
      | 0         | 'Invalid_File.txt'          |
   LOOP
      return_ := Get_Matched_Message_Id(file_name_);
      ASSERT return_ = expected_ MESSAGE 'Expected '||expected_||' but returned '||return_;
   END LOOP;
END UNITTEST;