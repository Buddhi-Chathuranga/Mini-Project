---------------------------------------------------------------------------------------------
--  Module : ACCRUL
--
--  Purpose: Upgrade database objects for IFS/Accounting Rules
--           from version 21.2.0 to 22.1.0
--
--  File   : 2210.upg
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  ------------------------------------------------------------------------
--  210917   BDT     Created (by Build and Deployment Team).
--  211001   uppalk  FI21R2-4358, Removed obsolete views
--  211021   uppalk  FI21R2-4524, Add new column tax_buy_curr_rate_base as not null to Currency_Type_Basic_Data_Tab.
--  211005   THPELK  FI21R2-6870, Removed Project_Activity_Sel_Templ_Lov.
--  211202   Ckumlk  FI21R2-8021, Added Document_Type_Code_Tab.
--  211207   Kgamlk  FI21R2-7201, Add Tax_Category1_Tab and Tax_Category2_Tab, added new columns to Statutory_Fee_Tab.
--  211215   Kgamlk  FI21R2-7201, Added new columns to Source_Tax_Item_Tab.
--  211221   Tiralk  FI21R2-8190, Added COMPANY_STRUCTURE_TAB, COMPANY_STRUCTURE_ITEM_TAB and COMPANY_STRUCTURE_LEVEL_TAB.
--  220105   Ckumlk  FI21R2-8021, Added INVOICE_TEXT_ID and renamed to DOCUMENT_TYPE_CODE in tax_code_texts_tab.
--  220121   Alwolk  FI21R2-7763, Merged Bug 161589, UPDATE Voucher_Tab rowstate TO cancelled FOR vouchers WITH no lines.
--  220130   Smallk  FI21R2-8623, Updated external_tax_cal_method value in Company_Tax_Control_Tab for Vertex Q removal.
--  ------   ------  ------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SET SERVEROUTPUT ON
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_1');
PROMPT START upgrading WITH 2210.upg

---------------------------------------------------------------------------------------------
------------------------------ Instructions for upg files -----------------------------------
---------------------------------------------------------------------------------------------
--
--  Main section should contain all upgrade operations.
--  Next section should contain removal of obsolete objects (any removal of data inside upg is prohibited!).
--  Removal of backup tables and obsolete columns should be added to <component>Cl.sql script!
--
--  If possible, everything regarding one table should be placed in one section.
--  If this is not possible, a proper comment about the reason should be added.
--
--  Each section should be started with a "-----" line and a empty line.
--  This section should then start with a line like: "-- ***** Example_Tab Start *****"
--  and end with a line like:                       "-- ***** Example_Tab End *****"
--
--  Don't forget UPPER/lower case !
--
--  Every part inside the section should start with a "PROMPT" line explaining what is done by the block.
--
--  If the PL/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.
--
--  Remember ordinary coding standard rules !
--
--  Don't drop any Table/Column !
--
--  Don't forget performance when updating large table !
--
--  No unnecessary blank lines or comments !
--
--  If possible, use pure SQL commands
--
--  If possible, try to group several updates together in one statement.
--
--  Timestamps will be added automatically at the end of the project.
--
--  For more information refer to the "Upgrade Script Standards" and the "Performance" technical documents.
--
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES -----------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
--------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ------------------
---------------------------------------------------------------------------------------------

--  ***** Company_Structure_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_2');
PROMPT Creating table COMPANY_STRUCTURE_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_ID', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(200)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Set_Table_Column(columns_, 'ROWSTATE', 'VARCHAR2(20)', 'N');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_3');
PROMPT Creating constraints for COMPANY_STRUCTURE_PK
DECLARE
   index_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_PK';
   table_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_ID');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_4');
PROMPT Creating constraint COMPANY_STRUCTURE_RK
DECLARE
   index_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_RK';
   table_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** Company_Structure_Tab End *****

---------------------------------------------------------------------------------------------

--  ***** Company_Structure_Item_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_5');
PROMPT Creating table company_structure_item_tab
DECLARE
   table_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_ITEM_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_ID', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_ITEM_TYPE', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'NAME_VALUE', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(200)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'LEVEL_NO', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ITEM_ABOVE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SORT_ORDER', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_6');
PROMPT Creating constraint COMPANY_STRUCTURE_ITEM_PK
DECLARE
   index_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_ITEM_PK';
   table_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_ITEM_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_ID');
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_ITEM_TYPE');
   Database_SYS.Set_Table_Column(columns_, 'NAME_VALUE');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_7');
PROMPT Creating constraint COMPANY_STRUCTURE_ITEM_RK
DECLARE
   index_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_ITEM_RK';
   table_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_ITEM_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** Company_Structure_Item_Tab End *****

---------------------------------------------------------------------------------------------

--  ***** Company_Structure_Level_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_8');
PROMPT Creating table company_structure_level_tab
DECLARE
   table_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_LEVEL_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_ID', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'LEVEL_NO', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'LEVEL_ID', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(200)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'BOTTOM_LEVEL', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'LEVEL_ABOVE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_9');
PROMPT Creating constraint COMPANY_STRUCTURE_LEVEL_PK
DECLARE
   index_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_LEVEL_PK';
   table_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_LEVEL_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_ID');
   Database_SYS.Set_Table_Column(columns_, 'LEVEL_NO');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_10');
PROMPT Creating constraint COMPANY_STRUCTURE_LEVEL_RK
DECLARE
   index_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_LEVEL_RK';
   table_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_LEVEL_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_11');
PROMPT Creating index COMPANY_STRUCTURE_LEVEL_UX1
DECLARE
   index_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_LEVEL_UX1';
   table_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_LEVEL_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_ID');
   Database_SYS.Set_Table_Column(columns_, 'LEVEL_ID');
   Database_SYS.Create_Index(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** Company_Structure_Level_Tab End *****

---------------------------------------------------------------------------------------------

--  ***** Currency_Type_Basic_Data_Tab Start *****

-- gelr:curr_rate_date_incoming_inv, begin
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_12');
PROMPT Adding column tax_buy_curr_rate_base to Currency_Type_Basic_Data_Tab.
DECLARE
   table_name_ VARCHAR2(30) := 'CURRENCY_TYPE_BASIC_DATA_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'TAX_BUY_CURR_RATE_BASE', 'VARCHAR2(20)', 'N', '''VOUCHER_DATE''', keep_default_ => 'N');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE);
END;
/
-- gelr:curr_rate_date_incoming_inv, end

-- ***** Currency_Type_Basic_Data_Tab End *****

---------------------------------------------------------------------------------------------

--  ***** Document_Type_Code_Tab Start *****

-- gelr:it_xml_invoice, begin
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_13');
PROMPT Adding columns to Document_Type_Code_Tab
DECLARE
   table_name_ VARCHAR2(30) := 'DOCUMENT_TYPE_CODE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_TYPE_CODE', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(2000)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_14');
PROMPT Creating constraint document_type_code_pk
DECLARE
   index_name_ VARCHAR2(30) := 'DOCUMENT_TYPE_CODE_PK';
   table_name_ VARCHAR2(30) := 'DOCUMENT_TYPE_CODE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COMPANY');
   Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_TYPE_CODE');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_15');
PROMPT Creating constraint document_type_code_rk
DECLARE
   index_name_ VARCHAR2(30) := 'DOCUMENT_TYPE_CODE_RK';
   table_name_ VARCHAR2(30) := 'DOCUMENT_TYPE_CODE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- gelr:it_xml_invoice, end

--  ***** Document_Type_Code_Tab End *****

---------------------------------------------------------------------------------------------

--  ***** Tax_Code_Texts_Tab Start *****

-- gelr:it_xml_invoice, begin
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_16');
PROMPT Adding column invoice_text_id to tax_code_texts_tab
DECLARE
   table_name_ VARCHAR2(30) := 'TAX_CODE_TEXTS_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'INVOICE_TEXT_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_17');
PROMPT Renaming column invoice_text_id in table tax_code_texts_tab
DECLARE
   new_column_name_   VARCHAR2(30);
   old_column_name_   VARCHAR2(30);
   table_name_        VARCHAR2(30) := 'TAX_CODE_TEXTS_TAB';
BEGIN
   new_column_name_ := 'DOCUMENT_TYPE_CODE';
   old_column_name_ := 'INVOICE_TEXT_ID';
   IF NOT (Database_SYS.Column_Exist(table_name_, new_column_name_)) AND Database_SYS.Column_Exist(table_name_, old_column_name_) THEN
      Database_SYS.Rename_Column(table_name_, new_column_name_, old_column_name_, TRUE);
   END IF;
END;
/
-- gelr:it_xml_invoice, end

-- ***** Tax_Code_Texts_Tab End *****

---------------------------------------------------------------------------------------------

--  ***** Tax_Category1_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_18');
PROMPT Creating table  tax_category1_tab.
DECLARE
   table_name_ VARCHAR2(30) := 'TAX_CATEGORY1_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'TAX_CATEGORY_ID', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(100)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_19');
PROMPT Creating constraint tax_category1_pk
DECLARE
   index_name_ VARCHAR2(30) := 'TAX_CATEGORY1_PK';
   table_name_ VARCHAR2(30) := 'TAX_CATEGORY1_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COMPANY');
   Database_SYS.Set_Table_Column(columns_, 'TAX_CATEGORY_ID');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_20');
PROMPT Creating constraint tax_category1_rk
DECLARE
   index_name_ VARCHAR2(30) := 'TAX_CATEGORY1_RK';
   table_name_ VARCHAR2(30) := 'TAX_CATEGORY1_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** Tax_Category1_Tab End *****

---------------------------------------------------------------------------------------------

--  ***** Tax_Category2_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_21');
PROMPT Creating table  tax_category2_tab.
DECLARE
   table_name_ VARCHAR2(30) := 'TAX_CATEGORY2_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'TAX_CATEGORY_ID', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(100)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_22');
PROMPT Creating constraint tax_category2_pk
DECLARE
   index_name_ VARCHAR2(30) := 'TAX_CATEGORY2_PK';
   table_name_ VARCHAR2(30) := 'TAX_CATEGORY2_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COMPANY');
   Database_SYS.Set_Table_Column(columns_, 'TAX_CATEGORY_ID');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_23');
PROMPT Creating constraint tax_category2_rk
DECLARE
   index_name_ VARCHAR2(30) := 'TAX_CATEGORY2_RK';
   table_name_ VARCHAR2(30) := 'TAX_CATEGORY2_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** Tax_Category2_Tab End *****

---------------------------------------------------------------------------------------------

-- ***** Statutory_Fee_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_24');
PROMPT Adding columns to STATUTORY_FEE_TAB.

DECLARE
   table_name_    VARCHAR2(30) := 'STATUTORY_FEE_TAB';
   column_        Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('TAX_CATEGORY1', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('TAX_CATEGORY2', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/
-- ***** Statutory_Fee_Tab End *****

---------------------------------------------------------------------------------------------

-- ***** Source_Tax_Item_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_25');
PROMPT Adding columns to SOURCE_TAX_ITEM_TAB.

DECLARE
   table_name_    VARCHAR2(30) := 'SOURCE_TAX_ITEM_TAB';
   column_        Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('TAX_CATEGORY1', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('TAX_CATEGORY2', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/
-- ***** Source_Tax_Item_Tab End *****

-- ***** structure_param_temp_tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_26');
PROMPT CREATE TABLE STRUCTURE_PARAM_TEMP_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'STRUCTURE_PARAM_TEMP_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'DRILL_DOWN_TEMP_ID', 'VARCHAR2(50)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ATTRIBUTE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'DATA_TYPE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'NAME', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'OPERATOR', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'LOGICAL_OPERATOR', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'MATCH_CASE', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'VALUE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TIME_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECORD_ORDER', 'NUMBER', 'Y');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

-- ***** structure_param_temp_tab End *****

---------------------------------------------------------------------------------------------

-- ***** Voucher_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_27');
PROMPT UPDATE Voucher_Tab rowstate TO cancelled FOR vouchers WITH no lines

DECLARE
   table_name_ VARCHAR2(30) := 'VOUCHER_TAB';
   column_   Database_SYS.ColRec;
BEGIN
      UPDATE voucher_tab v
         SET   rowstate = 'Cancelled'
         WHERE function_group IN ('L', '0')
         AND   voucher_updated = 'N'
         AND   rowstate = 'AwaitingApproval'
         AND  NOT EXISTS ( SELECT 1
                           FROM voucher_row_tab vr
                           WHERE v.company = vr.company
                           AND v.accounting_year = vr.accounting_year
                           AND v.voucher_type = vr.voucher_type
                           AND v.voucher_no = vr.voucher_no);
      COMMIT;
END;
/

-- ***** Voucher_Tab End *****

---------------------------------------------------------------------------------------------

-- ***** Company_Tax_Control_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_28');
PROMPT Updating external_tax_cal_method of Company_Tax_Control_Tab

BEGIN
   UPDATE Company_Tax_Control_Tab
      SET   external_tax_cal_method = 'NOT_USED'
      WHERE external_tax_cal_method = 'VERTEX_SALES_TAX_Q_SERIES';
   COMMIT;
END;
/

-- ***** Company_Tax_Control_Tab End *****

---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES/COLUMNS -----------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_29');
PROMPT Remove obsolete views
BEGIN
   Database_SYS.Remove_View('VOUCHER_ROW_QRY_PID_FINREP', TRUE);
   Database_SYS.Remove_View('PROJ_ACTIVITY_SELTEMP_TEXT_LOV', TRUE);
END;
/


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE INDEXES/SEQUENCES ------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Timestamp_30');
PROMPT Upgrade statements IN FILE 2210.upg ends here.

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2210.upg','Done');
