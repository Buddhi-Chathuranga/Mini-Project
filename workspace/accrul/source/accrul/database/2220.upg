---------------------------------------------------------------------------------------------
--  Module : ACCRUL
--
--  Purpose: Upgrade database objects for IFS/Accounting Rules
--           from version 22.1.0 to 22.2.0
--
--  File   : 2220.upg
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  ------------------------------------------------------------------------
--  210222   BDT     Created (by Build and Deployment Team).
--  220421   ALWOLK  FIZ-17042, Updated Accounting_Code_Part_Value_Tab INCLUDE_IN_REV_REC column
--  220422   JADULK  FIZ-16867, Updated Statutory_Fee_Tab data to handle null values.
--  220422   JADULK  FIZ-16874, Modified voucher type user group and company template data to inline with the calender data.
--  220504   NWeelk  FIDEV-8628, Removed obsolete package Vertex_Q_Series_Tax_Util_API.
--  220520   Jadulk  FIDEV-10472, Added creation logic for COMPANY_COUNTER_PART_TAB and COUNTER_PART_COMP_MAPPING_TAB.
--  220607   Tkavlk  FIDEV-11064, Added new columns to FIN_DRILL_DOWN_TEMP_TAB
--  220716   Gawilk  FIDEV-9093, Added CLOB1 column to EXT_FILE_TRANS_TAB.
--  ------   ------  ------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SET SERVEROUTPUT ON
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_1');
PROMPT START upgrading WITH 2220.upg

---------------------------------------------------------------------------------------------
------------------------------ Instructions for upg files -----------------------------------
---------------------------------------------------------------------------------------------
--
--  Main section should contain all upgrade operations.
--  Next section should contain removal of obsolete objects (any removal of data inside upg is prohibited!).
--  Removal of backup tables and obsolete columns should be added to <component>Cl.sql script!
--
--  If possible, everything regarding one table should be placed in one section.
--  If this is not possible, a proper comment about the reason should be added.
--
--  Each section should be started with a "-----" line and a empty line.
--  This section should then start with a line like: "-- ***** Example_Tab Start *****"
--  and end with a line like:                       "-- ***** Example_Tab End *****"
--
--  Don't forget UPPER/lower case !
--
--  Every part inside the section should start with a "PROMPT" line explaining what is done by the block.
--
--  If the PL/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.
--
--  Remember ordinary coding standard rules !
--
--  Don't drop any Table/Column !
--
--  Don't forget performance when updating large table !
--
--  No unnecessary blank lines or comments !
--
--  If possible, use pure SQL commands
--
--  If possible, try to group several updates together in one statement.
--
--  Timestamps will be added automatically at the end of the project.
--
--  For more information refer to the "Upgrade Script Standards" and the "Performance" technical documents.
--
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES -----------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
--------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ------------------
---------------------------------------------------------------------------------------------

-- ***** Accounting_Code_Part_Value_Tab Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_2');
PROMPT Handling past data FOR INCLUDE_IN_REV_REC COLUMN WHEN code part IS account.
BEGIN
   UPDATE ACCOUNTING_CODE_PART_VALUE_TAB
   SET   INCLUDE_IN_REV_REC = 'FALSE'
   WHERE INCLUDE_IN_REV_REC IS NULL
   AND   CODE_PART = 'A';
   COMMIT;
END;
/
-- ***** Accounting_Code_Part_Value_Tab End *****

---------------------------------------------------------------------------------------------

-- ***** currency_type_tab Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_3');
PROMPT Adding columns last_updated, last_updated to currency_type_tab.
DECLARE
   table_name_    VARCHAR2(30) := 'CURRENCY_TYPE_TAB';
   column_        Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('LAST_UPDATED', 'DATE', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/
-- ***** currency_type_tab End *****

---------------------------------------------------------------------------------------------

-- ***** ext_currency_task_tab Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_4');
PROMPT Adding column workflow to ext_currency_task_tab.
DECLARE
   table_name_ VARCHAR2(30) := 'EXT_CURRENCY_TASK_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'WORKFLOW', 'VARCHAR2(5)', 'N', '''FALE''', keep_default_ => 'N');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE);
   Database_SYS.Set_Table_Column(columns_, 'LAST_UPDATED', 'DATE', 'Y');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE);

END;
/
-- ***** ext_currency_task_tab End *****

---------------------------------------------------------------------------------------------

-- ***** source_comp_curr_rate_type_tab Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_5');
PROMPT CREATE TABLE SOURCE_COMP_CURR_RATE_TYPE_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'SOURCE_COMP_CURR_RATE_TYPE_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_COMPANY', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_CURR_RATE_TYPE', 'VARCHAR2(10)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'LAST_UPDATED', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Set_Table_Column(columns_, 'ROWSTATE', 'VARCHAR2(20)', 'N');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_6');
PROMPT CREATE PRIMARY KEY INDEX FOR SOURCE_COMP_CURR_RATE_TYPE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'SOURCE_COMP_CURR_RATE_TYPE_PK';
   table_name_ VARCHAR2(30) := 'SOURCE_COMP_CURR_RATE_TYPE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_COMPANY');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_CURR_RATE_TYPE');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_7');
PROMPT CREATE ROW KEY INDEX FOR SOURCE_COMP_CURR_RATE_TYPE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'SOURCE_COMP_CURR_RATE_TYPE_RK';
   table_name_ VARCHAR2(30) := 'SOURCE_COMP_CURR_RATE_TYPE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/
-- ***** source_comp_curr_rate_type_tab End *****

---------------------------------------------------------------------------------------------

-- ***** target_comp_curr_rate_type_tab Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_8');
PROMPT CREATE TABLE TARGET_COMP_CURR_RATE_TYPE_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'TARGET_COMP_CURR_RATE_TYPE_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_COMPANY', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_CURR_RATE_TYPE', 'VARCHAR2(10)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'TARGET_COMPANY', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'TARGET_CURR_RATE_TYPE', 'VARCHAR2(10)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_9');
PROMPT CREATE PRIMARY KEY INDEX FOR TARGET_COMP_CURR_RATE_TYPE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'TARGET_COMP_CURR_RATE_TYPE_PK';
   table_name_ VARCHAR2(30) := 'TARGET_COMP_CURR_RATE_TYPE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_COMPANY');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_CURR_RATE_TYPE');
   Database_SYS.Set_Table_Column(columns_, 'TARGET_COMPANY');
   Database_SYS.Set_Table_Column(columns_, 'TARGET_CURR_RATE_TYPE');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_10');
PROMPT CREATE ROW KEY INDEX FOR TARGET_COMP_CURR_RATE_TYPE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'TARGET_COMP_CURR_RATE_TYPE_RK';
   table_name_ VARCHAR2(30) := 'TARGET_COMP_CURR_RATE_TYPE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/
-- ***** target_comp_curr_rate_type_tab End *****

---------------------------------------------------------------------------------------------

-- ***** Statutory_Fee_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_11');
PROMPT Update column tax_character in statutory_fee_tab
BEGIN
   UPDATE statutory_fee_tab s
   SET tax_character =  CASE fee_type
                           WHEN 'NOTAX' THEN 'NOTAX'
                           ELSE 'NORMAL'
                        END
   WHERE tax_character IS NULL;
   COMMIT;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_12');
PROMPT Update column tax_type_category in statutory_fee_tab
BEGIN
   UPDATE statutory_fee_tab s
   SET tax_type_category = 'NONE'
   WHERE tax_type_category IS NULL;
   COMMIT;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_13');
PROMPT Update column tax_factor in statutory_fee_tab
BEGIN
   UPDATE statutory_fee_tab s
   SET tax_factor = 'NONE'
   WHERE tax_factor IS NULL;
   COMMIT;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_14');
PROMPT Update column tax_in_tax_base in statutory_fee_tab
BEGIN
   UPDATE statutory_fee_tab s
   SET tax_in_tax_base = 'FALSE'
   WHERE tax_in_tax_base IS NULL;
   COMMIT;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_15');
PROMPT Update column diot_tax_classification in statutory_fee_tab
BEGIN
   UPDATE statutory_fee_tab s
   SET diot_tax_classification = 'NONE'
   WHERE diot_tax_classification IS NULL;
   COMMIT;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_16');
PROMPT Update column stamp_duty in statutory_fee_tab
BEGIN
   UPDATE statutory_fee_tab s
   SET stamp_duty = 'FALSE'
   WHERE stamp_duty IS NULL;
   COMMIT;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_17');
PROMPT Update column round_zero_decimal in statutory_fee_tab
BEGIN
   UPDATE statutory_fee_tab s
   SET round_zero_decimal = 'FALSE'
   WHERE round_zero_decimal IS NULL;
   COMMIT;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_18');
PROMPT Update column eu_operation in statutory_fee_tab
BEGIN
   UPDATE statutory_fee_tab s
   SET eu_operation = 'FALSE'
   WHERE eu_operation IS NULL;
   COMMIT;
END;
/

-- ***** Statutory_Fee_Tab End *****

---------------------------------------------------------------------------------------------

-- ***** Voucher_Type_User_Group_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_19');
PROMPT Remove orphan data in VOUCHER_TYPE_USER_GROUP_TAB
BEGIN
   DELETE
   FROM VOUCHER_TYPE_USER_GROUP_TAB u
   WHERE NOT EXISTS (SELECT 1
                     FROM  ACCOUNTING_YEAR_TAB a
                     WHERE a.company         = u.company
                     AND   a.accounting_year = u.accounting_year);
   COMMIT;
END;
/

-- ***** Voucher_Type_User_Group_Tab End *****

---------------------------------------------------------------------------------------------

--  ***** Company_Counter_Part_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_20');
PROMPT Creating table COMPANY_COUNTER_PART_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'COMPANY_COUNTER_PART_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'CODE_PART', 'VARCHAR2(1)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_21');
PROMPT Creating constraints for COMPANY_COUNTER_PART_PK
DECLARE
   index_name_ VARCHAR2(30) := 'COMPANY_COUNTER_PART_PK';
   table_name_ VARCHAR2(30) := 'COMPANY_COUNTER_PART_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COMPANY');
   Database_SYS.Set_Table_Column(columns_, 'CODE_PART');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_22');
PROMPT Creating constraint COMPANY_COUNTER_PART_RK
DECLARE
   index_name_ VARCHAR2(30) := 'COMPANY_COUNTER_PART_RK';
   table_name_ VARCHAR2(30) := 'COMPANY_COUNTER_PART_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** Company_Counter_Part_Tab End *****

---------------------------------------------------------------------------------------------

--  ***** Counter_Part_Comp_Mapping_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_23');
PROMPT Creating table COUNTER_PART_COMP_MAPPING_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'COUNTER_PART_COMP_MAPPING_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'CODE_PART', 'VARCHAR2(1)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'CODE_PART_VALUE', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'CONNECTED_COMPANY', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_24');
PROMPT Creating constraints for COUNTER_PART_COMP_MAPPING_PK
DECLARE
   index_name_ VARCHAR2(30) := 'COUNTER_PART_COMP_MAPPING_PK';
   table_name_ VARCHAR2(30) := 'COUNTER_PART_COMP_MAPPING_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COMPANY');
   Database_SYS.Set_Table_Column(columns_, 'CODE_PART');
   Database_SYS.Set_Table_Column(columns_, 'CODE_PART_VALUE');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_25');
PROMPT Creating constraint COUNTER_PART_COMP_MAPPING_RK
DECLARE
   index_name_ VARCHAR2(30) := 'COUNTER_PART_COMP_MAPPING_RK';
   table_name_ VARCHAR2(30) := 'COUNTER_PART_COMP_MAPPING_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

--  ***** Counter_Part_Comp_Mapping_Tab End *****

---------------------------------------------------------------------------------------------

--  ***** FIN_DRILL_DOWN_TEMP_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_26');
PROMPT Adding columns to FIN_DRILL_DOWN_TEMP_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'FIN_DRILL_DOWN_TEMP_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'FROM_YEAR', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TO_YEAR', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'FROM_PERIOD', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TO_PERIOD', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'FROM_YEAR_PERIOD', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TO_YEAR_PERIOD', 'NUMBER', 'Y');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

--  ***** FIN_DRILL_DOWN_TEMP_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** COMPANY_STRUCTURE_DET_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_27');
PROMPT CREATE TABLE COMPANY_STRUCTURE_DET_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_DET_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_ID', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'LEVEL_ID', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_NODE', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ITEM_VALUE', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'LEVEL_ID_DESC', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_NODE_DESC', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ITEM_ABOVE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ITEM_BELOW', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ITEM_BELOW_DESC', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ITEM_BELOW_TYPE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'LEVEL_SEQ', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_28');
PROMPT CREATE PRIMARY KEY INDEX FOR COMPANY_STRUCTURE_DET_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_DET_PK';
   table_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_DET_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_ID');
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_NODE');
   Database_SYS.Set_Table_Column(columns_, 'LEVEL_ID');
   Database_SYS.Set_Table_Column(columns_, 'ITEM_VALUE');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_29');
PROMPT CREATE ROW KEY INDEX FOR COMPANY_STRUCTURE_DET_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_DET_RK';
   table_name_ VARCHAR2(30) := 'COMPANY_STRUCTURE_DET_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** COMPANY_STRUCTURE_DET_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** ANALYTIC_COMP_STRUCT_CACHE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_30');
PROMPT CREATE TABLE ANALYTIC_COMP_STRUCT_CACHE_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'ANALYTIC_COMP_STRUCT_CACHE_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_ID', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_NODE', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ITEM_VALUE', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'LEVEL_ID', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_NODE_DESC', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'LEVEL_ID_DESC', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_31');
PROMPT CREATE PRIMARY KEY INDEX FOR ANALYTIC_COMP_STRUCT_CACHE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'ANALYTIC_COMP_STRUCT_CACHE_PK';
   table_name_ VARCHAR2(30) := 'ANALYTIC_COMP_STRUCT_CACHE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_ID');
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_NODE');
   Database_SYS.Set_Table_Column(columns_, 'LEVEL_ID');
   Database_SYS.Set_Table_Column(columns_, 'ITEM_VALUE');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_32');
PROMPT CREATE ROW KEY INDEX FOR ANALYTIC_COMP_STRUCT_CACHE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'ANALYTIC_COMP_STRUCT_CACHE_RK';
   table_name_ VARCHAR2(30) := 'ANALYTIC_COMP_STRUCT_CACHE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** ANALYTIC_COMP_STRUCT_CACHE_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** Ext_File_Trans_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_33');
PROMPT Adding column CLOB1 to Ext_File_Trans_Tab
DECLARE
   table_name_    VARCHAR2(30) := 'EXT_FILE_TRANS_TAB';
   column_        Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('CLOB1', 'CLOB', 'Y', NULL, 'LOB (CLOB1) STORE AS (TABLESPACE &IFSAPP_LOB CHUNK 4096 ENABLE STORAGE IN ROW)');
   Database_SYS.Add_Lob_Column(table_name_, column_, TRUE);
END;
/

-- ***** Ext_File_Trans_Tab End *****

---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES/COLUMNS -----------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_34');
PROMPT Remove obsolete package Vertex_Q_Series_Tax_Util_API

BEGIN
   Database_SYS.Remove_Package('Vertex_Q_Series_Tax_Util_API', TRUE);
END;
/
---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE INDEXES/SEQUENCES ------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Timestamp_35');
PROMPT Upgrade statements IN FILE 2220.upg ends here.

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2220.upg','Done');
