fragment AvalaraBrazilTaxUtil;
component ACCRUL;
layer Core;
description "Structure with relations (schema) for Avalara Brazil integration messages";

--------------------------------- FRAGMENTS ---------------------------------


----------------------------- CLIENT FRAGMENTS ------------------------------


--------------------------- PROJECTION FRAGMENTS ----------------------------

structure Request {
   nestedwithcrud {
      crud = ReadAndWrapWithJson;
      jsoncasing = CamelCase;
   }
   implementation = "Utility";
   
   attribute Header Structure(HeaderBase) {
      required = [true];
   }
   attribute Lines List < Structure(LineBaseForGoods) >  {
      required = [true];
   }
}

structure HeaderBase {

   nestedwithcrud {
      crud = ReadAndWrapWithJson;
      jsoncasing = CamelCase;
   }
   implementation = "Utility";

   attribute EDocCreatorType Text;
   attribute AmountCalcType Text;
   attribute CompanyLocation Text {
      required = [true];
   }
   attribute DocumentCode Text;
   attribute Locations Structure(Location) {
      required = [true];
   }
   attribute InvoicesRefs List < Structure(NRef) >;
   attribute InvoiceNumber Integer;
   attribute InvoiceSerial Integer;
   attribute MessageType Text {
      required = [true];
   }
}

structure Location {
   nestedwithcrud {
      crud = ReadAndWrapWithJson;
      jsoncasing = CamelCase;
   }
   implementation = "Utility";

   attribute Entity Structure(EntityFullDataForGoods);
   attribute Establishment Structure(EntityFullDataForGoods);
}

structure EntityFullDataForGoods {
   nestedwithcrud {
      crud = ReadAndWrapWithJson;
      jsoncasing = CamelCase;
   }
   implementation = "Utility";

   attribute Name Text {
      maxlength = 150;
   }
   attribute FederalTaxId Text;
   attribute StateTaxId Text;
   attribute Suframa Text;
   attribute TaxRegime Text;
   attribute TaxesSettings Structure(TaxesSettingsForGoods);
   attribute Address Structure(AddressInfo);
   attribute ActivitySector Structure(ActivitySector);
}

structure TaxesSettingsForGoods {
   nestedwithcrud {
      crud = ReadAndWrapWithJson;
      jsoncasing = CamelCase;
   }
   implementation = "Utility";

   attribute IcmsTaxPayer Text;
}

structure AddressInfo {
   nestedwithcrud {
      crud = ReadAndWrapWithJson;
      jsoncasing = CamelCase;
   }
   implementation = "Utility";

   attribute Street Text {
      maxlength = 60;
   }
   attribute Zipcode Text {
      maxlength = 60;
   }
   attribute CityCode Text;
   attribute CityName Text {
      maxlength = 60;
   }
   attribute State Text;
   attribute CountryCode Text;
   attribute Country Text {
      maxlength = 3;
   }
}

structure ActivitySector {
   nestedwithcrud {
      crud = ReadAndWrapWithJson;
      jsoncasing = CamelCase;
   }
   implementation = "Utility";

   attribute Type Text;
   attribute Code Text;
}

structure NRef {
   nestedwithcrud {
      crud = ReadAndWrapWithJson;
      jsoncasing = CamelCase;
   }
   implementation = "Utility";

   attribute DocumentCode Text;
}

structure LineBaseForGoods {
   nestedwithcrud {
      crud = ReadAndWrapWithJson;
      jsoncasing = CamelCase;
   }
   implementation = "Utility";

   attribute LineCode Integer;
   attribute ItemCode Text {
      maxlength = 60;
   }
   attribute ItemDescriptor Structure(ItemDescriptorForGoods);
   attribute NumberOfItems Number {
      required = [true];
   }
   attribute LineUnitPrice Number;
   attribute LineAmount Number;
   attribute LineTaxedDiscount Number;
   attribute UseType Text {
      required = [true];
   }
   attribute OperationType Text;
   attribute OrderNumber Text {
      maxlength = 15;
   }
   attribute OrderItemNumber Text;
   attribute FreightAmount Number;
   attribute InsuranceAmount Number;
   attribute OtherCostAmount Number;
}

structure ItemDescriptorForGoods {
   nestedwithcrud {
      crud = ReadAndWrapWithJson;
      jsoncasing = CamelCase;
   }
   implementation = "Utility";

   attribute TaxCode Text;
   attribute HsCode Text;
   attribute Ex Integer;
   attribute Cest Text;
   attribute Unit Text {
      maxlength = 6;
   }
   attribute Source Text;
   attribute ProductType Text;
}
