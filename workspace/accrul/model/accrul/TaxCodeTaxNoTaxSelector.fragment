fragment TaxCodeTaxNoTaxSelector;
component ACCRUL;
layer Core;
description "List of values fragment defining view tax_code_tax_no_tax";

--------------------------------- FRAGMENTS ---------------------------------


----------------------------- CLIENT FRAGMENTS ------------------------------
@Overtake Core
selector ReferenceTaxCodeTaxNoTaxSelector for TaxCodeTaxNoTax {
   static FeeCode;
   static Description;
}

card TaxCodeTaxNoTaxCard for TaxCodeTaxNoTax {
   label = "";
   fieldranking FeeCode;
   field FeeCode;
   field Description;
}

--------------------------- PROJECTION FRAGMENTS ----------------------------
query TaxCodeTaxNoTax {
   from = "tax_code_tax_no_tax";
   lu = StatutoryFee;
   keys = Company, FeeCode;
   ludependencies = StatutoryFee;
   attribute Company Text {
      format = uppercase;
      lovcolumn = [false];
   }
   attribute FeeCode Text {
      label = "Tax Code";
      format = uppercase;
      lovcolumn = [true];
   }
   attribute Description Text {
      lovcolumn = [true];
   }
   attribute FeeRate Number {
      label = "Tax (%)";
      lovcolumn = [true];
   }
   attribute ValidFrom Date {
      lovcolumn = [true];
   }
   attribute ValidUntil Date {
      label = "Valid To";
      lovcolumn = [true];
   }
   attribute FeeType Enumeration(FeeType) {
      label = "Tax Type";
      lovcolumn = [true];
      fetch = "fee_type_db";
   }
   attribute VatReceived Enumeration(VatMethod) {
      label = "Tax Method Tax Received";
      lovcolumn = [true];
      fetch = "vat_received_db";
   }
   attribute VatDisbursed Enumeration(VatMethod) {
      label = "Tax Method Tax Disbursed";
      lovcolumn = [true];
      fetch = "vat_disbursed_db";
   }
   attribute Deductible Number {
      label = "Deductible (%)";
      lovcolumn = [true];
   }
   attribute TaxAmountAtInvPrint Enumeration(TaxAmountAtInvPrint) {
      label = "Tax Amount at Invoice Printout";
      lovcolumn = [true];
      fetch = "tax_amount_at_inv_print_db";
   }
   attribute TaxAmtLimit Number {
      label = "Tax Amount Limit in Accounting Currency";
      lovcolumn = [true];
   }
   attribute TaxReportingCategory Enumeration(TaxReportingCategory) {
      lovcolumn = [true];
      fetch = "tax_reporting_category_db";
   }
}

-------------------- MANUALLY ADDED PROJECTION FRAGMENTS --------------------

function TaxCodeTaxNoTaxFetchValidTaxCodes List < Entity(TaxCodeTaxNoTax) > {
   parameter ValidationDate Date;

   where = "VALID_FROM <= TRUNC(:ValidationDate) AND VALID_UNTIL >= TRUNC(:ValidationDate)";
}