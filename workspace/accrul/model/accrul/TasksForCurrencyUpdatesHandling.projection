projection TasksForCurrencyUpdatesHandling;
component ACCRUL;
layer Core;
description "Tasks For Currency Updates";
category Users;
include fragment ScheduledTasksCommon;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset ExtCurrencyTaskSet for ExtCurrencyTask;

entityset ExtCurrencyTaskDetailSet for ExtCurrencyTaskDetail;
entityset ExtCurrencyTaskDetailUserAllowedSet for ExtCurrencyTaskDetailUserAllowed;
entityset TaskVirtualSet for TaskVirtual;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity ExtCurrencyTask {
   ludependencies = ExtCurrencyTaskDetail;
   supportwarnings = [true];

   attribute TaskId Text {
      label = "Task ID";
   }
   attribute LastUpdated Timestamp {
      editable = [false];
   }
   attribute CompanyRowExist Boolean {
      fetch = "Ext_Currency_Task_API.Company_Row_Exist(task_id)";
   }

   array ExtCurrencyTaskDetailsArray(TaskId) to ExtCurrencyTaskDetail(TaskId);

   action ValidateUpdateCurrencyRate {
      supportwarnings = [true];
   }
}

@Override
entity ExtCurrencyTaskDetail {
   crud = Create, Delete, Read;
   supportwarnings = [true];

   -- Note: There is a fw issue (as of today),size property doesn't work properly for reference fields. This attribute was added to overcome that limitation.
   --       If/when that issue is fixed, this field can be removed and use CurrencyTypeRef.LastUpdated instead.
   attribute LastUpdated Timestamp {
      label = "Last Updated from Workflow";
      fetch = "Currency_Type_API.Get_Last_Updated(company, currency_type)";
   }

   reference CompanyRef(Company) to CompanyFinance(Company) {
      label = "Company";
   }
   reference CurrencyTypeRef(Company, CurrencyType) to CurrencyType3Query(Company, CurrencyType) {
      label = "Currency Rate Type";
   }
}


------------------------------- ENUMERATIONS --------------------------------


---------------------------------- QUERIES ----------------------------------
query CurrencyType3Query {
   from = "currency_type3";
   lu = CurrencyType;
   keys = Company, CurrencyType;

   attribute Company Text;
   attribute CurrencyType Text;
   attribute Description Text {
      label = "Currency Rate Type Description";
   }
   attribute RefCurrencyCode Text;
   attribute RateTypeCategory Text;
   attribute LastUpdated Timestamp;
}

query ExtCurrencyTaskDetailUserAllowed {
   from = "ext_currency_task_detail_user";
   lu = ExtCurrencyTaskDetail;
   keys = TaskId, Company, CurrencyType;

   attribute TaskId Text;
   attribute Company Text;
   attribute CurrencyType Text;
}

---------------------------------- ACTIONS ----------------------------------
action UpdateCurrencyRatesFromWorkFlow {
   initialcheck none;
   ludependencies = ExtCurrencyTaskDetail;
   parameter TaskId Text;

}

action ValidateWorkFlowEnabled {
   initialcheck none;
}
--------------------------------- FUNCTIONS ---------------------------------
function InitWorkflowEnabled Boolean;

function DefaultScheduleCurrUpdateParameters Structure(ParametersStructure);

-------------------------------- STRUCTURES ---------------------------------

@Override
structure ParametersStructure {
   attribute TaskId Text {
      maxlength = 10;
      label = "Task ID";
      format = uppercase;
      editable = [false];
   }
}
--------------------------------- VIRTUALS ----------------------------------
@Override
virtual TaskVirtual using BatchSchedule {
   attribute UpdateOptions Enumeration(TaskOptions);

   attribute TaskId Text {
      maxlength = 10;
      label = "Task ID";
      format = uppercase;
      editable = [false];
   }
   reference TaskIdRef(TaskId) to ExtCurrencyTask(TaskId) {
      label = "Task ID";
   }
   attribute UpdateStatus Text {
      maxlength = 4000;
   }
}


--------------------------------- SUMMARIES ---------------------------------


-------------------------------- SINGLETONS ---------------------------------


