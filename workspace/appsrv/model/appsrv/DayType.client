-----------------------------------------------------------------------------
--  Date         Sign    History
--  ------      ------  ---------------------------------------------------------
--  2020-01-21  LASSLK  SAXTEND-1244,Implement LOV Filtering
-----------------------------------------------------------------------------
client DayType;
component APPSRV;
layer Core;
projection DayTypeHandling;
include fragment ConnectedCalenderAssistant;
// Enterprise Explorer Source: frmWorkTimeDayType
----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry WorkTimeDayTypeNavEntry parent AppsrvNavigator.WorkTimeCalendarBasicData at index 200 {
      label = "Day Type";
      page Form home WorkTimeDayType;
   }
}
-------------------------------- MAIN PAGES ---------------------------------
page Form using WorkTimeDayTypeSet {
   label = "Day Type";
   selector WorkTimeDayTypeSelector;
   group WorkTimeDayTypeGroup;
   list WorkTimeDayTypeDescList(WorkTimeDayTypeDescArray);

   commandgroup CommandGroupCmdGroup {

      command CalendarsConnectedToDayTypeCommand;
   }
}
-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command CalendarsConnectedToDayTypeCommand for WorkTimeDayType {
   label = "Calendars Connected To Day Type";
   enabled = [true];
   mode = SingleRecord;
   execute {
      assistant ConnectedCalendarAssistant("SCHEDULE", Schedule, Selection) {
         when OK {
            exit;
         }
         when CANCEL {
            exit;
         }
      }
   }
}



command CalendarPeriodsCommand for WorkTimeDayTypeDesc {
   label = "Calendar Periods";
   enabled = [true];
   mode = SelectedRecords;
   bulkexecute {
      bulknavigate "page/ListWorkTimePeriod/List?$filter=Period eq $[Period]";
   }
}
--------------------------------- SELECTORS ---------------------------------
@Override
selector WorkTimeDayTypeSelector for WorkTimeDayType {
   label = "${DayType} - ${Description} - ${WorkingTime} - ${WorkingPeriods}";
   static DayType;
   static Description;
   static WorkingTime;
   static WorkingPeriods;
}
---------------------------------- GROUPS -----------------------------------
group WorkTimeDayTypeGroup for WorkTimeDayType {
   label = "";
   field DayType {
      validate command {
         execute {
            call GetWorkingMinutes(DayType) into WorkingTime;
            call GetWorkingPeriods(DayType) into WorkingPeriods;
         }
      }
   }
   field Description;
   field WorkingTime;
   field WorkingPeriods;
   field ConnectNext;
}

----------------------------------- LISTS -----------------------------------
list WorkTimeDayTypeDescList for WorkTimeDayTypeDesc {
   label = "Work Day Description";

   field FromTime;
   field ToTime;
   lov PeriodRef with ReferenceWorkTimePeriodSelector {
      search = Period, Name;
      description = PeriodRef.Name;
   }
   field ReservedTime;

   commandgroup CommandGroupCmdGroup {

      command CalendarPeriodsCommand;
   }
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

