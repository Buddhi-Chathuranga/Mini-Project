fragment QuaNonConformanceList;
component APPSRV;
layer Core;
description "QUA Non Conformances fragment that has a common projection and a client with reusable pages.";

----------------------------- CLIENT FRAGMENTS ------------------------------
page QuaNonConformancesPageForNCRBasicdata using QuaNonConformances {
   label = "Non Conformances";
   list QuaNonConformanceNCRList;
}

page QuaNonConformancesPageForMRBBasicdata using QuaNonConformances {
   label = "Non Conformances";
   list QuaNonConformanceMRBList;
}
@DynamicComponentDependency QUANCR
command CheckSelectedCommand for QuaNonConformance {
   label = "Set Show in Chart On";
   //enabled = [ShowInChart = false];
   mode = SelectedRecords;

   bulkexecute {
      ifany [ShowInChart = false] {
         bulkcall SetShowInChartNonConformance("TRUE");
      }
   }
}

@DynamicComponentDependency QUANCR
command UncheckSelectedCommand for QuaNonConformance {
   label = "Set Show in Chart Off";
   //enabled = [ShowInChart = true];
   mode = SelectedRecords;

   bulkexecute {
      ifany [ShowInChart = true] {
         bulkcall SetShowInChartNonConformance("FALSE");
      }
   }
}
command TranslationCommand for QuaNonConformance {
   label = "Translation";
   enabled = [NonconformanceCode != null];

   execute {
      navigate "page/BasicDataTranslation/Form?$filter=Module eq 'APPSRV' and Lu eq 'QuaNonConformance'";
   }
}
list QuaNonConformanceNCRList for QuaNonConformance {
   field NonconformanceCode {
      size = Small;
   }
   field NonconformanceDescription {
      size = Large;
   }
   field Notes {
      size = Large;
   }
   @DynamicComponentDependency QUANCR
   field ShowInChart {
      size = Small;
   }
   badge Objstate {
      size = Small;
      style = TextOnly;
      emphasis StateActive = [Objstate = "Active"];
      emphasis StateHidden = [Objstate = "Hidden"];
      emphasis StateBlocked = [Objstate = "Blocked"];
      label = "Validity";
   }

   commandgroup DataValidity {
      
      command BulkSetActive;
      command BulkSetHidden;
      command BulkSetBlocked;
   }

   @DynamicComponentDependency QUANCR
   commandgroup ShowInChartCmdGroup {
      
      command CheckSelectedCommand {
         label = "Set Show in Chart On";
         mode = SelectedRecords;
      }
      command UncheckSelectedCommand {
         label = "Set Show in Chart Off";
         mode = SelectedRecords;
      }
   }

   commandgroup  TranslationCmdGroup {
      
      command TranslationCommand {
         label = "Translation";
         mode = SelectedRecords;
      }

   }
}

list QuaNonConformanceMRBList for QuaNonConformance {
   field NonconformanceCode {
      size = Small;
   }
   field NonconformanceDescription {
      size = Large;
   }
   field Notes {
      size = Large;
   }
   badge Objstate {
      size = Small;
      style = TextOnly;
      emphasis StateActive = [Objstate = "Active"];
      emphasis StateHidden = [Objstate = "Hidden"];
      emphasis StateBlocked = [Objstate = "Blocked"];
      label = "Validity";
   }
   commandgroup DataValidity {
      
      command BulkSetActive;
      command BulkSetHidden;
      command BulkSetBlocked;
   }

   commandgroup  TranslationCmdGroup {
      
      command TranslationCommand {
         label = "Translation";
         mode = SelectedRecords;
      }

   }
}
--------------------------- PROJECTION FRAGMENTS ----------------------------
entityset QuaNonConformances for QuaNonConformance;

@Override
entity QuaNonConformance {
   crud = Create, Read, Update, Delete;

   attribute ShowInChart Boolean("TRUE", "FALSE") {
      fetch = "SHOW_IN_CHART_DB";
      label = "Show in Chart";
      required = [true];
      editable = [true];
   }
   action SetShowInChartNonConformance {
      parameter Value Text;
   }
}