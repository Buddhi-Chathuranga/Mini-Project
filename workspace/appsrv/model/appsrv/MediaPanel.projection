--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
--
-- DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE!
-- DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE!
-- DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE!
--
--                  There is a new implementation of this functionality found in the MediaLibraryAttachment* files.
--                  All changes and fixes should be done in the new files.
--
-- DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE!
-- DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE!
-- DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE! DO NOT CHANGE THIS FILE!
--------------------------------------------------------------------------------------

projection MediaPanel;
component APPSRV;
layer Core;
description "Manage Media in Attachment Panel";
category ExternalB2B, Users;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset MediaLibrarySet for MediaLibrary;
entityset MediaLibraryItemSet for MediaLibraryItem;
entityset MediaItemSet for MediaItem;

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity MediaItem {
   attribute MediaObject Stream {
      implementation = "Java";
   }
}

function GetOCTResultCount Number {
   parameter LuName Text;
   parameter KeyRef Text;
}

function GetOCTResultSet List<Structure(MlibResultStruct)> {
   parameter LuName Text;
   parameter KeyRef Text;
}

function GetMediaFileStream Stream {
   parameter ItemId Number;
}

function GetTextFileStream LongText {
   parameter ItemId Number;
}

function GetFileMetadata Structure(FileMetadata) {
   parameter ItemId Number;
}

function GetEditableLuName Text {
   parameter TargetLuName Text;
   parameter Service Text;
}

function GetLuNameMediaAware Text {
   parameter LuName Text;
}

function ExtractTitleFromFileName Text {
   parameter FileName Text;
}

function GetTransformedKeyRef Text {
   parameter TargetLuName Text;
   parameter SourceLuName Text;
   parameter Service Text;
   parameter TargetKeyRef Text;
}

function GetMediaFileExtList Text {
}

action GetLibraryId Text {
   initialcheck none;
   parameter LuName Text;
   parameter KeyRef Text;
}
------------------------------ ENTITY DETAILS -------------------------------

enumeration YesNoEnum {
   value = "Yes";
   value = "No";
}

structure FileMetadata {
   attribute PageCount Integer;
   attribute Extension Text;
   --Can have null values
   attribute ItemType Text;
}

structure MlibResultStruct {
   attribute LuName Text;
   attribute KeyRef Text;
   attribute LibraryId Text;
   attribute LibraryItemId Text;
   attribute ItemId Number;
   attribute Name Text;
   attribute Description Text;
   attribute MediaFile Text;
   attribute MediaItemType Text;
   attribute PrivateMediaItem Text;
   attribute MediaThumb Binary;
   attribute DefaultMedia Text;
   attribute LockedDb Text;
   attribute Source Text;
   attribute FileExt Text;
}

structure CreateNewMediaStruct {
   attribute Name Text;
   attribute Description Text;
   attribute LuName Text;
   attribute KeyRef Text;
   attribute BrowseFileSelectionEnum Enumeration(YesNoEnum);
}

structure MediaKeysStruct {
   attribute ItemId Integer;
}

action CreateAndConnectMedia Structure(MediaKeysStruct) {
   initialcheck none;
   parameter LuName Text;
   parameter KeyRef Text;
   parameter Name Text {
      required = [false];
   }
   parameter Description Text {
      required = [false];
   }
}
