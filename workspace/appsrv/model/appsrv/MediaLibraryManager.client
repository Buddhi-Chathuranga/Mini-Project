-- Date    Sign    History
-- ------  ------  ------------------------------------------------------------------------------
-- 210421  Jihalk  AM21R2-1319, Enable Edit feature for Description field in LibraryItemDetailsList.
-- 210517  DEEKLK  AM2020R1-7785, Modified LibraryItemDetailsList.
-- 210912  DEEKLK  AMZDOC-1158, Modified LibraryItemDetailsList.
------------------------------------------------------------------------------------------------------

client MediaLibraryManager;
component APPSRV;
layer Core;
projection MediaLibraryManagerHandling;
--------------------------------- FRAGMENTS ---------------------------------
include fragment MediaLibReportDialog;

warningsenabled = MediaLibrary, MediaLibraryItem;


----------------------------- NAVIGATOR ENTRIES -----------------------------

-------------------------------- MAIN PAGES ---------------------------------
page Form using MediaLibrarySet {
   label = "Media Library Manager - ${ConnectedObjSource} - ${LibraryId}";

   selector MediaLibrarySelector;
   group MediaLibraryManagerHeadGroup;
   list LibraryItemDetailsList(LibraryItemDetailsArray);
   singleton MediaItemSingleton(MediaItemArray) bind LibraryItemDetailsList;
   group MediaItemGroup bind MediaItemSingleton;
   list CopiedLibraryIds using LibraryIdStorageSet {
      visible = [false];
   }

   commandgroup CommandGroupCmdGroup {
      label = "Copy/Paste";
      command CopyfromCommand;
      command CopyItemsCommand;
      command PasteItemsCommand;
   }
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command CopyfromCommand for MediaLibrary {
   label = "Copy from";
   enabled = [true];
   variable VarConnectedObjRef1 Text;
   variable VarConnectedObjRef2 Text;
   variable VarConnectedObjRef3 Text;
   variable VarConnectedObjRef4 Text;
   variable VarConnectedObjRef5 Text;

   execute {
      dialog CopyLibraryDialog(LuName, ConnectedObjSource, ConnectedObjRef1Title, ConnectedObjRef2Title, ConnectedObjRef3Title, ConnectedObjRef4Title, ConnectedObjRef5Title)
      into(VarConnectedObjRef1, VarConnectedObjRef2, VarConnectedObjRef3, VarConnectedObjRef4, VarConnectedObjRef5) {
         when OK {
            call CopyLibraryByRef(LuName, VarConnectedObjRef1, VarConnectedObjRef2, VarConnectedObjRef3, VarConnectedObjRef4, VarConnectedObjRef5, LibraryId);
            exit OK;
         }
         when CANCEL {
            exit CANCEL;
         }
      }
   }
}

command CopyItemsCommand for MediaLibrary {
   label = "Copy Media Items";
   enabled = [true];
   execute {
      call CopyMediaItems();
   }
}

command PasteItemsCommand for MediaLibrary {
   label = "Paste Media Items";
   enabled = [true];
   execute {
      call PasteMediaItems(LibraryId);
   }
}

command SetasDefaultImageCommand for MediaLibraryItem {
   label = "Set as Default Image";
   mode = SingleRecord;

   enabled = [MediaItemType = "Image" and DefaultMedia != true and Obsolete != true];
   execute {
      call SetDefaultLibraryMedia();
   }
}

command MediaItemCommand for MediaLibraryItem {
   label = "Media Item";
   mode = SingleRecord;
   icon = "popup";
   style = IconOnly;
   enabled = [ItemId != null];
   execute {
      navigate "page/MediaItem/Form?$filter=ItemId eq ${ItemId}";
   }
}

command PrintDetailsCommand for MediaLibraryItem {
   label = "Print Details";
   enabled = [LibraryId != null and LibraryItemId != null];

   variable InsertVar;

   execute {
      call InsertData() into InsertVar;

      assistant MediaLibReportAssistant(LibraryId, LibraryItemId, InsertVar) {
         when CANCEL {
            exit CANCEL;
         }
      }
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector MediaLibrarySelector for MediaLibrary {
   static ConnectedObjSource;
}

@Override
selector ReferenceMediaItemSelector for MediaItem {
   static ItemId {
      label = "Item ID";
   }
}
---------------------------------- GROUPS -----------------------------------
group MediaLibraryManagerHeadGroup for MediaLibrary {
   label = "";

   field ConnectedObjSource;
   field Description;
   field ConnectedObjRef1 {
      label = "${ConnectedObjRef1Title}";

      size = Small;
   }
   field ConnectedObjRef2 {
      label = "${ConnectedObjRef2Title}";
      columnexclude = [ConnectedObjRef2Title != null];

      visible = [ConnectedObjRef2Title != null];

      size = Small;
   }
   field ConnectedObjRef3 {
      label = "${ConnectedObjRef3Title}";
      visible = [ConnectedObjRef3Title != null];

      size = Small;
   }
   field ConnectedObjRef4 {
      label = "${ConnectedObjRef4Title}";
      visible = [ConnectedObjRef4Title != null];

      size = Small;
   }
   field ConnectedObjRef5 {
      label = "${ConnectedObjRef5Title}";
      visible = [ConnectedObjRef5Title != null];

      size = Small;
   }
   field LockedDb {
      size = Small;
   }
}

group MediaItemGroup for MediaItem {
   label = "Preview";

   imagefield {
      imagedata MediaObject;
      size = FullWidth;
      showlabel = false;
      visible = [MediaItemType = "Image"];
   }
   field MediaText {
      multiline = true;
      visible = [MediaItemType = "Text"];
      showlabel = false;
   }
   field MediaObject {
      showlabel = false;
      visible = [MediaItemType = "Audio"];
   }
}

group CopyLibraryGroup for CopyLibraryStructure {
   label = "Copy Media Library";

   field ConnectedObjSourceTranslated;
   field ConnectedObjRef1 {
      visible = [ConnectedObjRef1Title != null];
   }
   field ConnectedObjRef2 {
      visible = [ConnectedObjRef2Title != null];
   }
   field ConnectedObjRef3 {
      visible = [ConnectedObjRef3Title != null];
   }
   field ConnectedObjRef4 {
      visible = [ConnectedObjRef4Title != null];
   }
   field ConnectedObjRef5 {
      visible = [ConnectedObjRef5Title != null];
   }
}

----------------------------------- LISTS -----------------------------------
list LibraryItemDetailsList for MediaLibraryItem {
   editmode = SingleRowEdit;
   label = "Media Items";
   orderby = DefaultMedia desc;

   crudactions {
      delete {
         enabled = [parent.LockedDb = false];
      }
      new {
         enabled = [parent.LockedDb = false];
      }
   }
   field LibraryId {
      columnexclude = [true];
   }

   field LibraryItemId;
   lov ItemIdRef with ReferenceMediaItemSelector using GetItemId;
   field Name {
      size = Small;
   }
   field Description {
      size = Small;
      multiline = true;
   }
   field MediaItemType {
      size = Small;
      label = "Media Item Type";
      editable = [ItemId = null];
   }
   field DefaultMedia {
      size = Small;
   }
   field MediaItemRef.ArchiveNo {
      size = Small;
      label = "Media Archive";
   }
   field MediaPrintOption {
      size = Small;
   }
   field MediaItemObsolete {
      size = Small;
      label = "Obsolete";
   }
   field NoteText {
      size = Small;
      label = "Notes";
      multiline = true;
   }
   field CreatedBy {
      size = Small;
   }
   field CreatedDate;
   field PrivateMediaItem {
      size = Small;
      editable = [Etag != null];
      validate command {
         execute {
            --Following errors are also included in the server as well. They were included here so that the data source does not get dirty due to this error.
            --without the following, saving any new records after this edit on this boolean will fail with Odata Provider error.
            if [PrivateMediaItem = true] {
               if [HasMultipleConnections = "TRUE"] {
                  set PrivateMediaItem = false;
                  alert("This media item is connected to more than one object. Therefore it cannot be set as private.");
               }
               else {
                  if [HasSingleConnection = "FALSE"] {
                     set PrivateMediaItem = false;
                     alert("This media item is not connected to any object. Therefore it cannot be set as private.");

                  }
               }

            }
         }
      }
   }

   commandgroup CommandGroupCmdGroup {
      command SetasDefaultImageCommand;
   }

   commandgroup CommandGroup2CmdGroup {
      command MediaItemCommand;
      command PrintDetailsCommand;
   }
}

list CopiedLibraryIds for LibraryIdStorage {
   field LibraryId;
}

@Override
list MediaItemLovList for MediaItem {
   static ItemId {
      label = "Item ID";
   }
}
----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------
dialog CopyLibraryDialog for CopyLibraryStructure {
   label = "Copy Media Library";
   input(LuName, ConnectedObjSourceTranslated, ConnectedObjRef1Title, ConnectedObjRef2Title, ConnectedObjRef3Title, ConnectedObjRef4Title, ConnectedObjRef5Title);
   output(ConnectedObjRef1, ConnectedObjRef2, ConnectedObjRef3, ConnectedObjRef4, ConnectedObjRef5);
   group CopyLibraryGroup;

   commandgroup ButtonCmdGroup {

      command Ok;
      command Cancel;
   }
}

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

--------------------------------- SINGLETON ---------------------------------
singleton MediaItemSingleton for MediaItem {
   crudactions {
      new {
         enabled = [false];
      }
      edit {
         enabled = [MediaItemType = "Text"];
      }
      delete {
         enabled = [false];
      }
   }
}
----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------
