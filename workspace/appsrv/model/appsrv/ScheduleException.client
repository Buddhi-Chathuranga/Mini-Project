client ScheduleException;
component APPSRV;
layer Core;
projection ScheduleExceptionHandling;
include fragment ConnectedCalenderAssistant;
// MTG Version: 1.18
// Enterprise Explorer Source: frmWorkTimeException


----------------------------- NAVIGATOR ENTRIES -----------------------------

navigator {
   entry WorkTimeExceptionNavEntry parent AppsrvNavigator.WorkTimeCalendarBasicData at index 3 {
      label = "Schedule Exception";
      page Form;
   }
}

-------------------------------- MAIN PAGES ---------------------------------

page Form using WorkTimeExceptions {
   label = "Schedule Exception";

   selector ScheduleExceptionSelector;
   group WorkTimeExceptionGroup;
   list WorkTimeExceptionCodeList(WorkTimeExceptionCodeArray);

   commandgroup CommandGroupCmdGroup {
      
      command CalendarsConnectedToExceptioCommand;
   }
}

--------------------------------- COMMANDS ----------------------------------

command DayTypeCommand for WorkTimeExceptionCode {
   label = "Day Type";
   mode = SelectedRecords;

   bulkexecute {
      bulknavigate "page/DayType/Form?$filter=DayType eq $[DayType]";
   }
}

command CalendarsConnectedToExceptioCommand for WorkTimeException {
   label = "Calendars Connected To Exception";
   enabled = [true];
   mode = SingleRecord;
   execute {
      assistant ConnectedCalendarAssistant("SCHEDULE", Schedule, Selection) {
         when OK {
            exit;
         }
         when CANCEL {
            exit;
         }
      }
   }
}

--------------------------------- SELECTORS ---------------------------------

selector ScheduleExceptionSelector for WorkTimeException {
   label = "${ExceptionCode} - ${Description}";
   static ExceptionCode;
   static Description;
}

---------------------------------- GROUPS -----------------------------------

group WorkTimeExceptionGroup for WorkTimeException {
   label = "";

   field ExceptionCode;
   field Description {
      size = Large;
   }
}

----------------------------------- LISTS -----------------------------------

list WorkTimeExceptionCodeList for WorkTimeExceptionCode {
   label = "List of Exceptions";

   field ExceptionDate {
      validate command {
         execute {
            if[ExceptionDate != null] {
               call WeekDayName(ExceptionDate) into WeekDay;
            }
         }
      }
   }
   field WeekDay;
   field DayTypeRef {
      size = Small;
   }
   field DayTypeRef.Description {
      size = Medium;
      label = "Description";
   }
   field DayTypeRef.WorkingTime;

   commandgroup CommandGroupCmdGroup {
      
      command DayTypeCommand;
   }
}

----------------------------------- CARDS -----------------------------------


---------------------------------- DIALOGS ----------------------------------


---------------------------------- CHARTS -----------------------------------


---------------------------------- SHEETS -----------------------------------


------------------------------ STATE INDICATOR ------------------------------


----------------------------------- TREES -----------------------------------


---------------------------------- PLUGINS ----------------------------------


------------------------------- IMAGE VIEWERS -------------------------------

