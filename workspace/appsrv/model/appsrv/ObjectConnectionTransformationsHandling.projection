projection ObjectConnectionTransformationsHandling;
component APPSRV;
layer Core;
description "Manage Object Connection Transformation";
category Users;
include fragment KeyTransformationTestAssistant;

--------------------------------- FRAGMENTS ---------------------------------

----------------------------- MAIN ENTRY POINTS -----------------------------


------------------------------ ENTITY DETAILS -------------------------------

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset ObjConnectLuTransformSet for ObjConnectLuTransform;
entityset TransformEditorSet for TransformEditorVirtual;
------------------------------ ENTITY DETAILS -------------------------------
@Override
entity ObjConnectLuTransform {
   where = "Object_Connection_SYS.Is_Lu_Active__(target_lu_name) = 'TRUE' AND Object_Connection_SYS.Is_Lu_Active__(source_lu_name) = 'TRUE'";
   supportwarnings = [true];
   use attributes = Editable, TransformationMethod, SystemDefined, ModifiedBy, ModifiedDate;
   attribute TargetLuName Text;
   attribute ServiceName Text;
   attribute SourceLuName Text;
   attribute ActiveDb Boolean("TRUE", "FALSE") {
      fetch = "active_db";
      label = "Active";
      required = [true];
   }
   attribute SystemDefined Boolean("TRUE", "FALSE") {
      editable = [false];
   }
   attribute ModifiedBy Text {
      editable = [false];
   }
   attribute TransformationMethod Text {
      required = [false];
   }
   attribute ModifiedDate Timestamp {
      editable = [false];
   }
   reference ModifiedByRef(ModifiedBy) to FndUser(Identity) {
      label = "Modified By";
   }
   reference TargetLuNameRef(TargetLuName) to GetTargetLUNames(LuName);
   reference SourceLuNameRef(SourceLuName) to GetSorceLuName(LuName);
   reference ServiceNameRef(TargetLuName, ServiceName) to GetServiceName(LuName, ServiceList) {
      existcheck = [false];
   }

}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------
query GetTargetNames {
   lu = none;
   keys = LuName, ViewName, ColumnName;
   from = "dictionary_sys_view_column_act";

   attribute LuName Text;
   attribute ViewName Text;
   attribute ColumnName Text;
}
query GetTargetLUNames {
   lu = none;
   keys = LuName, ViewName, PackageName;
   from = "object_connection";
   where = "lu_name != '*'";

   attribute LuName Text;
   attribute ViewName Text;
   attribute PackageName Text;
}
query GetSorceLuName {
   lu = none;
   keys = LuName, ServiceList;
   from = "object_connection";
   where = "lu_name != '*'";

   attribute LuName Text;
   attribute ServiceList Text;
}

query GetServiceName {
   lu = none;
   keys = LuName, ServiceList;
   from = "TABLE(Obj_Connect_Lu_Transform_API.Service_Name_Table)";

   attribute LuName Text;
   attribute ServiceList Text;
}

---------------------------------- ACTIONS ----------------------------------
action PopulateList {
   initialcheck none;
   parameter ParentObjkey Text;
   parameter Source Text;
   parameter Target Text;
   parameter TransformationMethod Text;
}
--------------------------------- FUNCTIONS ---------------------------------
function GetValidTargetColumnNames List<Entity(GetTargetNames)> {
   parameter LuName Text;
}

function FilterSourceLuName List<Entity(GetSorceLuName)> {
   parameter ServiceName Text;
   where = "service_list LIKE '%' || :ServiceName || '%'";
}

action GetTransformation Text {
   initialcheck none;
   ludependencies = ObjConnectLuTransform;
   parameter Objkey Text;
   parameter Source Text;
   parameter Target Text;
   parameter Service Text;
}

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------
virtual TransformEditorVirtual {
   crud = Read, Create;

   attribute Source Text;
   attribute Target Text;
   attribute TransformationMethod Text;
   attribute Service Text;

   array LinkedTransformEditor(Objkey) to TransformEditorListVirtual(ParentObjkey);
}
virtual TransformEditorListVirtual {
   crud = Read, Update;

   attribute Source Text;
   attribute Target Text;
   attribute TargetLUKey Text;
   attribute TransformationMethod Text;
   attribute Service Text;

   reference TargetRef(Target) to GetTargetNames(ColumnName);
}
--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------

