fragment ConnectedCalenderAssistant;
component APPSRV;
layer Core;
description "Put some useful description here ...";

----------------------------- CLIENT FRAGMENTS ------------------------------

-------------------------------- ASSISTANTS ---------------------------------
assistant ConnectedCalendarAssistant using ConnectedCalendarSet {
   label = "Connected Calendar";
   input(CalendarType, CalenderTypeValue, Selection);

   singlestep {
      list ConnectedCalendarList(ConnectedCalendarArray);
   }

   command Ok;
}

--------------------------------- COMMANDS ----------------------------------

--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------

----------------------------------- LISTS -----------------------------------
list ConnectedCalendarList for ConnectedCalendarListVirtual {
   field CalendarId {
      size = Small;
   }
   field Description;
   badge CalendarRef.Objstate {
      style = TextOnly;
      size = Small;
      label = "Status";

      emphasis StatePreliminary = [CalendarRef.Objstate = "NotGenerated"];
      emphasis StateInProgress = [CalendarRef.Objstate = "ChangesPending"];
      emphasis StateCompleted = [CalendarRef.Objstate = "Generated"];
   }
   fieldranking CalendarId, Description, Objstate;
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

--------------------------------- CHECKLIST ---------------------------------

--------------------------- PROJECTION FRAGMENTS ----------------------------

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset ConnectedCalendarSet for ConnectedCalendarVirtual;
entityset WorkTimeCalendarSet for WorkTimeCalendar;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity WorkTimeCalendar {
   crud = Read;
   use attributes = Description;

   attribute CalendarId Text {
      fetch = "CALENDAR_ID";
   }
   attribute Description Text {
      fetch = "DESCRIPTION";
   }
   attribute ExceptionCode Text;
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------
action GetConnectedCalendarType {
   initialcheck none;
   parameter CalendarType Text;
   parameter CalenderTypeValue Text;
   parameter ParentObjKey Text;
   parameter KeyList Text;
}
--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------
virtual ConnectedCalendarVirtual {
   attribute CalendarId Text {
      fetch = "CALENDAR_ID";
   }
   attribute KeyList Text;
   attribute CalendarType Text;
   attribute CalenderTypeValue Text;

   array ConnectedCalendarArray(CalendarType, CalenderTypeValue, KeyList) to ConnectedCalendarListVirtual(CalendarType, CalenderTypeValue, KeyList);

}
virtual ConnectedCalendarListVirtual {
   crud = Read;
   attribute CalendarId Text {
      fetch = "CALENDAR_ID";
   }
   attribute Description Text {
      fetch = "DESCRIPTION";
   }
   attribute KeyList Text;
   attribute Objstate Text;
   attribute CalendarType Text;
   attribute CalenderTypeValue Text;

   reference CalendarRef(CalendarId) to WorkTimeCalendar(CalendarId);


}

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------

