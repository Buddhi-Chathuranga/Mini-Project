projection IsoCountriesHandling;
component APPSRV;
layer Core;
description "Manage ISO Code Usages - Country";
category Users;

include fragment LangCodeRfc3066Selector;

----------------------------- MAIN ENTRY POINTS -----------------------------
// Enterprise Explorer Source: tbwIsoCountry
entityset IsoCountrySet for IsoCountry;


------------------------------ ENTITY DETAILS -------------------------------
@Override
entity IsoCountry {
   from = "iso_country_def";
   attribute Description Text {
      format = uppercase;
   }
   attribute FullName Text {
      label = "Country Name";
   }
   attribute UsedInAppl Boolean("TRUE", "FALSE") {
      label = "Used in Application";
      required = [true];
   }
   attribute EuMemberDb Boolean("Y", "N") {
      label = "EU Member";
      required = [true];
   }
   attribute EuMember Text {
      required = [false];
   }
   attribute FetchJurisdictionCodeDb Boolean("TRUE", "FALSE") {
      label = "Fetch Jurisdiction Code";
      required = [true];
   }
   attribute BlockedForUseDb Boolean("TRUE", "FALSE") {
      label = "Blocked for Use";
      required = [true];
   }
   attribute SystemAdded Boolean("Y", "N") {
      label = "System Defined";
      editable = [false];
   }
   attribute CountryCode3 Text {
      label = "Country Code (alpha-3)";
      editable = [ETag = null];
   }
   attribute CountryId Text {
      label = "Country ID";
      editable = [ETag = null];
   }
   attribute IsAssigned Boolean("TRUE", "FALSE") {
      fetch = "Alternate_Country_Code_API.Check_Alt_Country_Codes_Exists(country_code)";
   }
   reference DefaultLocaleRef(DefaultLocale) to LangCodeRfc3066(LangCodeRfc3066) {
      label = "Default Locale";
   }
   array AlternateCountryCodeArray(CountryCode) to AlternateCountryCode(CountryCode);
   ludependencies = AlternateCountryCode;
}
------------------------------- ENUMERATIONS --------------------------------


---------------------------------- QUERIES ----------------------------------


---------------------------------- ACTIONS ----------------------------------


--------------------------------- FUNCTIONS ---------------------------------
function GetAlternateCountryCodeSearchContextDefaults Structure(AlternateCountryCodeSearchContextStructure);


-------------------------------- STRUCTURES ---------------------------------
structure AlternateCountryCodeSearchContextStructure {
   attribute OnlyShowAlternate Boolean("TRUE", "FALSE") {
      required = [true];
   }
}


--------------------------------- VIRTUALS ----------------------------------


--------------------------------- SUMMARIES ---------------------------------


-------------------------------- SINGLETONS ---------------------------------


---------------------------- GENERATED FROM APF -----------------------------
// MTG Version: 1.18