-----------------------------------------------------------------------------
--
--  Logical unit: --  Component:    APPSRV
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  191129  Hiralk  GESPRING20-1553, Added Get_Alternate_Uom_Search_Context_Defaults___().
--  200212  LASSLK  SAXTEND-1980:Handle Duplicate,Add CRUD_Default_Copy___().
-----------------------------------------------------------------------------

layer Core;

@Override
PROCEDURE CRUD_Default___ (
   key_  IN     Iso_Unit_Key,
   attr_ IN OUT VARCHAR2,
   info_    OUT VARCHAR2 )
IS
BEGIN
   super(key_, attr_, info_);
   Client_SYS.Add_To_Attr('MULTI_FACTOR', 1, attr_);
   Client_SYS.Add_To_Attr('DIV_FACTOR', 1, attr_);
   Client_SYS.Add_To_Attr('TEN_POWER', 0, attr_);
END CRUD_Default___;

@Override
PROCEDURE CRUD_Default_Copy___ (
   rec_ IN OUT Iso_Unit_Rec )
IS
BEGIN
   super(rec_);
   rec_.present_factor := '1';
   rec_.uom_constant:='0';
END CRUD_Default_Copy___;
FUNCTION Is_Numeric___ (
   param_ IN VARCHAR2 ) RETURN BOOLEAN
IS
   n_param_ NUMBER;
BEGIN
   n_param_ := to_number(param_);
   RETURN(TRUE);
EXCEPTION
   WHEN value_error THEN
      RETURN(FALSE);
END Is_Numeric___;

@Override
PROCEDURE CRUD_Create___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Iso_Unit_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT VARCHAR2,
   action_ IN  VARCHAR2 )
IS
   present_factorx_ VARCHAR2(2000);
   rec_  Iso_Unit_Rec;
BEGIN
   Add_To_Rec_From_Attr___(attr_, rec_);
   present_factorx_ := Client_SYS.Get_Item_Value('PRESENT_FACTOR', attr_);
   IF (present_factorx_ IS NOT NULL) THEN
      IF ((INSTR(present_factorx_,',') > 0) AND (Is_Numeric___ (present_factorx_) = FALSE) ) THEN 
         present_factorx_ := REPLACE(present_factorx_,',','.');
         rec_.present_factor := present_factorx_;
         Add_To_Attr_From_Rec___(rec_, attr_);
      END IF;
      IF ((INSTR(present_factorx_,'.') > 0) AND (Is_Numeric___ (present_factorx_) = FALSE) ) THEN 
         present_factorx_ := REPLACE(present_factorx_,'.',',');
         rec_.present_factor := present_factorx_;
         Add_To_Attr_From_Rec___(rec_, attr_);
      END IF;
      IF (Is_Numeric___ (present_factorx_) = FALSE ) THEN 
         Error_SYS.Appl_General(lu_name_, 'INVFIELDFORMAT: Field Format is Invalid for Factor.'); 
      END IF;    
   END IF;
   super(etag_, key_, attr_, info_, action_);
END CRUD_Create___;

FUNCTION Get_Alternate_Uom_Search_Context_Defaults___ RETURN Alternate_Uom_Search_Context_Structure_Rec
IS
   alternate_uom_search_context_struct_ Alternate_Uom_Search_Context_Structure_Rec;
BEGIN
   alternate_uom_search_context_struct_.only_show_alternate := FALSE;
   RETURN alternate_uom_search_context_struct_;
END Get_Alternate_Uom_Search_Context_Defaults___;
