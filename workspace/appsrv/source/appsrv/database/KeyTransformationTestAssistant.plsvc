-----------------------------------------------------------------------------
--
--  Fragment:     KeyTransformationTestAssistant
--  Component:    APPSRV
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------

layer Core;

@Override
PROCEDURE CRUD_Create___(
   rec_ IN Transform_Test_Virtual_Rec )
IS
BEGIN
   super(rec_);
 Get_Keys___(rec_.source_lu_name,rec_.service_name,rec_.target_lu_name,rec_.objKey);
END CRUD_Create___;


PROCEDURE Get_Keys___ (
   source_lu_name_      IN VARCHAR2,
   service_name_      IN VARCHAR2,
   target_lu_name_      IN VARCHAR2,
   parent_obj_key_      IN VARCHAR2 )
IS
   rec_             Transform_Test_List_Virtual_Rec;  
   records_tab_     Utility_SYS.STRING_TABLE;
   target_lu_key_  VARCHAR2(300);
   keys_count_      NUMBER;
BEGIN
   
   DELETE FROM Object_Connection_Transformations_Handling_transform_test_list_virtual_vrt;
   target_lu_key_      :=Obj_Connect_Lu_Transform_API.Get_CS_Key_Columns(target_lu_name_);
   Utility_SYS.Tokenize(target_lu_key_ , ',', records_tab_, keys_count_);
   FOR i_ IN records_tab_.FIRST..records_tab_.LAST LOOP 
      rec_.parent_objkey      := parent_obj_key_;
      rec_.target_lu_key      := records_tab_(i_);
      rec_.target_lu_name     := target_lu_name_;
      rec_.source_lu_name     := source_lu_name_;
      rec_.service_name       := service_name_;
      rec_.objkey             := sys_guid();
                
      CRUD_Create___(rec_);
   END LOOP;
END Get_Keys___;

FUNCTION Get_Result_Text___ (
   source_key_ IN VARCHAR2 )RETURN VARCHAR2
IS
   value_    VARCHAR2(100);
   test_message_    VARCHAR2(200) := 'Test Successful';
   item_index_      NUMBER := 0;
   
   records_tab_     Utility_SYS.STRING_TABLE;
   keys_count_      NUMBER;
BEGIN
   IF (source_key_ IS NOT NULL)THEN
   Utility_SYS.Tokenize(source_key_ , '^', records_tab_, keys_count_); 
      FOR i_ IN records_tab_.FIRST..records_tab_.LAST LOOP 
         item_index_ := length(records_tab_(i_)) - 1;
         IF (item_index_ > 1) THEN
            value_ := substr(records_tab_(i_),(length(records_tab_(i_)) - item_index_ - 1));       
               IF((length(records_tab_(i_)) - item_index_ - 1)= 0 ) THEN
                  test_message_ := 'Test Successful';           
               END IF;
         END IF; 
      END LOOP;
   END IF;
   RETURN test_message_;  
END Get_Result_Text___;

FUNCTION Test_Data___(
   key_ IN Transform_Test_Virtual_Key,
   target_lu_name_      IN VARCHAR2,
   source_lu_name_      IN VARCHAR2,
   service_name_        IN VARCHAR2) RETURN VARCHAR2
IS
   error_message_                    VARCHAR2(300);
   source_key_                       VARCHAR2(2000);
   local_source_keys_                VARCHAR2(2000);
   translated_source_keys_           VARCHAR2(2000);
   source_keys_                      VARCHAR2(2000);
   test_value_                       VARCHAR2(300);
   boolean_translated_source_keys_   BOOLEAN := true;
   
   CURSOR get_test_details IS
      SELECT target_lu_key,target_test_data
      FROM Object_Connection_Transformations_Handling_transform_test_list_virtual_vrt;
BEGIN 
   
   FOR rec IN get_test_details LOOP
      source_keys_ := CONCAT(source_keys_,CONCAT(CONCAT(rec.target_lu_key ,'='),CONCAT(rec.target_test_data,'^')));
   END LOOP;

   Obj_Connect_Lu_Transform_API.Test_Transformation(error_message_,source_key_,translated_source_keys_,target_lu_name_,source_keys_,service_name_,source_lu_name_);
   
   IF (boolean_translated_source_keys_ = true)THEN
      local_source_keys_ := translated_source_keys_;
   ELSE
      local_source_keys_ := source_key_;
   END IF;
   IF(local_source_keys_ IS NOT NULL AND error_message_ IS  NULL )THEN
      test_value_:=  Get_Result_Text___(source_key_);
   ELSE
      test_value_:=  'Test Failed'; 
   END IF;   
   RETURN test_value_;
END Test_Data___;

FUNCTION Source_Key_Data___ (
   key_ IN Transform_Test_Virtual_Key,
   target_lu_name_      IN VARCHAR2,
   source_lu_name_      IN VARCHAR2,
   service_name_        IN VARCHAR2) RETURN VARCHAR2
IS
   error_message_               VARCHAR2(300);
   source_key_                  VARCHAR2(2000);
   translated_source_keys_      VARCHAR2(2000);
   source_keys_                 VARCHAR2(2000);
  
   CURSOR get_test_details IS
      SELECT target_lu_key,target_test_data
      FROM Object_Connection_Transformations_Handling_transform_test_list_virtual_vrt;
BEGIN 
   
   FOR rec IN get_test_details LOOP
      source_keys_ := CONCAT(source_keys_,CONCAT(CONCAT(rec.target_lu_key ,'='),CONCAT(rec.target_test_data,'^')));
   END LOOP;
   Obj_Connect_Lu_Transform_API.Test_Transformation(error_message_,source_key_,translated_source_keys_,target_lu_name_,source_keys_,service_name_,source_lu_name_);  
   RETURN translated_source_keys_;
END Source_Key_Data___;

FUNCTION Show_Error_Data___ (
   key_ IN Transform_Test_Virtual_Key,
   target_lu_name_      IN VARCHAR2,
   source_lu_name_      IN VARCHAR2,
   service_name_        IN VARCHAR2) RETURN VARCHAR2
IS
   error_message_               VARCHAR2(300);
   source_key_                  VARCHAR2(2000);
   translated_source_keys_      VARCHAR2(2000);
   source_keys_                 VARCHAR2(2000);
  
   CURSOR get_test_details IS
      SELECT target_lu_key,target_test_data
      FROM Object_Connection_Transformations_Handling_transform_test_list_virtual_vrt;
BEGIN 
   
   FOR rec IN get_test_details LOOP
      source_keys_ := CONCAT(source_keys_,CONCAT(CONCAT(rec.target_lu_key ,'='),CONCAT(rec.target_test_data,'^')));
   END LOOP;
   Obj_Connect_Lu_Transform_API.Test_Transformation(error_message_,source_key_,translated_source_keys_,target_lu_name_,source_keys_,service_name_,source_lu_name_);  
   RETURN error_message_;
END Show_Error_Data___;

