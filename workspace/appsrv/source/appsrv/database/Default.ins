-----------------------------------------------------------------------------
--
--  File:     Default.ins
--
--  Purpose:  Default insert-statements for the module
--
--  Date    Sign    History
--  ------  ----    -----------------------------------------------------------
--  210611  MDAHSE  Add settings to control where media items are stored (FSS or Database).
--  171106  MDAHSE  Add settings to System Parameters for the attachment panel map.
--  100315  UTSWLK  Modified the default data for unit type density.
--  100420  JeLise  Removed set unit_type to 'TEMPERAT' for 'Fahr'.
--  100217  ASWI    Activated new non iso language code 'bp' (Bug#87737).
------------------------------- Best Price ----------------------------------
--  090713  NaLrlk  Modified the default data for unit type length and temperature.
--  090415  ChAlLK  Added object property 'SHOW_ALL_SUMMARY' for LU - TechnicalClass.
--  070921  ASWI    Activated language code pl.
--  020410  DOKU    Activated all languages.
--  020215  JOOL    Remarked activating any languages
--  990511  JoEd    Added call to generate the default calendar.
--  990129  JoEd    Removed recreation of invalid calendars. This file is run
--                  before all other modules have been installed.
--                  Therefor the method won't update the tables that uses a calendar
--                  in a correct way.
--                  It's better to do that manually from within the application.
--  990105  JoEd    Added unit_type values.
--  981222  JoEd    Added commits after each PLSQL block.
--  981217  JoEd    Added call to WorkTimeCalendar to recreate all invalid calendars.
--  981216  JoEd    Renamed from INSDEF.APY
--  971127  JaPa    Default data creation statements from DEFINS.CRE
--                  moved to this file.
--  970901  JaPa    Added attribute definition for IsoUnit.
--  970422  JaPa    Created. Runs as the last APY-file.
-----------------------------------------------------------------------------

SET SERVEROUTPUT ON

DEFINE FALSE = 0

-----------------------------------------------------------------------------

-- PROMPT Activating some language codes

BEGIN
   Iso_Language_API.Activate_Code('en');
   Iso_Language_API.Activate_Code('da');
   Iso_Language_API.Activate_Code('fi');
   Iso_Language_API.Activate_Code('no');
   Iso_Language_API.Activate_Code('sv');
   Iso_Language_API.Activate_Code('de');
   Iso_Language_API.Activate_Code('nl');
   Iso_Language_API.Activate_Code('cf');
   Iso_Language_API.Activate_Code('pl');
   Iso_Language_API.Activate_Code('bp');
END;
/

COMMIT;

PROMPT Setting up attribute limitations

BEGIN
   Attribute_Definition_API.Set_Length('IsoUnit', 'UNIT_CODE', '*', 10);
END;
/

COMMIT;

PROMPT Seting up object properties

BEGIN
   IF (Object_Property_API.Get_Value('UserPrinter', '*', 'USER_MAND') IS NULL) THEN
      Object_Property_API.Set_Value('UserPrinter', '*', 'USER_MAND', 'FALSE');
   END IF;

   IF (Object_Property_API.Get_Value('TechnicalClass', 'SUMMARY', 'SHOW_ALL_SUMMARY') IS NULL) THEN
      Object_Property_API.Set_Value('TechnicalClass', 'SUMMARY', 'SHOW_ALL_SUMMARY', 'YES');
   END IF;
END;
/

COMMIT;

PROMPT Deleting obsolete translations

DELETE FROM language_sys_tab
WHERE  module = 'FNDSER'
AND upper(path) LIKE 'ISO%'
/

COMMIT;

PROMPT Create default domain (if not exists)

INSERT INTO application_domain_tab
 ( DOMAIN_ID, ROWVERSION, DESCRIPTION, DEF_DOMAIN )
   SELECT 'DEFAULT', 1, 'Default domain', 'TRUE'
   FROM dual
   WHERE NOT EXISTS ( SELECT NULL
                      FROM application_domain_tab
                      WHERE def_domain = 'TRUE'
                      OR domain_id  = 'DEFAULT' )
/

COMMIT;

PROMPT Setting unit types...

BEGIN
   Iso_Unit_API.Set_Unit_Type('kg',   Iso_Unit_Type_API.Decode('WEIGHT'));
   Iso_Unit_API.Set_Unit_Type('PCS',  Iso_Unit_Type_API.Decode('DISCRETE'));
   Iso_Unit_API.Set_Unit_Type('m3',   Iso_Unit_Type_API.Decode('VOLUME'));
   Iso_Unit_API.Set_Unit_Type('m',    Iso_Unit_Type_API.Decode('LENGTH'));
   Iso_Unit_API.Set_Unit_Type('Cel',  Iso_Unit_Type_API.Decode('TEMPERAT'));
   Iso_Unit_API.Set_Unit_Type('kg/m3',Iso_Unit_Type_API.Decode('DENSITY'));
END;
/

COMMIT;

PROMPT Generate the default calendar * (as background job)...

BEGIN
   IF (Work_Time_Calendar_API.Get_Objstate('*') = 'NotGenerated') THEN
      Work_Time_Calendar_API.Set_Calendar_Generated('*', &FALSE);
   END IF;
END;
/

COMMIT;

PROMPT Adding settings for Attachments / Map Positions (Esri version)

DECLARE

   PROCEDURE Add_Property (
      lu_     IN VARCHAR2,
      key_    IN VARCHAR2,
      name_   IN VARCHAR2,
      value_  IN VARCHAR2,
      method_ IN VARCHAR2)
   IS
   BEGIN
      IF NOT Object_Property_API.Exists (lu_, key_, name_) THEN
         Object_Property_API.Set_Value(lu_, key_, name_, value_, 'FALSE', NULL);
         Object_Property_API.Set_Value(lu_, key_, name_, value_, 'TRUE',  method_);
      END IF;

   END Add_Property;

BEGIN
   Add_Property ('MapPosition', '*', 'ESRI_BASEMAPS',     'Use default', 'Map_Position_Util_API.Validate_Parameter');
   Add_Property ('MapPosition', '*', 'ESRI_HTML_PAGE',    'Use default', 'Map_Position_Util_API.Validate_Parameter');
   Add_Property ('MapPosition', '*', 'ESRI_PAID_ACCOUNT', 'No', 'Map_Position_Util_API.Validate_Parameter');
END;
/

DECLARE
   lu_    VARCHAR2 (30) := 'MediaItem';
   key_   VARCHAR2 (30) := 'ITEM_ID';
   name_  VARCHAR2 (30) := 'REPOSITORY';
   value_ VARCHAR2 (30) := 'DATABASE';
BEGIN
   IF NOT Object_Property_API.Exists (lu_, key_, name_) THEN
      Object_Property_API.Set_Value(lu_, key_, name_, value_, 'TRUE',  'Media_Item_Util_API.Validate_Parameter');
   END IF;
END;
/

COMMIT;

-----------------------------------------------------------------------------
-- END OF FILE
-----------------------------------------------------------------------------
