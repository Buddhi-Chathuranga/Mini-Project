-----------------------------------------------------------------------------
--
--  Fragment:     MediaLibraryAttachment
--  Component:    APPSRV
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  200810  MAABSE  TEAURENAFW-3248, Moved from MediaLibraryAttachmentHandling
-----------------------------------------------------------------------------

layer Core;


FUNCTION Media_Library_Result_Set___(
   lu_name_ IN VARCHAR2,
   key_ref_ IN VARCHAR2 ) RETURN Mlib_Result_Struct_Arr
IS
   count_            NUMBER := 1;
   record_           Mlib_Result_Struct_Rec;
   ret_              Mlib_Result_Struct_Arr;

   source_ref_list_      VARCHAR2(2000);
   source_ref_           VARCHAR2(2000) := key_ref_;
   ptr_                  NUMBER;
   source_lu_            VARCHAR2(2000) := lu_name_;
   read_only_            VARCHAR2(30);
   trans_source_lu_name_ VARCHAR2(2000);

   CURSOR get_record_set(luname_ IN VARCHAR2, keyref_ IN VARCHAR2) IS
      SELECT l.lu_name, l.key_ref, l.locked_db , t.library_id, t.library_item_id, t.item_id , t.default_media, l.connected_obj_ref1, l.connected_obj_ref2
      FROM MEDIA_LIBRARY_ITEM t, MEDIA_LIBRARY l
      WHERE t.library_id = l.library_id AND l.key_ref = keyref_ AND l.lu_name = luname_
      ORDER BY t.default_media DESC;
BEGIN
   ret_ := Mlib_Result_Struct_Arr();

   FOR rec_ IN get_record_set(lu_name_, key_ref_) LOOP
      Build_Media_Item_Record___(record_,
       rec_.lu_name,
       rec_.key_ref,
       rec_.library_id,
       rec_.library_item_id,
       rec_.item_id,
       rec_.default_media,
       rec_.locked_db);

      ret_.extend(1);
      ret_(count_) := record_;
      count_ := count_ + 1;
   END LOOP;

   source_ref_list_ := Obj_Connect_LU_Transform_API.Get_Transformed_Lu_Key_List(lu_name_, key_ref_, 'MediaLibrary');
   WHILE Obj_Connect_Lu_Transform_API.Get_Next_From_Key_List(source_lu_, trans_source_lu_name_, source_ref_, read_only_, ptr_, source_ref_list_) = 'TRUE' LOOP
      FOR rec_ IN get_record_set(source_lu_, source_ref_) LOOP
         Build_Media_Item_Record___(record_,
          rec_.lu_name,
          rec_.key_ref,
          rec_.library_id,
          rec_.library_item_id,
          rec_.item_id,
          rec_.default_media,
          rec_.locked_db);

         ret_.extend(1);
         ret_(count_) := record_;
         count_ := count_ + 1;
      END LOOP;
   END LOOP;

  RETURN ret_;
END Media_Library_Result_Set___;

PROCEDURE  Build_Media_Item_Record___ (
   record_           IN OUT Mlib_Result_Struct_Rec,
   lu_name_          IN VARCHAR2,
   key_ref_          IN VARCHAR2,
   library_id_       IN VARCHAR2,
   library_item_id_  IN NUMBER,
   item_id_          IN NUMBER,
   default_media_    IN VARCHAR2,
   locked_db_        IN VARCHAR2 )
IS
   media_item_rec_   Media_Item_API.Public_rec;

BEGIN
   record_.lu_name         := lu_name_;
   record_.key_ref         := key_ref_;
   record_.library_id      := library_id_;
   record_.library_item_id := library_item_id_;
   record_.item_id         := item_id_;
   record_.default_media   := default_media_;
   record_.locked_db       := locked_db_;

   media_item_rec_         := Media_Item_API.Get(record_.item_id );
   record_.name            := media_item_rec_.name;
   record_.description     := media_item_rec_.description;
   record_.media_file      := media_item_rec_.media_file;
   record_.media_item_type := media_item_rec_.media_item_type;
   record_.private_media_item := media_item_rec_.private_media_item;
   record_.file_ext        := Get_Media_File_Extension___(item_id_);

   record_.media_thumb     := Media_Item_API.Get_Media_Thumb(record_.item_id );
   record_.source := lu_name_;

   IF record_.source IS NOT NULL THEN
      record_.source := Language_SYS.translate_lu_prompt_(record_.source);
   END IF;
END Build_Media_Item_Record___;

FUNCTION Get_File_Metadata___(
   item_id_ IN NUMBER ) RETURN File_Metadata_Rec
IS
   file_type_           VARCHAR2(100);
   item_type_           VARCHAR2(100);
   count_               NUMBER := 1;
   record_              File_Metadata_Rec;
BEGIN

   item_type_ := Media_Item_API.Get_Media_Item_Type_Db(item_id_);

   IF item_type_ = 'IMAGE' THEN
      file_type_ := 'PNG';
   ELSIF item_type_ = 'AUDIO' THEN
      file_type_ := 'MP3';
   ELSIF item_type_ = 'VIDEO' THEN
      file_type_ := 'WMV';
   ELSIF item_type_ = 'TEXT' THEN
      file_type_ := 'txt';
   END IF;

   record_.page_count      := count_;
   record_.extension       := file_type_;
   record_.item_type       := item_type_;

   RETURN record_;
END Get_File_Metadata___;

FUNCTION Get_Media_File_Extension___(
   item_id_ IN NUMBER) RETURN VARCHAR2
IS
   filename_            Media_Item_TAB.media_file%TYPE;
   extension_           VARCHAR2(200);
   file_meta_rec_       File_Metadata_Rec;
BEGIN
   filename_  := Media_Item_API.Get_Media_File(item_id_);

   IF filename_ IS NOT NULL AND INSTR(filename_, '.', -1) > 0 THEN
      extension_ := SUBSTR(filename_, INSTR(filename_, '.', -1) + 1);
   END IF;
   IF extension_ IS NULL THEN
      file_meta_rec_ := Get_File_Metadata___(item_id_);
      extension_ := file_meta_rec_.extension;
   END IF;
   RETURN UPPER(extension_);
END Get_Media_File_Extension___;
