---------------------------------------------------------------------------------------------
--  Module : APPSRV
--
--  Purpose: Upgrade database objects for IFS/Application Services
--           from version 5.0.0 to 21.1.0
--
--  File   : 2110.upg
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  ------------------------------------------------------------------------
--  191129   HIRALK  Created.
--  200326   tajalk  AM2020R1-107 Merged CDB files in to UPG
--  200923   puvelk  AM2020R1-6159 Merged CDB files in to UPG
--  201120   lasslk  AM2020R1-6948 Modified file name to reflect new version name IFS Cloud 21.1.0
--  201222   cleklk  AM2020R1-7190, Modied MAP_POSITION_TAB
--  ------   ------  ------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SET SERVEROUTPUT ON
EXEC Database_SYS.Log_Detail_Time_Stamp('APPSRV','2110.upg','Timestamp_1');
PROMPT START upgrading WITH 2110.upg

---------------------------------------------------------------------------------------------
------------------------------ Instructions for upg files -----------------------------------
---------------------------------------------------------------------------------------------
--
--  Main section should contain all upgrade operations.
--  Next section should contain removal of obsolete objects (any removal of data inside upg is prohibited!).
--  Removal of backup tables and obsolete columns should be added to <component>Cl.sql script!
--
--  If possible, everything regarding one table should be placed in one section.
--  If this is not possible, a proper comment about the reason should be added.
--
--  Each section should be started with a "-----" line and a empty line.
--  This section should then start with a line like: "-- ***** Example_Tab Start *****"
--  and end with a line like:                       "-- ***** Example_Tab End *****"
--
--  Don't forget UPPER/lower case !
--
--  Every part inside the section should start with a "PROMPT" line explaining what is done by the block.
--
--  If the PL/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.
--
--  Remember ordinary coding standard rules !
--
--  Don't drop any Table/Column !
--
--  Don't forget performance when updating large table !
--
--  No unnecessary blank lines or comments !
--
--  If possible, use pure SQL commands
--
--  If possible, try to group several updates together in one statement.
--
--  Timestamps will be added automatically at the end of the project.
--
--  For more information refer to the "Upgrade Script Standards" and the "Performance" technical documents.
--
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES -----------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
--------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ------------------
---------------------------------------------------------------------------------------------

-- ***** ALTERNATE_UNIT_OF_MEASURE_TAB Start *****

EXEC Database_SYS.Log_Detail_Time_Stamp('APPSRV','2110.upg','Timestamp_2');
PROMPT Creating TABLE ALTERNATE_UNIT_OF_MEASURE_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'ALTERNATE_UNIT_OF_MEASURE_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'UNIT_CODE', 'VARCHAR2(30)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'UOM_CLASSIFICATION', 'VARCHAR2(30)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ALT_UOM_CODE', 'VARCHAR2(30)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

EXEC Database_SYS.Log_Detail_Time_Stamp('APPSRV','2110.upg','Timestamp_3');
PROMPT Adding PK INDEX TO THE TABLE ALTERNATE_UNIT_OF_MEASURE_TAB.
DECLARE
   index_name_ VARCHAR2(30) := 'ALTERNATE_UNIT_OF_MEASURE_PK';
   table_name_ VARCHAR2(30) := 'ALTERNATE_UNIT_OF_MEASURE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'UNIT_CODE');
   Database_SYS.Set_Table_Column(columns_, 'UOM_CLASSIFICATION');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

EXEC Database_SYS.Log_Detail_Time_Stamp('APPSRV','2110.upg','Timestamp_4');
PROMPT Adding RK INDEX TO THE TABLE ALTERNATE_UNIT_OF_MEASURE_TAB.
DECLARE
   index_name_ VARCHAR2(30) := 'ALTERNATE_UNIT_OF_MEASURE_RK';
   table_name_ VARCHAR2(30) := 'ALTERNATE_UNIT_OF_MEASURE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/
-- ***** ALTERNATE_UNIT_OF_MEASURE_TAB End *****

-- ***** ISO_UNIT_TAB Start *****
EXEC Database_SYS.Log_Detail_Time_Stamp('APPSRV','2110.upg','Timestamp_5');
PROMPT Modifying conversion factor for 'm/h' to 'm/s'.
DECLARE
   dummy_ NUMBER;
   CURSOR get_iso_unit_rec IS
      SELECT 1
        FROM iso_unit_tab
       WHERE unit_code = 'm/h'
         AND base_unit = 'm/s';
BEGIN
   OPEN get_iso_unit_rec;
   FETCH get_iso_unit_rec INTO dummy_;
   IF (get_iso_unit_rec%FOUND) THEN
      UPDATE ISO_UNIT_TAB
         SET multi_factor = 1, div_factor = 36, ten_power = -2
      WHERE unit_code = 'm/h'
         AND base_unit = 'm/s';
   END IF;
   CLOSE get_iso_unit_rec;
END;
/
-- ***** ISO_UNIT_TAB End *****

-- ***** TECHNICAL_SPECIFICATION_TAB Start *****
EXEC Database_SYS.Log_Detail_Time_Stamp('APPSRV','2110.upg','Timestamp_6');
PROMPT Removing dangling records in TECHNICAL_SPECIFICATION_TAB...
DECLARE
BEGIN
   DELETE
   FROM  technical_specification_tab d
   WHERE d.technical_spec_no NOT IN (SELECT u.technical_spec_no
                                     FROM   technical_object_reference_tab u);                             
END;
/
-- ***** TECHNICAL_SPECIFICATION_TAB End *****

-- ***** ISO_COUNTRY_TAB Start *****
EXEC Installation_SYS.Log_Detail_Time_Stamp('APPSRV','2110.upg','Timestamp_7');
PROMPT Creating ISO_COUNTRY_TAB
DECLARE
   iso_contry_table_name_ VARCHAR2(30) := 'ISO_COUNTRY_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN 
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N','$DEFAULT_NULL$');
   Database_SYS.Create_Or_Replace_Table(iso_contry_table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/
EXEC Database_SYS.Log_Detail_Time_Stamp('APPSRV','2110.upg','Timestamp_8');
PROMPT Modified COUNTRY ID for SERBIA (SRB)
DECLARE
   CURSOR record_exists IS
      SELECT 1
        FROM Iso_Country_Tab
       WHERE COUNTRY_CODE = 'RS'
       AND COUNTRY_CODE3 = 'SRB'
       AND COUNTRY_ID = 98;
   dummy_ NUMBER;
BEGIN
   OPEN record_exists;
   FETCH record_exists INTO dummy_;
   IF (record_exists%FOUND) THEN
      UPDATE ISO_COUNTRY_TAB
         SET COUNTRY_ID = 688
         WHERE COUNTRY_CODE = 'RS';
      COMMIT;
   END IF;
   CLOSE record_exists;
END;
/
-- ***** ISO_COUNTRY_TAB End *****

-- ***** ISO_CURRENCY_TAB Start *****
EXEC Installation_SYS.Log_Detail_Time_Stamp('APPSRV','2110.upg','Timestamp_9');
PROMPT Creating ISO_CURRENCY_TAB
DECLARE
   iso_currency_table_name_ VARCHAR2(30) := 'ISO_CURRENCY_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN 
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N','$DEFAULT_NULL$');
   Database_SYS.Create_Or_Replace_Table(iso_currency_table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/
-- ***** ISO_CURRENCY_TAB End *****

-- ***** ALTERNATE_COUNTRY_CODE_TAB Start *****
EXEC Database_SYS.Log_Detail_Time_Stamp('APPSRV','2110.upg','Timestamp_10');
PROMPT Creating TABLE ALTERNATE_COUNTRY_CODE_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'ALTERNATE_COUNTRY_CODE_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COUNTRY_CODE', 'VARCHAR2(2)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'COUNTRY_CLASS', 'VARCHAR2(30)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ALT_COUNTRY_ID', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

-- ***** MAP_POSITION_TAB Start *****
EXEC Database_SYS.Log_Detail_Time_Stamp('APPSRV','2110.upg','Timestamp_11');
PROMPT Adding new column GEO_CODED to MAP_POSITION_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'MAP_POSITION_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'GEOCODED', 'VARCHAR2(20)', 'Y');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);	
END;
/
-- ***** MAP_POSITION_TAB End *****

EXEC Database_SYS.Log_Detail_Time_Stamp('APPSRV','2110.upg','Timestamp_12');
PROMPT Adding PK INDEX TO THE TABLE ALTERNATE_COUNTRY_CODE_TAB.
DECLARE
   index_name_ VARCHAR2(30) := 'ALTERNATE_COUNTRY_CODE_PK';
   table_name_ VARCHAR2(30) := 'ALTERNATE_COUNTRY_CODE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COUNTRY_CODE');
   Database_SYS.Set_Table_Column(columns_, 'COUNTRY_CLASS');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/
EXEC Database_SYS.Log_Detail_Time_Stamp('APPSRV','2110.upg','Timestamp_13');
PROMPT Adding RK INDEX TO THE TABLE ALTERNATE_COUNTRY_CODE_TAB.
DECLARE
   index_name_ VARCHAR2(30) := 'ALTERNATE_COUNTRY_CODE_RK';
   table_name_ VARCHAR2(30) := 'ALTERNATE_COUNTRY_CODE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/
-- ***** ALTERNATE_COUNTRY_CODE_TAB End *****
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------

-- ***** WORK_TIME_CAL_DATA_TAB Start *****
EXEC Database_SYS.Log_Detail_Time_Stamp('APPSRV','2110.upg','Timestamp_14');
PROMPT droping tempory tables...
BEGIN
   IF (Database_SYS.Table_Exist('WORK_TIME_CAL_DATA_TAB')) THEN
      Database_SYS.Remove_Table('WORK_TIME_CAL_DATA_TAB',TRUE);
   END IF ;
END;
/
-- ***** WORK_TIME_CAL_DATA_TAB End *****

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES/COLUMNS -----------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------

-- ***** WORK_TIME_COUNTER_DESC_TST Start *****
EXEC Database_SYS.Log_Detail_Time_Stamp('APPSRV','2110.upg','Timestamp_15');
PROMPT Remove temporary table WORK_TIME_COUNTER_DESC_TST
BEGIN
   Database_SYS.Remove_Package('WORK_TIME_COUNTER_DESC_TST',TRUE);
END;
/
-- ***** WORK_TIME_COUNTER_DESC_TST End *****

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------

-- ***** WORK_TIME_CAL_DATA Start *****
EXEC Database_SYS.Log_Detail_Time_Stamp('APPSRV','2110.upg','Timestamp_16');
PROMPT droping WORK_TIME_CAL_DATA view
BEGIN
   IF (Database_SYS.View_Exist('WORK_TIME_CAL_DATA')) THEN
      Database_SYS.Remove_View('WORK_TIME_CAL_DATA',TRUE);
   END IF ;
END;
/
-- ***** WORK_TIME_CAL_DATA End *****

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE INDEXES/SEQUENCES ------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

PROMPT Upgrade statements IN FILE 2110.upg ends here.
EXEC Database_SYS.Log_Detail_Time_Stamp('APPSRV','2110.upg','Done');
SET SERVEROUTPUT OFF

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
