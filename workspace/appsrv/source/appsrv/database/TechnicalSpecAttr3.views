-----------------------------------------------------------------------------
--
--  Logical unit: TechnicalSpecAttr3
--  Component:    APPSRV
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  -------------------------- APPS 9 ---------------------------------------
--  131202  paskno  Hooks: refactoring and splitting.
--  211014  JIHALK  AM21R2-3028, RLS implimented.
-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

COLUMN Attrib_Number IS
   Flags      = 'A----'
   Datatype   = 'NUMBER(22)'
   Prompt     = 'Attrib Number';

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------


-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

@Overtake Base
@DbViewRowLevelSecurity NotRequired
VIEW Technical_Spec_Attr3 IS
   Prompt = 'Technical Spec Attr3'
   Table = 'TECHNICAL_SPECIFICATION_TAB'
   Refbase = 'VIEW'
SELECT a.technical_spec_no            technical_spec_no,
       f.lu_name                      lu_name,
       f.key_ref                      key_ref,
       f.key_value                    key_value,
       b.std_sq                       std_sq,
       b.technical_class              technical_class,
       b.group_order                  group_order,
       b.group_name                   group_name,
       b.group_desc                   group_desc,
       c.spec_order                   spec_order,
       d.attrib_type                  attrib_type,
       a.attribute                    attribute,
       d.attrib_desc                  attrib_desc,
       nvl(a.alt_value_no, a.value_no) value_no,
       a.value_text                   value_text,
       nvl(to_char(nvl(a.alt_value_no, a.value_no)), a.value_text) value,
       nvl(a.alt_unit, e.unit)        unit,
       nvl(to_char(a.value_no), a.value_text) base_value,
       e.unit                         base_unit,
       a.rowid                        objid,
       TO_CHAR(a.rowversion,'YYYYMMDDHH24MISS') objversion,
       a.rowkey                       objkey
FROM technical_specification_tab a, technical_object_reference_tab f, technical_attrib_tab e, technical_attrib_std_tab d, technical_group_spec_tab c, technical_group_tab b
WHERE    d.attribute = a.attribute
AND a.attribute = c.attribute
AND a.technical_class = b.technical_class
AND b.technical_class = c.technical_class
AND b.technical_class = e.technical_class
AND b.group_name = c.group_name
AND a.attribute = c.attribute
AND d.attribute = e.attribute
AND a.technical_spec_no = f.technical_spec_no
AND a.technical_class = f.technical_class;

@DbViewRowLevelSecurity NotRequired
VIEW Technical_Spec_Attr4 IS
   Prompt = 'Technical Spec Attr4'
   Technical_Spec_No.Datatype = 'NUMBER(10)'
   Lu_Name.Flags = 'A---L'
   Lu_Name.Datatype = 'STRING'
   Lu_Name.Prompt = 'Lu name'
   Key_Ref.Flags = 'A---L'
   Key_Ref.Datatype = 'STRING'
   Key_Ref.Prompt = 'Key ref'
   Attribute.Flags = 'A---L'
   Attribute.Datatype = 'STRING'
   Attrib_Desc.Flags = 'A---L'
   Attrib_Desc.Datatype = 'STRING'
   Attrib_Desc.Prompt = 'Attrib desc'
   Value_No.Datatype = 'NUMBER(20)'
   Value.Flags = 'A-IU-'
SELECT distinct a.technical_spec_no   technical_spec_no,
       b.lu_name                      lu_name,
       b.key_ref                      key_ref,
       a.technical_class              technical_class,
       a.attrib_number                attrib_number,
       d.attrib_type                  attrib_type,
       a.attribute                    attribute,
       d.attrib_desc                  attrib_desc,
       nvl(a.alt_value_no, a.value_no) value_no,
       a.value_text                   value_text,
       nvl(to_char(nvl(a.alt_value_no, a.value_no)), a.value_text) value,
       nvl(a.alt_unit, e.unit)        unit,
       a.rowid                        objid,
       TO_CHAR(a.rowversion,'YYYYMMDDHH24MISS') objversion,
       a.rowkey                      objkey
FROM technical_specification_tab a, technical_attrib_tab e, technical_attrib_std_tab d, technical_object_reference_tab b
WHERE a.attribute = d.attribute
AND d.attribute = e.attribute
AND a.technical_class = e.technical_class
AND a.technical_spec_no = b.technical_spec_no;

