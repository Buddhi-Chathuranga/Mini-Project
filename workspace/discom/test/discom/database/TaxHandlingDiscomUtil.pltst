-----------------------------------------------------------------------------
--
--  Logical unit: TaxHandlingDiscomUtil
--  Component:    DISCOM
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  220802  MaEelk  SCDEV-10876, Added Unit Testing for Allow_Edit_Tax_Information.
-----------------------------------------------------------------------------

layer Core;


-------------------- LU SPECIFIC IMPLEMENTATION METHODS ---------------------


-------------------- LU SPECIFIC PUBLIC METHODS -----------------------------

UNITTEST "Allow_Edit_Tax_Information should return TRUE or FALSE when tax information in Tax Document Line is allowed to be changed or not" FOR
   FUNCTION Allow_Edit_Tax_Information (
      company_         IN     VARCHAR2,
      tax_document_no_ IN     NUMBER,
      line_no_         IN     NUMBER ) RETURN VARCHAR2;
USING
   external_tax_cal_method_db_ VARCHAR2(20);
   tax_document_rec_           IFSAPP.Tax_Document_API.Public_Rec;
   tax_items_exist_            VARCHAR2(5);

   --Insert your mock directives and mock return variables here
   @MockPackage Company_Tax_Control_API
   FUNCTION Get_External_Tax_Cal_Method_Db (
      company_ IN     VARCHAR2 )  RETURN  IFSAPP.COMPANY_TAX_CONTROL_TAB.EXTERNAL_TAX_CAL_METHOD%TYPE
   IS
   BEGIN
      RETURN external_tax_cal_method_db_;
   END Get_External_Tax_Cal_Method_Db;

   @MockPackage Tax_Document_API
   FUNCTION Get (
      company_         IN     VARCHAR2,
      tax_document_no_ IN     NUMBER )  RETURN  IFSAPP.Tax_Document_API.PUBLIC_REC
   IS
   BEGIN
      RETURN tax_document_rec_;
   END Get;

   @MockPackage Source_Tax_Item_API
   FUNCTION Tax_Items_Exist (
      company_         IN     VARCHAR2,
      source_ref_type_ IN     VARCHAR2,
      source_ref1_     IN     VARCHAR2,
      source_ref2_     IN     VARCHAR2,
      source_ref3_     IN     VARCHAR2,
      source_ref4_     IN     VARCHAR2,
      source_ref5_     IN     VARCHAR2 )  RETURN  VARCHAR2
   IS
   BEGIN
      RETURN tax_items_exist_;
   END Tax_Items_Exist;

IS
   --Insert your test variables here
   return_              VARCHAR2(2000);
   expected_            VARCHAR2(2000);
   tax_document_rec1_   IFSAPP.Tax_Document_API.Public_Rec;
   tax_document_rec2_   IFSAPP.Tax_Document_API.Public_Rec;
   tax_document_rec3_   IFSAPP.Tax_Document_API.Public_Rec;
   tax_document_rec4_   IFSAPP.Tax_Document_API.Public_Rec;

BEGIN
   tax_document_rec1_.direction := 'OUTBOUND';
   tax_document_rec1_.rowstate := 'Preliminary';

   tax_document_rec2_.direction := 'OUTBOUND';
   tax_document_rec2_.rowstate := 'Preliminary';

   tax_document_rec3_.direction := 'OUTBOUND';
   tax_document_rec3_.rowstate := 'Posted';

   tax_document_rec4_.direction := 'INBOUND';
   tax_document_rec4_.rowstate := 'Preliminary';

   FOR
   | expected_ | company_ | tax_document_no_ | line_no_ | tax_document_rec_       | tax_items_exist_ | external_tax_cal_method_db_ |
   | 'FALSE'   | 'COM1'   | 1                | 1        |  tax_document_rec1_     | 'TRUE'           | 'NOT_USED'                  | -- When Tax Items exist, do not allow
   | 'TRUE'    | 'COM1'   | 1                | 2        |  tax_document_rec1_     | 'FALSE'          | 'NOT_USED'                  | -- When Tax Items do not exist, allow
   | 'FALSE'   | 'COM2'   | 2                | 1        |  tax_document_rec2_     | 'FALSE'          | 'AVALARA_TAX_BRAZIL'        | -- When external_tax_cal_method_db_ is AVALARA_TAX_BRAZIL, do not allow
   | 'FALSE'   | 'COM3'   | 3                | 1        |  tax_document_rec3_     | 'FALSE'          | 'NOT_USED'                  | -- When rowstes is not preliminary, do not allow.
   | 'FALSE'   | 'COM4'   | 4                | 1        |  tax_document_rec3_     | 'FALSE'          | 'NOT_USED'                  | -- When rowstes is not OUTBOUND, do not allow.

   LOOP
   --Insert your test code here
   return_ := Allow_Edit_Tax_Information(company_, tax_document_no_, line_no_);
   --Insert your assertions here
   ASSERT return_ = expected_ MESSAGE 'Expected '||expected_||' but returned '||return_;
END LOOP;
END UNITTEST;




-------------------- METHODS FOR TAX LINE ASSISTANT IN AURENA ---------------


