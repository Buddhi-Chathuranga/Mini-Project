-----------------------------------------------------------------------------
--
--  Logical unit: DeliveryRouteHandling
--  Component:    DISCOM
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  200305  PamPlk  SCXTEND-3720, Made an override to CRUD_Default_Copy___ method.
--  181122  Fgusse  SCUXXW4-9247, created for the conversion of frmDeliveryRoute
-----------------------------------------------------------------------------

layer Core;
FUNCTION Get_Week_Day___(
   exception_date_ IN DATE )  RETURN VARCHAR2
IS
BEGIN
   RETURN Work_Time_Calendar_API.Get_Week_Day(exception_date_); 
END Get_Week_Day___;

PROCEDURE Delete_Delivery_Route___ (
	route_id_ IN VARCHAR2)
IS
   key_        Delivery_Route_Key;
   info_       VARCHAR2(2000);
   objid_      VARCHAR2(20);
   objversion_ VARCHAR2(100);
BEGIN
   key_.route_id := route_id_;
   Get_Objid_Objversion___ (objid_, objversion_, key_);
   Delivery_Route_API.Remove__(info_, objid_, objversion_, 'DO');
END Delete_Delivery_Route___;

FUNCTION Get_Delivery_Route_Details___(
   route_id_  IN VARCHAR2,
   route_day_ IN VARCHAR2,
   ship_time_ IN DATE )  RETURN Delivery_Route_Details_Structure_Rec
IS
   rec_ Delivery_Route_Details_Structure_Rec;
BEGIN
   rec_.order_stop_days := Delivery_Route_Schedule_API.Get_Order_Stop_Days(route_id_, route_day_, ship_time_);
   rec_.order_stop_time := Delivery_Route_Schedule_API.Get_Order_Stop_Time(route_id_, route_day_, ship_time_);
   RETURN rec_;
END Get_Delivery_Route_Details___;


FUNCTION Get_Deliv_Route_Sched_Exist___(
   route_id_ IN VARCHAR2 )  RETURN BOOLEAN
IS
BEGIN
   RETURN Delivery_Route_Schedule_API.Check_Exist(route_id_);
END Get_Deliv_Route_Sched_Exist___;


FUNCTION Is_All_Route_Schedules_Selected___(
   route_id_  IN VARCHAR2,
   selection_ IN VARCHAR2 )  RETURN BOOLEAN
IS
   selected_count_   NUMBER;
   record_count_     NUMBER;
   CURSOR get_record_count IS
      SELECT COUNT(*)
      FROM delivery_route_schedule
      WHERE route_id = route_id_;
BEGIN
   selected_count_ := json_array_t.parse(selection_).get_size;
   OPEN get_record_count;
   FETCH get_record_count INTO record_count_;
   CLOSE get_record_count;
   
   IF selected_count_ = record_count_ THEN
      RETURN TRUE;
   END IF;
   
   RETURN FALSE;
   
END Is_All_Route_Schedules_Selected___;

@Override
PROCEDURE CRUD_Default_Copy___ (
   rec_ IN OUT Delivery_Route_Rec )
IS
BEGIN
   super(rec_);
   rec_.route_id := NULL;
END CRUD_Default_Copy___;


