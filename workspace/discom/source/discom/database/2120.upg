---------------------------------------------------------------------------------------------
--  Module : DISCOM
--
--  Purpose: Upgrade database objects for IFS/Component Distribution Common
--           from version 21.1.0 to 21.2.0
--
--  File   : 2120.upg
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  ------------------------------------------------------------------------
--  211215   NiRalk  SC21R2-5530, gelr:brazilian_specific_attributes, Moved Acquisition Reason to INVENT.
--  210729   ShVese  SC21R2-2077, Added alter table statements in DELIVERY_ROUTE_SCHEDULE_TAB and DELIVERY_ROUTE_EXCEPTION_TAB 
--  210531   SBalLK  SC21R2-1169, Added changes relate to 'WHSE_SHIPMENT_RECEIPT_INFO_TAB'.
--  210524   jowise  MF21R2-1845, Added Receipt Time For Arrival fields to Delivery Route Schedule and Exception
--  210524   Carabr  FI21R2-1570, Fix ACQUISITIONREASON_TAB.EXTERNAL_USE_TYPE length and mandatory property
--  210407   Carabr  GEFALL20-2909, gelr:brazilian_specific_attributes, Create Acquisition Reason for business transaction.
--  202104   jowise  Created
--  ------   ------  ------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SET SERVEROUTPUT ON
exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2120.upg','Timestamp_1');
PROMPT START upgrading WITH 2120.upg

---------------------------------------------------------------------------------------------
------------------------------ Instructions for upg files -----------------------------------
---------------------------------------------------------------------------------------------
--
--  Main section should contain all upgrade operations.
--  Next section should contain removal of obsolete objects (any removal of data inside upg is prohibited!).
--  Removal of backup tables and obsolete columns should be added to <component>Cl.sql script!
--
--  If possible, everything regarding one table should be placed in one section.
--  If this is not possible, a proper comment about the reason should be added.
--
--  Each section should be started with a "-----" line and a empty line.
--  This section should then start with a line like: "-- ***** Example_Tab Start *****"
--  and end with a line like:                       "-- ***** Example_Tab End *****"
--
--  Don't forget UPPER/lower case !
--
--  Every part inside the section should start with a "PROMPT" line explaining what is done by the block.
--
--  If the PL/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.
--
--  Remember ordinary coding standard rules !
--
--  Don't drop any Table/Column !
--
--  Don't forget performance when updating large table !
--
--  No unnecessary blank lines or comments !
--
--  If possible, use pure SQL commands
--
--  If possible, try to group several updates together in one statement.
--
--  Timestamps will be added automatically at the end of the project.
--
--  For more information refer to the "Upgrade Script Standards" and the "Performance" technical documents.
--
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES -----------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
--------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ------------------
---------------------------------------------------------------------------------------------

-- ***** DELIVERY_ROUTE_SCHEDULE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2120.upg','Timestamp_2');
PROMPT Adding columns DUE_TIME_FOR_DELIVERY, RECEIPT_TIME_FOR_ARRIVAL to DELIVERY_ROUTE_SCHEDULE_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'DELIVERY_ROUTE_SCHEDULE_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('DUE_TIME_FOR_DELIVERY', 'DATE', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('RECEIPT_TIME_FOR_ARRIVAL', 'DATE', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/

-- ***** DELIVERY_ROUTE_SCHEDULE_TAB End *****


-- ***** DELIVERY_ROUTE_EXCEPTION_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2120.upg','Timestamp_3');
PROMPT Adding columns DUE_TIME_FOR_DELIVERY,RECEIPT_TIME_FOR_ARRIVAL to DELIVERY_ROUTE_EXCEPTION_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'DELIVERY_ROUTE_EXCEPTION_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('DUE_TIME_FOR_DELIVERY', 'DATE', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('RECEIPT_TIME_FOR_ARRIVAL', 'DATE', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/

-- ***** DELIVERY_ROUTE_EXCEPTION_TAB End *****

-- ********** WHSE_SHIPMENT_RECEIPT_INFO_TAB : START **********

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2120.upg','Timestamp_4');
PROMPT Adding ADDRESS_TYPE, GEOLOCATION_ID and GEOLOCATION_ADDRESS_ID column to WHSE_SHIPMENT_RECEIPT_INFO_TAB
PROMPT and modifying DELIVERY_TERMS AND SHIP_VIA_CODE code column to non-mandatory columns.

DECLARE
   table_name_ VARCHAR2(30) := 'WHSE_SHIPMENT_RECEIPT_INFO_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('ADDRESS_TYPE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('GEOLOCATION_ID', 'VARCHAR2(30)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('GEOLOCATION_ADDRESS_ID', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('DELIVERY_TERMS', 'VARCHAR2(5)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);

   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('SHIP_VIA_CODE', 'VARCHAR2(3)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'WHSE_SHIPMENT_RECEIPT_INFO_IX1';
   table_name_ VARCHAR2(30) := 'WHSE_SHIPMENT_RECEIPT_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT');
   Database_SYS.Set_Table_Column(columns_, 'WAREHOUSE_ID');
   Database_SYS.Set_Table_Column(columns_, 'ADDRESS_TYPE');
   Database_SYS.Set_Table_Column(columns_, 'COMPANY');
   Database_SYS.Set_Table_Column(columns_, 'COMPANY_ADDRESS_ID');
   Database_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'WHSE_SHIPMENT_RECEIPT_INFO_IX2';
   table_name_ VARCHAR2(30) := 'WHSE_SHIPMENT_RECEIPT_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT');
   Database_SYS.Set_Table_Column(columns_, 'WAREHOUSE_ID');
   Database_SYS.Set_Table_Column(columns_, 'ADDRESS_TYPE');
   Database_SYS.Set_Table_Column(columns_, 'PERSON_ID');
   Database_SYS.Set_Table_Column(columns_, 'PERSON_ADDRESS_ID');
   Database_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'WHSE_SHIPMENT_RECEIPT_INFO_IX3';
   table_name_ VARCHAR2(30) := 'WHSE_SHIPMENT_RECEIPT_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT');
   Database_SYS.Set_Table_Column(columns_, 'WAREHOUSE_ID');
   Database_SYS.Set_Table_Column(columns_, 'ADDRESS_TYPE');
   Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_ID');
   Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_ADDRESS_ID');
   Database_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'WHSE_SHIPMENT_RECEIPT_INFO_IX4';
   table_name_ VARCHAR2(30) := 'WHSE_SHIPMENT_RECEIPT_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT');
   Database_SYS.Set_Table_Column(columns_, 'WAREHOUSE_ID');
   Database_SYS.Set_Table_Column(columns_, 'ADDRESS_TYPE');
   Database_SYS.Set_Table_Column(columns_, 'SUPPLIER_ID');
   Database_SYS.Set_Table_Column(columns_, 'SUPPLIER_ADDRESS_ID');
   Database_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'WHSE_SHIPMENT_RECEIPT_INFO_IX5';
   table_name_ VARCHAR2(30) := 'WHSE_SHIPMENT_RECEIPT_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT');
   Database_SYS.Set_Table_Column(columns_, 'WAREHOUSE_ID');
   Database_SYS.Set_Table_Column(columns_, 'ADDRESS_TYPE');
   Database_SYS.Set_Table_Column(columns_, 'GEOLOCATION_ID');
   Database_SYS.Set_Table_Column(columns_, 'GEOLOCATION_ADDRESS_ID');
   Database_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ********** WHSE_SHIPMENT_RECEIPT_INFO_TAB : END   **********


---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES/COLUMNS -----------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE INDEXES/SEQUENCES ------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2120.upg','Timestamp_5');
PROMPT Upgrade statements IN FILE 2120.upg ends here.

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2120.upg','Done');
