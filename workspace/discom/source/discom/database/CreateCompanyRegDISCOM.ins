-----------------------------------------------------------------------------
--
--  Filename      : CreateCompanyRegDISCOM.ins
--
--  Module        : DISCOM
--
--  Purpose       : Registers Create Company related data for DISCOM
--                  
--  Localization  : Not Needed!
--
--  Date     Sign      History
--  ------   ----     -----------------------------------------------------------
--  201120   AsZelk  SC2020R1-11427, Changed version to 21.1.0
--  160128   SURBLK    Created   
--  200923   supwlk FISPRING20-7470, Changed version to 20.1.0  
--  201123   supwlk FISPRING20-8336, Changed version to 21.1.0
-----------------------------------------------------------------------------
SET SERVEROUT ON

DEFINE MODULE = 'DISCOM'

--
-- This section defines the component as a Create Company component
--
-- Arguments:
-- No1:  Component. Identity of the component in upper case
-- No2:  Version. The components version
-- No3:  Parent Component. Identity of the parent component in upper case
-- No4:  Active. (String TRUE/FALSE). TRUE means that the component will be called during create company process.
PROMPT Inserting default data to create_company_reg_tab
BEGIN                                                                           
   Enterp_Comp_Connect_V170_API.Reg_Add_Component('&MODULE', '22.2.0', 'MPCCOM', 'TRUE');   
END;
/
COMMIT;

--
-- This section deletes data from remove_company_tab and remove_company_detail_tab
--
-- Arguments:
-- No1:  Component. Identity of the component in upper case
-- No2:  Remove standard only. (String TRUE/FALSE). TRUE used within RD release
PROMPT Delete data from remove_company_tab
BEGIN
   Enterp_Comp_Connect_V170_API.Delete_Remove_Company_Info('&MODULE', TRUE);
END;
/
COMMIT;

--
-- This section defines Create Company detail data for the Component and its Logical Units stored in
-- crecomp_component_lu_tab.
-- At the same time (when calling Xxx_API.Create_Company_Reg__) it defines the table, owned by the LU, 
-- that should be used when removing a company (stored in remove_company_tab and remove_company_detail_tab).
--
-- Arguments for Xxx_API.Create_Company_Reg__:
-- No1:  Execution Order (IN/OUT NUMBER) 
-- No2:  Create and Export. (String TRUE/FALSE Default TRUE).
--       This parameter is used to define if the template should 
--       be created when creating a template and exported when exporting the template. 
-- No3:  Active. (String TRUE/FALSE Default TRUE). If the LU should be active (used) when creating a company
-- No4:  Account Related Lu. (String TRUE/FALSE Default FALSE). An account related LU is a LU that stores and handles data 
--       related to the accounting code string
-- No5:  Standard table (TRUE when released from RD Default TRUE)
--
--
-- Note: In the end Create Company detail data for Posting Control Logical Units which are handled in a special way are defined. 
--
-- Arguments for Posting_Ctrl_Crecomp_API.Comp_Reg_Xxx_Gen__ (where Xxx is the different Posting Ctrl levels):
-- No1:  Execution Order (IN/OUT NUMBER)
-- No2:  Component. Identity of the component in upper case
-- No3:  Logical Unit. The identity of the logical unit
-- No4:  Package. The identity of database package for the logical unit.
-- No5:  Create and Export. (String TRUE/FALSE Default TRUE).
--       This parameter is used to define if the template should 
--       be created when creating a template and exported when exporting the template. 
-- No6:  Active. (String TRUE/FALSE Default TRUE). If the LU should be active (used) when creating a company
PROMPT Inserting default meta data to Create Company Tables
DECLARE
   execution_order_ NUMBER := 1; 
BEGIN
      Company_Tax_Discom_Info_API.Create_Company_Reg__(execution_order_);
END;
/
COMMIT;

--
-- The following two sections defines tables in the component that should be used when removing a company. 
-- This is done in this section if the table is not a part of the Create Company concept. 
-- If it is a part of the Create Company concept the tables are registered already in the above section
-- when calling Xxx_API.Create_Company_Reg__ method.
--
-- Arguments:
-- No1:  Component. Identity of the component in upper case
-- No2:  Table name, name of the table containing company data
-- No3:  Standard table (TRUE when released from RD)


-- Arguments:
-- No1:  Component. Identity of the component in upper case
-- No2:  Table name. Name of the table containing company data
-- No3:  Column name. Normally the name of the column containing the company identity but if the column can contain other
--       data than company identities then several registration lines are needed to define the company rows in the table and 
--       in such case define column name for each extra column (together with Arg 4) to identify the company rows in the table.
-- No4:  Column value. Set <COMPANY> if the column (Arg 3) only holds company identities, if not only companies are 
--       stored in the column, then set value, per column, to identify the company rows. 
-- Note: Normally one row is enough to define the company lines for a specifict company in the table. 
--       For example:
--       Enterp_Comp_Connect_V170_API.Reg_Add_Table_Detail('&MODULE','COMPANY_TAB','COMPANY','<COMPANY>');
--       
--       For tables where not only one column is enough to define the company rows it means that several calls to 
--       Reg_Add_Table_Detail is needed to define which rows in the table that contains company data for a specific company
--       For example:
--       Enterp_Comp_Connect_V170_API.Reg_Add_Table_Detail('&MODULE','KEY_LU_TRANSLATION_TAB','KEY_VALUE','<COMPANY>');
--       Enterp_Comp_Connect_V170_API.Reg_Add_Table_Detail('&MODULE','KEY_LU_TRANSLATION_TAB','KEY_NAME', 'CompanyKeyLu');

--
-- This section defines so called client mapping, i.e. a definition of the anonymous columns that
-- are linked to a specific Component and Logical Unit. The definition is used in runtime to
-- "redesign" the Create Company Template detail window, only showing columns used by the LU with 
-- the proper column label for each column.
-- The mapping_id is an unique identity for a Component and Lu, previously defined
-- when adding data for Create Company Detail data (crecomp_component_lu_tab).
-- The mapping_id is constructed in the following way: CCD_ || UPPER(LU)
--
-- Arguments for Xxx_API.Create_Client_Mapping__:
-- No1:  Client Window. Defaults to "frmCreateCompanyTemDetail" (which should always be used)
--
-- Note: In the end Client Mapping data for Posting Control Logical Units which are handled in a special way are defined.
--
-- Arguments for Posting_Ctrl_Crecomp_API.Client_Map_Xxx_Gen__ (where Xxx is the different Posting Ctrl levels):
-- No1:  Component. Identity of the component in upper case
-- No2:  Logical Unit. The identity of the logical unit
PROMPT Define Client Mapping for &MODULE
DECLARE
BEGIN
   Company_Tax_Discom_Info_API.Create_Client_Mapping__;  
END;
/ 
COMMIT;

UNDEFINE MODULE


