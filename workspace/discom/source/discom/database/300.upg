-----------------------------------------------------------------------------
--  Module : DISCOM
--
--  Purpose: Upgrade of DISCOM database objects from release 2.1.0 to 3.0.0.
--
--  File   : 300.upg
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  --------------------------------------------------
--  171129   DAYJLK  STRSC-13921, Added column RESERV_FROM_TRANSP_TASK to SITE_DISCOM_INFO_TAB.
--  170711   KhVeSE  STRSC-10776 - Added UNATTACH_HU_AT_DELIVERY to SITE_DISCOM_INFO_TAB.
--  170320   MAHPLK  FINHR-6143, Merged 160203_FINHR-668_Discom.cdb.
--  170316   SURBLK  Renamed column OVERRULE_LMT_SALE_TO_ASSRT to ALLOW_OVERRULE_LIMIT_SALES in SITE_DISCOM_INFO_TAB.
--  170131   MaRalk  STRSC-5373, Moved additional RETURN_CAUSE_TAB, SITE_DISCOM_INFO_TAB upgrades into existing blocks.
--  170131           Added missing keep_default clause for SITE_DISCOM_INFO_TAB - DIR_DEL_APPROVAL, ORDER_CONF_APPROVAL,
--  170131           ORDER_CONF_DIFF_APPROVAL, CREATE_CONF_CHANGE_ORDER columns.
--  170127   KhVeSE  LIM-10221, Removed the code related to Add column ADJUST_PICK_RESERVATION to the table SITE_DISCOM_INFO_TAB
--  170126   IsSalk  STRSC-5606, Added column OVERRULE_LMT_SALE_TO_ASSRT to SITE_DISCOM_INFO_TAB.
--  170106   SudJlk  STRSC-5316, Set keep_default_ where value was missing for rowstate introduced for data validity.
--  161201   ChBnlk  STRSC-4284, Added new column ALLOW_AUTO_SUB_OF_PARTS to SITE_DISCOM_INFO_TAB.
--  161124   DilMlk  STRSC-4503, Modified columns DIR_DEL_APPROVAL, ORDER_CONF_APPROVAL, ORDER_CONF_DIFF_APPROVAL, CREATE_CONF_CHANGE_ORDER
--  161124           by removing keep_default_ => 'N'.
--  161017   khvese  LIM-5833, Added column ADJUST_PICK_RESERVATION to SITE_DISCOM_INFO_TAB
--  160919   MaEelk  PRINT_PICK_REPORT to SITE_DISCOM_INFO_TAB
--  160623   DilMlk  STRSC-1199, Added new columns DIR_DEL_APPROVAL, ORDER_CONF_APPROVAL, ORDER_CONF_DIFF_APPROVAL, CREATE_CONF_CHANGE_ORDER
--  160623           and SUPP_AUTO_APPROVAL_USER to SITE_DISCOM_INFO_TAB. Added new table MESSAGE_DEFAULTS_PER_SUPP_TAB.
--  160602   NaLrlk  STRSC-2559, Added obsoslte package Purchase_Receive_Case_API.
--  160406   JanWse  STRSC-2009, Changed from Alter_Table to Alter_Table_Column and removed unnecassary index creation validity related changes
--  160331   JanWse  STRSC-1694, Added validity (rowstate) to RETURN_CAUSE_TAB
--  160209   DipeLk  STRLOC-28, Added two new coulmns to the company_
--  160106   NaLrlk  LIM-5738, Added RETURN_CAUSE_TAB from the purch module.
--  151130   MaRalk  STRSC-421, Created.
--  ------   ------  --------------------------------------------------
-----------------------------------------------------------------------------

SET SERVEROUTPUT ON
exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_1');
PROMPT Start upgrading with 300.upg

------------------------------------------------------------------------------------------
---------------------------- Instructions for upg files ----------------------------------
------------------------------------------------------------------------------------------

-- If possible, everything regarding one table should be placed in one section.
-- If this is not possible, a proper comment about the reason should be added.

-- Each section should be started with a "-----" line and a empty line.
-- This section should then start with a line like: "-- ***** Example_Tab Start *****"
-- and end with a line like:                       "-- ***** Example_Tab End *****"
-- Don't forget UPPER/lower case !

-- Every part inside the section should start with a "PROMPT" line explaining what is done by the block.

-- If the PL/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.

-- Remember ordinary coding standard rules !

-- Don't drop any Table/Column !

-- Don't forget performance when updating large table !

-- No unnecessary blank lines or comments !

-- If possible, use pure SQL commands
-- If possible, try to group several updates together in one statement.

-- For more information refer the "Upgrade Script Standards document and the Performance Guide.

-- Timestamps will be added automatically at the end of the project.


---------------------------------------------------------------------------------------------
--------------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ----------------------
---------------------------------------------------------------------------------------------

-- ***** DELIVERY_ROUTE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_2');
PROMPT Creating new table DELIVERY_ROUTE_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'DELIVERY_ROUTE_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROUTE_ID', 'VARCHAR2(12)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(35)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'FORWARD_AGENT_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CHECK_ON_LINE_LEVEL', 'VARCHAR2(5)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_3');
PROMPT Creating new index DELIVERY_ROUTE_PK
DECLARE
   index_name_ VARCHAR2(30) := 'DELIVERY_ROUTE_PK';
   table_name_ VARCHAR2(30) := 'DELIVERY_ROUTE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROUTE_ID');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_4');
PROMPT Creating new index DELIVERY_ROUTE_RK
DECLARE
   index_name_ VARCHAR2(30) := 'DELIVERY_ROUTE_RK';
   table_name_ VARCHAR2(30) := 'DELIVERY_ROUTE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** DELIVERY_ROUTE_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** DELIVERY_ROUTE_SCHEDULE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_5');
PROMPT Creating new table DELIVERY_ROUTE_SCHEDULE_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'DELIVERY_ROUTE_SCHEDULE_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROUTE_ID', 'VARCHAR2(12)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROUTE_DAY', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'SHIP_TIME', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ORDER_STOP_DAYS', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ORDER_STOP_TIME', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_6');
PROMPT Creating new index DELIVERY_ROUTE_SCHEDULE_PK
DECLARE
   index_name_ VARCHAR2(30) := 'DELIVERY_ROUTE_SCHEDULE_PK';
   table_name_ VARCHAR2(30) := 'DELIVERY_ROUTE_SCHEDULE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROUTE_ID');
   Database_SYS.Set_Table_Column(columns_, 'ROUTE_DAY');
   Database_SYS.Set_Table_Column(columns_, 'SHIP_TIME');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_7');
PROMPT Creating new index DELIVERY_ROUTE_SCHEDULE_RK
DECLARE
   index_name_ VARCHAR2(30) := 'DELIVERY_ROUTE_SCHEDULE_RK';
   table_name_ VARCHAR2(30) := 'DELIVERY_ROUTE_SCHEDULE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** DELIVERY_ROUTE_SCHEDULE_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** DELIVERY_ROUTE_EXCEPTION_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_8');
PROMPT Creating new table DELIVERY_ROUTE_EXCEPTION_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'DELIVERY_ROUTE_EXCEPTION_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROUTE_ID', 'VARCHAR2(12)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT', 'VARCHAR2(5)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'EXCEPTION_DATE', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'SHIP_TIME', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'EXCEPTION_TYPE', 'VARCHAR2(6)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ORDER_STOP_DAYS', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ORDER_STOP_TIME', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_9');
PROMPT Creating new index DELIVERY_ROUTE_EXCEPTION_PK
DECLARE
   index_name_ VARCHAR2(30) := 'DELIVERY_ROUTE_EXCEPTION_PK';
   table_name_ VARCHAR2(30) := 'DELIVERY_ROUTE_EXCEPTION_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROUTE_ID');
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT');
   Database_SYS.Set_Table_Column(columns_, 'EXCEPTION_DATE');
   Database_SYS.Set_Table_Column(columns_, 'SHIP_TIME');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_10');
PROMPT Creating new index DELIVERY_ROUTE_EXCEPTION_RK
DECLARE
   index_name_ VARCHAR2(30) := 'DELIVERY_ROUTE_EXCEPTION_RK';
   table_name_ VARCHAR2(30) := 'DELIVERY_ROUTE_EXCEPTION_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** DELIVERY_ROUTE_EXCEPTION_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** SITE_DISCOM_INFO_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_11');
PROMPT Adding columns OVER_DELIVERY, OVER_DELIVERY_TOLERANCE, ACTION_NON_AUTHORIZED, ACTION_AUTHORIZED to SITE_DISCOM_INFO_TAB
DECLARE
   column_       Database_SYS.ColRec;
   table_name_   VARCHAR2(30):= 'SITE_DISCOM_INFO_TAB';
BEGIN
   column_ := Database_SYS.Set_Column_Values('OVER_DELIVERY', 'VARCHAR2(20)', 'N', '''FALSE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE );

   column_ := Database_SYS.Set_Column_Values('OVER_DELIVERY_TOLERANCE', 'NUMBER', 'Y' );
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE );

   column_ := Database_SYS.Set_Column_Values('ACTION_NON_AUTHORIZED', 'VARCHAR2(20)', 'N', '''NONE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_,  TRUE);

   column_ := Database_SYS.Set_Column_Values('ACTION_AUTHORIZED', 'VARCHAR2(20)', 'N', '''WARNING''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_,  TRUE);

   column_ := Database_SYS.Set_Column_Values('DIR_DEL_APPROVAL', 'VARCHAR2(20)', 'N', '''NOT_APPLICABLE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('ORDER_CONF_APPROVAL', 'VARCHAR2(20)', 'N', '''NOT_APPLICABLE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('ORDER_CONF_DIFF_APPROVAL', 'VARCHAR2(20)', 'N', '''NOT_APPLICABLE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('CREATE_CONF_CHANGE_ORDER', 'VARCHAR2(20)', 'N', '''FALSE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('SUPP_AUTO_APPROVAL_USER', 'VARCHAR2(30)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('PRINT_PICK_REPORT', 'VARCHAR2(20)', 'N', '''DETAILED''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('ALLOW_AUTO_SUB_OF_PARTS', 'VARCHAR2(5)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('ALLOW_OVERRULE_LIMIT_SALES', 'VARCHAR2(20)', 'N', '''FALSE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   
   column_ := Database_SYS.Set_Column_Values('UNATTACH_HU_AT_DELIVERY', 'VARCHAR2(20)', 'N', '''TRUE''', keep_default_ => 'N');      
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('RESERV_FROM_TRANSP_TASK',  'VARCHAR2(30)', 'N', '''USE INVENTORY DEFAULT''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/
-- ***** SITE_DISCOM_INFO_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** RETURN_CAUSE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_12');
PROMPT Creating new table RETURN_CAUSE_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'RETURN_CAUSE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'RETURN_REASON', 'VARCHAR2(8)',  'N');
   Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION',   'VARCHAR2(35)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION',    'DATE',         'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY',        'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Set_Table_Column(columns_, 'ROWSTATE',      'VARCHAR2(20)', 'N',  '''Active''', keep_default_ => 'N');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_13');
PROMPT Creating new index RETURN_CAUSE_PK
DECLARE
   index_name_ VARCHAR2(30) := 'RETURN_CAUSE_PK';
   table_name_ VARCHAR2(30) := 'RETURN_CAUSE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'RETURN_REASON');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_14');
PROMPT Creating new index RETURN_CAUSE_RK
DECLARE
   index_name_ VARCHAR2(30) := 'RETURN_CAUSE_RK';
   table_name_ VARCHAR2(30) := 'RETURN_CAUSE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** RETURN_CAUSE_TAB End *****


-- ***** COMPANY_TAX_DISCOM_INFO_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_15');
PROMPT Adding new table Company_Tax_Discom_Info_tab
DECLARE
   table_name_ VARCHAR2(30) := 'COMPANY_TAX_DISCOM_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'TAX_CODE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TAX_FREE_TAX_CODE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ORDER_TAXABLE', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'PURCH_TAXABLE', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'USE_PRICE_INCL_TAX_ORD', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'USE_PRICE_INCL_TAX_PUR', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'TAX_PAYING_PARTY', 'VARCHAR2(20)','N');
   Database_SYS.Set_Table_Column(columns_, 'TAX_PAYING_THRESHOLD_AMT', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'MODIFY_TAX_PERCENTAGE', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_16');
PROMPT Creating new INDEX COMPANY_TAX_DISCOM_INFO_PK
DECLARE
   index_name_ VARCHAR2(30) := 'COMPANY_TAX_DISCOM_INFO_PK';
   table_name_ VARCHAR2(30) := 'COMPANY_TAX_DISCOM_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COMPANY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_17');
PROMPT Creating new INDEX COMPANY_TAX_DISCOM_INFO_RK
DECLARE
   index_name_ VARCHAR2(30) := 'COMPANY_TAX_DISCOM_INFO_RK';
   table_name_ VARCHAR2(30) := 'COMPANY_TAX_DISCOM_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/


-- ***** COMPANY_TAX_DISCOM_INFO_TAB End *****

--------------------------------------------------------------------------------

-- ***** MESSAGE_DEFAULTS_PER_SUPP_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_18');
PROMPT Creating table MESSAGE_DEFAULTS_PER_SUPP_TAB
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'MESSAGE_DEFAULTS_PER_SUPP_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT',                   'VARCHAR2(5)',   'N');
   Database_SYS.Set_Table_Column(columns_, 'VENDOR_NO',                  'VARCHAR2(20)',  'N');
   Database_SYS.Set_Table_Column(columns_, 'DIR_DEL_APPROVAL',           'VARCHAR2(20)',  'N');
   Database_SYS.Set_Table_Column(columns_, 'ORDER_CONF_APPROVAL',        'VARCHAR2(20)',  'N');
   Database_SYS.Set_Table_Column(columns_, 'ORDER_CONF_DIFF_APPROVAL',   'VARCHAR2(20)',  'N');
   Database_SYS.Set_Table_Column(columns_, 'CREATE_CONF_CHANGE_ORDER',   'VARCHAR2(20)',  'Y');
   Database_SYS.Set_Table_Column(columns_, 'SUPP_AUTO_APPROVAL_USER',    'VARCHAR2(30)',  'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION',                 'DATE',          'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY',                     'VARCHAR2(50)',  'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_19');
PROMPT Create new index MESSAGE_DEFAULTS_PER_SUPP_PK, MESSAGE_DEFAULTS_PER_SUPP_RK on MESSAGE_DEFAULTS_PER_SUPP_TAB.
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'MESSAGE_DEFAULTS_PER_SUPP_TAB';
   index_name_ VARCHAR2(30) := 'MESSAGE_DEFAULTS_PER_SUPP_PK';
   rkidx_name_ VARCHAR2(30) := 'MESSAGE_DEFAULTS_PER_SUPP_RK';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT');
   Database_SYS.Set_Table_Column(columns_, 'VENDOR_NO');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, rkidx_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** MESSAGE_DEFAULTS_PER_SUPP_TAB End *****

---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES  ----------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES/COLUMNS -----------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_20');
PROMPT Dropping obsolete Packages...
BEGIN
   Database_SYS.Remove_Package('PURCHASE_RECEIVE_CASE_API', TRUE);
END;
/


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE SEQUENCES --------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Timestamp_21');
PROMPT Upgrade statements in file 300.upg end here.

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','300.upg','Done');

