---------------------------------------------------------------------------------------------
--  Module : DISCOM
--
--  Purpose: Upgrade database objects for IFS/Component Distribution Common
--           from version 3.0.0 to 21.1.0
--
--  File   : 2110.upg
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  ------------------------------------------------------------------------
--  201120   AsZelk  SC2020R1-11427, Modified file name to reflect new version name IFS Cloud 21.1.0.
--  200914   AsZelk  SC2020R1-9425, Merged CDB files into UPG.
--  200723   AsZelk  SCSPRING20-1349, Added Shipment Order Default columns to the WHSE_SHIPMENT_RECEIPT_INFO_TAB.
--  200616   pamplk  SC2020R1-7179, Added SEND_AUTO_DIS_ADV column into WHSE_SHIPMENT_RECEIPT_INFO_TAB.
--  200608   MalLlk  GESPRING20-4617, Added column TAX_BASIS_SOURCE to COMPANY_TAX_DISCOM_INFO_TAB.
--  200402   MaEelk  SC2020R1-1897, Merged 191104_SCSPRING20-959_discom.cdb, 191118_SCSPRING20-959_discom.cdb,
--  200402           191212_SCSPRING20-1108_discom.cdb and 191223_SCSPRING20-1349_Discom.cdb
--  191121   AsHelk  Created
--  ------   ------  ------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SET SERVEROUTPUT ON
exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2110.upg','Timestamp_1');
PROMPT START upgrading WITH 2110.upg

---------------------------------------------------------------------------------------------
------------------------------ Instructions for upg files -----------------------------------
---------------------------------------------------------------------------------------------
--
--  Main section should contain all upgrade operations.
--  Next section should contain removal of obsolete objects (any removal of data inside upg is prohibited!).
--  Removal of backup tables and obsolete columns should be added to <component>Cl.sql script!
--
--  If possible, everything regarding one table should be placed in one section.
--  If this is not possible, a proper comment about the reason should be added.
--
--  Each section should be started with a "-----" line and a empty line.
--  This section should then start with a line like: "-- ***** Example_Tab Start *****"
--  and end with a line like:                       "-- ***** Example_Tab End *****"
--
--  Don't forget UPPER/lower case !
--
--  Every part inside the section should start with a "PROMPT" line explaining what is done by the block.
--
--  If the PL/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.
--
--  Remember ordinary coding standard rules !
--
--  Don't drop any Table/Column !
--
--  Don't forget performance when updating large table !
--
--  No unnecessary blank lines or comments !
--
--  If possible, use pure SQL commands
--
--  If possible, try to group several updates together in one statement.
--
--  Timestamps will be added automatically at the end of the project.
--
--  For more information refer to the "Upgrade Script Standards" and the "Performance" technical documents.
--
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES -----------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
--------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ------------------
---------------------------------------------------------------------------------------------

-- ***** WHSE_SHIPMENT_RECEIPT_INFO_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2110.upg','Timestamp_2');
PROMPT CREATE TABLE WHSE_SHIPMENT_RECEIPT_INFO_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'WHSE_SHIPMENT_RECEIPT_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT', 'VARCHAR2(5)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'WAREHOUSE_ID', 'VARCHAR2(15)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVE_CASE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'COMPANY_ADDRESS_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_ADDRESS_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PERSON_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PERSON_ADDRESS_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SUPPLIER_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SUPPLIER_ADDRESS_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PICKING_LEAD_TIME', 'NUMBER', 'N', '''0''', keep_default_ => 'N');
   Database_SYS.Set_Table_Column(columns_, 'EXT_TRANSPORT_LEAD_TIME', 'NUMBER', 'N', '''0''', keep_default_ => 'N');
   Database_SYS.Set_Table_Column(columns_, 'TRANSPORT_LEADTIME', 'NUMBER', 'N', '''0''', keep_default_ => 'N');
   Database_SYS.Set_Table_Column(columns_, 'INT_TRANSPORT_LEAD_TIME', 'NUMBER', 'N', '''0''', keep_default_ => 'N');
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_TYPE', 'VARCHAR2(3)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'FORWARD_AGENT_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'DELIVERY_TERMS', 'VARCHAR2(5)', 'N', '''*''', keep_default_ => 'N');
   Database_SYS.Set_Table_Column(columns_, 'DEL_TERMS_LOCATION', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROUTE_ID', 'VARCHAR2(12)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ARRIVAL_ROUTE_ID', 'VARCHAR2(12)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SHIP_VIA_CODE', 'VARCHAR2(3)', 'N', '''*''', keep_default_ => 'N');
   Database_SYS.Set_Table_Column(columns_, 'SEND_AUTO_DIS_ADV', 'VARCHAR2(5)', 'N', '''FALSE''', keep_default_ => 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2110.upg','Timestamp_3');
PROMPT ADD INDEX WHSE_SHIPMENT_RECEIPT_INFO_PK FOR COLUMNS CONTRACT AND WAREHOUSE_ID IN WHSE_SHIPMENT_RECEIPT_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'WHSE_SHIPMENT_RECEIPT_INFO_PK';
   table_name_ VARCHAR2(30) := 'WHSE_SHIPMENT_RECEIPT_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT');
   Database_SYS.Set_Table_Column(columns_, 'WAREHOUSE_ID');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2110.upg','Timestamp_4');
PROMPT ADD INDEX WHSE_SHIPMENT_RECEIPT_INFO_RK FOR COLUMN ROWKEY IN WHSE_SHIPMENT_RECEIPT_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'WHSE_SHIPMENT_RECEIPT_INFO_RK';
   table_name_ VARCHAR2(30) := 'WHSE_SHIPMENT_RECEIPT_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** WHSE_SHIPMENT_RECEIPT_INFO_TAB End *****


-- ***** WAREHOUSE_DEFAULT_LOCATION_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2110.upg','Timestamp_5');
PROMPT CREATE TABLE WAREHOUSE_DEFAULT_LOCATION_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'WAREHOUSE_DEFAULT_LOCATION_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT', 'VARCHAR2(5)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'WAREHOUSE_ID', 'VARCHAR2(15)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'LOCATION_TYPE', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'LOCATION_NO', 'VARCHAR2(35)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2110.upg','Timestamp_6');
PROMPT ADD INDEX WAREHOUSE_DEFAULT_LOCATION_PK FOR COLUMNS CONTRACT, WAREHOUSE_ID AND LOCATION_TYPE IN WAREHOUSE_DEFAULT_LOCATION_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'WAREHOUSE_DEFAULT_LOCATION_PK';
   table_name_ VARCHAR2(30) := 'WAREHOUSE_DEFAULT_LOCATION_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT');
   Database_SYS.Set_Table_Column(columns_, 'WAREHOUSE_ID');
   Database_SYS.Set_Table_Column(columns_, 'LOCATION_TYPE');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2110.upg','Timestamp_7');
PROMPT ADD INDEX WAREHOUSE_DEFAULT_LOCATION_RK FOR COLUMN ROWKEY IN WAREHOUSE_DEFAULT_LOCATION_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'WAREHOUSE_DEFAULT_LOCATION_RK';
   table_name_ VARCHAR2(30) := 'WAREHOUSE_DEFAULT_LOCATION_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/
-- ***** WAREHOUSE_DEFAULT_LOCATION_TAB End *****


-- ***** SITE_DISCOM_INFO_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2110.upg','Timestamp_8');
PROMPT Rename COLUMN PURCHASE_RECEIVE_CASE to RECEIVE_CASE 
BEGIN
   IF (Database_SYS.Column_Exist('SITE_DISCOM_INFO_TAB','PURCHASE_RECEIVE_CASE')
       AND NOT Database_SYS.Column_Exist('SITE_DISCOM_INFO_TAB','RECEIVE_CASE')) THEN
      Database_SYS.Rename_Column('SITE_DISCOM_INFO_TAB', 'RECEIVE_CASE', 'PURCHASE_RECEIVE_CASE');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2110.upg','Timestamp_9');
PROMPT ADD NOT NULL COLUMN SEND_AUTO_DIS_ADV TO THE TABLE SITE_DISCOM_INFO_TAB.
DECLARE
   column_ Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('SEND_AUTO_DIS_ADV', 'VARCHAR2(20)', 'N', '''FALSE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column('SITE_DISCOM_INFO_TAB', 'A', column_, TRUE);
END;
/

-- ***** SITE_DISCOM_INFO_TAB End *****


-- ***** REQUISITIONER_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2110.upg','Timestamp_10');
PROMPT Creating TABLE REQUISITIONER_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'REQUISITIONER_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'REQUISITIONER_CODE', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'REQ_DEPT', 'VARCHAR2(6)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SYSTEM_DEFINED', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Set_Table_Column(columns_, 'ROWSTATE', 'VARCHAR2(20)', 'N');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2110.upg','Timestamp_11');
PROMPT ADD INDEX REQUISITIONER_PK FOR COLUMN ROWKEY IN REQUISITIONER_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'REQUISITIONER_PK';
   table_name_ VARCHAR2(30) := 'REQUISITIONER_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'REQUISITIONER_CODE');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2110.upg','Timestamp_12');
PROMPT ADD INDEX REQUISITIONER_RK FOR COLUMN ROWKEY IN REQUISITIONER_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'REQUISITIONER_RK';
   table_name_ VARCHAR2(30) := 'REQUISITIONER_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** REQUISITIONER_TAB End *****


-- ***** COMPANY_TAX_DISCOM_INFO_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2110.upg','Timestamp_13');
PROMPT ADD NOT NULL COLUMN TAX_BASIS_SOURCE TO THE TABLE COMPANY_TAX_DISCOM_INFO_TAB.
DECLARE
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := 'COMPANY_TAX_DISCOM_INFO_TAB';
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('TAX_BASIS_SOURCE', 'VARCHAR2(20)', 'N', '''PART_COST''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/

-- ***** COMPANY_TAX_DISCOM_INFO_TAB End *****

-- ***** DELIVERY_ROUTE_SCHEDULE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2110.upg','Timestamp_14');
PROMPT Setting ship_time OF delivery_route_schedule_tab FROM 01-01-1970 TO 01-01-0001. 
BEGIN
   UPDATE delivery_route_schedule_tab drs
   SET drs.ship_time = TO_DATE(CONCAT('01-01-0001', TO_CHAR(drs.ship_time, 'HH24:MI:SS')), 'DD-MM-YYYY HH24:MI:SS')
   WHERE TRUNC(drs.ship_time) = TO_DATE('01-01-1970', 'DD-MM-YYYY')
   AND NOT EXISTS (SELECT 1 
                     FROM delivery_route_schedule_tab drs2
                     WHERE drs2.route_id = drs.route_id   
                     AND drs2.route_day = drs.route_day
                     AND drs2.ship_time = TO_DATE(CONCAT('01-01-0001', TO_CHAR(drs.ship_time, 'HH24:MI:SS')), 'DD-MM-YYYY HH24:MI:SS'));
   COMMIT;
END;
/

-- ***** DELIVERY_ROUTE_SCHEDULE_TAB End *****

-- ***** DELIVERY_ROUTE_EXCEPTION_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2110.upg','Timestamp_15');
PROMPT Setting ship_time OF delivery_route_exception_tab FROM 01-01-1970 TO 01-01-0001.
BEGIN
   UPDATE delivery_route_exception_tab dre
   SET dre.ship_time = TO_DATE(CONCAT('01-01-0001', TO_CHAR(dre.ship_time, 'HH24:MI:SS')), 'DD-MM-YYYY HH24:MI:SS')
   WHERE TRUNC(dre.ship_time) = TO_DATE('01-01-1970', 'DD-MM-YYYY')
   AND NOT EXISTS (SELECT 1 
                     FROM delivery_route_exception_tab dre2
                     WHERE dre2.route_id = dre.route_id
                     AND dre2.contract = dre.contract
                     AND dre2.exception_date = dre.exception_date
                     AND dre2.ship_time = TO_DATE(CONCAT('01-01-0001', TO_CHAR(dre.ship_time, 'HH24:MI:SS')), 'DD-MM-YYYY HH24:MI:SS'));      
   COMMIT;
END;
/

-- ***** DELIVERY_ROUTE_EXCEPTION_TAB End *****

---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES/COLUMNS -----------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE INDEXES/SEQUENCES ------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2110.upg','Timestamp_16');
PROMPT Upgrade statements IN FILE 2110.upg ends here.

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2110.upg','Done');
