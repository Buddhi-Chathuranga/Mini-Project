-----------------------------------------------------------------------------
--
--  Module : DISCOM
--
--  Purpose: Upgrade of DISCOM database objects from release 2.0.0 to 2.1.0.
--
--  File   : 210.upg
--
--  IFS/Design Template Version 2.3
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  171012  JeLise  STRSC-12749, Added ORACLE DEFAULT value feature when adding NOT NULL column to a table to improve performance.
--  141021  SURBLK  Add new column HEADER_STATUS into SUPPLY_ORDER_ANALYSIS_TAB.
--  141015  ShKolk  Add new table SUPPLY_ORDER_ANALYSIS_TAB.
--  141014  UdGnlk  PRSC-3257, Modified EDI_AUTO_ORDER_APPROVAL and EDI_AUTO_CHANGE_APPROVAL columns to NOT NULL in MESSAGE_DEFAULTS_PER_CUST_TAB.
--  140922  UdGnlk  PRSC-3133, Added column DISCOUNT_FREEZE to the SITE_DISCOM_INFO_TAB.
--  140707  MAHPLK  Added EXEC_ORDER_CHANGE_ONLINE column to SITE_DISCOM_INFO_TAB. Create temporarty table INTERSITE_DATA_TRANSFER_TMP.
--  140707  HimRlk  Modified values of edi_auto_order_approval and edi_auto_change_approval in site_discom_info_tab.
--  140704  HimRlk  Added column release_internal_order to site_discom_info_tab and message_defaults_per_cust_tab.
--  140601  MaEelk  Added column discount_type to site_discom_info_tab.
--  140605  NaSalk  Added column finalize_supp_shipment to site_discom_info_tab.
--  140527  MaEelk  Changed the alter type from 'A' to 'M' for the column modifications in SITE_DISCOM_INFO_TAB.
--  140310  MaEelk  Corrected the update of SITE_DISCOM_INFO_TAB regarding Use_price_Incl_tax_purch and Use_price_Incl_tax_order.
--  140304  SURBLK  Add Use_price_Incl_tax_purch and Use_price_Incl_tax_order columns to SITE_DISCOM_INFO_TAB.
--  131029  ChJalk  Modified columns PURCH_COMP_METHOD, CUST_ORDER_PRICING_METHOD, CUST_ORDER_DISCOUNT_METHOD, DISP_COND_CUSTOMER_ORDER, DISP_COND_PURCHASE_ORDER,
--  131029          ENFORCE_USE_OF_POCO, CREATE_BASE_PRICE_PLANNED, EDI_AUTO_ORDER_APPROVAL and EDI_AUTO_CHANGE_APPROVAL FOR VARCHAR 20 IN SITE_DISCOM_INFO_TAB.
--  130917  SURBLK  Modified the upg file from TAL_Discom.cdb
--  130904  ShKolk  Created the upg file from PIV_Discom.cdb
--  130624  ShKolk  Add new table MESSAGE_DEFAULTS_PER_CUST_TAB.
--  130620  ShKolk  Add new columns ORDER_ID, PRIORITY and REPLICATE_DOC_TEXT to SITE_DISCOM_INFO_TAB.
--  130618  SURBLK  Add FORWARD_AGENT_ID column to SITE_DISCOM_INFO_TAB.
--  130610  SURBLK  Add EDI_AUTO_ORDER_APPROVAL,EDI_AUTO_CHANGE_APPROVAL,EDI_AUTHORIZE_CODE,
--  130610          EDI_AUTO_APPROVAL_USER columns to SITE_DISCOM_INFO_TAB.
--  120823  MeAblk  Add the SHIPMENT_TYPE into the SITE_DISCOM_INFO_TAB in order to show it in the site distribution basic data.
--  120523  HimRlk  Add Use_price_Incl_tax column to SITE_DISCOM_INFO_TAB.
-----------------------------------------------------------------------------

SET SERVEROUTPUT ON
exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','210.upg','Timestamp_1');
PROMPT Start upgrading with 210.upg

------------------------------------------------------------------------------------------
---------------------------- Instructions for upg files ----------------------------------
------------------------------------------------------------------------------------------

-- If possible, everything regarding one table should be placed in one section.
-- If this is not possible, a proper comment about the reason should be added.

-- Each section should be started with a "-----" line and a empty line.
-- This section should then start with a line like: "-- ***** Example_Tab Start *****"
-- and end with a line like:                       "-- ***** Example_Tab End *****"
-- Don't forget UPPER/lower case !

-- Every part inside the section should start with a "PROMPT" line explaining what is done by the block.

-- If the Pl/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.

-- Remember ordinary coding standard rules !

-- Don't drop any Table/Column !

-- Don't forget performance when updating large table !

-- No unnecessary blank lines or comments !

-- If possible, use pure SQL commands
-- If possible, try to group several updates together in one statement.

-- For more information refer the "Upgrade Script Standards document and the Performance Guide.

-- Timestamps will be added automatically at the end of the project.

---------------------------------------------------------------------------------------------
--------------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ----------------------
---------------------------------------------------------------------------------------------

-- ****** Site_Discom_Info_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','210.upg','Timestamp_2');
PROMPT Add new columns USE_PRICE_INCL_TAX_PURCH, USE_PRICE_INCL_TAX_ORDER ,ORDER_ID, PRIORITY, REPLICATE_DOC_TEXT, FORWARD_AGENT_ID, EDI_AUTO_ORDER_APPROVAL,
PROMPT EDI_AUTO_CHANGE_APPROVAL, EDI_AUTHORIZE_CODE, EDI_AUTO_APPROVAL_USER, SHIPMENT_TYPE, FINALIZE_SUPP_SHIPMENT, DISCOUNT_TYPE, RELEASE_INTERNAL_ORDER to SITE_DISCOM_INFO_TAB

DECLARE
   column_ Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('USE_PRICE_INCL_TAX_PURCH', 'VARCHAR2(20)', 'N', '''FALSE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column('SITE_DISCOM_INFO_TAB','A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('USE_PRICE_INCL_TAX_ORDER', 'VARCHAR2(20)', 'N', '''FALSE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column('SITE_DISCOM_INFO_TAB','A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('ORDER_ID', 'VARCHAR2(3)', 'Y');
   Database_SYS.Alter_Table_Column('SITE_DISCOM_INFO_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('PRIORITY', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column('SITE_DISCOM_INFO_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('REPLICATE_DOC_TEXT', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column('SITE_DISCOM_INFO_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('FORWARD_AGENT_ID', 'VARCHAR2(20)','Y');
   Database_SYS.Alter_Table_Column('SITE_DISCOM_INFO_TAB','A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('EDI_AUTO_ORDER_APPROVAL', 'VARCHAR2(20)','Y');
   Database_SYS.Alter_Table_Column('SITE_DISCOM_INFO_TAB','A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('EDI_AUTO_CHANGE_APPROVAL', 'VARCHAR2(20)','Y');
   Database_SYS.Alter_Table_Column('SITE_DISCOM_INFO_TAB','A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('EDI_AUTHORIZE_CODE', 'VARCHAR2(20)','Y');
   Database_SYS.Alter_Table_Column('SITE_DISCOM_INFO_TAB','A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('EDI_AUTO_APPROVAL_USER', 'VARCHAR2(30)','Y');
   Database_SYS.Alter_Table_Column('SITE_DISCOM_INFO_TAB','A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('SHIPMENT_TYPE', 'VARCHAR2(3)', 'N', '''NA''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column('SITE_DISCOM_INFO_TAB', 'A', column_,  TRUE);

   column_ := Database_SYS.Set_Column_Values('FINALIZE_SUPP_SHIPMENT', 'VARCHAR2(20)', 'N', '''TRUE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column ('SITE_DISCOM_INFO_TAB' , 'A', column_);

   column_ := Database_SYS.Set_Column_Values('DISCOUNT_TYPE', 'VARCHAR2(25)', 'N', '''G''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column ('SITE_DISCOM_INFO_TAB' , 'A', column_);

   column_ := Database_SYS.Set_Column_Values('RELEASE_INTERNAL_ORDER', 'VARCHAR2(20)', 'N', '''NOT_APPLICABLE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column ('SITE_DISCOM_INFO_TAB' , 'A', column_);

   column_ := Database_SYS.Set_Column_Values('EXEC_ORDER_CHANGE_ONLINE', 'VARCHAR2(20)', 'N', '''FALSE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column ('SITE_DISCOM_INFO_TAB' , 'A', column_);

   column_ := Database_SYS.Set_Column_Values('DISCOUNT_FREEZE', 'VARCHAR2(20)', 'N', '''FALSE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column ('SITE_DISCOM_INFO_TAB' , 'A', column_);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','210.upg','Timestamp_3');
PROMPT MODIFY columns PURCH_COMP_METHOD, CUST_ORDER_PRICING_METHOD, CUST_ORDER_DISCOUNT_METHOD, DISP_COND_CUSTOMER_ORDER, DISP_COND_PURCHASE_ORDER, ENFORCE_USE_OF_POCO AND CREATE_BASE_PRICE_PLANNED FOR VARCHAR 20 IN SITE_DISCOM_INFO_TAB.
DECLARE
   column_ Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('PURCH_COMP_METHOD', 'VARCHAR2(20)', 'N');
   Database_SYS.Alter_Table_Column ('SITE_DISCOM_INFO_TAB' , 'M', column_);

   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('CUST_ORDER_PRICING_METHOD', 'VARCHAR2(20)', 'N');
   Database_SYS.Alter_Table_Column ('SITE_DISCOM_INFO_TAB' , 'M', column_);

   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('CUST_ORDER_DISCOUNT_METHOD', 'VARCHAR2(20)', 'N');
   Database_SYS.Alter_Table_Column ('SITE_DISCOM_INFO_TAB' , 'M', column_);

   column_ := Database_SYS.Set_Column_Values('DISP_COND_CUSTOMER_ORDER', 'VARCHAR2(20)', 'N');
   Database_SYS.Alter_Table_Column ('SITE_DISCOM_INFO_TAB' , 'M', column_);

   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('DISP_COND_PURCHASE_ORDER', 'VARCHAR2(20)', 'N');
   Database_SYS.Alter_Table_Column ('SITE_DISCOM_INFO_TAB' , 'M', column_);

   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('ENFORCE_USE_OF_POCO', 'VARCHAR2(20)', 'N');
   Database_SYS.Alter_Table_Column ('SITE_DISCOM_INFO_TAB' , 'M', column_);

   column_ := Database_SYS.Set_Column_Values('CREATE_BASE_PRICE_PLANNED', 'VARCHAR2(20)', 'N');
   Database_SYS.Alter_Table_Column ('SITE_DISCOM_INFO_TAB' , 'M', column_);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','210.upg','Timestamp_4');
PROMPT Updating THE VALUE OF edi_auto_order_approval, edi_auto_change_approval in SITE_DISCOM_INFO_TAB with 'NOT_APPLICABLE'

UPDATE site_discom_info_tab
   SET edi_auto_order_approval =  CASE
                                     WHEN edi_auto_order_approval IS NULL THEN
                                        'NOT_APPLICABLE'
                                     WHEN edi_auto_order_approval = 'YES' THEN
                                        'AUTOMATICALLY'
                                     WHEN edi_auto_order_approval = 'NO' THEN
                                        'MANUALLY'
                                     ELSE edi_auto_order_approval
                                  END,
       edi_auto_change_approval =  CASE
                                     WHEN edi_auto_change_approval IS NULL THEN
                                        'NOT_APPLICABLE'
                                     WHEN edi_auto_change_approval = 'YES' THEN
                                        'AUTOMATICALLY'
                                     WHEN edi_auto_change_approval = 'NO' THEN
                                        'MANUALLY'
                                     ELSE edi_auto_change_approval
                                   END;

COMMIT;

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','210.upg','Timestamp_5');
PROMPT edi_auto_order_approval, edi_auto_change_approval TO NOT NULL IN SITE_DISCOM_INFO_TAB table

DECLARE
   column_ Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('EDI_AUTO_ORDER_APPROVAL', NULL, 'N' );
   Database_SYS.Alter_Table_Column('SITE_DISCOM_INFO_TAB', 'M', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('EDI_AUTO_CHANGE_APPROVAL', NULL, 'N' );
   Database_SYS.Alter_Table_Column('SITE_DISCOM_INFO_TAB', 'M', column_, TRUE);
END;
/

-- ****** Site_Discom_Info_Tab End ******

--------------------------------------------------------------------------------

-- ***** MESSAGE_DEFAULTS_PER_CUST_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','210.upg','Timestamp_6');
PROMPT Add new table MESSAGE_DEFAULTS_PER_CUST_TAB.
DECLARE
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := 'MESSAGE_DEFAULTS_PER_CUST_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT',                 'VARCHAR2(5)',  'N');
   Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_NO',              'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'EDI_AUTO_ORDER_APPROVAL',  'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'EDI_AUTO_CHANGE_APPROVAL', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'EDI_AUTHORIZE_CODE',       'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'EDI_AUTO_APPROVAL_USER',   'VARCHAR2(30)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RELEASE_INTERNAL_ORDER',   'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ORDER_ID',                 'VARCHAR2(3)',  'Y');
   Database_SYS.Set_Table_Column(columns_, 'PRIORITY',                 'NUMBER',       'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION',               'DATE',         'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY',                   'VARCHAR2(50)', 'Y', '$DEFAULT_NULL$');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','210.upg','Timestamp_7');
PROMPT Create new index MESSAGE_DEFAULTS_PER_CUST_PK, MESSAGE_DEFAULTS_PER_CUST_RK on MESSAGE_DEFAULTS_PER_CUST_TAB.
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'MESSAGE_DEFAULTS_PER_CUST_TAB';
   index_name_ VARCHAR2(30) := 'MESSAGE_DEFAULTS_PER_CUST_PK';
   rkidx_name_ VARCHAR2(30) := 'MESSAGE_DEFAULTS_PER_CUST_RK';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT');
   Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_NO');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, rkidx_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','210.upg','Timestamp_8');
PROMPT Update EDI_AUTO_ORDER_APPROVAL and EDI_AUTO_CHANGE_APPROVAL columns OF MESSAGE_DEFAULTS_PER_CUST_TAB

UPDATE MESSAGE_DEFAULTS_PER_CUST_TAB
   SET edi_auto_order_approval =  CASE
                                     WHEN edi_auto_order_approval IS NULL THEN
                                        'NOT_APPLICABLE'
                                     WHEN edi_auto_order_approval = 'YES' THEN
                                        'AUTOMATICALLY'
                                     WHEN edi_auto_order_approval = 'NO' THEN
                                        'MANUALLY'
                                     ELSE edi_auto_order_approval
                                  END,
      edi_auto_change_approval =  CASE
                                     WHEN edi_auto_change_approval IS NULL THEN
                                        'NOT_APPLICABLE'
                                     WHEN edi_auto_change_approval = 'YES' THEN
                                        'AUTOMATICALLY'
                                     WHEN edi_auto_change_approval = 'NO' THEN
                                        'MANUALLY'
                                     ELSE edi_auto_change_approval
                                  END;
COMMIT;

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','210.upg','Timestamp_9');
PROMPT Modify columns EDI_AUTO_ORDER_APPROVAL and EDI_AUTO_CHANGE_APPROVAL  as mandatory.

DECLARE
   column_   Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('EDI_AUTO_ORDER_APPROVAL', NULL, 'N' );
   Database_SYS.Alter_Table_Column('MESSAGE_DEFAULTS_PER_CUST_TAB', 'M', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('EDI_AUTO_CHANGE_APPROVAL', NULL, 'N' );
   Database_SYS.Alter_Table_Column('MESSAGE_DEFAULTS_PER_CUST_TAB', 'M', column_, TRUE);

END;
/
-- ***** MESSAGE_DEFAULTS_PER_CUST_TAB End *****

--------------------------------------------------------------------------------

-- ***** INTERSITE_DATA_TRANSFER_TMP Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','210.upg','Timestamp_10');
PROMPT CREATE TEMPORARY TABLE INTERSITE_DATA_TRANSFER_TMP.
DECLARE
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := 'INTERSITE_DATA_TRANSFER_TMP';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'MESSAGE_ID', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'MESSAGE_LINE', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'NAME', 'VARCHAR2(255)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ERROR_MESSAGE', 'VARCHAR2(255)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C00', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C01', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C02', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C03', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C04', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C05', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C06', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C07', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C08', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C09', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C10', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C11', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C12', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C13', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C14', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C15', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C16', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C17', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C18', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C19', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C20', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C21', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C22', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C23', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C24', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C25', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C26', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C27', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C28', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C29', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C30', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C31', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C32', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C33', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C34', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C35', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C36', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C37', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C38', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C39', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C40', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C41', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C42', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C43', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C44', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C45', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C46', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C47', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C48', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C49', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C50', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C51', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C52', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C53', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C54', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C55', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C56', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C57', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C58', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C59', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C60', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C61', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C62', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C63', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C64', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C65', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C66', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C67', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C68', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C69', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C70', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C71', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C72', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C73', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C74', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C75', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C76', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C77', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C78', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C79', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C80', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C81', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C82', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C83', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C84', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C85', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C86', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C87', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C88', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C89', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C90', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C91', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C92', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C93', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C94', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C95', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C96', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C97', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C98', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'C99', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N00', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N01', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N02', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N03', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N04', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N05', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N06', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N07', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N08', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N09', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N10', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N11', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N12', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N13', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N14', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N15', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N16', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N17', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N18', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N19', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N20', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N21', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N22', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N23', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N24', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N25', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N26', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N27', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N28', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N29', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N30', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N31', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N32', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N33', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N34', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N35', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N36', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N37', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N38', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N39', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N40', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N41', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N42', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N43', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N44', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N45', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N46', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N47', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N48', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N49', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N50', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N51', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N52', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N53', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N54', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N55', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N56', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N57', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N58', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N59', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N60', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N61', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N62', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N63', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N64', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N65', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N66', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N67', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N68', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N69', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N70', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N71', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N72', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N73', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N74', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N75', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N76', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N77', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N78', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N79', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N80', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N81', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N82', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N83', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N84', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N85', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N86', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N87', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N88', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N89', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N90', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N91', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N92', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N93', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N94', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N95', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N96', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N97', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N98', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N99', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D00', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D01', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D02', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D03', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D04', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D05', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D06', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D07', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D08', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D09', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D10', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D11', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D12', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D13', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D14', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D15', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D16', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D17', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D18', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D19', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D20', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D21', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D22', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D23', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D24', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D25', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D26', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D27', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D28', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D29', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D30', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D31', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D32', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D33', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D34', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D35', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D36', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D37', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D38', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D39', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'OBJID',      'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'OBJVERSION', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'OBJSTATE',   'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'OBJEVENTS',  'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'STATE',      'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'OBJKEY',     'VARCHAR2(2000)', 'Y');
   Database_SYS.Create_Temporary_Table(table_name_, columns_, TRUE);
END;
/

-- ***** INTERSITE_DATA_TRANSFER_TMP End *****

--------------------------------------------------------------------------------

-- ***** SUPPLY_ORDER_ANALYSIS_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','210.upg','Timestamp_11');
PROMPT Creating table SUPPLY_ORDER_ANALYSIS_TAB
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'SUPPLY_ORDER_ANALYSIS_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'TREE_ID',                    'NUMBER',        'N');
   Database_SYS.Set_Table_Column(columns_, 'NODE_ID',                    'NUMBER',        'N');
   Database_SYS.Set_Table_Column(columns_, 'PARENT_NODE_ID',             'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_, 'ORDER_TYPE',                 'VARCHAR2(200)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ORDER_REF1',                 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ORDER_REF2',                 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ORDER_REF3',                 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ORDER_REF4',                 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT',                   'VARCHAR2(5)',   'Y');
   Database_SYS.Set_Table_Column(columns_, 'PART_NO',                    'VARCHAR2(25)',  'Y');
   Database_SYS.Set_Table_Column(columns_, 'STATUS_DB',                  'VARCHAR2(20)',  'Y');
   Database_SYS.Set_Table_Column(columns_, 'STATUS',                     'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'HEADER_STATUS_DB',           'VARCHAR2(20)',  'Y');
   Database_SYS.Set_Table_Column(columns_, 'HEADER_STATUS',              'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_NO',                'VARCHAR2(20)',  'Y');
   Database_SYS.Set_Table_Column(columns_, 'VENDOR_NO',                  'VARCHAR2(20)',  'Y');
   Database_SYS.Set_Table_Column(columns_, 'DEMAND_CODE',                'VARCHAR2(20)',  'Y');
   Database_SYS.Set_Table_Column(columns_, 'SUPPLY_CODE',                'VARCHAR2(20)',  'Y');
   Database_SYS.Set_Table_Column(columns_, 'CONDITION_CODE',             'VARCHAR2(10)',  'Y');
   Database_SYS.Set_Table_Column(columns_, 'WANTED_DELIVERY_DATE',       'DATE',          'Y');
   Database_SYS.Set_Table_Column(columns_, 'PLANNED_DELIVERY_DATE',      'DATE',          'Y');
   Database_SYS.Set_Table_Column(columns_, 'PLANNED_RECEIPT_DATE',       'DATE',          'Y');
   Database_SYS.Set_Table_Column(columns_, 'PLANNED_SHIP_DATE',          'DATE',          'Y');
   Database_SYS.Set_Table_Column(columns_, 'REVISED_START_DATE',         'DATE',          'Y');
   Database_SYS.Set_Table_Column(columns_, 'REVISED_DUE_DATE',           'DATE',          'Y');
   Database_SYS.Set_Table_Column(columns_, 'SHIP_VIA_CODE',              'VARCHAR2(3)',   'Y');
   Database_SYS.Set_Table_Column(columns_, 'QUANTITY',                   'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_, 'UNIT_MEAS',                  'VARCHAR2(10)',  'Y');
   Database_SYS.Set_Table_Column(columns_, 'QTY_ASSIGNED',               'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_, 'QTY_PICKED',                 'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_, 'QTY_SHIPPED',                'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_, 'QTY_ARRIVED',                'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_, 'QTY_PER_ASSEMBLY',           'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_, 'REVISED_QTY_DUE',            'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_, 'QTY_COMPLETE',               'NUMBER',        'Y');
   Database_SYS.Set_Table_Column(columns_, 'INCOMING_MESSAGE',           'VARCHAR2(20)',  'Y');
   Database_SYS.Set_Table_Column(columns_, 'INCOMING_MESSAGE_STATUS_DB', 'VARCHAR2(20)',  'Y');
   Database_SYS.Set_Table_Column(columns_, 'CATALOG_TYPE',               'VARCHAR2(4)',  'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION',                 'DATE',          'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY',                     'VARCHAR2(50)',  'Y', '$DEFAULT_NULL$');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','210.upg','Timestamp_12');
PROMPT Creating constraints for SUPPLY_ORDER_ANALYSIS_TAB
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'SUPPLY_ORDER_ANALYSIS_TAB';
   index_name_ VARCHAR2(30) := 'SUPPLY_ORDER_ANALYSIS_PK';
   rkidx_name_ VARCHAR2(30) := 'SUPPLY_ORDER_ANALYSIS_RK';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'TREE_ID');
   Database_SYS.Set_Table_Column(columns_, 'NODE_ID');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, rkidx_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** SUPPLY_ORDER_ANALYSIS_TAB End *****

---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES  ----------------------------------------
---------------------------------------------------------------------------------------------

-- ***** SUPPLY_ORDER_ANALYSIS_SEQ Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','210.upg','Timestamp_13');
PROMPT Creating new sequence supply_order_analysis_seq to get unique tree_id for SUPPLY_ORDER_ANALYSIS_TAB
BEGIN
   Database_SYS.Create_Sequence('SUPPLY_ORDER_ANALYSIS_SEQ', 'INCREMENT BY 1 START WITH 1 NOMAXVALUE MINVALUE 1 NOCYCLE NOCACHE NOORDER');
END;
/

-- ***** SUPPLY_ORDER_ANALYSIS_SEQ End *****

---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES ------------------------------------
---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','210.upg','Timestamp_14');
PROMPT Upgrade statements in file 210.upg end here.

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','210.upg','Done');
