---------------------------------------------------------------------------------------------
--  Module : DISCOM
--
--  Purpose: Upgrade database objects for IFS/Distribution Common
--           from version 21.2.0 to 22.1.0
--
--  File   : 2210.cdb
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  ------------------------------------------------------------------------
--  211221   ApWilk  SC21R2-6794, Added columns ACQUISITION_ORIGIN, ACQUISITION_REASON_ID, STATISTICAL_CODE and BUSINESS_OPERATION into TAX_DOCUMENT_LINE_TAB.
--  211215   ApWilk  SC21R2-6311, Added column CONTRACT into TAX_DOCUMENT_TAB.
--  211209   MaEelk  SC21R2-6474, Length of CREATE_TAX_DOCUMENT column in COMPANY_TAX_DISCOM_INFO_TAB was set to VARCHAR2(5)
--  211209   Cpeilk  SC21R2-2566, Added not null column ADHOC_PUR_RQST_APPROVAL to SITE_DISCOM_INFO_TAB and MESSAGE_DEFAULTS_PER_SUPP_TAB.
--  211125   ApWilk  SC21R2-5562, Created TAX_DOCUMENT_LINE_TAB and its constraints. 
--  211129   HaStlk  SC21R2-5512, Added CREATE_TAX_DOCUMENT column in to COMPANY_TAX_DISCOM_INFO_TAB
--  211112   MaEelk  SC21R2-5533, Created TAX_DOCUMENT_TAB and its constraints. 
--  211112           Created tax_document_no_seq.
--  211109   PrRtlk  SC21R2-2967, Added Indexes to Supplier Address Info Tab.
--  211014   cecobr  FI21R2-4615, Move Entity and associated clint/logic of BusinessTransactionCode from MPCCOM to DISCOM
--  211014   PrRtlk  SC21R2-2967, Added New Table SUPP_OUTBOUND_ADDR_INFO_TAB
--  210928   Aabalk  SC21R2-2608, Added PROJECT_ID and PROJECT_ADDRESS_ID columns and new index 
--  210928           WHSE_SHIPMENT_RECEIPT_INFO_IX6 to WHSE_SHIPMENT_RECEIPT_INFO_TAB.
--  210917   BDT     Created (by Build and Deployment Team).
--  ------   ------  ------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SET SERVEROUTPUT ON
exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2210.upg','Timestamp_1');
PROMPT START upgrading WITH 2210.cdb

---------------------------------------------------------------------------------------------
------------------------------ Instructions for upg files -----------------------------------
---------------------------------------------------------------------------------------------
--
--  Main section should contain all upgrade operations.
--  Next section should contain removal of obsolete objects (any removal of data inside upg is prohibited!).
--  Removal of backup tables and obsolete columns should be added to <component>Cl.sql script!
--
--  If possible, everything regarding one table should be placed in one section.
--  If this is not possible, a proper comment about the reason should be added.
--
--  Each section should be started with a "-----" line and a empty line.
--  This section should then start with a line like: "-- ***** Example_Tab Start *****"
--  and end with a line like:                       "-- ***** Example_Tab End *****"
--
--  Don't forget UPPER/lower case !
--
--  Every part inside the section should start with a "PROMPT" line explaining what is done by the block.
--
--  If the PL/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.
--
--  Remember ordinary coding standard rules !
--
--  Don't drop any Table/Column !
--
--  Don't forget performance when updating large table !
--
--  No unnecessary blank lines or comments !
--
--  If possible, use pure SQL commands
--
--  If possible, try to group several updates together in one statement.
--
--  Timestamps will be added automatically at the end of the project.
--
--  For more information refer to the "Upgrade Script Standards" and the "Performance" technical documents.
--
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES -----------------------------------------
---------------------------------------------------------------------------------------------

-- ***** SUPPLY_ORDER_ANALYSIS_SEQ Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2210.upg','Timestamp_2');
PROMPT Creating new sequence tax_document_no_seq to get unique no to TAX_DOCUMENT_TAB
DECLARE
   sequence_name_ VARCHAR2(30) := 'TAX_DOCUMENT_NO_SEQ';
BEGIN
   Database_SYS.Create_Sequence(sequence_name_, 'MAXVALUE 9999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE', TRUE);
END;
/

-- ***** SUPPLY_ORDER_ANALYSIS_SEQ End *****

---------------------------------------------------------------------------------------------
--------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ------------------
---------------------------------------------------------------------------------------------

-- ***** WHSE_SHIPMENT_RECEIPT_INFO_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2210.upg','Timestamp_3');
PROMPT Adding PROJECT_ID and PROJECT_ADDRESS_ID columns to WHSE_SHIPMENT_RECEIPT_INFO_TAB
DECLARE   
   table_name_ VARCHAR2(30) := 'WHSE_SHIPMENT_RECEIPT_INFO_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('PROJECT_ID', 'VARCHAR2(10)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('PROJECT_ADDRESS_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2210.upg','Timestamp_4');
PROMPT Adding new index WHSE_SHIPMENT_RECEIPT_INFO_IX6 to WHSE_SHIPMENT_RECEIPT_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'WHSE_SHIPMENT_RECEIPT_INFO_IX6';
   table_name_ VARCHAR2(30) := 'WHSE_SHIPMENT_RECEIPT_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT');
   Database_SYS.Set_Table_Column(columns_, 'WAREHOUSE_ID');
   Database_SYS.Set_Table_Column(columns_, 'ADDRESS_TYPE');
   Database_SYS.Set_Table_Column(columns_, 'PROJECT_ID');
   Database_SYS.Set_Table_Column(columns_, 'PROJECT_ADDRESS_ID');
   Database_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** WHSE_SHIPMENT_RECEIPT_INFO_TAB End *****

-- ***** SUPP_OUTBOUND_ADDR_INFO_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2210.upg','Timestamp_5');
PROMPT CREATE TABLE SUPP_OUTBOUND_ADDR_INFO_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'SUPP_OUTBOUND_ADDR_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SUPPLIER_ID', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ADDRESS_ID', 'VARCHAR2(50)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'DELIVERY_TERMS', 'VARCHAR2(5)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'DEL_TERMS_LOCATION', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SHIP_VIA_CODE', 'VARCHAR2(3)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'FORWARD_AGENT_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_TYPE', 'VARCHAR2(3)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_UNCON_STRUCT', 'VARCHAR2(5)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2210.upg','Timestamp_6');
PROMPT ADD INDEX SUPP_OUTBOUND_ADDR_INFO_PK FOR COLUMNS SUPPLIER_ID AND ADDRESS_ID IN SUPP_OUTBOUND_ADDR_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'SUPP_OUTBOUND_ADDR_INFO_PK';
   table_name_ VARCHAR2(30) := 'SUPP_OUTBOUND_ADDR_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SUPPLIER_ID');
   Database_SYS.Set_Table_Column(columns_, 'ADDRESS_ID');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2210.upg','Timestamp_7');
PROMPT ADD INDEX SUPP_OUTBOUND_ADDR_INFO_RK FOR COLUMN ROWKEY IN SUPP_OUTBOUND_ADDR_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'SUPP_OUTBOUND_ADDR_INFO_RK';
   table_name_ VARCHAR2(30) := 'SUPP_OUTBOUND_ADDR_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** SUPP_OUTBOUND_ADDR_INFO_TAB End *****

-- ***** TAX_DOCUMENT_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2210.upg','Timestamp_8');
PROMPT Creating TAX_DOCUMENT_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'TAX_DOCUMENT_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'TAX_DOCUMENT_NO', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'DIRECTION', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT', 'VARCHAR2(5)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF_TYPE', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF1', 'VARCHAR2(50)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'CREATED_DATE', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'SENDER_TYPE', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'SENDER_ID', 'VARCHAR2(50)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'SENDER_ADDR_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'BRANCH', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_TYPE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDR_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS_NAME', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS1', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS2', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS3', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS4', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS5', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS6', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ZIP_CODE', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_CITY', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_STATE', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_COUNTY', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_COUNTRY', 'VARCHAR2(2)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ADDR_FLAG', 'VARCHAR2(1)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_ADDR_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TAX_DOCUMENT_TEXT', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'BUSINESS_TRANSACTION_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Set_Table_Column(columns_, 'ROWSTATE', 'VARCHAR2(20)', 'N');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/


exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2210.upg','Timestamp_9');
PROMPT Adding constraints for TAX_DOCUMENT_PK  
DECLARE
   index_name_ VARCHAR2(30) := 'TAX_DOCUMENT_PK';
   table_name_ VARCHAR2(30) := 'TAX_DOCUMENT_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COMPANY');
   Database_SYS.Set_Table_Column(columns_, 'TAX_DOCUMENT_NO');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/


DECLARE
   index_name_ VARCHAR2(30) := 'TAX_DOCUMENT_RK';
   table_name_ VARCHAR2(30) := 'TAX_DOCUMENT_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** TAX_DOCUMENT_TAB End *****

-- ***** TAX_DOCUMENT_LINE_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2210.upg','Timestamp_10');
PROMPT Creating TAX_DOCUMENT_LINE_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'TAX_DOCUMENT_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'TAX_DOCUMENT_NO', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'LINE_NO', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF1', 'VARCHAR2(50)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF2', 'VARCHAR2(50)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF3', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF4', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PART_DESCRIPTION', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PRICE', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'TAX_CALC_STRUCTURE_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ACQUISITION_ORIGIN', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ACQUISITION_REASON_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'STATISTICAL_CODE', 'VARCHAR2(15)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'BUSINESS_OPERATION', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'NET_AMOUNT', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'TAX_AMOUNT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'GROSS_AMOUNT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TAX_AMOUNT_ACC_CURR', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TAX_AMOUNT_PARALLEL_CURR', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TAX_DOCUMENT_LINE_TEXT', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2210.upg','Timestamp_11');
PROMPT Adding constraints for TAX_DOCUMENT_LINE_PK
DECLARE
   index_name_ VARCHAR2(30) := 'TAX_DOCUMENT_LINE_PK';
   table_name_ VARCHAR2(30) := 'TAX_DOCUMENT_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COMPANY');
   Database_SYS.Set_Table_Column(columns_, 'TAX_DOCUMENT_NO');
   Database_SYS.Set_Table_Column(columns_, 'LINE_NO');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'TAX_DOCUMENT_LINE_RK';
   table_name_ VARCHAR2(30) := 'TAX_DOCUMENT_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** TAX_DOCUMENT_LINE_TAB End *****


-- ***** Business_Transaction_Id_Tab Start *****
-- gelr:brazilian_specific_attributes, begin
exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2210.upg','Timestamp_12');
PROMPT Check if BUSINESS_TRANSACTION_CODE_TAB already exists and if so rename it
DECLARE
   old_table_name_ VARCHAR2(30) := 'BUSINESS_TRANSACTION_CODE_TAB';
   new_table_name_ VARCHAR2(30) := 'BUSINESS_TRANSACTION_ID_TAB';
BEGIN
   IF ( Database_SYS.Table_Exist(old_table_name_) AND (NOT(Database_SYS.Table_Exist(new_table_name_))) ) THEN
      Database_SYS.Rename_Table(old_table_name_, new_table_name_, show_info_ => TRUE);
   END IF;
END;
/
-- ***** Business_Transaction_Id_Tab End *****


-- ***** COMPANY_TAX_DISCOM_INFO_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2210.upg','Timestamp_13');
PROMPT Adding CREATE_TAX_DOCUMENT column to COMPANY_TAX_DISCOM_INFO_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'COMPANY_TAX_DISCOM_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CREATE_TAX_DOCUMENT', 'VARCHAR2(5)', 'N', '''FALSE''', keep_default_ => 'N');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

-- ***** COMPANY_TAX_DISCOM_INFO_TAB End *****

--  ***** SITE_DISCOM_INFO_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2210.upg','Timestamp_14');
PROMPT Adding NOT Null Column ADHOC_PUR_RQST_APPROVAL to SITE_DISCOM_INFO_TAB.
DECLARE
   column_       Database_SYS.ColRec;
   table_name_   VARCHAR2(30) := 'SITE_DISCOM_INFO_TAB';
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('ADHOC_PUR_RQST_APPROVAL', 'VARCHAR2(20)', 'N', '''NOT_APPLICABLE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/
--  ***** SITE_DISCOM_INFO_TAB End *****

--  ***** MESSAGE_DEFAULTS_PER_SUPP_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2210.upg','Timestamp_15');
PROMPT Adding NOT Null Column ADHOC_PUR_RQST_APPROVAL to MESSAGE_DEFAULTS_PER_SUPP_TAB.
DECLARE
   column_       Database_SYS.ColRec;
   table_name_   VARCHAR2(30) := 'MESSAGE_DEFAULTS_PER_SUPP_TAB';
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('ADHOC_PUR_RQST_APPROVAL', 'VARCHAR2(20)', 'N', '''NOT_APPLICABLE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);   
END;
/
--  ***** MESSAGE_DEFAULTS_PER_SUPP_TAB End *****

---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES/COLUMNS -----------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE INDEXES/SEQUENCES ------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2210.upg','Timestamp_16');
PROMPT Upgrade statements IN FILE 2210.cdb ends here.

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('DISCOM','2210.upg','Done');
