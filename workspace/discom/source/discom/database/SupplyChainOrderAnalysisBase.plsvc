-----------------------------------------------------------------------------
--
--  Fragment:     SupplyChainOrderAnalysisBase
--  Component:    DISCOM
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-- 2019-01-23  ShKolk  SCUXXW4-2646, Moved projection and client items from SupplyChainPurchaseOrderAnalysis and SupplyChainCustomerOrderAnalysis
-----------------------------------------------------------------------------

layer Core;

FUNCTION Generate_Tree___ (
   source_ref1_ IN VARCHAR2,
   source_ref2_ IN VARCHAR2,
   source_ref3_ IN VARCHAR2,
   source_ref4_ IN VARCHAR2,
   source_type_ IN VARCHAR2 ) RETURN NUMBER
IS
   tree_id_   NUMBER;
BEGIN
   $IF Component_Order_SYS.INSTALLED $THEN
   IF (source_type_ = 'CUSTOMER_ORDER' AND source_ref1_ IS NOT NULL AND source_ref2_ IS NOT NULL AND source_ref3_ IS NOT NULL AND source_ref4_ IS NOT NULL) THEN
      IF (NOT (Customer_Order_Analysis_Initial_Check___(source_ref1_, source_ref2_, source_ref3_, source_ref4_))) THEN
         Error_SYS.Appl_Failure(lu_name_, err_source_ => 'Customer_Order_Analysis_Initial_Check___(source_ref1_, source_ref2_, source_ref3_, source_ref4_)');
      END IF;
   END IF;
   $END
   $IF Component_Purch_SYS.INSTALLED $THEN
   IF (source_type_ = 'PURCHASE_ORDER' AND source_ref1_ IS NOT NULL AND source_ref2_ IS NOT NULL AND source_ref3_ IS NOT NULL ) THEN
      IF (NOT (Purchase_Order_Analysis_Initial_Check___(source_ref1_, source_ref2_, source_ref3_))) THEN
         Error_SYS.Appl_Failure(lu_name_, err_source_ => 'Purchase_Order_Analysis_Initial_Check___(source_ref1_, source_ref2_, source_ref3_)');
      END IF;
   END IF;
   $END
   
	Supply_Order_Analysis_API.Generate_Tree(tree_id_, source_ref1_, source_ref2_, source_ref3_, source_ref4_, source_type_);
	RETURN tree_id_;
END Generate_Tree___;

@DynamicComponentDependency ORDER
FUNCTION Customer_Order_Analysis_Initial_Check___ (
   order_no_     IN VARCHAR2,
   line_no_      IN VARCHAR2,
   rel_no_       IN VARCHAR2,
   line_item_no_ IN VARCHAR2) RETURN BOOLEAN
IS
   found_ BOOLEAN := FALSE;
   dummy_ NUMBER;
   
   CURSOR check_record IS
      SELECT 1
      FROM  customer_order_line_analysis
      WHERE order_no = order_no_
      AND line_no = line_no_
      AND rel_no = rel_no_
      AND line_item_no = line_item_no_;
BEGIN
   OPEN check_record;
   FETCH check_record INTO dummy_;
   IF check_record%FOUND THEN 
      found_ := TRUE;
   END IF ;
   CLOSE check_record;
   RETURN found_;   
END Customer_Order_Analysis_Initial_Check___;

@DynamicComponentDependency PURCH
FUNCTION Purchase_Order_Analysis_Initial_Check___ (
   order_no_     IN VARCHAR2,
   line_no_      IN VARCHAR2,
   rel_no_       IN VARCHAR2) RETURN BOOLEAN
IS
   found_ BOOLEAN := FALSE;
   dummy_ NUMBER;
   
   CURSOR check_record IS
      SELECT 1
      FROM  purchase_order_line_analysis
      WHERE order_no = order_no_
      AND line_no = line_no_
      AND release_no = rel_no_;
BEGIN
   OPEN check_record;
   FETCH check_record INTO dummy_;
   IF check_record%FOUND THEN 
      found_ := TRUE;
   END IF ;
   CLOSE check_record;
   RETURN found_;   
END Purchase_Order_Analysis_Initial_Check___;