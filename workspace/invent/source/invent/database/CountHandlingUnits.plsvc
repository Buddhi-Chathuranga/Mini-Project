-----------------------------------------------------------------------------
--
--  Logical unit: CountHandlingUnits
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------
-- 2019-04-24  SWiclk  SCUXXW4-18412, Removed Get_Handling_Unit_Structure_Level___()
-- 2018-09-29  StHose  SCUXXW4-6054, Converted from frmCountHandlingUnits using MTG Version: 1.29
-----------------------------------------------------------------------------
layer Core;

PROCEDURE Count_Without_Differences___ (
   selection_         IN VARCHAR2,
   count_all_to_zero_ IN VARCHAR2
)
IS
   selection_in_          VARCHAR2(32000) := CONCAT(selection_, ';');
   current_selection_     VARCHAR2(32000);
   info_                  VARCHAR2(3500);
   state_                 VARCHAR2(3500);
   notes_                 VARCHAR2(3500);
   freeze_flag_           VARCHAR2(3500);
   handling_unit_id_list_ VARCHAR2(32000) := NULL;
   handling_unit_id_      NUMBER;
   count_                 NUMBER := 1;
   
BEGIN
   WHILE (INSTR(selection_in_, ';') > 0) LOOP
      current_selection_   := substr(selection_in_, 0, INSTR(selection_in_, ';'));
      handling_unit_id_    := Client_SYS.Get_Key_Reference_Value(current_selection_, 'HANDLING_UNIT_ID');
      Handling_Unit_Extended_Initial_Check___(handling_unit_id_);
      IF (count_ = 1) THEN notes_ := Handling_Unit_API.Get_Note_Text(handling_unit_id_);
       END IF;

      selection_in_        := substr(selection_in_, INSTR(selection_in_, ';')+1);
      handling_unit_id_list_ := handling_unit_id_list_||handling_unit_id_||Client_SYS.record_separator_;
      count_ := count_ + 1;
   END LOOP;

   Handling_Unit_API.New_Counting_Result(info_, freeze_flag_, state_, handling_unit_id_list_, notes_, count_all_to_zero_ );  
END Count_Without_Differences___;

FUNCTION Count_Zero___ (
   selection_         IN VARCHAR2,
   count_all_to_zero_ IN VARCHAR2
) RETURN VARCHAR2
IS
   selection_in_          VARCHAR2(32000) := CONCAT(selection_, ';');
   current_selection_     VARCHAR2(32000);
   info_                  VARCHAR2(3500);
   state_                 VARCHAR2(3500);
   notes_                 VARCHAR2(3500);
   freeze_flag_           VARCHAR2(3500);
   handling_unit_id_list_ VARCHAR2(32000) := NULL;
   count_                 NUMBER := 1;
   handling_unit_id_      NUMBER;
   
BEGIN
   WHILE (INSTR(selection_in_, ';') > 0) LOOP
      current_selection_   := substr(selection_in_, 0, INSTR(selection_in_, ';'));
      handling_unit_id_    := Client_SYS.Get_Key_Reference_Value(current_selection_, 'HANDLING_UNIT_ID');
      Handling_Unit_Extended_Initial_Check___(handling_unit_id_);
      IF (count_ = 1) THEN notes_ := Handling_Unit_API.Get_Note_Text(handling_unit_id_);
      END IF;
      
      selection_in_        := substr(selection_in_, INSTR(selection_in_, ';')+1);
      handling_unit_id_list_ := handling_unit_id_list_||handling_unit_id_||Client_SYS.record_separator_;
      count_ := count_ + 1;
    END LOOP;
    
   Handling_Unit_API.New_Counting_Result(info_ => info_, 
                                         state_ => state_, 
                                         freeze_flag_ => freeze_flag_, 
                                         handling_unit_id_list_ => handling_unit_id_list_, 
                                         notes_ => notes_, 
                                         count_all_to_zero_ => count_all_to_zero_);  

   IF (state_ = 'Rejected') THEN
      RETURN 'Rejected';
   END IF;
   RETURN 'Completed';
END Count_Zero___;

