-----------------------------------------------------------------------------
--
--  Logical unit: InventoryValuePerPeriodAnalysis
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date        Sign    History
--  ----------  ------  ---------------------------------------------------------
--  2020-09-22  JaThlk  SC2020R1-9885, Modified the method Get_Report_Result_Key_Inv_Val_Sum___ to align the parameter names with the method signature.
--  2018-10-08  HSJOSE  SCUXXW4-5559, added in conversion to support dlgInvValCheckRep - Inventory Value Check Report
-----------------------------------------------------------------------------

layer Core;

FUNCTION Get_Report_Result_Key_Check_Rep___ (
   contract_               IN VARCHAR2,
   diff_tolerance_amount_  IN NUMBER) RETURN VARCHAR2
IS
   parameter_attr_               VARCHAR2(32000);
   report_attr_                  VARCHAR2(1000);
   distribution_list_            VARCHAR2(1000) := Fnd_Session_API.Get_Fnd_User;
   result_key_                   NUMBER;
BEGIN

   Client_SYS.Add_To_Attr('CONTRACT', contract_, parameter_attr_);
   Client_SYS.Add_To_Attr('DIFF_TOLERANCE_AMOUNT', diff_tolerance_amount_, parameter_attr_);   
   Client_SYS.Add_To_Attr('REPORT_ID', 'INVENTORY_VALUE_CHECK_REP', report_attr_);

   result_key_ := Report_Format_API.Create_New_Report(report_attr_, parameter_attr_, distribution_list_);
   RETURN result_key_;
END Get_Report_Result_Key_Check_Rep___;

FUNCTION Get_Report_Result_Key_Inv_Val_Rep___ (
   period_year_               IN NUMBER,
   period_no_                 IN NUMBER,
   contract_                  IN VARCHAR2,
   from_part_no_              IN VARCHAR2,
   to_part_no_                IN VARCHAR2,
   level_of_detail_db_        IN VARCHAR2,
   location_group_            IN VARCHAR2) RETURN VARCHAR2
IS
   parameter_attr_               VARCHAR2(32000);
   report_attr_                  VARCHAR2(1000);
   level_of_detail_              VARCHAR2(50);
   distribution_list_            VARCHAR2(1000) := Fnd_Session_API.Get_Fnd_User;
   result_key_                   NUMBER;
BEGIN

   level_of_detail_ := Inv_Value_Rep_Detail_Level_API.Decode(level_of_detail_db_);
   
   Client_SYS.Add_To_Attr('Q_STAT_YEAR_NO', period_year_, parameter_attr_);
   Client_SYS.Add_To_Attr('Q_STAT_PERIOD_NO', period_no_, parameter_attr_);
   Client_SYS.Add_To_Attr('CONTRACT', contract_, parameter_attr_);
   Client_SYS.Add_To_Attr('Q_FROM_PART_NO', from_part_no_, parameter_attr_);
   Client_SYS.Add_To_Attr('Q_TO_PART_NO', to_part_no_, parameter_attr_); 
   Client_SYS.Add_To_Attr('Q_DETAIL_LEVEL', level_of_detail_, parameter_attr_);
   Client_SYS.Add_To_Attr('LOCATION_GROUP', location_group_, parameter_attr_);
   Client_SYS.Add_To_Attr('REPORT_ID', 'INVENTORY_VALUE_PRINT_REP', report_attr_);

   result_key_ := Report_Format_API.Create_New_Report(report_attr_, parameter_attr_, distribution_list_);
   RETURN result_key_;
END Get_Report_Result_Key_Inv_Val_Rep___;

FUNCTION Get_Report_Result_Key_Inv_Val_Sum___ (
   stat_year_no_        IN NUMBER,
   stat_period_no_      IN NUMBER,
   contract_            IN VARCHAR2,
   inventory_cost_type_ IN VARCHAR2,
   cost_set_            IN NUMBER,
   include_parts_       IN BOOLEAN,
   criteria1_           IN VARCHAR2,
   criteria1_from_      IN VARCHAR2,
   criteria1_to_        IN VARCHAR2,
   criteria2_           IN VARCHAR2,
   criteria2_from_      IN VARCHAR2,
   criteria2_to_        IN VARCHAR2,
   criteria3_           IN VARCHAR2,
   criteria3_from_      IN VARCHAR2,
   criteria3_to_        IN VARCHAR2,
   criteria4_           IN VARCHAR2,
   criteria4_from_      IN VARCHAR2,
   criteria4_to_        IN VARCHAR2,
   criteria5_           IN VARCHAR2,
   criteria5_from_      IN VARCHAR2,
   criteria5_to_        IN VARCHAR2 ) RETURN VARCHAR2
IS
   parameter_attr_            VARCHAR2(32000);
   report_attr_               VARCHAR2(1000);
   all_parts_                 VARCHAR2(50);
   distribution_list_         VARCHAR2(1000) := Fnd_Session_API.Get_Fnd_User;
   result_key_                NUMBER;
   criteria_1_                VARCHAR2(50);
   criteria_2_                VARCHAR2(50);
   criteria_3_                VARCHAR2(50);
   criteria_4_                VARCHAR2(50);
   criteria_5_                VARCHAR2(50);
   inv_cost_type_client_      VARCHAR2(50);
   
BEGIN

   IF include_parts_ THEN 
      all_parts_ := Gen_Yes_No_API.Decode(Gen_Yes_No_API.DB_YES);
   ELSE
      all_parts_ := Gen_Yes_No_API.Decode(Gen_Yes_No_API.DB_NO);
   END IF;
   
   criteria_1_ := Inventory_Value_Rep_Param_API.Decode(criteria1_);
   criteria_2_ := Inventory_Value_Rep_Param_API.Decode(criteria2_);
   criteria_3_ := Inventory_Value_Rep_Param_API.Decode(criteria3_);
   criteria_4_ := Inventory_Value_Rep_Param_API.Decode(criteria4_);
   criteria_5_ := Inventory_Value_Rep_Param_API.Decode(criteria5_);
   
   inv_cost_type_client_ := Inventory_Cost_Type_API.Decode(inventory_cost_type_);
   
   Client_SYS.Add_To_Attr('YEAR', stat_year_no_, parameter_attr_);
   Client_SYS.Add_To_Attr('PERIOD', stat_period_no_, parameter_attr_);
   Client_SYS.Add_To_Attr('CONTRACT', contract_, parameter_attr_);
   Client_SYS.Add_To_Attr('INVENTORY_COST_TYPE', inv_cost_type_client_, parameter_attr_); 
   Client_SYS.Add_To_Attr('COST_SET', cost_set_, parameter_attr_);
   Client_SYS.Add_To_Attr('ALL_PARTS', all_parts_, parameter_attr_);
   Client_SYS.Add_To_Attr('CRITERIA_1', criteria_1_, parameter_attr_);
   Client_SYS.Add_To_Attr('CRITERIA_1_FROM', criteria1_from_, parameter_attr_);
   Client_SYS.Add_To_Attr('CRITERIA_1_TO', criteria1_to_, parameter_attr_);
   Client_SYS.Add_To_Attr('CRITERIA_2', criteria_2_, parameter_attr_);
   Client_SYS.Add_To_Attr('CRITERIA_2_FROM', criteria2_from_, parameter_attr_);
   Client_SYS.Add_To_Attr('CRITERIA_2_TO', criteria2_to_, parameter_attr_);
   Client_SYS.Add_To_Attr('CRITERIA_3', criteria_3_, parameter_attr_);
   Client_SYS.Add_To_Attr('CRITERIA_3_FROM', criteria3_from_, parameter_attr_);
   Client_SYS.Add_To_Attr('CRITERIA_3_TO', criteria3_to_, parameter_attr_);
   Client_SYS.Add_To_Attr('CRITERIA_4', criteria_4_, parameter_attr_);
   Client_SYS.Add_To_Attr('CRITERIA_4_FROM', criteria4_from_, parameter_attr_);
   Client_SYS.Add_To_Attr('CRITERIA_4_TO', criteria4_to_, parameter_attr_);
   Client_SYS.Add_To_Attr('CRITERIA_5', criteria_5_, parameter_attr_);
   Client_SYS.Add_To_Attr('CRITERIA_5_FROM', criteria5_from_, parameter_attr_);
   Client_SYS.Add_To_Attr('CRITERIA_5_TO', criteria5_to_, parameter_attr_);
   Client_SYS.Add_To_Attr('REPORT_ID', 'INVENTORY_VALUE_SUM_REP', report_attr_);

   result_key_ := Report_Format_API.Create_New_Report(report_attr_, parameter_attr_, distribution_list_);
   RETURN result_key_;
END Get_Report_Result_Key_Inv_Val_Sum___;

FUNCTION Get_Part_Type_Db___(
   part_type_ IN VARCHAR2) RETURN VARCHAR2
IS   
BEGIN
   RETURN part_type_;
END Get_Part_Type_Db___;