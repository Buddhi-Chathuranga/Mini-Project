------------------------------------------------------------------------------
--  Module     : INVENT
---
--  Filename   : Mvb_InventFactInventoryTransactionHist.api
--  
--  ---
--  Purpose    : Installs Business Intelligence specific view for Refreshing Data for
--               Datamart version of FactInventoryTransactionHist in component INVENT
--
------------------------------------------------------------------------------
--  Date    Sign    History
--  ------  ------  ----------------------------------------------------------
--  150714  IsSalk  KES-924, Added columns SOURCE_REF1, SOURCE_REF2, SOURCE_REF3, SOURCE_REF4, SOURCE_REF5 and SOURCE_REF_TYPE
--  150703  AyAmlk  BOULDER-1950, Replicate the changes correspond to the IdColumnName property in the model.
--  150714          to the table INVENT_TRANS_HIST_MVT.
--  150616  AyAmlk  BOULDER-1949, Handled NULL instance of dim_scrapping_cause_id and 
--  150616          dim_return_cause_id dimension identifiers.
--  150409  AyAmlk  BOULDER-1051, Created.
------------------------------------------------------------------------------

------------------------------------------------------------------------------
-- Create Basic MV source view, i.e. the old MV select statement
-- Related to entity FACT_INVENT_TRANS_HIST
------------------------------------------------------------------------------
DEFINE MODULE      = INVENT
DEFINE MVB_VIEW    = INVENT_TRANS_HIST_MVB
DEFINE LU          = BiFactInventTransHist

-- Create Basic view that selects source info for the entity
PROMPT Creating snapshot MVB view &MVB_VIEW
CREATE OR REPLACE VIEW &MVB_VIEW
AS
SELECT
   -- original key columns 
   transaction_id                                            transaction_id_key,
   -- measure items
   quantity                                                  quantity,
   DECODE(direction, '+', quantity, '-', -quantity, 0)       quantity_change,
   catch_quantity                                            catch_quantity,
   Inventory_Transaction_Hist_API.Get_Cost(transaction_id)   cost,
   quantity*Inventory_Transaction_Hist_API.Get_Cost(transaction_id)
                                                             inventory_cost,
   Inventory_Transaction_Cost_API.Get_Sum_Unit_Cost(transaction_id,'TRUE','TRUE')
                                                             sum_unit_cost,
   quantity*Inventory_Transaction_Cost_API.Get_Sum_Unit_Cost(transaction_id,'TRUE','TRUE')
                                                             total_cost,
   1                                                         count_transaction,
   DECODE(direction, '-', 1, 0)                              count_decrease_transaction,
   DECODE(direction, '+', 1, 0)                              count_increase_transaction,
   DECODE(direction, '0', 1, 0)                              count_unaffected_transaction,
   -- light items
   transaction_id                                            transaction_id,
   configuration_id                                          configuration_id,
   lot_batch_no                                              lot_batch_no,
   serial_no                                                 serial_no,
   waiv_dev_rej_no                                           waiv_dev_rej_no,
   eng_chg_level                                             eng_chg_level,
   source_ref1                                               source_ref1,
   source_ref2                                               source_ref2,
   source_ref3                                               source_ref3,
   source_ref4                                               source_ref4,
   source_ref5                                               source_ref5,
   source_ref_type                                           source_ref_type,
   userid                                                    userid,
   source                                                    source,
   direction                                                 direction,
   -- dimension identifiers
   Site_API.Get_Company(contract)                            dim_company_id,
   contract                                                  dim_site_id,
   contract||'^'||part_no                                    dim_inventory_part_id,
   transaction_code                                          dim_mpccom_transaction_code_id,
   contract||'^'||NVL(location_no,'#')                       dim_inventory_location_id,
   NVL(condition_code,'#')                                   dim_condition_code_id,
   (CASE
      WHEN transaction_code IN('INVSCPCOR', 'CO-SCRPCOR',
                               'SCPCREDIT', 'INVSCRAP',
                               'CO-SCRAP',  'PICKSCRAP',
                               'TO4-OPREP', 'PSSCRAP',
                               'RPSSCRAP',  'REP-SCRAP',
                               'UNREPSCRAP','OERET-SPEX',
                               'OPFEED-SCP','OERET-SPNO',
                               'OERET-SCP', 'UNSODSPSCP',
                               'UNOPFDSCP', 'SODSPSCP',
                               'OERET-SINT','OERET-SPNC',
                               'RET-CHARGE','CO-SCPCRED',
                               'CO-PCKSCRP') 
      THEN NVL(reject_code, '#')
      ELSE '#'
   END)                                                      dim_scrapping_cause_id,
   (CASE
      WHEN transaction_code NOT IN('INVSCPCOR', 'CO-SCRPCOR',
                                   'SCPCREDIT', 'INVSCRAP',
                                   'CO-SCRAP',  'PICKSCRAP',
                                   'TO4-OPREP', 'PSSCRAP',
                                   'RPSSCRAP',  'REP-SCRAP',
                                   'UNREPSCRAP','OERET-SPEX',
                                   'OPFEED-SCP','OERET-SPNO',
                                   'OERET-SCP', 'UNSODSPSCP',
                                   'UNOPFDSCP', 'SODSPSCP',
                                   'OERET-SINT','OERET-SPNC',
                                   'RET-CHARGE','CO-SCPCRED',
                                   'CO-PCKSCRP') 
      THEN NVL(reject_code, '#')
      ELSE '#'
   END)                                                      dim_return_cause_id,
   NVL(project_id, '#')                                      dim_project_id,
   NVL(activity_seq, 0)                                      dim_activity_id,
   Statistic_Period_API.Get_Stat_Year_No(date_applied)||'^'||Statistic_Period_API.Get_Stat_Period_No(date_applied)
                                                             dim_statistic_period_id,
   TRUNC(date_created)                                       dim_ith_date_created_id,
   TRUNC(date_applied)                                       dim_ith_date_applied_id,
   NVL(TRUNC(expiration_date),TO_DATE('1900-01-01','YYYY-MM-DD','NLS_CALENDAR=Gregorian'))    
                                                             dim_ith_expiration_date_id,
   Site_API.Get_Company(contract)||'^'||TO_CHAR(TRUNC(date_applied),'YYYY-MM-DD')
                                                             dim_rpd_company_period_id,
   TRUNC(date_applied)                                       dim_rpd_period_id,
   -- joiners
   Site_API.Get_Company(contract)                            company,
   contract                                                  site,
   part_no                                                   inventory_part,
   transaction_code                                          mpccom_transaction_code,
   location_no                                               inventory_location,
   condition_code                                            condition_code,
   (CASE
      WHEN transaction_code IN('INVSCPCOR', 'CO-SCRPCOR',
                               'SCPCREDIT', 'INVSCRAP',
                               'CO-SCRAP',  'PICKSCRAP',
                               'TO4-OPREP', 'PSSCRAP',
                               'RPSSCRAP',  'REP-SCRAP',
                               'UNREPSCRAP','OERET-SPEX',
                               'OPFEED-SCP','OERET-SPNO',
                               'OERET-SCP', 'UNSODSPSCP',
                               'UNOPFDSCP', 'SODSPSCP',
                               'OERET-SINT','OERET-SPNC',
                               'RET-CHARGE','CO-SCPCRED',
                               'CO-PCKSCRP') 
      THEN reject_code 
   END)                                                      scrapping_cause,
   (CASE
      WHEN transaction_code NOT IN('INVSCPCOR', 'CO-SCRPCOR',
                                   'SCPCREDIT', 'INVSCRAP',
                                   'CO-SCRAP',  'PICKSCRAP',
                                   'TO4-OPREP', 'PSSCRAP',
                                   'RPSSCRAP',  'REP-SCRAP',
                                   'UNREPSCRAP','OERET-SPEX',
                                   'OPFEED-SCP','OERET-SPNO',
                                   'OERET-SCP', 'UNSODSPSCP',
                                   'UNOPFDSCP', 'SODSPSCP',
                                   'OERET-SINT','OERET-SPNC',
                                   'RET-CHARGE','CO-SCPCRED',
                                   'CO-PCKSCRP') 
      THEN reject_code 
   END)                                                      return_cause,
   project_id                                                project,
   activity_seq                                              activity,
   Statistic_Period_API.Get_Stat_Year_No(date_applied)       stat_year,
   Statistic_Period_API.Get_Stat_Period_No(date_applied)     stat_period,
   TRUNC(date_created)                                       ith_date_created,
   TRUNC(date_applied)                                       ith_date_applied,
   TRUNC(expiration_date)                                    ith_expiration_date,
   TRUNC(date_applied)                                       reporting_date,
   -- unique key
   transaction_id                                            id
FROM INVENTORY_TRANSACTION_HIST_TAB
WITH read only;

COMMENT ON TABLE &MVB_VIEW
   IS 'LU=&LU^PROMPT=Bi Fact Inventory Transaction History^MODULE=&MODULE^';

------------------------------------------------------------------------------
-- Make sure to create the source view (MVS) at this point but only if there
-- are any entities that have been registered to use the MVB view.
-- The reason is to be able to handle upgrades that affects the source view but
-- not the incremental metadata. 
------------------------------------------------------------------------------
BEGIN
   Is_Mv_Util_API.Create_Mvs_View('&MVB_VIEW');
   COMMIT;
END;
/
   
------------------------------------------------------------------------------

UNDEFINE MODULE
UNDEFINE MVB_VIEW    
UNDEFINE LU          
