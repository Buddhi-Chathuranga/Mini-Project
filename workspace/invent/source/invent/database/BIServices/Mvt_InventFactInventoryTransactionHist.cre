-----------------------------------------------------------------------------
--  Module : INVENT
--  
--  File   : Mvt_InventFactInventoryTransactionHist.cre
--
--  IFS Developer Studio Template Version 2.5
--
--  Date    Sign    History
--  ------  ------  ----------------------------------------------------------
--  150714  IsSalk  KES-924, Added columns SOURCE_REF1, SOURCE_REF2, SOURCE_REF3, SOURCE_REF4, SOURCE_REF5 and SOURCE_REF_TYPE
--  150714         to the table INVENT_TRANS_HIST_MVT.
--  150703  AyAmlk  BOULDER-1950, Replicate the changes correspond to the IdColumnName
--  150703          property in the model.
--  150409  AyAmlk  BOULDER-1051, Incremental Update implementation
------------------------------------------------------------------------------

DEFINE MODULE      = INVENT
DEFINE MVT_TABLE   = INVENT_TRANS_HIST_MVT
DEFINE LU          = BiFactInventTransHist

---------------------------------------------------------------------
--Create &MVT_TABLE
---------------------------------------------------------------------
PROMPT Create snapshot table &MVT_TABLE
DECLARE 
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := '&MVT_TABLE';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_,'TRANSACTION_ID_KEY', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_,'QUANTITY', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'QUANTITY_CHANGE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CATCH_QUANTITY', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COST', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'INVENTORY_COST', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SUM_UNIT_COST', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'TOTAL_COST', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_TRANSACTION', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_DECREASE_TRANSACTION', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_INCREASE_TRANSACTION', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COUNT_UNAFFECTED_TRANSACTION', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'TRANSACTION_ID', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CONFIGURATION_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'LOT_BATCH_NO', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SERIAL_NO', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'WAIV_DEV_REJ_NO', 'VARCHAR2(15)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ENG_CHG_LEVEL', 'VARCHAR2(6)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SOURCE_REF1', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SOURCE_REF2', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SOURCE_REF3', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SOURCE_REF4', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SOURCE_REF5', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SOURCE_REF_TYPE', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'USERID', 'VARCHAR2(30)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SOURCE', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIRECTION', 'VARCHAR2(1)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_COMPANY_ID', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SITE_ID', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_INVENTORY_PART_ID', 'VARCHAR2(31)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_MPCCOM_TRANSACTION_CODE_ID', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_INVENTORY_LOCATION_ID', 'VARCHAR2(41)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_CONDITION_CODE_ID', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_SCRAPPING_CAUSE_ID', 'VARCHAR2(8)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_RETURN_CAUSE_ID', 'VARCHAR2(8)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_PROJECT_ID', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_ACTIVITY_ID', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_STATISTIC_PERIOD_ID', 'VARCHAR2(81)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_ITH_DATE_CREATED_ID', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_ITH_DATE_APPLIED_ID', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_ITH_EXPIRATION_DATE_ID', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_RPD_COMPANY_PERIOD_ID', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'DIM_RPD_PERIOD_ID', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'COMPANY', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SITE', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'INVENTORY_PART', 'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'MPCCOM_TRANSACTION_CODE', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'INVENTORY_LOCATION', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'CONDITION_CODE', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'SCRAPPING_CAUSE', 'VARCHAR2(8)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'RETURN_CAUSE', 'VARCHAR2(8)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'PROJECT', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ACTIVITY', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'STAT_YEAR', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'STAT_PERIOD', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ITH_DATE_CREATED', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ITH_DATE_APPLIED', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ITH_EXPIRATION_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'REPORTING_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_,'ID', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_,'MVT_CREATED_DT', 'DATE', 'N');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END; 
/

---------------------------------------------------------------------
-- Create constraint and indexes
---------------------------------------------------------------------
PROMPT Create constraint and index(s) on snapshot table &MVT_TABLE
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MVT_TABLE';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_, 'transaction_id_key');
   Database_Sys.Create_Constraint( table_name_,
                                   constraint_name_,
                                   columns_,
                                   'P',
                                   '&IFSAPP_INDEX',
                                   NULL,
                                   TRUE,
                                   TRUE);
   Database_SYS.Reset_Column_Table(columns_);
   
END;
/   


UNDEFINE MODULE
UNDEFINE MVT_TABLE
UNDEFINE LU
