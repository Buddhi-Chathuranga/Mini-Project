---------------------------------------------------------------------------------------------
--  Module : INVENT
--
--  Purpose: File for upgrade BI Services from version 15.0.0 to 21.1.0 
--
--  File   : 2110.upg
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  ------------------------------------------------------------------------
--  200921   WaSalk  SC2020R1-9680, Created to Materialized View change create clause 
--  200921           to support Oracle EBR  in the IFS2020R1 framework.
--  ------   ------  ------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SET SERVEROUTPUT ON
exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_1');
PROMPT START upgrading WITH 2110.upg

---------------------------------------------------------------------------------------------
------------------------------ Instructions for upg files -----------------------------------
---------------------------------------------------------------------------------------------
--
--  Main section should contain all upgrade operations.
--  Next section should contain removal of obsolete objects (any removal of data inside upg is prohibited!).
--  Removal of backup tables and obsolete columns should be added to <component>Cl.sql script!
--
--  If possible, everything regarding one table should be placed in one section.
--  If this is not possible, a proper comment about the reason should be added.
--
--  Each section should be started with a "-----" line and a empty line.
--  This section should then start with a line like: "-- ***** Example_Tab Start *****"
--  and end with a line like:                       "-- ***** Example_Tab End *****"
--
--  Don't forget UPPER/lower case !
--
--  Every part inside the section should start with a "PROMPT" line explaining what is done by the block.
--
--  If the PL/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.
--
--  Remember ordinary coding standard rules !
--
--  Don't drop any Table/Column !
--
--  Don't forget performance when updating large table !
--
--  No unnecessary blank lines or comments !
--
--  If possible, use pure SQL commands
--
--  If possible, try to group several updates together in one statement.
--
--  Timestamps will be added automatically at the end of the project.
--
--  For more information refer to the "Upgrade Script Standards" and the "Performance" technical documents.
--
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES -----------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
--------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ------------------
---------------------------------------------------------------------------------------------

------------------------------------------------------------------

-- ***** INVENT_TRANS_HIST_CMV - Start *****

DEFINE MV_NAME       = INVENT_TRANS_HIST_CMV
DEFINE SOURCE_TABLE  = INVENTORY_TRANSACTION_HIST_TAB
exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_2');
PROMPT Creating VIEW &MV_NAME

DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('&MV_NAME',TRUE);
   stmt_ :=    
      'CREATE MATERIALIZED VIEW &MV_NAME
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION   
       AS
       SELECT MAX(ROWVERSION) MAX_ROWVERSION
       FROM &SOURCE_TABLE';
    
   EXECUTE IMMEDIATE stmt_;  
   
   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('&MV_NAME');
END;
/
exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_3');
PROMPT VIEW &MV_NAME created.
UNDEFINE MV_NAME
UNDEFINE SOURCE_TABLE

-- ***** INVENT_TRANS_HIST_CMV - End *****
------------------------------------------------------------------
 
-- ***** INVENTORY_VALUE_PART_CMV - Start *****

DEFINE MV_NAME       = INVENTORY_VALUE_PART_CMV
DEFINE SOURCE_TABLE  = INVENTORY_VALUE_PART_TAB
exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_4');
PROMPT Creating VIEW &MV_NAME

DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('&MV_NAME',TRUE);
   stmt_ :=    
      'CREATE MATERIALIZED VIEW &MV_NAME
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT MAX(ROWVERSION) MAX_ROWVERSION
       FROM &SOURCE_TABLE';
    
   EXECUTE IMMEDIATE stmt_;  
   
   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('&MV_NAME');
END;
/
exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_5');
PROMPT VIEW &MV_NAME created.
UNDEFINE MV_NAME
UNDEFINE SOURCE_TABLE

-- ***** INVENTORY_VALUE_PART_CMV - End *****
------------------------------------------------------------------
  
-- ***** INVENT_VALUE_PART_DETAIL_CMV - Start *****

DEFINE MV_NAME       = INVENT_VALUE_PART_DETAIL_CMV
DEFINE SOURCE_TABLE  = INVENT_VALUE_PART_DETAIL_TAB
exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_6');
PROMPT Creating VIEW &MV_NAME

DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('&MV_NAME',TRUE);
   stmt_ :=    
      'CREATE MATERIALIZED VIEW &MV_NAME
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION  
       AS
       SELECT MAX(ROWVERSION) MAX_ROWVERSION
       FROM &SOURCE_TABLE';
    
   EXECUTE IMMEDIATE stmt_;  
   
   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('&MV_NAME');
END;
/
exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_7');
PROMPT VIEW &MV_NAME created.
UNDEFINE MV_NAME
UNDEFINE SOURCE_TABLE

-- ***** INVENT_VALUE_PART_DETAIL_CMV - End *****
------------------------------------------------------------------

-- ***** INVENTORY_PART_PERIOD_HIST_CMV - Start *****

DEFINE MV_NAME       = INVENTORY_PART_PERIOD_HIST_CMV
DEFINE SOURCE_TABLE  = INVENTORY_PART_PERIOD_HIST_TAB
exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_8');
PROMPT Creating VIEW &MV_NAME

DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('&MV_NAME',TRUE);
   stmt_ :=    
      'CREATE MATERIALIZED VIEW &MV_NAME
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT MAX(ROWVERSION) MAX_ROWVERSION
       FROM &SOURCE_TABLE';
    
   EXECUTE IMMEDIATE stmt_;  
   
   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('&MV_NAME');
END;
/
exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_9');
PROMPT VIEW &MV_NAME created.
UNDEFINE MV_NAME
UNDEFINE SOURCE_TABLE

-- ***** INVENTORY_PART_PERIOD_HIST_CMV - End *****
------------------------------------------------------------------
 
-- ***** INVENTORY_TRANSACTION_COST_CMV - Start *****

DEFINE MV_NAME       = INVENTORY_TRANSACTION_COST_CMV 
DEFINE SOURCE_TABLE  = INVENTORY_TRANSACTION_COST_TAB
exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_10');
PROMPT Creating VIEW &MV_NAME

DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('&MV_NAME',TRUE);
   stmt_ :=    
      'CREATE MATERIALIZED VIEW &MV_NAME
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT MAX(ROWVERSION) MAX_ROWVERSION
       FROM &SOURCE_TABLE';
    
   EXECUTE IMMEDIATE stmt_;  
   
   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('&MV_NAME');
END;
/
exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_11');
PROMPT VIEW &MV_NAME created.
UNDEFINE MV_NAME
UNDEFINE SOURCE_TABLE

-- ***** INVENTORY_TRANSACTION_COST_CMV - End *****
------------------------------------------------------------------
 
-- ***** COMMODITY_GROUP_MV - Start *****

DEFINE MV         = COMMODITY_GROUP_MV
DEFINE TAB1       = COMMODITY_GROUP_TAB

exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_12');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT commodity_code id,
              commodity_code code,
              description    description,
              min_periods    min_periods
       FROM   &TAB1 
       UNION ALL
       SELECT ''#''          id,
              NULL           code,
              NULL           description,
              NULL           min_periods
       FROM BI_DUAL_TAB
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_13');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);

   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
-- ***** COMMODITY_GROUP_MV - End *****
------------------------------------------------------------------

-- ***** INSPECTION_CODE_MV - Start *****

DEFINE MV         = INSPECTION_CODE_MV
DEFINE TAB1       = INSPECTION_RULE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_14');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT inspection_code id,
              inspection_code code,
              '' ''           description,
              inspection_type inspection_type,
              sample_percent  inspection_percent
       FROM   &TAB1 
       UNION ALL
       SELECT ''#''           id,
              NULL            code,
              NULL            description,
              NULL            inspection_type,
              NULL            inspection_percent
       FROM BI_DUAL_TAB
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_15');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);

   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
-- ***** INSPECTION_CODE_MV - End *****
------------------------------------------------------------------

-- ***** INTERNAL_DESTINATION_MV - Start *****

DEFINE MV         = INTERNAL_DESTINATION_MV
DEFINE TAB1       = INTERNAL_DESTINATION_TAB
DEFINE TAB2       = SITE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_16');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT contract||''^''||destination_id id,
              contract                        contract,
              destination_id                  code,
              description                     description
       FROM   &TAB1 
       UNION ALL
       SELECT contract||''^''||''#''          id,
              contract                        contract,
              NULL                            code,
              NULL                            description
       FROM   &TAB2
       UNION ALL
       SELECT ''#''||''^''||''#''             id,
              NULL                            contract,
              NULL                            code,
              NULL                            description
       FROM BI_DUAL_TAB
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_17');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);

   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
-- ***** INTERNAL_DESTINATION_MV - End *****
------------------------------------------------------------------

-- ***** INVENTORY_LOCATION_GROUP_MV - Start *****

DEFINE MV         = INVENTORY_LOCATION_GROUP_MV
DEFINE TAB1       = INVENTORY_LOCATION_GROUP_TAB

exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_18');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT location_group          id,
              location_group          code,
              description             description,
              inventory_location_type inventory_location_type
       FROM   &TAB1 
       UNION ALL
       SELECT ''#''                   id,
              NULL                    code,
              NULL                    description,
              NULL                    inventory_location_type
       FROM BI_DUAL_TAB
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_19');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);

   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
-- ***** INVENTORY_LOCATION_GROUP_MV - End *****
------------------------------------------------------------------

-- ***** INVENTORY_LOCATION_MV - Start *****

DEFINE MV         = INVENTORY_LOCATION_MV
DEFINE TAB1       = WAREHOUSE_BAY_BIN_TAB
DEFINE TAB2       = SITE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_20');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT contract||''^''||location_no id,
              contract                     contract,
              location_no                  code,
              warehouse_id                 warehouse,
              bay_id                       bay_no,
              row_id                       row_no,
              tier_id                      tier_no,
              bin_id                       bin_no,
              description                  location_name,
              location_group               location_group,
              location_sequence            location_sequence
       FROM   &TAB1 
       UNION ALL
       SELECT contract||''^''||''#''       id,
              contract                     contract,
              NULL                         code,
              NULL                         warehouse,
              NULL                         bay_no,
              NULL                         row_no,
              NULL                         tier_no,
              NULL                         bin_no,
              NULL                         location_name,
              NULL                         location_group,
              NULL                         location_sequence
       FROM   &TAB2
       UNION ALL
       SELECT ''#''||''^''||''#''          id,
              NULL                         contract,
              NULL                         code,
              NULL                         warehouse,
              NULL                         bay_no,
              NULL                         row_no,
              NULL                         tier_no,
              NULL                         bin_no,
              NULL                         location_name,
              NULL                         location_group,
              NULL                         location_sequence
       FROM BI_DUAL_TAB
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_21');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);

   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
-- ***** INVENTORY_LOCATION_MV - End *****
-----------------------------------------------------------------

-- ***** INVENTORY_PART_MV - Start *****

DEFINE MV         = INVENTORY_PART_MV
DEFINE TAB1       = INVENTORY_PART_TAB
DEFINE TAB2       = SITE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_22');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT contract||''^''||part_no                                           id,
              contract                                                           contract,
              part_no                                                            code,
              '' ''                                                              part_desc,
              type_code                                                          type_code,
              unit_meas                                                          unit_meas,
              Inventory_Part_API.Get_Enabled_Catch_Unit_Meas(contract, part_no)  catch_unit_meas,
              prime_commodity                                                    prime_commodity,
              second_commodity                                                   second_commodity,
              part_status                                                        part_status,
              abc_class                                                          abc_class,
              part_product_code                                                  product_code,
              part_product_family                                                product_family,
              supply_chain_part_group                                            supply_chain_part_group,
              inventory_valuation_method                                         inventory_valuation_method,
              inventory_part_cost_level                                          inventory_part_cost_level,
              invoice_consideration                                              invoice_consideration,
              part_cost_group_id                                                 part_cost_group_id,
              Inventory_Part_Planning_API.Get_Planning_Method(contract, part_no) mrp_order_code,
              accounting_group                                                   accounting_group,
              asset_class                                                        asset_class,
              hazard_code                                                        hazard_code,
              lifecycle_stage                                                    lifecycle_stage,
              planner_buyer                                                      planner_buyer
       FROM   &TAB1 
       UNION ALL
       SELECT contract||''^''||''#''                                             id,
              contract                                                           contract,
              NULL                                                               code,
              NULL                                                               part_desc,
              NULL                                                               type_code,
              NULL                                                               unit_meas,
              NULL                                                               catch_unit_meas,
              NULL                                                               prime_commodity,
              NULL                                                               second_commodity,
              NULL                                                               part_status,
              NULL                                                               abc_class,
              NULL                                                               product_code,
              NULL                                                               product_family,
              NULL                                                               supply_chain_part_group,
              NULL                                                               inventory_valuation_method,
              NULL                                                               inventory_part_cost_level,
              NULL                                                               invoice_consideration,
              NULL                                                               part_cost_group_id,
              NULL                                                               mrp_order_code,
              NULL                                                               accounting_group,
              NULL                                                               asset_class,
              NULL                                                               hazard_code,
              NULL                                                               lifecycle_stage,
              NULL                                                               planner_buyer
       FROM   &TAB2
       UNION ALL
       SELECT ''#''||''^''||''#''                                                id,
              NULL                                                               contract,
              NULL                                                               code,
              NULL                                                               part_desc,
              NULL                                                               type_code,
              NULL                                                               unit_meas,
              NULL                                                               catch_unit_meas,
              NULL                                                               prime_commodity,
              NULL                                                               second_commodity,
              NULL                                                               part_status,
              NULL                                                               abc_class,
              NULL                                                               product_code,
              NULL                                                               product_family,
              NULL                                                               supply_chain_part_group,
              NULL                                                               inventory_valuation_method,
              NULL                                                               inventory_part_cost_level,
              NULL                                                               invoice_consideration,
              NULL                                                               part_cost_group_id,
              NULL                                                               mrp_order_code,
              NULL                                                               accounting_group,
              NULL                                                               asset_class,
              NULL                                                               hazard_code,
              NULL                                                               lifecycle_stage,
              NULL                                                               planner_buyer
       FROM BI_DUAL_TAB
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_23');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);

   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
-- ***** INVENTORY_PART_MV - End *****
------------------------------------------------------------------

-- ***** PLANNER_MV - Start *****

DEFINE MV         = PLANNER_MV
DEFINE TAB1       = INVENTORY_PART_PLANNER_TAB

exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_24');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT buyer_code                                            id,
              buyer_code                                            code,
              Inventory_Part_Planner_API.Get_Buyer_Name(buyer_code) name
       FROM   &TAB1 
       UNION ALL
       SELECT ''#''                                                 id,
              NULL                                                  code,
              NULL                                                  name
       FROM BI_DUAL_TAB
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_25');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);

   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
-- ***** PLANNER_MV - End *****
------------------------------------------------------------------

-- ***** TECHNICAL_COORDINATOR_MV - Start *****

DEFINE MV         = TECHNICAL_COORDINATOR_MV
DEFINE TAB1       = TECHNICAL_COORDINATOR_TAB

exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_26');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT technical_coordinator_id                           id,
              technical_coordinator_id                           code,
              Person_Info_API.Get_Name(technical_coordinator_id) name
       FROM   &TAB1 
       UNION ALL
       SELECT ''#''                                              id,
              NULL                                               code,
              NULL                                               name
       FROM BI_DUAL_TAB
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_27');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);

   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
-- ***** TECHNICAL_COORDINATOR_MV - End *****

---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES/COLUMNS -----------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE INDEXES/SEQUENCES ------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Timestamp_28');
PROMPT Upgrade statements IN FILE 2110.upg ends here.

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('INVENT','2110.upg','Done');
