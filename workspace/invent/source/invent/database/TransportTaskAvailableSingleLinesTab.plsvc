-----------------------------------------------------------------------------
--
--  Fragment:     TransportTaskAvailableSingleLinesTab
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date        Sign    History
--  ----------  ------  ---------------------------------------------------------
--  2019-03-18  ChFolk  SCUXXW4-14910, Created to move tabs in transport Task to seperate fragments.
---------------------------------------------------------------------------------

layer Core;

-- The parameter parent_fixed_db_ is used only for transfering parent value to the child in client.
FUNCTION Get_Available_Transport_Task_Lines___( 
   show_details_             IN VARCHAR2,
   parent_transport_task_id_ IN NUMBER,
   from_contract_            IN VARCHAR2,
   to_contract_              IN VARCHAR2,
   from_location_group_      IN VARCHAR2,
   parent_fixed_db_          IN VARCHAR2 ) RETURN Objid_Arr
IS
   base_collection_ Objid_Arr := Objid_Arr();
   CURSOR get_show_all IS
      SELECT objid 
      FROM TRANSPORT_TASK_LINE
       WHERE transport_task_id != parent_transport_task_id_
       AND from_contract = from_contract_
       AND to_contract = to_contract_
       AND from_location_group = from_location_group_
       AND OUTERMOST_HANDLING_UNIT_ID IS NULL
       AND transport_task_status_db = 'CREATED'       
       AND Transport_Task_API.Is_Fixed_Or_Started_Str(transport_task_id) = 'FALSE';     
     
   CURSOR get_show_top_level IS
      SELECT objid 
      FROM TRANSPORT_TASK_LINE
      WHERE transport_task_id != parent_transport_task_id_
      AND from_contract = from_contract_
      AND to_contract = to_contract_
      AND from_location_group = from_location_group_
      AND transport_task_status_db = 'CREATED'   
      AND Transport_Task_API.Is_Fixed_Or_Started_Str(transport_task_id) = 'FALSE';   
  
BEGIN  
   IF (show_details_ = 'ShowAll') THEN
      FOR rec_ IN get_show_top_level LOOP
         base_collection_.extend;
         base_collection_(base_collection_.last) := rec_.objid;
      END LOOP;  
   ELSE  
      FOR rec_ IN get_show_all LOOP
         base_collection_.extend;
         base_collection_(base_collection_.last) := rec_.objid;
      END LOOP;     
   END IF;
   RETURN base_collection_;   
END Get_Available_Transport_Task_Lines___;

PROCEDURE Move_To_Current_Transport_Task___ (
   selection_                 IN VARCHAR2 )
IS    
   parent_transport_task_id_ NUMBER;
   transport_task_id_        NUMBER;
   line_no_                  NUMBER;
   parent_fixed_db_          VARCHAR2(5);   
   current_selection_        VARCHAR2(2000);
   records_                  json_array_t := json_array_t.parse(selection_);
  
BEGIN
   FOR i_ IN 0 .. records_.get_size - 1 LOOP      
      current_selection_ := records_.get_string(i_);
      parent_transport_task_id_ := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Key_Reference_Value(current_selection_, 'PARENT_TRANSPORT_TASK_ID'));
      parent_fixed_db_ := Client_SYS.Get_Key_Reference_Value(current_selection_, 'PARENT_FIXED_DB');
      transport_task_id_ := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Key_Reference_Value(current_selection_, 'TRANSPORT_TASK_ID'));
      line_no_ := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Key_Reference_Value(current_selection_, 'LINE_NO'));
      Transport_Task_Initial_Check___(transport_task_id_);
      Transport_Task_Line_Initial_Check___(transport_task_id_, line_no_);
      
      Transport_Task_Line_API.Move(transport_task_id_, line_no_, parent_transport_task_id_, 'TRUE', parent_fixed_db_); 
   END LOOP;  
END Move_To_Current_Transport_Task___;