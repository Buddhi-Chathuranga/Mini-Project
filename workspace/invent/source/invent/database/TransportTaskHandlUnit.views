-----------------------------------------------------------------------------
--
--  Logical unit: TransportTaskHandlUnit
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  170508  DaZase  STRSC-7996, Added transport_task_status_db on Start_Transport_Task_Process so it can be sorted on.
--  170505  MaEelk  LIM-11270, Added User Allowed filetering to Counting_Report_Handl_Unit
--  170323  DaZase  LIM-2928, Added view Start_Transport_Task_Process.
--  170309  DaZase  LIM-9901, Added view Transp_Task_Handl_Unit_Process.
--  170209  Chfose  LIM-10717, Added compiled-view methods to Transport_Task_Handling_Unit.
--  170119  Erlise  LIM-7315, Changed Transport_Task_Handling_Unit to support aggregated tab.
--  160802  Khvese  LIM-7974, Added column second_level_parent_hu_id to the view Transport_Task_Handling_Unit
--  160215  Erlise  LIM-3655, Added columns.
--  160212  DaZase  LIM-3655, Created+Added View Transport_Task_Handling_Unit.
-----------------------------------------------------------------------------

layer Core;

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------

-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

VIEW Transport_Task_Handling_Unit IS
   Prompt = 'Transport Task Handling Unit'
   Transport_Task_Id.Flags = 'PMI--'
   Transport_Task_Id.Datatype = 'NUMBER'
   Transport_Task_Id.Prompt = 'Transport Task Id' 
   Handling_Unit_Id.Flags = 'AMI--'
   Handling_Unit_Id.Datatype = 'NUMBER' 
   Handling_Unit_Id.Prompt = 'Handling Unit ID'
   Sscc.Flags = 'A-I--'
   Sscc.Datatype = 'STRING(18)'
   Sscc.Prompt = 'SSCC ID'
   Alt_Handling_Unit_Label_Id.Flags = 'A-I--' 
   Alt_Handling_Unit_Label_Id.Datatype = 'STRING(25)'
   Alt_Handling_Unit_Label_Id.Prompt = 'Alt Handling Unit Label ID'
   From_Contract.Flags = 'AMI--'
   From_Contract.Datatype = 'STRING(5)/UPPERCASE' 
   From_Contract.Prompt = 'From Contract'    
   From_Location_No.Flags = 'AMI--'
   From_Location_No.Datatype = 'STRING(35)/UPPERCASE'
   From_Location_No.Prompt =  'From Location No'
   Transport_Task_Status.Flags =  'A--U-'
   Transport_Task_Status.Datatype = 'STRING(200)'
   Transport_Task_Status.Prompt = 'Transport Task Status'
   Transport_Task_Status.Enumeration = 'TransportTaskStatus'
   Transport_Task_Status_Db.Flags =  'A----'
   Transport_Task_Status_Db.Datatype = 'STRING(20)'
   Transport_Task_Status_Db.Prompt = 'Transport Task Status'
   To_Contract.Flags = 'AMIU-' 
   To_Contract.Datatype = 'STRING(5)/UPPERCASE'
   To_Contract.Prompt = 'To Contract' 
   To_Location_No.Flags = 'AMIU-'
   To_Location_No.Datatype = 'STRING(35)/UPPERCASE'
   To_Location_No.Prompt = 'To Location No'
   Forward_To_Location_No.Flags = 'A-IU-'
   Forward_To_Location_No.Datatype = 'STRING(35)/UPPERCASE'
   Forward_To_Location_No.Prompt = 'Forward To Location No' 
   Destination.Flags = 'AMIU-'
   Destination.Datatype = 'STRING(200)'
   Destination.Prompt = 'Destination'
   Destination.Enumeration = 'InventoryPartDestination'
   Destination_Db.Flags =  'A----'
   Destination_Db.Datatype = 'STRING(20)'
   Destination_Db.Prompt = 'Destination'
   From_Location_Group.Flags = 'A----'
   From_Location_Group.Datatype = 'STRING(5)/UPPERCASE'
   From_Location_Group.Prompt =  'From Location Group'
   Create_Date.Flags = 'A----'
   Create_Date.Datatype = 'DATE/DATE'
   Create_Date.Prompt = 'Create Date'   
   Handling_Unit_Type_Id.Flags = 'A----'
   Handling_Unit_Type_Id.Datatype = 'STRING(25)/UPPERCASE'
   Handling_Unit_Type_Id.Prompt = 'Handling Unit Type ID'
   Parent_Handling_Unit_Id.Flags = 'A----'
   Parent_Handling_Unit_Id.Datatype = 'NUMBER'
   Parent_Handling_Unit_Id.Prompt = 'Parent Handling Unit ID'
   Second_Level_Parent_Hu_Id.Flags = 'A----'
   Second_Level_Parent_Hu_Id.Datatype = 'NUMBER'
   Second_Level_Parent_Hu_Id.Prompt = 'Second Level Parent Handling Unit ID'
   Top_Parent_Handling_Unit_Id.Flags = 'A----'
   Top_Parent_Handling_Unit_Id.Datatype = 'NUMBER'
   Top_Parent_Handling_Unit_Id.Prompt = 'Top Parent Handling Unit ID'
   Structure_Level.Flags = 'A----'
   Structure_Level.Datatype = 'NUMBER'
   Structure_Level.Prompt = 'Structure Level'
   Stackable_Db.Flags = 'A----'
   Stackable_Db.Datatype = 'STRING(20)'
   Stackable_Db.Prompt = 'Stackable Db'
   Width.Flags = 'A----'
   Width.Datatype = 'NUMBER'
   Width.Prompt = 'Width'
   Height.Flags = 'A----'
   Height.Datatype = 'NUMBER' 
   Height.Prompt = 'Height'
   Depth.Flags = 'A----'
   Depth.Datatype = 'NUMBER'
   Depth.Prompt = 'Depth'
   Uom_For_Length.Flags = 'A----'
   Uom_For_Length.Datatype = 'STRING(30)'
   Uom_For_Length.Prompt = 'Uom for Length'
   Operative_Gross_Weight.Flags = 'A----'
   Operative_Gross_Weight.Datatype = 'NUMBER'
   Operative_Gross_Weight.Prompt = 'Operative Gross Weight'
   Net_Weight.Flags = 'A----'
   Net_Weight.Datatype = 'NUMBER'
   Net_Weight.Prompt = 'Net Weight'
   Tare_Weight.Flags = 'A----'
   Tare_Weight.Datatype = 'NUMBER'
   Tare_Weight.Prompt = 'Tare Weight'
   Max_Volume_Capacity.Flags = 'A----'
   Max_Volume_Capacity.Datatype = 'NUMBER'
   Max_Volume_Capacity.Prompt = 'Max Volume Capacity'
   Max_Weight_Capacity.Flags = 'A----'
   Max_Weight_Capacity.Datatype = 'NUMBER'
   Max_Weight_Capacity.Prompt = 'Max Weight Capacity'
   Uom_For_Weight.Flags = 'A----'
   Uom_For_Weight.Datatype = 'STRING(30)'
   Uom_For_Weight.Prompt = 'Uom for Weight'
   Operative_Volume.Flags = 'A----'
   Operative_Volume.Datatype = 'NUMBER'
   Operative_Volume.Prompt = 'Operative Volume'
   Uom_For_Volume.Flags = 'A----'
   Uom_For_Volume.Datatype = 'STRING(30)'
   Uom_For_Volume.Prompt = 'Uom for Volume'
   Is_In_Stock.Flags = 'A----'
   Is_In_Stock.Datatype = 'STRING(5)'
   Is_In_Stock.Prompt = 'Is in Stock'
   Is_In_Inventory_Transit.Flags = 'A----'
   Is_In_Inventory_Transit.Datatype = 'STRING(5)'
   Is_In_Inventory_Transit.Prompt = 'Is in Inventory Transit'
   Is_In_Project_Inventory.Flags = 'A----'
   Is_In_Project_Inventory.Datatype = 'STRING(5)'
   Is_In_Project_Inventory.Prompt = 'Is in Project Inventory'
   Part_No.Prompt = 'Part No'
   Part_No.Flags = 'A----'
   Part_No.Datatype = 'STRING(25)'
   Configuration_Id.Prompt = 'Configuration ID'
   Configuration_Id.Flags = 'A----'
   Configuration_Id.Datatype = 'STRING(50)'   
   Lot_Batch_No.Prompt = 'Lot/Batch No'
   Lot_Batch_No.Flags = 'A----'
   Lot_Batch_No.Datatype = 'STRING(20)'
   Serial_No.Prompt = 'Serial No'
   Serial_No.Flags = 'A----'
   Serial_No.Datatype = 'STRING(50)'
   Condition_Code.Prompt = 'Condition Code'
   Condition_Code.Flags = 'A----'
   Condition_Code.Datatype = 'STRING(10)'
   Eng_Chg_Level.Prompt = 'Eng Chg Level'
   Eng_Chg_Level.Flags = 'A----'
   Eng_Chg_Level.Datatype = 'STRING(6)'
   Waiv_Dev_Rej_No.Prompt = 'Waiv/Dev/Rej No'
   Waiv_Dev_Rej_No.Flags = 'A----'
   Waiv_Dev_Rej_No.Datatype = 'STRING(15)'
   Availability_Control_Id.Prompt = 'Availability Control ID'
   Availability_Control_Id.Flags = 'A----'
   Availability_Control_Id.Datatype = 'STRING(25)'
   Availability_Control_Desc.Prompt = 'Availability Control Description'
   Availability_Control_Desc.Flags = 'A----'
   Availability_Control_Desc.Datatype = 'STRING(50)'
   Part_Ownership.Prompt = 'Part Ownership'
   Part_Ownership.Flags = 'A----'
   Part_Ownership.Datatype = 'STRING(200)'
   Owner.Prompt = 'Owner'
   Owner.Flags = 'A----'
   Owner.Datatype = 'STRING(20)'
   Owner_Name.Prompt = 'Owner Name'
   Owner_Name.Flags = 'A----'
   Owner_Name.Datatype = 'STRING(100)'
   Project_Id.Prompt = 'Project ID'
   Project_Id.Flags = 'A----'
   Project_Id.Datatype = 'STRING(10)'
   Program_Id.Datatype = 'STRING(10)'
   Program_Id.Prompt = 'Program ID'
   Program_Id.Flags = 'A----'
   Activity_No.Datatype = 'STRING(10)'
   Activity_No.Prompt = 'Activity No'
   Activity_No.Flags = 'A----'
   Sub_Project_Id.Datatype = 'STRING(10)'
   Sub_Project_Id.Prompt = 'Sub Project ID'
   Sub_Project_Id.Flags = 'A----'
   Activity_Seq.Prompt = 'Activity Seq'
   Activity_Seq.Flags = 'A----'
   Activity_Seq.Datatype = 'NUMBER'
   Outermost_Db.Flags = 'A----'
   Outermost_Db.Datatype = 'STRING(5)'
   Outermost_Hu_Id.Flags = 'A----'
   Outermost_Hu_Id.Datatype = 'NUMBER' 
   Outermost_Hu_Id.Prompt = 'Outermost Handling Unit ID'
SELECT huss.source_ref1                                                       transport_task_id,
       huss.handling_unit_id                                                  handling_unit_id,
       huss.sscc                                                              sscc,
       huss.alt_handling_unit_label_id                                        alt_handling_unit_label_id,
       huss.contract                                                          from_contract,
       huss.location_no                                                       from_location_no,
       Transport_Task_Status_API.Decode(Transport_Task_Line_API.Get_Column_Value_If_Unique(huss.source_ref1, huss.handling_unit_id, huss.location_no, 'TRANSPORT_TASK_STATUS')) transport_task_status,
       Transport_Task_Line_API.Get_Column_Value_If_Unique(huss.source_ref1, huss.handling_unit_id, huss.location_no, 'TRANSPORT_TASK_STATUS') transport_task_status_db,
       Transport_Task_Line_API.Get_Column_Value_If_Unique(huss.source_ref1, huss.handling_unit_id, huss.location_no, 'TO_CONTRACT') to_contract,
       Transport_Task_Line_API.Get_Column_Value_If_Unique(huss.source_ref1, huss.handling_unit_id, huss.location_no, 'TO_LOCATION_NO') to_location_no,
       Transport_Task_Line_API.Get_Column_Value_If_Unique(huss.source_ref1, huss.handling_unit_id, huss.location_no, 'FORWARD_TO_LOCATION_NO') forward_to_location_no,
       Inventory_Part_Destination_API.Decode(Transport_Task_Line_API.Get_Column_Value_If_Unique(huss.source_ref1, huss.handling_unit_id, huss.location_no, 'DESTINATION')) destination,
       Transport_Task_Line_API.Get_Column_Value_If_Unique(huss.source_ref1, huss.handling_unit_id, huss.location_no, 'DESTINATION') destination_db,
       Warehouse_Bay_Bin_API.Get_Loc_Group_By_Site_Location(huss.contract, huss.location_no) from_location_group,
       Transport_Task_Line_API.Get_Latest_Hu_Create_Date(huss.source_ref1, huss.handling_unit_id)  create_date,
       huss.handling_unit_type_id                                             handling_unit_type_id,
       huss.parent_handling_unit_id                                           parent_handling_unit_id,
       huss.second_level_parent_hu_id                                         second_level_parent_hu_id,
       huss.top_parent_handling_unit_id                                       top_parent_handling_unit_id,
       huss.structure_level                                                   structure_level,
       huss.stackable_db                                                      stackable_db,
       huss.width                                                             width,
       huss.height                                                            height,
       huss.depth                                                             depth,
       huss.operative_gross_weight                                            operative_gross_weight,
       huss.operative_volume                                                  operative_volume,
       huss.net_weight                                                        net_weight,
       huss.tare_weight                                                       tare_weight,
       huss.max_volume_capacity                                               max_volume_capacity, 
       huss.max_weight_capacity                                               max_weight_capacity,
       huss.uom_for_length                                                    uom_for_length,
       huss.uom_for_weight                                                    uom_for_weight,
       huss.uom_for_volume                                                    uom_for_volume,
       huss.is_in_stock                                                       is_in_stock,
       huss.is_in_inventory_transit                                           is_in_inventory_transit,
       huss.is_in_project_inventory                                           is_in_project_inventory,
       huss.part_no                                                           part_no,
       huss.configuration_id                                                  configuration_id,
       huss.lot_batch_no                                                      lot_batch_no,
       huss.serial_no                                                         serial_no,
       huss.condition_code                                                    condition_code,
       huss.eng_chg_level                                                     eng_chg_level,
       huss.waiv_dev_rej_no                                                   waiv_dev_rej_no,
       huss.availability_control_id                                           availability_control_id,
       huss.availability_control_desc                                         availability_control_desc,
       huss.part_ownership                                                    part_ownership,
       huss.owner                                                             owner,
       huss.owner_name                                                        owner_name,
       huss.project_id                                                        project_id,
       huss.program_id                                                        program_id,
       huss.activity_no                                                       activity_no,
       huss.sub_project_id                                                    sub_project_id,
       huss.activity_seq                                                      activity_seq,
       huss.outermost_db                                                      outermost_db,
       huss.outermost_hu_id                                                   outermost_hu_id,
       huss.objid                                                             objid,
       huss.objkey                                                            objkey,
       huss.objversion                                                        objversion
FROM  HANDL_UNIT_STOCK_SNAPSHOT_PUB huss
WHERE huss.source_ref_type_db = 'TRANSPORT_TASK'
AND   EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE huss.contract = site);


-- Used as a data source by WADACO process Transport Task Handling Unit
VIEW Transp_Task_Handl_Unit_Process   IS
   SELECT huss.source_ref1                                   transport_task_id,
          huss.rowid                                         aggregated_line_id,
          huss.contract                                      from_contract,
          huss.location_no                                   from_location_no,
          huss.handling_unit_id                              handling_unit_id,
         (select sscc from HANDLING_UNIT_TAB
          where handling_unit_id = huss.handling_unit_id)    sscc,
         (select alt_handling_unit_label_id from HANDLING_UNIT_TAB
          where handling_unit_id = huss.handling_unit_id)    alt_handling_unit_label_id,
          Handling_Unit_API.Get_Top_Parent_Handl_Unit_Id(huss.handling_unit_id) top_parent_handling_unit_id,
          Handling_Unit_API.Get_Structure_Level(huss.handling_unit_id)        structure_level,
          Transport_Task_Line_API.Get_Column_Value_If_Unique(huss.source_ref1, huss.handling_unit_id, huss.location_no, 'TRANSPORT_TASK_STATUS', 'FALSE') transport_task_status_db,
          Transport_Task_Line_API.Get_Column_Value_If_Unique(huss.source_ref1, huss.handling_unit_id, huss.location_no, 'TO_CONTRACT', 'FALSE') to_contract,
          Transport_Task_Line_API.Get_Column_Value_If_Unique(huss.source_ref1, huss.handling_unit_id, huss.location_no, 'TO_LOCATION_NO', 'FALSE') to_location_no,
          Transport_Task_Line_API.Get_Column_Value_If_Unique(huss.source_ref1, huss.handling_unit_id, huss.location_no, 'DESTINATION', 'FALSE') destination_db
   FROM HANDL_UNIT_STOCK_SNAPSHOT_TAB huss
   WHERE EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE huss.contract = site) 
   AND   huss.source_ref_type = 'TRANSPORT_TASK'
   AND   huss.process_control IS NULL  -- filter out process_parts and proces_sub_level lines
   AND   huss.handling_unit_id != 0
   AND   NVL(Transport_Task_Line_API.Get_Column_Value_If_Unique(huss.source_ref1, huss.handling_unit_id, huss.location_no, 'TRANSPORT_TASK_STATUS', 'FALSE'),'NULL') != 'EXECUTED';



-- Used as a data source by WADACO process Start Transport Task
VIEW Start_Transport_Task_Process   IS
   SELECT huss.source_ref1                                   transport_task_id,
          huss.contract                                      from_contract,
          huss.location_no                                   from_location_no,
          DECODE(huss.handling_unit_id, 0, null, huss.handling_unit_id)  handling_unit_id,
          DECODE(huss.handling_unit_id, 0, 'PART', DECODE(huss.process_control, 'PROCESS_PARTS','PART','HANDLING_UNIT')) part_or_handling_unit,
          Transport_Task_Line_API.Get_Column_Value_If_Unique(huss.source_ref1, huss.handling_unit_id, huss.location_no, 'TRANSPORT_TASK_STATUS', 'FALSE') transport_task_status_db
   FROM HANDL_UNIT_STOCK_SNAPSHOT_TAB huss
   WHERE EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE huss.contract = site) 
   AND   huss.source_ref_type = 'TRANSPORT_TASK'
   AND   (huss.process_control = 'PROCESS_PARTS' OR huss.process_control IS NULL)  -- filter out process_sub_level lines   
   AND   NVL(Transport_Task_Line_API.Get_Column_Value_If_Unique(huss.source_ref1, huss.handling_unit_id, huss.location_no, 'TRANSPORT_TASK_STATUS', 'FALSE'),'NULL') != 'EXECUTED'
   AND   EXISTS (SELECT 1 FROM transport_task_line_not_exec WHERE transport_task_id = huss.source_ref1);  -- extra filtering since snapshot table seems to have non executed lines left in some cases

