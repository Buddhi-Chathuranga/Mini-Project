-------------------------------------------------------------------------------------------- 
-- Export file for Task INVENTORY_PART_IN_STOCK_API.CREATE_COUNT_REPORT.
-- 
--  Date    Sign    History
--  ------  ------  -----------------------------------------------------------
--  211102  JaThlk  SC21R2-2927, Added the new parameter ONE_REPORT_PER_WAREHOUSE.
--  180801  Asawlk  Bug 143251, Added missing parameters EXCLUDE_SUPPLIER_RENTED and EXCLUDE_COMPANY_RENTAL_ASSET.  
--  170912  ChFolk  STRSC-11923, Removed parameter HANDLING_UNIT_SELECTION_DB and added new parameters EXCLUDE_ATTACHED_TO_HU and EXCLUDE_NOT_ATTACHED_TO_HU.
--  170821  ChFolk  STRSC-11366, Added new parameter INCLUDE_FULL_QTY_OF_HU_DB.
--  170818  ChFolk  STRSC-11367, Renamed HANDLING_UNIT_SELECTION_DB paramter ALL PARTS as PARTS ATTACHED AND NOT ATTACHED TO HANDLING UNITS.
--  170721  ChFolk  STRSC-11002, Added new parameters HANDLING_UNIT_SELECTION_DB, HANDLING_UNIT_TYPE_ID, TOP_HANDLING_UNIT_TYPE_ID, HANDLING_CATEGORY_TYPE_ID and TOP_HANDLING_CATEGORY_TYPE_ID.
--  161003  DaZase  LIM-7717, Added parameter PRINT_COUNT_REPORT_DB.
--  160118  NiDalk  Bug 126636, Modified get_schedules cursor of Update_Scheduled_Tasks only to fetch required fields.
--  141125  MaEelk  PRSC-4372, replaced the attribute name vales WAREHOUE, BAY_NO, ROW_NO, TIER_NO and BIN_NO with
--  141125          WAREHOUSE_ID, BAY_ID, ROW_ID, TIER_ID AND BIN_ID.
--  141101  MaEelk  PRSC-3299, Added Location Group, ABC Class, Frequency_Class and Lifecycle stage to the Count Report parameters. 
--  141027  MaEelk  PRSC-3297, Removed From Warehouse To Warehouse, From Bay, To Bay, From Part No, To Part No and, 
--  141027          added Warehouse, Bay, Row, Tier, Bin, Storage Zone ID and Part No to the  Count Report Parameters.
--  100716  DAYJLK  Bug 91834, Added log_user to Upgrade_Background_Job to set the correct
--  100716	        user on converted scheduled tasks. Modified Update_Scheduled_Tasks to set 
--  100716          correct user when renaming scheduled tasks.
--  080422  NiBalk  Bug 72596, Modified METHOD_NAME from Create_Count_Report_Defered__ to Create_Count_Report.
--  080422          Modified procedure Upgrade_Background_Job. Added new procedure Update_Scheduled_Tasks.
--  080225  NuVelk  Modified arguments when calling Batch_SYS.Register_Schedule_Method_Param for 
--  080225          parameters CYCLE_CODE_DB, FREEZE_CODE_DB and INCLUDE_ALL_QTY_DB to use DB values.
--  060103  SaRalk  Modified procedure Upgrade_Background_Job and Register Batch Schedule Method.
--  050328  IFSAPP  Export file for task INVENTORY_PART_IN_STOCK_API.CREATE_COUNT_REPORT_DEFERRED__.
-------------------------------------------------------------------------------------------- 

PROMPT Register Batch Schedule Method "INVENTORY_PART_IN_STOCK_API.CREATE_COUNT_REPORT"
DECLARE
   schedule_method_id_ NUMBER          := NULL;
   seq_no_             NUMBER          := NULL;
   info_msg_           VARCHAR2(32000) := NULL;
BEGIN
-- Construct Main Message
   info_msg_    := Message_SYS.Construct('');
   Message_SYS.Add_Attribute(info_msg_, 'METHOD_NAME', 'INVENTORY_PART_IN_STOCK_API.CREATE_COUNT_REPORT');
   Message_SYS.Add_Attribute(info_msg_, 'DESCRIPTION', 'Create Count Report');
   Message_SYS.Add_Attribute(info_msg_, 'MODULE', 'INVENT');
   Message_SYS.Add_Attribute(info_msg_, 'SINGLE_EXECUTION_DB', 'FALSE');
   Message_SYS.Add_Attribute(info_msg_, 'ARGUMENT_TYPE_DB', 'ATTRIBUTE');
   Message_SYS.Add_Attribute(info_msg_, 'VALIDATION_METHOD', 'INVENTORY_PART_IN_STOCK_API.VALIDATE_CREATE_COUNT_REPORT');
-- Register Batch Schedule Method
   Batch_SYS.Register_Batch_Schedule_Method(schedule_method_id_, info_msg_);
-- Adding parameters
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'CONTRACT', to_char(NULL), 'TRUE', 'User_Allowed_Site_API.Get_Default_Site');
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'CYCLE_CODE_DB', to_char(NULL), 'TRUE', '''PARTS WITH AND WITHOUT CYCLIC COUNTING''');   
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'WAREHOUSE_ID', to_char(NULL), 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'BAY_ID', to_char(NULL), 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'ROW_ID', to_char(NULL), 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'TIER_ID', to_char(NULL), 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'BIN_ID', to_char(NULL), 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'STORAGE_ZONE_ID', to_char(NULL), 'FALSE', NULL);   
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'PART_NO', to_char(NULL), 'FALSE', NULL);   
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'FREEZE_CODE_DB', to_char(NULL), 'FALSE', '''Y''');   
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'INCLUDE_ALL_QTY_DB', to_char(NULL), 'FALSE', '''N''');   
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'PROCESS_COUNT', to_char(NULL), 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'EXCLUDE_SINCE', to_char(NULL), 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'MAX_QTY_ONHAND', to_char(NULL), 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'SECOND_COMMODITY', to_char(NULL), 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'EXCLUDE_COMPANY_OWNED', 'INCLUDE', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'EXCLUDE_CUSTOMER_OWNED', 'INCLUDE', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'EXCLUDE_ROTABLE_POOL', 'INCLUDE', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'EXCLUDE_CONSIGNMENT', 'INCLUDE', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'EXCLUDE_SUPPLIER_LOANED', 'INCLUDE', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'EXCLUDE_FA_ROTABLE_POOL', 'INCLUDE', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'EXCLUDE_PROJECT_INVENTORY', 'N', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'EXCLUDE_STANDARD_INVENTORY', 'N', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'EXCLUDE_ATTACHED_TO_HU', 'N', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'EXCLUDE_NOT_ATTACHED_TO_HU', 'N', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'EXCLUDE_SUPPLIER_RENTED', 'INCLUDE', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'EXCLUDE_COMPANY_RENTAL_ASSET', 'INCLUDE', 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'PROJECT_ID', to_char(NULL), 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'LOCATION_GROUP', to_char(NULL), 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'ABC_CLASS', to_char(NULL), 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'FREQUENCY_CLASS_DB', to_char(NULL), 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'LIFECYCLE_STAGE_DB', to_char(NULL), 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'PRINT_COUNT_REPORT_DB', to_char(NULL), 'FALSE', 'Site_Invent_Info_API.Get_Counting_Print_Report_O_Db(User_Allowed_Site_API.Get_Default_Site)');
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'INCLUDE_FULL_QTY_OF_HU_DB', to_char(NULL), 'FALSE', '''N''');
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'HANDLING_UNIT_TYPE_ID', to_char(NULL), 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'TOP_HANDLING_UNIT_TYPE_ID', to_char(NULL), 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'HANDLING_CATEGORY_TYPE_ID', to_char(NULL), 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'TOP_HANDLING_CATEGORY_TYPE_ID', to_char(NULL), 'FALSE', NULL);
   Batch_SYS.Register_Schedule_Method_Param(seq_no_, schedule_method_id_, 'ONE_REPORT_PER_WAREHOUSE', to_char(NULL), 'FALSE', '''N'''); 
END;
/



------------------------------------------------------------------------------------------
-- Upgraded from background jobs
------------------------------------------------------------------------------------------
DECLARE   
   PROCEDURE Upgrade_Background_Job (
      method_name_ IN VARCHAR2,
      schedule_name_  IN VARCHAR2)
   IS
      parameters_          VARCHAR2(4000);
      execution_plan_      VARCHAR2(4000);
      param_start_         NUMBER;
      param_stop_          NUMBER;
      next_execution_date_ DATE;
      start_date_          DATE := sysdate;

      seq_no_              NUMBER;
      schedule_id_         NUMBER;
      ptr_                 NUMBER;      
      name_                VARCHAR2(30);
      value_               VARCHAR2(2000);

      CURSOR get_jobs IS
         SELECT what, interval, log_user 
         FROM   user_jobs
         WHERE  UPPER(what) like '%'||method_name_||'%';
   BEGIN
      FOR rec IN get_jobs LOOP
         execution_plan_ := rec.interval;
         param_start_ := instr(execution_plan_, '(');
         param_stop_  := instr(execution_plan_, ')');
         execution_plan_ := substr(execution_plan_, param_start_ + 2, param_stop_ - param_start_- 3);
           
         Batch_SYS.New_Batch_Schedule(schedule_id_, next_execution_date_, start_date_, NULL, schedule_name_, 'INVENTORY_PART_IN_STOCK_API.CREATE_COUNT_REPORT', 'TRUE', execution_plan_);
         
         -- Update batch schedule with correct user name 
         UPDATE batch_schedule_tab SET username = rec.log_user WHERE schedule_id = schedule_id_; 

         parameters_ := rec.what;
         param_start_ := instr(parameters_, '(''');
         param_stop_  := instr(parameters_, ''')');
         parameters_  := substr(parameters_, param_start_ + 3, param_stop_ - param_start_- 3);         
         ptr_ := NULL;
         WHILE (Client_SYS.Get_Next_From_Attr(parameters_, ptr_, name_, value_)) LOOP
            IF (name_ = 'CYCLE_CODE') THEN               
               value_ :=REPLACE(REPLACE(value_, Inventory_Part_Count_Type_API.Decode('Y') , Cyclic_Counting_API.Decode('PARTS WITH CYCLIC COUNTING')), Inventory_Part_Count_Type_API.Decode('N'), Cyclic_Counting_API.Decode('PARTS WITHOUT CYCLIC COUNTING'));               
            END IF;
            Batch_SYS.New_Batch_Schedule_Param(seq_no_, schedule_id_, name_, value_);           
         END LOOP;         
      END LOOP;
   END Upgrade_Background_Job;
   
   PROCEDURE Remove_Server_Process (
      method_name_ IN VARCHAR2 )
   IS
      job_   NUMBER;
      CURSOR get_job IS
         SELECT job
         FROM   user_jobs
         WHERE  UPPER(what) like '%'||method_name_||'%';
   BEGIN
      FOR rec_ IN get_job LOOP
         dbms_job.remove(rec_.job);
      END LOOP;
      
   EXCEPTION
      WHEN OTHERS THEN
         NULL;
   END Remove_Server_Process;

   PROCEDURE Update_Scheduled_Tasks(
      old_method_ IN VARCHAR2,
      new_method_ IN VARCHAR2)
   IS
      CURSOR get_schedules(old_method_id_  IN NUMBER) IS
         SELECT next_execution_date, start_date, stop_date, schedule_name, active_db, execution_plan, lang_code, username, schedule_id   
         FROM   batch_schedule
         WHERE  schedule_method_id = old_method_id_;

      old_method_id_  NUMBER;
      schedule_id_    NUMBER;
   BEGIN
      old_method_id_ := Batch_Schedule_Method_API.Get_Schedule_Method_Id(old_method_);
      
      FOR rec_ IN get_schedules(old_method_id_) LOOP
         Batch_Sys.New_Batch_Schedule(schedule_id_,
                                      rec_.next_execution_date,
                                      rec_.start_date,
                                      rec_.stop_date,
                                      rec_.schedule_name,
                                      new_method_,
                                      rec_.active_db,
                                      rec_.execution_plan,
                                      rec_.lang_code);   

         -- Update batch schedule with correct user name 
         UPDATE batch_schedule_tab SET username = rec_.username WHERE schedule_id = schedule_id_; 

         Batch_Sys.Remove_Batch_Schedule(rec_.schedule_id);  
      END LOOP;
      
      DELETE FROM BATCH_SCHEDULE_METHOD_TAB
      WHERE  schedule_method_id = old_method_id_; 
      
   END Update_Scheduled_Tasks;

BEGIN
   ------------------------------------------------------------------------------------------
   -- Upgrading Background Jobs to Scheduled Tasks
   ------------------------------------------------------------------------------------------
   
   Upgrade_Background_Job('INVENTORY_PART_IN_STOCK_API.CREATE_COUNT_REPORT_SHELL__', 'Create Count Report');
   Remove_Server_Process('INVENTORY_PART_IN_STOCK_API.CREATE_COUNT_REPORT_SHELL__');
   Update_Scheduled_Tasks('INVENTORY_PART_IN_STOCK_API.CREATE_COUNT_REPORT_DEFERRED__', 'INVENTORY_PART_IN_STOCK_API.CREATE_COUNT_REPORT');

END;
/

COMMIT
/



