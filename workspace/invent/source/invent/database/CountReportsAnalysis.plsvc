-----------------------------------------------------------------------------
--
--  Logical unit: CountReportsAnalysis
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------
-- 2019-04-25  DaZase  SCUXXW4-19620, Added Counting_Report_Initial_Check___.
-- 2018-05-31  DaZase  SCUXXW4-7060, Created.
-----------------------------------------------------------------------------

layer Core;

FUNCTION Get_Result_Key_List___ (
   full_selection_     IN VARCHAR2,
   report_id_  IN VARCHAR2 ) RETURN VARCHAR2
IS
   selection_           VARCHAR2(32000) := CONCAT(full_selection_, ';');
   current_selection_   VARCHAR2(32000);
   inv_list_no_         VARCHAR2(15);
   report_attr_         VARCHAR2(2000);
   parameter_attr_      VARCHAR2(2000);
   result_key_          NUMBER;
   result_key_list_     VARCHAR2(2000);


BEGIN    
   Client_SYS.Clear_Attr(report_attr_);
   Client_SYS.Add_To_Attr('REPORT_ID', report_id_, report_attr_);
   WHILE (INSTR(selection_, ';') > 0) LOOP
      current_selection_ := SUBSTR(selection_, 0, INSTR(selection_, ';'));
      inv_list_no_ :=  Client_SYS.Get_Key_Reference_Value(current_selection_, 'INV_LIST_NO');
      Client_SYS.Clear_Attr(parameter_attr_);
      Client_SYS.Add_To_Attr('INV_LIST_NO', inv_list_no_, parameter_attr_);
      result_key_ := Report_Format_API.Create_New_Report(report_attr_, parameter_attr_, Fnd_Session_API.Get_Fnd_User);    
      IF (result_key_list_ IS NULL) THEN
         result_key_list_  := result_key_;
      ELSE
         result_key_list_  := result_key_list_ || ',' || result_key_;
      END IF; 
      selection_ := SUBSTR(selection_, INSTR(selection_, ';') + 1); 
   END LOOP;
   RETURN result_key_list_;
END Get_Result_Key_List___;   


FUNCTION Counting_Report_Initial_Check___ (
   full_selection_     IN VARCHAR2 ) RETURN BOOLEAN
IS
   selection_           VARCHAR2(32000) := CONCAT(full_selection_, ';');
   current_selection_   VARCHAR2(32000);
   inv_list_no_         VARCHAR2(15);
   initial_check_       BOOLEAN;
   dummy_               NUMBER;   

   CURSOR check_exist IS
      SELECT 1 
      FROM COUNTING_REPORT
      WHERE inv_list_no = inv_list_no_;

BEGIN    
   -- Looping throu all selection records just be 100% sure we dont get any injected not user allowed sites here
   WHILE (INSTR(selection_, ';') > 0) LOOP
      current_selection_ := SUBSTR(selection_, 0, INSTR(selection_, ';'));
      inv_list_no_ :=  Client_SYS.Get_Key_Reference_Value(current_selection_, 'INV_LIST_NO');
      OPEN check_exist;
      FETCH check_exist INTO dummy_;
      IF (check_exist%FOUND) THEN
         initial_check_ := TRUE;
      ELSE  
         initial_check_ := FALSE;
      END IF;
      CLOSE check_exist; 
      EXIT WHEN NOT initial_check_;
      selection_ := SUBSTR(selection_, INSTR(selection_, ';') + 1); 
   END LOOP;
   RETURN initial_check_;
END Counting_Report_Initial_Check___;
