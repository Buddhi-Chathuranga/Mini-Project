-----------------------------------------------------------------------------
--
--  Logical unit: CreateCountReportHandling
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  211102  JaThlk  SC21R2-2927, Modified Construct_Param_Attr___ to add ONE_REPORT_PER_WAREHOUSE in the attr and 
--  211102          modified Get_Parameters___ to get the value of ONE_REPORT_PER_WAREHOUSE.
--  200521  BudKLK  Bug 153999(SCZ-9885), Added a new funtion Get_Process_Count___() and modified Get_Parameters___() to retrive the PROCESS_COUNT value from the database.
--  181204  RAKUSE  Created. (SCUXXW4-5724)
-----------------------------------------------------------------------------
layer Core;

@Override
FUNCTION Get_Parameters___ RETURN Parameters_Structure_Rec
IS
   method_name_ VARCHAR2(200) := 'INVENTORY_PART_IN_STOCK_API.CREATE_COUNT_REPORT';
   rec_ Parameters_Structure_Rec := super();
   msg_ VARCHAR2(32000);   
BEGIN
   rec_.SCHEDULE_METHOD_ID := Batch_Schedule_Method_API.Get_Schedule_Method_Id(method_name_);
   rec_.DESCRIPTION := Batch_Schedule_Method_API.Get_Description(rec_.SCHEDULE_METHOD_ID);
            
   Batch_Schedule_Method_Par_API.Get_Default_Values__(msg_, rec_.SCHEDULE_METHOD_ID);
   Message_SYS.Get_Attribute(msg_, 'CONTRACT', rec_.CONTRACT);
   Message_SYS.Get_Attribute(msg_, 'CYCLE_CODE_DB', rec_.CYCLE_CODE_DB);
   Message_SYS.Get_Attribute(msg_, 'WAREHOUSE_ID', rec_.WAREHOUSE_ID);
   Message_SYS.Get_Attribute(msg_, 'BAY_ID', rec_.BAY_ID);
   Message_SYS.Get_Attribute(msg_, 'ROW_ID', rec_.ROW_ID);
   Message_SYS.Get_Attribute(msg_, 'TIER_ID', rec_.TIER_ID);
   Message_SYS.Get_Attribute(msg_, 'BIN_ID', rec_.BIN_ID);
   Message_SYS.Get_Attribute(msg_, 'STORAGE_ZONE_ID', rec_.STORAGE_ZONE_ID);
   Message_SYS.Get_Attribute(msg_, 'PART_NO', rec_.PART_NO);
   Message_Find_Boolean___(msg_, 'FREEZE_CODE_DB', 'Y', 'N', rec_.FREEZE_CODE_DB);
   Message_Find_Boolean___(msg_, 'INCLUDE_ALL_QTY_DB', 'Y', 'N', rec_.INCLUDE_ALL_QTY_DB);
   rec_.PROCESS_COUNT := Get_Process_Count___(rec_.CONTRACT);
   Message_SYS.Get_Attribute(msg_, 'EXCLUDE_SINCE', rec_.EXCLUDE_SINCE);
   Message_SYS.Get_Attribute(msg_, 'MAX_QTY_ONHAND', rec_.MAX_QTY_ONHAND);
   Message_SYS.Get_Attribute(msg_, 'SECOND_COMMODITY', rec_.SECOND_COMMODITY);
   Message_Find_Boolean___(msg_, 'EXCLUDE_COMPANY_OWNED', 'EXCLUDE', 'INCLUDE', rec_.EXCLUDE_COMPANY_OWNED);
   Message_Find_Boolean___(msg_, 'EXCLUDE_CUSTOMER_OWNED', 'EXCLUDE', 'INCLUDE', rec_.EXCLUDE_CUSTOMER_OWNED);
   Message_Find_Boolean___(msg_, 'EXCLUDE_ROTABLE_POOL', 'EXCLUDE', 'INCLUDE', rec_.EXCLUDE_ROTABLE_POOL);
   Message_Find_Boolean___(msg_, 'EXCLUDE_CONSIGNMENT', 'EXCLUDE', 'INCLUDE', rec_.EXCLUDE_CONSIGNMENT);
   Message_Find_Boolean___(msg_, 'EXCLUDE_SUPPLIER_LOANED', 'EXCLUDE', 'INCLUDE', rec_.EXCLUDE_SUPPLIER_LOANED);
   Message_Find_Boolean___(msg_, 'EXCLUDE_FA_ROTABLE_POOL', 'EXCLUDE', 'INCLUDE', rec_.EXCLUDE_FA_ROTABLE_POOL);
   Message_Find_Boolean___(msg_, 'EXCLUDE_PROJECT_INVENTORY', 'Y', 'N', rec_.EXCLUDE_PROJECT_INVENTORY);
   Message_Find_Boolean___(msg_, 'EXCLUDE_STANDARD_INVENTORY', 'Y', 'N', rec_.EXCLUDE_STANDARD_INVENTORY);
   Message_Find_Boolean___(msg_, 'EXCLUDE_ATTACHED_TO_HU', 'Y', 'N', rec_.EXCLUDE_ATTACHED_TO_HU);
   Message_Find_Boolean___(msg_, 'EXCLUDE_NOT_ATTACHED_TO_HU', 'Y', 'N', rec_.EXCLUDE_NOT_ATTACHED_TO_HU);
   Message_Find_Boolean___(msg_, 'EXCLUDE_SUPPLIER_RENTED', 'EXCLUDE', 'INCLUDE', rec_.EXCLUDE_SUPPLIER_RENTED);
   Message_Find_Boolean___(msg_, 'EXCLUDE_COMPANY_RENTAL_ASSET', 'EXCLUDE', 'INCLUDE', rec_.EXCLUDE_COMPANY_RENTAL_ASSET);
   Message_SYS.Get_Attribute(msg_, 'PROJECT_ID', rec_.PROJECT_ID);
   Message_SYS.Get_Attribute(msg_, 'LOCATION_GROUP', rec_.LOCATION_GROUP);
   Message_SYS.Get_Attribute(msg_, 'ABC_CLASS', rec_.ABC_CLASS);
   Message_SYS.Get_Attribute(msg_, 'FREQUENCY_CLASS_DB', rec_.FREQUENCY_CLASS_DB);
   Message_SYS.Get_Attribute(msg_, 'LIFECYCLE_STAGE_DB', rec_.LIFECYCLE_STAGE_DB);
   Message_SYS.Get_Attribute(msg_, 'PRINT_COUNT_REPORT_DB', rec_.PRINT_COUNT_REPORT_DB);
   Message_Find_Boolean___(msg_, 'INCLUDE_FULL_QTY_OF_HU_DB', 'Y', 'N', rec_.INCLUDE_FULL_QTY_OF_HU_DB);
   Message_SYS.Get_Attribute(msg_, 'HANDLING_UNIT_TYPE_ID', rec_.HANDLING_UNIT_TYPE_ID);
   Message_SYS.Get_Attribute(msg_, 'TOP_HANDLING_UNIT_TYPE_ID', rec_.TOP_HANDLING_UNIT_TYPE_ID);
   Message_SYS.Get_Attribute(msg_, 'HANDLING_CATEGORY_TYPE_ID', rec_.HANDLING_CATEGORY_TYPE_ID);
   Message_SYS.Get_Attribute(msg_, 'TOP_HANDLING_CATEGORY_TYPE_ID', rec_.TOP_HANDLING_CATEGORY_TYPE_ID);
   Message_Find_Boolean___(msg_, 'ONE_REPORT_PER_WAREHOUSE', 'Y', 'N', rec_.ONE_REPORT_PER_WAREHOUSE);

   RETURN rec_;
END Get_Parameters___;

FUNCTION Construct_Param_Attr___ (
   virt_rec_ IN OUT Task_Virtual_Rec ) RETURN VARCHAR2
IS
   attr_ VARCHAR2(32000);
BEGIN
   Client_SYS.Add_To_Attr('CONTRACT', virt_rec_.CONTRACT, attr_);
   Client_SYS.Add_To_Attr('CYCLE_CODE_DB', virt_rec_.CYCLE_CODE_DB, attr_);
   Client_SYS.Add_To_Attr('WAREHOUSE_ID', virt_rec_.WAREHOUSE_ID, attr_);
   Client_SYS.Add_To_Attr('BAY_ID', virt_rec_.BAY_ID, attr_);
   Client_SYS.Add_To_Attr('ROW_ID', virt_rec_.ROW_ID, attr_);
   Client_SYS.Add_To_Attr('TIER_ID', virt_rec_.TIER_ID, attr_);
   Client_SYS.Add_To_Attr('BIN_ID', virt_rec_.BIN_ID, attr_);
   Client_SYS.Add_To_Attr('STORAGE_ZONE_ID', virt_rec_.STORAGE_ZONE_ID, attr_);
   Client_SYS.Add_To_Attr('PART_NO', virt_rec_.PART_NO, attr_);
   Add_To_Attr_Boolean___('FREEZE_CODE_DB', virt_rec_.FREEZE_CODE_DB, 'Y', 'N', attr_);
   Add_To_Attr_Boolean___('INCLUDE_ALL_QTY_DB', virt_rec_.INCLUDE_ALL_QTY_DB, 'Y', 'N', attr_);
   Client_SYS.Add_To_Attr('PROCESS_COUNT', virt_rec_.PROCESS_COUNT, attr_);
   Client_SYS.Add_To_Attr('EXCLUDE_SINCE', virt_rec_.EXCLUDE_SINCE, attr_);
   Client_SYS.Add_To_Attr('MAX_QTY_ONHAND', virt_rec_.MAX_QTY_ONHAND, attr_);
   Client_SYS.Add_To_Attr('SECOND_COMMODITY', virt_rec_.SECOND_COMMODITY, attr_);
   Add_To_Attr_Boolean___('EXCLUDE_COMPANY_OWNED', virt_rec_.EXCLUDE_COMPANY_OWNED, 'EXCLUDE', 'INCLUDE', attr_);
   Add_To_Attr_Boolean___('EXCLUDE_CUSTOMER_OWNED', virt_rec_.EXCLUDE_CUSTOMER_OWNED, 'EXCLUDE', 'INCLUDE', attr_);
   Add_To_Attr_Boolean___('EXCLUDE_ROTABLE_POOL', virt_rec_.EXCLUDE_ROTABLE_POOL, 'EXCLUDE', 'INCLUDE', attr_);
   Add_To_Attr_Boolean___('EXCLUDE_CONSIGNMENT', virt_rec_.EXCLUDE_CONSIGNMENT, 'EXCLUDE', 'INCLUDE', attr_);
   Add_To_Attr_Boolean___('EXCLUDE_SUPPLIER_LOANED', virt_rec_.EXCLUDE_SUPPLIER_LOANED, 'EXCLUDE', 'INCLUDE', attr_);
   Add_To_Attr_Boolean___('EXCLUDE_FA_ROTABLE_POOL', virt_rec_.EXCLUDE_FA_ROTABLE_POOL, 'EXCLUDE', 'INCLUDE', attr_);
   Add_To_Attr_Boolean___('EXCLUDE_PROJECT_INVENTORY', virt_rec_.EXCLUDE_PROJECT_INVENTORY, 'Y', 'N', attr_);
   Add_To_Attr_Boolean___('EXCLUDE_STANDARD_INVENTORY', virt_rec_.EXCLUDE_STANDARD_INVENTORY, 'Y', 'N', attr_);
   Add_To_Attr_Boolean___('EXCLUDE_ATTACHED_TO_HU', virt_rec_.EXCLUDE_ATTACHED_TO_HU, 'Y', 'N', attr_);
   Add_To_Attr_Boolean___('EXCLUDE_NOT_ATTACHED_TO_HU', virt_rec_.EXCLUDE_NOT_ATTACHED_TO_HU, 'Y', 'N', attr_);
   Add_To_Attr_Boolean___('EXCLUDE_SUPPLIER_RENTED', virt_rec_.EXCLUDE_SUPPLIER_RENTED, 'EXCLUDE', 'INCLUDE', attr_);
   Add_To_Attr_Boolean___('EXCLUDE_COMPANY_RENTAL_ASSET', virt_rec_.EXCLUDE_COMPANY_RENTAL_ASSET, 'EXCLUDE', 'INCLUDE', attr_);
   Client_SYS.Add_To_Attr('PROJECT_ID', virt_rec_.PROJECT_ID, attr_);
   Client_SYS.Add_To_Attr('LOCATION_GROUP', virt_rec_.LOCATION_GROUP, attr_);
   Client_SYS.Add_To_Attr('ABC_CLASS', virt_rec_.ABC_CLASS, attr_);
   Client_SYS.Add_To_Attr('FREQUENCY_CLASS_DB', virt_rec_.FREQUENCY_CLASS_DB, attr_);
   Client_SYS.Add_To_Attr('LIFECYCLE_STAGE_DB', virt_rec_.LIFECYCLE_STAGE_DB, attr_);
   Client_SYS.Add_To_Attr('PRINT_COUNT_REPORT_DB', virt_rec_.PRINT_COUNT_REPORT_DB, attr_);
   Add_To_Attr_Boolean___('INCLUDE_FULL_QTY_OF_HU_DB', virt_rec_.INCLUDE_FULL_QTY_OF_HU_DB, 'Y', 'N', attr_);
   Client_SYS.Add_To_Attr('HANDLING_UNIT_TYPE_ID', virt_rec_.HANDLING_UNIT_TYPE_ID, attr_);
   Client_SYS.Add_To_Attr('TOP_HANDLING_UNIT_TYPE_ID', virt_rec_.TOP_HANDLING_UNIT_TYPE_ID, attr_);
   Client_SYS.Add_To_Attr('HANDLING_CATEGORY_TYPE_ID', virt_rec_.HANDLING_CATEGORY_TYPE_ID, attr_);
   Client_SYS.Add_To_Attr('TOP_HANDLING_CATEGORY_TYPE_ID', virt_rec_.TOP_HANDLING_CATEGORY_TYPE_ID, attr_);
   Add_To_Attr_Boolean___('ONE_REPORT_PER_WAREHOUSE', virt_rec_.ONE_REPORT_PER_WAREHOUSE, 'Y', 'N', attr_);
   RETURN attr_;
END Construct_Param_Attr___;

FUNCTION Get_Process_Count___ (
  contract_ IN VARCHAR2) RETURN NUMBER
IS
BEGIN
   RETURN Site_Invent_Info_API.Get_Max_Counting_Lines(contract_);
END Get_Process_Count___;
