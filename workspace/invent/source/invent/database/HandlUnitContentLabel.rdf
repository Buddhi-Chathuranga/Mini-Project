-----------------------------------------------------------------------------
--
--  Logical unit: HandlUnitContentLabel
--
--  Report:       HandlUnitContentLabel
--
--  IFS Developer Studio Template Version 1.3
--
--  NOTE: This file is generated and will be overwritten at next model change
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
-------------------- PACKAGE SPECIFICATION ----------------------------------
-----------------------------------------------------------------------------

PROMPT Creating HANDL_UNIT_CONTENT_LABEL_RPI specification

CREATE OR REPLACE PACKAGE HANDL_UNIT_CONTENT_LABEL_RPI AS

module_ CONSTANT VARCHAR2(6) := 'INVENT';
lu_name_ CONSTANT VARCHAR2(25) := 'HandlUnitContentLabel';

PROCEDURE Execute_Report (
   report_attr_    IN VARCHAR2,
   parameter_attr_ IN VARCHAR2 );

FUNCTION Test (
   handling_unit_id_         IN NUMBER)
   RETURN NUMBER;

PROCEDURE Init;

END HANDL_UNIT_CONTENT_LABEL_RPI;
/
SHOW ERROR

-----------------------------------------------------------------------------
-------------------- VIEWS FOR REPORT META DATA -----------------------------
-----------------------------------------------------------------------------

PROMPT Creating report table HANDL_UNIT_CONTENT_LABEL_RPT

DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'HANDL_UNIT_CONTENT_LABEL_RPT';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'RESULT_KEY', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROW_NO', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'PARENT_ROW_NO', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'HANDLING_UNIT_ID', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_LEVEL', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'HANDLING_UNIT_TYPE_ID', 'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TYPE_DESCRIPTION', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'HANDLING_UNIT_CATEGORY_ID', 'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CATEGORY_DESCRIPTION', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PARENT_HANDLING_UNIT_ID', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PARENT_HANDLING_UNIT_TYPE_ID', 'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PARENT_TYPE_DESCRIPTION', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PARENT_SSCC', 'VARCHAR2(18)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PARENT_ALT_HANDL_UNIT_LABL_ID', 'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ACCESSORY_EXIST', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'COMPOSITION', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'WIDTH', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'HEIGHT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'DEPTH', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'UOM_FOR_LENGTH', 'VARCHAR2(30)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'NET_WEIGHT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TARE_WEIGHT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'MANUAL_GROSS_WEIGHT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'OPERATIVE_GROSS_WEIGHT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'UOM_FOR_WEIGHT', 'VARCHAR2(30)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'MANUAL_VOLUME', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'OPERATIVE_VOLUME', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'UOM_FOR_VOLUME', 'VARCHAR2(30)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ADDITIVE_VOLUME', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SSCC', 'VARCHAR2(18)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ALT_HANDLING_UNIT_LABEL_ID', 'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'NO_OF_HANDLING_UNIT_LABELS', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'MIX_OF_PART_NO_BLOCKED', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'MIX_OF_COND_CODE_BLOCKED', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'MIX_OF_LOT_BATCH_BLOCKED', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'MAX_VOLUME_CAPACITY', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'MAX_WEIGHT_CAPACITY', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'STACKABLE', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'LOCATION_NO', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'WAREHOUSE_ID', 'VARCHAR2(15)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'IS_IN_PROJECT_INVENTORY', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'LOCATION_TYPE', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'BAY_ID', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TIER_ID', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'BIN_ID', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROW_ID', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_PART_NO', 'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_PART_DESCRIPTION', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_CONFIGURATION_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_LOT_BATCH_NO', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_SERIAL_NO', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_ENG_CHG_LEVEL', 'VARCHAR2(6)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_WAIV_DEV_REJ_NO', 'VARCHAR2(15)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_TOTAL_QTY', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_INVENTORY_UOM', 'VARCHAR2(30)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_CATCH_UOM', 'VARCHAR2(30)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_UNIFIED_UOM', 'VARCHAR2(30)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_UNIFIED_CATCH_UOM', 'VARCHAR2(30)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_CONDITION_CODE', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_CONDITION_CODE_DESCRIPTION', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TOP_PARENT_HANDLING_UNIT_ID', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TOP_PARENT_HU_TYPE_ID', 'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TOP_PARENT_HU_TYPE_DESC', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TOP_PARENT_SSCC', 'VARCHAR2(18)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TOP_PARENT_ALT_HU_LABEL_ID', 'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_ACTIVITY_SEQUENCE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_QTY_ONHAND', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_CATCH_QTY_ONHAND', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_QTY_IN_TRANSIT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_CATCH_QTY_IN_TRANSIT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_LAST_ACTIVITY_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_RECEIPT_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_LAST_COUNT_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_EXPIRATION_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_AVAILABILITY_CONTROL_ID', 'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_AVAILABILITY_DESCRIPTION', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_PART_OWNERSHIP', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_OWNER', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_OWNER_NAME', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_PROJECT_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_PROGRAM_ID', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_PROGRAM_DESCRIPTION', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_PROJECT_NAME', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_SUB_PROJECT_ID', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_SUB_PROJECT_DESCRIPTION', 'VARCHAR2(255)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_ACTIVITY_ID', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_ACTIVITY_DESCRIPTION', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_ROTABLE_PART_POOL_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_GTIN_NO', 'VARCHAR2(14)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_HAZARD_CODE', 'VARCHAR2(6)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_HAZARD_CODE_DESCRIPTION', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_TOTAL_INVENTORY_VALUE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_PART_ACQUISITION_VALUE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_TOTAL_ACQUISITION_VALUE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_UNIFIED_QTY_ONHAND', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_UNIFIED_CATCH_QTY_ONHAND', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_UNIFIED_QTY_IN_TRANSIT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CV_UNIFIED_CATCH_QTY_TRANSIT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF_PART_QTY', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TOTAL_SOURCE_REF_PART_QTY', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SO_PART_NO', 'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SO_PART_DESCRIPTION', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'HU_MAX_CAPACITY', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SO_RESERVED_LOT', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SO_SERIAL_BEGIN', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SO_ENG_CHG_LEVEL', 'VARCHAR2(6)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SO_CONFIGURATION_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SO_CONDITION_CODE', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PART_NO', 'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PART_DESCRIPTION', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CONFIGURATION_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'LOT_BATCH_NO', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SERIAL_NO', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ENG_CHG_LEVEL', 'VARCHAR2(6)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'WAIV_DEV_REJ_NO', 'VARCHAR2(15)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CONDITION_CODE', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CONDITION_CODE_DESCRIPTION', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ACTIVITY_SEQ', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'QTY_ONHAND', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CATCH_QTY_ONHAND', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'QTY_IN_TRANSIT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CATCH_QTY_IN_TRANSIT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROTABLE_PART_POOL_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'UNIFIED_QTY_ONHAND', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'UNIFIED_CATCH_QTY_ONHAND', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'UNIFIED_QTY_IN_TRANSIT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'UNIFIED_CATCH_QTY_IN_TRANSIT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'INVENTORY_UOM', 'VARCHAR2(30)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CATCH_UOM', 'VARCHAR2(30)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'UNIFIED_UOM', 'VARCHAR2(30)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'UNIFIED_CATCH_UOM', 'VARCHAR2(30)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'LAST_ACTIVITY_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIPT_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'LAST_COUNT_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'AVAILABILITY_CONTROL_ID', 'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'AVAILABILITY_DESCRIPTION', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'EXPIRATION_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PART_OWNERSHIP', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'OWNING_CUSTOMER_NO', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'OWNING_VENDOR_NO', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'OWNER', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'OWNER_NAME', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TOTAL_INVENTORY_VALUE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PART_ACQUISITION_VALUE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TOTAL_ACQUISITION_VALUE', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PROJECT_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PROGRAM_ID', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PROGRAM_DESCRIPTION', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PROJECT_NAME', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SUB_PROJECT_ID', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SUB_PROJECT_DESCRIPTION', 'VARCHAR2(255)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ACTIVITY_ID', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ACTIVITY_DESCRIPTION', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'GTIN_NO', 'VARCHAR2(14)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'HAZARD_CODE', 'VARCHAR2(6)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'HAZARD_CODE_DESCRIPTION', 'VARCHAR2(35)', 'Y');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_REPORT_DATA', NULL, TRUE);
END;
/

DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'HANDL_UNIT_CONTENT_LABEL_RPT';
   index_name_ VARCHAR2(30) := 'HANDL_UNIT_CONTENT_LABEL_RPK';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'RESULT_KEY');
   Database_SYS.Set_Table_Column(columns_, 'ROW_NO');
   Database_SYS.Set_Table_Column(columns_, 'PARENT_ROW_NO');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_REPORT_INDEX', NULL, TRUE, TRUE);
   Database_SYS.Reset_Column_Table(columns_);
END;
/

PROMPT Creating report view HANDL_UNIT_CONTENT_LABEL_REP

CREATE OR REPLACE VIEW HANDL_UNIT_CONTENT_LABEL_REP AS
SELECT *
FROM   HANDL_UNIT_CONTENT_LABEL_RPT t
WHERE EXISTS (SELECT 1 FROM allowed_report a WHERE a.result_key = t.result_key)
WITH   read only;

COMMENT ON TABLE HANDL_UNIT_CONTENT_LABEL_REP
   IS 'LU=HandlUnitContentLabel^PROMPT=Handl Unit Content Label^MODULE=INVENT^';

COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.result_key
   IS 'FLAGS=M----^DATATYPE=NUMBER^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.row_no
   IS 'FLAGS=M----^DATATYPE=NUMBER^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.handling_unit_id
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Handling Unit ID^QUERY=Handling Unit ID^QFLAGS=MW-B-^REF=HANDLING_UNIT_LOV/NOCHECK^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.contract
   IS 'FLAGS=A----^DATATYPE=STRING(5)^TITLE=Contract^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.structure_level
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Structure Level^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.handling_unit_type_id
   IS 'FLAGS=A----^DATATYPE=STRING(25)^TITLE=Handling Unit Type ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.type_description
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Type Description^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.handling_unit_category_id
   IS 'FLAGS=A----^DATATYPE=STRING(25)^TITLE=Handling Unit Category ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.category_description
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Category Description^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.parent_handling_unit_id
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Parent Handling Unit ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.parent_handling_unit_type_id
   IS 'FLAGS=A----^DATATYPE=STRING(25)^TITLE=Parent Handling Unit Type ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.parent_type_description
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Parent Type Description^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.parent_sscc
   IS 'FLAGS=A----^DATATYPE=STRING(18)^TITLE=Parent SSCC^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.parent_alt_handl_unit_labl_id
   IS 'FLAGS=A----^DATATYPE=STRING(25)^TITLE=Parent Alt Handling Unit Label ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.accessory_exist
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Accessory Exist^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.composition
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Composition^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.width
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Width^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.height
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Height^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.depth
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Depth^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.uom_for_length
   IS 'FLAGS=A----^DATATYPE=STRING(30)^TITLE=Uom For Length^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.net_weight
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Net Weight^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.tare_weight
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Tare Weight^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.manual_gross_weight
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Manual Gross Weight^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.operative_gross_weight
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Operative Weight^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.uom_for_weight
   IS 'FLAGS=A----^DATATYPE=STRING(30)^TITLE=Uom For Weight^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.manual_volume
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Manual Volume^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.operative_volume
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Operative Volume^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.uom_for_volume
   IS 'FLAGS=A----^DATATYPE=STRING(30)^TITLE=Uom For Volume^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.additive_volume
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Additive Volume^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.sscc
   IS 'FLAGS=A----^DATATYPE=STRING(18)^TITLE=SSCC^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.alt_handling_unit_label_id
   IS 'FLAGS=A----^DATATYPE=STRING(25)^TITLE=Alt Handling Unit Label ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.no_of_handling_unit_labels
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=No Of Handling Unit Labels^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.mix_of_part_no_blocked
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Mix Of Part No Blocked^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.mix_of_cond_code_blocked
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Mix Of Cond Code Blocked^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.mix_of_lot_batch_blocked
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Mix Of Lot Batch Blocked^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.max_volume_capacity
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Max Volume Capacity^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.max_weight_capacity
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Max Weight Capacity^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.stackable
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Stackable^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.location_no
   IS 'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Location No^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.warehouse_id
   IS 'FLAGS=A----^DATATYPE=STRING(15)^TITLE=Warehouse ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.is_in_project_inventory
   IS 'FLAGS=A----^DATATYPE=STRING(5)^TITLE=In Project Inventory^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.location_type
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Location Type^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.bay_id
   IS 'FLAGS=A----^DATATYPE=STRING(5)^TITLE=Bay^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.tier_id
   IS 'FLAGS=A----^DATATYPE=STRING(5)^TITLE=Tier^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.bin_id
   IS 'FLAGS=A----^DATATYPE=STRING(5)^TITLE=Bin^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.row_id
   IS 'FLAGS=A----^DATATYPE=STRING(5)^TITLE=Row^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_part_no
   IS 'FLAGS=A----^DATATYPE=STRING(25)^TITLE=Part No^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_part_description
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Description^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_configuration_id
   IS 'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Configuration ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_lot_batch_no
   IS 'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Lot/Batch No^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_serial_no
   IS 'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Serial No^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_eng_chg_level
   IS 'FLAGS=A----^DATATYPE=STRING(6)^TITLE=Revision No^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_waiv_dev_rej_no
   IS 'FLAGS=A----^DATATYPE=STRING(15)^TITLE=W/D/R^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_total_qty
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Quantity^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_inventory_uom
   IS 'FLAGS=A----^DATATYPE=STRING(30)^TITLE=Inventory UOM^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_catch_uom
   IS 'FLAGS=A----^DATATYPE=STRING(30)^TITLE=Catch UOM^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_unified_uom
   IS 'FLAGS=A----^DATATYPE=STRING(30)^TITLE=Unified UOM^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_unified_catch_uom
   IS 'FLAGS=A----^DATATYPE=STRING(30)^TITLE=Unified Catch UOM^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_condition_code
   IS 'FLAGS=A----^DATATYPE=STRING(10)^TITLE=Condition Code^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_condition_code_description
   IS 'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Description^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.top_parent_handling_unit_id
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Top Parent Handling Unit ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.top_parent_hu_type_id
   IS 'FLAGS=A----^DATATYPE=STRING(25)^TITLE=Top Parent Hu Type ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.top_parent_hu_type_desc
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Top Parent Hu Type Desc^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.top_parent_sscc
   IS 'FLAGS=A----^DATATYPE=STRING(18)^TITLE=Top Parent Sscc^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.top_parent_alt_hu_label_id
   IS 'FLAGS=A----^DATATYPE=STRING(25)^TITLE=Top Parent Alt Hu Label ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_activity_sequence
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Activity Sequence^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_qty_onhand
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Qty on Hand^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_catch_qty_onhand
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Catch Qty  on Hand^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_qty_in_transit
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Qty In Transit^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_catch_qty_in_transit
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Catch Qty In Transit^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_last_activity_date
   IS 'FLAGS=A----^DATATYPE=DATE/DATETIME^TITLE=Cv Last Activity Date^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_receipt_date
   IS 'FLAGS=A----^DATATYPE=DATE/DATETIME^TITLE=Cv Receipt Date^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_last_count_date
   IS 'FLAGS=A----^DATATYPE=DATE/DATETIME^TITLE=Cv Last Count Date^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_expiration_date
   IS 'FLAGS=A----^DATATYPE=DATE/DATETIME^TITLE=Cv Expiration Date^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_availability_control_id
   IS 'FLAGS=A----^DATATYPE=STRING(25)^TITLE=Availability Control ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_availability_description
   IS 'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Description^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_part_ownership
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Ownership^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_owner
   IS 'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Owner^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_owner_name
   IS 'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Name^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_project_id
   IS 'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Project ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_program_id
   IS 'FLAGS=A----^DATATYPE=STRING(10)^TITLE=Program ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_program_description
   IS 'FLAGS=A----^DATATYPE=STRING(2000)^TITLE=Description^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_project_name
   IS 'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Project^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_sub_project_id
   IS 'FLAGS=A----^DATATYPE=STRING(10)^TITLE=Sub Project ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_sub_project_description
   IS 'FLAGS=A----^DATATYPE=STRING(255)^TITLE=Description^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_activity_id
   IS 'FLAGS=A----^DATATYPE=STRING(10)^TITLE=Activity ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_activity_description
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Description^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_rotable_part_pool_id
   IS 'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Rotable Part Pool ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_gtin_no
   IS 'FLAGS=A----^DATATYPE=STRING(14)^TITLE=GTIN No^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_hazard_code
   IS 'FLAGS=A----^DATATYPE=STRING(6)^TITLE=Safety Code^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_hazard_code_description
   IS 'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Safety Code Description^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_total_inventory_value
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Total Inventory Value^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_part_acquisition_value
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Part Acquisition Value^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_total_acquisition_value
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Cv Total Acquisition Value^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_unified_qty_onhand
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Unified Qty on Hand^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_unified_catch_qty_onhand
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Unified Catch Qty on Hand^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_unified_qty_in_transit
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Unified Qty in Transit^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.cv_unified_catch_qty_transit
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Unified Catch Qty in Transit^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.source_ref_part_qty
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Source Ref Part Qty^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.total_source_ref_part_qty
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Total Source Ref Part Qty^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.so_part_no
   IS 'FLAGS=A----^DATATYPE=STRING(25)^TITLE=So Part No^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.so_part_description
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=So Part Description^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.hu_max_capacity
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Hu Max Capacity^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.so_reserved_lot
   IS 'FLAGS=A----^DATATYPE=STRING(20)^TITLE=So Reserved Lot^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.so_serial_begin
   IS 'FLAGS=A----^DATATYPE=STRING(50)^TITLE=So Serial Begin^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.so_eng_chg_level
   IS 'FLAGS=A----^DATATYPE=STRING(6)^TITLE=So Eng Chg Level^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.so_configuration_id
   IS 'FLAGS=A----^DATATYPE=STRING(50)^TITLE=So Configuration ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.so_condition_code
   IS 'FLAGS=A----^DATATYPE=STRING(10)^TITLE=So Condition Code^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.part_no
   IS 'FLAGS=A----^DATATYPE=STRING(25)^TITLE=Part No^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.part_description
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Part Description^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.configuration_id
   IS 'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Configuration ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.lot_batch_no
   IS 'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Lot/Batch No^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.serial_no
   IS 'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Serial No^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.eng_chg_level
   IS 'FLAGS=A----^DATATYPE=STRING(6)^TITLE=Revision No^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.waiv_dev_rej_no
   IS 'FLAGS=A----^DATATYPE=STRING(15)^TITLE=W/D/R^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.condition_code
   IS 'FLAGS=A----^DATATYPE=STRING(10)^TITLE=Condition Code^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.condition_code_description
   IS 'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Condition Code Description^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.activity_seq
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Activity Seq^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.qty_onhand
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Qty Onhand^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.catch_qty_onhand
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Catch Qty Onhand^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.qty_in_transit
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Qty In Transit^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.catch_qty_in_transit
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Catch Qty In Transit^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.rotable_part_pool_id
   IS 'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Rotable Part Pool ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.unified_qty_onhand
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Unified Qty Onhand^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.unified_catch_qty_onhand
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Unified Catch Qty Onhand^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.unified_qty_in_transit
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Unified Qty In Transit^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.unified_catch_qty_in_transit
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Unified Catch Qty In Transit^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.inventory_uom
   IS 'FLAGS=A----^DATATYPE=STRING(30)^TITLE=Inventory UOM^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.catch_uom
   IS 'FLAGS=A----^DATATYPE=STRING(30)^TITLE=Catch UOM^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.unified_uom
   IS 'FLAGS=A----^DATATYPE=STRING(30)^TITLE=Unified UOM^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.unified_catch_uom
   IS 'FLAGS=A----^DATATYPE=STRING(30)^TITLE=Unified Catch UOM^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.last_activity_date
   IS 'FLAGS=A----^DATATYPE=DATE/DATETIME^TITLE=Last Activity Date^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.receipt_date
   IS 'FLAGS=A----^DATATYPE=DATE/DATETIME^TITLE=Receipt Date^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.last_count_date
   IS 'FLAGS=A----^DATATYPE=DATE/DATETIME^TITLE=Last Count Date^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.availability_control_id
   IS 'FLAGS=A----^DATATYPE=STRING(25)^TITLE=Availability Control ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.availability_description
   IS 'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Availability Description^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.expiration_date
   IS 'FLAGS=A----^DATATYPE=DATE/DATETIME^TITLE=Expiration Date^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.part_ownership
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Part Ownership^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.owning_customer_no
   IS 'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Owning Customer No^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.owning_vendor_no
   IS 'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Owning Vendor No^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.owner
   IS 'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Owner^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.owner_name
   IS 'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Owner Name^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.total_inventory_value
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Total Inventory Value^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.part_acquisition_value
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Part Acquisition Value^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.total_acquisition_value
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Total Acquisition Value^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.project_id
   IS 'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Project ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.program_id
   IS 'FLAGS=A----^DATATYPE=STRING(10)^TITLE=Program ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.program_description
   IS 'FLAGS=A----^DATATYPE=STRING(2000)^TITLE=Program Description^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.project_name
   IS 'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Project Name^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.sub_project_id
   IS 'FLAGS=A----^DATATYPE=STRING(10)^TITLE=Sub Project ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.sub_project_description
   IS 'FLAGS=A----^DATATYPE=STRING(255)^TITLE=Sub Project Description^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.activity_id
   IS 'FLAGS=A----^DATATYPE=STRING(10)^TITLE=Activity ID^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.activity_description
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Activity Description^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.gtin_no
   IS 'FLAGS=A----^DATATYPE=STRING(14)^TITLE=GTIN No^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.hazard_code
   IS 'FLAGS=A----^DATATYPE=STRING(6)^TITLE=Safety Code^';
COMMENT ON COLUMN HANDL_UNIT_CONTENT_LABEL_REP.hazard_code_description
   IS 'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Safety Code Description^';

-----------------------------------------------------------------------------
-------------------- REPORT REGISTRATION ------------------------------------
-----------------------------------------------------------------------------

BEGIN
   Report_SYS.Define_Report_('HANDL_UNIT_CONTENT_LABEL_REP', 'INVENT', 'HandlUnitContentLabel', 'Handling Unit Content Label', 'HANDL_UNIT_CONTENT_LABEL_RPT', 'HANDL_UNIT_CONTENT_LABEL_RPI.Execute_Report', 0,'','','','PLSQL1.2','TRUE','Warehouse Management','Goods Label');
   Report_SYS.Define_Report_Text_('HANDL_UNIT_CONTENT_LABEL_REP', 'HANDL_UNIT_CONTENT_LABEL', 'Handling Unit Content');
   Report_SYS.Refresh_('HANDL_UNIT_CONTENT_LABEL_REP');
END;
/

-----------------------------------------------------------------------------
-------------------- PACKAGE IMPLEMENTATION ---------------------------------
-----------------------------------------------------------------------------

PROMPT Creating HANDL_UNIT_CONTENT_LABEL_RPI implementation

CREATE OR REPLACE PACKAGE BODY HANDL_UNIT_CONTENT_LABEL_RPI IS

   TYPE binds$ IS RECORD (
      handling_unit_id          NUMBER);

   CURSOR get_handling_unit (handling_unit_id_ NUMBER) IS
      SELECT contract                                  contract,
             structure_level                           structure_level,
             handling_unit_id                          handling_unit_id,
             handling_unit_type_id                     handling_unit_type_id,
             handling_unit_type_description            type_description,
             handling_unit_category_id                 handling_unit_category_id,
             handling_unit_category_desc               category_description,
             parent_handling_unit_id                   parent_handling_unit_id,
             NULL                                      parent_handling_unit_type_id,
             NULL                                      parent_type_description,
             NULL                                      parent_sscc,
             NULL                                      parent_alt_handl_unit_labl_id,
             accessory_exist                           accessory_exist,
             composition                               composition,
             width                                     width,
             height                                    height,
             depth                                     depth,
             uom_for_length                            uom_for_length,
             net_weight                                net_weight,
             tare_weight                               tare_weight,
             manual_gross_weight                       manual_gross_weight,
             operative_gross_weight                    operative_gross_weight,
             uom_for_weight                            uom_for_weight,
             manual_volume                             manual_volume,
             operative_volume                          operative_volume,
             uom_for_volume                            uom_for_volume,
             additive_volume_db                        additive_volume,
             sscc                                      sscc,
             alt_handling_unit_label_id                alt_handling_unit_label_id,
             no_of_handling_unit_labels                no_of_handling_unit_labels,
             mix_of_part_no_blocked                    mix_of_part_no_blocked,
             mix_of_cond_code_blocked                  mix_of_cond_code_blocked,
             mix_of_lot_batch_blocked                  mix_of_lot_batch_blocked,
             max_volume_capacity                       max_volume_capacity,
             max_weight_capacity                       max_weight_capacity,
             stackable_db                              stackable,
             location_no                               location_no,
             warehouse_id                              warehouse_id,
             is_in_project_inventory                   is_in_project_inventory,
             NULL                                      location_type,
             bay_id                                    bay_id,
             tier_id                                   tier_id,
             bin_id                                    bin_id,
             row_id                                    row_id,
             part_no                                   cv_part_no,
             NULL                                      cv_part_description,
             configuration_id                          cv_configuration_id,
             lot_batch_no                              cv_lot_batch_no,
             serial_no                                 cv_serial_no,
             eng_chg_level                             cv_eng_chg_level, 
             waiv_dev_rej_no                           cv_waiv_dev_Rej_no,
             (total_onhand_qty + total_in_transit_qty) cv_total_qty, 
             NULL                                      cv_inventory_uom,
             NULL                                      cv_catch_uom,
             NULL                                      cv_unified_uom,
             NULL                                      cv_unified_catch_uom,
             NULL	                                    cv_condition_code,
             NULL                                      cv_condition_code_description,
             top_parent_handling_unit_id               top_parent_handling_unit_id,
             top_parent_hu_type_id                     top_parent_hu_type_id,
             top_parent_hu_type_desc                   top_parent_hu_type_desc,
             top_parent_sscc                           top_parent_sscc,
             top_parent_alt_hu_label_id                top_parent_alt_hu_label_id, 
             activity_sequence                         cv_activity_sequence,
             NULL                                      cv_qty_onhand,
             NULL                                      cv_catch_qty_onhand,
             NULL                                      cv_qty_in_transit,
             NULL                                      cv_catch_qty_in_transit,
             NULL                                      cv_last_activity_date,
             NULL                                      cv_receipt_date,
             NULL                                      cv_last_count_date,
             NULL                                      cv_expiration_date,
             NULL                                      cv_availability_control_id,
             NULL                                      cv_availability_description,
             NULL                                      cv_part_ownership,
             NULL                                      cv_owner,
             NULL                                      cv_owner_name,
             NULL                                      cv_project_id,
             NULL                                      cv_program_id,
             NULL                                      cv_program_description,
             NULL                                      cv_project_name,
             NULL                                      cv_sub_project_id,
             NULL                                      cv_sub_project_description,
             NULL                                      cv_activity_id,
             NULL                                      cv_activity_description,
             NULL                                      cv_rotable_part_pool_id,
             NULL                                      cv_gtin_no,
             NULL                                      cv_hazard_code,
             NULL                                      cv_hazard_code_description,
             NULL                                      cv_total_inventory_value,
             NULL                                      cv_part_acquisition_value,
             NULL                                      cv_total_acquisition_value,
             NULL                                      cv_unified_qty_onhand,
             NULL                                      cv_unified_catch_qty_onhand,
             NULL                                      cv_unified_qty_in_transit,
             NULL                                      cv_unified_catch_qty_transit,
             source_ref_part_qty                       source_ref_part_qty,
             NULL                                      total_source_ref_part_qty,
             NULL                                      so_part_no,
             NULL                                      so_part_description,
             NULL                                      hu_max_capacity,
             NULL                                      so_reserved_lot,
             NULL                                      so_serial_begin,
             NULL                                      so_eng_chg_level,
             NULL                                      so_configuration_id,
             NULL                                      so_condition_code
      FROM handling_unit_extended
      WHERE  handling_unit_id = handling_unit_id_;

   CURSOR get_child_handling_unit (handling_unit_id_ NUMBER) IS
      SELECT contract                                  contract,
             structure_level                           structure_level,
             handling_unit_id                          handling_unit_id,
             handling_unit_type_id                     handling_unit_type_id,
             handling_unit_type_description            type_description,
             handling_unit_category_id                 handling_unit_category_id,
             handling_unit_category_desc               category_description,
             parent_handling_unit_id                   parent_handling_unit_id,
             NULL                                      parent_handling_unit_type_id,
             NULL                                      parent_type_description,
             NULL                                      parent_sscc,
             NULL                                      parent_alt_handl_unit_labl_id,
             accessory_exist                           accessory_exist,
             composition                               composition,
             width                                     width,
             height                                    height,
             depth                                     depth,
             uom_for_length                            uom_for_length,
             net_weight                                net_weight,
             tare_weight                               tare_weight,
             manual_gross_weight                       manual_gross_weight,
             operative_gross_weight                    operative_gross_weight,
             uom_for_weight                            uom_for_weight,
             manual_volume                             manual_volume,
             operative_volume                          operative_volume,
             uom_for_volume                            uom_for_volume,
             additive_volume_db                        additive_volume,
             sscc                                      sscc,
             alt_handling_unit_label_id                alt_handling_unit_label_id,
             no_of_handling_unit_labels                no_of_handling_unit_labels,
             mix_of_part_no_blocked                    mix_of_part_no_blocked,
             mix_of_cond_code_blocked                  mix_of_cond_code_blocked,
             mix_of_lot_batch_blocked                  mix_of_lot_batch_blocked,
             max_volume_capacity                       max_volume_capacity,
             max_weight_capacity                       max_weight_capacity,
             stackable_db                              stackable,
             location_no                               location_no,
             warehouse_id                              warehouse_id,
             is_in_project_inventory                   is_in_project_inventory,
             NULL                                      location_type,
             bay_id                                    bay_id,
             tier_id                                   tier_id,
             bin_id                                    bin_id,
             row_id                                    row_id,
             part_no                                   cv_part_no,
             NULL                                      cv_part_description,
             configuration_id                          cv_configuration_id,
             lot_batch_no                              cv_lot_batch_no,
             serial_no                                 cv_serial_no,
             eng_chg_level                             cv_eng_chg_level, 
             waiv_dev_rej_no                           cv_waiv_dev_Rej_no,
             (total_onhand_qty + total_in_transit_qty) cv_total_qty, 
             NULL                                      cv_inventory_uom,
             NULL                                      cv_catch_uom,
             NULL                                      cv_unified_uom,
             NULL                                      cv_unified_catch_uom,
             NULL	                                    cv_condition_code,
             NULL                                      cv_condition_code_description,
             top_parent_handling_unit_id               top_parent_handling_unit_id,
             top_parent_hu_type_id                     top_parent_hu_type_id,
             top_parent_hu_type_desc                   top_parent_hu_type_desc,
             top_parent_sscc                           top_parent_sscc,
             top_parent_alt_hu_label_id                top_parent_alt_hu_label_id, 
             activity_sequence                         cv_activity_sequence,
             NULL                                      cv_qty_onhand,
             NULL                                      cv_catch_qty_onhand,
             NULL                                      cv_qty_in_transit,
             NULL                                      cv_catch_qty_in_transit,
             NULL                                      cv_last_activity_date,
             NULL                                      cv_receipt_date,
             NULL                                      cv_last_count_date,
             NULL                                      cv_expiration_date,
             NULL                                      cv_availability_control_id,
             NULL                                      cv_availability_description,
             NULL                                      cv_part_ownership,
             NULL                                      cv_owner,
             NULL                                      cv_owner_name,
             NULL                                      cv_project_id,
             NULL                                      cv_program_id,
             NULL                                      cv_program_description,
             NULL                                      cv_project_name,
             NULL                                      cv_sub_project_id,
             NULL                                      cv_sub_project_description,
             NULL                                      cv_activity_id,
             NULL                                      cv_activity_description,
             NULL                                      cv_rotable_part_pool_id,
             NULL                                      cv_gtin_no,
             NULL                                      cv_hazard_code,
             NULL                                      cv_hazard_code_description,
             NULL                                      cv_total_inventory_value,
             NULL                                      cv_part_acquisition_value,
             NULL                                      cv_total_acquisition_value,
             NULL                                      cv_unified_qty_onhand,
             NULL                                      cv_unified_catch_qty_onhand,
             NULL                                      cv_unified_qty_in_transit,
             NULL                                      cv_unified_catch_qty_transit,
             source_ref_part_qty                       source_ref_part_qty,
             NULL                                      total_source_ref_part_qty,
             NULL                                      so_part_no,
             NULL                                      so_part_description,
             NULL                                      hu_max_capacity,
             NULL                                      so_reserved_lot,
             NULL                                      so_serial_begin,
             NULL                                      so_eng_chg_level,
             NULL                                      so_configuration_id,
             NULL                                      so_condition_code
      FROM handling_unit_extended
      CONNECT BY PRIOR handling_unit_id = parent_handling_unit_id 
                                 START WITH handling_unit_id = handling_unit_id_;

   CURSOR get_handling_unit_content (handling_unit_id_ NUMBER) IS
      SELECT handling_unit_id        handling_unit_id,	
             contract                contract,
             part_no                 part_no,
             NULL                    part_description,
             configuration_id        configuration_id,
             location_no             location_no,
             lot_batch_no            lot_batch_no,
             serial_no               serial_no,
             eng_chg_level           eng_chg_level, 
             waiv_dev_rej_no         waiv_dev_Rej_no,
             NULL	    		  condition_code,
             NULL                    condition_code_description,
             activity_seq            activity_seq,
             qty_onhand              qty_onhand,
             catch_qty_onhand        catch_qty_onhand,
             qty_in_transit          qty_in_transit,
             catch_qty_in_transit    catch_qty_in_transit,
             rotable_part_pool_id    rotable_part_pool_id,
             NULL                    unified_qty_onhand,
             NULL                    unified_catch_qty_onhand,
             NULL                    unified_qty_in_transit,
             NULL                    unified_catch_qty_in_transit,
             NULL                    inventory_uom,
             NULL                    catch_uom,
             NULL                    unified_uom,
             NULL                    unified_catch_uom,
             last_activity_date      last_activity_date,
             receipt_date            receipt_date,
             last_count_date         last_count_date,
             availability_control_id availability_control_id,
             NULL                    availability_description,
             expiration_date         expiration_date,
             part_ownership          part_ownership,
             owning_customer_no      owning_customer_no,    
             owning_vendor_no        owning_vendor_no,
             NULL                    owner,
             NULL                    owner_name,
             NULL                    total_inventory_value,
             NULL                    part_acquisition_value,
             NULL                    total_acquisition_value,
             project_id              project_id,
             NULL                    program_id,
             NULL                    program_description,
             NULL                    project_name,
             NULL                    sub_project_id,
             NULL                    sub_project_description,
             NULL                    activity_id,
             NULL                    activity_description,
             NULL                    gtin_no,
             NULL                    hazard_code,
             NULL                    hazard_code_description
      FROM   inventory_part_in_stock
      WHERE  (qty_onhand > 0 OR qty_in_transit > 0)
      AND    (handling_unit_id  = handling_unit_id_);

-----------------------------------------------------------------------------
-------------------- RESULT SET METHODS -------------------------------------
-----------------------------------------------------------------------------

--@IgnoreWrongParamOrder
PROCEDURE Add_Result_Row___ (
   result_key$_               IN NUMBER,
   binds$_                    IN binds$,
   rec_handling_unit_         IN get_handling_unit%ROWTYPE DEFAULT NULL,
   rec_child_handling_unit_   IN get_child_handling_unit%ROWTYPE DEFAULT NULL,
   rec_handling_unit_content_ IN get_handling_unit_content%ROWTYPE DEFAULT NULL,
   row_no$_                   IN OUT NUMBER)
IS
BEGIN
   INSERT INTO HANDL_UNIT_CONTENT_LABEL_RPT (
      result_key,
      handling_unit_id,
      contract,
      structure_level,
      handling_unit_type_id,
      type_description,
      handling_unit_category_id,
      category_description,
      parent_handling_unit_id,
      parent_handling_unit_type_id,
      parent_type_description,
      parent_sscc,
      parent_alt_handl_unit_labl_id,
      accessory_exist,
      composition,
      width,
      height,
      depth,
      uom_for_length,
      net_weight,
      tare_weight,
      manual_gross_weight,
      operative_gross_weight,
      uom_for_weight,
      manual_volume,
      operative_volume,
      uom_for_volume,
      additive_volume,
      sscc,
      alt_handling_unit_label_id,
      no_of_handling_unit_labels,
      mix_of_part_no_blocked,
      mix_of_cond_code_blocked,
      mix_of_lot_batch_blocked,
      max_volume_capacity,
      max_weight_capacity,
      stackable,
      location_no,
      warehouse_id,
      is_in_project_inventory,
      location_type,
      bay_id,
      tier_id,
      bin_id,
      row_id,
      cv_part_no,
      cv_part_description,
      cv_configuration_id,
      cv_lot_batch_no,
      cv_serial_no,
      cv_eng_chg_level,
      cv_waiv_dev_rej_no,
      cv_total_qty,
      cv_inventory_uom,
      cv_catch_uom,
      cv_unified_uom,
      cv_unified_catch_uom,
      cv_condition_code,
      cv_condition_code_description,
      top_parent_handling_unit_id,
      top_parent_hu_type_id,
      top_parent_hu_type_desc,
      top_parent_sscc,
      top_parent_alt_hu_label_id,
      cv_activity_sequence,
      cv_qty_onhand,
      cv_catch_qty_onhand,
      cv_qty_in_transit,
      cv_catch_qty_in_transit,
      cv_last_activity_date,
      cv_receipt_date,
      cv_last_count_date,
      cv_expiration_date,
      cv_availability_control_id,
      cv_availability_description,
      cv_part_ownership,
      cv_owner,
      cv_owner_name,
      cv_project_id,
      cv_program_id,
      cv_program_description,
      cv_project_name,
      cv_sub_project_id,
      cv_sub_project_description,
      cv_activity_id,
      cv_activity_description,
      cv_rotable_part_pool_id,
      cv_gtin_no,
      cv_hazard_code,
      cv_hazard_code_description,
      cv_total_inventory_value,
      cv_part_acquisition_value,
      cv_total_acquisition_value,
      cv_unified_qty_onhand,
      cv_unified_catch_qty_onhand,
      cv_unified_qty_in_transit,
      cv_unified_catch_qty_transit,
      source_ref_part_qty,
      total_source_ref_part_qty,
      so_part_no,
      so_part_description,
      hu_max_capacity,
      so_reserved_lot,
      so_serial_begin,
      so_eng_chg_level,
      so_configuration_id,
      so_condition_code,
      part_no,
      part_description,
      configuration_id,
      lot_batch_no,
      serial_no,
      eng_chg_level,
      waiv_dev_rej_no,
      condition_code,
      condition_code_description,
      activity_seq,
      qty_onhand,
      catch_qty_onhand,
      qty_in_transit,
      catch_qty_in_transit,
      rotable_part_pool_id,
      unified_qty_onhand,
      unified_catch_qty_onhand,
      unified_qty_in_transit,
      unified_catch_qty_in_transit,
      inventory_uom,
      catch_uom,
      unified_uom,
      unified_catch_uom,
      last_activity_date,
      receipt_date,
      last_count_date,
      availability_control_id,
      availability_description,
      expiration_date,
      part_ownership,
      owning_customer_no,
      owning_vendor_no,
      owner,
      owner_name,
      total_inventory_value,
      part_acquisition_value,
      total_acquisition_value,
      project_id,
      program_id,
      program_description,
      project_name,
      sub_project_id,
      sub_project_description,
      activity_id,
      activity_description,
      gtin_no,
      hazard_code,
      hazard_code_description,
      row_no, parent_row_no)
   VALUES (
      result_key$_,
      nvl(rec_handling_unit_content_.handling_unit_id,
      nvl(rec_child_handling_unit_.handling_unit_id,
      nvl(rec_handling_unit_.handling_unit_id,
      binds$_.handling_unit_id))),
      nvl(rec_handling_unit_content_.contract,
      nvl(rec_child_handling_unit_.contract,
      rec_handling_unit_.contract)),
      nvl(rec_child_handling_unit_.structure_level,
      rec_handling_unit_.structure_level),
      nvl(rec_child_handling_unit_.handling_unit_type_id,
      rec_handling_unit_.handling_unit_type_id),
      nvl(rec_child_handling_unit_.type_description,
      rec_handling_unit_.type_description),
      nvl(rec_child_handling_unit_.handling_unit_category_id,
      rec_handling_unit_.handling_unit_category_id),
      nvl(rec_child_handling_unit_.category_description,
      rec_handling_unit_.category_description),
      nvl(rec_child_handling_unit_.parent_handling_unit_id,
      rec_handling_unit_.parent_handling_unit_id),
      nvl(rec_child_handling_unit_.parent_handling_unit_type_id,
      rec_handling_unit_.parent_handling_unit_type_id),
      nvl(rec_child_handling_unit_.parent_type_description,
      rec_handling_unit_.parent_type_description),
      nvl(rec_child_handling_unit_.parent_sscc,
      rec_handling_unit_.parent_sscc),
      nvl(rec_child_handling_unit_.parent_alt_handl_unit_labl_id,
      rec_handling_unit_.parent_alt_handl_unit_labl_id),
      nvl(rec_child_handling_unit_.accessory_exist,
      rec_handling_unit_.accessory_exist),
      nvl(rec_child_handling_unit_.composition,
      rec_handling_unit_.composition),
      nvl(rec_child_handling_unit_.width,
      rec_handling_unit_.width),
      nvl(rec_child_handling_unit_.height,
      rec_handling_unit_.height),
      nvl(rec_child_handling_unit_.depth,
      rec_handling_unit_.depth),
      nvl(rec_child_handling_unit_.uom_for_length,
      rec_handling_unit_.uom_for_length),
      nvl(rec_child_handling_unit_.net_weight,
      rec_handling_unit_.net_weight),
      nvl(rec_child_handling_unit_.tare_weight,
      rec_handling_unit_.tare_weight),
      nvl(rec_child_handling_unit_.manual_gross_weight,
      rec_handling_unit_.manual_gross_weight),
      nvl(rec_child_handling_unit_.operative_gross_weight,
      rec_handling_unit_.operative_gross_weight),
      nvl(rec_child_handling_unit_.uom_for_weight,
      rec_handling_unit_.uom_for_weight),
      nvl(rec_child_handling_unit_.manual_volume,
      rec_handling_unit_.manual_volume),
      nvl(rec_child_handling_unit_.operative_volume,
      rec_handling_unit_.operative_volume),
      nvl(rec_child_handling_unit_.uom_for_volume,
      rec_handling_unit_.uom_for_volume),
      nvl(rec_child_handling_unit_.additive_volume,
      rec_handling_unit_.additive_volume),
      nvl(rec_child_handling_unit_.sscc,
      rec_handling_unit_.sscc),
      nvl(rec_child_handling_unit_.alt_handling_unit_label_id,
      rec_handling_unit_.alt_handling_unit_label_id),
      nvl(rec_child_handling_unit_.no_of_handling_unit_labels,
      rec_handling_unit_.no_of_handling_unit_labels),
      nvl(rec_child_handling_unit_.mix_of_part_no_blocked,
      rec_handling_unit_.mix_of_part_no_blocked),
      nvl(rec_child_handling_unit_.mix_of_cond_code_blocked,
      rec_handling_unit_.mix_of_cond_code_blocked),
      nvl(rec_child_handling_unit_.mix_of_lot_batch_blocked,
      rec_handling_unit_.mix_of_lot_batch_blocked),
      nvl(rec_child_handling_unit_.max_volume_capacity,
      rec_handling_unit_.max_volume_capacity),
      nvl(rec_child_handling_unit_.max_weight_capacity,
      rec_handling_unit_.max_weight_capacity),
      nvl(rec_child_handling_unit_.stackable,
      rec_handling_unit_.stackable),
      nvl(rec_handling_unit_content_.location_no,
      nvl(rec_child_handling_unit_.location_no,
      rec_handling_unit_.location_no)),
      nvl(rec_child_handling_unit_.warehouse_id,
      rec_handling_unit_.warehouse_id),
      nvl(rec_child_handling_unit_.is_in_project_inventory,
      rec_handling_unit_.is_in_project_inventory),
      nvl(rec_child_handling_unit_.location_type,
      rec_handling_unit_.location_type),
      nvl(rec_child_handling_unit_.bay_id,
      rec_handling_unit_.bay_id),
      nvl(rec_child_handling_unit_.tier_id,
      rec_handling_unit_.tier_id),
      nvl(rec_child_handling_unit_.bin_id,
      rec_handling_unit_.bin_id),
      nvl(rec_child_handling_unit_.row_id,
      rec_handling_unit_.row_id),
      nvl(rec_child_handling_unit_.cv_part_no,
      rec_handling_unit_.cv_part_no),
      nvl(rec_child_handling_unit_.cv_part_description,
      rec_handling_unit_.cv_part_description),
      nvl(rec_child_handling_unit_.cv_configuration_id,
      rec_handling_unit_.cv_configuration_id),
      nvl(rec_child_handling_unit_.cv_lot_batch_no,
      rec_handling_unit_.cv_lot_batch_no),
      nvl(rec_child_handling_unit_.cv_serial_no,
      rec_handling_unit_.cv_serial_no),
      nvl(rec_child_handling_unit_.cv_eng_chg_level,
      rec_handling_unit_.cv_eng_chg_level),
      nvl(rec_child_handling_unit_.cv_waiv_dev_rej_no,
      rec_handling_unit_.cv_waiv_dev_rej_no),
      nvl(rec_child_handling_unit_.cv_total_qty,
      rec_handling_unit_.cv_total_qty),
      nvl(rec_child_handling_unit_.cv_inventory_uom,
      rec_handling_unit_.cv_inventory_uom),
      nvl(rec_child_handling_unit_.cv_catch_uom,
      rec_handling_unit_.cv_catch_uom),
      nvl(rec_child_handling_unit_.cv_unified_uom,
      rec_handling_unit_.cv_unified_uom),
      nvl(rec_child_handling_unit_.cv_unified_catch_uom,
      rec_handling_unit_.cv_unified_catch_uom),
      nvl(rec_child_handling_unit_.cv_condition_code,
      rec_handling_unit_.cv_condition_code),
      nvl(rec_child_handling_unit_.cv_condition_code_description,
      rec_handling_unit_.cv_condition_code_description),
      nvl(rec_child_handling_unit_.top_parent_handling_unit_id,
      rec_handling_unit_.top_parent_handling_unit_id),
      nvl(rec_child_handling_unit_.top_parent_hu_type_id,
      rec_handling_unit_.top_parent_hu_type_id),
      nvl(rec_child_handling_unit_.top_parent_hu_type_desc,
      rec_handling_unit_.top_parent_hu_type_desc),
      nvl(rec_child_handling_unit_.top_parent_sscc,
      rec_handling_unit_.top_parent_sscc),
      nvl(rec_child_handling_unit_.top_parent_alt_hu_label_id,
      rec_handling_unit_.top_parent_alt_hu_label_id),
      nvl(rec_child_handling_unit_.cv_activity_sequence,
      rec_handling_unit_.cv_activity_sequence),
      nvl(rec_child_handling_unit_.cv_qty_onhand,
      rec_handling_unit_.cv_qty_onhand),
      nvl(rec_child_handling_unit_.cv_catch_qty_onhand,
      rec_handling_unit_.cv_catch_qty_onhand),
      nvl(rec_child_handling_unit_.cv_qty_in_transit,
      rec_handling_unit_.cv_qty_in_transit),
      nvl(rec_child_handling_unit_.cv_catch_qty_in_transit,
      rec_handling_unit_.cv_catch_qty_in_transit),
      nvl(rec_child_handling_unit_.cv_last_activity_date,
      rec_handling_unit_.cv_last_activity_date),
      nvl(rec_child_handling_unit_.cv_receipt_date,
      rec_handling_unit_.cv_receipt_date),
      nvl(rec_child_handling_unit_.cv_last_count_date,
      rec_handling_unit_.cv_last_count_date),
      nvl(rec_child_handling_unit_.cv_expiration_date,
      rec_handling_unit_.cv_expiration_date),
      nvl(rec_child_handling_unit_.cv_availability_control_id,
      rec_handling_unit_.cv_availability_control_id),
      nvl(rec_child_handling_unit_.cv_availability_description,
      rec_handling_unit_.cv_availability_description),
      nvl(rec_child_handling_unit_.cv_part_ownership,
      rec_handling_unit_.cv_part_ownership),
      nvl(rec_child_handling_unit_.cv_owner,
      rec_handling_unit_.cv_owner),
      nvl(rec_child_handling_unit_.cv_owner_name,
      rec_handling_unit_.cv_owner_name),
      nvl(rec_child_handling_unit_.cv_project_id,
      rec_handling_unit_.cv_project_id),
      nvl(rec_child_handling_unit_.cv_program_id,
      rec_handling_unit_.cv_program_id),
      nvl(rec_child_handling_unit_.cv_program_description,
      rec_handling_unit_.cv_program_description),
      nvl(rec_child_handling_unit_.cv_project_name,
      rec_handling_unit_.cv_project_name),
      nvl(rec_child_handling_unit_.cv_sub_project_id,
      rec_handling_unit_.cv_sub_project_id),
      nvl(rec_child_handling_unit_.cv_sub_project_description,
      rec_handling_unit_.cv_sub_project_description),
      nvl(rec_child_handling_unit_.cv_activity_id,
      rec_handling_unit_.cv_activity_id),
      nvl(rec_child_handling_unit_.cv_activity_description,
      rec_handling_unit_.cv_activity_description),
      nvl(rec_child_handling_unit_.cv_rotable_part_pool_id,
      rec_handling_unit_.cv_rotable_part_pool_id),
      nvl(rec_child_handling_unit_.cv_gtin_no,
      rec_handling_unit_.cv_gtin_no),
      nvl(rec_child_handling_unit_.cv_hazard_code,
      rec_handling_unit_.cv_hazard_code),
      nvl(rec_child_handling_unit_.cv_hazard_code_description,
      rec_handling_unit_.cv_hazard_code_description),
      nvl(rec_child_handling_unit_.cv_total_inventory_value,
      rec_handling_unit_.cv_total_inventory_value),
      nvl(rec_child_handling_unit_.cv_part_acquisition_value,
      rec_handling_unit_.cv_part_acquisition_value),
      nvl(rec_child_handling_unit_.cv_total_acquisition_value,
      rec_handling_unit_.cv_total_acquisition_value),
      nvl(rec_child_handling_unit_.cv_unified_qty_onhand,
      rec_handling_unit_.cv_unified_qty_onhand),
      nvl(rec_child_handling_unit_.cv_unified_catch_qty_onhand,
      rec_handling_unit_.cv_unified_catch_qty_onhand),
      nvl(rec_child_handling_unit_.cv_unified_qty_in_transit,
      rec_handling_unit_.cv_unified_qty_in_transit),
      nvl(rec_child_handling_unit_.cv_unified_catch_qty_transit,
      rec_handling_unit_.cv_unified_catch_qty_transit),
      nvl(rec_child_handling_unit_.source_ref_part_qty,
      rec_handling_unit_.source_ref_part_qty),
      nvl(rec_child_handling_unit_.total_source_ref_part_qty,
      rec_handling_unit_.total_source_ref_part_qty),
      nvl(rec_child_handling_unit_.so_part_no,
      rec_handling_unit_.so_part_no),
      nvl(rec_child_handling_unit_.so_part_description,
      rec_handling_unit_.so_part_description),
      nvl(rec_child_handling_unit_.hu_max_capacity,
      rec_handling_unit_.hu_max_capacity),
      nvl(rec_child_handling_unit_.so_reserved_lot,
      rec_handling_unit_.so_reserved_lot),
      nvl(rec_child_handling_unit_.so_serial_begin,
      rec_handling_unit_.so_serial_begin),
      nvl(rec_child_handling_unit_.so_eng_chg_level,
      rec_handling_unit_.so_eng_chg_level),
      nvl(rec_child_handling_unit_.so_configuration_id,
      rec_handling_unit_.so_configuration_id),
      nvl(rec_child_handling_unit_.so_condition_code,
      rec_handling_unit_.so_condition_code),
      rec_handling_unit_content_.part_no,
      rec_handling_unit_content_.part_description,
      rec_handling_unit_content_.configuration_id,
      rec_handling_unit_content_.lot_batch_no,
      rec_handling_unit_content_.serial_no,
      rec_handling_unit_content_.eng_chg_level,
      rec_handling_unit_content_.waiv_dev_rej_no,
      rec_handling_unit_content_.condition_code,
      rec_handling_unit_content_.condition_code_description,
      rec_handling_unit_content_.activity_seq,
      rec_handling_unit_content_.qty_onhand,
      rec_handling_unit_content_.catch_qty_onhand,
      rec_handling_unit_content_.qty_in_transit,
      rec_handling_unit_content_.catch_qty_in_transit,
      rec_handling_unit_content_.rotable_part_pool_id,
      rec_handling_unit_content_.unified_qty_onhand,
      rec_handling_unit_content_.unified_catch_qty_onhand,
      rec_handling_unit_content_.unified_qty_in_transit,
      rec_handling_unit_content_.unified_catch_qty_in_transit,
      rec_handling_unit_content_.inventory_uom,
      rec_handling_unit_content_.catch_uom,
      rec_handling_unit_content_.unified_uom,
      rec_handling_unit_content_.unified_catch_uom,
      rec_handling_unit_content_.last_activity_date,
      rec_handling_unit_content_.receipt_date,
      rec_handling_unit_content_.last_count_date,
      rec_handling_unit_content_.availability_control_id,
      rec_handling_unit_content_.availability_description,
      rec_handling_unit_content_.expiration_date,
      rec_handling_unit_content_.part_ownership,
      rec_handling_unit_content_.owning_customer_no,
      rec_handling_unit_content_.owning_vendor_no,
      rec_handling_unit_content_.owner,
      rec_handling_unit_content_.owner_name,
      rec_handling_unit_content_.total_inventory_value,
      rec_handling_unit_content_.part_acquisition_value,
      rec_handling_unit_content_.total_acquisition_value,
      rec_handling_unit_content_.project_id,
      rec_handling_unit_content_.program_id,
      rec_handling_unit_content_.program_description,
      rec_handling_unit_content_.project_name,
      rec_handling_unit_content_.sub_project_id,
      rec_handling_unit_content_.sub_project_description,
      rec_handling_unit_content_.activity_id,
      rec_handling_unit_content_.activity_description,
      rec_handling_unit_content_.gtin_no,
      rec_handling_unit_content_.hazard_code,
      rec_handling_unit_content_.hazard_code_description,
      row_no$_, 0);
   row_no$_ := row_no$_+1;
END Add_Result_Row___;

-----------------------------------------------------------------------------
-------------------- REPORT EXECUTION ---------------------------------------
-----------------------------------------------------------------------------

PROCEDURE Execute_Report (
   report_attr_    IN VARCHAR2,
   parameter_attr_ IN VARCHAR2 )
IS
   result_key$_              NUMBER;
   row_no$_                  NUMBER := 1;
   binds$_                   binds$;
   xml$_                     CLOB;
   outer_filter_attr$_       VARCHAR2(32000);
   outer_filter_where$_      VARCHAR2(32000);
   inner_filter_attr$_       VARCHAR2(32000);
   inner_filter_where$_      VARCHAR2(32000);
   has_handling_unit_ BOOLEAN;
   rec_handling_unit_ get_handling_unit%ROWTYPE;
   par_handling_unit_ binds$;
   has_child_handling_unit_ BOOLEAN;
   rec_child_handling_unit_ get_child_handling_unit%ROWTYPE;
   par_child_handling_unit_ binds$;
   has_handling_unit_content_ BOOLEAN;
   rec_handling_unit_content_ get_handling_unit_content%ROWTYPE;
   par_handling_unit_content_ binds$;
BEGIN
   General_SYS.Init_Method(lu_name_, 'HANDL_UNIT_CONTENT_LABEL_RPI', 'Execute_Report');
   result_key$_                 := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Item_Value('RESULT_KEY', report_attr_));
   binds$_.handling_unit_id     := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Item_Value('HANDLING_UNIT_ID', parameter_attr_));

   Xml_Record_Writer_SYS.Create_Report_Header(xml$_, 'HANDL_UNIT_CONTENT_LABEL_REP', 'Handling Unit Content Label');

   DECLARE
      archive_notes_            VARCHAR2(200);
   BEGIN
      -- Set report notes displayed in the InfoServices archive
      archive_notes_ := Language_SYS.Translate_Constant(lu_name_, 'HANDLINGUNITID: Handling Unit ID:');
      archive_notes_ := archive_notes_ || binds$_.handling_unit_id; 
      Archive_API.Set_Notes(archive_notes_);  
   END;

   has_handling_unit_ := FALSE;
   par_handling_unit_ := binds$_;
   Xml_Record_Writer_SYS.Start_Element(xml$_, 'HANDLING_UNITS');
   OPEN get_handling_unit(binds$_.handling_unit_id);
   LOOP
      FETCH get_handling_unit INTO rec_handling_unit_;
      has_handling_unit_ := get_handling_unit%FOUND OR get_handling_unit%ROWCOUNT > 0;
      EXIT WHEN get_handling_unit%NOTFOUND;
      DECLARE
         handling_unit_rec_            Handling_Unit_API.Public_Rec;
         handling_unit_parent_rec_     Handling_Unit_API.Public_Rec;
         compiled_part_stock_rec_      Handling_Unit_API.Compiled_Part_Stock_Rec;
         $IF Component_Proj_SYS.INSTALLED $THEN
            project_rec_      Project_API.Public_Rec;
            activity_rec_     Activity_API.Public_Rec;
         $END
         $IF Component_Shpord_Sys.INSTALLED $THEN
            shop_ord_rec_     Shop_Ord_API.Public_Rec;
         $END
      BEGIN
         handling_unit_parent_rec_                        := Handling_Unit_API.Get(rec_handling_unit_.parent_handling_unit_id);
         rec_handling_unit_.parent_handling_unit_type_id  := handling_unit_parent_rec_.handling_unit_type_id;
         rec_handling_unit_.parent_type_description       := Handling_Unit_Type_API.Get_Description(handling_unit_parent_rec_.handling_unit_type_id);
         rec_handling_unit_.parent_sscc                   := handling_unit_parent_rec_.sscc;
         rec_handling_unit_.parent_alt_handl_unit_labl_id := handling_unit_parent_rec_.alt_handling_unit_label_id;       
         rec_handling_unit_.location_type                 := Inventory_Location_Type_API.Decode(Inventory_Location_API.Get_Location_Type(rec_handling_unit_.contract, rec_handling_unit_.location_no));
         rec_handling_unit_.cv_part_description           := Inventory_Part_API.Get_Description(rec_handling_unit_.contract,rec_handling_unit_.cv_part_no);      
         compiled_part_stock_rec_                         := Handling_Unit_API.Get_Compiled_Part_Stock_Info(binds$_.handling_unit_id);
         rec_handling_unit_.cv_qty_onhand                 := compiled_part_stock_rec_.qty_onhand;
         rec_handling_unit_.cv_catch_qty_onhand           := compiled_part_stock_rec_.catch_qty_onhand;
         rec_handling_unit_.cv_qty_in_transit             := compiled_part_stock_rec_.qty_in_transit;
         rec_handling_unit_.cv_catch_qty_in_transit       := compiled_part_stock_rec_.catch_qty_in_transit;
         rec_handling_unit_.cv_inventory_uom              := compiled_part_stock_rec_.inventory_uom;
         rec_handling_unit_.cv_catch_uom                  := compiled_part_stock_rec_.catch_uom;
         rec_handling_unit_.cv_unified_uom                := compiled_part_stock_rec_.unified_uom;
         rec_handling_unit_.cv_unified_catch_uom          := compiled_part_stock_rec_.unified_catch_uom;
         rec_handling_unit_.cv_condition_code             := compiled_part_stock_rec_.condition_code;
         rec_handling_unit_.cv_condition_code_description := Condition_Code_API.Get_Description(compiled_part_stock_rec_.condition_code);
         rec_handling_unit_.cv_last_activity_date         := compiled_part_stock_rec_.last_activity_date;
         rec_handling_unit_.cv_receipt_date               := compiled_part_stock_rec_.receipt_date;
         rec_handling_unit_.cv_last_count_date            := compiled_part_stock_rec_.last_count_date;
         rec_handling_unit_.cv_expiration_date            := compiled_part_stock_rec_.expiration_date;
         rec_handling_unit_.cv_availability_control_id    := compiled_part_stock_rec_.availability_control_id;
         rec_handling_unit_.cv_availability_description   := Part_Availability_Control_API.Get_Description(compiled_part_stock_rec_.availability_control_id);
         rec_handling_unit_.cv_part_ownership             := compiled_part_stock_rec_.part_ownership;
         rec_handling_unit_.cv_owner                      := compiled_part_stock_rec_.owner;
         rec_handling_unit_.cv_owner_name                 := compiled_part_stock_rec_.owner_name;
         rec_handling_unit_.cv_project_id                 := compiled_part_stock_rec_.project_id;
         $IF Component_Proj_SYS.INSTALLED $THEN
            project_rec_ := Project_API.Get(rec_handling_unit_.cv_project_id);
            rec_handling_unit_.cv_program_id              := project_rec_.program_id;
            rec_handling_unit_.cv_program_description     := Project_Program_Global_API.Get_Description(project_rec_.program_id);
            rec_handling_unit_.cv_project_name            := project_rec_.name;
      
            activity_rec_ := Activity_API.Get(rec_handling_unit_.cv_activity_sequence);
            rec_handling_unit_.cv_sub_project_id          := activity_rec_.sub_project_id;
            rec_handling_unit_.cv_sub_project_description := Sub_Project_API.Get_Description(rec_handling_unit_.cv_project_id, rec_handling_unit_.cv_sub_project_id);
            rec_handling_unit_.cv_activity_id             := activity_rec_.activity_no;
            rec_handling_unit_.cv_activity_description    := activity_rec_.description;     
         $END
         rec_handling_unit_.cv_rotable_part_pool_id       := compiled_part_stock_rec_.rotable_part_pool_id;
         rec_handling_unit_.cv_gtin_no                    := compiled_part_stock_rec_.gtin_no;
         rec_handling_unit_.cv_hazard_code                := compiled_part_stock_rec_.hazard_code;
         rec_handling_unit_.cv_hazard_code_description    := Safety_Instruction_API.Get_Description(compiled_part_stock_rec_.hazard_code);
         rec_handling_unit_.cv_total_inventory_value      := compiled_part_stock_rec_.total_inventory_value;
         rec_handling_unit_.cv_part_acquisition_value     := compiled_part_stock_rec_.part_acquisition_value;
         rec_handling_unit_.cv_total_acquisition_value    := compiled_part_stock_rec_.total_acquisition_value;
         rec_handling_unit_.cv_unified_qty_onhand         := compiled_part_stock_rec_.unified_qty_onhand;
         rec_handling_unit_.cv_unified_catch_qty_onhand   := compiled_part_stock_rec_.unified_catch_qty_onhand;
         rec_handling_unit_.cv_unified_qty_in_transit     := compiled_part_stock_rec_.unified_qty_in_transit;
         rec_handling_unit_.cv_unified_catch_qty_transit  := compiled_part_stock_rec_.unified_catch_qty_in_transit;
         rec_handling_unit_.total_source_ref_part_qty     := Handling_Unit_API.Get_Total_Source_Ref_Part_Qty(rec_handling_unit_.handling_unit_id);
         
         $IF Component_Shpord_Sys.INSTALLED $THEN
            handling_unit_rec_ := Handling_Unit_API.Get(rec_handling_unit_.handling_unit_id);
            IF (handling_unit_rec_.source_ref_type = 'SHOP_ORDER') THEN   
               shop_ord_rec_ := Shop_Ord_API.Get(handling_unit_rec_.source_ref1, handling_unit_rec_.source_ref2, handling_unit_rec_.source_ref3);
               rec_handling_unit_.so_part_no           := shop_ord_rec_.part_no;
               rec_handling_unit_.so_part_description  := Inventory_Part_API.Get_Description(rec_handling_unit_.contract, rec_handling_unit_.so_part_no);
               rec_handling_unit_.hu_max_capacity      := Part_Handling_Unit_API.Get_Max_Quantity_Capacity(rec_handling_unit_.so_part_no, rec_handling_unit_.handling_unit_type_id, (Inventory_Part_API.Get_Unit_Meas(rec_handling_unit_.contract, rec_handling_unit_.so_part_no)));
               rec_handling_unit_.so_reserved_lot      := Shop_Ord_API.Get_Lot_Batch_No(handling_unit_rec_.source_ref1, handling_unit_rec_.source_ref2, handling_unit_rec_.source_ref3);
               rec_handling_unit_.so_serial_begin      := shop_ord_rec_.serial_begin;
               rec_handling_unit_.so_eng_chg_level     := shop_ord_rec_.eng_chg_level;
               rec_handling_unit_.so_configuration_id  := shop_ord_rec_.configuration_id;
               rec_handling_unit_.so_condition_code    := shop_ord_rec_.condition_code; 
            END IF;   
        $END
      END;
      Xml_Record_Writer_SYS.Start_Element(xml$_, 'HANDLING_UNIT');
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CONTRACT', rec_handling_unit_.contract);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'STRUCTURE_LEVEL', rec_handling_unit_.structure_level);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'HANDLING_UNIT_ID', rec_handling_unit_.handling_unit_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'HANDLING_UNIT_TYPE_ID', rec_handling_unit_.handling_unit_type_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'TYPE_DESCRIPTION', rec_handling_unit_.type_description);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'HANDLING_UNIT_CATEGORY_ID', rec_handling_unit_.handling_unit_category_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CATEGORY_DESCRIPTION', rec_handling_unit_.category_description);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'PARENT_HANDLING_UNIT_ID', rec_handling_unit_.parent_handling_unit_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'PARENT_HANDLING_UNIT_TYPE_ID', rec_handling_unit_.parent_handling_unit_type_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'PARENT_TYPE_DESCRIPTION', rec_handling_unit_.parent_type_description);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'PARENT_SSCC', rec_handling_unit_.parent_sscc);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'PARENT_ALT_HANDL_UNIT_LABL_ID', rec_handling_unit_.parent_alt_handl_unit_labl_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'ACCESSORY_EXIST', rec_handling_unit_.accessory_exist);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'COMPOSITION', rec_handling_unit_.composition);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'WIDTH', rec_handling_unit_.width);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'HEIGHT', rec_handling_unit_.height);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'DEPTH', rec_handling_unit_.depth);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'UOM_FOR_LENGTH', rec_handling_unit_.uom_for_length);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'NET_WEIGHT', rec_handling_unit_.net_weight);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'TARE_WEIGHT', rec_handling_unit_.tare_weight);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'MANUAL_GROSS_WEIGHT', rec_handling_unit_.manual_gross_weight);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'OPERATIVE_GROSS_WEIGHT', rec_handling_unit_.operative_gross_weight);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'UOM_FOR_WEIGHT', rec_handling_unit_.uom_for_weight);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'MANUAL_VOLUME', rec_handling_unit_.manual_volume);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'OPERATIVE_VOLUME', rec_handling_unit_.operative_volume);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'UOM_FOR_VOLUME', rec_handling_unit_.uom_for_volume);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'ADDITIVE_VOLUME', rec_handling_unit_.additive_volume);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'SSCC', rec_handling_unit_.sscc);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'ALT_HANDLING_UNIT_LABEL_ID', rec_handling_unit_.alt_handling_unit_label_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'NO_OF_HANDLING_UNIT_LABELS', rec_handling_unit_.no_of_handling_unit_labels);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'MIX_OF_PART_NO_BLOCKED', rec_handling_unit_.mix_of_part_no_blocked);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'MIX_OF_COND_CODE_BLOCKED', rec_handling_unit_.mix_of_cond_code_blocked);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'MIX_OF_LOT_BATCH_BLOCKED', rec_handling_unit_.mix_of_lot_batch_blocked);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'MAX_VOLUME_CAPACITY', rec_handling_unit_.max_volume_capacity);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'MAX_WEIGHT_CAPACITY', rec_handling_unit_.max_weight_capacity);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'STACKABLE', rec_handling_unit_.stackable);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'LOCATION_NO', rec_handling_unit_.location_no);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'WAREHOUSE_ID', rec_handling_unit_.warehouse_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'IS_IN_PROJECT_INVENTORY', rec_handling_unit_.is_in_project_inventory);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'LOCATION_TYPE', rec_handling_unit_.location_type);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'BAY_ID', rec_handling_unit_.bay_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'TIER_ID', rec_handling_unit_.tier_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'BIN_ID', rec_handling_unit_.bin_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'ROW_ID', rec_handling_unit_.row_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_PART_NO', rec_handling_unit_.cv_part_no);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_PART_DESCRIPTION', rec_handling_unit_.cv_part_description);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_CONFIGURATION_ID', rec_handling_unit_.cv_configuration_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_LOT_BATCH_NO', rec_handling_unit_.cv_lot_batch_no);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_SERIAL_NO', rec_handling_unit_.cv_serial_no);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_ENG_CHG_LEVEL', rec_handling_unit_.cv_eng_chg_level);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_WAIV_DEV_REJ_NO', rec_handling_unit_.cv_waiv_dev_rej_no);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_TOTAL_QTY', rec_handling_unit_.cv_total_qty);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_INVENTORY_UOM', rec_handling_unit_.cv_inventory_uom);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_CATCH_UOM', rec_handling_unit_.cv_catch_uom);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_UNIFIED_UOM', rec_handling_unit_.cv_unified_uom);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_UNIFIED_CATCH_UOM', rec_handling_unit_.cv_unified_catch_uom);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_CONDITION_CODE', rec_handling_unit_.cv_condition_code);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_CONDITION_CODE_DESCRIPTION', rec_handling_unit_.cv_condition_code_description);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'TOP_PARENT_HANDLING_UNIT_ID', rec_handling_unit_.top_parent_handling_unit_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'TOP_PARENT_HU_TYPE_ID', rec_handling_unit_.top_parent_hu_type_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'TOP_PARENT_HU_TYPE_DESC', rec_handling_unit_.top_parent_hu_type_desc);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'TOP_PARENT_SSCC', rec_handling_unit_.top_parent_sscc);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'TOP_PARENT_ALT_HU_LABEL_ID', rec_handling_unit_.top_parent_alt_hu_label_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_ACTIVITY_SEQUENCE', rec_handling_unit_.cv_activity_sequence);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_QTY_ONHAND', rec_handling_unit_.cv_qty_onhand);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_CATCH_QTY_ONHAND', rec_handling_unit_.cv_catch_qty_onhand);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_QTY_IN_TRANSIT', rec_handling_unit_.cv_qty_in_transit);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_CATCH_QTY_IN_TRANSIT', rec_handling_unit_.cv_catch_qty_in_transit);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_LAST_ACTIVITY_DATE', rec_handling_unit_.cv_last_activity_date);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_RECEIPT_DATE', rec_handling_unit_.cv_receipt_date);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_LAST_COUNT_DATE', rec_handling_unit_.cv_last_count_date);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_EXPIRATION_DATE', rec_handling_unit_.cv_expiration_date);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_AVAILABILITY_CONTROL_ID', rec_handling_unit_.cv_availability_control_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_AVAILABILITY_DESCRIPTION', rec_handling_unit_.cv_availability_description);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_PART_OWNERSHIP', rec_handling_unit_.cv_part_ownership);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_OWNER', rec_handling_unit_.cv_owner);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_OWNER_NAME', rec_handling_unit_.cv_owner_name);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_PROJECT_ID', rec_handling_unit_.cv_project_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_PROGRAM_ID', rec_handling_unit_.cv_program_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_PROGRAM_DESCRIPTION', rec_handling_unit_.cv_program_description);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_PROJECT_NAME', rec_handling_unit_.cv_project_name);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_SUB_PROJECT_ID', rec_handling_unit_.cv_sub_project_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_SUB_PROJECT_DESCRIPTION', rec_handling_unit_.cv_sub_project_description);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_ACTIVITY_ID', rec_handling_unit_.cv_activity_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_ACTIVITY_DESCRIPTION', rec_handling_unit_.cv_activity_description);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_ROTABLE_PART_POOL_ID', rec_handling_unit_.cv_rotable_part_pool_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_GTIN_NO', rec_handling_unit_.cv_gtin_no);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_HAZARD_CODE', rec_handling_unit_.cv_hazard_code);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_HAZARD_CODE_DESCRIPTION', rec_handling_unit_.cv_hazard_code_description);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_TOTAL_INVENTORY_VALUE', rec_handling_unit_.cv_total_inventory_value);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_PART_ACQUISITION_VALUE', rec_handling_unit_.cv_part_acquisition_value);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_TOTAL_ACQUISITION_VALUE', rec_handling_unit_.cv_total_acquisition_value);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_UNIFIED_QTY_ONHAND', rec_handling_unit_.cv_unified_qty_onhand);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_UNIFIED_CATCH_QTY_ONHAND', rec_handling_unit_.cv_unified_catch_qty_onhand);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_UNIFIED_QTY_IN_TRANSIT', rec_handling_unit_.cv_unified_qty_in_transit);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_UNIFIED_CATCH_QTY_TRANSIT', rec_handling_unit_.cv_unified_catch_qty_transit);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'SOURCE_REF_PART_QTY', rec_handling_unit_.source_ref_part_qty);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'TOTAL_SOURCE_REF_PART_QTY', rec_handling_unit_.total_source_ref_part_qty);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'SO_PART_NO', rec_handling_unit_.so_part_no);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'SO_PART_DESCRIPTION', rec_handling_unit_.so_part_description);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'HU_MAX_CAPACITY', rec_handling_unit_.hu_max_capacity);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'SO_RESERVED_LOT', rec_handling_unit_.so_reserved_lot);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'SO_SERIAL_BEGIN', rec_handling_unit_.so_serial_begin);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'SO_ENG_CHG_LEVEL', rec_handling_unit_.so_eng_chg_level);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'SO_CONFIGURATION_ID', rec_handling_unit_.so_configuration_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'SO_CONDITION_CODE', rec_handling_unit_.so_condition_code);
      has_child_handling_unit_ := FALSE;
      par_child_handling_unit_ := binds$_;
      binds$_.handling_unit_id := rec_handling_unit_.handling_unit_id;
      Xml_Record_Writer_SYS.Start_Element(xml$_, 'CHILD_HANDLING_UNITS');
      OPEN get_child_handling_unit(rec_handling_unit_.handling_unit_id);
      LOOP
         FETCH get_child_handling_unit INTO rec_child_handling_unit_;
         has_child_handling_unit_ := get_child_handling_unit%FOUND OR get_child_handling_unit%ROWCOUNT > 0;
         EXIT WHEN get_child_handling_unit%NOTFOUND;
         DECLARE
            handling_unit_rec_            Handling_Unit_API.Public_Rec;
            handling_unit_type_rec_       Handling_Unit_Type_API.Public_Rec;
            handling_unit_parent_rec_     Handling_Unit_API.Public_Rec;
            compiled_part_stock_rec_      Handling_Unit_API.Compiled_Part_Stock_Rec;
            $IF Component_Proj_SYS.INSTALLED $THEN
               project_rec_      Project_API.Public_Rec;
               activity_rec_     Activity_API.Public_Rec;
            $END
            $IF Component_Shpord_Sys.INSTALLED $THEN
               shop_ord_rec_     Shop_Ord_API.Public_Rec;
            $END
         BEGIN
            handling_unit_parent_rec_                              := Handling_Unit_API.Get(rec_child_handling_unit_.parent_handling_unit_id);
            rec_child_handling_unit_.parent_handling_unit_type_id  := handling_unit_parent_rec_.handling_unit_type_id;
            rec_child_handling_unit_.parent_type_description       := Handling_Unit_Type_API.Get_Description(handling_unit_parent_rec_.handling_unit_type_id);
            rec_child_handling_unit_.parent_sscc                   := handling_unit_parent_rec_.sscc;
            rec_child_handling_unit_.parent_alt_handl_unit_labl_id := handling_unit_parent_rec_.alt_handling_unit_label_id;       
            rec_child_handling_unit_.location_type                 := Inventory_Location_Type_API.Decode(Inventory_Location_API.Get_Location_Type(rec_child_handling_unit_.contract, rec_child_handling_unit_.location_no));
            rec_child_handling_unit_.cv_part_description           := Inventory_Part_API.Get_Description(rec_child_handling_unit_.contract,rec_child_handling_unit_.cv_part_no);
            compiled_part_stock_rec_                               := Handling_Unit_API.Get_Compiled_Part_Stock_Info(rec_child_handling_unit_.handling_unit_id);
            rec_child_handling_unit_.cv_qty_onhand                 := compiled_part_stock_rec_.qty_onhand;
            rec_child_handling_unit_.cv_catch_qty_onhand           := compiled_part_stock_rec_.catch_qty_onhand;
            rec_child_handling_unit_.cv_qty_in_transit             := compiled_part_stock_rec_.qty_in_transit;
            rec_child_handling_unit_.cv_catch_qty_in_transit       := compiled_part_stock_rec_.catch_qty_in_transit;
            rec_child_handling_unit_.cv_inventory_uom              := compiled_part_stock_rec_.inventory_uom;
            rec_child_handling_unit_.cv_catch_uom                  := compiled_part_stock_rec_.catch_uom;
            rec_child_handling_unit_.cv_unified_uom                := compiled_part_stock_rec_.unified_uom;
            rec_child_handling_unit_.cv_unified_catch_uom          := compiled_part_stock_rec_.unified_catch_uom;
            rec_child_handling_unit_.cv_condition_code             := compiled_part_stock_rec_.condition_code;
            rec_child_handling_unit_.cv_condition_code_description := Condition_Code_API.Get_Description(compiled_part_stock_rec_.condition_code);
            rec_child_handling_unit_.cv_last_activity_date         := compiled_part_stock_rec_.last_activity_date;
            rec_child_handling_unit_.cv_receipt_date               := compiled_part_stock_rec_.receipt_date;
            rec_child_handling_unit_.cv_last_count_date            := compiled_part_stock_rec_.last_count_date;
            rec_child_handling_unit_.cv_expiration_date            := compiled_part_stock_rec_.expiration_date;
            rec_child_handling_unit_.cv_availability_control_id    := compiled_part_stock_rec_.availability_control_id;
            rec_child_handling_unit_.cv_availability_description   := Part_Availability_Control_API.Get_Description(compiled_part_stock_rec_.availability_control_id);
            rec_child_handling_unit_.cv_part_ownership             := compiled_part_stock_rec_.part_ownership;
            rec_child_handling_unit_.cv_owner                      := compiled_part_stock_rec_.owner;
            rec_child_handling_unit_.cv_owner_name                 := compiled_part_stock_rec_.owner_name;
            rec_child_handling_unit_.cv_project_id                 := compiled_part_stock_rec_.project_id;
            $IF Component_Proj_SYS.INSTALLED $THEN
               project_rec_ := Project_API.Get(rec_child_handling_unit_.cv_project_id);
               rec_child_handling_unit_.cv_program_id              := project_rec_.program_id;
               rec_child_handling_unit_.cv_program_description     := Project_Program_Global_API.Get_Description(project_rec_.program_id);
               rec_child_handling_unit_.cv_project_name            := project_rec_.name;
         
               activity_rec_                                       := Activity_API.Get(rec_child_handling_unit_.cv_activity_sequence);
               rec_child_handling_unit_.cv_sub_project_id          := activity_rec_.sub_project_id;
               rec_child_handling_unit_.cv_sub_project_description := Sub_Project_API.Get_Description(rec_child_handling_unit_.cv_project_id, rec_child_handling_unit_.cv_sub_project_id);
               rec_child_handling_unit_.cv_activity_id             := activity_rec_.activity_no;
               rec_child_handling_unit_.cv_activity_description    := activity_rec_.description;     
            $END
            rec_child_handling_unit_.cv_rotable_part_pool_id         := compiled_part_stock_rec_.rotable_part_pool_id;
            rec_child_handling_unit_.cv_gtin_no                      := compiled_part_stock_rec_.gtin_no;
            rec_child_handling_unit_.cv_hazard_code                  := compiled_part_stock_rec_.hazard_code;
            rec_child_handling_unit_.cv_hazard_code_description      := Safety_Instruction_API.Get_Description(compiled_part_stock_rec_.hazard_code);
            rec_child_handling_unit_.cv_total_inventory_value        := compiled_part_stock_rec_.total_inventory_value;
            rec_child_handling_unit_.cv_part_acquisition_value       := compiled_part_stock_rec_.part_acquisition_value;
            rec_child_handling_unit_.cv_total_acquisition_value      := compiled_part_stock_rec_.total_acquisition_value;
            rec_child_handling_unit_.cv_unified_qty_onhand           := compiled_part_stock_rec_.unified_qty_onhand;
            rec_child_handling_unit_.cv_unified_catch_qty_onhand     := compiled_part_stock_rec_.unified_catch_qty_onhand;
            rec_child_handling_unit_.cv_unified_qty_in_transit       := compiled_part_stock_rec_.unified_qty_in_transit;
            rec_child_handling_unit_.cv_unified_catch_qty_transit    := compiled_part_stock_rec_.unified_catch_qty_in_transit;
            rec_child_handling_unit_.total_source_ref_part_qty       := Handling_Unit_API.Get_Total_Source_Ref_Part_Qty(rec_child_handling_unit_.handling_unit_id);
            
            $IF Component_Shpord_Sys.INSTALLED $THEN
               handling_unit_rec_ := Handling_Unit_API.Get(rec_child_handling_unit_.handling_unit_id);
               IF (handling_unit_rec_.source_ref_type = 'SHOP_ORDER') THEN   
                  shop_ord_rec_ := Shop_Ord_API.Get(handling_unit_rec_.source_ref1, handling_unit_rec_.source_ref2, handling_unit_rec_.source_ref3);
                  rec_child_handling_unit_.so_part_no           := shop_ord_rec_.part_no;
                  rec_child_handling_unit_.so_part_description  := Inventory_Part_API.Get_Description(rec_child_handling_unit_.contract, rec_child_handling_unit_.so_part_no);
                  rec_child_handling_unit_.hu_max_capacity      := Part_Handling_Unit_API.Get_Max_Quantity_Capacity(rec_child_handling_unit_.so_part_no, rec_child_handling_unit_.handling_unit_type_id, 
                                                                                                                    (Inventory_Part_API.Get_Unit_Meas(rec_child_handling_unit_.contract, rec_child_handling_unit_.so_part_no)));
                  rec_child_handling_unit_.so_reserved_lot      := Shop_Ord_API.Get_Lot_Batch_No(handling_unit_rec_.source_ref1, handling_unit_rec_.source_ref2, handling_unit_rec_.source_ref3);
                  rec_child_handling_unit_.so_serial_begin      := shop_ord_rec_.serial_begin;
                  rec_child_handling_unit_.so_eng_chg_level     := shop_ord_rec_.eng_chg_level;
                  rec_child_handling_unit_.so_configuration_id  := shop_ord_rec_.configuration_id;
                  rec_child_handling_unit_.so_condition_code    := shop_ord_rec_.condition_code; 
               END IF;   
           $END
         END;
         Xml_Record_Writer_SYS.Start_Element(xml$_, 'CHILD_HANDLING_UNIT');
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CONTRACT', rec_child_handling_unit_.contract);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'STRUCTURE_LEVEL', rec_child_handling_unit_.structure_level);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'HANDLING_UNIT_ID', rec_child_handling_unit_.handling_unit_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'HANDLING_UNIT_TYPE_ID', rec_child_handling_unit_.handling_unit_type_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'TYPE_DESCRIPTION', rec_child_handling_unit_.type_description);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'HANDLING_UNIT_CATEGORY_ID', rec_child_handling_unit_.handling_unit_category_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CATEGORY_DESCRIPTION', rec_child_handling_unit_.category_description);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'PARENT_HANDLING_UNIT_ID', rec_child_handling_unit_.parent_handling_unit_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'PARENT_HANDLING_UNIT_TYPE_ID', rec_child_handling_unit_.parent_handling_unit_type_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'PARENT_TYPE_DESCRIPTION', rec_child_handling_unit_.parent_type_description);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'PARENT_SSCC', rec_child_handling_unit_.parent_sscc);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'PARENT_ALT_HANDL_UNIT_LABL_ID', rec_child_handling_unit_.parent_alt_handl_unit_labl_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'ACCESSORY_EXIST', rec_child_handling_unit_.accessory_exist);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'COMPOSITION', rec_child_handling_unit_.composition);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'WIDTH', rec_child_handling_unit_.width);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'HEIGHT', rec_child_handling_unit_.height);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'DEPTH', rec_child_handling_unit_.depth);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'UOM_FOR_LENGTH', rec_child_handling_unit_.uom_for_length);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'NET_WEIGHT', rec_child_handling_unit_.net_weight);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'TARE_WEIGHT', rec_child_handling_unit_.tare_weight);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'MANUAL_GROSS_WEIGHT', rec_child_handling_unit_.manual_gross_weight);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'OPERATIVE_GROSS_WEIGHT', rec_child_handling_unit_.operative_gross_weight);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'UOM_FOR_WEIGHT', rec_child_handling_unit_.uom_for_weight);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'MANUAL_VOLUME', rec_child_handling_unit_.manual_volume);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'OPERATIVE_VOLUME', rec_child_handling_unit_.operative_volume);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'UOM_FOR_VOLUME', rec_child_handling_unit_.uom_for_volume);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'ADDITIVE_VOLUME', rec_child_handling_unit_.additive_volume);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'SSCC', rec_child_handling_unit_.sscc);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'ALT_HANDLING_UNIT_LABEL_ID', rec_child_handling_unit_.alt_handling_unit_label_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'NO_OF_HANDLING_UNIT_LABELS', rec_child_handling_unit_.no_of_handling_unit_labels);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'MIX_OF_PART_NO_BLOCKED', rec_child_handling_unit_.mix_of_part_no_blocked);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'MIX_OF_COND_CODE_BLOCKED', rec_child_handling_unit_.mix_of_cond_code_blocked);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'MIX_OF_LOT_BATCH_BLOCKED', rec_child_handling_unit_.mix_of_lot_batch_blocked);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'MAX_VOLUME_CAPACITY', rec_child_handling_unit_.max_volume_capacity);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'MAX_WEIGHT_CAPACITY', rec_child_handling_unit_.max_weight_capacity);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'STACKABLE', rec_child_handling_unit_.stackable);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'LOCATION_NO', rec_child_handling_unit_.location_no);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'WAREHOUSE_ID', rec_child_handling_unit_.warehouse_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'IS_IN_PROJECT_INVENTORY', rec_child_handling_unit_.is_in_project_inventory);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'LOCATION_TYPE', rec_child_handling_unit_.location_type);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'BAY_ID', rec_child_handling_unit_.bay_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'TIER_ID', rec_child_handling_unit_.tier_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'BIN_ID', rec_child_handling_unit_.bin_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'ROW_ID', rec_child_handling_unit_.row_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_PART_NO', rec_child_handling_unit_.cv_part_no);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_PART_DESCRIPTION', rec_child_handling_unit_.cv_part_description);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_CONFIGURATION_ID', rec_child_handling_unit_.cv_configuration_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_LOT_BATCH_NO', rec_child_handling_unit_.cv_lot_batch_no);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_SERIAL_NO', rec_child_handling_unit_.cv_serial_no);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_ENG_CHG_LEVEL', rec_child_handling_unit_.cv_eng_chg_level);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_WAIV_DEV_REJ_NO', rec_child_handling_unit_.cv_waiv_dev_rej_no);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_TOTAL_QTY', rec_child_handling_unit_.cv_total_qty);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_INVENTORY_UOM', rec_child_handling_unit_.cv_inventory_uom);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_CATCH_UOM', rec_child_handling_unit_.cv_catch_uom);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_UNIFIED_UOM', rec_child_handling_unit_.cv_unified_uom);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_UNIFIED_CATCH_UOM', rec_child_handling_unit_.cv_unified_catch_uom);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_CONDITION_CODE', rec_child_handling_unit_.cv_condition_code);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_CONDITION_CODE_DESCRIPTION', rec_child_handling_unit_.cv_condition_code_description);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'TOP_PARENT_HANDLING_UNIT_ID', rec_child_handling_unit_.top_parent_handling_unit_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'TOP_PARENT_HU_TYPE_ID', rec_child_handling_unit_.top_parent_hu_type_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'TOP_PARENT_HU_TYPE_DESC', rec_child_handling_unit_.top_parent_hu_type_desc);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'TOP_PARENT_SSCC', rec_child_handling_unit_.top_parent_sscc);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'TOP_PARENT_ALT_HU_LABEL_ID', rec_child_handling_unit_.top_parent_alt_hu_label_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_ACTIVITY_SEQUENCE', rec_child_handling_unit_.cv_activity_sequence);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_QTY_ONHAND', rec_child_handling_unit_.cv_qty_onhand);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_CATCH_QTY_ONHAND', rec_child_handling_unit_.cv_catch_qty_onhand);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_QTY_IN_TRANSIT', rec_child_handling_unit_.cv_qty_in_transit);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_CATCH_QTY_IN_TRANSIT', rec_child_handling_unit_.cv_catch_qty_in_transit);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_LAST_ACTIVITY_DATE', rec_child_handling_unit_.cv_last_activity_date);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_RECEIPT_DATE', rec_child_handling_unit_.cv_receipt_date);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_LAST_COUNT_DATE', rec_child_handling_unit_.cv_last_count_date);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_EXPIRATION_DATE', rec_child_handling_unit_.cv_expiration_date);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_AVAILABILITY_CONTROL_ID', rec_child_handling_unit_.cv_availability_control_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_AVAILABILITY_DESCRIPTION', rec_child_handling_unit_.cv_availability_description);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_PART_OWNERSHIP', rec_child_handling_unit_.cv_part_ownership);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_OWNER', rec_child_handling_unit_.cv_owner);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_OWNER_NAME', rec_child_handling_unit_.cv_owner_name);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_PROJECT_ID', rec_child_handling_unit_.cv_project_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_PROGRAM_ID', rec_child_handling_unit_.cv_program_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_PROGRAM_DESCRIPTION', rec_child_handling_unit_.cv_program_description);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_PROJECT_NAME', rec_child_handling_unit_.cv_project_name);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_SUB_PROJECT_ID', rec_child_handling_unit_.cv_sub_project_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_SUB_PROJECT_DESCRIPTION', rec_child_handling_unit_.cv_sub_project_description);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_ACTIVITY_ID', rec_child_handling_unit_.cv_activity_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_ACTIVITY_DESCRIPTION', rec_child_handling_unit_.cv_activity_description);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_ROTABLE_PART_POOL_ID', rec_child_handling_unit_.cv_rotable_part_pool_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_GTIN_NO', rec_child_handling_unit_.cv_gtin_no);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_HAZARD_CODE', rec_child_handling_unit_.cv_hazard_code);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_HAZARD_CODE_DESCRIPTION', rec_child_handling_unit_.cv_hazard_code_description);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_TOTAL_INVENTORY_VALUE', rec_child_handling_unit_.cv_total_inventory_value);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_PART_ACQUISITION_VALUE', rec_child_handling_unit_.cv_part_acquisition_value);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_TOTAL_ACQUISITION_VALUE', rec_child_handling_unit_.cv_total_acquisition_value);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_UNIFIED_QTY_ONHAND', rec_child_handling_unit_.cv_unified_qty_onhand);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_UNIFIED_CATCH_QTY_ONHAND', rec_child_handling_unit_.cv_unified_catch_qty_onhand);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_UNIFIED_QTY_IN_TRANSIT', rec_child_handling_unit_.cv_unified_qty_in_transit);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'CV_UNIFIED_CATCH_QTY_TRANSIT', rec_child_handling_unit_.cv_unified_catch_qty_transit);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'SOURCE_REF_PART_QTY', rec_child_handling_unit_.source_ref_part_qty);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'TOTAL_SOURCE_REF_PART_QTY', rec_child_handling_unit_.total_source_ref_part_qty);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'SO_PART_NO', rec_child_handling_unit_.so_part_no);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'SO_PART_DESCRIPTION', rec_child_handling_unit_.so_part_description);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'HU_MAX_CAPACITY', rec_child_handling_unit_.hu_max_capacity);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'SO_RESERVED_LOT', rec_child_handling_unit_.so_reserved_lot);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'SO_SERIAL_BEGIN', rec_child_handling_unit_.so_serial_begin);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'SO_ENG_CHG_LEVEL', rec_child_handling_unit_.so_eng_chg_level);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'SO_CONFIGURATION_ID', rec_child_handling_unit_.so_configuration_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'SO_CONDITION_CODE', rec_child_handling_unit_.so_condition_code);
         has_handling_unit_content_ := FALSE;
         par_handling_unit_content_ := binds$_;
         binds$_.handling_unit_id := rec_child_handling_unit_.handling_unit_id;
         Xml_Record_Writer_SYS.Start_Element(xml$_, 'HANDLING_UNIT_CONTENTS');
         OPEN get_handling_unit_content(rec_child_handling_unit_.handling_unit_id);
         LOOP
            FETCH get_handling_unit_content INTO rec_handling_unit_content_;
            has_handling_unit_content_ := get_handling_unit_content%FOUND OR get_handling_unit_content%ROWCOUNT > 0;
            EXIT WHEN get_handling_unit_content%NOTFOUND;
            DECLARE
               condition_code_      VARCHAR2(10);
            
               inventory_part_rec_  Inventory_Part_API.Public_Rec;
               handling_unit_rec_   Handling_Unit_API.Public_Rec;
               $IF Component_Proj_SYS.INSTALLED $THEN
                  project_rec_      Project_API.Public_Rec;
                  activity_rec_     activity_API.Public_Rec;
               $END
            BEGIN
               inventory_part_rec_ := Inventory_Part_API.Get(rec_handling_unit_content_.contract,rec_handling_unit_content_.part_no);
               handling_unit_rec_  := Handling_Unit_API.Get(rec_handling_unit_content_.handling_unit_id);
            
               rec_handling_unit_content_.part_description := Inventory_Part_API.Get_Description(rec_handling_unit_content_.contract,rec_handling_unit_content_.part_no);
               condition_code_ := Condition_Code_Manager_API.Get_Condition_Code(rec_handling_unit_content_.part_no,rec_handling_unit_content_.serial_no,rec_handling_unit_content_.lot_batch_no ); 
               rec_handling_unit_content_.condition_code := condition_code_;
               rec_handling_unit_content_.condition_code_description := Condition_Code_API.Get_Description(condition_code_);
               rec_handling_unit_content_.unified_qty_onhand := Inventory_Part_API.Get_User_Default_Converted_Qty(rec_handling_unit_content_.contract,rec_handling_unit_content_.part_no,rec_handling_unit_content_.qty_onhand,'REMOVE');
               rec_handling_unit_content_.unified_catch_qty_onhand := Inventory_Part_API.Get_User_Default_Converted_Qty(rec_handling_unit_content_.contract,rec_handling_unit_content_.part_no,rec_handling_unit_content_.catch_qty_onhand,'REMOVE','CATCH');
               rec_handling_unit_content_.unified_qty_in_transit := Inventory_Part_API.Get_User_Default_Converted_Qty(rec_handling_unit_content_.contract,rec_handling_unit_content_.part_no,rec_handling_unit_content_.qty_in_transit,'REMOVE');
               rec_handling_unit_content_.unified_catch_qty_in_transit := Inventory_Part_API.Get_User_Default_Converted_Qty(rec_handling_unit_content_.contract,rec_handling_unit_content_.part_no,rec_handling_unit_content_.catch_qty_in_transit,'REMOVE','CATCH');
               rec_handling_unit_content_.inventory_uom := inventory_part_rec_.unit_meas;
               rec_handling_unit_content_.catch_uom := Inventory_Part_API.Get_Enabled_Catch_Unit_Meas(rec_handling_unit_content_.contract,rec_handling_unit_content_.part_no);
               rec_handling_unit_content_.unified_uom := Inventory_Part_API.Get_User_Default_Unit_Meas(rec_handling_unit_content_.part_no);
               rec_handling_unit_content_.unified_catch_uom := Inventory_Part_API.Get_User_Default_Unit_Meas(rec_handling_unit_content_.part_no,'CATCH');
               rec_handling_unit_content_.availability_description := Part_Availability_Control_API.Get_Description(rec_handling_unit_content_.availability_control_id);
               rec_handling_unit_content_.owner := NVL(rec_handling_unit_content_.owning_customer_no, rec_handling_unit_content_.owning_vendor_no);
               rec_handling_unit_content_.owner_name := Inventory_Part_In_Stock_API.Get_Owner_Name(rec_handling_unit_content_.contract,rec_handling_unit_content_.part_no,rec_handling_unit_content_.configuration_id,rec_handling_unit_content_.location_no,rec_handling_unit_content_.lot_batch_no,rec_handling_unit_content_.serial_no,rec_handling_unit_content_.eng_chg_level,rec_handling_unit_content_.waiv_dev_rej_no,rec_handling_unit_content_.activity_seq, rec_handling_unit_content_.handling_unit_id);
               rec_handling_unit_content_.total_inventory_value := rec_handling_unit_content_.qty_onhand * (Inventory_Part_In_Stock_API.Get_Company_Owned_Unit_Cost (rec_handling_unit_content_.contract,rec_handling_unit_content_.part_no,rec_handling_unit_content_.configuration_id,rec_handling_unit_content_.location_no,rec_handling_unit_content_.lot_batch_no,rec_handling_unit_content_.serial_no,rec_handling_unit_content_.eng_chg_level,rec_handling_unit_content_.waiv_dev_rej_no,rec_handling_unit_content_.activity_seq, rec_handling_unit_content_.handling_unit_id));
               $IF Component_Order_SYS.INSTALLED $THEN
                  rec_handling_unit_content_.part_acquisition_value := Cust_Part_Acq_Value_API.Get_Acquisition_Value(rec_handling_unit_content_.owning_customer_no,rec_handling_unit_content_.part_no,rec_handling_unit_content_.serial_no,rec_handling_unit_content_.lot_batch_no);
                  rec_handling_unit_content_.total_acquisition_value := rec_handling_unit_content_.qty_onhand * rec_handling_unit_content_.part_acquisition_value;
               $END 
               $IF Component_Proj_SYS.INSTALLED $THEN
                  project_rec_ := Project_API.Get(rec_handling_unit_content_.project_id);
                  rec_handling_unit_content_.program_id := project_rec_.program_id;
                  rec_handling_unit_content_.program_description := Project_Program_Global_API.Get_Description(project_rec_.program_id);
                  rec_handling_unit_content_.project_name := project_rec_.name;
                  
                  activity_rec_ := Activity_API.Get(rec_handling_unit_content_.activity_seq);
                  rec_handling_unit_content_.sub_project_id := activity_rec_.sub_project_id;
                  rec_handling_unit_content_.sub_project_description := Sub_Project_API.Get_Description(rec_handling_unit_content_.project_id, rec_handling_unit_content_.sub_project_id);
                  rec_handling_unit_content_.activity_id := activity_rec_.activity_no;
                  rec_handling_unit_content_.activity_description := activity_rec_.description;     
               $END
            
               rec_handling_unit_content_.gtin_no := Part_Gtin_API.Get_Default_Gtin_No(rec_handling_unit_content_.part_no);
               rec_handling_unit_content_.hazard_code := inventory_part_rec_.hazard_code;
               rec_handling_unit_content_.hazard_code_description := Safety_Instruction_API.Get_Description(inventory_part_rec_.hazard_code);
            END;
            Xml_Record_Writer_SYS.Start_Element(xml$_, 'HANDLING_UNIT_CONTENT');
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'HANDLING_UNIT_ID', rec_handling_unit_content_.handling_unit_id);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'CONTRACT', rec_handling_unit_content_.contract);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'PART_NO', rec_handling_unit_content_.part_no);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'PART_DESCRIPTION', rec_handling_unit_content_.part_description);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'CONFIGURATION_ID', rec_handling_unit_content_.configuration_id);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'LOCATION_NO', rec_handling_unit_content_.location_no);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'LOT_BATCH_NO', rec_handling_unit_content_.lot_batch_no);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'SERIAL_NO', rec_handling_unit_content_.serial_no);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'ENG_CHG_LEVEL', rec_handling_unit_content_.eng_chg_level);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'WAIV_DEV_REJ_NO', rec_handling_unit_content_.waiv_dev_rej_no);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'CONDITION_CODE', rec_handling_unit_content_.condition_code);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'CONDITION_CODE_DESCRIPTION', rec_handling_unit_content_.condition_code_description);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'ACTIVITY_SEQ', rec_handling_unit_content_.activity_seq);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'QTY_ONHAND', rec_handling_unit_content_.qty_onhand);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'CATCH_QTY_ONHAND', rec_handling_unit_content_.catch_qty_onhand);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'QTY_IN_TRANSIT', rec_handling_unit_content_.qty_in_transit);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'CATCH_QTY_IN_TRANSIT', rec_handling_unit_content_.catch_qty_in_transit);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'ROTABLE_PART_POOL_ID', rec_handling_unit_content_.rotable_part_pool_id);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'UNIFIED_QTY_ONHAND', rec_handling_unit_content_.unified_qty_onhand);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'UNIFIED_CATCH_QTY_ONHAND', rec_handling_unit_content_.unified_catch_qty_onhand);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'UNIFIED_QTY_IN_TRANSIT', rec_handling_unit_content_.unified_qty_in_transit);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'UNIFIED_CATCH_QTY_IN_TRANSIT', rec_handling_unit_content_.unified_catch_qty_in_transit);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'INVENTORY_UOM', rec_handling_unit_content_.inventory_uom);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'CATCH_UOM', rec_handling_unit_content_.catch_uom);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'UNIFIED_UOM', rec_handling_unit_content_.unified_uom);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'UNIFIED_CATCH_UOM', rec_handling_unit_content_.unified_catch_uom);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'LAST_ACTIVITY_DATE', rec_handling_unit_content_.last_activity_date);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'RECEIPT_DATE', rec_handling_unit_content_.receipt_date);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'LAST_COUNT_DATE', rec_handling_unit_content_.last_count_date);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'AVAILABILITY_CONTROL_ID', rec_handling_unit_content_.availability_control_id);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'AVAILABILITY_DESCRIPTION', rec_handling_unit_content_.availability_description);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'EXPIRATION_DATE', rec_handling_unit_content_.expiration_date);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'PART_OWNERSHIP', rec_handling_unit_content_.part_ownership);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'OWNING_CUSTOMER_NO', rec_handling_unit_content_.owning_customer_no);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'OWNING_VENDOR_NO', rec_handling_unit_content_.owning_vendor_no);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'OWNER', rec_handling_unit_content_.owner);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'OWNER_NAME', rec_handling_unit_content_.owner_name);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'TOTAL_INVENTORY_VALUE', rec_handling_unit_content_.total_inventory_value);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'PART_ACQUISITION_VALUE', rec_handling_unit_content_.part_acquisition_value);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'TOTAL_ACQUISITION_VALUE', rec_handling_unit_content_.total_acquisition_value);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'PROJECT_ID', rec_handling_unit_content_.project_id);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'PROGRAM_ID', rec_handling_unit_content_.program_id);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'PROGRAM_DESCRIPTION', rec_handling_unit_content_.program_description);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'PROJECT_NAME', rec_handling_unit_content_.project_name);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'SUB_PROJECT_ID', rec_handling_unit_content_.sub_project_id);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'SUB_PROJECT_DESCRIPTION', rec_handling_unit_content_.sub_project_description);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'ACTIVITY_ID', rec_handling_unit_content_.activity_id);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'ACTIVITY_DESCRIPTION', rec_handling_unit_content_.activity_description);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'GTIN_NO', rec_handling_unit_content_.gtin_no);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'HAZARD_CODE', rec_handling_unit_content_.hazard_code);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'HAZARD_CODE_DESCRIPTION', rec_handling_unit_content_.hazard_code_description);
            Xml_Record_Writer_SYS.End_Element(xml$_, 'HANDLING_UNIT_CONTENT');
            Add_Result_Row___(result_key$_,
                              binds$_ => binds$_,
                              rec_handling_unit_ => rec_handling_unit_,
                              rec_child_handling_unit_ => rec_child_handling_unit_,
                              rec_handling_unit_content_ => rec_handling_unit_content_,
                              row_no$_ => row_no$_);
         END LOOP;
         CLOSE get_handling_unit_content;
         Xml_Record_Writer_SYS.End_Element(xml$_, 'HANDLING_UNIT_CONTENTS');
         binds$_ := par_handling_unit_content_;
         IF NOT has_handling_unit_content_ THEN
            Add_Result_Row___(result_key$_,
                              binds$_ => binds$_,
                              rec_handling_unit_ => rec_handling_unit_,
                              rec_child_handling_unit_ => rec_child_handling_unit_,
                              row_no$_ => row_no$_);
         END IF;

         Xml_Record_Writer_SYS.End_Element(xml$_, 'CHILD_HANDLING_UNIT');
      END LOOP;
      CLOSE get_child_handling_unit;
      Xml_Record_Writer_SYS.End_Element(xml$_, 'CHILD_HANDLING_UNITS');
      binds$_ := par_child_handling_unit_;
      IF NOT has_child_handling_unit_ THEN
         Add_Result_Row___(result_key$_,
                           binds$_ => binds$_,
                           rec_handling_unit_ => rec_handling_unit_,
                           row_no$_ => row_no$_);
      END IF;

      Xml_Record_Writer_SYS.End_Element(xml$_, 'HANDLING_UNIT');
   END LOOP;
   CLOSE get_handling_unit;
   Xml_Record_Writer_SYS.End_Element(xml$_, 'HANDLING_UNITS');
   binds$_ := par_handling_unit_;
   IF NOT has_handling_unit_ THEN
      Add_Result_Row___(result_key$_,
                        binds$_ => binds$_,
                        row_no$_ => row_no$_);
   END IF;

   Xml_Record_Writer_SYS.End_Element(xml$_, 'HANDL_UNIT_CONTENT_LABEL_REP');
   Report_SYS.Finish_Xml_Report('HANDL_UNIT_CONTENT_LABEL_REP', result_key$_, xml$_);
   EXCEPTION
      WHEN OTHERS THEN
         IF get_handling_unit%ISOPEN THEN
            CLOSE get_handling_unit;
         END IF;
         IF get_child_handling_unit%ISOPEN THEN
            CLOSE get_child_handling_unit;
         END IF;
         IF get_handling_unit_content%ISOPEN THEN
            CLOSE get_handling_unit_content;
         END IF;
         RAISE;
END Execute_Report;

-----------------------------------------------------------------------------
-------------------- FOUNDATION1 METHODS ------------------------------------
-----------------------------------------------------------------------------
-- Test
--   Invokes the report method for testing purposes.
-- Init
--   Dummy procedure that can be called at database startup to ensure that
--   this package is loaded into memory for performance reasons only.
-----------------------------------------------------------------------------

FUNCTION Test (
   handling_unit_id_         IN NUMBER)
RETURN NUMBER
IS
   result_key_     NUMBER;
   report_attr_    VARCHAR2(200);
   parameter_attr_ VARCHAR2(32000);
BEGIN
   General_SYS.Init_Method(lu_name_, 'HANDL_UNIT_CONTENT_LABEL_RPI', 'Test');
   Report_SYS.Get_Result_Key__(result_key_);
   Client_SYS.Add_To_Attr('RESULT_KEY', result_key_, report_attr_);
   IF (handling_unit_id_ IS NOT NULL) THEN
      Client_SYS.Add_To_Attr('HANDLING_UNIT_ID', handling_unit_id_, parameter_attr_);
   END IF;
   Execute_Report(report_attr_, parameter_attr_);
   RETURN result_key_;
END Test;


PROCEDURE Init
IS
BEGIN
   NULL;
END Init;

END HANDL_UNIT_CONTENT_LABEL_RPI;
/
SHOW ERROR