-----------------------------------------------------------------------------
--
--  Fragment:     TransportTaskAvailableHandlingUnitsTab
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  2019-03-18  ChFolk  SCUXXW4-14910, Created to move tabs in transport Task to seperate fragments.
-----------------------------------------------------------------------------

layer Core;

FUNCTION Get_Available_Handling_Units_On_Transport_Task___(
   show_hu_level_            IN VARCHAR2,
   parent_transport_task_id_ IN NUMBER,
   from_contract_            IN VARCHAR2,
   to_contract_              IN VARCHAR2,
   from_location_group_      IN VARCHAR2,
   parent_fixed_db_          IN VARCHAR2 ) RETURN Objid_Arr
IS
   base_collection_ Objid_Arr := Objid_Arr();
   CURSOR get_show_all IS
      SELECT objid FROM TRANSPORT_TASK_HANDLING_UNIT
       WHERE transport_task_id != parent_transport_task_id_
       AND from_contract = from_contract_
       AND to_contract = to_contract_
       AND from_location_group = from_location_group_        
       AND handling_unit_id > 0
       AND Transport_Task_API.Is_Fixed_Or_Started_Str(transport_task_id) = 'FALSE';     
     
   CURSOR get_show_top_level IS
      SELECT objid FROM TRANSPORT_TASK_HANDLING_UNIT
      WHERE transport_task_id != parent_transport_task_id_
      AND from_contract = from_contract_
      AND to_contract = to_contract_
      AND from_location_group = from_location_group_
      AND outermost_db = 'TRUE' AND handling_unit_id > 0
      AND Transport_Task_API.Is_Fixed_Or_Started_Str(transport_task_id) = 'FALSE';   
   
BEGIN  
   IF (show_hu_level_ = 'ShowOnlyTopLevel') THEN
      FOR rec_ IN get_show_top_level LOOP
         base_collection_.extend;
         base_collection_(base_collection_.last) := rec_.objid;
      END LOOP;  
   ELSE  
      FOR rec_ IN get_show_all LOOP
         base_collection_.extend;
         base_collection_(base_collection_.last) := rec_.objid;
      END LOOP;     
   END IF;
   RETURN base_collection_;   
END Get_Available_Handling_Units_On_Transport_Task___;

PROCEDURE Append_To_Current_Transport_Task___ (
   selection_    IN VARCHAR2 )
IS
 --  key_list_            VARCHAR2(32000) := CONCAT(selection_, ';');
   msg_                      CLOB;
   parent_transport_task_id_ NUMBER;
   transport_task_id_        NUMBER;
   handling_unit_id_         NUMBER;
   parent_fixed_db_          VARCHAR2(5);
   current_selection_        VARCHAR2(2000);
   records_                  json_array_t := json_array_t.parse(selection_);
BEGIN
--   WHILE (INSTR(key_list_, ';') > 0) LOOP     
--      Message_SYS.Add_Attribute(msg_, 'TRANSPORT_TASK_ID', Client_SYS.Get_Key_Reference_Value(key_list_, 'TRANSPORT_TASK_ID'));
--      Message_SYS.Add_Attribute(msg_, 'HANDLING_UNIT_ID', Client_SYS.Get_Key_Reference_Value(key_list_, 'HANDLING_UNIT_ID'));      
--      key_list_ := SUBSTR(key_list_, (INSTR(key_list_, ';') + 1));           
--   END LOOP;
 --  Transport_Task_Handl_Unit_API.New_HU_Transport_Task(msg_, TO_NUMBER(parent_transport_task_id_), allow_move_to_fixed_task_db_, 'FALSE');
   FOR i_ IN 0 .. records_.get_size - 1 LOOP      
      current_selection_ := records_.get_string(i_);
      parent_transport_task_id_ := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Key_Reference_Value(current_selection_, 'PARENT_TRANSPORT_TASK_ID'));
      parent_fixed_db_ := Client_SYS.Get_Key_Reference_Value(current_selection_, 'PARENT_FIXED_DB');
      transport_task_id_ := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Key_Reference_Value(current_selection_, 'TRANSPORT_TASK_ID'));
      handling_unit_id_ := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Key_Reference_Value(current_selection_, 'HANDLING_UNIT_ID'));
      Transport_Task_Initial_Check___(transport_task_id_);
      Handling_Unit_Extended_Initial_Check___(handling_unit_id_);
      
      Message_SYS.Add_Attribute(msg_, 'TRANSPORT_TASK_ID', transport_task_id_);
      Message_SYS.Add_Attribute(msg_, 'HANDLING_UNIT_ID', handling_unit_id_);
   --   Transport_Task_Line_API.Move(transport_task_id_, line_no_, parent_transport_task_id_, 'TRUE', allow_move_to_fixed_); 
   END LOOP;
   Transport_Task_Handl_Unit_API.New_HU_Transport_Task(msg_, parent_transport_task_id_, parent_fixed_db_, 'FALSE');
   
END Append_To_Current_Transport_Task___;
