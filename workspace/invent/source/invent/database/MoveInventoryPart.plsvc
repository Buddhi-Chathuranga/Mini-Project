-----------------------------------------------------------------------------
--
--  Logical unit: MoveInventoryPart
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ------------------------------------------------------------------------
--  210525  JaThlk  Bug 158861(SCZ-14726), Modified Get_Location_Info___ to remove the code block which sets values to line_exist.
--  210105  WaSalk  SC2020R1-11386, Modified Create_Inventory_Part_In_Stock_Delivery___() and to update availability_ctrl_id_ and waiv_dev_rej_no_ as necessary.
--  190729  ChFolk  SCUXXW4-23311, Removed functions Get_Default_Availability_Control_Id___, Get_Location_Info___ and Check_Line_Exist___
--  190729          as tey are merged with Get_Location_Info___.
--  190403  ShKolk  SCUXXW4-17953, Added Create_Inventory_Part_In_Stock_Delivery___ and Update_Inventory_Part_In_Stock_Delivery___ to avoid overtaking CRUD_Create___ and CRUD_Update___
--  181023  ChFolk  SCUXXW4-5231, Modified CRUD_Update___ to support change of WDRNo. Added method Get_Inventory_Part_In_Stock_Info___.
--  180921  JaThlk  SCUXXW4-6021, Made it possible to add default values in updating records.
--  180828  JaThlk  SCUXXW4-6021, Implemented CRUD_Create___ and CRUD_Update___ by overtaking them.  
--  180703  JaThlk  SCUXXW4-6021, Created to implement command buttons and to overtake CRUD.
--------------------------------------------------------------------------------------------

layer Core;

PROCEDURE Create_Inventory_Part_In_Stock_Delivery___ (
   contract_                    IN VARCHAR2,
   part_no_                     IN VARCHAR2,
   configuration_id_            IN VARCHAR2,
   serial_no_                   IN VARCHAR2,
   waiv_dev_rej_no_             IN VARCHAR2,
   lot_batch_no_                IN VARCHAR2,
   eng_chg_level_               IN VARCHAR2,
   activity_seq_                IN NUMBER,
   handling_unit_id_            IN NUMBER,
   location_no_                 IN VARCHAR2,
   parent_location_no_          IN VARCHAR2,
   parent_contract_             IN VARCHAR2,
   parent_waiv_dev_rej_no_      IN VARCHAR2,
   catch_quantity_moved_        IN NUMBER,
   new_availability_control_id_ IN VARCHAR2,
   consume_stock_               IN VARCHAR2,
   session_id_                  IN NUMBER,
   expiration_date_             IN DATE,
   destination_                 IN VARCHAR2,
   quantity_moved_              IN NUMBER,
   note_                        IN VARCHAR2 ) 
IS
   unattached_from_handling_unit_  VARCHAR2(5);
   catch_quantity_                 NUMBER;
   to_destination_                 VARCHAR2(20);
   to_waiv_dev_rej_no_             VARCHAR2(15);
   
BEGIN
   catch_quantity_ := catch_quantity_moved_;
   IF (destination_ = 'MoveToTransit') THEN
      to_destination_ := Inventory_Part_Destination_API.Decode(Inventory_Part_Destination_API.DB_MOVE_TO_TRANSIT);
   ELSE
      to_destination_ := Inventory_Part_Destination_API.Decode(Inventory_Part_Destination_API.DB_MOVE_TO_INVENTORY);
   END IF;
   IF parent_waiv_dev_rej_no_ != waiv_dev_rej_no_ THEN
      to_waiv_dev_rej_no_ := waiv_dev_rej_no_;
   ELSE
       to_waiv_dev_rej_no_ := NULL;
   END IF;
   
   Invent_Part_Quantity_Util_API.Move_Part(unattached_from_handling_unit_ => unattached_from_handling_unit_,
                                           catch_quantity_                => catch_quantity_,
                                           contract_                      => parent_contract_,
                                           part_no_                       => part_no_,
                                           configuration_id_              => configuration_id_,
                                           location_no_                   => parent_location_no_,  
                                           lot_batch_no_                  => lot_batch_no_,
                                           serial_no_                     => serial_no_,
                                           eng_chg_level_                 => eng_chg_level_,
                                           waiv_dev_rej_no_               => parent_waiv_dev_rej_no_,
                                           activity_seq_                  => activity_seq_,
                                           handling_unit_id_              => handling_unit_id_,
                                           expiration_date_               => expiration_date_,
                                           to_contract_                   => contract_,
                                           to_location_no_                => location_no_,
                                           to_destination_                => to_destination_,
                                           quantity_                      => quantity_moved_,
                                           quantity_reserved_             => 0,
                                           move_comment_                  => note_,
                                           order_no_                      => NULL,
                                           release_no_                    => NULL,
                                           sequence_no_                   => NULL,
                                           line_item_no_                  => NULL,
                                           order_type_                    => NULL,
                                           consume_consignment_stock_     => consume_stock_,
                                           to_waiv_dev_rej_no_            => to_waiv_dev_rej_no_,
                                           part_tracking_session_id_      => session_id_,
                                           transport_task_id_             => NULL,
                                           validate_hu_struct_position_   => TRUE,
                                           move_part_shipment_            => FALSE,
                                           reserved_stock_rec_            => NULL,
                                           availability_ctrl_id_          => new_availability_control_id_);
END Create_Inventory_Part_In_Stock_Delivery___;

PROCEDURE Update_Inventory_Part_In_Stock_Delivery___ (
   key_                         IN Inventory_Part_In_Stock_Delivery_Key,
   parent_location_no_          IN VARCHAR2,
   parent_contract_             IN VARCHAR2,
   parent_waiv_dev_rej_no_      IN VARCHAR2,
   catch_quantity_moved_        IN NUMBER,
   new_availability_control_id_ IN VARCHAR2,
   new_waiv_dev_rej_no_         IN VARCHAR2,
   consume_stock_               IN VARCHAR2,
   session_id_                  IN NUMBER,
   expiration_date_             IN DATE,
   destination_                 IN VARCHAR2,
   quantity_moved_              IN NUMBER,
   note_                        IN VARCHAR2 ) 
IS
   unattached_from_handling_unit_  VARCHAR2(5);
   temp_catch_quantity_moved_      NUMBER;
   to_destination_                 VARCHAR2(20);
   
BEGIN
   temp_catch_quantity_moved_ := catch_quantity_moved_;
   IF (destination_ = 'MoveToTransit') THEN
      to_destination_ := Inventory_Part_Destination_API.Decode(Inventory_Part_Destination_API.DB_MOVE_TO_TRANSIT);
   ELSE
      to_destination_ := Inventory_Part_Destination_API.Decode(Inventory_Part_Destination_API.DB_MOVE_TO_INVENTORY);
   END IF;
   
   Invent_Part_Quantity_Util_API.Move_Part(unattached_from_handling_unit_ => unattached_from_handling_unit_,
                                           catch_quantity_                => temp_catch_quantity_moved_,
                                           contract_                      => parent_contract_,
                                           part_no_                       => key_.part_no,
                                           configuration_id_              => key_.configuration_id,
                                           location_no_                   => parent_location_no_,  
                                           lot_batch_no_                  => key_.lot_batch_no,
                                           serial_no_                     => key_.serial_no,
                                           eng_chg_level_                 => key_.eng_chg_level,
                                           waiv_dev_rej_no_               => parent_waiv_dev_rej_no_,
                                           activity_seq_                  => key_.activity_seq,
                                           handling_unit_id_              => key_.handling_unit_id,
                                           expiration_date_               => expiration_date_,
                                           to_contract_                   => key_.contract,
                                           to_location_no_                => key_.location_no,
                                           to_destination_                => to_destination_,
                                           quantity_                      => quantity_moved_,
                                           quantity_reserved_             => 0,
                                           move_comment_                  => note_,
                                           order_no_                      => NULL,
                                           release_no_                    => NULL,
                                           sequence_no_                   => NULL,
                                           line_item_no_                  => NULL,
                                           order_type_                    => NULL,
                                           consume_consignment_stock_     => consume_stock_,
                                           to_waiv_dev_rej_no_            => new_waiv_dev_rej_no_,
                                           part_tracking_session_id_      => session_id_,
                                           transport_task_id_             => NULL,
                                           validate_hu_struct_position_   => TRUE,
                                           move_part_shipment_            => FALSE,
                                           reserved_stock_rec_            => NULL,
                                           availability_ctrl_id_          => new_availability_control_id_);
END Update_Inventory_Part_In_Stock_Delivery___;   
   
PROCEDURE Modify_Default_Location___ (
   contract_    IN VARCHAR2,
   part_no_     IN VARCHAR2,
   location_no_ IN VARCHAR2 ) 
IS
BEGIN
   Inventory_Part_Def_Loc_API.Modify_Default_Location(contract_,part_no_,location_no_);                                                                                                           
END Modify_Default_Location___;

FUNCTION Get_Location_Info___(
   contract_         IN VARCHAR2,
   location_no_      IN VARCHAR2 )  RETURN Location_Info_Structure_Rec
IS
   rec_                 Location_Info_Structure_Rec; 
   location_info_rec_   Inventory_Location_API.Public_Rec;
 BEGIN
   location_info_rec_ := Inventory_Location_API.Get(contract_, location_no_);
   rec_.warehouse     := location_info_rec_.warehouse;
   rec_.bay_no        := location_info_rec_.bay_no;      
   rec_.row_no        := location_info_rec_.row_no;
   rec_.tier_no       := location_info_rec_.tier_no;
   rec_.bin_no        := location_info_rec_.bin_no;
   rec_.availability_control_id := Warehouse_Bay_Bin_API.Get_Availability_Control_Id(contract_, rec_.warehouse, rec_.bay_no, rec_.tier_no, rec_.row_no, rec_.bin_no);
   RETURN rec_;
END Get_Location_Info___;

FUNCTION Get_Default_Location___ (
   contract_ IN VARCHAR2,
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2
IS
BEGIN
   RETURN Inventory_Part_Def_Loc_API.Get_Location_No(contract_, part_no_);
END Get_Default_Location___;

FUNCTION Get_Inventory_Part_In_Stock_Info___(
   contract_         IN VARCHAR2,
   part_no_          IN VARCHAR2,
   configuration_id_ IN VARCHAR2,
   location_         IN VARCHAR2,
   lot_batch_no_     IN VARCHAR2,
   serial_no_        IN VARCHAR2,
   eng_chg_level_    IN VARCHAR2,
   waiv_dev_rej_no_  IN VARCHAR2,
   activity_seq_     IN NUMBER,
   handling_unit_id_ IN NUMBER )  RETURN Inv_Part_In_Stock_Info_Structure_Rec
IS
   stock_info_rec_ Inv_Part_In_Stock_Info_Structure_Rec;
BEGIN
   IF (Inventory_Part_In_Stock_API.Check_Exist(contract_,
                                               part_no_,
                                               configuration_id_,
                                               location_,
                                               lot_batch_no_,
                                               serial_no_,
                                               eng_chg_level_,
                                               waiv_dev_rej_no_,
                                               activity_seq_,
                                               handling_unit_id_)) THEN
      stock_info_rec_.part_exist := TRUE;
      stock_info_rec_.availability_ctrl_id := Inventory_Part_In_Stock_API.Get_Availability_Control_Id(contract_,
                                                                                                      part_no_,
                                                                                                      configuration_id_,
                                                                                                      location_,
                                                                                                      lot_batch_no_,
                                                                                                      serial_no_,
                                                                                                      eng_chg_level_,
                                                                                                      waiv_dev_rej_no_,
                                                                                                      activity_seq_,
                                                                                                      handling_unit_id_);
   ELSE
      stock_info_rec_.part_exist := FALSE;
   END IF;
   RETURN stock_info_rec_;   
END Get_Inventory_Part_In_Stock_Info___;


FUNCTION Check_Shortage_Exists___ (
	parent_contract_   IN VARCHAR2,
	contract_          IN VARCHAR2) RETURN NUMBER
IS
BEGIN
	RETURN Shortage_Demand_API.Shortage_Exists(contract_, parent_contract_);
END Check_Shortage_Exists___;


