-----------------------------------------------------------------------------
--
--  Logical unit: CalculateActualTimeNeededperWarehouseTaskLineHandling
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  181115  RAKUSE  Created. (SCUXXW4-5689)
-----------------------------------------------------------------------------

layer Core;

@Override
FUNCTION Get_Parameters___ RETURN Parameters_Structure_Rec
IS
   method_name_ VARCHAR2(200) := 'WAREHOUSE_TASK_API.CALC_ACT_SETUP_TIME_NEEDED';
   rec_ Parameters_Structure_Rec := super();
   msg_ VARCHAR2(32000);   
BEGIN
   rec_.SCHEDULE_METHOD_ID := Batch_Schedule_Method_API.Get_Schedule_Method_Id(method_name_);
   rec_.DESCRIPTION := Batch_Schedule_Method_API.Get_Description(rec_.SCHEDULE_METHOD_ID);
            
   Batch_Schedule_Method_Par_API.Get_Default_Values__(msg_, rec_.SCHEDULE_METHOD_ID);

   Message_SYS.Get_Attribute(msg_, 'CONTRACT_', rec_.CONTRACT);
   Message_SYS.Get_Attribute(msg_, 'TASK_TYPE_', rec_.TASK_TYPE);
   
   Message_SYS.Get_Attribute(msg_, 'FROM_DATE_', rec_.FROM_DATE);
   Message_SYS.Get_Attribute(msg_, 'TO_DATE_', rec_.TO_DATE);
   
   Message_SYS.Get_Attribute(msg_, 'EXECUTION_OFFSET_FROM_', rec_.EXECUTION_OFFSET_FROM);
--   IF rec_.EXECUTION_OFFSET_FROM IS NULL THEN
--      rec_.EXECUTION_OFFSET_FROM :=0;
--   END IF;
   
   Message_SYS.Get_Attribute(msg_, 'EXECUTION_OFFSET_TO_', rec_.EXECUTION_OFFSET_TO);
--   IF rec_.EXECUTION_OFFSET_TO IS NULL THEN
--      rec_.EXECUTION_OFFSET_TO :=0;
--   END IF;
   
   --Making Execution offset from and Execution offset to, zero by default.
   rec_.EXECUTION_OFFSET_FROM :=0;
   rec_.EXECUTION_OFFSET_TO :=0;

   RETURN rec_;
END Get_Parameters___;

FUNCTION Construct_Param_Attr___ (
   virt_rec_ IN OUT Task_Virtual_Rec ) RETURN VARCHAR2
IS
   attr_ VARCHAR2(32000);
BEGIN
   Client_SYS.Add_To_Attr('CONTRACT_', virt_rec_.CONTRACT, attr_);
   Client_SYS.Add_To_Attr('TASK_TYPE_', virt_rec_.TASK_TYPE, attr_);
   
   Empty_When_Schedule_Option___(virt_rec_, virt_rec_.FROM_DATE);
   Client_SYS.Add_To_Attr('FROM_DATE_', virt_rec_.FROM_DATE, attr_);
   
   Empty_When_Schedule_Option___(virt_rec_, virt_rec_.TO_DATE);
   Client_SYS.Add_To_Attr('TO_DATE_', virt_rec_.TO_DATE, attr_);
   
   Empty_When_Start_Now_Option___(virt_rec_, virt_rec_.EXECUTION_OFFSET_FROM);
   Client_SYS.Add_To_Attr('EXECUTION_OFFSET_FROM_', virt_rec_.EXECUTION_OFFSET_FROM, attr_);
   
   Empty_When_Start_Now_Option___(virt_rec_, virt_rec_.EXECUTION_OFFSET_TO);
   Client_SYS.Add_To_Attr('EXECUTION_OFFSET_TO_', virt_rec_.EXECUTION_OFFSET_TO, attr_);
   
   RETURN attr_;

END Construct_Param_Attr___;
