-----------------------------------------------------------------------------
--
--  Logical unit: PackingInstruction
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  180902  ChFolk  SCUXXW4-5646, Added objid into Packing_Instruction_With_Root as it needs for Aurena client.
--  180810  LEPESE  SCUXXW4-12802, Added prompt, flags and datatype for accessory_exist_db, generate_sscc_no_db, print_label_db,
--  180810          mix_of_part_no_blocked_db, mix_of_cond_code_blocked_db, mix_of_lot_batch_blocked_db in Packing_Instruction_With_Root
--  180614  SWiclk  SCUXXW4-12210, Added accessory_exist_db, generate_sscc_no_db, print_label_db, mix_of_part_no_blocked_db, 
--  180614          mix_of_cond_code_blocked_db, mix_of_lot_batch_blocked_db Packing_Instruction_With_Root.
--  170706  NaLrlk  STRSC-9164, Removed PACKING_INSTRUCTION_LOV.
--  170113  MaEelk  STRSC-5351, Moved PACKING_INSTRUCTION_LOV from public view to a private view
--  170110  NaSalk  LIM-9754, Added new view PACKING_INSTRUCTION_LOV.
-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

COLUMN Packing_Instruction_Desc IS
   Flags      = 'A---L'
   Datatype   = 'STRING(200)'
   Prompt     = 'Description';

COLUMN Handling_Unit_Type_Id IS
   Flags      = 'A---L'
   Datatype   = 'STRING(25)/UPPERCASE'
   Prompt     = 'Handling Unit Type ID'
   Ref        = 'HandlingUnitType';

COLUMN Handing_Unit_Type_Desc IS
   Flags      = 'A---L'
   Datatype   = 'STRING(200)'
   Prompt     = 'Handling Unit Type Description';

COLUMN Accessory_Exist IS
   Flags      = 'A---L'
   Datatype   = 'STRING(200)'
   Enumeration= 'FndBoolean'
   Prompt     = 'Accessory Exist';

COLUMN Generate_Sscc_No IS
   Flags      = 'A---L'
   Datatype   = 'STRING(200)'
   Enumeration= 'FndBoolean'
   Prompt     = 'Generate SSCC';

COLUMN Mix_Of_Part_No_Blocked IS
   Flags      = 'A---L'
   Datatype   = 'STRING(200)'
   Enumeration= 'FndBoolean'
   Prompt     = 'Mix of Part Numbers Blocked';

COLUMN Mix_Of_Lot_Batch_Blocked IS
   Flags      = 'A---L'
   Datatype   = 'STRING(200)'
   Enumeration= 'FndBoolean'
   Prompt     = 'Mix of Lot Batch Numbers Blocked';

COLUMN Mix_Of_Cond_Code_Blocked IS
   Flags      = 'A---L'
   Datatype   = 'STRING(200)'
   Enumeration= 'FndBoolean'
   Prompt     = 'Mix of Condition Codes Blocked';

COLUMN Print_Label IS
   Flags      = 'A---L'
   Datatype   = 'STRING(200)'
   Enumeration= 'FndBoolean'
   Prompt     = 'Print Handling Unit Label';

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------

-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

VIEW Packing_Instruction_With_Root IS
   Prompt = 'Packing Instruction'
   Packing_Instruction_Id.Flags = 'K---L'
   Accessory_Exist_Db.Flags = 'A----'
   Accessory_Exist_Db.Datatype = 'STRING(10)'
   Accessory_Exist_Db.Prompt = 'Accessory Exist'
   generate_sscc_no_db.Flags = 'A----'
   generate_sscc_no_db.Datatype = 'STRING(10)'
   generate_sscc_no_db.Prompt = 'Generate SSCC'
   print_label_db.Flags = 'A----'
   print_label_db.Datatype = 'STRING(10)'
   print_label_db.Prompt = 'Print Handling Unit Label'
   mix_of_part_no_blocked_db.Flags = 'A----'
   mix_of_part_no_blocked_db.Datatype = 'STRING(10)'
   mix_of_part_no_blocked_db.Prompt = 'Mix of Part Numbers Blocked'
   mix_of_cond_code_blocked_db.Flags = 'A----'
   mix_of_cond_code_blocked_db.Datatype = 'STRING(10)'
   mix_of_cond_code_blocked_db.Prompt = 'Mix of Condition Codes Blocked'
   mix_of_lot_batch_blocked_db.Flags = 'A----'
   mix_of_lot_batch_blocked_db.Datatype = 'STRING(10)'
   mix_of_lot_batch_blocked_db.Prompt = 'Mix of Lot Batch Numbers Blocked'
SELECT pi.packing_instruction_id                                          packing_instruction_id,
       Packing_Instruction_API.Get_Description(pi.packing_instruction_id) packing_instruction_desc,
       pin.handling_unit_type_id                                          handling_unit_type_id,
       Handling_Unit_Type_API.Get_Description(pin.handling_unit_type_id)  handing_unit_type_desc,
       Pack_Instr_Node_Accessory_API.Accessory_Exist(pin.packing_instruction_id, pin.node_id) accessory_exist,
       Pack_Instr_Node_Accessory_API.Accessory_Exist_Db(pin.packing_instruction_id, pin.node_id) accessory_exist_db,
       Fnd_Boolean_API.Decode(pin.generate_sscc_no)                       generate_sscc_no,
       pin.generate_sscc_no                                               generate_sscc_no_db,
       Fnd_Boolean_API.Decode(pin.print_label)                            print_label, 
       pin.print_label                                                    print_label_db,
       Fnd_Boolean_API.Decode(pin.mix_of_part_no_blocked)                 mix_of_part_no_blocked,
       pin.mix_of_part_no_blocked                                         mix_of_part_no_blocked_db,
       Fnd_Boolean_API.Decode(pin.mix_of_cond_code_blocked)               mix_of_cond_code_blocked,
       pin.mix_of_cond_code_blocked                                       mix_of_cond_code_blocked_db,
       Fnd_Boolean_API.Decode(pin.mix_of_lot_batch_blocked)               mix_of_lot_batch_blocked,
       pin.mix_of_lot_batch_blocked                                       mix_of_lot_batch_blocked_db,
       pi.rowid                                                           objid
FROM  packing_instruction_tab pi,
      packing_instruction_node_tab pin
WHERE pi.packing_instruction_id = pin.packing_instruction_id
  AND pin.parent_node_id IS NULL;
