---------------------------------------------------------------------------------------
-- File        : PctrlBasicDataInvent.ins
--
-- Purpose     : Defines basic data for posting control, such as control types,
--               posting types and allowed combinations, for component
--               Invoic (Invent)
--               The statements are executed both during Fresh install and upgrade.
--               NOTE the following:
--               * If the key, e.g. posting type 'IP1', does not exist then it
--                 will be defined in Invoice. The description will be
--                 defined as translation for this key (=translation attribute)
--                 for language 'en'.
--               * If the key, e.g. posting type 'IP1', exists then only the
--                 installation translation for this key (=translation attribute)
--                 will be modified for language 'en'
---
-- Localization: Not needed.
--               Note that the descriptions for posting types and control types are
--               inserted automatically as PROG texts into the component
--               translation database. Handling of translations is made separately.
--
--  Date     Sign   History
--  ------   ------ -------------------------------------------------------------------
--  211116   Hastlk SC21R2-5949, Changed the posting types Description, by removing the existing word ('Cross-border') in M297, M298, M299,M300, M301 and M302.
--  210916   MaEelk SC21R2-2783, Tax Flag was set to M297, M299, M301 qnd M302.
--  210715   MaEelk SC21R2-1767, Added posting types M297, M298, M299,M300, M301 and M302.
--  210715          Enabled control types AC1 and AC7 for them.
--  160808   Hecolk FINLIFE-118, Enabled control type AC22 for posting types M1, M3 and M4
--  150813   SBalLK Bug 123993, Enabled control types C46 and C83 for posting types M181 and M182.
--  140912   NaSalk Added new posting types and its control types for M258 and M260.
--  140828   NaSalk Added new posting types and its control types for M257 and M259.
--  140325   UdGnlk PBSC-8043, Moved posting control insertions of dynamic components to Invent_Installation_API.
--  131028   GayDLK Bug 112969, Enabled control types C46 and C83 for posting types M8 and M9.  
--  130730   PraWlk Bug 109836, Enabled control type AC2 for posting types M110 and M111.
--  110906   PraWlk Bug 98648, Modified the posting type descriptions of M181 and M182. 
--  081127   HoInlk Bug 78708, Added reminder for reservation of Posting Type and Control Type.
--  081015   NuVelk Bug 75662, Added control types C98 and C99 to posting type M53.
--  ----------------------------- Wings Merge End -------------------------------------
--  070129   Dinklk Merged Sparx code.
--  061220   KaDilk DIAD1211,Added control type M191.
--  ----------------------------- Wings Merge Start -----------------------------------
--  061128   LEPESE Added M195.
--  060721   Samnlk Modify the method call Posting_Ctrl_API.Insert_Control_Type, replace the value in the 4th parameter.
--  060410   RoJalk New Posting Type in Inventory Counting - Added posting type M184,
--  060410          modified the description of M7.
--------------------------------- 13.4.0 ----------------------------------------------
--  060327   JoEd   Added control types C90 and C91 to posting types M181 and M182.
--  060316   JoEd   Added control types C90 and C91 to posting type M88.
--  060215   ShVese SCAD623: Removed allowed combinations for M178 except AC1.
--  051228   JoEd   Added allowed combinations for control types C90 and C91.
--  051121   LEPESE Added posting types M181 and M182.
--  050830   JoAnSe DMC Merge: Added allowed combinations for M1 and M3 and control type C90
--  050905   reanpl Added sort_order
--  050829   AnLaSe SCAD623: Added posting type M178, added control type C89 and allowed combinations for M178.
--  040525   SHVESE M4/Transibal Merge- Added posting types M156, M157 and the allowed combinations for them.
--  031104   JOHESE Moved insert of mpccom control types to mpccom
--  030911   ChJalk Bug 36770, Modified Posting_Ctrl_API.Insert_Control_Type(C12','INVENT','*....) and Added COMMIT at the end.
--  021030   LEPESE Bug 32465, changed view and package for control type C83.
--  020219   DaMase IID 10109, Added Control type C83 and added allowed combinations M1, M2, M3, M4, M5, M6, M7,
--                  M53, M60, M61, M62, M88 and M89 for this.
--  020213   DaMase IID 20003, Making use of Combination Control Types
---------------------------------------------------------------------------------------

/*********************************************************************************************************
-- NOTE!
-- Before a new posting type or control type is added it should be reserved by adding a new
-- entry in the XL-sheet 'ReservedPostingTypes.xls'.
-- Currently this file is located in the directory 'lkpdevfs1\RnD\Product\SCM&CRM\TechStuff'

-- If Posting types are dynamically dependent on other components then recommendation is to 
-- move such occurrences to section Invent_Installation_API.Post_Installation_Data
**********************************************************************************************************/
PROMPT Inserting control types

BEGIN
Posting_Ctrl_API.Insert_Control_Type('C6','INVENT','Part Type for Inventory Part','ORDINARY','INVENTORY_PART_TYPE','INVENTORY_PART_TYPE2_API');
Posting_Ctrl_API.Insert_Control_Type('C7','INVENT','Commodity Group 1 for Inventory Part','ORDINARY','COMMODITY_GROUP','COMMODITY_GROUP_API');
Posting_Ctrl_API.Insert_Control_Type('C8','INVENT','Commodity Group 2 for Inventory Part','ORDINARY','COMMODITY_GROUP','COMMODITY_GROUP_API');
Posting_Ctrl_API.Insert_Control_Type('C9','INVENT','Asset Class for Inventory Part','ORDINARY','ASSET_CLASS','ASSET_CLASS_API');
Posting_Ctrl_API.Insert_Control_Type('C10','INVENT','ABC Code for Inventory Part','ORDINARY','ABC_CLASS','ABC_CLASS_API');
Posting_Ctrl_API.Insert_Control_Type('C12','INVENT','Planner for Inventory Part','ORDINARY','INVENTORY_PART_PLANNER_LOV','INVENTORY_PART_PLANNER_API');
Posting_Ctrl_API.Insert_Control_Type('C32','INVENT','Accounting Group for Inventory Part','ORDINARY','ACCOUNTING_GROUP','ACCOUNTING_GROUP_API');
Posting_Ctrl_API.Insert_Control_Type('C46','INVENT','Location Type','ORDINARY','INVENTORY_LOCATION_TYPE','INVENTORY_LOCATION_TYPE2_API');
Posting_Ctrl_API.Insert_Control_Type('C49','INVENT','Product Family for Inventory Part','ORDINARY','INVENTORY_PRODUCT_FAMILY','INVENTORY_PRODUCT_FAMILY_API');
Posting_Ctrl_API.Insert_Control_Type('C50','INVENT','Product Code for Inventory Part','ORDINARY','INVENTORY_PRODUCT_CODE','INVENTORY_PRODUCT_CODE_API');
Posting_Ctrl_API.Insert_Control_Type('C83','INVENT','Location Group','ORDINARY','INVENTORY_LOCATION_GROUP_C83','INVENTORY_LOCATION_GROUP2_API');
Posting_Ctrl_API.Insert_Control_Type('C89','INVENT','Condition Code','ORDINARY','CONDITION_CODE','CONDITION_CODE_API');
Posting_Ctrl_API.Insert_Control_Type('C98','INVENT','Internal Customer','ORDINARY','INTERNAL_CUSTOMER','INTERNAL_CUSTOMER_API');
Posting_Ctrl_API.Insert_Control_Type('C99','INVENT','Internal Destination','ORDINARY','INTERNAL_DESTINATION_LOV2(COMPANY)','INTERNAL_DESTINATION2_API');
END;
/


PROMPT Inserting posting types...

BEGIN
Posting_Ctrl_API.Insert_Posting_Type('M1','Inventory','INVENT','N', sort_order_ => 1 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M1');
--
Posting_Ctrl_API.Insert_Posting_Type('M2','Internal Issue','INVENT','N', sort_order_ => 2 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M2');
--
Posting_Ctrl_API.Insert_Posting_Type('M3','Inventory Transfer','INVENT','N', sort_order_ => 3 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M3');
--
Posting_Ctrl_API.Insert_Posting_Type('M4','Inventory Transfer Between Sites','INVENT','N', sort_order_ => 4 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M4');
--
Posting_Ctrl_API.Insert_Posting_Type('M5','Receipt Without Purchase Order','INVENT','N', sort_order_ => 5 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M5');
--
Posting_Ctrl_API.Insert_Posting_Type('M6','Scrapping in Inventory','INVENT','N', sort_order_ => 6 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M6');
--
Posting_Ctrl_API.Insert_Posting_Type('M7','Positive Counting Difference','INVENT','N', sort_order_ => 7 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M7');
--
Posting_Ctrl_API.Insert_Posting_Type('M8','Inventory Value Increase','INVENT','N', sort_order_ => 8 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M8');
--
Posting_Ctrl_API.Insert_Posting_Type('M9','Inventory Value Decrease','INVENT','N', sort_order_ => 9 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M9');
--
Posting_Ctrl_API.Insert_Posting_Type('M51','Issue Addition','INVENT','N', sort_order_ => 51 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M51');
--
Posting_Ctrl_API.Insert_Posting_Type('M52','Revenue Issue Addition','INVENT','N', sort_order_ => 52 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M52');
--
Posting_Ctrl_API.Insert_Posting_Type('M53','Issue for Material Requisition','INVENT','N', sort_order_ => 53 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M53');
--
Posting_Ctrl_API.Insert_Posting_Type('M60','Consignment Stock','INVENT','N', sort_order_ => 60 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M60');
--
Posting_Ctrl_API.Insert_Posting_Type('M61','Consignment Stock Receipt','INVENT','N', sort_order_ => 61 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M61');
--
Posting_Ctrl_API.Insert_Posting_Type('M88','Inter Company Stock Movement due from','INVENT','N', sort_order_ => 88 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M88');
--
Posting_Ctrl_API.Insert_Posting_Type('M89','Inter Company Stock Movement due to','INVENT','N', sort_order_ => 89 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M89');
--
Posting_Ctrl_API.Insert_Posting_Type('M90','Price Difference Inter Company Material Transfer','INVENT','N', sort_order_ => 90 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M90');
--
Posting_Ctrl_API.Insert_Posting_Type('M107','Pre Accounting Material Requisition Row','INVENT','N', sort_order_ => 107 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M107');
--
Posting_Ctrl_API.Insert_Posting_Type('M109','Pre Accounting Material Requisition Header','INVENT','N', sort_order_ => 109 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M109');
--
Posting_Ctrl_API.Insert_Posting_Type('M110','Pre Accounting for Issue from Inventory','INVENT','N', sort_order_ => 110 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M110');
--
Posting_Ctrl_API.Insert_Posting_Type('M111','Pre Accounting for Receipt into Inventory','INVENT','N', sort_order_ => 111 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M111');
--
Posting_Ctrl_API.Insert_Posting_Type('M156','Inv Value Increase - Order Transit','INVENT','N', sort_order_ => 156 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M156');
--
Posting_Ctrl_API.Insert_Posting_Type('M157','Inv Value Decrease - Order Transit','INVENT','N', sort_order_ => 157 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M157');
--
Posting_Ctrl_API.Insert_Posting_Type('M178','Contra Account, Condition Code Change','INVENT','N', sort_order_ => 178 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M178');
--
Posting_Ctrl_API.Insert_Posting_Type('M181','Inventory Value Increase - Clearing Remaining Stock Value','INVENT','N', sort_order_ => 181 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M181');
--
Posting_Ctrl_API.Insert_Posting_Type('M182','Inventory Value Decrease - Clearing Remaining Stock Value','INVENT','N', sort_order_ => 182 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M182');
--
Posting_Ctrl_API.Insert_Posting_Type('M184','Negative Counting Difference','INVENT','N', sort_order_ => 184 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M184');

Posting_Ctrl_API.Insert_Posting_Type('M191','Contra Account, Rename of Serial','INVENT','N', sort_order_ => 191 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M191');

Posting_Ctrl_API.Insert_Posting_Type('M195','Contra Account, Location Group Change','INVENT','N', sort_order_ => 195 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M195');

Posting_Ctrl_API.Insert_Posting_Type('M257','Transfer from Company Owned to Company Rental Asset','INVENT','N', sort_order_ => 257 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M257');

Posting_Ctrl_API.Insert_Posting_Type('M258','Transfer from Company Rental Asset to Company Owned','INVENT','N', sort_order_ => 258 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M258');

Posting_Ctrl_API.Insert_Posting_Type('M259','Pre Accounting Transfer from Company Owned to Company Rental Asset','INVENT','N', sort_order_ => 259 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M259');

Posting_Ctrl_API.Insert_Posting_Type('M260','Pre Accounting Transfer from Company Rental Asset to Company Owned','INVENT','N', sort_order_ => 260 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M260');

Posting_Ctrl_API.Insert_Posting_Type('M297','Tax Disbursed, Intracompany Part Movements','INVENT','N', tax_flag_ => 'Y', sort_order_ => 297 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M297');

Posting_Ctrl_API.Insert_Posting_Type('M298','Counter Posting, Tax Disbursed, Intracompany Part Movements','INVENT','N', sort_order_ => 298 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M298');

Posting_Ctrl_API.Insert_Posting_Type('M299','Tax Received, Intracompany Part Movements','INVENT','N', tax_flag_ => 'Y', sort_order_ => 299 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M299');

Posting_Ctrl_API.Insert_Posting_Type('M300','Counter Posting, Tax Received, Intracompany Part Movements','INVENT','N', sort_order_ => 300 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M300');

Posting_Ctrl_API.Insert_Posting_Type('M301','Tax Received, Calculated Tax, Intracompany Part Movements','INVENT','N', tax_flag_ => 'Y', sort_order_ => 301 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M301');

Posting_Ctrl_API.Insert_Posting_Type('M302','Tax Disbursed, Calculated Tax, Intracompany Part Movements','INVENT','N', tax_flag_ => 'Y', sort_order_ => 302 );
Posting_Ctrl_Posting_Type_API.Set_Cct_Enabled('M302');

-- <add translation statements for Posting Types here, e.g.:>
-- Enterp_Comp_Connect_V151_API.Insert_Translation('INVENT','PostingCtrlPostingType','M1','en','Inventory','TRUE',4);
END;
/

PROMPT Inserting allowed combinations...


BEGIN
Posting_Ctrl_API.Insert_Allowed_Comb('M1', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M1', 'AC22', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M1', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M1', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M1', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M1', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M1', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M1', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M1', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M1', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M1', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M1', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M1', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M1', 'C83', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M1', 'C89', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M1', 'C90', 'MPCCOM', '*');


Posting_Ctrl_API.Insert_Allowed_Comb('M2', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M2', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M2', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M2', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M2', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M2', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M2', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M2', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M2', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M2', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M2', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M2', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M2', 'C83', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M2', 'C90', 'MPCCOM', '*');


Posting_Ctrl_API.Insert_Allowed_Comb('M3', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M3', 'AC22', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M3', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M3', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M3', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M3', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M3', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M3', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M3', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M3', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M3', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M3', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M3', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M3', 'C83', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M3', 'C89', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M3', 'C90', 'MPCCOM', '*');


Posting_Ctrl_API.Insert_Allowed_Comb('M4', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M4', 'AC22', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M4', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M4', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M4', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M4', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M4', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M4', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M4', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M4', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M4', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M4', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M4', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M4', 'C83', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M4', 'C89', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M4', 'C90', 'MPCCOM', '*');


Posting_Ctrl_API.Insert_Allowed_Comb('M5', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M5', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M5', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M5', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M5', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M5', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M5', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M5', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M5', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M5', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M5', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M5', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M5', 'C83', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M5', 'C90', 'MPCCOM', '*');


Posting_Ctrl_API.Insert_Allowed_Comb('M6', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M6', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M6', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M6', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M6', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M6', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M6', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M6', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M6', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M6', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M6', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M6', 'C45', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M6', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M6', 'C83', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M6', 'C90', 'MPCCOM', '*');


Posting_Ctrl_API.Insert_Allowed_Comb('M7', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M7', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M7', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M7', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M7', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M7', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M7', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M7', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M7', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M7', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M7', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M7', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M7', 'C83', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M7', 'C90', 'MPCCOM', '*');


Posting_Ctrl_API.Insert_Allowed_Comb('M8', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M8', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M8', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M8', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M8', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M8', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M8', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M8', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M8', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M8', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M8', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M8', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M8', 'C83', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M8', 'C90', 'MPCCOM', '*');


Posting_Ctrl_API.Insert_Allowed_Comb('M9', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M9', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M9', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M9', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M9', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M9', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M9', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M9', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M9', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M9', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M9', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M9', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M9', 'C83', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M9', 'C90', 'MPCCOM', '*');


Posting_Ctrl_API.Insert_Allowed_Comb('M51', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M51', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M51', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M51', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M51', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M51', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M51', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M51', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M51', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M51', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M51', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M51', 'C90', 'MPCCOM', '*');


Posting_Ctrl_API.Insert_Allowed_Comb('M52', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M52', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M52', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M52', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M52', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M52', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M52', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M52', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M52', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M52', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M52', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M52', 'C90', 'MPCCOM', '*');


Posting_Ctrl_API.Insert_Allowed_Comb('M53', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M53', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M53', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M53', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M53', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M53', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M53', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M53', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M53', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M53', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M53', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M53', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M53', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M53', 'C83', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M53', 'C90', 'MPCCOM', '*');

Posting_Ctrl_API.Insert_Allowed_Comb('M53', 'C98', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M53', 'C99', 'INVENT', '*');

Posting_Ctrl_API.Insert_Allowed_Comb('M60', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M60', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M60', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M60', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M60', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M60', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M60', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M60', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M60', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M60', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M60', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M60', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M60', 'C83', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M60', 'C89', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M60', 'C90', 'MPCCOM', '*');


Posting_Ctrl_API.Insert_Allowed_Comb('M61', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M61', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M61', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M61', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M61', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M61', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M61', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M61', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M61', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M61', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M61', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M61', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M61', 'C83', 'INVENT', '*');

Posting_Ctrl_API.Insert_Allowed_Comb('M88', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M88', 'AC8', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M88', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M88', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M88', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M88', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M88', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M88', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M88', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M88', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M88', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M88', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M88', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M88', 'C83', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M88', 'C90', 'MPCCOM', '*');


Posting_Ctrl_API.Insert_Allowed_Comb('M89', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M89', 'AC8', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M89', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M89', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M89', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M89', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M89', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M89', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M89', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M89', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M89', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M89', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M89', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M89', 'C83', 'INVENT', '*');

Posting_Ctrl_API.Insert_Allowed_Comb('M90', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M90', 'AC8', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M90', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M90', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M90', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M90', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M90', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M90', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M90', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M90', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M90', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M90', 'C32', 'INVENT', '*');

Posting_Ctrl_API.Insert_Allowed_Comb('M107', 'AC2', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M107', 'C58', 'MPCCOM', '*');

Posting_Ctrl_API.Insert_Allowed_Comb('M109', 'AC2', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M109', 'C58', 'MPCCOM', '*');

Posting_Ctrl_API.Insert_Allowed_Comb('M110', 'C58', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M110', 'AC2', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M111', 'C58', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M111', 'AC2', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M156', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M156', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M156', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M156', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M156', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M156', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M156', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M156', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M156', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M156', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M156', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M156', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M156', 'C83', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M156', 'C90', 'MPCCOM', '*');


Posting_Ctrl_API.Insert_Allowed_Comb('M157', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M157', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M157', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M157', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M157', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M157', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M157', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M157', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M157', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M157', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M157', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M157', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M157', 'C83', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M157', 'C90', 'MPCCOM', '*');


Posting_Ctrl_API.Insert_Allowed_Comb('M178', 'AC1', 'ACCRUL', '*');

Posting_Ctrl_API.Insert_Allowed_Comb('M181', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M181', 'C5',  'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M181', 'C6',  'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M181', 'C7',  'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M181', 'C8',  'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M181', 'C9',  'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M181', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M181', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M181', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M181', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M181', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M181', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M181', 'C83', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M181', 'C90', 'MPCCOM', '*');


Posting_Ctrl_API.Insert_Allowed_Comb('M182', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M182', 'C5',  'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M182', 'C6',  'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M182', 'C7',  'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M182', 'C8',  'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M182', 'C9',  'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M182', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M182', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M182', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M182', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M182', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M182', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M182', 'C83', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M182', 'C90', 'MPCCOM', '*');


Posting_Ctrl_API.Insert_Allowed_Comb('M184', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M184', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M184', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M184', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M184', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M184', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M184', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M184', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M184', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M184', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M184', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M184', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M184', 'C83', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M184', 'C90', 'MPCCOM', '*');


Posting_Ctrl_API.Insert_Allowed_Comb('M191', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M195', 'AC1', 'ACCRUL', '*');

Posting_Ctrl_API.Insert_Allowed_Comb('M257', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M257', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M257', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M257', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M257', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M257', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M257', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M257', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M257', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M257', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M257', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M257', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M257', 'C83', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M257', 'C89', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M257', 'C90', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M257', 'C91', 'COST', '*');

Posting_Ctrl_API.Insert_Allowed_Comb('M258', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M258', 'C5', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M258', 'C6', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M258', 'C7', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M258', 'C8', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M258', 'C9', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M258', 'C10', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M258', 'C12', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M258', 'C32', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M258', 'C46', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M258', 'C49', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M258', 'C50', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M258', 'C83', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M258', 'C89', 'INVENT', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M258', 'C90', 'MPCCOM', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M258', 'C91', 'COST', '*');

Posting_Ctrl_API.Insert_Allowed_Comb('M259', 'AC2', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M259', 'C58', 'MPCCOM', '*');

Posting_Ctrl_API.Insert_Allowed_Comb('M260', 'AC2', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M260', 'C58', 'MPCCOM', '*');

Posting_Ctrl_API.Insert_Allowed_Comb('M297', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M297', 'AC7', 'ACCRUL', '*');

Posting_Ctrl_API.Insert_Allowed_Comb('M298', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M298', 'AC7', 'ACCRUL', '*');

Posting_Ctrl_API.Insert_Allowed_Comb('M299', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M299', 'AC7', 'ACCRUL', '*');

Posting_Ctrl_API.Insert_Allowed_Comb('M300', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M300', 'AC7', 'ACCRUL', '*');

Posting_Ctrl_API.Insert_Allowed_Comb('M301', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M301', 'AC7', 'ACCRUL', '*');

Posting_Ctrl_API.Insert_Allowed_Comb('M302', 'AC1', 'ACCRUL', '*');
Posting_Ctrl_API.Insert_Allowed_Comb('M302', 'AC7', 'ACCRUL', '*');

END;
/

COMMIT;
