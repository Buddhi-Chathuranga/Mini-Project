-----------------------------------------------------------------------------
--
--  Fragment:     CreateNewHandlingUnitAssistant
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date        Sign    History
--  ----------  ------  ---------------------------------------------------------
--  2019-01-25  ChFolk  SCUXXW4-6101, Created.
---------------------------------------------------------------------------------

layer Core;

@Override
PROCEDURE CRUD_Default___ (
   rec_  IN OUT Packing_Instruction_For_New_Hu_Virtual_Rec )
IS
BEGIN
   rec_.quantity := 1;
   super(rec_);
END CRUD_Default___;

FUNCTION Create_New_Handling_Unit___ (
   handling_unit_type_id_      IN  VARCHAR2,
   alt_handling_unit_label_id_ IN  VARCHAR2,
   sscc_                       IN  VARCHAR2,
   add_handling_unit_option_   IN  VARCHAR2,
   parent_objkey_              IN  VARCHAR2,
   info$_                      OUT VARCHAR2 ) RETURN VARCHAR2
IS
   objid_                 VARCHAR2(20);
   objversion_            VARCHAR2(100);
   attr_                  VARCHAR2(2000);
   new_handling_unit_id_  NUMBER;
   parent_key_            Create_New_Handling_Unit_Virtual_Key;
   child_key_             Packing_Instruction_For_New_Hu_Virtual_Key;
   child_rec_             Packing_Instruction_For_New_Hu_Virtual_Rec;
   handling_unit_id_      NUMBER;
   handling_unit_id_list_ VARCHAR2(2000);
BEGIN
   IF (add_handling_unit_option_ = 'UsingHuType') THEN 
      IF (handling_unit_type_id_ IS NOT NULL) THEN
         Client_SYS.Clear_Attr(attr_);
         Client_SYS.Add_To_Attr('HANDLING_UNIT_TYPE_ID', handling_unit_type_id_, attr_); 
         Client_SYS.Add_To_Attr('ALT_HANDLING_UNIT_LABEL_ID', alt_handling_unit_label_id_, attr_);
         Client_SYS.Add_To_Attr('SSCC', sscc_, attr_);
         Handling_Unit_API.new__(info$_, objid_, objversion_, attr_, 'DO');
         handling_unit_id_ := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Item_Value('HANDLING_UNIT_ID' , attr_));  
         handling_unit_id_list_ := 'HandlingUnitId eq ' || handling_unit_id_ ;
      END IF;   
   ELSIF (add_handling_unit_option_ = 'UsingPackingInstruction') THEN
      parent_key_.objkey := parent_objkey_;
      FOR line_rec_ IN Get_Packing_Instruction_For_New_Hu_Array___(parent_key_) LOOP
         child_key_.objkey := line_rec_.objkey;
         child_rec_ := Get_Record___(child_key_);
         FOR i_ IN 1..child_rec_.quantity LOOP
            Packing_Instruction_API.Create_Handling_Unit_Structure(handling_unit_id_ => handling_unit_id_,
                                                                   packing_instruction_id_ => child_rec_.packing_instruction_id,
                                                                   parent_handling_unit_id_ => new_handling_unit_id_);
            IF (handling_unit_id_list_ IS NULL) THEN
               handling_unit_id_list_ := 'HandlingUnitId eq ' || handling_unit_id_ ;
            ELSE   
               handling_unit_id_list_ := handling_unit_id_list_ || ' or HandlingUnitId eq ' || handling_unit_id_;
            END IF;
         END LOOP;
      END LOOP;
   END IF;   
   RETURN handling_unit_id_list_;
END Create_New_Handling_Unit___;

PROCEDURE Clear_Packing_Details___ (
   parent_objkey_ IN VARCHAR2 ) 
IS
   parent_key_            Create_New_Handling_Unit_Virtual_Key;
   child_key_             Packing_Instruction_For_New_Hu_Virtual_Key;
   child_rec_             Packing_Instruction_For_New_Hu_Virtual_Rec;
   delete_child_rec_      Packing_Instruction_For_New_Hu_Virtual_Rec;
BEGIN
   parent_key_.objkey := parent_objkey_;
   FOR line_rec_ IN Get_Packing_Instruction_For_New_Hu_Array___(parent_key_) LOOP
      child_key_.objkey := line_rec_.objkey;
      child_rec_ := Get_Record___(child_key_);
      delete_child_rec_ := child_rec_;     
      CRUD_Delete___(delete_child_rec_);
   END LOOP;   
END Clear_Packing_Details___;