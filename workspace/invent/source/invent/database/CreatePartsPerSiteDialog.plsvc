-----------------------------------------------------------------------------
--
--  Fragment:     CreatePartsPerSite
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date        Sign    History
--  ----------  ------  ---------------------------------------------------------
--  2018-12-01  KoDelk  SCUXXW4-5471, Converted from dlgCreatePartsPerSite using MTG Version: 1.32
-----------------------------------------------------------------------------

layer Core;

@Override
PROCEDURE CRUD_Default___ (
   rec_ IN OUT Contract_Virtual_Rec )
IS
BEGIN
   rec_.create_sales_parts       := TRUE;
   rec_.create_sup_for_pur_parts := TRUE;
   --not working. check
   super(rec_);
END CRUD_Default___;

PROCEDURE Add_My_Sites___ (
   parent_key_ IN VARCHAR2 ) 
IS
   master_     Assortment_Node_Virtual_Key;
   master_rec_ Assortment_Node_Virtual_Rec;
   detail_     Contract_Virtual_Rec;
   
   CURSOR get_sites_ IS
   SELECT contract
     FROM user_allowed_site
    WHERE userid = Fnd_Session_API.Get_Fnd_User
      AND (contract NOT IN (SELECT contract
                              FROM ${PROJECTION}_CONTRACT_VIRTUAL_VRT ch
                             WHERE ch.parent_objkey = parent_key_));
BEGIN
   master_.objkey := parent_key_;
   master_rec_    := Get_Record___(master_);
   FOR rec_ IN get_sites_ LOOP
      detail_.contract                 := rec_.contract;
      detail_.create_sales_parts       := TRUE;
      detail_.create_sup_for_pur_parts := TRUE;
      detail_.assortment_id            := master_rec_.assortment_id;
      detail_.parent_node_id           := master_rec_.parent_node_id;
      
      New_Detail___(master_, detail_);
   END LOOP;
END Add_My_Sites___;

PROCEDURE Add_Sites_From_Site_Cluster___ (
   parent_key_           IN VARCHAR2,
   site_cluster_id_      IN VARCHAR2,
   site_cluster_node_id_ IN VARCHAR2 ) 
IS
   master_     Assortment_Node_Virtual_Key;
   master_rec_ Assortment_Node_Virtual_Rec;
   detail_     Contract_Virtual_Rec;
   
   CURSOR get_sites_ IS
   SELECT contract
     FROM site_cluster_node_join
    WHERE site_cluster_id = site_cluster_id_
      AND contract IN (SELECT site
                         FROM user_allowed_site_pub)
      AND (contract NOT IN (SELECT contract
                              FROM ${PROJECTION}_CONTRACT_VIRTUAL_VRT ch
                             WHERE ch.parent_objkey = parent_key_))
      AND (contract IN (SELECT contract
                          FROM site_cluster_node
                         START WITH site_cluster_id = site_cluster_id_
                           AND site_cluster_node_id = site_cluster_node_id_
                       CONNECT BY PRIOR site_cluster_id = site_cluster_id
                           AND PRIOR site_cluster_node_id = parent_node));
BEGIN
   master_.objkey := parent_key_;
   master_rec_    := Get_Record___(master_);
   FOR rec_ IN get_sites_ LOOP
      detail_.contract                 := rec_.contract;
      detail_.create_sales_parts       := TRUE;
      detail_.create_sup_for_pur_parts := TRUE;
      detail_.assortment_id            := master_rec_.assortment_id;
      detail_.parent_node_id           := master_rec_.parent_node_id;
      
      New_Detail___(master_, detail_);
   END LOOP;
END Add_Sites_From_Site_Cluster___;

FUNCTION Get_No_Of_Parts_For_Node___(
   assortment_id_      IN VARCHAR2,
   assortment_node_id_ IN VARCHAR2 )  RETURN NUMBER
IS
   
BEGIN
   RETURN Assortment_Node_API.Get_No_Of_Part_Nodes(assortment_id_, assortment_node_id_);
END Get_No_Of_Parts_For_Node___;

PROCEDURE Create_Parts_Per_Site___ (
   key_ IN Assortment_Node_Virtual_Key ) 
IS
   info_          VARCHAR2(32000);
   objid_         VARCHAR2(32000);
   objversion_    VARCHAR2(32000);
   attr_          VARCHAR2(32000);
   run_id_        NUMBER;
BEGIN
   run_id_  := Create_Parts_Per_Site_Hist_API.Get_Next_Run_Id__;
   FOR rec_ IN Get_Contract_Virtual_Array___(key_) LOOP
      Client_SYS.Clear_Attr(attr_);
      Client_SYS.Add_To_Attr('ASSORTMENT_ID',         rec_.assortment_id,                                                     attr_);
      Client_SYS.Add_To_Attr('ASSORTMENT_NODE_ID',    rec_.parent_node_id,                                                    attr_);
      Client_SYS.Add_To_Attr('RUN_ID',                run_id_,                                                                attr_);
      Client_SYS.Add_To_Attr('CONTRACT',              rec_.contract,                                                          attr_);
      Client_SYS.Add_To_Attr('CREATE_SALES_PART_DB',  CASE rec_.create_sales_parts WHEN 1 THEN 'TRUE' ELSE 'FALSE' END,       attr_);
      Client_SYS.Add_To_Attr('CREATE_SUPP_PART_DB',   CASE rec_.create_sup_for_pur_parts WHEN 1 THEN 'TRUE' ELSE 'FALSE' END, attr_);
      
      Create_Parts_Per_Site_Hist_API.New__(info_, objid_, objversion_, attr_, 'DO');
   END LOOP;
   Create_Parts_Per_Site_Util_API.Create_Parts_Per_Sites__(run_id_);
END Create_Parts_Per_Site___;