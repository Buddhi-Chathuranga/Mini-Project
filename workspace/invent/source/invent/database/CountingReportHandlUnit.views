-----------------------------------------------------------------------------
--
--  Logical unit: CountingReportHandlUnit
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  190405  DaZase  SCUXXW4-14413, Added view Counting_Report_Handl_Unit_Uxx for Aurena usage only.
--  171116  Dazase  STRSC-14458, Fixed where statement issue in Start_Counting_Report_Process, that caused 
--  171116          other count reports to be included in the view if they were on the same location and site.
--  170505  MaEelk  LIM-11270, Added User Allowed filetering and part_ownership client value to Counting_Report_Handl_Unit 
--  161128  DaZase  LIM-9572, Added view Start_Counting_Report_Process.
--  161125  KhVese  LIM-9871, Added project_id,program_id,activity_no and sub_project_id to view Counting_Report_Handl_Unit and removed unnecessary columns.
--  161122  DaZase  LIM-5062, Added VIEW Counting_Report_Hu_Process.
--  160916  Khvese  LIM-8787, Added new view Counting_Report_Hu_Print to increase print-report's performance.
--  160704  Khvese  LIM-7129, LIM-7796, Modified view Counting_Report_Handl_Unit and added route order attributes.
--  160504  KhVese  LIM-1310, Create
-----------------------------------------------------------------------------

layer Core;

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------


-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

VIEW Counting_Report_Handl_Unit IS
   Prompt = 'Count Report Handling Unit'
   Inv_List_No.Flags = 'PMI--'
   Inv_List_No.Datatype = 'STRING(15)'
   Inv_List_No.Prompt = 'Count Report No' 
   Counted.Flags = 'AMI--'
   Counted.Datatype = 'STRING(5)'
   Counted.Prompt = 'Counted' 
   Approval_Needed.Flags = 'AMI--'
   Approval_Needed.Datatype = 'STRING(5)'
   Approval_Needed.Prompt = 'Approval Needed' 
   Confirmed.Flags = 'AMI--'
   Confirmed.Datatype = 'STRING(5)'
   Confirmed.Prompt = 'Confirmed' 
   Handling_Unit_Id.Flags = 'A-I--'
   Handling_Unit_Id.Datatype = 'NUMBER' 
   Handling_Unit_Id.Prompt = 'Handling Unit ID'
   Sscc.Flags = 'A-I--'
   Sscc.Datatype = 'STRING(18)'
   Sscc.Prompt = 'SSCC ID'
   Alt_Handling_Unit_Label_Id.Flags = 'A-I--' 
   Alt_Handling_Unit_Label_Id.Datatype = 'STRING(25)'
   Alt_Handling_Unit_Label_Id.Prompt = 'Alt Handling Unit Label ID'
   Handling_Unit_Type_Id.Flags = 'A----'
   Handling_Unit_Type_Id.Datatype = 'STRING(25)/UPPERCASE'
   Handling_Unit_Type_Id.Prompt = 'Handling Unit Type ID'
   Handling_Unit_Type_Description.Prompt = 'Handling Unit Type Description'
   Handling_Unit_Type_Description.Flags = 'A----'
   Handling_Unit_Type_Description.Datatype = 'STRING(200)'
   Handling_Unit_Category_Id.Prompt = 'Handling Unit Category ID'
   Handling_Unit_Category_Id.Flags = 'A----'
   Handling_Unit_Category_Id.Datatype = 'STRING(25)'
   Handling_Unit_Category_Desc.Prompt = 'Handling Unit Category Description'
   Handling_Unit_Category_Desc.Flags = 'A----'
   Handling_Unit_Category_Desc.Datatype = 'STRING(200)'
   Structure_Level.Flags = 'A----'
   Structure_Level.Datatype = 'NUMBER'
   Structure_Level.Prompt = 'Structure Level'
   Composition.Prompt = 'Composition'
   Composition.Flags = 'A----'
   Composition.Datatype = 'STRING(200)'
   Second_Level_Parent_Hu_Id.Prompt = 'Top Parent Handling Unit ID'
   Second_Level_Parent_Hu_Id.Flags = 'A----'
   Second_Level_Parent_Hu_Id.Datatype = 'NUMBER'
   Top_Parent_Handling_Unit_Id.Flags = 'A----'
   Top_Parent_Handling_Unit_Id.Datatype = 'NUMBER'
   Top_Parent_Handling_Unit_Id.Prompt = 'Top Parent Handling Unit ID'
   Top_Parent_Hu_Type_Id.Prompt = 'Top Parent Handling Unit Type ID'
   Top_Parent_Hu_Type_Id.Flags = 'A----'
   Top_Parent_Hu_Type_Id.Datatype = 'STRING(25)'
   Top_Parent_Hu_Type_Desc.Prompt = 'Top Parent Type Description'
   Top_Parent_Hu_Type_Desc.Flags = 'A----'
   Top_Parent_Hu_Type_Desc.Datatype = 'STRING(200)'
   Top_Parent_Sscc.Prompt = 'Top Parent SSCC'
   Top_Parent_Sscc.Flags = 'A----'
   Top_Parent_Sscc.Datatype = 'STRING(18)'
   Top_Parent_Alt_Hu_Label_Id.Prompt = 'Top Parent Alt Handling Unit Label ID'
   Top_Parent_Alt_Hu_Label_Id.Flags = 'A----'
   Top_Parent_Alt_Hu_Label_Id.Datatype = 'STRING(25)'
   Contract.Prompt = 'Site'
   Contract.Flags = 'A----'
   Contract.Datatype = 'STRING(5)'
   Location_No.Prompt = 'Location No'
   Location_No.Flags = 'A----'
   Location_No.Datatype = 'STRING(35)'
   Warehouse_Id.Prompt = 'Warehouse ID'
   Warehouse_Id.Flags = 'A----'
   Warehouse_Id.Datatype = 'STRING(15)'
   Bay_Id.Prompt = 'Bay ID'
   Bay_Id.Flags = 'A----'
   Bay_Id.Datatype = 'STRING(5)'
   Row_Id.Prompt = 'Row ID'
   Row_Id.Flags = 'A----'
   Row_Id.Datatype = 'STRING(5)'
   Tier_Id.Prompt = 'Tier ID'
   Tier_Id.Flags = 'A----'
   Tier_Id.Datatype = 'STRING(5)'
   Bin_Id.Prompt = 'Bin ID'
   Bin_Id.Flags = 'A----'
   Bin_Id.Datatype = 'STRING(5)'
   Warehouse_Route_Order.Prompt = 'Warehouse Route Order'
   Warehouse_Route_Order.Flags = 'A----'
   Warehouse_Route_Order.Datatype = 'STRING(15)'
   Bay_Route_Order.Prompt = 'Bay Route Order'
   Bay_Route_Order.Flags = 'A----'
   Bay_Route_Order.Datatype = 'STRING(5)'
   Row_Route_Order.Prompt = 'Row Route Order'
   Row_Route_Order.Flags = 'A----'
   Row_Route_Order.Datatype = 'STRING(5)'
   Tier_Route_Order.Prompt = 'Tier Route Order'
   Tier_Route_Order.Flags = 'A----'
   Tier_Route_Order.Datatype = 'STRING(5)'
   Bin_Route_Order.Prompt = 'Bin Route Order'
   Bin_Route_Order.Flags = 'A----'
   Bin_Route_Order.Datatype = 'STRING(5)'
   Part_No.Prompt = 'Part No'
   Part_No.Flags = 'A----'
   Part_No.Datatype = 'STRING(25)'
   Configuration_Id.Prompt = 'Configuration ID'
   Configuration_Id.Flags = 'A----'
   Configuration_Id.Datatype = 'STRING(50)'   
   Lot_Batch_No.Prompt = 'Lot/Batch No'
   Lot_Batch_No.Flags = 'A----'
   Lot_Batch_No.Datatype = 'STRING(20)'
   Serial_No.Prompt = 'Serial No'
   Serial_No.Flags = 'A----'
   Serial_No.Datatype = 'STRING(50)'
   Condition_Code.Prompt = 'Condition Code'
   Condition_Code.Flags = 'A----'
   Condition_Code.Datatype = 'STRING(10)'
   Eng_Chg_Level.Prompt = 'Eng Chg Level'
   Eng_Chg_Level.Flags = 'A----'
   Eng_Chg_Level.Datatype = 'STRING(6)'
   Waiv_Dev_Rej_No.Prompt = 'Waiv/Dev/Rej No'
   Waiv_Dev_Rej_No.Flags = 'A----'
   Waiv_Dev_Rej_No.Datatype = 'STRING(15)'
   Availability_Control_Id.Prompt = 'Availability Control ID'
   Availability_Control_Id.Flags = 'A----'
   Availability_Control_Id.Datatype = 'STRING(25)'
   Availability_Control_Desc.Prompt = 'Availability Control Description'
   Availability_Control_Desc.Flags = 'A----'
   Availability_Control_Desc.Datatype = 'STRING(50)'
   Part_Ownership.Prompt = 'Part Ownership'
   Part_Ownership.Flags = 'A----'
   Part_Ownership.Datatype = 'STRING(200)'
   Owner.Prompt = 'Owner'
   Owner.Flags = 'A----'
   Owner.Datatype = 'STRING(20)'
   Owner_Name.Prompt = 'Owner Name'
   Owner_Name.Flags = 'A----'
   Owner_Name.Datatype = 'STRING(100)'
   Project_Id.Datatype = 'STRING(10)'
   Project_Id.Prompt = 'Project ID'
   Project_Id.Flags = 'A----'
   Program_Id.Datatype = 'STRING(10)'
   Program_Id.Prompt = 'Program ID'
   Program_Id.Flags = 'A----'
   Activity_No.Datatype = 'STRING(10)'
   Activity_No.Prompt = 'Activity No'
   Activity_No.Flags = 'A----'
   Sub_Project_Id.Datatype = 'STRING(10)'
   Sub_Project_Id.Prompt = 'Sub Project ID'
   Sub_Project_Id.Flags = 'A----'
   Activity_Seq.Prompt = 'Activity Seq'
   Activity_Seq.Flags = 'A----'
   Activity_Seq.Datatype = 'NUMBER'
   Outermost_Db.Flags = 'A----'
   Outermost_Db.Datatype = 'STRING(5)'
   SELECT huss.source_ref1                                                                          inv_list_no,
       Counting_Report_Handl_Unit_API.Is_Counted(huss.source_ref1, huss.handling_unit_id, huss.contract, huss.location_no)       counted,
       Counting_Report_Handl_Unit_API.Approval_Needed(huss.source_ref1, huss.handling_unit_id, huss.contract, huss.location_no)  approval_needed, 
       Counting_Report_Handl_Unit_API.Is_Confirmed(huss.source_ref1, huss.handling_unit_id, huss.contract, huss.location_no)     confirmed,
       DECODE(huss.handling_unit_id, 0, null, huss.handling_unit_id)                                handling_unit_id,
       huss.sscc                                                                                    sscc,
       huss.alt_handling_unit_label_id                                                              alt_handling_unit_label_id,
       huss.handling_unit_type_id                                                                   handling_unit_type_id,
       huss.handling_unit_type_description                                                          handling_unit_type_description,
       huss.handling_unit_category_id                                                               handling_unit_category_id,
       huss.handling_unit_category_desc                                                             handling_unit_category_desc,
       huss.structure_level                                                                         structure_level,
       huss.composition                                                                             composition, 
       huss.second_level_parent_hu_id                                                               second_level_parent_hu_id,
       huss.top_parent_handling_unit_id                                                             top_parent_handling_unit_id,
       huss.top_parent_hu_type_id                                                                   top_parent_hu_type_id,
       huss.top_parent_hu_type_desc                                                                 top_parent_hu_type_desc,
       huss.top_parent_sscc                                                                         top_parent_sscc,
       huss.top_parent_alt_hu_label_id                                                              top_parent_alt_hu_label_id,
       NVL(NULLIF(huss.contract,'NULL'),Counting_Report_API.Get_Contract(huss.source_ref1))         contract,
       NVL(NULLIF(huss.location_no,'NULL'),Counting_Report_Line_API.Get_Location_No(huss.source_ref1,huss.handling_unit_id))        location_no,  
       huss.warehouse_id                                                                            warehouse_id, 
       huss.bay_id                                                                                  bay_id, 
       huss.row_id                                                                                  row_id,
       huss.tier_id                                                                                 tier_id, 
       huss.bin_id                                                                                  bin_id,
       il.location_group                                                                            location_group,
       il.warehouse_route_order                                                                     warehouse_route_order,
       il.bay_route_order                                                                           bay_route_order,
       il.row_route_order                                                                           row_route_order,
       il.tier_route_order                                                                          tier_route_order,
       il.bin_route_order                                                                           bin_route_order,
       huss.part_no                                                                                 part_no,
       huss.configuration_id                                                                        configuration_id,
       huss.lot_batch_no                                                                            lot_batch_no, 
       huss.serial_no                                                                               serial_no, 
       huss.condition_code                                                                          condition_code, 
       huss.eng_chg_level                                                                           eng_chg_level, 
       huss.waiv_dev_rej_no                                                                         waiv_dev_rej_no, 
       huss.availability_control_id                                                                 availability_control_id, 
       Part_Availability_Control_API.Get_Description(huss.availability_control_id)                  availability_control_desc, 
       Part_Ownership_API.Decode(huss.part_ownership)                                               part_ownership, 
       huss.part_ownership                                                                          part_ownership_db, 
       huss.owner                                                                                   owner, 
       huss.owner_name                                                                              owner_name, 
       huss.project_id                                                                              project_id, 
       huss.program_id                                                                              program_id,
       huss.activity_no                                                                             activity_no,
       huss.sub_project_id                                                                          sub_project_id,
       huss.activity_seq                                                                            activity_seq,
       huss.outermost_db                                                                            outermost_db,
       huss.outermost_hu_id                                                                         outermost_hu_id,
       huss.objid                                                                                   objid,
       huss.objkey                                                                                  objkey,
       huss.objversion                                                                              objversion
FROM  HANDL_UNIT_STOCK_SNAPSHOT_PUB huss,
      INVENTORY_LOCATION_PUB il
WHERE huss.source_ref_type_db = 'COUNTING_REPORT'
AND   huss.contract           = il.contract
AND   huss.location_no        = il.location_no
AND   EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE huss.contract = site);


-- Used from Aurena client since Aurena client dont support this kind of ORDER BY handling we had in the IEE client.
VIEW Counting_Report_Handl_Unit_Uxx IS
   Prompt = 'Count Report Handling Unit Aurena'
   Inv_List_No.Flags = 'PMI--'
   Inv_List_No.Datatype = 'STRING(15)'
   Inv_List_No.Prompt = 'Count Report No' 
   Counted.Flags = 'AMI--'
   Counted.Datatype = 'STRING(5)'
   Counted.Prompt = 'Counted' 
   Approval_Needed.Flags = 'AMI--'
   Approval_Needed.Datatype = 'STRING(5)'
   Approval_Needed.Prompt = 'Approval Needed' 
   Confirmed.Flags = 'AMI--'
   Confirmed.Datatype = 'STRING(5)'
   Confirmed.Prompt = 'Confirmed' 
   Handling_Unit_Id.Flags = 'A-I--'
   Handling_Unit_Id.Datatype = 'NUMBER' 
   Handling_Unit_Id.Prompt = 'Handling Unit ID'
   Sscc.Flags = 'A-I--'
   Sscc.Datatype = 'STRING(18)'
   Sscc.Prompt = 'SSCC ID'
   Alt_Handling_Unit_Label_Id.Flags = 'A-I--' 
   Alt_Handling_Unit_Label_Id.Datatype = 'STRING(25)'
   Alt_Handling_Unit_Label_Id.Prompt = 'Alt Handling Unit Label ID'
   Handling_Unit_Type_Id.Flags = 'A----'
   Handling_Unit_Type_Id.Datatype = 'STRING(25)/UPPERCASE'
   Handling_Unit_Type_Id.Prompt = 'Handling Unit Type ID'
   Handling_Unit_Type_Description.Prompt = 'Handling Unit Type Description'
   Handling_Unit_Type_Description.Flags = 'A----'
   Handling_Unit_Type_Description.Datatype = 'STRING(200)'
   Handling_Unit_Category_Id.Prompt = 'Handling Unit Category ID'
   Handling_Unit_Category_Id.Flags = 'A----'
   Handling_Unit_Category_Id.Datatype = 'STRING(25)'
   Handling_Unit_Category_Desc.Prompt = 'Handling Unit Category Description'
   Handling_Unit_Category_Desc.Flags = 'A----'
   Handling_Unit_Category_Desc.Datatype = 'STRING(200)'
   Structure_Level.Flags = 'A----'
   Structure_Level.Datatype = 'NUMBER'
   Structure_Level.Prompt = 'Structure Level'
   Composition.Prompt = 'Composition'
   Composition.Flags = 'A----'
   Composition.Datatype = 'STRING(200)'
   Second_Level_Parent_Hu_Id.Prompt = 'Top Parent Handling Unit ID'
   Second_Level_Parent_Hu_Id.Flags = 'A----'
   Second_Level_Parent_Hu_Id.Datatype = 'NUMBER'
   Top_Parent_Handling_Unit_Id.Flags = 'A----'
   Top_Parent_Handling_Unit_Id.Datatype = 'NUMBER'
   Top_Parent_Handling_Unit_Id.Prompt = 'Top Parent Handling Unit ID'
   Top_Parent_Hu_Type_Id.Prompt = 'Top Parent Handling Unit Type ID'
   Top_Parent_Hu_Type_Id.Flags = 'A----'
   Top_Parent_Hu_Type_Id.Datatype = 'STRING(25)'
   Top_Parent_Hu_Type_Desc.Prompt = 'Top Parent Type Description'
   Top_Parent_Hu_Type_Desc.Flags = 'A----'
   Top_Parent_Hu_Type_Desc.Datatype = 'STRING(200)'
   Top_Parent_Sscc.Prompt = 'Top Parent SSCC'
   Top_Parent_Sscc.Flags = 'A----'
   Top_Parent_Sscc.Datatype = 'STRING(18)'
   Top_Parent_Alt_Hu_Label_Id.Prompt = 'Top Parent Alt Handling Unit Label ID'
   Top_Parent_Alt_Hu_Label_Id.Flags = 'A----'
   Top_Parent_Alt_Hu_Label_Id.Datatype = 'STRING(25)'
   Contract.Prompt = 'Site'
   Contract.Flags = 'A----'
   Contract.Datatype = 'STRING(5)'
   Location_No.Prompt = 'Location No'
   Location_No.Flags = 'A----'
   Location_No.Datatype = 'STRING(35)'
   Warehouse_Id.Prompt = 'Warehouse ID'
   Warehouse_Id.Flags = 'A----'
   Warehouse_Id.Datatype = 'STRING(15)'
   Bay_Id.Prompt = 'Bay ID'
   Bay_Id.Flags = 'A----'
   Bay_Id.Datatype = 'STRING(5)'
   Row_Id.Prompt = 'Row ID'
   Row_Id.Flags = 'A----'
   Row_Id.Datatype = 'STRING(5)'
   Tier_Id.Prompt = 'Tier ID'
   Tier_Id.Flags = 'A----'
   Tier_Id.Datatype = 'STRING(5)'
   Bin_Id.Prompt = 'Bin ID'
   Bin_Id.Flags = 'A----'
   Bin_Id.Datatype = 'STRING(5)'
   Warehouse_Route_Order.Prompt = 'Warehouse Route Order'
   Warehouse_Route_Order.Flags = 'A----'
   Warehouse_Route_Order.Datatype = 'STRING(15)'
   Bay_Route_Order.Prompt = 'Bay Route Order'
   Bay_Route_Order.Flags = 'A----'
   Bay_Route_Order.Datatype = 'STRING(5)'
   Row_Route_Order.Prompt = 'Row Route Order'
   Row_Route_Order.Flags = 'A----'
   Row_Route_Order.Datatype = 'STRING(5)'
   Tier_Route_Order.Prompt = 'Tier Route Order'
   Tier_Route_Order.Flags = 'A----'
   Tier_Route_Order.Datatype = 'STRING(5)'
   Bin_Route_Order.Prompt = 'Bin Route Order'
   Bin_Route_Order.Flags = 'A----'
   Bin_Route_Order.Datatype = 'STRING(5)'
   Part_No.Prompt = 'Part No'
   Part_No.Flags = 'A----'
   Part_No.Datatype = 'STRING(25)'
   Configuration_Id.Prompt = 'Configuration ID'
   Configuration_Id.Flags = 'A----'
   Configuration_Id.Datatype = 'STRING(50)'   
   Lot_Batch_No.Prompt = 'Lot/Batch No'
   Lot_Batch_No.Flags = 'A----'
   Lot_Batch_No.Datatype = 'STRING(20)'
   Serial_No.Prompt = 'Serial No'
   Serial_No.Flags = 'A----'
   Serial_No.Datatype = 'STRING(50)'
   Condition_Code.Prompt = 'Condition Code'
   Condition_Code.Flags = 'A----'
   Condition_Code.Datatype = 'STRING(10)'
   Eng_Chg_Level.Prompt = 'Eng Chg Level'
   Eng_Chg_Level.Flags = 'A----'
   Eng_Chg_Level.Datatype = 'STRING(6)'
   Waiv_Dev_Rej_No.Prompt = 'Waiv/Dev/Rej No'
   Waiv_Dev_Rej_No.Flags = 'A----'
   Waiv_Dev_Rej_No.Datatype = 'STRING(15)'
   Availability_Control_Id.Prompt = 'Availability Control ID'
   Availability_Control_Id.Flags = 'A----'
   Availability_Control_Id.Datatype = 'STRING(25)'
   Availability_Control_Desc.Prompt = 'Availability Control Description'
   Availability_Control_Desc.Flags = 'A----'
   Availability_Control_Desc.Datatype = 'STRING(50)'
   Part_Ownership.Prompt = 'Part Ownership'
   Part_Ownership.Flags = 'A----'
   Part_Ownership.Datatype = 'STRING(200)'
   Owner.Prompt = 'Owner'
   Owner.Flags = 'A----'
   Owner.Datatype = 'STRING(20)'
   Owner_Name.Prompt = 'Owner Name'
   Owner_Name.Flags = 'A----'
   Owner_Name.Datatype = 'STRING(100)'
   Project_Id.Datatype = 'STRING(10)'
   Project_Id.Prompt = 'Project ID'
   Project_Id.Flags = 'A----'
   Program_Id.Datatype = 'STRING(10)'
   Program_Id.Prompt = 'Program ID'
   Program_Id.Flags = 'A----'
   Activity_No.Datatype = 'STRING(10)'
   Activity_No.Prompt = 'Activity No'
   Activity_No.Flags = 'A----'
   Sub_Project_Id.Datatype = 'STRING(10)'
   Sub_Project_Id.Prompt = 'Sub Project ID'
   Sub_Project_Id.Flags = 'A----'
   Activity_Seq.Prompt = 'Activity Seq'
   Activity_Seq.Flags = 'A----'
   Activity_Seq.Datatype = 'NUMBER'
   Outermost_Db.Flags = 'A----'
   Outermost_Db.Datatype = 'STRING(5)'
   SELECT inv_list_no,
       counted,
       approval_needed, 
       confirmed,
       handling_unit_id,
       sscc,
       alt_handling_unit_label_id,
       handling_unit_type_id,
       handling_unit_type_description,
       handling_unit_category_id,
       handling_unit_category_desc,
       structure_level,
       composition, 
       second_level_parent_hu_id,
       top_parent_handling_unit_id,
       top_parent_hu_type_id,
       top_parent_hu_type_desc,
       top_parent_sscc,
       top_parent_alt_hu_label_id,
       contract,
       location_no,  
       warehouse_id, 
       bay_id, 
       row_id,
       tier_id, 
       bin_id,
       location_group,
       warehouse_route_order,
       bay_route_order,
       row_route_order,
       tier_route_order,
       bin_route_order,
       part_no,
       configuration_id,
       lot_batch_no, 
       serial_no, 
       condition_code, 
       eng_chg_level, 
       waiv_dev_rej_no, 
       availability_control_id, 
       availability_control_desc, 
       part_ownership, 
       part_ownership_db, 
       owner, 
       owner_name, 
       project_id, 
       program_id,
       activity_no,
       sub_project_id,
       activity_seq,
       outermost_db,
       outermost_hu_id,
       objid,
       objkey,
       objversion
   FROM  Counting_Report_Handl_Unit
   ORDER BY Utility_SYS.String_To_Number(WAREHOUSE_ROUTE_ORDER) ASC,
            UPPER(WAREHOUSE_ROUTE_ORDER) ASC,             
            Utility_SYS.String_To_Number(BAY_ROUTE_ORDER) ASC,
            UPPER(decode(BAY_ROUTE_ORDER, '  -', Database_SYS.Get_Last_Character, BAY_ROUTE_ORDER)) ASC,             
            Utility_SYS.String_To_Number(ROW_ROUTE_ORDER) ASC,
            UPPER(decode(ROW_ROUTE_ORDER, '  -', Database_SYS.Get_Last_Character,ROW_ROUTE_ORDER)) ASC,             
            Utility_SYS.String_To_Number(TIER_ROUTE_ORDER) ASC,
            UPPER(decode(TIER_ROUTE_ORDER, '  -', Database_SYS.Get_Last_Character, TIER_ROUTE_ORDER)) ASC,             
            Utility_SYS.String_To_Number(BIN_ROUTE_ORDER) ASC,
            UPPER(decode(BIN_ROUTE_ORDER, '  -', Database_SYS.Get_Last_Character, BIN_ROUTE_ORDER)) ASC,
            LOCATION_NO, 
            NVL(TOP_PARENT_HANDLING_UNIT_ID, HANDLING_UNIT_ID), 
            STRUCTURE_LEVEL, 
            HANDLING_UNIT_ID;


VIEW Counting_Report_Hu_Print IS
   Prompt = 'Count Report Handling Unit Print'
   Inv_List_No.Flags = 'P----'
   Inv_List_No.Datatype = 'STRING(15)'
   Inv_List_No.Prompt = 'Count Report No' 
   Seq.Flags = 'A----'
   Seq.Datatype = 'NUMBER' 
   Seq.Prompt = 'Sequence Number'
   Handling_Unit_Id.Flags = 'A----'
   Handling_Unit_Id.Datatype = 'NUMBER' 
   Handling_Unit_Id.Prompt = 'Handling Unit ID'
   Contract.Prompt = 'Site'
   Contract.Flags = 'A----'
   Contract.Datatype = 'STRING(5)'
   Location_No.Prompt = 'Location No'
   Location_No.Flags = 'A----'
   Location_No.Datatype = 'STRING(35)'
   Part_No.Prompt = 'Part No'
   Part_No.Flags = 'A----'
   Part_No.Datatype = 'STRING(25)'
   Configuration_Id.Prompt = 'Configuration ID'
   Configuration_Id.Flags = 'A----'
   Configuration_Id.Datatype = 'STRING(50)'   
   Lot_Batch_No.Prompt = 'Lot/Batch No'
   Lot_Batch_No.Flags = 'A----'
   Lot_Batch_No.Datatype = 'STRING(20)'
   Serial_No.Prompt = 'Serial No'
   Serial_No.Flags = 'A----'
   Serial_No.Datatype = 'STRING(50)'
   Eng_Chg_Level.Prompt = 'Eng Chg Level'
   Eng_Chg_Level.Flags = 'A----'
   Eng_Chg_Level.Datatype = 'STRING(6)'
   Waiv_Dev_Rej_No.Prompt = 'Waiv/Dev/Rej No'
   Waiv_Dev_Rej_No.Flags = 'A----'
   Waiv_Dev_Rej_No.Datatype = 'STRING(15)'
   Activity_Sequence.Prompt = 'Activity Sequence'
   Activity_Sequence.Flags = 'A----'
   Activity_Sequence.Datatype = 'NUMBER'
   Warehouse_Id.Prompt = 'Warehouse ID'
   Warehouse_Id.Flags = 'A----'
   Warehouse_Id.Datatype = 'STRING(15)'
   Bay_Id.Prompt = 'Bay ID'
   Bay_Id.Flags = 'A----'
   Bay_Id.Datatype = 'STRING(5)'
   Row_Id.Prompt = 'Row ID'
   Row_Id.Flags = 'A----'
   Row_Id.Datatype = 'STRING(5)'
   Tier_Id.Prompt = 'Tier ID'
   Tier_Id.Flags = 'A----'
   Tier_Id.Datatype = 'STRING(5)'
   Bin_Id.Prompt = 'Bin ID'
   Bin_Id.Flags = 'A----'
   Bin_Id.Datatype = 'STRING(5)'
   Warehouse_Route_Order.Prompt = 'Warehouse Route Order'
   Warehouse_Route_Order.Flags = 'A----'
   Warehouse_Route_Order.Datatype = 'STRING(15)'
   Bay_Route_Order.Prompt = 'Bay Route Order'
   Bay_Route_Order.Flags = 'A----'
   Bay_Route_Order.Datatype = 'STRING(5)'
   Row_Route_Order.Prompt = 'Row Route Order'
   Row_Route_Order.Flags = 'A----'
   Row_Route_Order.Datatype = 'STRING(5)'
   Tier_Route_Order.Prompt = 'Tier Route Order'
   Tier_Route_Order.Flags = 'A----'
   Tier_Route_Order.Datatype = 'STRING(5)'
   Bin_Route_Order.Prompt = 'Bin Route Order'
   Bin_Route_Order.Flags = 'A----'
   Bin_Route_Order.Datatype = 'STRING(5)'
   complete_hu.Prompt = 'Complete Handling Unit'
   complete_hu.Flags = 'A----'
   complete_hu.Datatype = 'STRING(5)'
   SELECT huss.source_ref1                                                   inv_list_no,
          to_number(0)                                                       seq,   
          huss.handling_unit_id                                              handling_unit_id,
          huss.contract                                                      contract,
          huss.location_no                                                   location_no,  
          Handling_Unit_API.Get_Part_No(huss.handling_unit_id)               part_no,
          Handling_Unit_API.Get_Configuration_Id(huss.handling_unit_id)      configuration_id,
          Handling_Unit_API.Get_Lot_Batch_No(huss.handling_unit_id)          lot_batch_no,
          Handling_Unit_API.Get_Serial_No(huss.handling_unit_id)             serial_no,
          Handling_Unit_API.Get_Eng_Chg_Level(huss.handling_unit_id)         eng_chg_level, 
          Handling_Unit_API.Get_Waiv_Dev_Rej_No(huss.handling_unit_id)       waiv_dev_rej_no, 
          Handling_Unit_API.Get_Activity_Seq(huss.handling_unit_id)          activity_sequence,
         (select warehouse_id from WAREHOUSE_BAY_BIN_TAB
          where contract = huss.contract and location_no = huss.location_no)  warehouse_id,
         (select bay_id from WAREHOUSE_BAY_BIN_TAB
          where contract = huss.contract and location_no = huss.location_no)  bay_id,
         (select row_id from WAREHOUSE_BAY_BIN_TAB
          where contract = huss.contract and location_no = huss.location_no)  row_id,
         (select tier_id from WAREHOUSE_BAY_BIN_TAB
          where contract = huss.contract and location_no = huss.location_no)  tier_id,
         (select bin_id from WAREHOUSE_BAY_BIN_TAB
          where contract = huss.contract and location_no = huss.location_no)  bin_id,
         (select warehouse_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  warehouse_route_order,
         (select bay_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  bay_route_order,
         (select row_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  row_route_order,
         (select tier_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  tier_route_order,
         (select bin_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  bin_route_order,
          'TRUE'                                                              complete_hu                  
   FROM  HANDL_UNIT_STOCK_SNAPSHOT_TAB  huss
   WHERE huss.source_ref_type = 'COUNTING_REPORT'
   AND   huss.outermost = 'TRUE'
   AND   huss.handling_unit_id != 0
   UNION ALL
   SELECT ipss.source_ref1                                                    inv_list_no,
          Counting_Report_Line_API.Get_Seq_No(ipss.source_ref1 ,
                                              ipss.contract,
                                              ipss.part_no,
                                              ipss.configuration_id,
                                              ipss.location_no,
                                              ipss.lot_batch_no,
                                              ipss.serial_no,
                                              ipss.eng_chg_level,
                                              ipss.waiv_dev_rej_no,
                                              ipss.activity_seq,
                                              ipss.handling_unit_id)          seq,      
          ipss.handling_unit_id                                               handling_unit_id,
          ipss.contract                                                       contract,
          ipss.location_no                                                    location_no,  
          ipss.part_no                                                        part_no,
          ipss.configuration_id                                               configuration_id,
          ipss.lot_batch_no                                                   lot_batch_no, 
          ipss.serial_no                                                      serial_no, 
          ipss.eng_chg_level                                                  eng_chg_level, 
          ipss.waiv_dev_rej_no                                                waiv_dev_rej_no, 
          ipss.activity_seq                                                   activity_sequence,
         (select warehouse_id from WAREHOUSE_BAY_BIN_TAB
          where contract = huss.contract and location_no = huss.location_no)  warehouse_id,
         (select bay_id from WAREHOUSE_BAY_BIN_TAB
          where contract = huss.contract and location_no = huss.location_no)  bay_id,
         (select row_id from WAREHOUSE_BAY_BIN_TAB
          where contract = huss.contract and location_no = huss.location_no)  row_id,
         (select tier_id from WAREHOUSE_BAY_BIN_TAB
          where contract = huss.contract and location_no = huss.location_no)  tier_id,
         (select bin_id from WAREHOUSE_BAY_BIN_TAB
          where contract = huss.contract and location_no = huss.location_no)  bin_id,
         (select warehouse_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  warehouse_route_order,
         (select bay_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  bay_route_order,
         (select row_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  row_route_order,
         (select tier_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  tier_route_order,
         (select bin_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  bin_route_order,
          'FALSE'                                                             complete_hu                  
   FROM  HANDL_UNIT_STOCK_SNAPSHOT_TAB huss, INV_PART_STOCK_SNAPSHOT_TAB ipss
   WHERE huss.source_ref_type = 'COUNTING_REPORT'
   AND   huss.handling_unit_id = 0
   AND   huss.outermost = 'TRUE'
   AND   huss.source_ref1 = ipss.source_ref1
   AND   huss.contract            = ipss.contract
   AND   huss.location_no         = ipss.location_no;


-- Used as a data source by WADACO process Count Handling Unit per Count Report
VIEW Counting_Report_Hu_Process   IS
   SELECT huss.source_ref1                                   inv_list_no,
          huss.rowid                                         aggregated_line_id,
          huss.location_no                                   location_no,
          huss.contract                                      contract,
          huss.handling_unit_id                              handling_unit_id,
         (select sscc from HANDLING_UNIT_TAB
          where handling_unit_id = huss.handling_unit_id)    sscc,
         (select alt_handling_unit_label_id from HANDLING_UNIT_TAB
          where handling_unit_id = huss.handling_unit_id)    alt_handling_unit_label_id,
          Handling_Unit_API.Get_Top_Parent_Handl_Unit_Id(huss.handling_unit_id) top_parent_handling_unit_id,
          Handling_Unit_API.Get_Structure_Level(huss.handling_unit_id)        structure_level,
         (select warehouse_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  warehouse_route_order,
         (select bay_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  bay_route_order,
         (select row_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  row_route_order,
         (select tier_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  tier_route_order,
         (select bin_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  bin_route_order
   FROM HANDL_UNIT_STOCK_SNAPSHOT_TAB huss
   WHERE EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE huss.contract = site) 
   AND   huss.source_ref_type = 'COUNTING_REPORT'
   AND   huss.process_control IS NULL  -- filter out count_parts and count_sub_level lines
   AND   ((handling_unit_id != 0) AND (EXISTS (SELECT 1 
                                       FROM   COUNTING_REPORT_LINE_TAB 
                                       WHERE  inv_list_no        = source_ref1 
                                       AND    qty_count1 IS NULL 
                                       AND    handling_unit_id   IN (SELECT           hu.handling_unit_id 
                                                                     FROM             HANDLING_UNIT_TAB hu 
                                                                     CONNECT BY PRIOR hu.handling_unit_id = hu.parent_handling_unit_id  
                                                                     START WITH       hu.handling_unit_id = huss.handling_unit_id))));



-- Used as a data source by WADACO process Start Count Report
VIEW Start_Counting_Report_Process   IS
   SELECT huss.source_ref1                                          inv_list_no,
          huss.contract                                             contract,
          huss.location_no                                          location_no,
          huss.handling_unit_id                                     handling_unit_id,
          DECODE(huss.handling_unit_id, 0, 'PART', DECODE(huss.process_control, 'COUNT_PARTS','PART','HANDLING_UNIT')) part_or_handling_unit,
         (select warehouse_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  warehouse_route_order,
         (select bay_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  bay_route_order,
         (select row_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  row_route_order,
         (select tier_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  tier_route_order,
         (select bin_route_order from INVENTORY_LOCATION_PUB 
          where contract = huss.contract and location_no = huss.location_no)  bin_route_order
   FROM HANDL_UNIT_STOCK_SNAPSHOT_TAB huss
   WHERE EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE huss.contract = site) 
   AND   huss.source_ref_type = 'COUNTING_REPORT'
   AND   (huss.process_control = 'COUNT_PARTS' OR huss.process_control IS NULL)  -- filter out count_sub_level lines
   AND   (CASE WHEN (handling_unit_id = 0) AND (EXISTS (SELECT 1 
                                       FROM   COUNTING_REPORT_LINE_TAB t, INV_PART_STOCK_SNAPSHOT_TAB i
                                       WHERE  t.inv_list_no      = huss.source_ref1 
                                       AND    t.contract         = huss.contract 
                                       AND    t.location_no      = huss.location_no
                                       AND    t.inv_list_no      = i.source_ref1
                                       AND    t.contract         = i.contract
                                       AND    t.part_no          = i.part_no
                                       AND    t.configuration_id = i.configuration_id
                                       AND    t.location_no      = i.location_no
                                       AND    t.lot_batch_no     = i.lot_batch_no
                                       AND    t.serial_no        = i.serial_no
                                       AND    t.waiv_dev_rej_no  = i.waiv_dev_rej_no
                                       AND    t.eng_chg_level    = i.eng_chg_level
                                       AND    t.activity_seq     = i.activity_seq
                                       AND    t.handling_unit_id = i.handling_unit_id                                                                        
                                       AND    qty_count1 IS NULL))  THEN 'NOT_COUNTED'
              WHEN (handling_unit_id != 0) AND (EXISTS (SELECT 1 
                                       FROM   COUNTING_REPORT_LINE_TAB 
                                       WHERE  inv_list_no        = huss.source_ref1 
                                       AND    qty_count1 IS NULL 
                                       AND    handling_unit_id   IN (SELECT           hu.handling_unit_id 
                                                                     FROM             HANDLING_UNIT_TAB hu 
                                                                     CONNECT BY PRIOR hu.handling_unit_id = hu.parent_handling_unit_id  
                                                                     START WITH       hu.handling_unit_id = huss.handling_unit_id))) THEN 'NOT_COUNTED'
              ELSE 'COUNTED'
           END = 'NOT_COUNTED');
