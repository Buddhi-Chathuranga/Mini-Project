-----------------------------------------------------------------------------
--
--  Fragment:     WarehousesTab
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------
-- 2021-11-02  SBalLK  SC21R2-2833, Added Get_Warehouse_Key_Collection___() method to extract keys.
-- 2020-11-05  JeLise  SC2020R1-10317, Added method CRUD_Default_Copy___.
-- 2019-10-14  KHVESE  SCSPRING20-538, Added method Get_Global_Warehouse_Id___.
-- 2018-12-21  KoDelk  SCUXXW4-14230, Created.
-----------------------------------------------------------------------------

layer Core;

PROCEDURE Copy_Bays_From_Warehouse___ (
	contract_        IN VARCHAR2,
	warehouse_id_    IN VARCHAR2,
	to_contract_     IN VARCHAR2,
	to_warehouse_id_ IN VARCHAR2 )
IS
   same_length_uoms_      BOOLEAN;
   same_weight_uoms_      BOOLEAN;
   same_temperature_uoms_ BOOLEAN;
   info_                  VARCHAR2(2000);
BEGIN
   Company_Invent_Info_API.Compare_Uoms(info_,
                                        same_length_uoms_,
                                        same_weight_uoms_,
                                        same_temperature_uoms_,
                                        Site_API.Get_Company(contract_),
                                        Site_API.Get_Company(to_contract_));
   Warehouse_Initial_Check___(contract_, warehouse_id_);
   Warehouse_Initial_Check___(to_contract_, to_warehouse_id_);
                                    
   Warehouse_API.Copy_Bays__(contract_,
                             warehouse_id_,
                             to_contract_,
                             to_warehouse_id_,
                             same_length_uoms_,
                             same_weight_uoms_,
                             same_temperature_uoms_);                                 
END Copy_Bays_From_Warehouse___;


FUNCTION Get_Global_Warehouse_Id___ (
	contract_     IN VARCHAR2,
	warehouse_id_ IN VARCHAR2 ) RETURN VARCHAR2
IS
BEGIN
	RETURN Warehouse_API.Get_Global_Warehouse_Id(contract_, warehouse_id_);
END Get_Global_Warehouse_Id___;


@Override
PROCEDURE CRUD_Default_Copy___ (
   objid_  IN     VARCHAR2,
   key_    IN     Warehouse_Key,
   values_ IN     Copy_Values_Rec,
   attr_      OUT VARCHAR2,
   info_      OUT VARCHAR2 )
IS
BEGIN
   super(objid_, key_, values_, attr_, info_);

   Client_SYS.Set_Item_Value('CONTRACT', key_.contract, attr_);
   Client_SYS.Set_Item_Value('WAREHOUSE_ID', '', attr_);    
   Client_SYS.Set_Item_Value('GLOBAL_WAREHOUSE_ID', Get_Global_Warehouse_Id___(key_.contract, ''), attr_);
   Client_SYS.Set_Item_Value('DESCRIPTION', '', attr_);
   Client_SYS.Set_Item_Value('RECEIPTS_BLOCKED_DB_QUERY', Warehouse_API.Get_Receipts_Blocked_Db(key_.contract, key_.warehouse_id), attr_);
   Client_SYS.Set_Item_Value('RCPT_OCCUPIED_BLOCKED_DB_QUERY', Warehouse_API.Get_Receipt_To_Occup_Blockd_Db(key_.contract, key_.warehouse_id), attr_);
   Client_SYS.Set_Item_Value('MIX_OF_PART_BLOCKED_DB_QUERY', Warehouse_API.Get_Mix_Of_Parts_Blocked_Db(key_.contract, key_.warehouse_id), attr_);
   Client_SYS.Set_Item_Value('MIX_COND_CODE_BLOCKED_DB_QUERY', Warehouse_API.Get_Mix_Of_Cond_Blocked_Db(key_.contract, key_.warehouse_id), attr_);
   Client_SYS.Set_Item_Value('MIX_LOT_NO_BLOCKED_DB_QUERY', Warehouse_API.Get_Mix_Of_Lot_Blocked_Db(key_.contract, key_.warehouse_id), attr_);
   Client_SYS.Set_Item_Value('EXCLUD_STORAG_REQ_VAL_DB_QUERY', Warehouse_API.Get_Exclude_Storage_Req_Val_Db(key_.contract, key_.warehouse_id), attr_);
END CRUD_Default_Copy___;


FUNCTION Get_Warehouse_Key_Collection___ (
   selection_ IN VARCHAR2) RETURN Warehouse_Key_List_Struct_Rec
IS
   local_selection_     VARCHAR2(32000) := CONCAT(selection_, ';');
   current_selection_   VARCHAR2(32000);
   contract_            VARCHAR2(5);
   warehouse_id_        VARCHAR2(15);
   key_list_rec_        Warehouse_Key_List_Struct_Rec;
BEGIN
   WHILE (INSTR(local_selection_, ';') > 0) LOOP
      current_selection_ := SUBSTR(local_selection_, 0, INSTR(local_selection_, ';'));
      contract_     := Client_SYS.Get_Key_Reference_Value(current_selection_, 'CONTRACT');
      warehouse_id_ := Client_SYS.Get_Key_Reference_Value(current_selection_, 'WAREHOUSE_ID');
      IF(contract_ IS NOT NULL AND warehouse_id_ IS NOT NULL) THEN
         IF(key_list_rec_.contract IS NULL OR key_list_rec_.warehouse IS NULL) THEN
            key_list_rec_.contract  := contract_;
            key_list_rec_.warehouse := warehouse_id_;
         ELSE
            IF (INSTR(';' || key_list_rec_.contract || ';', ';' ||contract_|| ';' ) = 0) THEN
               key_list_rec_.contract  := key_list_rec_.contract || ';' || contract_;
            END IF;
            IF (INSTR(';' || key_list_rec_.warehouse || ';', ';' ||warehouse_id_|| ';') = 0) THEN
               key_list_rec_.warehouse := key_list_rec_.warehouse || ';' || warehouse_id_;
            END IF;
         END IF;
      END IF;
      local_selection_ := SUBSTR(local_selection_, INSTR(local_selection_, ';') + 1); 
   END LOOP;
   RETURN key_list_rec_;
END Get_Warehouse_Key_Collection___;
