-----------------------------------------------------------------------------
--
--  Logical unit: StorageCapacityRequirementGroupHandling
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2020-02-27  DaZase  SCXTEND-2684 Re-implemenation of Duplicate handling in Aurena, added CRUD_Default_Copy___.
-- 2018-09-11  SAGELK  SCUXXW4-6014, Created
-----------------------------------------------------------------------------

layer Core;

FUNCTION Get_Default_Length_Uom___ RETURN VARCHAR2
IS
BEGIN
   RETURN Company_Invent_Info_API.Get_Uom_For_Length(user_finance_api.get_default_company_func);
END Get_Default_Length_Uom___;

FUNCTION Get_Default_Weight_Uom___ RETURN VARCHAR2
IS
BEGIN
   RETURN Company_Invent_Info_API.Get_Uom_For_Weight(user_finance_api.get_default_company_func);
END Get_Default_Weight_Uom___;

PROCEDURE Add_Volume_To_Attr___ (
   attr_ IN OUT VARCHAR2)
IS
   Volume_ NUMBER;
BEGIN
   IF Client_SYS.Get_Item_Value('VOLUME', attr_) IS NOT NULL THEN
      Volume_ := Client_SYS.Cut_Item_Value('VOLUME', attr_);
      Client_SYS.Add_To_Attr('VOLUME', (1/(Volume_)), attr_);
   END IF;
END Add_Volume_To_Attr___;

@Override
PROCEDURE CRUD_Create___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Storage_Capacity_Req_Group_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT VARCHAR2,
   action_ IN  VARCHAR2 )
IS
BEGIN
   Add_Volume_To_Attr___(attr_);
   
   super(etag_, key_, attr_, info_, action_);

END CRUD_Create___;

@Override
PROCEDURE CRUD_Update___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Storage_Capacity_Req_Group_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT VARCHAR2,
   action_ IN  VARCHAR2 )
IS   
BEGIN
   Add_Volume_To_Attr___(attr_);
   
   super(etag_, key_, attr_, info_, action_);

END CRUD_Update___;

PROCEDURE Save_Volume___ (
   key_        IN Storage_Capacity_Req_Group_Key,
   volume_     IN NUMBER,
   uom_volume_ IN VARCHAR2) 
IS
   objid_       VARCHAR2(4000);
   objversion_  VARCHAR2(4000);
   info_        VARCHAR2(4000);
   attr_        VARCHAR2(32000);
BEGIN
   Get_Objid_Objversion___(objid_, objversion_, key_);
   Client_SYS.Add_To_Attr('VOLUME', volume_, attr_);
--   Add Volume to Attr is called to save the correct value in db
   Add_Volume_To_Attr___(attr_);
   Client_SYS.Add_To_Attr('UOM_VOLUME', uom_volume_, attr_);
   Storage_Capacity_Req_Group_API.Modify__(info_, objid_, objversion_, attr_, 'DO');
END Save_Volume___;

@Override
PROCEDURE CRUD_Default_Copy___ (
   rec_  IN OUT Storage_Capacity_Req_Group_Rec )
IS
   temp_volume_ NUMBER;
BEGIN
   -- A bit different compared to IEE since IEE and Aurena implementation of this window was a bit different
   -- we are not using a 2 columns (1 visible and 1 invisible) for volume here like in IEE so we need to do
   -- this recalculation here instead due to how rest of the Aurena implementation was done.
   IF (rec_.volume IS NOT NULL AND rec_.volume > 0) THEN
      temp_volume_ := 100 / (rec_.volume * 100);
   ELSE
      temp_volume_ := NULL; 
   END IF;         
   super(rec_);
   rec_.volume := temp_volume_;
END CRUD_Default_Copy___;
