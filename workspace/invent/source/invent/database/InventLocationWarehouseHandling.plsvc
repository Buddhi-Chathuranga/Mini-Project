-----------------------------------------------------------------------------
--
--  Logical unit: InventLocationWarehouseHandling
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  210515  SBalLK  SC21R2-1169, Removed party_type, party_type_id and party_type_address_id attributes. Removed CRUD_Create___() and CRUD_Update___() methods.
--  191107  ErRalk  SCSPRING20-959, Modified Warehouse_Purch_Info_key with Whse_Shipment_Receipt_Info_Key and Whse_Receipt_Default_Loc_Key with Warehouse_Default_Location_Key.
--  181106  KoDelk  SCUXXW4-6557, Converted from frmInventLocationWarehouse using MTG Version: 1.32
-----------------------------------------------------------------------------

layer Core;
PROCEDURE Remove_Capability___ (
   selection_ IN VARCHAR2 ) 
IS
BEGIN
   FOR rec_ IN (SELECT regexp_substr(selection_ ,'[^;]+', 1, LEVEL) AS rec_ FROM dual CONNECT BY regexp_substr(selection_, '[^;]+', 1, LEVEL) IS NOT NULL) LOOP
      Warehouse_Operative_Cap_Uiv_Initial_Check___(Client_SYS.Get_Key_Reference_Value(rec_.rec_, 'CONTRACT'), Client_SYS.Get_Key_Reference_Value(rec_.rec_, 'WAREHOUSE_ID'));
      Warehouse_Capability_API.Create_Removed_Line__( Client_SYS.Get_Key_Reference_Value(rec_.rec_, 'CONTRACT'),
                                                      Client_SYS.Get_Key_Reference_Value(rec_.rec_, 'WAREHOUSE_ID'),
                                                      Client_SYS.Get_Key_Reference_Value(rec_.rec_, 'STORAGE_CAPABILITY_ID'));    
   END LOOP; 
END Remove_Capability___;

@Override
@DynamicComponentDependency DISCOM
PROCEDURE CRUD_Create___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Warehouse_Default_Location_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT VARCHAR2,
   action_ IN  VARCHAR2 )
IS
BEGIN
   Client_SYS.Add_To_Attr('LOCATION_TYPE_DB',
                          Inventory_Location_API.Get_Location_Type_Db(Client_SYS.Get_Item_Value('CONTRACT', attr_),
                                                                      Client_SYS.Get_Item_Value('LOCATION_NO', attr_)),
                          attr_);
   super(etag_, key_, attr_, info_, action_);
END CRUD_Create___;

@Override
PROCEDURE CRUD_Default_Copy___ (
   objid_  IN     VARCHAR2,
   key_    IN     Warehouse_Key,
   values_ IN     Copy_Values_Rec,
   attr_      OUT VARCHAR2,
   info_      OUT VARCHAR2 )
IS
BEGIN
   super(objid_, key_, values_, attr_, info_);

   Client_SYS.Set_Item_Value('CONTRACT',                 key_.contract,                                                                  attr_);
   Client_SYS.Set_Item_Value('WAREHOUSE_ID',             '',                                                                             attr_);    
   Client_SYS.Set_Item_Value('GLOBAL_WAREHOUSE_ID',      Warehouse_API.Get_Global_Warehouse_Id(key_.contract, ''),                       attr_);
   Client_SYS.Set_Item_Value('DESCRIPTION',              '',                                                                             attr_);
   Client_SYS.Set_Item_Value('RECEIPTS_BLOCKED_DB',      Warehouse_API.Get_Receipts_Blocked_Db(key_.contract, key_.warehouse_id),        attr_);
   Client_SYS.Set_Item_Value('RCPT_OCCUPIED_BLOCKED_DB', Warehouse_API.Get_Receipt_To_Occup_Blockd_Db(key_.contract, key_.warehouse_id), attr_);
   Client_SYS.Set_Item_Value('MIX_OF_PART_BLOCKED_DB',   Warehouse_API.Get_Mix_Of_Parts_Blocked_Db(key_.contract, key_.warehouse_id),    attr_);
   Client_SYS.Set_Item_Value('MIX_COND_CODE_BLOCKED_DB', Warehouse_API.Get_Mix_Of_Cond_Blocked_Db(key_.contract, key_.warehouse_id),     attr_);
   Client_SYS.Set_Item_Value('MIX_LOT_NO_BLOCKED_DB',    Warehouse_API.Get_Mix_Of_Lot_Blocked_Db(key_.contract, key_.warehouse_id),      attr_);
   Client_SYS.Set_Item_Value('EXCLUD_STORAG_REQ_VAL_DB', Warehouse_API.Get_Exclude_Storage_Req_Val_Db(key_.contract, key_.warehouse_id), attr_);
END CRUD_Default_Copy___;


PROCEDURE Save_Capacity_And_Conditions___ (
   key_ IN Capacities_And_Conditions_Virtual_Key ) 
IS
   rec_              Capacities_And_Conditions_Virtual_Rec;
   warehouse_rec_    Warehouse_API.Public_Rec;
   warehouse_key_    Warehouse_Key;
   objid_            VARCHAR2(32000);
   objversion_       VARCHAR2(32000);
   attr_             VARCHAR2(32000);
   info_             VARCHAR2(32000);
BEGIN
	rec_  := Get_Record___(key_);
   
   warehouse_rec_                := Warehouse_API.Get(rec_.contract, rec_.warehouse_id);
   warehouse_key_.contract       := warehouse_rec_.contract;
   warehouse_key_.warehouse_id   := warehouse_rec_.warehouse_id;
   Get_Objid_Objversion___(objid_, objversion_, warehouse_key_);

   Client_SYS.Clear_Attr(attr_);

   IF nvl(TO_CHAR(warehouse_rec_.bin_width_capacity), 'X') != nvl(TO_CHAR(rec_.width), 'X') THEN
      Client_SYS.Add_To_Attr('BIN_WIDTH_CAPACITY', rec_.width, attr_);
   END IF;
   IF nvl(TO_CHAR(warehouse_rec_.bin_height_capacity), 'X') != nvl(TO_CHAR(rec_.height), 'X') THEN
      Client_SYS.Add_To_Attr('BIN_HEIGHT_CAPACITY', rec_.height, attr_);
   END IF;
   IF nvl(TO_CHAR(warehouse_rec_.bin_dept_capacity), 'X') != nvl(TO_CHAR(rec_.depth), 'X') THEN
      Client_SYS.Add_To_Attr('BIN_DEPT_CAPACITY', rec_.depth, attr_);
   END IF;
   IF nvl(TO_CHAR(Warehouse_API.Get_Base_Bin_Volume_Capacity(rec_.contract, rec_.warehouse_id)), 'X') != nvl(TO_CHAR(rec_.volume), 'X') THEN
      Client_SYS.Add_To_Attr('BIN_VOLUME_CAPACITY', rec_.volume, attr_);
   END IF;
   IF nvl(TO_CHAR(warehouse_rec_.bay_carrying_capacity), 'X') != nvl(TO_CHAR(rec_.bay), 'X') THEN
      Client_SYS.Add_To_Attr('BAY_CARRYING_CAPACITY', rec_.bay, attr_);
   END IF;
   IF nvl(TO_CHAR(warehouse_rec_.row_carrying_capacity), 'X') != nvl(TO_CHAR(rec_.row_value), 'X') THEN
      Client_SYS.Add_To_Attr('ROW_CARRYING_CAPACITY', rec_.row_value, attr_);
   END IF;
   IF nvl(TO_CHAR(warehouse_rec_.tier_carrying_capacity), 'X') != nvl(TO_CHAR(rec_.tier), 'X') THEN
      Client_SYS.Add_To_Attr('TIER_CARRYING_CAPACITY', rec_.tier, attr_);
   END IF;
   IF nvl(TO_CHAR(warehouse_rec_.bin_carrying_capacity), 'X') != nvl(TO_CHAR(rec_.bin), 'X') THEN
      Client_SYS.Add_To_Attr('BIN_CARRYING_CAPACITY', rec_.bin, attr_);
   END IF;
   IF nvl(TO_CHAR(warehouse_rec_.bin_min_temperature), 'X') != nvl(TO_CHAR(rec_.min_temperature), 'X') THEN
      Client_SYS.Add_To_Attr('BIN_MIN_TEMPERATURE', rec_.min_temperature, attr_);
   END IF;
   IF nvl(TO_CHAR(warehouse_rec_.bin_max_temperature), 'X') != nvl(TO_CHAR(rec_.max_temperature), 'X') THEN
      Client_SYS.Add_To_Attr('BIN_MAX_TEMPERATURE', rec_.max_temperature, attr_);
   END IF;
   IF nvl(TO_CHAR(warehouse_rec_.bin_min_humidity), 'X') != nvl(TO_CHAR(rec_.min_humidity), 'X') THEN
      Client_SYS.Add_To_Attr('BIN_MIN_HUMIDITY', rec_.min_humidity, attr_);
   END IF;
   IF nvl(TO_CHAR(warehouse_rec_.bin_max_humidity), 'X') != nvl(TO_CHAR(rec_.max_humidity), 'X') THEN
      Client_SYS.Add_To_Attr('BIN_MAX_HUMIDITY', rec_.max_humidity, attr_);
   END IF;

   Warehouse_API.Modify__(info_, objid_, objversion_, attr_, 'DO');
END Save_Capacity_And_Conditions___;

FUNCTION Get_Route_Connect_Forwarder___ (
   route_id_ IN VARCHAR2 )  RETURN VARCHAR2
IS
   forwarder_id_  VARCHAR2(20) := NULL;
BEGIN
   $IF Component_Discom_SYS.INSTALLED $THEN
      forwarder_id_ := Delivery_Route_API.Get_Forward_Agent_Id(route_id_);
   $END
   RETURN forwarder_id_;
END Get_Route_Connect_Forwarder___;


FUNCTION Get_Init_Context_Data___ (
   source_ IN VARCHAR2) RETURN Init_Context_Structure_Rec
IS
   init_context_row_ Init_Context_Structure_Rec;
BEGIN
   IF (source_ = 'Warehouse') THEN
      init_context_row_.window_title := Language_SYS.Translate_Constant(lu_name_, 'WHSETITLE: Warehouse');
      init_context_row_.destination := 'Warehouse';
   ELSE
      init_context_row_.window_title := Language_SYS.Translate_Constant(lu_name_, 'NAVIWHSETITLE: Warehouse Navigator');
      init_context_row_.destination := 'WarehouseNavigator';
   END IF;
   RETURN init_context_row_;
END Get_Init_Context_Data___;
