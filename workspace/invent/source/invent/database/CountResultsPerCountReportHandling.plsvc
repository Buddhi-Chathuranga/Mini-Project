-----------------------------------------------------------------------------
--
--  Logical unit: CountResultsPerCountReportHandling
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------
-- 2021-10-28  DigPlk  SC21R2-2883, Added the function Get_Session_Id_Selection___ to create the selection with session id.
-- 2019-07-10  JaThlk  SCUXXW4-23055, Removed multiple calls for better performance.
-- 2019-04-25  DaZase  SCUXXW4-19621, Added Counting_Result_Initial_Check___ and bounded Get_Report_Result_Key___.
-- 2018-06-27  DaZase  SCUXXW4-5924,Created.
-----------------------------------------------------------------------------

layer Core;

FUNCTION Get_Report_Result_Key___ (
	key_ IN Counting_Report_Key) RETURN NUMBER
IS
BEGIN
	RETURN Get_Report_Result_Key___(key_.inv_list_no);
END Get_Report_Result_Key___;

FUNCTION Get_Report_Result_Key___ (
   inv_list_no_               IN VARCHAR2 ) RETURN NUMBER
IS
   parameter_attr_      VARCHAR2(32000);
   report_attr_         VARCHAR2(1000);
   distribution_list_   VARCHAR2(1000) := Fnd_Session_API.Get_Fnd_User;
   result_key_          NUMBER;
BEGIN
   Client_SYS.Add_To_Attr('INV_LIST_NO',       inv_list_no_,              parameter_attr_); 
   Client_SYS.Add_To_Attr('REPORT_ID',    'COUNTING_RESULT_REP', report_attr_);
   result_key_ := Report_Format_API.Create_New_Report(report_attr_, parameter_attr_, distribution_list_);
   RETURN result_key_;
END Get_Report_Result_Key___;


PROCEDURE Complete_Report___ (
   inv_list_no_          IN VARCHAR2 )
IS 
BEGIN
   Counting_Result_API.Complete_Report(inv_list_no_);
END Complete_Report___; 
   

PROCEDURE Cancel_Report___ (
   inv_list_no_          IN VARCHAR2 )
IS 
BEGIN
   Counting_Result_API.Cancel_Report(inv_list_no_);
END Cancel_Report___; 

FUNCTION Counting_Result_Initial_Check___ (
   inv_list_no_   IN VARCHAR2 ) RETURN BOOLEAN
IS   
   initial_check_  BOOLEAN := FALSE;
   dummy_ NUMBER;
   
   CURSOR check_exist IS
      SELECT 1 
      FROM COUNTING_RESULT
      WHERE inv_list_no = inv_list_no_;
BEGIN
   OPEN check_exist;
   FETCH check_exist INTO dummy_;
   IF (check_exist%FOUND) THEN
      initial_check_ := TRUE;
   END IF;
   CLOSE check_exist;      
   RETURN initial_check_;
END Counting_Result_Initial_Check___; 

FUNCTION Get_Difference___ (
	contract_        IN VARCHAR2,
	qty_counted_     IN NUMBER,
	qty_onhand_      IN NUMBER,
	inventory_value_ IN NUMBER) RETURN Diff_Amount_And_Percentage_Structure_Rec
IS
   rec_   Diff_Amount_And_Percentage_Structure_Rec;
BEGIN
   rec_.diff_amount := Counting_Result_API.Get_Diff_Amount(contract_, qty_counted_, qty_onhand_, inventory_value_);
   rec_.diff_percentage := Counting_Result_API.Get_Diff_Percentage(qty_counted_, qty_onhand_);
   RETURN rec_;
END Get_Difference___;


FUNCTION Get_Session_Id_Selection___ (
   contract_            IN VARCHAR2,
   part_no_             IN VARCHAR2,
   configuration_id_    IN VARCHAR2,
   location_no_         IN VARCHAR2,
   lot_batch_no_        IN VARCHAR2,
   eng_chg_level_       IN VARCHAR2,
   waiv_dev_rej_no_     IN VARCHAR2,
   activity_seq_        IN NUMBER,
   handling_unit_id_    IN NUMBER,
   qty_num_             IN VARCHAR2,
   catch_qty_num_       IN NUMBER,
   assistant_title_     IN VARCHAR2,
   assistant_context_   IN VARCHAR2,
   session_id_          IN VARCHAR2) RETURN Identify_Serials_Rec_Structure_Rec
IS
   new_selection_       VARCHAR2(32000) := NULL;
   req_rec_structure_   Identify_Serials_Rec_Structure_Rec;
   total_               NUMBER:=1;
   new_session_id_      NUMBER;
BEGIN
   IF session_id_ IS NULL THEN 
      new_session_id_ := Temporary_Part_Tracking_API.Get_Next_Session_Id;
   ELSE 
      new_session_id_ := session_id_;
   END IF;

   Client_SYS.Add_To_Key_Reference(new_selection_,'CONTRACT',contract_);
   Client_SYS.Add_To_Key_Reference(new_selection_,'PART_NO',part_no_);
   Client_SYS.Add_To_Key_Reference(new_selection_,'CONFIGURATION_ID',configuration_id_);
   Client_SYS.Add_To_Key_Reference(new_selection_,'LOCATION_NO',location_no_);
   Client_SYS.Add_To_Key_Reference(new_selection_,'LOT_BATCH_NO',lot_batch_no_);
   Client_SYS.Add_To_Key_Reference(new_selection_,'ENG_CHG_LEVEL',eng_chg_level_);
   Client_SYS.Add_To_Key_Reference(new_selection_,'WAIV_DEV_REJ_NO',waiv_dev_rej_no_);
   Client_SYS.Add_To_Key_Reference(new_selection_,'ACTIVITY_SEQ',activity_seq_);
   Client_SYS.Add_To_Key_Reference(new_selection_,'HANDLING_UNIT_ID',handling_unit_id_);
   Client_SYS.Add_To_Key_Reference(new_selection_,'QTY_TO_PICK',qty_num_);
   Client_SYS.Add_To_Key_Reference(new_selection_,'CATCH_QTY_ISSUE',catch_qty_num_);
   Client_SYS.Add_To_Key_Reference(new_selection_,'ASSISTANT_TITLE',assistant_title_);
   Client_SYS.Add_To_Key_Reference(new_selection_,'ASSISTANT_CONTEXT',assistant_context_);
   Client_SYS.Add_To_Key_Reference(new_selection_,'SESSION_ID',new_session_id_);

   req_rec_structure_.remaining_selection    := new_selection_;
   req_rec_structure_.total                  := total_;
   req_rec_structure_.session_id             := new_session_id_;
   RETURN req_rec_structure_;
END Get_Session_Id_Selection___;



