-----------------------------------------------------------------------------
--
--  Logical unit: Lu for Material Requisition Picklist.
--
--  File:         Intpick.RDF
--
--  Date    Sign    History
--  ------  ----    -----------------------------------------------------------
--  150708  MaEelk  LIM-3318, Added Handling Unit ID to the report
--  150601  RasDlk  Bug 121318, Modified Report_Printout() to enable translations for Custom Field Enumerations.
--  150528  NipKlk  Bug 122781, Modified report method by introducing archive_notes_ to be displayed in the report archive tab.
--  150112  Chfose  PRSC-5016, Changed the XML parameter name from ROW_NO to ROW_NUMBER to correctly represent that column.
--  141124  DaZase  PRSC-4337, Replaced call to Company_Address_Deliv_Info_API.Get_Address_Name with Site_API.Get_Company_Address_Name.
--  141105  PraWLK  Bug 117732, Reversed 88022 bug correction. Added ROW_NO to the view for 88022 since it had been used wrong column for correction.
--  140903  KoDelk  Bug 118573, Added user allowed site validation using the site from the material requisition.
--  140716  TiRalk  Bug 117850, Modified report method to print company logo and company name properly.
--  140502  NipKlk  Bug 116693, Removed the SUBSTR from Inventory_Part_API.Get_Description method, in the cursor get_intdetail to allow full length to be displayed in the report.
--  130805  MaRalk  TIBE-895, Removed global LU constant inst_Project_ and modified method Report_Printout 
--  130805          using conditional compilation instead.
--  121210  MAHPLK  Modified cursor get_intdetail for sorting of warehouse, bay, row, tier and bin by using route_order.
--  120823  NipKlk  Enabled custom fields in the report. 
--  120731  SBalLK  Bug 101597, Modified &REP1METHOD ( Report_Printout ) to get location specific document phrase id table and for enhance code readability.
--  120618  SBallk  Bug 103080, Modified to print document phrases in line level.
--  120201  MalLlk  Removed the cursor get_assign. Joined two tables material_requis_line_tab and material_requis_reservat_tab 
--  120201          in get_intdetail to sort the result using location details first.
--  111129  LEPESE  Added use of Utility_SYS.String_To_Number for sorting of warehouse,
--  111129          bay, row, tier and bin in cursor get_assign.
--  111027  NISMLK  SMA-285, Increased eng_chg_level length to STRING(6) in column comments.
--  111026  MaEelk  Replaced the usage of material_requis_reservat with material_requis_reservat_tab. fetched the db value of order_class inside the method.
--  110228  ChJalk  Used MATERIAL_REQUIS_LINE_TAB instead of MATERIAL_REQUIS_LINE base view and used MATERIAL_REQUISITION_TAB for MATERIAL_REQUISITION in cursors. 
--  100309  PraWlk  Bug 88832, Modified the view MATERIAL_REQUIS_PRINT_REP by changing the title of eng_chg_level from EC to Rev No.
--  100203  PraWlk  Bug 88022, Modified column to ROW_NO from ROW_NUMBER in MATERIAL_REQUIS_PRINT_REP view.
--  090520  MalLlk  Bug 77589, Defined new report layout with barcodes.
--  080317  HoInlk  Bug 72069, Added missing "ifs_assert_safe" annotations.
--  071120  NuVelk  Cleared activity_id_ and sub_project_id_ when activity_seq is NULL.
--  070918  WaJalk  Added Part Catalog Note to report.
--  070917  RoJalk  Modified the logic related to retrival of part related document text.
--  070709  ChBalk  Bug 65250, Added column CATCH_UOM and report text CATCHUNIT.
--  070411  IsAnlk  Modifed code to get document texts from Part Catalog when centralized description is used. 
--  070410  RaKalk  LCS 64533, Modified the 'ORDER BY' clause in the cursor get_intdetail 
--  070410          of the method Report_Printout.
--  061018  IsWilk  Added UNDEFINE for DETAIL_NOTE_TEXT.
--  061017  IsWilk  Added the DETAIL_NOTE_TEXT to the REP2TAB.
--  060601  RoJalk  Enlarge Part Description - Changed view comments.
--  060418  SaRalk  Enlarge Identity - Changed view comments.
------------------------------------- 13.4.0 --------------------------------
--  051216  SuJalk  Changed the parameter VIEW_RPV to REP1TAB in Define_Report_.
--  050921  NiDalk  Removed unused variables.
--  041005  HaPulk  Removed security constraint from MATERIAL_REQUIS_PRINT_REP.
--  040920  SaNalk  Modified for New Report Designer layout.
--  040901  HaPulk  Bug 44975, Added security constraint to view MATERIAL_REQUIS_PRINT_REP. 
--  040610  NaWilk  Bug 44975, Modified FROM clause in view MATERIAL_REQUIS_PRINT_REP.
--  040430  DaRulk  Remaned 'Delivery Date' to 'Planned Delivery Date' in view comments.
---------------------------------13.3.0----------------------------------------
--  031016  PrJalk  Bug fix 106237, Added procedure Init.
--  021120  KiSalk  Bug 34274, increased length of DESCRIPTION from 25 to 35 in cursor get_intdetail.
--  020627  CHJALK  Added Condition Code and Condition Code Description.
--  020603  NASALK  Extension of serial_no  from VARCHAR2(15) to VARCHAR2(50)in views.
------------------------------- AD 2002-3 Baseline ----------------------------------
--  000925  JOHESE  Added undefines.
--  000726  ANLASE  Added report text txTitleIntDest.
--  000726  ANLASE  Added columns DESTINATION_ID AND INTERNAL_DESTINATION.
--  000418  NISOSE  Added General_SYS.Init_Method in test.
--  000323  ANHO    Added contract in call to Inventory_Location_API.Get_Warehouse etc.
--  981125  FRDI    Removing without assign qry in the get_assign cursor (&REP1METHOD),
--                  now sorting by warehouse,..., bin_no instead of location_no.
--  981125  FRDI    Full precision for UOM, change comments in tab.
--  980224  SHVE    Improved the layout of the report.
--  971124  GOPE    Added Report_SYS.refresh
--  971024  JOKE    Added handling of document_text, phrase_text and note_text.
--  970908  JOMC    Changed Unit of Measure handling to conform to UoM handling 
--                  in Application Services
--  970903  JOMU    Changed to use INVENT_INFO_SERVICES_RPT.  Tables MATERIAL_REQUIS_
--                  ORD_RPT, MATERIAL_REQUIS_DET_RPT, MATERIAL_REQUIS_ASS_RPT and
--                  MATERIAL_REQUIS_PHRASES_RPT are made obsolete.
--  970519  ASBE    BUG 97-0051 Module name misspelled.
--  961215  MAOR    Changed call to Internal_Customer_API.Get_Customer_Name to
--                  use ../Get_Name.
--  961209  AnAr    Changed call to MATERIAL_REQUIS_RESERVAT_API.
--                  Check_Exist_Reservation(order_class_, order_no_).
--  961108  MAOR    Changed order of part_no and contract in call to LU 
--                  Inventory_Part_API.
--  961031  MAOR    Changed name on functions: Inventory_Location_API.Get_Bay, 
--                  Get_Row, Get_Tier and Get_Bin to have _No at the end.
--  961015  JOKE    Removed ambigious '/' after view creation.
--  960823  JOKE    Removed tables and added them into report.cre plus Altered
--                  title and changed cursors to get values through views and
--                  changed cursor get_assign and the loops to get all 
--                  allocations per part.
--  960912  JOKE    Changed module name.
--  960910  JOKE    Created.
--
-----------------------------------------------------------------------------

define MODULE = INVENT
define LU     = MaterialRequisition
define PKG    = MATERIAL_REQUISITION_RPI

define DOC_ID     = '40'

define REP1TAB    = INVENT_INFO_SERVICES_RPT
define REP2TAB    = INVENT_INFO_SERVICES_RPT
define REP3TAB    = INVENT_INFO_SERVICES_RPT
define REP1VIEW   = MATERIAL_REQUIS_PRINT_REP
DEFINE VIEW_RPV   = INVENT_INFO_SERVICES_RPV
define REP1METHOD = Report_Printout

-- 1 = Matl Requis, 2 = Requis Detail, 3 = Requis Assign, 4 = Phrases
define ROWTYPE               	  = N1

-- REP1TAB definition
define ORDER_NO              	  = S1
define ORDER_CLASS           	  = S2
define CONTRACT              	  = S3
define CONTRACT_DESC         	  = S31
define INT_CUSTOMER_NO       	  = S4
define NAME                  	  = S5
define HEAD_NOTE_ID          	  = N5
define HEAD_NOTE_TEXT        	  = S29
define DOCUMENT_PHRASE          = S30
define DESTINATION_ID        	  = S33
define INTERNAL_DESTINATION  	  = S34

-- REP2TAB definition
define LINE_NO               	  = S6
define RELEASE_NO            	  = S7
define PART_NO               	  = S8
define DESCRIPTION           	  = S9
define CONTRACT              	  = S10
define CONTRACT_DESC         	  = S32
define UNIT_MEAS             	  = S11
define ORDER_NO2             	  = S12
define ORDER_CLASS2          	  = S13
define PLANNED_DELIVERY_DATE 	  = D1
define DUE_DATE              	  = D2
define QTY_ASSIGNED          	  = N2
define DETAIL_NOTE_ID        	  = N6
define DETAIL_NOTE_TEXT         = S37
define PART_NOTE_ID          	  = N7

-- REP3TAB definition
define LOCATION_NO           	  = S14
define WAREHOUSE             	  = S15
define BAY_NO                	  = S16
define ROW_NUMBER           	  = S17
define TIER_NO               	  = S18
define BIN_NO                	  = S19 
define LOT_BATCH_NO          	  = S20
define SERIAL_NO             	  = S21
define WAIV_DEV_REJ_NO       	  = S22
define ENG_CHG_LEVEL         	  = S23
define ORDER_NO3             	  = S24
define ORDER_CLASS3          	  = S25
define LINE_NO2              	  = S26
define RELEASE_NO2           	  = S27
define LINE_ITEM_NO          	  = N4
define CONDITION_CODE		     = S35
define CONDITION_CODE_DESCRIPTION = S36

-- REP4TAB definition
define PHRASE_TEXT           	  = S28

define ACTIVITY_SEQ             = N8
define ACTIVITY_ID              = S28
define PROJECT_ID               = S29
define SUB_PROJECT_ID           = S30
define CATCH_UOM                = S38
define PART_CATALOG_NOTES       = S39
define HANDLING_UNIT_ID         = N9

-----------------------------------------------------------------------------
-- PACKAGE SPECIFICATION:     MATERIAL_REQUISITION_RPI
-----------------------------------------------------------------------------
    
PROMPT Creating &PKG specification

CREATE OR REPLACE PACKAGE &PKG IS

module_  CONSTANT VARCHAR2(6) := '&MODULE';
lu_name_ CONSTANT VARCHAR2(25) := '&LU';

PROCEDURE &REP1METHOD (
   report_attr_    IN VARCHAR2,
   parameter_attr_ IN VARCHAR2 );

PROCEDURE test (
   reportkey_   IN VARCHAR2,
   order_no_    IN VARCHAR2,
   order_class_ IN VARCHAR2 );

PROCEDURE Init;

END &PKG;
/
SHOW ERROR

-----------------------------------------------------------------------------
-- VIEWS                     
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
-- Report:     Material Requisition Report Printout
-- Type:       PLSQL1.2
-- Objects:    TABLE=   MATERIAL_REQUIS_ORD_RPT
--                      MATERIAL_REQUIS_DET_RPT
--                      MATERIAL_REQUIS_ASS_RPT
--                      MATERIAL_REQUIS_PHRASES_RPT 
--             VIEW=    MATERIAL_REQUIS_PRINT_REP
--             METHOD=  MATERIAL_REQUISITON_RPI.Report_Printout           
-----------------------------------------------------------------------------

PROMPT Creating report view &REP1VIEW
CREATE OR REPLACE VIEW &REP1VIEW AS
SELECT ORD.RESULT_KEY                    RESULT_KEY,
       ORD.ROW_NO                        ROW_NO,
       ORD.&ORDER_NO                     ORDER_NO,
       substr(Material_Requis_Type_API.Decode(ORD.&ORDER_CLASS),1,20)  ORDER_CLASS,
       ORD.&CONTRACT                     CONTRACT,
       ORD.&CONTRACT_DESC                CONTRACT_DESC, 
       ORD.&INT_CUSTOMER_NO              INT_CUSTOMER_NO,
       ORD.&NAME                         NAME,
       substr(Document_Text_API.Get_All_Notes(ord.&HEAD_NOTE_ID,&DOC_ID),1,2000) HEAD_NOTE,                 
       ORD.&HEAD_NOTE_TEXT               HEAD_NOTE_TEXT,
       ORD.&DESTINATION_ID               DESTINATION_ID,
       ORD.&INTERNAL_DESTINATION         INTERNAL_DESTINATION,
       DET.&DOCUMENT_PHRASE              DOCUMENT_PHRASE,
       substr(Document_Text_API.Get_All_Notes(det.&DETAIL_NOTE_ID,&DOC_ID),1,2000) DETAIL_NOTE,   
       DET.&DETAIL_NOTE_TEXT             DETAIL_NOTE_TEXT, 
       substr(Document_Text_API.Get_All_Notes(det.&PART_NOTE_ID,&DOC_ID),1,2000) PART_NOTE,   
       DET.&LINE_NO                      LINE_NO,
       DET.&RELEASE_NO                   RELEASE_NO,
       DET.&PART_NO                      PART_NO,
       DET.&LINE_NO||','||DET.&RELEASE_NO||','||DET.&PART_NO   REPORT_BREAK,
       DET.&DESCRIPTION                  DESCRIPTION,
       DET.&UNIT_MEAS                    UNIT_MEAS,
       DET.&PLANNED_DELIVERY_DATE        PLANNED_DELIVERY_DATE,
       DET.&DUE_DATE                     DUE_DATE,
       DET.&QTY_ASSIGNED                 QTY_ASSIGNED,
       DET.&LOCATION_NO                  LOCATION_NO,
       DET.&WAREHOUSE                    WAREHOUSE,
       DET.&BAY_NO                       BAY_NO,
       DET.&ROW_NUMBER                   ROW_NUMBER,
       DET.&TIER_NO                      TIER_NO,
       DET.&BIN_NO                       BIN_NO,
       DET.&LOT_BATCH_NO                 LOT_BATCH_NO,
       DET.&SERIAL_NO                    SERIAL_NO,
       DET.&WAIV_DEV_REJ_NO              WAIV_DEV_REJ_NO,
       DET.&ENG_CHG_LEVEL                ENG_CHG_LEVEL,
       DET.&LINE_ITEM_NO                 LINE_ITEM_NO,
       DET.&CONDITION_CODE		 CONDITION_CODE,
       DET.&CONDITION_CODE_DESCRIPTION   CONDITION_CODE_DESCRIPTION,
       DET.&ACTIVITY_SEQ                 ACTIVITY_SEQ,
       DET.&ACTIVITY_ID                  ACTIVITY_ID,
       DET.&PROJECT_ID                   PROJECT_ID,
       DET.&SUB_PROJECT_ID               SUB_PROJECT_ID,
       DET.&CATCH_UOM                    CATCH_UOM,
       DET.&PART_CATALOG_NOTES           PART_CATALOG_NOTES,
       DET.&HANDLING_UNIT_ID             HANDLING_UNIT_ID
FROM   &VIEW_RPV ORD, &VIEW_RPV DET
WHERE  ORD.N1 = 1 
AND    DET.N1 = 2
AND    ORD.PARENT_ROW_NO = 0
AND    ORD.RESULT_KEY = DET.RESULT_KEY
AND    ORD.ROW_NO = DET.PARENT_ROW_NO
AND    DET.ROW_NO >= 0
WITH   read only;

COMMENT ON TABLE &REP1VIEW IS
   'MODULE=&MODULE^LU=&LU^PROMPT=Pick List For Material Requisition^';

COMMENT ON COLUMN &REP1VIEW..RESULT_KEY IS
'FLAGS=M----^';
COMMENT ON COLUMN &REP1VIEW..ROW_NO IS
   'FLAGS=M----^';
COMMENT ON COLUMN &REP1VIEW..order_no IS
   'FLAGS=A----^DATATYPE=STRING(12)^TITLE=Order Number:^QUERY=Order No:^QFLAGS=MCS--^ITEM_NAME=iOrderNo^';
COMMENT ON COLUMN &REP1VIEW..order_class IS
   'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Order Class:^ITEM_NAME=iOrderClass^'; 
COMMENT ON COLUMN &REP1VIEW..contract IS
   'FLAGS=A----^DATATYPE=STRING(5)^TITLE=Site:^ITEM_NAME=iContract^';
COMMENT ON COLUMN &REP1VIEW..contract_desc IS
   'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Site:^ITEM_NAME=iContractDesc^';
COMMENT ON COLUMN &REP1VIEW..int_customer_no IS
   'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Internal Customer ID:^ITEM_NAME=iIntCustomerNo^';
COMMENT ON COLUMN &REP1VIEW..name IS
   'FLAGS=A----^DATATYPE=STRING(30)/UPPERCASE^TITLE=Name:^ITEM_NAME=iName^';
COMMENT ON COLUMN &REP1VIEW..head_note IS
   'FLAGS=A----^DATATYPE=STRING(2000)^TITLE=Document Note^ITEM_NAME=iHeadNote^';
COMMENT ON COLUMN &REP1VIEW..head_note_text IS
   'FLAGS=A----^DATATYPE=STRING(2000)^TITLE=Requisition Note^ITEM_NAME=iHeadNoteText^';
COMMENT ON COLUMN &REP1VIEW..destination_id IS
   'FLAGS=A----^DATATYPE=STRING(30)^TITLE=Internal Destination ID:^ITEM_NAME=iDestinationId^';
COMMENT ON COLUMN &REP1VIEW..internal_destination IS
   'FLAGS=A----^DATATYPE=STRING(2000)^TITLE=Internal Destination:^ITEM_NAME=iInternalDestination^';
COMMENT ON COLUMN &REP1VIEW..DOCUMENT_PHRASE
   IS 'FLAGS=A----^DATATYPE=STRING(2000)^TITLE=Document Phrase^ITEM_NAME=iDocumentPhrases';
COMMENT ON COLUMN &REP1VIEW..detail_note IS
   'FLAGS=A----^DATATYPE=STRING(2000)^TITLE=Document Note^ITEM_NAME=iDetailNote^';
COMMENT ON COLUMN &REP1VIEW..detail_note_text IS
   'FLAGS=A----^DATATYPE=STRING(2000)^TITLE=Requisition Line Note^ITEM_NAME=iDetailNoteText^';
COMMENT ON COLUMN &REP1VIEW..part_note IS
   'FLAGS=A----^DATATYPE=STRING(2000)^TITLE=Part Document Note^ITEM_NAME=iPartNote^';
COMMENT ON COLUMN &REP1VIEW..line_no IS
   'FLAGS=A----^DATATYPE=STRING(4)^TITLE=Line No^ITEM_NAME=iLineNo^';
COMMENT ON COLUMN &REP1VIEW..release_no IS
   'FLAGS=A----^DATATYPE=STRING(4)^TITLE=Release No^ITEM_NAME=iReleaseNo^';
COMMENT ON COLUMN &REP1VIEW..part_no IS
   'FLAGS=A----^DATATYPE=STRING(25)^TITLE=Part Number^ITEM_NAME=iPartNo^';   
COMMENT ON COLUMN &REP1VIEW..report_break IS
   'FLAGS=A----^DATATYPE=STRING(36)^ITEM_NAME=iReportBreak^';
COMMENT ON COLUMN &REP1VIEW..description IS
   'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Part Description^ITEM_NAME=iDescription^';
COMMENT ON COLUMN &REP1VIEW..unit_meas IS
   'FLAGS=A----^DATATYPE=STRING(10)^TITLE=U/M^ITEM_NAME=iUnitMeas^';
COMMENT ON COLUMN &REP1VIEW..planned_delivery_date IS
   'FLAGS=A----^DATATYPE=DATE^TITLE=Planned Delivery Date^ITEM_NAME=iPlannedDeliveryDate^';
COMMENT ON COLUMN &REP1VIEW..due_date IS
   'FLAGS=A----^DATATYPE=DATE^TITLE=Due Date^ITEM_NAME=iDueDate^';
COMMENT ON COLUMN &REP1VIEW..qty_assigned IS
   'FLAGS=A----^DATATYPE=NUMBER^TITLE=Quantity^ITEM_NAME=iQtyAssigned^';
COMMENT ON COLUMN &REP1VIEW..location_no IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Location No^ITEM_NAME=iLocationNo^';
COMMENT ON COLUMN &REP1VIEW..WAREHOUSE IS
   'FLAGS=A----^DATATYPE=STRING(15)^TITLE=Warehouse^ITEM_NAME=iWarehouse^';
COMMENT ON COLUMN &REP1VIEW..BAY_NO IS
   'FLAGS=A----^DATATYPE=STRING(5)^TITLE=Bay^ITEM_NAME=iBayNo^';
COMMENT ON COLUMN &REP1VIEW..ROW_NUMBER IS
   'FLAGS=A----^DATATYPE=STRING(5)^TITLE=Row^ITEM_NAME=iRowNumber^';
COMMENT ON COLUMN &REP1VIEW..TIER_NO IS
   'FLAGS=A----^DATATYPE=STRING(5)^TITLE=Tier^ITEM_NAME=iTierNo^';
COMMENT ON COLUMN &REP1VIEW..BIN_NO IS
   'FLAGS=A----^DATATYPE=STRING(5)^TITLE=Bin^ITEM_NAME=iBinNo^';
COMMENT ON COLUMN &REP1VIEW..lot_batch_no IS
   'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Lot/Batch No^ITEM_NAME=iLotBatchNo^';
COMMENT ON COLUMN &REP1VIEW..serial_no IS
   'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Serial No^ITEM_NAME=iSerialNo^';
COMMENT ON COLUMN &REP1VIEW..waiv_dev_rej_no IS
   'FLAGS=A----^DATATYPE=STRING(15)^TITLE=W/D/R No^ITEM_NAME=iWaivDevRejNo^';
COMMENT ON COLUMN &REP1VIEW..eng_chg_level IS
   'FLAGS=A----^DATATYPE=STRING(6)^TITLE=Rev No^ITEM_NAME=iEngChgLevel^';
COMMENT ON COLUMN &REP1VIEW..line_item_no IS
   'FLAGS=A----^DATATYPE=NUMBER(3)^TITLE=Line Item No^ITEM_NAME=iLineItemNo^';
COMMENT ON COLUMN &REP1VIEW..condition_code IS
   'FLAGS=A----^DATATYPE=STRING(10)/UPPERCASE^TITLE=Condition Code^ITEM_NAME=iConditionCode^';
COMMENT ON COLUMN &REP1VIEW..condition_code_description IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Condition Code Description^ITEM_NAME=iConditionCodeDescription^';
COMMENT ON COLUMN &REP1VIEW..activity_seq IS
   'FLAGS=A----^DATATYPE=NUMBER^TITLE=Activity Sequence^ITEM_NAME=iActivitySeq^';
COMMENT ON COLUMN &REP1VIEW..activity_id IS
   'FLAGS=A----^DATATYPE=STRING(30)^TITLE=Activity ID^ITEM_NAME=iActivityId^';
COMMENT ON COLUMN &REP1VIEW..project_id IS
   'FLAGS=A----^DATATYPE=STRING(30)^TITLE=Project ID^ITEM_NAME=iProjectId^';
COMMENT ON COLUMN &REP1VIEW..sub_project_id IS
   'FLAGS=A----^DATATYPE=STRING(30)^TITLE=Sub Project ID^ITEM_NAME=iSubProjectId^';
COMMENT ON COLUMN &REP1VIEW..catch_uom IS
   'FLAGS=A----^DATATYPE=STRING(30)^TITLE=Catch UoM^ITEM_NAME=iCatchUom^';
COMMENT ON COLUMN &REP1VIEW..part_catalog_notes IS
   'FLAGS=A----^DATATYPE=STRING(2000)^TITLE=Part Catalog Note^ITEM_NAME=iPartCatalogNote^';
COMMENT ON COLUMN &REP1VIEW..handling_unit_id IS
   'FLAGS=A----^DATATYPE=NUMBER^TITLE=Handling Unit ID^ITEM_NAME=iHandlingUnitId^';

-- REF=MaterialRequisType^'; Was removed from OrderClass since IIDs can't be
-- referenced so far.

BEGIN
   Report_SYS.Define_Report_('&REP1VIEW', '&MODULE', '&LU', 'Pick List For Material Requisition', '&REP1TAB', '&PKG..&REP1METHOD', 0,'','','','PLSQL1.2','TRUE','Warehouse Management','Pick List');
   Report_SYS.Refresh_('&REP1VIEW');   
   Report_Lu_Definition_API.Clear_Custom_Fields_For_Report('&REP1VIEW');
   Report_Lu_Definition_API.Enable_Custom_Fields_for_Lu('&REP1VIEW', 'MaterialRequisition', 'MATERIAL_REQUIS_PRINT_REP');
   Report_Lu_Definition_API.Enable_Custom_Fields_for_Lu('&REP1VIEW', 'MaterialRequisLine', 'MATERIAL_REQUIS_PRINT_REP/REQUIS_ITEMS/REQUIS_ITEM');
   Report_Lu_Definition_API.Enable_Custom_Fields_for_Lu('&REP1VIEW', 'MaterialRequisReservat', 'MATERIAL_REQUIS_PRINT_REP/REQUIS_ITEMS/REQUIS_ITEM');
   end;   
/
-----------------------------------------------------------------------------
-- PACKAGE IMPLEMENTATION     MATERIAL_REQUISITION_RPI
-----------------------------------------------------------------------------

PROMPT Creating &PKG implementation

CREATE OR REPLACE PACKAGE BODY &PKG IS

-----------------------------------------------------------------------------

PROCEDURE &REP1METHOD (
   report_attr_    IN VARCHAR2,
   parameter_attr_ IN VARCHAR2 )
IS
   result_key_     		       NUMBER;
   order_no_       		       VARCHAR2(12);
   order_class_db_  		       VARCHAR2(20); 
   phrase_text_    		       VARCHAR2(2000);
   language_code_  		       VARCHAR2(4);
   row_no_         		       NUMBER := 1;
   parent_row_no_              NUMBER;

   condition_code_    	       VARCHAR2(10);
   condition_code_description_ VARCHAR2(35);
   do_xml_                     BOOLEAN := Report_SYS.Should_Generate_Xml('&REP1VIEW');
   do_rs_                      BOOLEAN := Report_SYS.Should_Generate_Result_Set('&REP1VIEW');
   xml_                        CLOB;
   package_name_               VARCHAR2(100) := 'MATERIAL_REQUIS_PRINT_REP';
   head_note_                  VARCHAR2(2000);
   line_note_                  VARCHAR2(2000);
   activity_id_                VARCHAR2(30);
   sub_project_id_             VARCHAR2(30);
   catch_uom_                  VARCHAR2(30);
   inv_part_note_id_           NUMBER;
   inv_part_notes_             VARCHAR2(2000);
   partca_part_note_id_        NUMBER;
   partca_part_notes_          VARCHAR2(2000);
   phrase_on_document_tab_     Phrase_On_Document_API.Phrase_Id_Tab;
   company_                    VARCHAR2(20);
   logotype_                   VARCHAR2(100);      
   company_name_               VARCHAR2(100);
   contract_                   VARCHAR2(5);   
   archive_notes_              VARCHAR2(200);

   CURSOR get_Intorder IS
      SELECT mr.order_no,
             mr.order_class,
             mr.contract,
             int_customer_no,
             Internal_Customer_API.Get_Name(int_customer_no) name,
             note_id,
             note_text,
             destination_id,
             internal_destination,
             mr.rowkey  
      FROM   material_requisition_tab mr 
      WHERE  mr.order_no         =  order_no_
      AND    mr.order_class      =  order_class_db_
      AND    EXISTS (SELECT 1
                     FROM   material_requis_reservat_tab mrr
                     WHERE  mrr.order_no         =  mr.order_no
                     AND    mrr.order_class      =  mr.order_class
                     AND    mrr.qty_assigned > 0)      
      AND    mr.contract =  User_Allowed_Site_API.Authorized(mr.contract);

   CURSOR get_intdetail IS
      SELECT mrl.line_no,
             mrl.release_no,
             mrl.part_no,
             Inventory_Part_API.Get_Description(mrl.contract, mrl.part_no) description,
             SUBSTR(Inventory_Part_API.Get_Note_Id(mrl.contract, mrl.part_no),1,25) part_note_id,
             mrl.contract,
             unit_meas,
             planned_delivery_date,
             due_date,
             mrl.order_no,
             mrl.order_class,
             note_id,
             note_text,
             mrl.activity_seq,
             project_id,
             mrr.location_no,
             il.warehouse,
             il.bay_no,
             il.row_no row_number,
             il.tier_no,
             il.bin_no,
             lot_batch_no,
             serial_no,
             waiv_dev_rej_no,
             eng_chg_level,
             mrr.qty_assigned,
             mrr.line_item_no,
             mrr.handling_unit_id,
             mrl.rowkey          mrl_rowkey,
             mrr.rowkey          mrr_rowkey 
      FROM   material_requis_line_tab mrl, material_requis_reservat_tab mrr, inventory_location_pub il
      WHERE  mrl.order_no         =  order_no_
      AND    mrl.order_class      =  order_class_db_
      AND    mrl.order_no         =  mrr.order_no
      AND    mrl.order_class      =  mrr.order_class
      AND    mrl.line_no          =  mrr.line_no
      AND    mrl.release_no       =  mrr.release_no
      AND    mrr.qty_assigned > 0
      AND    il.contract        = mrl.contract
      AND    il.location_no     = mrr.location_no
      AND    mrl.contract =  User_Allowed_Site_API.Authorized(mrl.contract)      
      ORDER BY Utility_SYS.String_To_Number(il.warehouse_route_order) ASC, il.warehouse_route_order ASC,
               Utility_SYS.String_To_Number(il.bay_route_order) ASC,       il.bay_route_order ASC,
               Utility_SYS.String_To_Number(il.row_route_order) ASC,       il.row_route_order ASC,
               Utility_SYS.String_To_Number(il.tier_route_order) ASC,      il.tier_route_order ASC,
               Utility_SYS.String_To_Number(il.bin_route_order) ASC,       il.bin_route_order ASC,
               Utility_SYS.String_To_Number(mrl.line_no) ASC    , mrl.line_no ASC,
               Utility_SYS.String_To_Number(mrl.release_no) ASC , mrl.release_no ASC;
BEGIN
   General_SYS.Init_Method(lu_name_, '&PKG', '&REP1METHOD');

   result_key_     := to_number(Client_SYS.Get_Item_Value('RESULT_KEY', report_attr_));
   order_no_       := Client_SYS.Get_Item_Value('ORDER_NO', parameter_attr_);
   order_class_db_ := Material_Requis_Type_API.DB_INT;
   
   User_Allowed_Site_API.Exist(Fnd_Session_API.Get_Fnd_User(),
                               Material_Requisition_API.Get_Contract(Material_Requis_Type_API.Decode(order_class_db_), order_no_));
   
   language_code_  := Language_SYS.Get_Language;
   parent_row_no_  := 0;
   
   -- Set report language
   Archive_API.Set_Language(language_code_);
   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.Create_Report_Header(xml_, '&REP1VIEW', package_name_);
   END IF;

   FOR Intord_ IN get_intorder LOOP
      -- this loop should only retrieve one record.
      head_note_ := substr(Document_Text_API.Get_All_Notes(intord_.note_id,&DOC_ID),1,2000) ;                 
      contract_  := intord_.contract;

      IF (do_xml_) THEN
         Xml_Record_Writer_SYS.Add_Element(xml_, 'ORDER_NO', Intord_.order_no);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'ORDER_CLASS', intord_.order_class);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'CONTRACT', intord_.contract);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'CONTRACT_DESC', Site_API.Get_Description(intord_.contract));
         Xml_Record_Writer_SYS.Add_Element(xml_, 'INT_CUSTOMER_NO', intord_.int_customer_no);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'NAME', intord_.name);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'HEAD_NOTE', head_note_);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'HEAD_NOTE_TEXT', intord_.note_text);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'DESTINATION_ID', intord_.destination_id);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'INTERNAL_DESTINATION',  intord_.internal_destination);
         Xml_Record_Writer_SYS.Add_Custom_Fields(xml_,'MaterialRequisition', intord_.rowkey, 'MATERIAL_REQUIS_PRINT_REP', language_code_);
      END IF;

      IF (do_rs_) THEN
         INSERT INTO &REP1TAB (
                               &ROWTYPE,
                               result_key, 
                               row_no,
                               parent_row_no,
                               &ORDER_NO, 
                               &ORDER_CLASS,
                               &CONTRACT,  
                               &CONTRACT_DESC,     
                               &INT_CUSTOMER_NO,
                               &NAME,
                               &HEAD_NOTE_ID,
                               &HEAD_NOTE_TEXT,
                               &DESTINATION_ID,
                               &INTERNAL_DESTINATION)
         VALUES (
                 1,
                 result_key_, 
                 row_no_,
                 parent_row_no_,
                 Intord_.order_no, 
                 Material_Requis_Type_API.Encode(intord_.ORDER_CLASS),
                 intord_.contract,
                 Site_API.Get_Description(intord_.contract),       
                 intord_.int_customer_no,
                 intord_.name,
                 intord_.note_id,
                 intord_.note_text,
                 intord_.destination_id,
                 intord_.internal_destination);
      END IF ;

      parent_row_no_ := row_no_;
      row_no_        := row_no_ + 1; 
      
      archive_notes_ := Language_SYS.Translate_Constant(lu_name_, 'MTRORDERNO: Order No');
      archive_notes_ := archive_notes_ || ': '|| order_no_ ;
      Archive_API.Set_Notes(archive_notes_);
      
      IF (do_xml_) THEN
         Xml_Record_Writer_SYS.Start_Element(xml_, 'REQUIS_ITEMS');
      END IF;

      FOR Intdet_ IN get_intdetail LOOP
         Inventory_Part_API.Get_All_Notes(partca_part_note_id_,
                                          partca_part_notes_,
                                          inv_part_note_id_,
                                          inv_part_notes_,
                                          intord_.contract,
                                          intdet_.part_no,
                                          Language_SYS.Get_Language,
                                          &DOC_ID);
         
         line_note_      := SUBSTR(Document_Text_API.Get_All_Notes(intdet_.note_id,&DOC_ID),1,2000) ;   
                  
         IF intdet_.activity_seq IS NOT NULL  THEN
            $IF Component_Proj_Sys.INSTALLED $THEN
               activity_id_    := Activity_API.Get_Activity_No(intdet_.activity_seq);
               sub_project_id_ := Activity_api.Get_Sub_Project_Id(intdet_.activity_seq);            
            $ELSE
               NULL;    
            $END
         ELSE
            activity_id_    := NULL;
            sub_project_id_ := NULL;
         END IF;

         catch_uom_                  := Inventory_Part_API.Get_Enabled_Catch_Unit_Meas(intdet_.contract, intdet_.part_no);
         condition_code_             := Condition_Code_Manager_API.Get_Condition_Code (intdet_.part_no, intdet_.serial_no, intdet_.lot_batch_no);
         condition_code_description_ := Condition_Code_API.Get_Description(condition_code_);

         IF (do_xml_) THEN
            Xml_Record_Writer_SYS.Start_Element(xml_, 'REQUIS_ITEM');
            Xml_Record_Writer_SYS.Add_Element(xml_, 'DETAIL_NOTE', line_note_);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'DETAIL_NOTE_TEXT', Intdet_.note_text);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'PART_NOTE', inv_part_notes_ );
            Xml_Record_Writer_SYS.Add_Element(xml_, 'LINE_NO', intdet_.line_no);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'RELEASE_NO', intdet_.release_no);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'PART_NO', intdet_.part_no);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'DESCRIPTION',  intdet_.description);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'UNIT_MEAS', intdet_.unit_meas);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'PLANNED_DELIVERY_DATE', intdet_.planned_delivery_date);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'DUE_DATE', intdet_.due_date);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'QTY_ASSIGNED', intdet_.qty_assigned);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'ACTIVITY_SEQ', intdet_.activity_seq);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'ACTIVITY_ID', activity_id_);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'PROJECT_ID', intdet_.project_id);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'SUB_PROJECT_ID', sub_project_id_);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'CATCH_UOM', catch_uom_);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'PART_CATALOG_NOTES', partca_part_notes_);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'LOCATION_NO', intdet_.location_no);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'WAREHOUSE', intdet_.warehouse);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'BAY_NO',  intdet_.bay_no);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'ROW_NUMBER', intdet_.row_number);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'TIER_NO', intdet_.tier_no);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'BIN_NO',  intdet_.bin_no);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'LOT_BATCH_NO',  intdet_.lot_batch_no);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'SERIAL_NO', intdet_.serial_no);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'WAIV_DEV_REJ_NO', intdet_.waiv_dev_rej_no);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'ENG_CHG_LEVEL', intdet_.eng_chg_level);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'LINE_ITEM_NO',    intdet_.line_item_no);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'CONDITION_CODE', condition_code_);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'CONDITION_CODE_DESCRIPTION', condition_code_description_);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'HANDLING_UNIT_ID', intdet_.handling_unit_id);
            Xml_Record_Writer_SYS.Add_Custom_Fields(xml_,'MaterialRequisLine', Intdet_.mrl_rowkey, 'MATERIAL_REQUIS_PRINT_REP', language_code_);
            Xml_Record_Writer_SYS.Add_Custom_Fields(xml_,'MaterialRequisReservat', Intdet_.mrr_rowkey, 'MATERIAL_REQUIS_PRINT_REP', language_code_);
         END IF;
       
         IF (do_rs_) THEN
            INSERT INTO &REP2TAB (
                                  &ROWTYPE,
                                  result_key,    
                                  row_no,        
                                  parent_row_no, 
                                  &LINE_NO,       
                                  &RELEASE_NO,    
                                  &PART_NO,       
                                  &DESCRIPTION,   
                                  &CONTRACT,
                                  &CONTRACT_DESC,
                                  &UNIT_MEAS,
                                  &PLANNED_DELIVERY_DATE,
                                  &DUE_DATE,      
                                  &QTY_ASSIGNED,  
                                  &ORDER_NO2,      
                                  &ORDER_CLASS2,
                                  &DETAIL_NOTE_ID,
                                  &DETAIL_NOTE_TEXT,
                                  &PART_NOTE_ID,
                                  &ACTIVITY_SEQ, 
                                  &ACTIVITY_ID, 
                                  &PROJECT_ID, 
                                  &SUB_PROJECT_ID,
                                  &LOCATION_NO,
                                  &WAREHOUSE, 
                                  &BAY_NO, 
                                  &ROW_NUMBER, 
                                  &TIER_NO,
                                  &BIN_NO,     
                                  &LOT_BATCH_NO,    
                                  &SERIAL_NO,       
                                  &WAIV_DEV_REJ_NO, 
                                  &ENG_CHG_LEVEL,
                                  &LINE_ITEM_NO,
                                  &CONDITION_CODE,
                                  &CONDITION_CODE_DESCRIPTION,
                                  &HANDLING_UNIT_ID)
            VALUES (
                    2,
                    result_key_,    
                    row_no_,        
                    parent_row_no_, 
                    intdet_.line_no,       
                    intdet_.release_no,    
                    intdet_.part_no,       
                    intdet_.description,   
                    intdet_.contract,
                    Site_API.get_description(intdet_.contract),
                    intdet_.unit_meas,
                    intdet_.planned_delivery_date,
                    intdet_.due_date,      
                    intdet_.qty_assigned,  
                    intdet_.order_no,      
                    intdet_.order_class,
                    intdet_.note_id,
                    intdet_.note_text,
                    inv_part_note_id_,
                    intdet_.activity_seq, 
                    activity_id_, 
                    intdet_.project_id, 
                    sub_project_id_,
                    intdet_.location_no,      
                    intdet_.warehouse, 
                    intdet_.bay_no, 
                    intdet_.row_number, 
                    intdet_.tier_no,
                    intdet_.bin_no,
                    intdet_.lot_batch_no,     
                    intdet_.serial_no,        
                    intdet_.waiv_dev_rej_no,  
                    intdet_.eng_chg_level,
                    intdet_.line_item_no,
                    condition_code_,
                    condition_code_description_,
                    intdet_.handling_unit_id);
         END IF;

         row_no_ := row_no_ + 1;

         IF (do_xml_) THEN
            Xml_Record_Writer_SYS.End_Element(xml_, 'REQUIS_ITEM');
         END IF;
         
      END LOOP;
      IF (do_xml_) THEN
         Xml_Record_Writer_SYS.End_Element(xml_, 'REQUIS_ITEMS');
      END IF;

      IF language_code_ IS NOT NULL THEN
         IF (do_xml_) THEN
            Xml_Record_Writer_SYS.Start_Element(xml_, 'DOC_PHRASES');
         END IF;
         
         phrase_on_document_tab_ := Phrase_On_Document_API.Get_Phrase_Id_Tab( 'INTPICK', NULL, intord_.contract);
         
         IF (phrase_on_document_tab_.COUNT > 0) THEN
            FOR n IN phrase_on_document_tab_.FIRST..phrase_on_document_tab_.LAST LOOP
               phrase_text_ := Mpccom_Phrase_Text_API.Get_Phrase_Text( phrase_on_document_tab_(n), language_code_);
               IF (phrase_text_ IS NOT NULL) THEN
                  IF (do_xml_) THEN
                     Xml_Record_Writer_SYS.Start_Element(xml_, 'DOC_PHRASE');
                     Xml_Record_Writer_SYS.Add_Element(xml_, 'DOCUMENT_PHRASE', phrase_text_);
                     Xml_Record_Writer_SYS.End_Element(xml_, 'DOC_PHRASE');
                  END IF;

                  IF (do_rs_) THEN
                     INSERT INTO &REP2TAB (
                                           result_key, row_no, parent_row_no, &DOCUMENT_PHRASE)
                     VALUES (
                             result_key_, row_no_, parent_row_no_, phrase_text_);
                  END IF;
                  row_no_ := row_no_ + 1;
               END IF;
            END LOOP;
         END IF;

         IF (do_xml_) THEN
            Xml_Record_Writer_SYS.End_Element(xml_, 'DOC_PHRASES');
         END IF;
      END IF;
      row_no_ := row_no_ + 1;
   END LOOP;
   
   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.End_Element(xml_, '&REP1VIEW');
      Report_SYS.Finish_Xml_Report('&REP1VIEW', result_key_, xml_);
   END IF;

   company_      := Site_API.Get_Company(contract_);       
   logotype_     := Company_API.Get_Logotype(company_);
   company_name_ := Site_API.Get_Company_Address_Name(contract_);

   IF (logotype_ IS NOT NULL ) THEN
      Archive_Variable_API.Set_Object(result_key_, 'rhSysLogo', logotype_);
      Archive_Variable_API.Set_Variable(result_key_, 'companyName', company_name_);         
   END IF;
   
END &REP1METHOD;

PROCEDURE test (
   reportkey_   IN VARCHAR2,
   order_no_    IN VARCHAR2,
   order_class_ IN VARCHAR2 )
IS
   reportattr_    VARCHAR2(200);
   parameterattr_ VARCHAR2(200);
BEGIN
   General_SYS.Init_Method(lu_name_, '&PKG', 'test');
   Client_SYS.Add_To_Attr('RESULT_KEY', reportkey_, reportattr_);    
   Client_SYS.Add_To_Attr('ORDER_NO', order_no_, parameterattr_);
   Client_SYS.Add_To_Attr('ORDER_CLASS', order_class_, parameterattr_);

   &REP1METHOD(reportattr_, parameterattr_);
END test;  

-----------------------------------------------------------------------------
-------------------- FOUNDATION1 METHODS ------------------------------------
-----------------------------------------------------------------------------
-- Init
--   Dummy procedure that can be called at database startup to ensure that
--   this package is loaded into memory for performance reasons only.
-----------------------------------------------------------------------------

PROCEDURE Init
IS
BEGIN
   NULL;
END Init;


END &PKG;
/

-----------------------------------------------------------------------------
-- REPORT TEXTS
-----------------------------------------------------------------------------
BEGIN
    Report_SYS.Define_Report_Text_('&REP1VIEW', 'txTitleIntDest','Internal Delivery Address');
    Report_SYS.Define_Report_Text_('&REP1VIEW', 'CATCHUNIT', 'Catch Unit');
END;
/

COMMIT
/
SHOW ERROR
-----------------------------------------------------------------------------
-- End of file.
-----------------------------------------------------------------------------


----------------------------------------------------------
-- <UNDEFINE_SECTION>
----------------------------------------------------------
-- This section is reserved for undefine statements
-- nothing should be manually written below because
-- that would be overwritten everytime the IFS / Undefine
-- tool is run.  
-- Also do NOT make any changes to the above tag because
-- this will result in duplicated code
----------------------------------------------------------
UNDEFINE MODULE
UNDEFINE LU
UNDEFINE PKG
UNDEFINE DOC_ID
UNDEFINE REP1TAB
UNDEFINE REP2TAB
UNDEFINE REP3TAB
UNDEFINE REP1VIEW
UNDEFINE VIEW_RPV
UNDEFINE REP1METHOD
UNDEFINE ROWTYPE
UNDEFINE ORDER_NO
UNDEFINE ORDER_CLASS
UNDEFINE CONTRACT
UNDEFINE CONTRACT_DESC
UNDEFINE INT_CUSTOMER_NO
UNDEFINE NAME
UNDEFINE HEAD_NOTE_ID
UNDEFINE HEAD_NOTE_TEXT
UNDEFINE DOCUMENT_PHRASE
UNDEFINE DESTINATION_ID
UNDEFINE INTERNAL_DESTINATION
UNDEFINE LINE_NO
UNDEFINE RELEASE_NO
UNDEFINE PART_NO
UNDEFINE DESCRIPTION
UNDEFINE UNIT_MEAS
UNDEFINE ORDER_NO2
UNDEFINE ORDER_CLASS2
UNDEFINE PLANNED_DELIVERY_DATE
UNDEFINE DUE_DATE
UNDEFINE QTY_ASSIGNED
UNDEFINE DETAIL_NOTE_ID
UNDEFINE DETAIL_NOTE_TEXT
UNDEFINE PART_NOTE_ID
UNDEFINE LOCATION_NO
UNDEFINE WAREHOUSE
UNDEFINE BAY_NO
UNDEFINE ROW_NUMBER
UNDEFINE TIER_NO
UNDEFINE BIN_NO
UNDEFINE LOT_BATCH_NO
UNDEFINE SERIAL_NO
UNDEFINE WAIV_DEV_REJ_NO
UNDEFINE ENG_CHG_LEVEL
UNDEFINE ORDER_NO3
UNDEFINE ORDER_CLASS3
UNDEFINE LINE_NO2
UNDEFINE RELEASE_NO2
UNDEFINE LINE_ITEM_NO
UNDEFINE CONDITION_CODE		
UNDEFINE CONDITION_CODE_DESCRIPTION
UNDEFINE PHRASE_TEXT
UNDEFINE ACTIVITY_SEQ
UNDEFINE ACTIVITY_ID
UNDEFINE PROJECT_ID
UNDEFINE SUB_PROJECT_ID
UNDEFINE CATCH_UOM
UNDEFINE PART_CATALOG_NOTES
UNDEFINE HANDLING_UNIT_ID
