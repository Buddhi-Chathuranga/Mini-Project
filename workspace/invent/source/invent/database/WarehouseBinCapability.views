-----------------------------------------------------------------------------
--
--  Logical unit: WarehouseBinCapability
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  150814  BudKlk  Bug 120336, Created UIVs called 'Warehouse_Operative_Cap_Uiv' for the view 'Warehouse_Operative_Cap' 
--  150814          and 'Wh_Bay_Operative_Cap_Uiv' for the view 'Wh_Bay_Operative_Cap', in order to called from the client. 
--  150814          These UIV views created for the purpose of using in the client side with the same ordering of data, 
--  150814          therefore any change done in the ORDER BY clauses of any of those views should be added to the respective other view.

-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

COLUMN Source IS
   Flags      = 'AMI--'
   Datatype   = 'STRING(200)'
   Prompt     = 'Source'
   Ref        = 'Warehouse_Structure_Level';

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------


-------------------- PRIVATE VIEW DEFINITIONS -------------------------------
VIEW Warehouse_Operative_Cap IS
   Prompt = 'Warehouse Capability'
   Warehouse_Id.Ref = 'Warehouse(contract)'
   Storage_Capability_Id.Flags = 'AMI--'
SELECT contract                      contract,
       warehouse_id                  warehouse_id,
       storage_capability_id         storage_capability_id,
       Warehouse_Structure_Level_API.Decode('WAREHOUSE') source,
       2                             sort,
       rowid                         objid,
       ltrim(lpad(to_char(rowversion,'YYYYMMDDHH24MISS'),2000))  objversion
FROM  warehouse_capability_tab
WHERE removed = 'FALSE'
UNION ALL
SELECT a.contract                    contract,
       warehouse_id                  warehouse_id,
       storage_capability_id         storage_capability_id,
       Warehouse_Structure_Level_API.Decode('SITE') source,
       1                             sort,
       a.rowid                       objid,
       ltrim(lpad(to_char(a.rowversion,'YYYYMMDDHH24MISS'),2000))  objversion
FROM  warehouse_tab a, site_storage_capability_tab b
WHERE a.contract = b.contract
AND  NOT EXISTS (SELECT 1 FROM warehouse_capability_tab c
                 WHERE c.contract              = a.contract
                   AND c.warehouse_id          = a.warehouse_id
                   AND c.storage_capability_id = b.storage_capability_id)
ORDER BY sort, storage_capability_id;

-- This  view created for the purpose of using in the client side with the same ordering of data, therefore any  
-- change done in the Order by clause of either Warehouse_Operative_Cap or Warehouse_Operative_Cap_Uiv should be added to both views.
@SecurityCheck Site.UserAuthorized(warehouse_operative_cap.contract)
VIEW Warehouse_Operative_Cap_Uiv IS
   Prompt = 'Warehouse Capability'
   Warehouse_Id.Ref = 'Warehouse(contract)'
   Storage_Capability_Id.Flags = 'AMI--'
SELECT contract                      contract,
       warehouse_id                  warehouse_id,
       storage_capability_id         storage_capability_id,
       source                        source,
       sort                          sort,
       objid                         objid,
       objversion                    objversion
FROM   WAREHOUSE_OPERATIVE_CAP
ORDER BY sort, storage_capability_id;

VIEW Wh_Bay_Operative_Cap IS
   Prompt = 'Warehouse Bay Capability'
   Warehouse_Id.Ref = 'Warehouse(contract)'
   Bay_Id.Ref = 'WarehouseBay(contract,warehouse_id)'
   Storage_Capability_Id.Flags = 'AMI--'
SELECT contract                      contract,
       warehouse_id                  warehouse_id,
       bay_id                        bay_id,
       storage_capability_id         storage_capability_id,
       Warehouse_Structure_Level_API.Decode('BAY') source,
       3                             sort,
       rowid                         objid,
       ltrim(lpad(to_char(rowversion,'YYYYMMDDHH24MISS'),2000))  objversion
FROM  warehouse_bay_capability_tab b
WHERE removed = 'FALSE'
UNION ALL
SELECT a.contract                    contract,
       a.warehouse_id                warehouse_id,
       bay_id                        bay_id,
       storage_capability_id         storage_capability_id,
       source                        source,
       sort                          sort,
       a.rowid                       objid,
       ltrim(lpad(to_char(a.rowversion,'YYYYMMDDHH24MISS'),2000))  objversion
FROM  warehouse_bay_tab a, warehouse_operative_cap b
WHERE a.contract     = b.contract
  AND a.warehouse_id = b.warehouse_id
AND  NOT EXISTS (SELECT 1 FROM warehouse_bay_capability_tab c
                 WHERE c.contract              = a.contract
                   AND c.warehouse_id          = a.warehouse_id
                   AND c.bay_id                = a.bay_id
                   AND c.storage_capability_id = b.storage_capability_id)
ORDER BY sort, storage_capability_id;

-- This  view created for the purpose of using in the client side with the same ordering of data, therefore any  
-- change done in the Order by clause of either Wh_Bay_Operative_Cap or Wh_Bay_Operative_Cap_Uiv should be added to both views.
@SecurityCheck Site.UserAuthorized(wh_bay_operative_cap.contract)
VIEW Wh_Bay_Operative_Cap_Uiv IS
   Prompt = 'Warehouse Bay Capability'
   Warehouse_Id.Ref = 'Warehouse(contract)'
   Bay_Id.Ref = 'WarehouseBay(contract,warehouse_id)'
   Storage_Capability_Id.Flags = 'AMI--'
SELECT contract                      contract,
       warehouse_id                  warehouse_id,
       bay_id                        bay_id,
       storage_capability_id         storage_capability_id,
       source                        source,
       sort                          sort,
       objid                         objid,
       objversion                    objversion    
FROM   WH_BAY_OPERATIVE_CAP
ORDER BY sort, storage_capability_id;
   
VIEW Wh_Row_Operative_Cap IS
   Prompt = 'Warehouse Row Capability'
   Warehouse_Id.Ref = 'Warehouse(contract)'
   Bay_Id.Ref = 'WarehouseBay(contract,warehouse_id)'
   Row_Id.Ref = 'WarehouseBayRow(contract,warehouse_id,bay_id)'
   Storage_Capability_Id.Flags = 'AMI--'
SELECT contract,
       warehouse_id,
       bay_id,
       row_id,
       storage_capability_id,
       source,
       sort,
       objid,
       objversion
FROM (SELECT contract                      contract,
             warehouse_id                  warehouse_id,
             bay_id                        bay_id,
             row_id                        row_id,
             storage_capability_id         storage_capability_id,
             Warehouse_Structure_Level_API.Decode('ROW') source,
             4                             sort,
             rowid                         objid,
             ltrim(lpad(to_char(rowversion,'YYYYMMDDHH24MISS'),2000))  objversion
      FROM  warehouse_row_capability_tab b
      WHERE removed = 'FALSE' 
      AND   EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE site = contract)
      UNION ALL
      SELECT a.contract                    contract,
             a.warehouse_id                warehouse_id,
             a.bay_id                      bay_id,
             row_id                        row_id,
             storage_capability_id         storage_capability_id,
             source                        source,
             sort                          sort,
             a.rowid                       objid,
             ltrim(lpad(to_char(a.rowversion,'YYYYMMDDHH24MISS'),2000))  objversion
      FROM   warehouse_bay_row_tab a, wh_bay_operative_cap b
      WHERE  a.contract     = b.contract
      AND    a.warehouse_id = b.warehouse_id
      AND    a.bay_id       = b.bay_id
      AND    NOT EXISTS (SELECT 1 FROM warehouse_row_capability_tab c
                 WHERE c.contract              = a.contract
                   AND c.warehouse_id          = a.warehouse_id
                   AND c.bay_id                = a.bay_id
                   AND c.row_id                = a.row_id
                   AND c.storage_capability_id = b.storage_capability_id)
      AND    EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE site = a.contract)
      ORDER BY sort, storage_capability_id);

VIEW Wh_Tier_Operative_Cap IS
   Prompt = 'Warehouse Tier Capability'
   Warehouse_Id.Ref = 'Warehouse(contract)'
   Bay_Id.Ref = 'WarehouseBay(contract,warehouse_id)'
   Tier_Id.Ref = 'WarehouseBayTier(contract,warehouse_id,bay_id)'
   Storage_Capability_Id.Flags = 'AMI--'
SELECT contract,
       warehouse_id,
       bay_id,
       tier_id,
       storage_capability_id,
       source,
       sort,
       objid,
       objversion
FROM  (SELECT contract                      contract,
              warehouse_id                  warehouse_id,
              bay_id                        bay_id,
              tier_id                       tier_id,
              storage_capability_id         storage_capability_id,
              Warehouse_Structure_Level_API.Decode('TIER') source,
              5                             sort,
              rowid                         objid,
              ltrim(lpad(to_char(rowversion,'YYYYMMDDHH24MISS'),2000))  objversion
       FROM  warehouse_tier_capability_tab b
       WHERE removed = 'FALSE'
       AND   EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE site = contract)
       UNION ALL
       SELECT a.contract                    contract,
              a.warehouse_id                warehouse_id,
              a.bay_id                      bay_id,
              tier_id                       tier_id,
              storage_capability_id         storage_capability_id,
              source                        source,
              sort                          sort,
              a.rowid                       objid,
              ltrim(lpad(to_char(a.rowversion,'YYYYMMDDHH24MISS'),2000))  objversion
        FROM  warehouse_bay_tier_tab a, wh_bay_operative_cap b
        WHERE a.contract     = b.contract
        AND   a.warehouse_id = b.warehouse_id
        AND   a.bay_id       = b.bay_id
        AND   NOT EXISTS (SELECT 1 FROM warehouse_tier_capability_tab c
                          WHERE  c.contract              = a.contract
                          AND    c.warehouse_id          = a.warehouse_id
                          AND    c.bay_id                = a.bay_id
                          AND    c.tier_id               = a.tier_id
                          AND    c.storage_capability_id = b.storage_capability_id)
        AND   EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE site = a.contract)                    
        ORDER BY sort, storage_capability_id);        

VIEW Wh_Bin_Operative_Cap IS
SELECT contract                        contract,
       warehouse_id                    warehouse_id,
       bay_id                          bay_id,
       row_id                          row_id,
       tier_id                         tier_id,
       bin_id                          bin_id,
       storage_capability_id           storage_capability_id,
       Warehouse_Structure_Level_API.Decode('BIN') source,
       6                               sort,
       rowid                           objid,
       ltrim(lpad(to_char(rowversion,'YYYYMMDDHH24MISS'),2000))  objversion
FROM warehouse_bin_capability_tab
WHERE removed = 'FALSE'
UNION ALL
SELECT a.contract                      contract,
       a.warehouse_id                  warehouse_id,
       a.bay_id                        bay_id,
       a.row_id                        row_id,
       tier_id                         tier_id,
       bin_id                          bin_id,
       storage_capability_id           storage_capability_id,
       source                          source,
       sort                            sort,
       a.rowid                         objid,
       ltrim(lpad(to_char(a.rowversion,'YYYYMMDDHH24MISS'),2000))  objversion
FROM warehouse_bay_bin_tab a, wh_bay_operative_cap b
WHERE a.contract     = b.contract
  AND a.warehouse_id = b.warehouse_id
  AND a.bay_id       = b.bay_id
  AND NOT EXISTS (SELECT 1 FROM warehouse_row_capability_tab c
                   WHERE c.contract              = a.contract
                     AND c.warehouse_id          = a.warehouse_id
                     AND c.bay_id                = a.bay_id
                     AND c.row_id                = a.row_id
                     AND c.storage_capability_id = b.storage_capability_id)
  AND NOT EXISTS (SELECT 1 FROM warehouse_tier_capability_tab d
                   WHERE d.contract              = a.contract
                     AND d.warehouse_id          = a.warehouse_id
                     AND d.bay_id                = a.bay_id
                     AND d.tier_id               = a.tier_id
                     AND d.storage_capability_id = b.storage_capability_id)
  AND NOT EXISTS (SELECT 1 FROM warehouse_bin_capability_tab e
                   WHERE e.contract              = a.contract
                     AND e.warehouse_id          = a.warehouse_id
                     AND e.bay_id                = a.bay_id
                     AND e.row_id                = a.row_id
                     AND e.tier_id               = a.tier_id
                     AND e.bin_id                = a.bin_id
                     AND e.storage_capability_id = b.storage_capability_id)
UNION ALL
SELECT a.contract                      contract,
       a.warehouse_id                  warehouse_id,
       a.bay_id                        bay_id,
       a.row_id                        row_id,
       tier_id                         tier_id,
       bin_id                          bin_id,
       storage_capability_id           storage_capability_id,
       Warehouse_Structure_Level_API.Decode('ROW') source,
       4                               sort,
       a.rowid                         objid,
       ltrim(lpad(to_char(a.rowversion,'YYYYMMDDHH24MISS'),2000))  objversion
FROM warehouse_bay_bin_tab a, warehouse_row_capability_tab b
WHERE a.contract     = b.contract
  AND a.warehouse_id = b.warehouse_id
  AND a.bay_id       = b.bay_id
  AND a.row_id       = b.row_id
  AND removed        = 'FALSE'
  AND NOT EXISTS (SELECT 1 FROM warehouse_bin_capability_tab c
                   WHERE c.contract              = a.contract
                     AND c.warehouse_id          = a.warehouse_id
                     AND c.bay_id                = a.bay_id
                     AND c.row_id                = a.row_id
                     AND c.tier_id               = a.tier_id
                     AND c.bin_id                = a.bin_id
                     AND c.storage_capability_id = b.storage_capability_id)
  AND NOT EXISTS (SELECT 1 FROM warehouse_tier_capability_tab d
                   WHERE d.contract              = a.contract
                     AND d.warehouse_id          = a.warehouse_id
                     AND d.bay_id                = a.bay_id
                     AND d.tier_id               = a.tier_id
                     AND d.storage_capability_id = b.storage_capability_id)
UNION ALL
SELECT a.contract                      contract,
       a.warehouse_id                  warehouse_id,
       a.bay_id                        bay_id,
       a.row_id                        row_id,
       a.tier_id                       tier_id,
       bin_id                          bin_id,
       storage_capability_id           storage_capability_id,
       Warehouse_Structure_Level_API.Decode('TIER') source,
       5                               sort,
       a.rowid                         objid,
       ltrim(lpad(to_char(a.rowversion,'YYYYMMDDHH24MISS'),2000))  objversion
FROM warehouse_bay_bin_tab a, warehouse_tier_capability_tab b
WHERE a.contract     = b.contract
  AND a.warehouse_id = b.warehouse_id
  AND a.bay_id       = b.bay_id
  AND a.tier_id      = b.tier_id
  AND removed        = 'FALSE'
  AND NOT EXISTS (SELECT 1 FROM warehouse_bin_capability_tab c
                   WHERE c.contract              = a.contract
                     AND c.warehouse_id          = a.warehouse_id
                     AND c.bay_id                = a.bay_id
                     AND c.row_id                = a.row_id
                     AND c.tier_id               = a.tier_id
                     AND c.bin_id                = a.bin_id
                     AND c.storage_capability_id = b.storage_capability_id)
  AND NOT EXISTS (SELECT 1 FROM warehouse_row_capability_tab d
                   WHERE d.contract              = a.contract
                     AND d.warehouse_id          = a.warehouse_id
                     AND d.bay_id                = a.bay_id
                     AND d.row_id                = a.row_id
                     AND d.storage_capability_id = b.storage_capability_id
                     AND removed                 = 'TRUE')
ORDER BY sort, storage_capability_id;

@SecurityCheck Site.UserAuthorized(wh_bin_operative_cap.contract)
VIEW Wh_Bin_Operative_Cap_Uiv IS
   Prompt = 'Warehouse Tier Capability'
   Warehouse_Id.Ref = 'Warehouse(contract)'
   Bay_Id.Ref = 'WarehouseBay(contract,warehouse_id)'
   Row_Id.Ref = 'WarehouseBayRow(contract,warehouse_id,bay_id)'
   Tier_Id.Ref = 'WarehouseBayTier(contract,warehouse_id,bay_id)'
   Storage_Capability_Id.Flags = 'AMI--'
SELECT contract                        contract,
       warehouse_id                    warehouse_id,
       bay_id                          bay_id,
       row_id                          row_id,
       tier_id                         tier_id,
       bin_id                          bin_id,
       storage_capability_id           storage_capability_id,
       source                          source,
       sort                            sort,
       objid                           objid,
       objversion                      objversion
FROM   WH_BIN_OPERATIVE_CAP;

