-----------------------------------------------------------------------------
--
--  Logical unit: InvPartAvailException
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

COLUMN Planner_Buyer IS
   Flags      = 'AM---'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Planner Buyer'
   Ref        = 'InventoryPartPlanner';

COLUMN Part_Product_Family IS
   Flags      = 'A----'
   Datatype   = 'STRING(5)'
   Prompt     = 'Part Product Family'
   Ref        = 'InventoryProductFamily';

COLUMN Part_Product_Code IS
   Flags      = 'A----'
   Datatype   = 'STRING(5)'
   Prompt     = 'Part Product Code'
   Ref        = 'InventoryProductCode';

COLUMN Second_Commodity IS
   Flags      = 'A----'
   Datatype   = 'STRING(5)'
   Prompt     = 'Second commodity'
   Ref        = 'CommodityGroup';

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------


-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

@SecurityCheck Site.UserAuthorized(ipae.contract)
VIEW Inv_Part_Avail_Exception_All IS
   Prompt = 'Inventory Part Availability Exception'
   Configuration_Id.Ref = 'InventoryPartConfig(contract,part_no)'
   Date_Created.Flags = 'AM---'
   Confirmed.Flags = 'AM-U-'
   Confirmed_By_User_Id.Datatype = 'STRING(30)'
SELECT ipae.contract                    contract,
       ipae.part_no                     part_no,
       ipae.configuration_id            configuration_id,
       ipae.exception_message           exception_message,
       ipae.exception_message_db        exception_message_db,
       ipae.project_id                  project_id,
       ipae.negative_onhand_date        negative_onhand_date,
       ipae.date_created                date_created,
       ipae.qty_onhand                  qty_onhand,
       ipae.qty_reserved                qty_reserved,
       ipae.qty_in_transit              qty_in_transit,
       ipae.total_qty_demand            total_qty_demand,
       ipae.total_qty_supply            total_qty_supply,
       ipae.note_text                   note_text,
       ipae.confirmed                   confirmed,
       ipae.confirmed_db                confirmed_db,
       ipae.date_confirmed              date_confirmed,
       ipae.confirmed_by_user_id        confirmed_by_user_id,
       ip.planner_buyer                 planner_buyer,
       ip.part_product_family           part_product_family,
       ip.part_product_code             part_product_code,
       ip.second_commodity              second_commodity,
       ip.unit_meas                     unit_meas,
       Inventory_Part_Type_API.Decode(ip.type_code_db) type_code,
       ip.manuf_leadtime                manuf_leadtime,
       ip.purch_leadtime                purch_leadtime,
       ip.part_status                   part_status,
       Inventory_Part_Supply_Type_API.Decode(ipp.order_requisition_db)   order_requisition,       
       ipp.planning_method              planning_method,
       ipp.safety_stock                 safety_stock,
       ipp.safety_lead_time             safety_lead_time,
       ipae.objid                       objid,
       ipae.objversion                  objversion,
       ipae.objkey                      objkey
FROM  INV_PART_AVAIL_EXCEPTION ipae, inventory_part_pub ip, INVENTORY_PART_PLANNING_PUB ipp
WHERE ipae.part_no  = ip.part_no
AND   ipae.contract = ip.contract
AND   ipae.part_no = ipp.part_no
AND   ipae.contract = ipp.contract;

