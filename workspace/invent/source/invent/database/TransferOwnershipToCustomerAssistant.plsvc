-----------------------------------------------------------------------------
--
--  Fragment:     TransferOwnershipToCustomerAssistant
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date        Sign    History
--  ---------   ------  ---------------------------------------------------------
--  2020-01-09  PAMMLK  MFSPRING20-381,Modified Transfer_To_Customer___ to add the ownership_transfer_reason_id.
--  2019-05-27  ChFolk  SCUXXW4-21762, Modified CRUD_Create___ to avoid concatenate variables in the cursor.
--  2018-11-24  ChFolk  SCUXXW4-5866, Added method Check_Receipt_Issue_Serial_Track_For_Cust_Trans___ to support defining serials for receipt issue serial track parts.
--  2018-10-01  ChFolk  SCUXXW4-5866, Created. Overried CRUD_Create___ and added method Transfer_To_Customer___.
---------------------------------------------------------------------------------

layer Core;

@Override
PROCEDURE CRUD_Create___(
   rec_ IN Transfer_Ownership_To_Customer_Virtual_Rec )
IS
   line_rec_                  Inventory_Part_In_Stock_Transfer_To_Customer_Virtual_Rec;
   
   CURSOR get_part_stock_info IS
      SELECT contract, part_no, configuration_id, location_no, lot_batch_no, serial_no, eng_chg_level, waiv_dev_rej_no, 
                    activity_seq, handling_unit_id, qty_onhand, qty_reserved, qty_in_transit, part_ownership_db, NVL(owning_customer_no, owning_vendor_no) owner,
                    warehouse, bay_no, row_no, tier_no, bin_no, location_type, availability_control_id, freeze_flag_db, expiration_date
      FROM   INVENTORY_PART_IN_STOCK
      WHERE  objid IN (SELECT REGEXP_SUBSTR(rec_.objid_list_arr,'[^,]+', 1, LEVEL) 
                       FROM dual
                       CONNECT BY REGEXP_SUBSTR(rec_.objid_list_arr, '[^,]+', 1, LEVEL) IS NOT NULL);
BEGIN  
   super(rec_);
   FOR part_stock_rec_ IN get_part_stock_info LOOP
      line_rec_.objkey        := sys_guid();
      line_rec_.parent_objkey := rec_.objkey;
      line_rec_.contract := part_stock_rec_.contract;
      line_rec_.part_no := part_stock_rec_.part_no;
      line_rec_.configuration_id := part_stock_rec_.configuration_id;
      line_rec_.location_no := part_stock_rec_.location_no;
      line_rec_.lot_batch_no := part_stock_rec_.lot_batch_no;
      line_rec_.serial_no := part_stock_rec_.serial_no;
      line_rec_.eng_chg_level := part_stock_rec_.eng_chg_level;
      line_rec_.waiv_dev_rej_no := part_stock_rec_.waiv_dev_rej_no;
      line_rec_.activity_seq := part_stock_rec_.activity_seq;
      line_rec_.handling_unit_id := part_stock_rec_.handling_unit_id;
      line_rec_.qty_onhand := part_stock_rec_.qty_onhand;
      line_rec_.qty_reserved := part_stock_rec_.qty_reserved;
      line_rec_.qty_in_transit := part_stock_rec_.qty_in_transit;
      line_rec_.part_ownership_db := part_stock_rec_.part_ownership_db;
      line_rec_.owner := part_stock_rec_.owner;
      line_rec_.warehouse := part_stock_rec_.warehouse;
      line_rec_.bay_no := part_stock_rec_.bay_no;
      line_rec_.row_no := part_stock_rec_.row_no;
      line_rec_.tier_no := part_stock_rec_.tier_no;
      line_rec_.bin_no := part_stock_rec_.bin_no;
      line_rec_.location_type := part_stock_rec_.location_type;
      line_rec_.availability_control_id := part_stock_rec_.availability_control_id;
      line_rec_.freeze_flag_db := part_stock_rec_.freeze_flag_db;
      line_rec_.expiration_date := part_stock_rec_.expiration_date;
      line_rec_.receipt_issue_serial_track_db := Part_Catalog_API.Serial_Trak_Only_Rece_Issue_Db(line_rec_.part_no);
      CRUD_Create___(line_rec_);
   END LOOP;

END CRUD_Create___;

FUNCTION Check_Receipt_Issue_Serial_Track_For_Cust_Trans___(
   parent_objkey_ IN VARCHAR2 )  RETURN Receipt_Issue_Serial_Track_For_Cust_Trans_Structure_Rec
IS
   parent_key_           Transfer_Ownership_To_Customer_Virtual_Key; 
   child_key_            Inventory_Part_In_Stock_Transfer_To_Customer_Virtual_Key;
   current_child_rec_    Inventory_Part_In_Stock_Transfer_To_Customer_Virtual_Rec;   
   serial_tract_rec_     Receipt_Issue_Serial_Track_For_Cust_Trans_Structure_Rec;
   rcpt_issue_ser_track_found_ BOOLEAN := FALSE;
BEGIN
   parent_key_.objkey := parent_objkey_;
   FOR child_rec_ IN Get_Inventory_Part_In_Stock_Transfer_To_Customer_Array___(parent_key_) LOOP
      child_key_.objkey := child_rec_.objkey;
      current_child_rec_ := Get_Record___(child_key_);         
      IF (current_child_rec_.receipt_issue_serial_track_db = 'TRUE') THEN
         IF (current_child_rec_.serial_no = '*' AND current_child_rec_.qty_onhand > 0) THEN
            IF (NOT rcpt_issue_ser_track_found_) THEN
               serial_tract_rec_.contract := current_child_rec_.contract; 
               serial_tract_rec_.part_no := current_child_rec_.part_no;
               serial_tract_rec_.configuration_id := current_child_rec_.configuration_id;
               serial_tract_rec_.location_no := current_child_rec_.location_no;
               serial_tract_rec_.lot_batch_no := current_child_rec_.lot_batch_no;
               serial_tract_rec_.eng_chg_level := current_child_rec_.eng_chg_level;
               serial_tract_rec_.waiv_dev_rej_no := current_child_rec_.waiv_dev_rej_no;
               serial_tract_rec_.activity_seq := current_child_rec_.activity_seq;
               serial_tract_rec_.handling_unit_id := current_child_rec_.handling_unit_id;
               serial_tract_rec_.qty_onhand := current_child_rec_.qty_onhand;
               serial_tract_rec_.rcpt_issue_ser_track_selection := 'SINGLE';
               rcpt_issue_ser_track_found_ := TRUE;
            ELSE
               serial_tract_rec_ := NULL;
               serial_tract_rec_.rcpt_issue_ser_track_selection := 'MULTIPLE'; 
            END IF;
         END IF;   
      END IF;
   END LOOP;
   RETURN serial_tract_rec_;
END Check_Receipt_Issue_Serial_Track_For_Cust_Trans___;

PROCEDURE Transfer_To_Customer___ (
   parent_objkey_            IN VARCHAR2,
   to_customer_              IN VARCHAR2,
   part_tracking_session_id_ IN NUMBER) 
IS
   parent_key_           Transfer_Ownership_To_Customer_Virtual_Key;
   parent_rec_           Transfer_Ownership_To_Customer_Virtual_Rec;
   child_key_            Inventory_Part_In_Stock_Transfer_To_Customer_Virtual_Key;
   current_child_rec_    Inventory_Part_In_Stock_Transfer_To_Customer_Virtual_Rec; 
   msg_clob_             CLOB;
   dummy_param1_         VARCHAR2(2000);
BEGIN
   parent_key_.objkey := parent_objkey_;
   parent_rec_ := Get_Record___(parent_key_); 
   Message_SYS.Add_Attribute(msg_clob_, 'PACK_START', 'TRUE');
   FOR child_rec_ IN Get_Inventory_Part_In_Stock_Transfer_To_Customer_Array___(parent_key_) LOOP
      child_key_.objkey := child_rec_.objkey;
      current_child_rec_ := Get_Record___(child_key_);             
      -- Security
      User_Allowed_Site_API.Is_Authorized(current_child_rec_.contract);       
      Message_SYS.Add_Attribute(msg_clob_, 'TO_CUSTOMER', to_customer_);
      Message_SYS.Add_Attribute(msg_clob_, 'CONTRACT', current_child_rec_.contract);
      Message_SYS.Add_Attribute(msg_clob_, 'PART_NO', current_child_rec_.part_no);
      Message_SYS.Add_Attribute(msg_clob_, 'CONFIGURATION_ID', current_child_rec_.configuration_id);
      Message_SYS.Add_Attribute(msg_clob_, 'LOCATION_NO', current_child_rec_.location_no);
      Message_SYS.Add_Attribute(msg_clob_, 'LOT_BATCH_NO', current_child_rec_.lot_batch_no);
      Message_SYS.Add_Attribute(msg_clob_, 'SERIAL_NO', current_child_rec_.serial_no);
      Message_SYS.Add_Attribute(msg_clob_, 'ENG_CHG_LEVEL', current_child_rec_.eng_chg_level);
      Message_SYS.Add_Attribute(msg_clob_, 'WAIV_DEV_REJ_NO', current_child_rec_.waiv_dev_rej_no);
      Message_SYS.Add_Attribute(msg_clob_, 'ACTIVITY_SEQ', current_child_rec_.activity_seq);
      Message_SYS.Add_Attribute(msg_clob_, 'HANDLING_UNIT_ID', current_child_rec_.handling_unit_id);
      Message_SYS.Add_Attribute(msg_clob_, 'PART_OWNERSHIP_DB', current_child_rec_.part_ownership_db);
      Message_SYS.Add_Attribute(msg_clob_, 'OWNER', current_child_rec_.owner);
      Message_SYS.Add_Attribute(msg_clob_, 'PART_TRACKING_SESSION_ID', part_tracking_session_id_);
      Message_SYS.Add_Attribute(msg_clob_, 'QTY_ON_HAND', current_child_rec_.qty_onhand);
      Message_SYS.Add_Attribute(msg_clob_, 'OWNERSHIP_TRANSFER_REASON_ID', parent_rec_.ownership_transfer_reason_id);
   END LOOP;
   Message_SYS.Add_Attribute(msg_clob_, 'PACK_COMPLETE', 'TRUE');
   IF (msg_clob_ IS NOT NULL) THEN
      Inv_Part_Ownership_Manager_API.Packed_Transfer_Cust_To_Cust__(dummy_param1_, '', msg_clob_);      
   END IF;
END Transfer_To_Customer___;
