-----------------------------------------------------------------------------
--
--  Fragment:     RepeatableDefineCostStructureAssistant
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  190318  RakAlk  MFUXXW4-14942, Created.
-----------------------------------------------------------------------------

layer Core;


FUNCTION Get_Repeatable_Define_Cost_Structure_Initial_Values___(   
   parameter_list_ IN VARCHAR2,
   calling_process_ IN VARCHAR2 )  RETURN Repeatable_Define_Cost_Structure_Initial_Values_Structure_Rec
IS
   rec_                 Repeatable_Define_Cost_Structure_Initial_Values_Structure_Rec;
   this_parameter_list_ VARCHAR2(32000);
   defaults_rec_        Define_Cost_Structure_Initial_Values_Structure_Rec;
BEGIN
   rec_.next_parameter_list := parameter_list_;
   Get_Next_Parameters_From_List(rec_.next_parameter_list,this_parameter_list_);
   
   IF this_parameter_list_ IS NULL THEN
      Error_SYS.Record_General(lu_name_,'NULLPARAMETERS: Parameters are not provided.'); -- This cant happen
   END IF;   
   
   rec_.caller_objkey      := Client_SYS.Get_Key_Reference_Value(this_parameter_list_, 'OBJKEY');
   rec_.contract           := Client_SYS.Get_Key_Reference_Value(this_parameter_list_, 'CONTRACT');
   rec_.part_no            := Client_SYS.Get_Key_Reference_Value(this_parameter_list_, 'PART_NO');
   rec_.configuration_id   := Client_SYS.Get_Key_Reference_Value(this_parameter_list_, 'CONFIGURATION_ID');
   rec_.lot_batch_no       := Client_SYS.Get_Key_Reference_Value(this_parameter_list_, 'LOT_BATCH_NO');
   rec_.serial_no          := Client_SYS.Get_Key_Reference_Value(this_parameter_list_, 'SERIAL_NO');
   rec_.condition_code     := Client_SYS.Get_Key_Reference_Value(this_parameter_list_, 'CONDITION_CODE');   
   rec_.cost_detail_id     := Client_SYS.Get_Key_Reference_Value(this_parameter_list_, 'COST_DETAIL_ID');   
   
   defaults_rec_ := Get_Define_Cost_Structure_Initial_Values___(rec_.contract,
                                                                rec_.part_no,
                                                                rec_.serial_no,
                                                                rec_.condition_code,
                                                                calling_process_,
                                                                rec_.cost_detail_id);
                                                                
   rec_.part_description               := defaults_rec_.part_description;
   rec_.condition_code                 := defaults_rec_.condition_code;
   rec_.condition_code_description     := defaults_rec_.condition_code_description;
   rec_.cost_module_installed          := defaults_rec_.cost_module_installed;
   rec_.serial_label                   := defaults_rec_.serial_label;
   rec_.cost_detail_id                 := defaults_rec_.cost_detail_id;
   rec_.company                        := defaults_rec_.company;
   rec_.shop_order_receipt             := defaults_rec_.shop_order_receipt;
   rec_.generate_automatically         := defaults_rec_.generate_automatically;
   rec_.populate_with_cost_detail_id   := defaults_rec_.populate_with_cost_detail_id;
   rec_.create_new_line                := defaults_rec_.create_new_line;                                                                
   RETURN rec_;
END Get_Repeatable_Define_Cost_Structure_Initial_Values___;

PROCEDURE Define_Cost_Structure_Go_To_Next_Record___ (
   objkey_ IN VARCHAR2 ) 
IS   
   key_    Define_Cost_Structure_Virtual_Key;
   oldrec_ Define_Cost_Structure_Virtual_Rec;
   newrec_ Define_Cost_Structure_Virtual_Rec;
   
   defaults_rec_ Repeatable_Define_Cost_Structure_Initial_Values_Structure_Rec;
BEGIN
   
   
   key_.objkey := objkey_;
   oldrec_     := Get_Record___(key_);
   newrec_     := oldrec_;
   
   newrec_.cost_detail_id := NULL;
   defaults_rec_ := Get_Repeatable_Define_Cost_Structure_Initial_Values___(newrec_.next_parameter_list,newrec_.calling_process);
   
   Remove_Existing_Records___(objkey_);
   
   newrec_.cost_detail_id_list            := newrec_.cost_detail_id_list || 'OBJKEY=' || newrec_.caller_objkey || '^COST_DETAIL_ID=' || newrec_.cost_detail_id || '^,';
   newrec_.next_parameter_list            := defaults_rec_.next_parameter_list;
   newrec_.cost                           := NULL;
   newrec_.caller_objkey                  := defaults_rec_.caller_objkey;
   newrec_.contract                       := defaults_rec_.contract;
   newrec_.part_no                        := defaults_rec_.part_no;
   newrec_.configuration_id               := defaults_rec_.configuration_id;
   newrec_.lot_batch_no                   := defaults_rec_.lot_batch_no;
   newrec_.serial_no                      := defaults_rec_.serial_no;
   
   newrec_.part_description               := defaults_rec_.part_description;
   newrec_.condition_code                 := defaults_rec_.condition_code;
   newrec_.condition_code_description     := defaults_rec_.condition_code_description;
   newrec_.cost_module_installed          := defaults_rec_.cost_module_installed;
   newrec_.serial_label                   := defaults_rec_.serial_label;
   newrec_.cost_detail_id                 := defaults_rec_.cost_detail_id;
   newrec_.company                        := defaults_rec_.company;
   newrec_.shop_order_receipt             := defaults_rec_.shop_order_receipt;
   newrec_.generate_automatically         := defaults_rec_.generate_automatically;
   newrec_.populate_with_cost_detail_id   := defaults_rec_.populate_with_cost_detail_id;
   newrec_.create_new_line                := defaults_rec_.create_new_line;   
   
   Initialize_New_Rec___(newrec_);   
   CRUD_Update___(oldrec_,newrec_);
END Define_Cost_Structure_Go_To_Next_Record___;


PROCEDURE Get_Next_Parameters_From_List (
   attr_  IN OUT VARCHAR2,   
   value_ IN OUT NOCOPY VARCHAR2 )
IS
   from_  NUMBER;
   to_    NUMBER;
BEGIN   
   to_   := instr(attr_, '^,');
   IF (to_ > 0) THEN
      value_ := substr(attr_, 1, to_);
      from_  := to_+2;
      IF from_ <= length(attr_) THEN          
         attr_  := substr(attr_, from_);
      ELSE
         attr_ := NULL;
      END IF;
   ELSE
      value_ := NULL;
   END IF;
   
END Get_Next_Parameters_From_List;


PROCEDURE Remove_All_Details___ (
   objkey_ IN VARCHAR2 ) 
IS
   key_                 Define_Cost_Structure_Virtual_Key;
   rec_                 Define_Cost_Structure_Virtual_Rec;
   cost_detail_id_str_  VARCHAR2(4000);
   cost_detail_id_      NUMBER;
BEGIN
   key_.objkey := objkey_;
   rec_        := Get_Record___(key_);
   Remove_Details___(rec_.cost_detail_id);
   
   LOOP
      Get_Next_Parameters_From_List(rec_.cost_detail_id_list,cost_detail_id_str_);
      IF cost_detail_id_str_ IS NULL THEN
         EXIT;
      END IF;
      cost_detail_id_  := to_number(Client_SYS.Get_Key_Reference_Value(cost_detail_id_str_, 'COST_DETAIL_ID'));   
      Remove_Details___(cost_detail_id_);
   END LOOP;
END Remove_All_Details___;
