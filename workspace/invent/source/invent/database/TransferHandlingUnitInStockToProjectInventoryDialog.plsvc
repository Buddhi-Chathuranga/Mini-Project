-----------------------------------------------------------------------------
--
--  Fragment:     TransferHandlingUnitInStockToProjectInventoryDialog
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date        Sign    History
--  ---------  ------  ---------------------------------------------------------
-- 2019-06-27  ChFolk  SCUXXW4-18710, Modified Transfer_Hu_To_Project_Inventory___ to move Transfer_To_Proj_Inventory into the loop.
-- 2019-03-14  ChFolk  SCUXXW4-17203, Added dynamic dependency where necessary and removed some functions which could be handled
-- 2019-03-14          from the method declaration in Projection in where clause.
-- 2018-10-10  ChFolk  SCUXXW4-5846, Created.
--------------------------------------------------------------------------------

layer Core;

FUNCTION Record_Separated_Hu_List___ (
  selected_handling_units_ IN VARCHAR2 ) RETURN VARCHAR2
IS
   local_handling_unit_list_ VARCHAR2(32000):= CONCAT(selected_handling_units_, ',');
   handling_unit_id_list_    VARCHAR2(32000);
   separator_position_       NUMBER;  
BEGIN   
   WHILE (local_handling_unit_list_ IS NOT NULL) LOOP
      separator_position_ := instr(local_handling_unit_list_, ',');
      IF (separator_position_ > 0) THEN
         IF (handling_unit_id_list_ IS NULL) THEN
            handling_unit_id_list_ := substr(local_handling_unit_list_, 1, separator_position_ - 1);
            local_handling_unit_list_ := substr(local_handling_unit_list_, separator_position_ + 1);
         ELSE
            handling_unit_id_list_ := handling_unit_id_list_ || Client_SYS.record_separator_ || substr(local_handling_unit_list_, 1, separator_position_ - 1);
            local_handling_unit_list_ := substr(local_handling_unit_list_, separator_position_ + 1);
         END IF;
      END IF;
   END LOOP;
   RETURN handling_unit_id_list_;
END Record_Separated_Hu_List___;

PROCEDURE Transfer_Hu_To_Project_Inventory___ (
   selected_handling_units_ IN VARCHAR2,          
   activity_seq_            IN NUMBER,
   note_                    IN VARCHAR2,
   report_earned_values_    IN VARCHAR2 ) 
IS
   handling_unit_id_list_  VARCHAR2(32000);
   to_activity_seq_        VARCHAR2(200);
   handling_unit_id_tab_   Handling_Unit_API.Handling_Unit_Id_Tab;
BEGIN
   to_activity_seq_ := TO_CHAR(activity_seq_);
   handling_unit_id_list_ := Record_Separated_Hu_List___(selected_handling_units_);   
   -- Security
   handling_unit_id_tab_ := Handling_Unit_API.Get_Handling_Unit_Id_Tab(handling_unit_id_list_);
   IF (handling_unit_id_tab_.COUNT > 0) THEN
      FOR i IN handling_unit_id_tab_.FIRST..handling_unit_id_tab_.LAST LOOP   
         Handling_Unit_Extended_Initial_Check___(handling_unit_id_tab_(i).handling_unit_id);
         Handling_Unit_API.Transfer_To_Proj_Inventory(handling_unit_id_tab_(i).handling_unit_id,
                                                      to_activity_seq_,
                                                      note_,
                                                      report_earned_values_);
      END LOOP;
   END IF;

END Transfer_Hu_To_Project_Inventory___;

@DynamicComponentDependency PROJ
FUNCTION Get_Program_Id_Hu___ (
   project_id_ IN VARCHAR2 ) RETURN VARCHAR2
IS
   program_id_   VARCHAR2(10);
BEGIN
   program_id_ := Project_API.Get_Program_Id(project_id_);  
   RETURN program_id_; 
END  Get_Program_Id_Hu___;

