-----------------------------------------------------------------------------
--
--  Logical unit: ReceiveFromTransit
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date        Sign    History
--  ---------   ------  ---------------------------------------------------------
--  2019-07-26  ChFolk  SCUXXW4-22798, Removed methods Get_Part_Description___ and Get_Availability_Ctrl_Desc___ as they are supported from the reference in the client. 
--  2019-05-04  ChFolk  SCUXXW4-17954, Removed Overtaken CRUD_Update___ and Receive_Part_From_Transit_Update___.
--  2018-05-02  ChFolk  SCUXXW4-7227, Added methods Get_Part_Description___ and Get_Availability_Ctrl_Desc___.
----------------------------------------------------------------------------------

layer Core;

PROCEDURE Receive_Part_From_Transit_Update___ (
   key_                IN  Inventory_Part_In_Stock_Key,
   qty_received_       IN  NUMBER,
   catch_qty_received_ IN  NUMBER,
   info$_              OUT VARCHAR2 ) 
IS
   unattached_from_hu_  VARCHAR2(5);
   out_info_            VARCHAR2(32000);
BEGIN
   Inventory_Part_In_Stock_API.Receive_Part_From_Transit(unattached_from_hu_,
                                                         out_info_,
                                                         key_.contract,
                                                         key_.part_no,
                                                         key_.configuration_id,
                                                         key_.location_no,
                                                         key_.lot_batch_no,
                                                         key_.serial_no,
                                                         key_.eng_chg_level,
                                                         key_.waiv_dev_rej_no,
                                                         key_.activity_seq,
                                                         key_.handling_unit_id,
                                                         qty_received_,
                                                         catch_qty_received_);
   IF ((Mpccom_System_Parameter_API.Get_Parameter_Value1('SHORTAGE_HANDLING') = 'Y') AND
      (Inventory_Part_API.Get_Shortage_Flag(key_.contract, key_.part_no) = Inventory_Part_Shortage_API.Get_Client_Value(0)) AND
      (Shortage_Demand_API.Shortage(key_.contract, key_.part_no) = 1)) THEN
      Client_SYS.Add_Info(lu_name_,'PART_SHORTAGE: There are shortages for part :P1.', key_.part_no);
   END IF;   
   IF (unattached_from_hu_ = 'TRUE') THEN
      Client_SYS.Add_Info(lu_name_,'UNATTACHED_HU: One or more records were unattached from a Handling Unit.');
   END IF; 
   info$_ := out_info_ || Client_SYS.Get_All_Info;
END Receive_Part_From_Transit_Update___;

FUNCTION Get_Report_Result_Key_List___ (
   selected_key_list_  IN VARCHAR2 ) RETURN VARCHAR2
IS
   selection_         VARCHAR2(32000) := CONCAT(selected_key_list_, ';');
   parameter_attr_    VARCHAR2(32000);
   report_attr_       VARCHAR2(1000);  
   result_key_        NUMBER;
   result_key_list_   VARCHAR2(5000);
   end_user_  VARCHAR2(200) := Fnd_Session_API.Get_Fnd_User;
   part_no_           VARCHAR2(25);
   serial_no_         VARCHAR2(50);
   lot_batch_no_      VARCHAR2(20);
   
BEGIN   
   WHILE (INSTR(selection_, ';') > 0) LOOP      
      Client_SYS.Clear_attr(parameter_attr_);
      part_no_ := Client_SYS.Get_Key_Reference_Value(selection_, 'PART_NO');
      serial_no_ := Client_SYS.Get_Key_Reference_Value(selection_, 'SERIAL_NO');
      lot_batch_no_ := Client_SYS.Get_Key_Reference_Value(selection_, 'LOT_BATCH_NO');      
      Client_SYS.Add_To_Attr('PART_NO', part_no_,   parameter_attr_);
      Client_SYS.Add_To_Attr('CONTRACT', Client_SYS.Get_Key_Reference_Value(selection_, 'CONTRACT'),   parameter_attr_);
      Client_SYS.Add_To_Attr('SERIAL_NO', serial_no_,   parameter_attr_);     
      Client_SYS.Add_To_Attr('LOT_BATCH_NO', lot_batch_no_,   parameter_attr_);
      Client_SYS.Add_To_Attr('CONDITION_CODE', Condition_Code_Manager_API.Get_Condition_Code(part_no_, serial_no_, lot_batch_no_),   parameter_attr_);
      Client_SYS.Clear_Attr(report_attr_);
      Client_SYS.Add_To_Attr('REPORT_ID', 'IN_PRT_COND_TAG_REP', report_attr_);
      User_Allowed_Site_API.Is_Authorized(Client_SYS.Get_Key_Reference_Value(selection_, 'CONTRACT')); 
      result_key_ := Report_Format_API.Create_New_Report(report_attr_, parameter_attr_, end_user_);
          
      IF (result_key_list_ IS NULL) THEN
         result_key_list_ := result_key_;
      ELSE
         result_key_list_ := result_key_list_ || ',' || result_key_;
      END IF;
      selection_ := SUBSTR(selection_, (INSTR(selection_, ';') + 1));
   END LOOP;   
   RETURN result_key_list_;
END Get_Report_Result_Key_List___;
