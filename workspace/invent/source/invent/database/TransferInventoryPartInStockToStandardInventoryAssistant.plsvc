-----------------------------------------------------------------------------
--
--  Fragment:     TransferInventoryPartInStockToStandardInventoryAssistant
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date       Sign    History
--  ---------  ------  ---------------------------------------------------------
-- 2019-05-27  ChFolk  SCUXXW4-21762, Modified CRUD_Create___ to avoid concatenate variables in the cursor.
-- 2018-10-10  ChFolk  SCUXXW4-5881, Renamed the virtuals to avoid lengthy names.
-- 2018-10-03  ChFolk  SCUXXW4-5881, Created.
-----------------------------------------------------------------------------

layer Core;

@Override
PROCEDURE CRUD_Create___(
   rec_ IN Transfer_To_Std_Inv_Virtual_Rec )
IS
   line_rec_           Stock_To_Std_Inv_Virtual_Rec;
     
   CURSOR get_part_stock_info IS
      SELECT contract, part_no, configuration_id, location_no, lot_batch_no, serial_no, eng_chg_level, waiv_dev_rej_no, 
             activity_seq, handling_unit_id, qty_onhand, (qty_onhand - qty_reserved) qty_to_transfer, qty_reserved, qty_in_transit,
             warehouse, bay_no, row_no, tier_no, bin_no, location_type_db, availability_control_id, freeze_flag_db, project_id,
             expiration_date, last_activity_date, last_count_date, receipt_date
      FROM   INVENTORY_PART_IN_STOCK
      WHERE  objid IN (SELECT REGEXP_SUBSTR(rec_.objid_list_arr,'[^,]+', 1, LEVEL) 
                       FROM dual
                       CONNECT BY REGEXP_SUBSTR(rec_.objid_list_arr, '[^,]+', 1, LEVEL) IS NOT NULL);
BEGIN
   super(rec_);
   
   FOR part_stock_rec_ IN get_part_stock_info LOOP
      line_rec_.objkey        := sys_guid();
      line_rec_.parent_objkey := rec_.objkey;
      line_rec_.contract := part_stock_rec_.contract;
      line_rec_.part_no := part_stock_rec_.part_no;
      line_rec_.configuration_id := part_stock_rec_.configuration_id;
      line_rec_.location_no := part_stock_rec_.location_no;
      line_rec_.lot_batch_no := part_stock_rec_.lot_batch_no;
      line_rec_.serial_no := part_stock_rec_.serial_no;
      line_rec_.eng_chg_level := part_stock_rec_.eng_chg_level;
      line_rec_.waiv_dev_rej_no := part_stock_rec_.waiv_dev_rej_no;
      line_rec_.activity_seq := part_stock_rec_.activity_seq;
      line_rec_.handling_unit_id := part_stock_rec_.handling_unit_id;
      line_rec_.qty_onhand := part_stock_rec_.qty_onhand;
      line_rec_.qty_to_transfer := part_stock_rec_.qty_to_transfer;
      line_rec_.qty_reserved := part_stock_rec_.qty_reserved;
      line_rec_.qty_in_transit := part_stock_rec_.qty_in_transit;
      line_rec_.warehouse := part_stock_rec_.warehouse;
      line_rec_.bay_no := part_stock_rec_.bay_no;
      line_rec_.row_no := part_stock_rec_.row_no;
      line_rec_.tier_no := part_stock_rec_.tier_no;
      line_rec_.bin_no := part_stock_rec_.bin_no;
      line_rec_.location_type := part_stock_rec_.location_type_db;
      line_rec_.availability_control_id := part_stock_rec_.availability_control_id;
      line_rec_.freeze_flag_db := part_stock_rec_.freeze_flag_db;
      line_rec_.project_id := part_stock_rec_.project_id;
      line_rec_.expiration_date := part_stock_rec_.expiration_date;
      line_rec_.last_activity_date := part_stock_rec_.last_activity_date;
      line_rec_.last_count_date := part_stock_rec_.last_count_date;
      line_rec_.receipt_date := part_stock_rec_.receipt_date;

      CRUD_Create___(line_rec_);
   END LOOP;
 
END CRUD_Create___;

PROCEDURE Execute_Moving_Stocks_To_Standard_Inventory___ (
   parent_objkey_        IN VARCHAR2,
   note_                 IN VARCHAR2,
   report_earned_values_ IN VARCHAR2 ) 
IS
   parent_key_                Transfer_To_Std_Inv_Virtual_Key;
   parent_rec_                Transfer_To_Std_Inv_Virtual_Rec; 
   child_key_                 Stock_To_Std_Inv_Virtual_Key;
   child_rec_                 Stock_To_Std_Inv_Virtual_Rec;
BEGIN
   parent_key_.objkey := parent_objkey_;
   parent_rec_ := Get_Record___(parent_key_);
   FOR line_rec_ IN Get_Transfer_To_Std_Inv_Array___(parent_key_) LOOP
      child_key_.objkey := line_rec_.objkey;
      child_rec_ := Get_Record___(child_key_);
      -- Security
      User_Allowed_Site_API.Is_Authorized(child_rec_.contract); 
      
      Inventory_Part_In_Stock_API.Move_Part_Project(child_rec_.contract,
                                                    child_rec_.part_no,
                                                    child_rec_.configuration_id,
                                                    child_rec_.location_no,
                                                    child_rec_.lot_batch_no,
                                                    child_rec_.serial_no,
                                                    child_rec_.eng_chg_level,
                                                    child_rec_.waiv_dev_rej_no,
                                                    child_rec_.activity_seq,
                                                    child_rec_.handling_unit_id,
                                                    child_rec_.expiration_date,
                                                    0,
                                                    child_rec_.qty_to_transfer,
                                                    0,
                                                    note_,
                                                    report_earned_values_,
                                                    parent_rec_.ownership_transfer_reason_id,
                                                    child_rec_.catch_qty);  
   END LOOP;  
END Execute_Moving_Stocks_To_Standard_Inventory___;


FUNCTION Check_System_Parameters___ RETURN VARCHAR2
IS
   
BEGIN
   RETURN MPCCOM_SYSTEM_PARAMETER_API.Get_Parameter_Value1('TRANSACTIONS_PROJECT_TRANSFERS');
END Check_System_Parameters___;
