-----------------------------------------------------------------------------
--
--  Fragment:     NewPartAssistantInvent
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date        Sign    History
--  ---------   ------  -------------------------------------------------------------------------
--  2019-01-23  AwWelk  SCUXXW4-1699, Created to handled the New Part Wizard functionality in IFSEE.
-------------------------------------------------------------------------------------------------

layer Core;


PROCEDURE Create_Inventory_Part___ (
   contract_                   IN VARCHAR2,
   part_no_                    IN VARCHAR2,
   description_                IN VARCHAR2,
   accounting_group_           IN VARCHAR2,
   part_product_code_          IN VARCHAR2,
   part_product_family_        IN VARCHAR2,
   planner_buyer_              IN VARCHAR2,
   prime_commodity_            IN VARCHAR2,
   second_commodity_           IN VARCHAR2,
   inventory_unit_meas_        IN VARCHAR2,
   catch_unit_meas_            IN VARCHAR2,
   type_code_                  IN VARCHAR2,
   zero_cost_level_            IN VARCHAR2,
   inventory_part_cost_level_  IN VARCHAR2,
   inventory_valuation_method_ IN VARCHAR2,
   negative_on_hand_allowed_   IN VARCHAR2,
   estimated_material_cost_    IN NUMBER)
IS
   attr_    VARCHAR2(32000);
   dummy_   VARCHAR2(32000);
BEGIN
   Client_SYS.Clear_Attr(attr_);
   Client_SYS.Add_To_Attr('CONTRACT', contract_, attr_);
   Client_SYS.Add_To_Attr('PART_NO', part_no_, attr_);
   Client_SYS.Add_To_Attr('DESCRIPTION', description_, attr_);
   Client_SYS.Add_To_Attr('ACCOUNTING_GROUP', accounting_group_, attr_);
   Client_SYS.Add_To_Attr('PART_PRODUCT_CODE', part_product_code_, attr_);
   Client_SYS.Add_To_Attr('PART_PRODUCT_FAMILY', part_product_family_, attr_);
   Client_SYS.Add_To_Attr('PLANNER_BUYER', planner_buyer_, attr_);
   Client_SYS.Add_To_Attr('PRIME_COMMODITY', prime_commodity_, attr_);
   Client_SYS.Add_To_Attr('SECOND_COMMODITY', second_commodity_, attr_);
   Client_SYS.Add_To_Attr('UNIT_MEAS', inventory_unit_meas_, attr_);
   Client_SYS.Add_To_Attr('CATCH_UNIT_MEAS', catch_unit_meas_, attr_);
   Client_SYS.Add_To_Attr('TYPE_CODE_DB', type_code_, attr_);
   Client_SYS.Add_To_Attr('ZERO_COST_FLAG_DB', zero_cost_level_, attr_);
   IF inventory_part_cost_level_ IS NOT NULL THEN 
      Client_SYS.Add_To_Attr('INVENTORY_PART_COST_LEVEL_DB', inventory_part_cost_level_, attr_);
   END IF;
   IF inventory_valuation_method_ IS NOT NULL THEN 
      Client_SYS.Add_To_Attr('INVENTORY_VALUATION_METHOD_DB', inventory_valuation_method_, attr_);
   END IF;
   Client_SYS.Add_To_Attr('NEGATIVE_ON_HAND_DB', negative_on_hand_allowed_, attr_);
   Client_SYS.Add_To_Attr('ESTIMATED_MATERIAL_COST', estimated_material_cost_, attr_);
   
   Inventory_Part_API.New__(dummy_, dummy_, dummy_, attr_, 'DO');
END Create_Inventory_Part___;
