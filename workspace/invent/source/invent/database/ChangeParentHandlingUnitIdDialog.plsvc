-----------------------------------------------------------------------------
--
--  Fragment:     ChangeParentHandlingUnitIdDialog
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  190527  ChFolk  SCUXXW4-21153, Removed functions Get_Handling_Units___, Get_Handling_Units_With_Sscc___ and Get_Handling_Units_With_Alt_Handling_Unit_Label_Id___
--  190527          as that could be handled from the function in the projection.
--  181011  fandse  SCUXXW4-13392 Add handling of info message for GetMaxCapacityExceededInfo
--  181010  fandse  SCUXXW4-5174  Code review feedback -> renamed ChangeParentHandlingUnitDialogInit to InitChangeParentHandlingUnitDialog
--  180927  fandse  SCUXXW4-5174  added dialog-name to avoid conflicts when merged in to client and projections, find common shipment ID, Location and Contract.
--  180924  fandse  SCUXXW4-5174  added dialog converted from dlgChangeParentHandlingUnit - Change Parent Handling Unit ID
-----------------------------------------------------------------------------

layer Core;

FUNCTION Init_Change_Parent_Handling_Unit_Dialog___ (
   selection_ IN VARCHAR2 ) RETURN Init_Change_Parent_Handling_Unit_Dialog_Structure_Rec
IS
   selection_in_                  VARCHAR2(32000) := CONCAT(selection_, ';');
   current_selection_             VARCHAR2(32000);
   handling_unit_ids_to_exclude_  VARCHAR2(32000) := NULL;
   handling_unit_id_              NUMBER;
   prev_parent_handling_unit_id_  NUMBER;
   parent_handling_unit_id_       NUMBER;
   count_                         NUMBER := 1;
   contract_                      VARCHAR2(5);
   prev_contract_                 VARCHAR2(5);    
   location_no_                   VARCHAR2(35);
   prev_location_no_              VARCHAR2(35);
   shipment_id_                   NUMBER;
   prev_shipment_id_              NUMBER;
   handling_unit_id_list_         VARCHAR2(32000) := NULL;

   rec_                           Init_Change_Parent_Handling_Unit_Dialog_Structure_Rec;
   CURSOR get_handling_unit_info IS 
      SELECT parent_handling_unit_id, contract, location_no, shipment_id
      FROM HANDLING_UNIT_TAB
      WHERE handling_unit_id = handling_unit_id_;
BEGIN
   WHILE (INSTR(selection_in_, ';') > 0) LOOP
      current_selection_   := substr(selection_in_, 0, INSTR(selection_in_, ';'));
      handling_unit_id_    := Client_SYS.Get_Key_Reference_Value(current_selection_, 'HANDLING_UNIT_ID');
      selection_in_        := substr(selection_in_, INSTR(selection_in_, ';')+1);

      IF (handling_unit_ids_to_exclude_ IS NULL) THEN
         handling_unit_ids_to_exclude_ := handling_unit_id_;
      ELSE 
         handling_unit_ids_to_exclude_ := handling_unit_ids_to_exclude_||','||handling_unit_id_;
      END IF;

      OPEN get_handling_unit_info;
      FETCH get_handling_unit_info INTO parent_handling_unit_id_, contract_, location_no_, shipment_id_;
      CLOSE get_handling_unit_info;
      IF (count_ = 1) THEN
         prev_parent_handling_unit_id_ := parent_handling_unit_id_;
         prev_contract_ := contract_;
         prev_location_no_ := location_no_;
         prev_shipment_id_ := shipment_id_;
      ELSE
         IF (nvl(prev_parent_handling_unit_id_,0) != nvl(parent_handling_unit_id_,0)) THEN
            parent_handling_unit_id_ := NULL;
         END IF;
         IF (nvl(prev_contract_,'*') != nvl(contract_,'*')) THEN
            contract_ := NULL;
         END IF;
         IF (nvl(prev_location_no_,'*') != nvl(location_no_,'*')) THEN
            location_no_ := NULL;
         END IF;
         IF (nvl(prev_shipment_id_,0) != nvl(shipment_id_,0)) THEN
            shipment_id_ := NULL;
         END IF;
      END IF;
      count_ := count_ + 1;
   handling_unit_id_list_ := handling_unit_id_list_||handling_unit_id_||Client_SYS.record_separator_;
   END LOOP;
   rec_.handling_unit_ids_to_exclude := handling_unit_ids_to_exclude_;
   rec_.parent_handling_unit_id := parent_handling_unit_id_;
   rec_.contract := contract_;
   rec_.location_no := location_no_;
   rec_.shipment_id := nvl(shipment_id_,0);
   rec_.handling_unit_id_list := handling_unit_id_list_;
   RETURN rec_;
END Init_Change_Parent_Handling_Unit_Dialog___;


FUNCTION Has_Any_Parent_At_Any_Level___ (
   handling_unit_id_list_     IN VARCHAR2) RETURN VARCHAR2
IS    
BEGIN   
      RETURN Handling_Unit_API.Has_Any_Parent_At_Any_Level(handling_unit_id_list_ => handling_unit_id_list_);
END Has_Any_Parent_At_Any_Level___;


PROCEDURE Get_Max_Capacity_Exceeded_Info___ (
   handling_unit_id_          IN NUMBER,
   info$_                     OUT VARCHAR2)
IS    
BEGIN   
      info$_ := Handling_Unit_API.Get_Max_Capacity_Exceeded_Info(handling_unit_id_);
END Get_Max_Capacity_Exceeded_Info___;


PROCEDURE Modify_Parent_Handling_Unit_Id___ (
   handling_unit_id_list_        IN VARCHAR2,
   parent_handling_unit_id_      IN NUMBER,
   keep_structure_               IN VARCHAR2)
IS   
   handling_unit_id_tab_   Handling_Unit_API.Handling_Unit_Id_Tab;
BEGIN   
   -- Security check
   handling_unit_id_tab_ := Handling_Unit_API.Get_Handling_Unit_Id_Tab(handling_unit_id_list_);
   IF parent_handling_unit_id_ IS NOT NULL THEN
      Handling_Unit_Extended_Initial_Check___(parent_handling_unit_id_);
   END IF;
   IF (handling_unit_id_tab_.COUNT > 0) THEN
      FOR i IN handling_unit_id_tab_.FIRST .. handling_unit_id_tab_.LAST LOOP
         Handling_Unit_Extended_Initial_Check___(handling_unit_id_tab_(i).handling_unit_id);
      END LOOP;
   END IF;   
   
   Handling_Unit_API.Modify_Parent_Handling_Unit_Id(handling_unit_id_list_              => handling_unit_id_list_,
                                                    parent_handling_unit_id_            => parent_handling_unit_id_,
                                                    keep_structure_                     => keep_structure_);
END Modify_Parent_Handling_Unit_Id___;
