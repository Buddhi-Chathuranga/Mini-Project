-----------------------------------------------------------------------------
--
--  Logical unit: InventoryTurnoverRateHandling
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  190701  YasMlk  SCUXXW4-22751, Modified part description where statement parameter values in Generate_Turnover_Rate_List___.
--  190111  YasMlk  SCUXXW4-6930, Created for implementation.
-----------------------------------------------------------------------------

layer Core;

FUNCTION Get_Currency_And_Turnover_Rate___ (
   from_year_                       IN NUMBER,
   from_period_                     IN NUMBER,
   to_year_                         IN NUMBER,
   to_period_                       IN NUMBER,
   contract_input_                  IN VARCHAR2,
   part_no_input_                   IN VARCHAR2,
   part_description_input_          IN VARCHAR2,
   configuration_id_input_          IN VARCHAR2,   
   planner_input_                   IN VARCHAR2,
   commodity_group_input_           IN VARCHAR2,
   issued_value_input_              IN VARCHAR2,
   average_inventory_value_input_   IN VARCHAR2,
   turnover_rate_input_             IN VARCHAR2)RETURN Turnover_Rate_Result_Structure_Rec
IS
   structure_     Turnover_Rate_Result_Structure_Rec;
   tot_value_     NUMBER:= 0;
   issued_        NUMBER:= 0;
   count_         NUMBER:= 0;
   value_         NUMBER;
   turnover_      NUMBER;
   
   CURSOR getCurrency IS
      SELECT COUNT(DISTINCT(((Company_Finance_API.Get_Currency_Code(Site_API.Get_Company(contract))))))
      FROM inventory_part_config
      WHERE (Report_SYS.Parse_Parameter(contract, contract_input_) = 'TRUE' OR contract_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(part_no, part_no_input_) = 'TRUE' OR part_no_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(Inventory_Part_API.Get_Description(contract, part_no), part_description_input_) = 'TRUE' OR part_description_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(configuration_id, configuration_id_input_) = 'TRUE' OR configuration_id_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(Inventory_Part_API.Get_Planner_Buyer(contract, part_no), planner_input_) = 'TRUE' OR planner_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(Inventory_Part_API.Get_Second_Commodity(contract, part_no), commodity_group_input_) = 'TRUE' OR commodity_group_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(NVL(Inventory_Part_Period_Hist_API.Get_Issued_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_),0), issued_value_input_) = 'TRUE' OR issued_value_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(NVL(Inventory_Part_Period_Hist_API.Get_Avg_Inventory_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_),0), average_inventory_value_input_) = 'TRUE' OR average_inventory_value_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(DECODE( NVL(Inventory_Part_Period_Hist_API.Get_Avg_Inventory_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_) ,0),0,0,NVL(Inventory_Part_Period_Hist_API.Get_Issued_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_),0)/DECODE( NVL(Inventory_Part_Period_Hist_API.Get_Avg_Inventory_Value(contract, part_no, configuration_id, from_year_, from_period_ , to_year_, to_period_), 0 ),0,1,Inventory_Part_Period_Hist_API.Get_Avg_Inventory_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_ , to_period_))), turnover_rate_input_) = 'TRUE' OR turnover_rate_input_ IS NULL);
    
   CURSOR getTurnoverRate IS 
      SELECT Sum(Inventory_Part_Period_Hist_API.Get_Inventory_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_)),
				 Sum(Inventory_Part_Period_Hist_API.Get_Issued_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_))
      FROM inventory_part_config
      WHERE (Report_SYS.Parse_Parameter(contract, contract_input_) = 'TRUE' OR contract_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(part_no, part_no_input_) = 'TRUE' OR part_no_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(Inventory_Part_API.Get_Description(contract, part_no), part_description_input_) = 'TRUE' OR part_description_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(configuration_id, configuration_id_input_) = 'TRUE' OR configuration_id_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(Inventory_Part_API.Get_Planner_Buyer(contract, part_no), planner_input_) = 'TRUE' OR planner_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(Inventory_Part_API.Get_Second_Commodity(contract, part_no), commodity_group_input_) = 'TRUE' OR commodity_group_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(NVL(Inventory_Part_Period_Hist_API.Get_Issued_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_),0), issued_value_input_) = 'TRUE' OR issued_value_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(NVL(Inventory_Part_Period_Hist_API.Get_Avg_Inventory_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_),0), average_inventory_value_input_) = 'TRUE' OR average_inventory_value_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(DECODE( NVL(Inventory_Part_Period_Hist_API.Get_Avg_Inventory_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_) ,0),0,0,NVL(Inventory_Part_Period_Hist_API.Get_Issued_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_),0)/DECODE( NVL(Inventory_Part_Period_Hist_API.Get_Avg_Inventory_Value(contract, part_no, configuration_id, from_year_, from_period_ , to_year_, to_period_), 0 ),0,1,Inventory_Part_Period_Hist_API.Get_Avg_Inventory_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_ , to_period_))), turnover_rate_input_) = 'TRUE' OR turnover_rate_input_ IS NULL);
    
   CURSOR getNumOfPeriods IS
      SELECT Statistic_Period_API.Get_Num_Of_Periods(from_year_, from_period_, to_year_, to_period_)
      FROM dual;
BEGIN
   OPEN getCurrency;
   FETCH getCurrency INTO structure_.currency;
   CLOSE getCurrency;
   
   IF structure_.currency = 1 THEN
   
      OPEN getTurnoverRate;
      FETCH getTurnoverRate INTO tot_value_, issued_;
      CLOSE getTurnoverRate;
   
      OPEN getNumOfPeriods;
      FETCH getNumOfPeriods INTO count_;
      CLOSE getNumOfPeriods;
      
      IF tot_value_ IS NULL THEN
         tot_value_ := 0;
      END IF;

      IF count_ = 0 THEN 
         value_ := 0;
      ELSE
         value_ := tot_value_ / count_;
      END IF;
      
      IF issued_ IS NULL THEN
         issued_ := 0;
      END IF;
      
      IF value_ = 0 THEN
         turnover_ := 0;
      ELSE
         turnover_ := issued_ / value_;
         turnover_ := ROUND(turnover_ , 2 );
      END IF;
      
   END IF;
   
   structure_.turnover_rate := turnover_;
   
   RETURN structure_;
END Get_Currency_And_Turnover_Rate___;


PROCEDURE Generate_Turnover_Rate_List___ (
   from_year_                       IN NUMBER,
   from_period_                     IN NUMBER,
   to_year_                         IN NUMBER,
   to_period_                       IN NUMBER,
   contract_input_                  IN VARCHAR2,
   part_no_input_                   IN VARCHAR2,
   part_description_input_          IN VARCHAR2,
   configuration_id_input_          IN VARCHAR2,   
   planner_input_                   IN VARCHAR2,
   commodity_group_input_           IN VARCHAR2,
   issued_value_input_              IN VARCHAR2,
   average_inventory_value_input_   IN VARCHAR2,
   turnover_rate_input_             IN VARCHAR2,
   parent_objkey_                   IN VARCHAR2) 
IS
   parent_key_    Statistics_Virtual_Key;
   child_key_     Inventory_Part_Config_Virtual_Key;
   child_rec_     Inventory_Part_Config_Virtual_Rec;
   line_rec_      Inventory_Part_Config_Virtual_Rec;
   
   CURSOR Get_Turnover_Rate_list_Values IS 
      SELECT contract,
             part_no,
             Inventory_Part_API.Get_Description(contract, part_no),
             configuration_id,
             Inventory_Part_API.Get_Second_Commodity(contract, part_no),
             Commodity_Group_API.Get_Description(Inventory_Part_API.Get_Second_Commodity(contract, part_no)),
             ROUND(NVL(Inventory_Part_Period_Hist_API.Get_Issued_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_),0) , 2),
             ROUND(NVL(Inventory_Part_Period_Hist_API.Get_Avg_Inventory_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_),0), 2),
             ROUND(DECODE( NVL(Inventory_Part_Period_Hist_API.Get_Avg_Inventory_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_) ,0),0,0,NVL(Inventory_Part_Period_Hist_API.Get_Issued_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_),0)/DECODE( NVL(Inventory_Part_Period_Hist_API.Get_Avg_Inventory_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_), 0 ),0,1,Inventory_Part_Period_Hist_API.Get_Avg_Inventory_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_))), 2),
             Inventory_Part_API.Get_Planner_Buyer(contract, part_no),
             Inventory_Part_Planner_API.Get_Buyer_Name(Inventory_Part_API.Get_Planner_Buyer(contract, part_no))
      FROM inventory_part_config
      WHERE (Report_SYS.Parse_Parameter(contract, contract_input_) = 'TRUE' OR contract_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(part_no, part_no_input_) = 'TRUE' OR part_no_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(UPPER(Inventory_Part_API.Get_Description(contract, part_no)), UPPER(part_description_input_)) = 'TRUE' OR part_description_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(configuration_id, configuration_id_input_) = 'TRUE' OR configuration_id_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(Inventory_Part_API.Get_Planner_Buyer(contract, part_no), planner_input_) = 'TRUE' OR planner_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(Inventory_Part_API.Get_Second_Commodity(contract, part_no), commodity_group_input_) = 'TRUE' OR commodity_group_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(NVL(Inventory_Part_Period_Hist_API.Get_Issued_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_),0), issued_value_input_) = 'TRUE' OR issued_value_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(NVL(Inventory_Part_Period_Hist_API.Get_Avg_Inventory_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_),0), average_inventory_value_input_) = 'TRUE' OR average_inventory_value_input_ IS NULL)
         AND(Report_SYS.Parse_Parameter(DECODE( NVL(Inventory_Part_Period_Hist_API.Get_Avg_Inventory_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_) ,0),0,0,NVL(Inventory_Part_Period_Hist_API.Get_Issued_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_, to_period_),0)/DECODE( NVL(Inventory_Part_Period_Hist_API.Get_Avg_Inventory_Value(contract, part_no, configuration_id, from_year_, from_period_ , to_year_, to_period_), 0 ),0,1,Inventory_Part_Period_Hist_API.Get_Avg_Inventory_Value(contract, part_no, configuration_id, from_year_, from_period_, to_year_ , to_period_))), turnover_rate_input_) = 'TRUE' OR turnover_rate_input_ IS NULL);
    
BEGIN
   parent_key_.objkey := parent_objkey_;
   
   FOR details_rec_ IN Get_Part_Config_Array___(parent_key_) LOOP
      child_key_.objkey := details_rec_.objkey;
      child_rec_        := Get_Record___(child_key_);
      CRUD_Delete___(child_rec_);
   END LOOP;   
   
   OPEN Get_Turnover_Rate_list_Values;
   LOOP
      FETCH Get_Turnover_Rate_list_Values INTO line_rec_.contract, line_rec_.part_no, line_rec_.part_description, 
      line_rec_.configuration_id, line_rec_.commodity_group2, line_rec_.commodity_group_description, 
      line_rec_.issued_value,line_rec_.average_inventory_value,line_rec_.turnover_rate,line_rec_.planner,
      line_rec_.planner_name;
      
     EXIT WHEN Get_Turnover_Rate_list_Values%NOTFOUND;
      line_rec_.objkey         := sys_guid();
      line_rec_.parent_objkey  := parent_objkey_;
      line_rec_.objversion     := SYSDATE; 

      CRUD_Create___(line_rec_);
   END LOOP;  
   
   CLOSE Get_Turnover_Rate_list_Values;
   
END Generate_Turnover_Rate_List___;

   
FUNCTION Get_Current_Statistic_Period___ RETURN Current_Statistic_Period_Structure_Rec
IS
   structure_   Current_Statistic_Period_Structure_Rec;
   to_year_     NUMBER;
   to_period_   NUMBER;
BEGIN
   Statistic_Period_API.Current_Statistic_Period(to_year_, to_period_);
   structure_.to_year   := to_year_;
   structure_.to_period := to_period_;
   
   RETURN structure_;
END Get_Current_Statistic_Period___;  
 

FUNCTION Get_Inventory_Parts___(
   contract_ IN VARCHAR2 )  RETURN Objid_Arr
IS
   base_collection_  Objid_Arr := Objid_Arr();
   
   CURSOR inv_part_details IS
      SELECT objid
      FROM Inventory_Part_Lov
      WHERE (Report_SYS.Parse_Parameter(contract, contract_) = 'TRUE' OR contract_ IS NULL);
BEGIN
   OPEN inv_part_details;
   FETCH inv_part_details BULK COLLECT INTO base_collection_;
   CLOSE inv_part_details;
   
   RETURN base_collection_;
END Get_Inventory_Parts___;

