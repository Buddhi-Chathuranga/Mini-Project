-----------------------------------------------------------------------------
--
--  Logical unit: RemoteWhseAssortPart
--  Component:    INVENT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  180112  BudKlk  Bug 139555, Modified the view R_H_Part_Planning_Union to improve the performance.
-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

@Override
COLUMN Refill_Source_Db IS
   Datatype   = 'STRING(20)';

@Override
COLUMN Remove_Excess_Inventory_Db IS
   Datatype   = 'STRING(20)';

COLUMN Contract IS
   Flags      = 'P----'
   Datatype   = 'STRING(5)/UPPERCASE'
   Prompt     = 'Site/NOCHECK';

COLUMN Warehouse_Id IS
   Flags      = 'P----'
   Datatype   = 'STRING(15)'
   Prompt     = 'Warehouse ID'
   Ref        = 'Warehouse(contract)';

COLUMN Part_Description IS
   Flags      = 'A----'
   Datatype   = 'STRING(200)'
   Prompt     = 'Part Description';

COLUMN Assortment_Description IS
   Flags      = 'A----'
   Datatype   = 'STRING(200)'
   Prompt     = 'Assortment Description';

COLUMN Refill_Point_Inv_Qty IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Refill Point Qty';

COLUMN Refill_To_Inv_Qty IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Refill To Qty';

COLUMN Onhand_Qty IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Qty Onhand';

COLUMN Plannable_Qty IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Plannable Qty';

COLUMN Reserved_Qty IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Qty Reserved';

COLUMN In_Transit_Qty IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Qty In Transit';

COLUMN Qty_Inbound_Invent IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Qty Inbound for Inventory';

COLUMN Qty_Inbound_Purch IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Qty Inbound for Purchase';

COLUMN Qty_Outbound IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'Qty Outbound';

COLUMN Uom IS
   Flags      = 'A----'
   Datatype   = 'NUMBER'
   Prompt     = 'UoM';

COLUMN Remote_Warehouse_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Remote Warehouse';

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------


-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

VIEW R_H_Part_Planning_Union IS
SELECT rwac.contract                                                                                             contract,
       rwac.warehouse_id                                                                                         warehouse_id,
       rwap.part_no                                                                                              part_no,
       Remote_Whse_Assort_Part_API.Get_Prioritized_Assortment_Id(rwap.part_no, rwac.contract, rwac.warehouse_id) assortment_id                                      
FROM   REMOTE_WHSE_ASSORT_PART_TAB rwap, REMOTE_WHSE_ASSORT_CONNECT_TAB rwac
WHERE  rwap.assortment_id = rwac.assortment_id 
UNION
SELECT contract                                                                                contract,
       warehouse                                                                               warehouse_id,
       part_no                                                                                 part_no,
       Remote_Whse_Assort_Part_API.Get_Prioritized_Assortment_Id(part_no, contract, warehouse) assortment_id
FROM   INVENTORY_PART_IN_STOCK_TAB
UNION                                                                                          
SELECT to_contract                                                                                   contract,
       warehouse_id                                                                                  warehouse_id,
       part_no                                                                                       part_no,
       Remote_Whse_Assort_Part_API.Get_Prioritized_Assortment_Id(part_no, to_contract, warehouse_id) assortment_id
FROM   TRANSPORT_TASK_LINE_TAB ttl, WAREHOUSE_BAY_BIN_TAB wbb
WHERE  wbb.contract = ttl.to_contract
AND    ((ttl.forward_to_location_no = wbb.location_no) OR (ttl.to_location_no = wbb.location_no))
AND    ttl.transport_task_status IN ('CREATED', 'PICKED');

@SecurityCheck Site.UserAuthorized(pp.contract)
VIEW Remote_Whse_Part_Planning IS
   Prompt = 'Remote Whse Assort Part'
   Part_No.Flags = 'A----'
   Assortment_Id.Flags = 'A----'
   Assortment_Id.Ref = 'RemoteWhseAssortment'
   Remove_Excess_Inventory.Flags = 'A----'
   Refill_Source.Flags = 'A----'
   Refill_Source.Datatype = 'STRING(20)'
SELECT contract                                                                                                               contract,
       warehouse_id                                                                                                           warehouse_id,
       part_no                                                                                                                part_no,
       Inventory_Part_API.Get_Description(contract, part_no)                                                                  part_description,
       assortment_id                                                                                                          assortment_id,
       Remote_Whse_Assortment_API.Get_Description(assortment_id)                                                              assortment_description,
       Remote_Whse_Assort_Part_API.Get_refill_point_inv_qty(assortment_id, part_no, contract)                                 refill_point_inv_qty,
       Remote_Whse_Assort_Part_API.Get_refill_to_inv_qty(assortment_id, part_no, contract)                                    refill_to_inv_qty,
       Inventory_Part_In_Stock_API.Get_Inventory_Quantity(contract, part_no, NULL, 'ONHAND', warehouse_id_ => warehouse_id)   onhand_qty,
       Remote_Whse_Assort_Part_API.Get_Plannable_Qty(part_no, contract, warehouse_id)                                         plannable_qty,
       Inventory_Part_In_Stock_API.Get_Inventory_Quantity(contract, part_no, NULL, 'RESERVED', warehouse_id_ => warehouse_id) reserved_qty,
       Inventory_Part_In_Stock_API.Get_Inventory_Quantity(contract, part_no, NULL, 'TRANSIT', warehouse_id_ => warehouse_id)  in_transit_qty,
       Transport_Task_API.Get_Qty_Inbound_For_Warehouse(part_no, '*', contract, warehouse_id, 'TRUE')                         qty_inbound_invent,
       Remote_Whse_Assort_Part_API.Get_Qty_Inbound_For_Purchase(part_no, contract, warehouse_id)                              qty_inbound_purch,
       Transport_Task_API.Get_Qty_Outbound_For_Warehouse(part_no, '*', contract, warehouse_id)                                qty_outbound,
       Inventory_Part_API.Get_Unit_Meas(contract, part_no)                                                                    uom,
       Remote_Whse_Assort_Part_API.Get_Remove_Excess_Inventory(assortment_id, part_no)                                        remove_excess_inventory,
       Remote_Whse_Assort_Part_API.Get_Remove_Excess_Inventory_Db(assortment_id, part_no)                                     remove_excess_inventory_db,
       Remote_Whse_Assort_Part_API.Get_Refill_Source(assortment_id, part_no)                                                  refill_source,
       Warehouse_API.Get_Remote_Warehouse_Db(contract, warehouse_id)                                                          remote_warehouse_db,
       part_no                                                                                                                objid,
       ltrim(lpad(to_char(SYSDATE,'YYYYMMDDHH24MISS'),2000))                                                                  objversion,
       NULL                                                                                                                   objkey
FROM   R_H_PART_PLANNING_UNION pp
WHERE  ( assortment_id IS NOT NULL 
       OR Inventory_Part_In_Stock_API.Get_Inventory_Quantity(contract, part_no, NULL, 'ONHAND', warehouse_id_ => warehouse_id) > 0 
       OR Remote_Whse_Assort_Part_API.Get_Plannable_Qty(part_no, contract, warehouse_id) > 0
       OR Inventory_Part_In_Stock_API.Get_Inventory_Quantity(contract, part_no, NULL, 'RESERVED', warehouse_id_ => warehouse_id) > 0
       OR Inventory_Part_In_Stock_API.Get_Inventory_Quantity(contract, part_no, NULL, 'TRANSIT', warehouse_id_ => warehouse_id) > 0
       OR Transport_Task_API.Get_Qty_Inbound_For_Warehouse(part_no, '*', contract, warehouse_id, 'TRUE') > 0
       OR Remote_Whse_Assort_Part_API.Get_Qty_Inbound_For_Purchase(part_no, contract, warehouse_id) > 0
       OR Transport_Task_API.Get_Qty_Outbound_For_Warehouse(part_no, '*', contract, warehouse_id) > 0);

