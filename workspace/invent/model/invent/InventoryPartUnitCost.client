-------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-08-05  ChFolk  SCUXXW4-23465, Moved ModifyLevelCostDetailAssistant and related list and fragments to ModifyLevelCostDetailAssistant and included it.
-- 2019-07-11  JaThlk  SCUXXW4-23055, Removed multiple calls for better performance.
-- 2019-05-29  SURBLK  SCUXXW4-17857, Removed the old Cost field and renamed the field new cost in Modify Level Cost Detail.
-- 2019-05-14  sthose  SCUXXW4-17857, Added savemode buffer
-- 2019-04-29  fandse  SCUXXW4-17693, Fixed navigation to configurration
-- 2018-10-27  SAGELK  SCUXXW4-5589, Converted from dlgModifyLevelCostDetail using MTG Version: 1.31
-- 2018-10-03  SAGELK  SCUXXW4-6785, Converted from tbwEstimatedCostPerCondition using MTG Version: 1.31
-- 2018-10-03  SAGELK  SCUXXW4-6945, Converted from tbwInventoryValueComparator using MTG Version: 1.31
-- 2018-10-03  SAGELK  SCUXXW4-6214, Converted from frmInventoryPartConfig using MTG Version: 1.30
--------------------------------------------------------------------------------------
client InventoryPartUnitCost;
component INVENT;
layer Core;
projection InventoryPartUnitCostHandling;

include fragment UserAllowedSiteLovSelector;
include fragment StatisticPeriod2Selector;
include fragment PrintInventoryValueComparisonAssistant;
include fragment ModifyLevelCostDetailAssistant;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry InventoryPartUnitCostNavEntry parent MpccomNavigator.WarehouseManagementFinancialControl at index 50 {
      label = "Inventory Part Unit Cost";
      page Form;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using InventoryPartConfigSet {
   label = "Inventory Part Unit Cost";
   startupmode = search;
   selector InventoryPartConfigSelector;
   group InventoryPartGroup;
   group PeriodicWAInfoGroup;

   tabs {
      tab {
         label = "Unit Costs";
         list InventoryPartUnitCostList(InventoryPartUnitCostArray);
      }
      tab {
         visible = [ConditonCodeUsageDb = "ALLOW_COND_CODE"];

         label = "Estimated Cost per Condition";
         list EstimatedCostPerConditionList(InvPartConfigConditionArray);
      }
      tab {
         label = "Inventory Value Comparators";
         list InventoryValueComparatorList(InventoryValueComparatorArray);
      }
   }

   commandgroup CommandGroupCmdGroup {

      command ViewConfigurationCommand;
      command RemovePeriodicWADifferenceCommand;
   }
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command ViewConfigurationCommand for InventoryPartConfig {
   label = "View Configuration";
   enabled = [ConfigurationId != "*"];
   execute {
      set Mode = "View";
      navigate "assistant/PartConfigurationAssistant/EditConfiguration?$action=InitConfiguration{  VarMode:$[Mode],
                                                                                                   VarPartNo:$[PartNo],
                                                                                                   VarConfigurationId:$[ConfigurationId]}";
   }
}
command RemovePeriodicWADifferenceCommand for InventoryPartConfig {
   label = "Remove Periodic WA Difference";
   enabled = [(InvoiceConsideration = "PERIODIC WEIGHTED AVERAGE")];
   execute {
      confirm("This will create transactions and postings to remove remaining price and manufacturing differences.") {
         when OK {
            call RemoveActualCostDifference();
         }
      }
   }
}
command ModifyLevelCostDetailsCommand for InventoryPartUnitCost {
   label = "Modify Level Cost Details";

   enabled = [(InventoryPartCostLevel in("COST PER SERIAL", "COST PER LOT BATCH", "COST PER CONDITION")) or
   (InventoryPartCostLevel = "COST PER PART" and InventValuationMethodDb = "AV") or
   (InventoryPartCostLevel = "COST PER CONFIGURATION" and InventValuationMethodDb = "ST")];

   execute {
      assistant ModifyLevelCostDetailAssistant(PartNo, Contract, ConfigurationId, ConditionCode, LotBatchNo, SerialNo, UnitCost) {
         when OK {
            exit;
         }
      }
   }
}
command CostDetailsCommand for InventoryPartUnitCost {
   label = "Cost Details";
   mode = SelectedRecords;
   enabled = [(InventValuationMethodDb != "FIFO") and(InventValuationMethodDb != "LIFO")];
   bulkexecute {
      bulknavigate "page/InventoryPartUnitCostDetails/Form?$filter=PartNo eq '${PartNo}' and ConfigurationId eq '${ConfigurationId}' and SerialNo eq '${SerialNo}' and LotBatchNo eq '${LotBatchNo}' and Contract eq '${Contract}'";
   }
}
command InventoryValueComparisonRepoCommand for InventoryValueComparator {
   label = "Inventory Value Comparison Report";
   enabled = [true];
   execute {
      assistant PrintInventoryValueComparisonAssistant(null, null, Contract, ComparatorTypeId) {
         when OK {
            exit;
         }
      }
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector InventoryPartConfigSelector for InventoryPartConfig {
   label = "${PartNo} - ${PartDescriptionInUse}";
   static PartNo;
   static PartDescriptionInUse;
   static Contract;
   static ConfigurationId;
   fieldorder = PartNo, PartDescriptionInUse, Contract, ConfigurationId;
}

---------------------------------- GROUPS -----------------------------------
group InventoryPartGroup for InventoryPartConfig {
   label = "";

   field PartNo;
   field PartDescriptionInUse;
   field Contract;
   field ConfigurationId {
      label = "Configuration ID";
   }
   field EstimatedMaterialCost;
   field LatestPurchasePrice;
   field AveragePurchasePrice;
}

group PeriodicWAInfoGroup for InventoryPartConfig {
   label = "Periodic Weighted Average Information";

   field LastActualCostCalc;
   field LastManufCostCalc;
   field AccumulatedPurchaseDiff;
   field CumCostVariance;
}

----------------------------------- LISTS -----------------------------------
list InventoryPartUnitCostList for InventoryPartUnitCost {

   field LotBatchNo;
   field SerialNo;
   field UnitCost;
   field ConditionCode;
   field ConditionCodeDescription;
   // fieldranking LotBatchNo, SerialNo, UnitCost, ConditionCode, ConditionCodeDescription;

   commandgroup CommandGroupCmdGroup {

      command ModifyLevelCostDetailsCommand;
   }

   commandgroup CommandGroup2CmdGroup {

      command CostDetailsCommand;
   }
}

list InventoryValueComparatorList for InventoryValueComparator {
   lov ComparatorTypeIdRef with ReferenceInventValueComparatTypeSelector {
      label = "Comparator Type ";
      description = ComparatorTypeIdRef.Description;
   }
   lov ConditionCodeRef with ReferenceConditionCodeSelector {
      label = "Condition Code";
      description = ConditionCodeRef.Description;
   }
   field ComparisonValue;
   // fieldranking ComparatorTypeIdRef, ComparatorTypeDescription, ConditionCodeRef, ConditionCodeRef.Description, ComparisonValue;

   commandgroup CommandGroupCmdGroup {

      command InventoryValueComparisonRepoCommand;
   }
}

list EstimatedCostPerConditionList for InvPartConfigCondition {
   crudactions {
      new {
         enabled = [parent.ConditonCodeUsageDb = "ALLOW_COND_CODE"];
      }
      edit {
         enabled = [parent.ConditonCodeUsageDb = "ALLOW_COND_CODE"];
      }
      delete {
         enabled = [parent.ConditonCodeUsageDb = "ALLOW_COND_CODE"];
      }
   }
   lov ConditionCodeRef with ReferenceConditionCodeSelector {
      label = "Condition Code";
      description = ConditionCodeRef.Description;
   }
   field EstimatedCost;
   // fieldranking ConditionCodeRef, ConditionCodeRef.Description, EstimatedCost;
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

--------------------------------- CHECKLIST ---------------------------------
