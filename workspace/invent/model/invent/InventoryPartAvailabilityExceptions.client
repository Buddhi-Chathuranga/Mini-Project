--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-11-04  JiThlk  SCXTEND-1339,  Startup Mode set to Search.
-- 2019-03-14  StHose  SCUXXW4-7075, Getting Project Info using Get calls for performance
-- 2019-03-13  ChFolk  SCUXXW4-17191, Included dynamic dependency anotations where necessary.
-- 2018-05-22  SWiclk  SCUXXW4-7075, Implemented the Confirm button action.
-- 2018-05-14  YANILK  SCUXXW4-7075, Converted from tbwOverviewInvPartAvailExc Code using MTG Version: 1.15
--------------------------------------------------------------------------------------
client InventoryPartAvailabilityExceptions;
component INVENT;
layer Core;
projection InventoryPartAvailabilityExceptionsAnalysis;
include fragment UserAllowedSiteLovSelector;
include fragment IntorderPartLov2Selector;


----------------------------- NAVIGATOR ENTRIES -----------------------------

navigator {
   entry InventoryPartsAvailabilityPlanningExceptionsNavEntry parent InventNavigator.SupplyChainPlanningPartPlanning at index 300 {
      label = "Inventory Part Availability Exceptions";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------

page List using InventoryPartsAvailabilityExceptions {
   label = "Inventory Part Availability Exceptions";
   startupmode = search;
   list InventoryPartsAvailabilityExceptionsList;
}


--------------------------------- COMMANDS ----------------------------------

command InventoryPartCommand for InventoryPartsAvailabilityException {
   label = "Inventory Part";
   mode = SelectedRecords;
   enabled = [true];
   execute {
      navigate "page/InventoryPart/Form?$filter=PartNo eq $[PartNo] and Contract eq $[Contract]";
   }
}

command InventoryAvailabilityPlanningCommand for InventoryPartsAvailabilityException {
   label = "Inventory Part Availability Planning";
   mode = SelectedRecords;
   enabled = [true];
   execute {
      navigate "page/InventoryPartAvailabilityPlanning/Form?$filter=PartNo eq $[PartNo] and Contract eq $[Contract]";
   }
}

command ConfirmCommand for InventoryPartsAvailabilityException {
   label = "Confirm";
   mode = SelectedRecords;
   enabled = [not ConfirmedDb];
   bulkexecute {
      confirm("This will CONFIRM the Exception Message(s).") {
         when OK {
            bulkcall ConfirmMessage(Contract, PartNo, ConfigurationId, ExceptionMessageDb, ProjectId);
         }
      }
   }
}
----------------------------- VISUAL COMPONENTS -----------------------------

list InventoryPartsAvailabilityExceptionsList for InventoryPartsAvailabilityException {
   lov PartNoRef with ReferenceIntorderPartLov2Selector;
   field PartDescription;
   lov ContractRef with ReferenceUserAllowedSiteLovSelector;
   field SiteDescription;
   field ConfigurationIdRef;
   @DynamicComponentDependency PROJ
   lov ProjectRef with ReferenceProjectSelector;
   @DynamicComponentDependency PROJ
   field ProjectName;
   field UnitMeas;
   field ExceptionMessage;
   field NegativeOnhandDate;
   field TypeCode;
   field ManufLeadtime;
   field PurchLeadtime;
   field OrderRequisition;
   field PlanningMethod;
   field SecondCommodityRef;
   field PlannerBuyerRef {
      contactwidget {
         enabled = [true];
         source = Person;
      }
   }
   field PartProductFamilyRef;
   field PartProductCodeRef;
   field PartStatus;
   field UnitCost;
   field DateCreated;
   field QtyOnhand;
   field QtyReserved;
   field QtyInTransit;
   field SafetyStock;
   field SafetyLeadTime;
   field TotalQtyDemand;
   field TotalQtySupply;
   field ConfirmedDb;
   field DateConfirmed;
   field ConfirmedByUserId {
      contactwidget {
         enabled = [ConfirmedByUserId != null];
         source = Person;
      }
   }
   field NoteText;

   commandgroup InventoryPartsAvailabilityExceptionsCmdGroup {
      
      command InventoryPartCommand;
      command InventoryAvailabilityPlanningCommand;
   }
   commandgroup InventoryPartsAvailabilityExceptionsCmdGroup {
      label = "Confirm";
      command ConfirmCommand;
   }
}


