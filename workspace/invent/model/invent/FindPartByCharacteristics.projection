--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2021-10-21  JaThlk  SC21R2-5236, Modified PartTypeEnum to add identifiers for each value to fix special characters issue.
-- 2019-01-14  SaGeLK  SCUXXW4-5524, Moved the Inventory part of the code from FindPartByCharacteristics to FindInventoryPartByCharacteristicsList.
-- 2019-01-10  SaGeLK  SCUXXW4-8770, Moved the Sales part of the code from FindPartByCharacteristics to FindSalesPartByCharacteristicsList.
-- 2019-01-10  SaGeLK  SCUXXW4-2194, Moved the Purchase part of the code to FindPurchasePartByCharacteristics to FindPurchasePartByCharacteristicsList
-- 2018-12-16  SaGeLK  SCUXXW4-8770, Converted from dlgSalesPartCharSearchWizard using MTG Version: 1.34
-- 2018-12-10  SaGeLK  SCUXXW4-2194, Converted from dlgPurchaseCharSearchWizard using MTG Version: 1.34
-- 2018-11-12  SaGeLK  SCUXXW4-5524, Converted from dlgInventoryCharSearchWizard using MTG Version: 1.33
--------------------------------------------------------------------------------------
projection FindPartByCharacteristics;
component INVENT;
layer Core;
description "Use this API to search for a specific part by its characteristics. Select the characteristic template and enter the search criteria for the alphanumeric and numeric fields, in order to search for the required part. ";
category Users;


//INVENTORY PART
include fragment FindInventoryPartByCharacteristicsList;

//PURCHASE PART
@DynamicComponentDependency PURCH
include fragment FindPurchasePartByCharacteristicsList;


//SALES PART
@DynamicComponentDependency ORDER
include fragment FindSalesPartByCharacteristicsList;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset PartCharactersticSearchWizardSet  for CharacteristicTemplateVirtual;

------------------------------ ENTITY DETAILS -------------------------------

------------------------------- ENUMERATIONS --------------------------------
enumeration PartTypeEnum {
   value = "Inventory Part" {
      identifier = "InventoryPart";
      label = "Inventory Part";
   }
   @DynamicComponentDependency PURCH
   value = "Purchase Part" {
      identifier = "PurchasePart";
      label = "Purchase Part";
   }
   @DynamicComponentDependency ORDER
   value = "Sales Part" {
      identifier = "SalesPart";
      label = "Sales Part";
   }
}

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------
function FilterAttributeValue List<Entity(DiscreteCharacValue)> {
   parameter CharacteristicCode Text;
   where = "CHARACTERISTIC_CODE = :CharacteristicCode";
}

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------
virtual CharacteristicTemplateVirtual {
   attribute EngAttribute Text {
      label = "Characteristic Template";
   }
   attribute Description Text {
      label = "Template Description";
   }
   attribute PartType Enumeration(PartTypeEnum) {
      label = "Part Type";
   }
   reference EngAttributeRef(EngAttribute) to CharacteristicTemplate(EngAttribute) {
      label = "Characteristic Template";
   }
   array TemplCharArray() to CharacteristicTemplCharListVirtual();
}

virtual CharacteristicTemplCharListVirtual {
   crud = Update, Read;
   ludependencies = CharacteristicTemplateVirtual;

   //Header
   attribute Contract Text {
      maxlength = 100;
   }
   attribute PartNo Text {
      maxlength = 100;
   }
   attribute Rowtype Text {
      label = "Discrete Characteristic Value";
      editable = [false];
   }
   attribute CharacteristicCode Text {
      fetch = "characteristic_code";
      label = "Characteristic Code";
      maxlength = 5;
   }
   attribute CharacteristicValue Text;
   attribute NumericCharacteristicValue Text;
   attribute CharacteristicCodeType Text {
      label = "Alpha/Numeric";
      editable = [false];
   }
   attribute CharacteristicCodeTypeDb Text;
   //attribute AttributeValue Text;
   reference CharacteristicRef(CharacteristicCode) to Characteristic(CharacteristicCode);
   reference CharacteristicValueRef(CharacteristicCode, CharacteristicValue) to DiscreteCharacValue(CharacteristicCode, CharacteristicValue);
   reference NumericCharacteristicValueRef(CharacteristicCode, NumericCharacteristicValue) to DiscreteCharacValue(CharacteristicCode, CharacteristicValue);

   // Characterisitc Temlate
   attribute EngAttribute Text;
   reference EngAttributeRef(EngAttribute) to CharacteristicTemplate(EngAttribute) {
      label = "Characteristic Template";
   }
   //Numeric CharacteristicTemplChar
   attribute UnitMeas Text {
      fetch = "unit_meas";
      label = "UoM";
      maxlength = 10;
   }
   reference UnitMeasRef(UnitMeas) to IsoUnit(UnitCode) {
      label = "UoM";
   }
   array InventoryPartArray(EngAttribute) to InventoryPart(EngAttribute);
}
@Override
entity CharacteristicTemplate {
   attribute EngAttribute Text {
      label = "Characterisitc Template";

   }

}
--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------
