---------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ----------------------------------------------------------
-- 2019-05-15  DaZase  SCUXXW4-19647, Added initialcheck to all unbounded actions.
-- 2019-04-29  ChFolk  SCUXXW4-5986, Added ludependencies for week and month graphs.
-- 2019-04-18  ChFolk  SCUXXW4-5986, Converted from frmAvailabilityGraph using MTG Version: 1.34
---------------------------------------------------------------------------------
projection InventoryPartAvailabilityGraphAnalysis;
component INVENT;
layer Core;
description "Use this API to view a graph of the inventory part availability. You can create graphs for days, weeks, or months";
category Users;

--------------------------------- FRAGMENTS ---------------------------------
include fragment InventoryPartLovSelector;
include fragment UserAllowedSiteLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset InventoryPartConfigSet for InventoryPartConfig;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity InventoryPartConfig {
   crud = Read, Update;
   from = "inventory_part_config";
   exec = "INVENTORY_PART_CONFIG_API";
   keys = PartNo, Contract, ConfigurationId {
      where = "PART_NO = :PartNo and CONTRACT = :Contract and CONFIGURATION_ID = :ConfigurationId";
   }
   supportwarnings = [true];
   exclude attributes = AccumulatedPurchaseDiff, AveragePurchasePrice, EstimatedMaterialCost, LastActualCostCalc, LastManufCostCalc, LatestPurchasePrice;
   attribute PartNo Text {
      fetch = "part_no";
      label = "Part No";
      maxlength = 100;
      editable = [false];
      format = uppercase;
   }
   attribute Contract Text {
      fetch = "contract";
      label = "Site";
      maxlength = 35;
      editable = [false];
   }
   attribute ConfigurationId Text {
      fetch = "configuration_id";
      label = "Configuration Id";
      maxlength = 100;
      editable = [false];
   }
   attribute OrderQty Number {
      fetch = "inventory_part_in_stock_api.get_avail_plan_qty_loc_type(contract_            => contract,
                                                                       part_no_             => part_no,
                                                                       configuration_id_    => configuration_id,
                                                                       activity_seq_        => null,
                                                                       qty_type_            => 'ONHAND',
                                                                       date_requested_      => null,
                                                                       location_type1_db_   => 'PICKING',
                                                                       location_type2_db_   => 'F',
                                                                       location_type3_db_   => 'SHIPMENT',
                                                                       location_type4_db_   => 'MANUFACTURING')";
      label = "Usable Qty";
      maxlength = 9;
      editable = [false];
   }
   attribute OrderPointQty Number {
      fetch = "Inventory_Part_Planning_API.Get_Order_Point_Qty(CONTRACT, PART_NO)";
      label = "Order Point Qty";
      maxlength = 9;
      editable = [false];
   }
   attribute SafetyStock Number {
      fetch = "Inventory_Part_Planning_API.Get_Safety_Stock(CONTRACT, PART_NO)";
      label = "Safety Stock";
      maxlength = 9;
      editable = [false];
   }
   attribute YAxisLabel Text {
      fetch = "null";
   }
   attribute Objkey Text {
      fetch = "Sys_Guid()";
   }

   reference PartNoRef(Contract, PartNo) to InventoryPartLov(Contract, PartNo);
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

virtual OrderSupplyDemandDayVirtual {
   crud = Read;
   attribute SortDate Text;
   attribute OrderPointQty Number {
      label = "Order Point Qty";
   }
   attribute SafetyStock Number;
   attribute UsableQty Number;
}

virtual OrderSupplyDemandWeekVirtual {
   crud = Read;
   attribute SortDate Text;
   attribute OrderPointQty Number {
      label = "Order Point Qty";
   }
   attribute SafetyStock Number;
   attribute UsableQty Number;
}

virtual OrderSupplyDemandMonthVirtual {
   crud = Read;
   attribute SortDate Text;
   attribute OrderPointQty Number {
      label = "Order Point Qty";
   }
   attribute SafetyStock Number;
   attribute UsableQty Number;
}

---------------------------------- ACTIONS ----------------------------------
action CreateGraphData {
   initialcheck implementation;
   parameter ParentObjkey Text;
   parameter PartNo Text;
   parameter Contract Text;
   parameter ConfigurationId Text;
   parameter OrderQty Number;
   parameter OrderPointQty Number;
   parameter SafetyStock Number;

   ludependencies = OrderSupplyDemandDayVirtual;
   ludependencies = OrderSupplyDemandWeekVirtual;
   ludependencies = OrderSupplyDemandMonthVirtual;
}

--------------------------------- FUNCTIONS ---------------------------------
function GetOrderSupplyDemandDayGraphData List<Entity(OrderSupplyDemandDayVirtual)> {
   parameter Objkey Text;
   where = "parent_objkey = :Objkey";
}
function GetOrderSupplyDemandWeekGraphData List<Entity(OrderSupplyDemandWeekVirtual)> {
   parameter Objkey Text;
   where = "parent_objkey = :Objkey";
}
function GetOrderSupplyDemandMonthGraphData List<Entity(OrderSupplyDemandMonthVirtual)> {
   parameter Objkey Text;
   where = "parent_objkey = :Objkey";
}
-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------



