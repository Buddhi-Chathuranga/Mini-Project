---------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ----------------------------------------------------------
-- 2021-10-22  MaEelk  SC21R2-4998, Added Part Move Tax Id.
-- 2020-10-12  JaThlk  SCZ-11850, Modified the property description, to fetch the value using get methods rather than accessing them through references to avoid costly left outer joins.
-- 2020-09-28  JaThlk  SC2020R1-1187, Added the fields, ManufacturerNo, Country, ManufacturerPartNo, ManufacturedDate, ManufacturerLotBatchNo and ManufacturerSerialNo.
-- 2020-07-03  WaSalk  GESPRING20-4880, Modified columns added by gelr functionalities to columnvisible = [false].
-- 2020-04-15  carabr  GEFALL20-492, gelr: incoming_fiscal_note, added FiscalNoteNumber and FiscalNoteItem fields to InventoryTransactionsHistoryList
-- 2020-02-05  kusplk  GESPRING20-1802, Added DeliveryReasonId, AltDelNoteNo and DelNoteDate columns to InventoryTransactionsHistoryList.
-- 2020-01-02  NISMLK  MFSPRING20-711, Added OwnershipTransferReasonId to InventoryTransactionsHistoryList.
-- 2019-07-25  ChFolk  SCUXXW4-22798, Included fragment ProjectDetailsFieldSet.
-- 2019-07-09  ChFolk  SCUXXW4-12231, implemented ViewConfigurationCommand.
-- 2019-06-10  JaThlk  SCUXXW4-12418, Fixed the issue in AltHandlingUnitLabelId.
-- 2019-03-07  ChFolk  SCUXXW4-16871, Added dynamic dependency where it is missing.
-- 2019-01-11  fandse  SCUXXW4-12833, Added support for Pre Posting, removed Get_Enabled_Code_Parts since this is handled inside the assistant instead
-- 2018-12-26  JaThlk  SCUXXW4-6792, Fixed the navigation in ViewConfigurationCommand and changed the mode to SingleRecord.
-- 2018-08-13  ChFolk  SCUXXW4-6790, Converted from tbwGenInvtran using MTG Version: 1.25
---------------------------------------------------------------------------------
client InventoryTransactionsHistory;
component INVENT;
layer Core;
projection InventoryTransactionsHistoryHandling;
include fragment InventoryLocation19Selector;
include fragment UserAllowedSiteLovSelector;
include fragment InventoryPartLovSelector;
include fragment InventoryTransactionCodeLovSelector;
include fragment PrePostingWithSourceAssistant;
include fragment ProjectDetailsFieldSet;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry InventoryTransactionHistoryNavEntry parent InventNavigator.WarehouseManagementTransactionHistory at index 300 {
      label = "Inventory Transactions History";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page List using InventoryTransactionsHistorySet {
   label = "Inventory Transactions History";
   startupmode = search;
   list InventoryTransactionsHistoryList {
      details = "page/InventoryTransactionHistory/Form?$filter=TransactionId eq $[TransactionId]";
   }
}
-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command ModifyDateAppliedCommand for InventoryTransactionsHistory {
   label = "Modify Date Applied";
   mode = SelectedRecords;
   enabled = [not HasTransferredPostings];
   variable NewDateAppliedDate {
      type = Date;
   }
   bulkexecute {
      dialog ModifyDateAppliedDialog into(NewDateAppliedDate) {
         when OK {
            call ModifyWithAppliedDate(Selection, NewDateAppliedDate);
            exit;
         }
         when CANCEL {
            exit;
         }
      }
   }
}

command ViewConfigurationCommand for InventoryTransactionsHistory {
   label = "View Configuration";
   mode = SingleRecord;
   enabled = [ConfigurationId != "*"];
   variable Mode;
   execute {
      set Mode = "View";
      navigate "assistant/PartConfigurationAssistant/EditConfiguration?$action=InitConfiguration{  VarMode:$[Mode],
                                                                                                   VarPartNo:$[PartNo],
                                                                                                   VarConfigurationId:$[ConfigurationId]}";
   }
}

command PrePostingCommand for InventoryTransactionsHistory {
   label = "Pre Posting";
   mode = SingleRecord;
   enabled = [AccountingHasErrors and(TransactionCode = "NISS" or TransactionCode = "NREC" or TransactionCode = "CO-NISS") and(PartOwnershipDb = "CONSIGNMENT" or PartOwnershipDb = "COMPANY OWNED")];
   variable StrCode {
      type = Text;
   }
   variable SourceIdentifierVar {
      type = Text;
   }
   execute {
      if [TransactionCode = "NISS" or TransactionCode = "CO-NISS"] {
         set StrCode = "M110";
      }
      else {
         set StrCode = "M111";
      }
      set SourceIdentifierVar = "Inventory Transaction ${TransactionId}" {
         translatable = true;
      }
      assistant PrePostingWithSourceAssistant(StrCode, PreAccountingId, Contract, false, SourceIdentifierVar) {
         when NO {
            exit CANCEL;
         }
      }
   }
}

--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------
group NewDataAppliedGroup for NewDateAppliedStructure {
   label = "New Date Applied";
   field DateApplied;

}

----------------------------------- LISTS -----------------------------------
list InventoryTransactionsHistoryList for InventoryTransactionsHistory {
   field TransactionId {
      size = Small;
   }
   lov TransactionCodeRef with ReferenceInventoryTransactionCodeLovSelector {
      description = TransactionCodeDesc;
   }
   lov PartNoRef with ReferenceInventoryPartLovSelector {
      description = PartDescription;
      label = "Part";
   }
   lov ContractRef with ReferenceUserAllowedSiteLovSelector {
      description = ContractDescription;
   }
   field ConfigurationIdRef {
      size = Small;
   }
   field Direction {
      size = Small;
   }
   measure Quantity(UnitMeas) {
      size = Small;
   }
   field CatchDirection {
      size = Small;
   }
   measure CatchQuantity(CatchUoM) {
      size = Small;
   }
   lov LocationNoRef with ReferenceInventoryLocation19Selector {
      size = Small;
   }
   field HandlingUnitIdRef {
      size = Small;
   }
   lov HandlingUnitTypeIdRef with ReferenceHandlingUnitTypeSelector {
      label = "Handling Unit Type";
      description = HandlingUnitTypeDesc;
   }
   field Sscc {
      label = "SSCC";
   }
   field AltHandlingUnitLabelId {
      label = "Alt Handling Unit Label ID";
   }
   field Warehouse {
      label = "Warehouse ID";
      size = Small;
   }
   field Bay {
      size = Small;
   }
   field RowNo {
      size = Small;
   }
   field Tier {
      size = Small;
   }
   field Bin {
      size = Small;
   }
   field LotBatchNo {
      size = Small;
   }
   field SerialNo {
      size = Small;
   }
   field SourceRef1 {
      size = Small;
   }
   field SourceRef2 {
      size = Small;
   }
   field SourceRef3 {
      size = Small;
   }
   field SourceRef4 {
      size = Small;
   }
   field SourceRef5 {
      size = Small;
   }
   lov ConditionCodeRef with ReferenceConditionCodeSelector {
      description = ConditionCodeDesc;
      label = "Condition Code";
   }
   field WaivDevRejNo {
      size = Small;
   }
   field EngChgLevel {
      size = Small;
   }
   field ExpirationDate;

   field SourceRefType {
      size = Small;
   }
   field Cost {
      size = Small;
   }
   field InventoryCost {
      size = Small;
   }
   field TotalCost {
      size = Small;
   }
   field DateCreated;
   field DateTimeCreated {
      size = Small;
   }
   field Source {
      size = Small;
   }
   field Userid {
      size = Small;
   }
   field DateApplied;

   field PartstatFlag {
      size = Small;
   }
   field ValuestatFlag {
      size = Small;
   }
   field RejectCode {
      size = Small;
   }
   field PartOwnership {
      size = Small;
   }
   field Owner {
      size = Small;
   }
   @DynamicComponentDependency PURCH
   @DynamicComponentDependency ORDER
   field OwnerName {
      size = Small;
   }
   field PreviousPartOwnership {
      size = Small;
   }
   field PreviousOwner {
      size = Small;
   }
   @DynamicComponentDependency PURCH
   @DynamicComponentDependency ORDER
   field PreviousOwnerName {
      size = Small;
   }
   lov OwnershipTransferReasonRef with ReferenceOwnershipTransferReasonSelector {
      description = OwnershipTransferReasonRef.Description;
      columnvisible = [false];
   }
   fieldset ProjectDetailsFieldSet;
   @DynamicComponentDependency PROJ
   field ActivitySeqRef {
      size = Small;
   }
   field TopParentHandlingUnitId {
      size = Small;
   }
   lov TopParentHandlingUnitTypeIdRef with ReferenceHandlingUnitTypeSelector {
      description = TopParentHuTypeDesc;
      label = "Top Parent Handling Unit Type";
   }
   field TopParentSscc {
      size = Small;
   }
   field TopParentAltHandlingUnitLabelId {
      size = Small;
   }
   field HasErroneousPostings {
      size = Small;
   }
   field HasTransferredPostings {
      size = Small;
   }
   field ReportEarnedValue {
      size = Small;
   }
   field TransactionReportId {
      size = Small;
   }
   field ModifyDateAppliedDate;
   field ModifyDateAppliedUser {
      size = Small;
   }
   field ManufacturerNo {
      columnvisible = [false];
   }
   field Country {
      columnvisible = [false];
   }
   field ManufacturerPartNo {
      columnvisible = [false];
   }
   field ManufacturerSerialNo {
      columnvisible = [false];
   }
   field ManufacturerLotBatchNo {
      columnvisible = [false];
   }
   field ManufacturedDate {
      columnvisible = [false];
   }
   -- gelr:warehouse_journal, begin
   field DeliveryReasonId {
      size = Small;
      columnvisible = [false];
   }
   field DeliveryReasonDescription {
      size = Small;
      columnvisible = [false];
   }
   field DelNoteDate {
      columnvisible = [false];
   }
   field AltDelNoteNo {
      size = Small;
      columnvisible = [false];
   }
   -- gelr:warehouse_journal, end
   -- gelr: incoming_fiscal_note, begin
   @DynamicComponentDependency RCEIPT
   field FiscalNoteNumber {
      size = Small;
      columnvisible = [false];
      editable = [IncomingFiscalNoteEnabled];
   }
   @DynamicComponentDependency INVOIC
   field FiscalNoteItem {
      size = Small;
      columnvisible = [false];
      editable = [IncomingFiscalNoteEnabled];
   }
   field PartMoveTaxId;
   -- gelr: incoming_fiscal_note, end
   commandgroup CommandGroupCmdGroup {
      command ModifyDateAppliedCommand;
      command ViewConfigurationCommand;
      command PrePostingCommand;
   }
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------
dialog ModifyDateAppliedDialog for NewDateAppliedStructure {
   label = "New Date Applied";
   output(DateApplied);
   group NewDataAppliedGroup;
   command Ok {
      enabled = [DateApplied != null];
   }
   command Cancel;
}
---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

