-----------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------
-- 2021-03-02  GrGalk  Bug 157982 (SCZ-12580), Replaced usages of the datasource InventoryPartTracing with InventoryPartTracingDetail and InventoryPartTracingHeader.
-- 2020-07-02  NiAslk  Bug 154562 (SCZ-10484), Modified GenerateTreeCommand to pass the correct Tree ID to fetch the child node
-- 2018-12-14  ShKolk  SCUXXW4-6402, Created from frmPartOriginTrace
-----------------------------------------------------------------------------
client InventoryPartOriginTracing;
component INVENT;
layer Core;
projection InventoryPartOriginTracingAnalysis;

--------------------------------- FRAGMENTS ---------------------------------
include fragment InventoryPartTracingList;
include fragment InventoryPartLovSelector;
include fragment UserAllowedSiteLovSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry InventoryPartOriginTracingNavEntry parent InventNavigator.WarehouseManagementTransactionHistory at index 600 {
      label = "Inventory Part Origin Tracing";
      tree Tree;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using InventoryTransactionHistSet {
   label = "Inventory Part Origin Tracing";
   selector InventoryTransactionHistSelector;
   group InventoryTransactionHistGroup;
   tabs {
      tab {
         label = "Part Origin";
         list InventoryPartTracingList using FetchNodesList(TreeId);
      }
   }
   command QualityControlAnalysisResultInventCommand;
}

page DetailForm using InventoryPartTracingHeaderSet {
   label = "Inventory Part Origin Tracing";
   selector InventoryPartTracingSelector;
   group InventoryPartTracingGroup;
   tabs {
      tab {
         label = "Part Origin Structure";
         list InventoryTransactionTracingList(InventoryTransactionTracingArray);
      }
      tab {
         label = "Part Origin";
         list InventoryPartTracingList(InventoryPartTracingArray);
      }
   }
   command QualityControlAnalysisResultInventCommand;
}

--------------------------------- COMMANDS ----------------------------------
command GenerateTreeCommand for InventoryTransactionHist {
   label = "Generate Tree";
   enabled = [true];
   execute {
      call GeneratePartOriginTree(TreeId, PartNo, SerialNo, LotBatchNo, WaivDevRejNo, Contract) into TreeId;
   }
}
command InventoryPartUsageTracingCommand {
   label = "Inventory Part Usage Tracing";
   mode = SingleRecord;
   enabled = [true];
   execute {
      navigate "tree/InventoryPartUsageTracing/Tree?$filter=Contract eq $[Contract] and PartNo eq $[PartNo] and LotBatchNo eq $[LotBatchNo] and SerialNo eq $[SerialNo] and WaivDevRejNo eq $[WaivDevRejNo] and ConditionCode eq $[ConditionCode]";
   }
}

----------------------------------- LISTS -----------------------------------
@Override
list InventoryTransactionTracingList for InventoryTransactionTracing {
   commandgroup NavigationsCmdGroup {
      command InventoryPartUsageTracingCommand;
   }
}

@Override
list InventoryPartTracingList for InventoryPartTracingDetail {
   commandgroup NavigationsCmdGroup {
      command InventoryPartUsageTracingCommand;
   }
}

----------------------------------- TREES -----------------------------------
tree Tree using InventoryTransactionHistSet {
   label = "Inventory Part Origin Tracing";
   selector InventoryTransactionHistSelector;

   rootnode RootNode {
      label = "Tracing of part: ${PartNo} : ${Contract}";
      navigate {
         page Form {
            filter(Contract, Contract);
            filter(PartNo, PartNo);
            filter(SerialNo, SerialNo);
            filter(LotBatchNo, LotBatchNo);
            filter(WaivDevRejNo, WaivDevRejNo);
         }
      }
      connections {
         node Nodes using FetchDetailNodeLevelOne(TreeId);
      }
   }
   node Nodes for InventoryPartTracingHeader {
      label = "${SourceApplication} ${SourceRef} ${PartNo} ${LotBatchNo} ${SerialNo} ${WaivDevRejNo} Site ${Contract}";
      navigate {
         page DetailForm {
            filter(TreeId, TreeId);
            filter(NodeId, NodeId);
         }
      }
      connections {
         node Nodes using FetchDetailNodes(TreeId, NodeId);
      }
   }
}
