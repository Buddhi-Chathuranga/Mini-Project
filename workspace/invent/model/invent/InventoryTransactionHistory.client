---------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ----------------------------------------------------------
-- 2021-08-18  WaSalk  SC21R2-2322, Added DateApplied to AccountingList.
-- 2021-06-14  DiJwlk  Bug 159656 (SCZ-15168), Modified AccountingList.ErrorDesc, added multiline = true to enable Text Editor feature.
-- 2020-01-02  NISMLK  MFSPRING20-711, Added OwnershipTransferReasonId to OwnershipGroup.
-- 2018-12-26  JaThlk  SCUXXW4-6096, Fixed the navigation in ViewConfigurationCommand and changed the mode to SingleRecord.
-- 2018-10-13  milise  SCUXXW4-6094, Converted from frmGenInvtran using MTG Version: 1.31
---------------------------------------------------------------------------------
client InventoryTransactionHistory;
component INVENT;
layer Core;
projection InventoryTransactionHistoryHandling;
include fragment InventoryTransactionCodeLovSelector;
include fragment InventoryPartLovSelector;
include fragment UserAllowedSiteLovSelector;
include fragment InventoryLocation19Selector;
include fragment HandlingUnitLovSelector;
warningsenabled = InventoryTransactionHist;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry InventoryTransactionHistoryNavEntry parent InventNavigator.WarehouseManagementTransactionHistory at index 200 {
      label = "Inventory Transaction History";
      page Form home InventoryTransactionHist;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using InventoryTransactionHistSet {
   label = "Inventory Transaction History";
   startupmode = search;
   selector InventoryTransactionHistSelector;
   group GenInvtranGroup {
      label = "";
   }
   tabs {
      tab {
         label = "General";
         arrange {
            group LocationGroup;
            group DetailsGroup;
            group TracingGroup;
            group SourceGroup;
            group OwnershipGroup;
            group HandlingUnitGroup;
            group ModifyDateAppliedLogGroup;
            group MiscGroup;
         }
      }
      tab {
         label = "Accounting";
         list AccountingList(GenAccountingArray);
      }
      tab {
         label = "Cost Detail";
         list InvTranCostList(InventoryTransactionCostArray);
      }
   }
   command ViewConfigurationCommand;
}

--------------------------------- COMMANDS ----------------------------------
command ViewConfigurationCommand for InventoryTransactionHist {
   label = "View Configuration";
   mode = SingleRecord;
   enabled = [ConfigurationId != "*"];
   variable Mode;
   execute {
      set Mode = "View";
      navigate "assistant/PartConfigurationAssistant/EditConfiguration?$action=InitConfiguration{  VarMode:$[Mode],
                                                                                                   VarPartNo:$[PartNo],
                                                                                                   VarConfigurationId:$[ConfigurationId]}";
   }
}
command TransactionRevaluationEventsCommand for MpccomAccounting {
   label = "Transaction Revalution Events";
   mode = SelectedRecords;
   enabled = [TransRevalEventId != null];
   bulkexecute {
      bulknavigate "page/TransactionRevaluationEvents/List?$filter=EventId eq $[TransRevalEventId]";
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector InventoryTransactionHistSelector for InventoryTransactionHist {
   orderby = TransactionId desc;
   label = "${TransactionId} - ${TransactionCode} - ${PartNo} - ${Contract} - ${DateCreated} - ${DateTimeCreated} - ${ConfigurationId}";
   static TransactionId;
   static TransactionCode;
   static PartNo;
   static Contract;
   static DateCreated;
   static DateTimeCreated;
   static ConfigurationId;
}

---------------------------------- GROUPS -----------------------------------
group GenInvtranGroup for InventoryTransactionHist {

   field TransactionId;
   lov TransactionCodeRef with ReferenceInventoryTransactionCodeLovSelector {
      description = MpccomSystemEventRef.Description;
      size = Large;
   }
   lov InventoryPartRef with ReferenceInventoryPartLovSelector {
      label = "Part";
      description = PartDescription;
      size = Large;
   }
   lov ContractRef with ReferenceUserAllowedSiteLovSelector {
      size = Large;
      description = SiteRef.Description;
   }
   field ConfigurationId;
   field DateCreated;
   field DateTimeCreated;
   field Userid {
      label = "Created By";
      size = Small;
   }
}
group LocationGroup for InventoryTransactionHist {
   label = "Location";
   lov LocationNoRef with ReferenceInventoryLocation19Selector {
      size = Small;
   }
   field Warehouse {
      label = "Warehouse ID";
      size = Small;
   }
   field Bay {
      size = Small;
      label = "Bay ID";
   }
   field RowId {
      size = Small;
      label = "Row ID";
   }
   field Tier {
      size = Small;
      label = "Tier ID";
   }
   field Bin {
      size = Small;
      label = "Bin ID";
   }
   field LocationType;
   field LocationGroup {
      size = Small;
   }
   field LocationGroupDescription {
      size = Small;
   }
}
group TracingGroup for InventoryTransactionHist {
   label = "Tracing";
   field LotBatchNo;
   field SerialNo;
   field WaivDevRejNo {
      size = Small;
   }
   field EngChgLevel {
      size = Small;
   }
   lov ConditionCodeRef with ReferenceConditionCodeSelector {
      label = "Condition Code";
      description = ConditionCodeRef.Description;
   }
   field ExpirationDate;
}

group SourceGroup for InventoryTransactionHist {
   label = "Source";
   field SourceRef1 {
      size = Small;
   }
   field SourceRef2 {
      size = Small;
   }
   field SourceRef3 {
      size = Small;
   }
   field SourceRef4 {
      size = Small;
   }
   field SourceRef5 {
      size = Small;
   }
   field SourceRefType;
}
group DetailsGroup for InventoryTransactionHist {
   label = "Quantity and Cost";
   field Direction {
      size = Small;
   }
   measure Quantity(InventoryUoMRef.UnitCode);
   field CatchDirection {
      size = Small;
   }
   measure CatchQuantity(CatchUom);
   field Cost;
   field InventoryCost;
   field MiscCost;
   field TotalCost;

}
group OwnershipGroup for InventoryTransactionHist {
   label = "Ownership";
   @DynamicComponentDependency PROJ
   field ProjectIdRef {
      size = Small;
   }
   @DynamicComponentDependency PROJ
   field ActivitySeqRef;
   field PartOwnership {
      size = Small;
   }
   field Owner {
      size = Small;
   }
   @DynamicComponentDependency PURCH
   @DynamicComponentDependency ORDER
   field OwnerName {
      size = Small;
   }
   field PreviousPartOwnership {
      size = Small;
   }
   field PreviousOwner {
      size = Small;
   }
   @DynamicComponentDependency PURCH
   @DynamicComponentDependency ORDER
   field PreviousOwnerName {
      size = Small;
   }
   lov OwnershipTransferReasonRef with ReferenceOwnershipTransferReasonSelector {
      description = OwnershipTransferReasonRef.Description;
      filterlabel = "Ownership Transfer Reason";
   }
}
group MiscGroup for InventoryTransactionHist {
   label = "Miscellaneous";
   field RejectCode {
      size = Small;
   }
   field ReturnScrapDesc {
      size = Small;
   }
   field TransactionReportId {
      size = Small;
   }
   field PartstatFlag {
      size = Small;
   }
   field ValuestatFlag {
      size = Small;
   }
   field Source {
      label = "Notes";
      height = small;
   }
}
group HandlingUnitGroup for InventoryTransactionHist {
   label = "Handling Unit";
   lov HandlingUnitRef with ReferenceHandlingUnitLovSelector {
      label = "Handling Unit ID";
   }
   field HandlingUnitRef.HandlingUnitTypeId {
      size = Small;
      label = "Handling Unit Type ID";
   }
   field TypeDescription;
   field HandlingUnitRef.Sscc {
      label = "SSCC";
   }
   field HandlingUnitRef.AltHandlingUnitLabelId {
      label = "Alt Handling Unit Label ID";
   }
}
group ModifyDateAppliedLogGroup for InventoryTransactionHist {
   label = "Date Applied Log";
   field DateApplied;
   field ModifyDateAppliedDate;
   field ModifyDateAppliedUser;
}

----------------------------------- LISTS -----------------------------------
list InvTranCostList for InventoryTransactionCost {
   @DynamicComponentDependency COST
   lov CostBucketRef with ReferenceCostBucketSelector {
      description = CostBucketRef.Description;
      label = "Cost Bucket ID";
   }
   @DynamicComponentDependency COST
   lov CostBucketPostingGroupRef with ReferenceCostBucketPostingGroupSelector {
      label = "Posting Cost Group ID";
      description = CostBucketPostingGroupRef.Description;
   }
   @DynamicComponentDependency COST
   field CostBucketRef.CostBucketPublicType {
      label = "Cost Bucket Cost Type";
   }
   field CostSourceId;
   field CostSourceRef.Description {
      label = "Cost Source Description";
   }
   field AccountingYear;
   field UnitCost;
}
list AccountingList for MpccomAccounting {
   orderby = Seq;
   field StrCode {
      size = Small;
   }
   field PostingCtrlPostingTypeRef.Description {
      label = "Posting Type Description";
   }

   field DebitAmount;
   field CreditAmount;
   field DebitCurrAmount;
   field CreditCurrAmount;
   field CurrencyCode {
      size = Small;
   }
   field CurrencyRate;
   field ConversionFactor;
   field StatusCode {
      size = Small;
   }
   field StatusDescription {
      size = Small;
   }
   field AccountNo {
      size = Small;
      label = "${parent.LabelCodenoA}";
   }
   field CodenoB {
      size = Small;
      label = "${parent.LabelCodenoB}";
   }
   field CodenoC {
      size = Small;
      label = "${parent.LabelCodenoC}";
   }
   field CodenoD {
      size = Small;
      label = "${parent.LabelCodenoD}";
   }
   field CodenoE {
      size = Small;
      label = "${parent.LabelCodenoE}";
   }
   field CodenoF {
      size = Small;
      label = "${parent.LabelCodenoF}";
   }
   field CodenoG {
      size = Small;
      label = "${parent.LabelCodenoG}";
   }
   field CodenoH {
      size = Small;
      label = "${parent.LabelCodenoH}";
   }
   field CodenoI {
      size = Small;
      label = "${parent.LabelCodenoI}";
   }
   field CodenoJ {
      size = Small;
      label = "${parent.LabelCodenoJ}";
   }
   field EventCode {
      size = Small;
   }
   field SystemEventDescription {
      size = Small;
   }
   field ErrorDesc {
      size = Small;
      multiline = true;
   }
   field ActivitySeq;
   field VoucherNo;
   field VoucherType {
      size = Small;
   }
   field AccountingYear;
   field AccountingPeriod;
   field BucketPostingGroupId {
      size = Small;
   }
   field CostSourceId {
      size = Small;
   }
   field TransRevalEventId;
   field DateApplied;
   fieldranking StrCode, PostingCtrlPostingTypeRef.Description, AccountNo, DebitAmount, CreditAmount, DebitCurrAmount, CreditCurrAmount, CurrencyCode, CurrencyRate, EventCode;

   command TransactionRevaluationEventsCommand;

}
