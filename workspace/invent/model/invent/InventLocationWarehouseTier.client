-------------------------------------------------------------------------------------------------------
--  Date        Sign    History
--  ----------  ------  --------------------------------------------------------------------------------
--  2022-02-02  BwItLk  SC21R2-7297, Modified GetHandlingUnitInStockDetails method parameters  by adding BayId, RowId, TierId, BinId to filter out data in Warehouse Navigator in each level.
--  2019-05-02  fandse  SCUXXW4-17693, Added details navigation for Parts In Stock tab and Handling Units In Stock tab.
--  2019-02-15  bajelk  SCUXXW4-16026, Deleted objstate attribute inside overrided InventLocationWarehouseTier entity.
--  2019-01-27  bajelk  SCUXXW4-15286, Deleted the "Hidden" status of Storage Capability LOV in Tier Values List.
--  2018-11-16  KoDelk  SCUXXW4-6191, Converted from frmInventLocationWarehouseTier using MTG Version 1.31.
--  ----------  ------  --------------------------------------------------------------------------------
client InventLocationWarehouseTier;
component INVENT;
layer Core;
projection InventLocationWarehouseTierHandling;
include fragment ClearStorageCharacteristics;
include fragment InventoryLocationsTab;
include fragment InventoryPartInStockList;
include fragment HandlingUnitsInStockList;
include fragment ModifyCapacitiesAndConditionsAssistant;

----------------------------- NAVIGATOR ENTRIES -----------------------------

-------------------------------- MAIN PAGES ---------------------------------
page Form using WarehouseBayTierSet {
   label = "Warehouse Navigator";
   editmode = MultiField;
   selector WarehouseBayTierSelector;
   group InventLocationWarehouseTierGroup;
   tabs {
      tab {
         label = "General";
         arrange {
            group ReceiptControlGroup;
            arrange {
               group VisibilityControlGroup;
               group DefaultPartAvailabilityControlGroup;
            }
         }
      }
      tab {
         label = "Capacities and Conditions";
         singleton CapacitiesAndConditionsSingleton(WarehouseBayTierArray);
         markdowntext {
            text = "|             | Tier Value | Operative Value | Operative Value Source | UoM |
            | ----------- | ---------: | --------------: | --------------: | --: |
            | **Bin Cubic Capacity** | | | | |
            | Width           | ${BinWidthCapacity} | ${BinWidthCapacityOppValue} | ${BinWidthSource} | ${LengthUom} |
            | Height          | ${BinHeightCapacity} | ${BinHeightCapacityOppValue} | ${BinHeightSource} | ${LengthUom} |
            | Depth           | ${BinDeptCapacity} | ${BinDeptCapacityOppValue} | ${BinDepthSource} | ${LengthUom} |
            | Volume          | ${BinVolumeCapacity} | ${BinVolumeOperativeValue} | ${BinVolumeSource} | ${VolumeUom} |
            | **Carrying Capacity** | | | | |
            | Tier            | ${TierCarryingCapacity} | ${TierCarryingCapacityOppValue} | ${TierCarryingCapacitySource} | ${WeightUom} |
            | Bin             | ${BinCarryingCapacity} | ${BinCarryingCapacityOppValue} | ${BinCarryingCapacitySource} | ${WeightUom} |
            | **Storage Conditions** | | | | |
            | Min Temperature | ${BinMinTemperature} | ${BinMinTemperatureOppValue} | ${MinTemperatureSource} | ${TemperatureUom} |
            | Max Temperature | ${BinMaxTemperature} | ${BinMaxTemperatureOppValue} | ${MaxTemperatureSource} | ${TemperatureUom} |
            | Min Humidity    | ${BinMinHumidity} | ${BinMinHumidityOppValue} | ${MinHumiditySource} | ${HumidityUom} |
            | Max Humidity    | ${BinMaxHumidity} | ${BinMaxHumidityOppValue} | ${MaxHumiditySource} | ${HumidityUom} |";
         }
      }
      tab {
         label = "Handling Unit Capacity";
         list WarehouseTierHuCapacityList(WarehouseTierHuCapacityArray);
      }
      tab {
         label = "Capabilities";
         arrange {
            list WarehouseTierCapabilityList(WarehouseTierCapabilityArray);
            list WhseTierCapabilityOperativeList(WarehouseBinCapabilityArray);
         }
      }
      tab {
         label = "Locations";
         list WarehouseBayBinList(WarehouseBayBinArray);
      }
      tab {
         label = "Parts In Stock";
         list InventoryPartInStockList(InventoryPartInStockArray) {
            details = "page/QuantityPerLocationDetails/Form?$filter=PartNo eq $[PartNo] and Contract eq $[Contract] and ConfigurationId eq $[ConfigurationId] and LocationNo eq $[LocationNo] and LotBatchNo eq $[LotBatchNo] and SerialNo eq $[SerialNo] and EngChgLevel eq $[EngChgLevel] and WaivDevRejNo eq $[WaivDevRejNo] and ActivitySeq eq $[ActivitySeq] and HandlingUnitId eq $[HandlingUnitId]";
         }
      }
      tab {
         label = "Handling Units In Stock";
         list HandlingUnitsInStockList using GetHandlingUnitInStockDetails(HandlingUnitsSearchContext.ShowHuLevel, Contract, WarehouseId, BayId, RowId, TierId, BinId) {
            details = "tree/HandlingUnit/HandlingUnitStructureTree?$filter=HandlingUnitId eq $[HandlingUnitId]";
            searchcontext HandlingUnitsSearchContext {
               defaults = GetHandlingUnitsSearchContextDefaults();
            }
         }
         list InventoryPartInStockForHuList(InventoryPartsInStockForHuArray) bind HandlingUnitsInStockList;
      }
   }

   commandgroup CommandGroupCmdGroup {

      command MethodsClearCharsCommand;
   }
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command MethodsClearCharsCommand for WarehouseBayTier {
   label = "Clear Storage Characteristics";
   enabled = [true];
   execute {
      dialog ClearStorageCharacteristicsDialog("Tier", TierId, Contract, WarehouseId, BayId, TierId) {
         when OK {
            success("Cleared Storage Characteristics");
         }
      }
   }
}
command CustomRemoveCapabilityCommand for WarehouseBinCapability {
   label = "Remove Capability";
   mode = SelectedRecords;

   bulkexecute {
      call RemoveCapability(Selection);
   }
}

command EditCapacitiesAndConditionsCommand for WarehouseBayTier {
   label = "Edit";
   enabled = [true];
   icon = "edit";
   style = IconOnly;
   execute {
      assistant ConnectCustomersAssistant("WarehouseBayTier", Contract, WarehouseId, BayId, "", TierId, "") {
         when OK {
            success("Capacities and Conditions has been saved.");
         }
      }
   }
}
--------------------------------- SELECTORS ---------------------------------
@Override
selector PartAvailabilityControlSelector for PartAvailabilityControl {
   label = "${Description}";
   static Description;
   fieldorder = AvailabilityControlId, Description, Objstate;
}
@Override
selector HandlingUnitTypeSelector for HandlingUnitType {
   static Description;
}
@Override
selector StorageCapabilitySelector for StorageCapability {
   static Description;
   fieldorder = StorageCapabilityId, Description, Objstate;
}

---------------------------------- GROUPS -----------------------------------
group InventLocationWarehouseTierGroup for WarehouseBayTier {
   field TierId {
      size = Small;
   }
   field Description;
}
group ReceiptControlGroup for WarehouseBayTier {
   label = "Receipt Control";

   field ReceiptsBlockedDb {
      editable = [not ReceiptsBlockedParentDb];
      size = Small;
   }
   field ReceiptsBlockedOn;
   field ReceiptToOccupiedBlockedDb {
      editable = [not ReceiptToOccupiedBlockedParentDb];
      size = Small;
   }
   field ReceiptToOccupiedBlockedOn;
   field MixOfPartNumberBlockedDb {
      editable = [not MixOfPartNumberBlockedParentDb];
      size = Small;
   }
   field MixOfPartNumberBlockedOn;
   field MixOfCondCodesBlockedDb {
      editable = [not MixOfCondCodesBlockedParentDb];
      size = Small;
   }
   field MixOfCondCodesBlockedOn;
   field MixOfLotBatchNoBlockedDb {
      editable = [not MixOfLotBatchNoBlockedParentDb];
      size = Small;
   }
   field MixOfLotBatchNoBlockedOn;
   field ExcludeStorageReqValDb {
      editable = [not ExcludeStorageReqValParentDb];
      size = Small;
   }
   field ValidationExcludedOn;
}
group VisibilityControlGroup for WarehouseBayTier {
   label = "Visibility Control Group";

   field HideInWhseNavigatorDb;
   field HiddenLevelsExistBelow;
}
group DefaultPartAvailabilityControlGroup for WarehouseBayTier {
   label = "Default Part Availability Control";
   lov AvailabilityControlIdRef with PartAvailabilityControlSelector {
      description = AvailabilityControlIdRef.Description;
   }
   field OperativeValue;
   field OperativeValueSource;
   field RouteOrder {
      size = Small;
   }
}
----------------------------------- LISTS -----------------------------------
list WarehouseTierHuCapacityList for WarehouseTierHuCapacity {
   label = "Handling Unit Capacity";

   lov HandlingUnitTypeIdRef with HandlingUnitTypeSelector {
      description = Description;
   }
   field BinHuTypeCapacity;
}
list WarehouseTierCapabilityList for WarehouseTierCapability {
   label = "Tier Values";
   lov StorageCapabilityIdRef with StorageCapabilitySelector using GetTierValuesActiveState {
      description = StorageCapabilityIdRef.Description;
   }
   field RemovedDb {
      size = Small;
   }
}
list WhseTierCapabilityOperativeList for WarehouseBinCapability {
   label = "Operative Value";
   lov StorageCapabilityIdRef with StorageCapabilitySelector {
      description = StorageCapabilityIdRef.Description;
   }
   field Source {
      size = Small;
   }

   commandgroup CommandGroupCmdGroup {

      command CustomRemoveCapabilityCommand;
   }
}

--------------------------------- SINGLETON ---------------------------------
singleton CapacitiesAndConditionsSingleton for WarehouseBayTier {
   commandgroup ModifyCommandGroup {
      command EditCapacitiesAndConditionsCommand;
   }
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------