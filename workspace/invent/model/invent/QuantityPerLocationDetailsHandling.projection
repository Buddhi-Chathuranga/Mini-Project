----------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------------
-- 2019-03-07  ChFolk  SCUXXW4-16871, Added dynamic dependency where it is missing.
-- 2018-06-05  SuDelk  SCUXXW4-6226, Converted from frmInventoryPartLocation using MTG Version: 1.17
----------------------------------------------------------------------------------------------------------
projection QuantityPerLocationDetailsHandling;
component INVENT;
layer Core;
description "Use this window to view details about a particular part at a particular location";
category Users;
include fragment UserAllowedSiteLovSelector;
include fragment InventoryPartLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset InventoryPartInStocks for InventoryPartInStock;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity InventoryPartInStock {
   crud = Read;
   keys = PartNo, Contract {
      where = "PART_NO = :PartNo and CONTRACT = :Contract";
   }
   attribute PartNo Text {
      maxlength = 100;
   }
   attribute PartDescription Text {
      fetch = "Inventory_Part_API.Get_Description(CONTRACT,PART_NO)";
      label = "Part Description";
      maxlength = 200;
      editable = [false];
   }
   attribute Contract Text {
      editable = [false];
   }
   attribute ReceiptDate Date {
      editable = [false];
   }
   attribute LastCountDate Date {
      editable = [false];
   }
   attribute NextCountDate Date {
      fetch = "INVENTORY_PART_IN_STOCK_API.Get_Next_Count_Date(CONTRACT, PART_NO, CONFIGURATION_ID, LOCATION_NO, LOT_BATCH_NO, SERIAL_NO, ENG_CHG_LEVEL, WAIV_DEV_REJ_NO,ACTIVITY_SEQ, HANDLING_UNIT_ID)";
      label = "Next Count Date";
      editable = [false];
   }
   attribute LastActivityDate Date {
      required = [true];
   }
   attribute SiteDescription Text {
      fetch = "Site_API.Get_Description(CONTRACT)";
      label = "Site Description";
      maxlength = 100;
      editable = [false];
   }
   attribute LocationTypeDb Text {
      fetch = "LOCATION_TYPE_DB";
      maxlength = 20;
      editable = [false];
   }
   attribute HandlingUnitType Text {
      fetch = "Handling_Unit_API.Get_Handling_Unit_Type_Id(HANDLING_UNIT_ID)";
      label = "Handling Unit Type ID";
      maxlength = 100;
      editable = [false];
   }
   attribute HandlingUnitTypeDesc Text {
      fetch = "Handling_Unit_Type_API.Get_Description(Handling_Unit_API.Get_Handling_Unit_Type_Id(HANDLING_UNIT_ID))";
      label = "Handling Unit Type Description";
      maxlength = 100;
      editable = [false];
   }
   attribute SSCC Text {
      fetch = "Handling_Unit_API.Get_Sscc(HANDLING_UNIT_ID)";
      label = "SSCC";
      maxlength = 100;
      editable = [false];
   }
   attribute ConditionCode Text {
      fetch = "CONDITION_CODE_MANAGER_API.Get_Condition_Code (PART_NO,SERIAL_NO,LOT_BATCH_NO )";
      label = "Condition Code";
      maxlength = 100;
      editable = [false];
   }
   attribute ConditionCodeDesc Text {
      fetch = "Condition_Code_API.Get_Description(CONDITION_CODE_MANAGER_API.Get_Condition_Code (PART_NO,SERIAL_NO,LOT_BATCH_NO ))";
      label = "Condition Code Desc";
      maxlength = 100;
      editable = [false];
   }
   attribute Owner Text {
      fetch = "Condition_Code_API.Get_Description(CONDITION_CODE_MANAGER_API.Get_Condition_Code (PART_NO,SERIAL_NO,LOT_BATCH_NO ))";
      label = "Owner";
      maxlength = 100;
      editable = [false];
   }
   attribute OwnerName Text {
      fetch = "INVENTORY_PART_IN_STOCK_API.Get_Owner_Name(CONTRACT, PART_NO, CONFIGURATION_ID, LOCATION_NO, LOT_BATCH_NO, SERIAL_NO, ENG_CHG_LEVEL, WAIV_DEV_REJ_NO, ACTIVITY_SEQ, HANDLING_UNIT_ID)";
      label = "Owner Name";
      maxlength = 100;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ProgramId Text {
      fetch = "ACTIVITY_API.Get_Program_Id(ACTIVITY_SEQ)";
      label = "Program ID";
      maxlength = 100;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ProgramIdDesc Text {
      fetch = "PROJECT_PROGRAM_GLOBAL_API.Get_Description(Project_API.Get_Program_Id(PROJECT_ID))";
      label = "Program ID Desc";
      maxlength = 100;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ProjectDesc Text {
      fetch = "Project_API.Get_Name(PROJECT_ID)";
      label = "Project Desc";
      maxlength = 100;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute SubProjectId Text {
      fetch = "ACTIVITY_API.Get_Sub_Project_Id(ACTIVITY_SEQ)";
      label = "Sub Project ID";
      maxlength = 100;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute SubProjectIdDesc Text {
      fetch = "ACTIVITY_API.Get_Sub_Project_Description(ACTIVITY_SEQ)";
      label = "Sub Project ID Desc";
      maxlength = 100;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ActivityId Text {
      fetch = "ACTIVITY_API.Get_Activity_No(ACTIVITY_SEQ)";
      label = "Activity ID";
      maxlength = 100;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ActivityDesc Text {
      fetch = "Activity_API.Get_Description(ACTIVITY_SEQ)";
      label = "Activity Desc";
      maxlength = 100;
      editable = [false];
   }
   reference InventoryPartRef(Contract, PartNo) to InventoryPart(Contract, PartNo);
   reference PartNoRef(Contract, PartNo) to InventoryPartLov(Contract, PartNo) {
      label = "Part No";
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
}
