-----------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------
-- 2019-07-25  ChFolk  SCUXXW4-22798, Included fragment ProjectDetailsFieldSet.
-- 2019-04-04  milise  SCUXXW4-18022, Replacing of label = "" with showlabel = false
-- 2018-12-06  SuDeLk  SCUXXW4-6276, Removed General tab and added it as General group.
-- 2018-12-06  ShKolk  SCUXXW4-6276, Converted from frmInventTransactionReport using MTG Version: 1.34
-----------------------------------------------------------------------------
client InventoryTransactionReport;
component INVENT;
layer Core;
projection InventoryTransactionReportHandling;
include fragment UserAllowedSiteLovSelector;
include fragment InventWarehouseLocationSelector;
include fragment InventoryTransactionHist2Selector;
include fragment InventoryTransactionCodeLovSelector;
include fragment InventoryLocation8Selector;
include fragment ProjectDetailsFieldSet;
warningsenabled = InventTransactionReport;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry InventoryTransactionReportNavEntry parent InventNavigator.TransactionHistoryReport at index 200 {
      label = "Inventory Transaction Report";
      page Form home InventTransactionReport;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using InventTransactionReportSet {
   label = "Inventory Transaction Report";
   startupmode = search;
   crudactions {
      delete {
         enabled = [ConnectedLinesExist = 0 and not(Cancelled) and not(Printed)];
      }
   }
   selector InventTransactionReportSelector;
   group InventTransactionReportGroup;
   group TransactionReportGeneralGroup;
   group SelectionCriteriaGroup;
   group TransactionsCreatedDateTimeGroup;
   tabs {
      tab {
         label = "Connected Inv Transactions";
         list ConnectedInvTransactionsList(InventoryTransactionHistArray);
      }
      tab {
         label = "Available Inv Transactions";
         list AvailableInvTransactionsList(InventTransReportAvailableArray);
      }
   }
   commandgroup StateCommandGroup {

      command PrintInventoryTransactionRepCommand;
      command CancelCommand;
   }
   commandgroup ConnectCommandGroup {

      command ConnectAllAvailableTransactiCommand;
      command DisconnectAllTransactionsCommand;
   }
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command PrintInventoryTransactionRepCommand for InventTransactionReport {
   label = "Print Inventory Transaction Report";
   enabled = [ConnectedLinesExist > 0 and not(Cancelled)];
   execute {
      if [Printed] {
         inquire("The transaction report has already been printed. Do you want to reprint it?") {
            when YES {
               call PrintReport(TransactionReportId);
            }
            when NO {
               exit;
            }
         }
      }
      else {
         call PrintReport(TransactionReportId);
      }
   }
}

command CancelCommand for InventTransactionReport {
   label = "Cancel";
   enabled = [TransactionReportId != null and not(Cancelled)];
   execute {
      if [Printed] {
         inquire("Transaction report has been printed. Do you really want to cancel it?") {
            when YES {
               call CancelReport(TransactionReportId);
            }
            when NO {
               exit;
            }
         }
      }
      else {
         inquire("Transaction report(s) will be cancelled. Do you want to continue?") {
            when YES {
               call CancelReport(TransactionReportId);
            }
            when NO {
               exit;
            }
         }
      }
   }
}

command ConnectAllAvailableTransactiCommand for InventTransactionReport {
   label = "Connect All Available Transactions";
   enabled = [TransactionReportId != null and not(Cancelled) and not(Printed) and not(AutomaticallyCreated)];
   execute {
      call ConnectAllTransactions(TransactionReportId);
   }
}

command DisconnectAllTransactionsCommand for InventTransactionReport {
   label = "Disconnect All Transactions";
   enabled = [TransactionReportId != null and not(Cancelled) and not(Printed) and(ConnectedLinesExist > 0) and not(AutomaticallyCreated)];
   execute {
      call DisconnectAllTransactions(TransactionReportId);
   }
}

command DisconnectInventoryTransactionCommand for InventoryTransactionHist {
   label = "Disconnect Inventory Transactions";
   mode = SelectedRecords;
   enabled = [not(parent.Printed) and not(parent.AutomaticallyCreated) and not(parent.Cancelled)];
   bulkexecute {
      bulkcall DisconnectTransactions(TransactionId);
   }
}

command ConnectInventoryTransactionCommand for InventTransReportAvailable {
   label = "Connect Inventory Transactions";
   mode = SelectedRecords;
   enabled = [not(parent.Printed) and not(parent.AutomaticallyCreated) and not(parent.Cancelled)];
   bulkexecute {
      bulkcall ConnectTransactions(TransactionId, parent.TransactionReportId);
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector InventTransactionReportSelector for InventTransactionReport {
   label = "${TransactionReportId} - ${ReportTypeId}";
   static TransactionReportId;
   static ReportTypeId;
}

---------------------------------- GROUPS -----------------------------------
group InventTransactionReportGroup for InventTransactionReport {
   label = "";
   field TransactionReportId {
      size = Small;
   }
   field NumberSeries {
      size = Small;
   }

   field NoteText {
      label = "Notes";
      multiline = true;
      height = small;
      editable = [not(Cancelled)];
   }
}

group TransactionReportGeneralGroup for InventTransactionReport {
   label = "General";
   field PrintCostDb {
      size = Small;
      editable = [not(Cancelled)];
   }
   field Printed {
      size = Small;
   }
   field Cancelled {
      size = Small;
   }
   field AutomaticallyCreated {
      size = Small;
   }
   field GroupPerOrder {
      size = Small;
   }
   field OrderNo {
      size = Small;
   }
   field ReportCreatedBy {
      size = Small;
   }
   field ReportDateCreated {
      size = Small;
   }
   field PrintedBy {
      size = Small;
   }
   field DatePrinted {
      size = Small;
   }
   field CancelledBy {
      size = Small;
   }
   field DateCancelled {
      size = Small;
   }
}

group SelectionCriteriaGroup for InventTransactionReport {
   label = "Selection Criteria";
   lov ContractRef with ReferenceUserAllowedSiteLovSelector {
      preview = UserAllowedSiteLovCard;
      size = Small;
      validate command {
         execute {
            call GetCompany(Contract) into Company;
         }
      }
   }
   lov WarehouseIdRef with ReferenceInventWarehouseLocationSelector {
      preview = InventWarehouseLocationCard;
      size = Small;
   }
   lov ReportGroupIdRef with ReferenceInventTransReportGroupSelector {
      description = ReportGroupIdRef.Description;
      size = Small;
   }
   lov ReportTypeIdRef with ReferenceInventTransReportTypeSelector {
      description = ReportTypeIdRef.Description;
      size = Small;
   }
   field TransactionsCreatedByRef {
      size = Small;
   }
}

group TransactionsCreatedDateTimeGroup for InventTransactionReport {
   label = "Transactions Created Date/Time";
   field FromTransDateCreated {
      size = Small;
      validate command {
         execute {
            if [FromTransDateCreated = null] {
               set FromTransDateTimeCreated = null;
            }
         }
      }
   }
   field FromTransDateTimeCreated {
      label = "From Time";
      showlabel = false;
      size = Small;
      editable = [FromTransDateCreated != null];
   }
   field ToTransDateCreated {
      size = Small;
      validate command {
         execute {
            if [ToTransDateCreated = null] {
               set ToTransDateTimeCreated = null;
            }
         }
      }
   }
   field ToTransDateTimeCreated {
      label = "To Date";
      showlabel = false;
      size = Small;
      editable = [ToTransDateCreated != null];
   }
}

----------------------------------- LISTS -----------------------------------
list ConnectedInvTransactionsList for InventoryTransactionHist {
   lov TransactionIdRef with ReferenceInventoryTransactionHist2Selector;
   lov TransactionCodeRef with ReferenceInventoryTransactionCodeLovSelector {
      size = Small;
   }
   field TransactionCodeRef.Transaction {
      size = Small;
   }
   lov InventoryPartRef with ReferenceInventoryPartSelector {
      label = "Part No";
      description = InventoryPartRef.DescriptionInUse;
   }
   field ConfigurationIdRef {
      size = Small;
   }
   field Direction {
      size = Small;
   }
   field Quantity;
   field InventoryPartRef.UnitMeas {
      size = Small;
      label = "UoM";
   }
   field CatchDirection {
      size = Small;
   }
   field CatchQuantity;
   field InventoryPartRef.CatchUnitMeas {
      label = "Catch UoM";
      size = Small;
   }
   lov LocationNoRef with ReferenceInventoryLocation8Selector;
   field LocationNoRef.Warehouse {
      size = Small;
   }
   field LocationNoRef.BayNo {
      size = Small;
   }
   field LocationNoRef.RowNo {
      size = Small;
   }
   field LocationNoRef.TierNo {
      size = Small;
   }
   field LocationNoRef.BinNo {
      size = Small;
   }
   field HandlingUnitRef;
   lov HandlingUnitTypeIdRef with ReferenceHandlingUnitTypeSelector {
      label = "Handling Unit Type";
      description = HandlingUnitTypeIdRef.Description;
   }
   field HandlingUnitRef.Sscc {
      size = Small;
      label = "SSCC";
   }
   field HandlingUnitRef.AltHandlingUnitLabelId {
      size = Small;
      label = "Alt Handling Unit Label ID";
   }
   field LotBatchNo {
      size = Small;
   }
   field SerialNo {
      size = Small;
   }
   lov ConditionCodeRef with ReferenceConditionCodeSelector {
      label = "Condition Code";
      description = ConditionCodeRef.Description;
   }
   field WaivDevRejNo {
      size = Small;
   }
   field EngChgLevel {
      size = Small;
   }
   field SourceRef1 {
      size = Small;
   }
   field SourceRef2 {
      size = Small;
   }
   field SourceRef3 {
      size = Small;
   }
   field SourceRef4 {
      size = Small;
   }
   field SourceRef5 {
      size = Small;
   }
   field SourceRefType {
      size = Small;
   }
   field Cost;
   field DateCreated;
   field DateTimeCreated;
   field Userid {
      size = Small;
   }
   field DateApplied;
   field PartstatFlag {
      size = Small;
   }
   field ValuestatFlag {
      size = Small;
   }
   field RejectCode {
      size = Small;
   }
   field PartOwnership {
      size = Small;
   }
   field Owner {
      size = Small;
   }
   @DynamicComponentDependency ORDER
   @DynamicComponentDependency PURCH
   field OwnerName {
      size = Small;
   }
   field PreviousPartOwnership {
      size = Small;
   }
   field PreviousOwner {
      size = Small;
   }
   @DynamicComponentDependency ORDER
   @DynamicComponentDependency PURCH
   field PreviousOwnerName {
      size = Small;
   }
   fieldset ProjectDetailsFieldSet;
   @DynamicComponentDependency PROJ
   field ActivitySeqRef;
   field HasErroneousPostings {
      size = Small;
   }
   field HasTransferredPostings {
      size = Small;
   }
   field TopParentHandlingUnitId;
   field TopParentHandlingUnitTypeId {
      size = Small;
   }
   field TopParentHandlingUnitTypeDesc {
      size = Small;
   }
   field TopParentSscc {
      size = Small;
   }
   field TopParentAltHandlingUnitLabelId {
      size = Small;
   }
   fieldranking TransactionIdRef, TransactionCodeRef, Transaction, PartNo, ConfigurationIdRef, Direction, Quantity, CatchDirection, DateTimeCreated, DateApplied;
   command DisconnectInventoryTransactionCommand;
}

list AvailableInvTransactionsList for InventTransReportAvailable {
   lov TransactionIdRef with ReferenceInventoryTransactionHist2Selector;
   lov TransactionCodeRef with ReferenceInventoryTransactionCodeLovSelector {
      size = Small;
   }
   field TransactionId {
      columnvisible = [false];
   }
   field Transaction {
      size = Small;
   }
   lov InventoryPartRef with ReferenceInventoryPartSelector {
      label = "Part No";
      description = InventoryPartRef.DescriptionInUse;
   }
   field ConfigurationIdRef {
      size = Small;
   }
   field Direction {
      size = Small;
   }
   field Quantity;
   field InventoryPartRef.UnitMeas {
      size = Small;
      label = "UoM";
   }
   field CatchDirection {
      size = Small;
   }
   field CatchQuantity {
      size = Small;
   }
   field InventoryPartRef.CatchUnitMeas {
      label = "Catch UoM";
      size = Small;
   }
   lov LocationNoRef with ReferenceInventoryLocation8Selector;
   field Warehouse {
      size = Small;
   }
   field LocationNoRef.BayNo {
      size = Small;
   }
   field LocationNoRef.RowNo {
      size = Small;
   }
   field LocationNoRef.TierNo {
      size = Small;
   }
   field LocationNoRef.BinNo {
      size = Small;
   }
   field LotBatchNo {
      size = Small;
   }
   field SerialNo {
      size = Small;
   }
   lov ConditionCodeRef with ReferenceConditionCodeSelector {
      label = "Condition Code";
      description = ConditionCodeRef.Description;
   }
   field WaivDevRejNo {
      size = Small;
   }
   field EngChgLevel {
      size = Small;
   }
   field SourceRef1 {
      size = Small;
   }
   field SourceRef2 {
      size = Small;
   }
   field SourceRef3 {
      size = Small;
   }
   field SourceRef4 {
      size = Small;
   }
   field SourceRef5 {
      size = Small;
   }
   field SourceRefType {
      size = Small;
   }
   field Cost;
   field DateCreated;
   field DateTimeCreated;
   field Userid {
      size = Small;
   }
   field DateApplied;
   field PartstatFlag {
      size = Small;
   }
   field ValuestatFlag {
      size = Small;
   }
   field RejectCode {
      size = Small;
   }
   field Ownership {
      size = Small;
   }
   field Owner {
      size = Small;
   }
   @DynamicComponentDependency ORDER
   @DynamicComponentDependency PURCH
   field OwnerName {
      size = Small;
   }
   field PreviousPartOwnership {
      size = Small;
   }
   field PreviousOwner {
      size = Small;
   }
   @DynamicComponentDependency ORDER
   @DynamicComponentDependency PURCH
   field PreviousOwnerName {
      size = Small;
   }
   fieldset ProjectDetailsFieldSet;
   @DynamicComponentDependency PROJ
   field ActivitySeqRef;
   field HasErroneousPostings {
      size = Small;
   }
   field HasTransferredPostings {
      size = Small;
   }
   fieldranking TransactionIdRef, TransactionCodeRef, Transaction, PartNo, ConfigurationIdRef, Direction, Quantity, CatchDirection, DateTimeCreated, DateApplied;
   command ConnectInventoryTransactionCommand;
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------
