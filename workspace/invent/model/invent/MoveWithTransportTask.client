-----------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------
-- 2021-10-28  SeJalk  SC21R2-5234, Set the ObjidsVar as LongText in MovePartWithTransportTaskAssistant.
-- 2019-12-04  Hadolk  MFSPRING20-77, Added EngineeringRevision, DrawingNo, DrawingRevision fields.
-- 2019-07-12  JaThlk  SCUXXW4-23145, Set PartNo field editable false.
-- 2019-03-07  ChFolk  SCUXXW4-16871, Added dynamic dependency where it is missing.
-- 2018-06-07  MaAuse  SCUXXW4-5604, Converted from dlgMovePartWithTransportTask using MTG Version: 1.19
-----------------------------------------------------------------------------
client MoveWithTransportTask;
component INVENT;
layer Core;
projection MoveWithTransportTaskHandling;
include fragment InventoryLocation17Selector;
include fragment UserAllowedSiteLovSelector;

warningsenabled = MoveWithTransportTask;

-------------------------------- ASSISTANTS ---------------------------------
assistant MovePartWithTransportTaskAssistant using MovePartWithTransportTaskSet {
   label = "Move with Transport Task";
   savemode = OnLostFocus;
   setup InitAssistant {
      variable ContractVar;
      variable ObjidsVar {
         type = LongText;
      }
      variable ConnectedSourceVar;
      execute {
         set Contract = ContractVar;
         set ObjIds = ObjidsVar;
         set ConnectedSource = ConnectedSourceVar;
      }
   }
   steps {
      step {
         group MovePartWithTransportTaskGroup;
         list PartsToMoveList(PartsToMoveArray);
      }
      final step {

      }
      cancelled step {

      }
   }
   finish command {
      enabled = [Contract != null and LocationNo != null];
      variable MoveWithTransportTaskStruct {
         type = Structure(MoveWithTransportTaskStructure);
      }

      execute {
         call MoveWithTransportTask(Objkey, Contract, LocationNo, Destination) into MoveWithTransportTaskStruct;
         if [MoveWithTransportTaskStruct.QtyMoved > 0] {
            navigate back;
         }
      }
   }

   cancel command {
      execute {
         navigate back;
      }
   }
   restart command {
      visible = [false];
   }
}


---------------------------------- GROUPS -----------------------------------

group MovePartWithTransportTaskGroup for MovePartWithTransportTaskVirtual {
   label = "";
   lov ContractRef with ReferenceUserAllowedSiteLovSelector {
      label = "To Site";
      maxlength = 5;
   }
   lov LocationNoRef with ReferenceInventoryLocation17Selector using GetLocations(Contract, ConnectedSource) {
      label = "To Location No";
      maxlength = 35;
   }
   field Destination {
      label = "Destination";
   }
}


----------------------------------- LISTS -----------------------------------

list PartsToMoveList for InventoryPartInStockVirtual {
   label = "";
   editmode = SingleCellEdit;

   lov InventoryPartRef with ReferenceInventoryPartSelector {
      label = "Part No";
      description = InventoryPartRef.DescriptionInUse;
      editable = [false];
   }
   field ConfigurationId {
      editable = [false];
   }
   field Contract {
      editable = [false];
   }
   field LocationNo {
      editable = [false];
   }
   field HandlingUnitIdRef {
      editable = [false];
   }
   field AvailableQtytoMove {
      editable = [false];
   }
   field QtyToMove {
      editable = [true];
      required = [true];
   }
   field QtyOnhand {
      editable = [false];
   }
   field InventoryPartRef.UnitMeas {
      label = "UoM";
      editable = [false];
   }
   field LotBatchNo {
      editable = [false];
   }
   field SerialNo {
      editable = [false];
   }
   field HandlingUnitIdRef.Sscc {
      label = "SSCC";
      editable = [false];
   }
   field HandlingUnitIdRef.AltHandlingUnitLabelId {
      label = "Alt Handling Unit Label ID";
      editable = [false];
   }
   field ConditionCode {
      editable = [false];
   }
   field ConditionCodeDescription {
      editable = [false];
   }
   field EngChgLevel {
      editable = [false];
   }
   field WaivDevRejNo {
      editable = [false];
   }
   field CatchQtyOnhand {
      editable = [false];
   }
   field CatchUoM {
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   field ActivitySeqRef {
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   lov ActivitySeqRef with ReferenceActivitySelector {
      label = "Activity";
      description = ActivityDescription;
   }
   field SourceRef1 {
      editable = [false];
      columnvisible = [parent.ConnectedSource = "RECEIPT_STOCK" or parent.ConnectedSource = "RECEIPT"];
   }
   field SourceRef2 {
      editable = [false];
      columnvisible = [parent.ConnectedSource = "RECEIPT_STOCK" or parent.ConnectedSource = "RECEIPT"];
   }
   field SourceRef3 {
      editable = [false];
      columnvisible = [parent.ConnectedSource = "RECEIPT_STOCK" or parent.ConnectedSource = "RECEIPT"];
   }
   field SourceRef4 {
      editable = [false];
      columnvisible = [parent.ConnectedSource = "RECEIPT_STOCK" or parent.ConnectedSource = "RECEIPT"];
   }
   field ReceiptNo {
      editable = [false];
      columnvisible = [parent.ConnectedSource = "RECEIPT_STOCK" or parent.ConnectedSource = "RECEIPT"];
   }
   field SourceRefType {
      editable = [false];
   }

   @DynamicComponentDependency MFGSTD
   field PartRevisionRef.EngRevision {
      label = "Engineering Revision No";
      editable = [false];
      columnvisible = [false];
   }
   @DynamicComponentDependency MFGSTD
   field PartRevisionRef.TechnicalDrawingNo {
      label = "Drawing No";
      editable = [false];
      columnvisible = [false];
   }
   @DynamicComponentDependency MFGSTD
   field PartRevisionRef.TechDrawingRevisionNo {
      label = "Drawing Revision No";
      editable = [false];
      columnvisible = [false];
   }
}
