-----------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------
-- 2019-11-13  FRBESE  SCXTEND-1158, Changed PartCatalogInventAttributesNavEntry navigator entry index from 800 to 1300.
-- 2019-11-04  NiAslk  SCXTEND-1218, Added startup mode as search.
-- 2019-07-15  JaThlk  SCUXXW4-23055, Removed multiple calls for better performance.
-- 2019-05-22  fgusse  SCUXXW4-20687, Added translatable in DocumnetTextCommand
-- 2018-10-23  SURBLK  SCUXXW4-6380, Converted from frmPartCatalogInventAttrib using MTG Version: 1.31
-----------------------------------------------------------------------------

client PartDangerousGoodsClassification;
component INVENT;
layer Core;
projection PartDangerousGoodsClassificationHandling;
include fragment UserAllowedSiteLovSelector;
include fragment DocumentText;
include fragment OutputTypeLovSelector;
include fragment MpccomPhraseTextLovSelector;
include fragment CopyDangerousGoodsClassificationTemplateAssistant;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry PartCatalogInventAttributesNavEntry parent PartcaNavigator.PartMasterDataMasterPart at index 1300 {
      label = "Part Dangerous Goods Classification";
      page Form home PartCatalogInventAttrib;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using PartCatalogInventAttributeSet {
   label = "Part Dangerous Goods Classification";
   startupmode = search;
   selector PartCatalogInventAttributesSelector;
   group PartCatalogInventAttribGroup;
   tabs {
      tab {
         label = "Mode of Transportation";
         arrange {
            group BoatGroup;
            group CarRailroadGroup;
         }
         group AirGroup;
      }
      tab {
         label = "Components Responsible";
         list ComponentsResponsibleList(PartcaDangerousSubstanceArray);
      }
   }
   command PartCommand;
   command CopyDangerousGoodsClassificaCommand;
   command DocumentTextCommand;
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command CopyDangerousGoodsClassificaCommand for PartCatalogInventAttributes {
   label = "Copy from Template Part";
   enabled = [true];
   mode = SelectedRecords;

   bulkexecute {
      assistant Assistant(Selection) {
         when OK {
            exit OK;
         }
      }
   }
}

command DocumentTextCommand for PartCatalogInventAttributes {
   label = "Document Text";
   enabled = [true];
   variable Label;
   execute {
      set Label = " for Part Catalog - Dangerous Goods Classification - ${PartNo}" {
         translatable = true;
      }
      assistant DocumentText(NoteId, Label, false) {
         when NO {
            exit CANCEL;
         }
      }
   }
}

command PartCommand for PartCatalogInventAttributes {
   label = "Part";
   enabled = [true];
   execute {
      navigate "page/Part/Form?$filter=PartNo eq $[PartNo]";
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector PartCatalogInventAttributesSelector for PartCatalogInventAttributes {
   label = "${PartNo} - ${PartNoRef.Description}";
   static PartNo;
   static PartNoRef.Description;
}
---------------------------------- GROUPS -----------------------------------
group PartCatalogInventAttribGroup for PartCatalogInventAttributes {
   label = "";

   lov PartNoRef with ReferencePartCatalogSelector {
      description = PartNoRef.Description;
   }
   lov ProperShippingNameIdRef with ReferenceProperShippingNameSelector {
      description = ProperShippingNameIdRef.ProperShippingName;

      validate command {
         execute {
            call GetUnNoAndNos(ProperShippingNameId) into UnNoAndNosStructure;
            set UnNo = UnNoAndNosStructure.UnNo;
            set NOS = UnNoAndNosStructure.Nos;
         }
      }
   }
   lov AdditionalShipDescIdRef with ReferenceAdditionalShippingDescSelector using FilterAdditionalShipDesc {
      description = AdditionalShipDescIdRef.AdditionalShippingDesc;
   }
   lov HseContractRef with ReferenceUserAllowedSiteLovSelector {
      preview = UserAllowedSiteLovCard;
   }
   lov PackagingGroupIdRef with ReferencePackagingGroupSelector using FilterPackagingGroup {
      description = PackagingGroupIdRef.PackagingGroup;
   }
   lov PackagingMaterialIdRef with ReferencePackagingMaterialSelector using FilterPackagingMaterial {
      description = PackagingMaterialIdRef.PackagingMaterial;
   }
   field ModifiedDate;
   field FlashPoint;
   field UnNo {
      label = "UN Number";
   }
   field NOS;
   field ColdSensitive {
      enumerationtrue = "ColdSensitive";
      enumerationfalse = "NotColdSensitive";
   }
   field TemplatePart;
   field DocumentText;
}

group BoatGroup for PartCatalogInventAttributes {
   label = "Boat";
   field ImdgClassIdRef;
   field ImdgSubsidiaryRisk1IdRef;
   field ImdgSubsidiaryRisk2IdRef;
   lov ImdgLimitedQuantityRef with ReferenceTransportLimitedQuantitySelector using FilterLimitedQuantity;
   field EmSNo {
      label = "EMS Number";
   }
   field SegregationCode;
   lov ImdgCommentIdRef with ReferenceTransportHazardCommentSelector {
      description = ImdgCommentIdRef.HazardComment;
   }
   field ImdgSpecialProvision;
   field MarinePollutant {
      enumerationtrue = "MarinePollutant";
      enumerationfalse = "NotMarinePollutant";
   }
}

group CarRailroadGroup for PartCatalogInventAttributes {
   label = "Car/Railroad";
   field AdrRidClassIdRef;
   field AdrSubsidiaryRisk1IdRef;
   field AdrSubsidiaryRisk2IdRef;
   lov AdrLimitedQuantityRef with ReferenceTransportLimitedQuantitySelector using FilterLimitedQuantity;
   lov TunnelCodeRef with ReferenceTunnelCodeSelector using FilterTunnelCode;
   lov AdrCommentIdRef with ReferenceTransportHazardCommentSelector {
      description = AdrCommentIdRef.HazardComment;
   }
   field AdrSpecialProvision;
   field AdrEnvironmentalHazard;
}
group AirGroup for PartCatalogInventAttributes {
   label = "Air";
   field IataDgrClassIdRef;
   field IataSubsidiaryRisk1IdRef;
   field IataSubsidiaryRisk2IdRef;
   lov IataLimitedQuantityRef with ReferenceTransportLimitedQuantitySelector using FilterLimitedQuantity;
   lov IataCommentIdRef with ReferenceTransportHazardCommentSelector {
      description = IataCommentIdRef.HazardComment;
   }
   field IataSpecialProvision;
   field IataEnvironmentalHazard;
}

----------------------------------- LISTS -----------------------------------
list ComponentsResponsibleList for PartcaDangerousSubstance {
   lov SubstanceNoRef with ReferenceSubstanceSelector {
      description = SubstanceNoRef.Description;
      label = "Substance";

   }
   field SubstanceNoRef.CasNo {
      label = "CAS No";
   }
   field ResponsibleForPsnDb;
   field MarinePollutantDb;
   field AdrEnvironmentalHazardDb;
   field IataEnvironmentalHazardDb;
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------
