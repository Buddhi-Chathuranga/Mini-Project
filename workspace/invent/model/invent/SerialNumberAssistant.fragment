-------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  --------------------------------------------------------------------------------
-- 2018-12-31  JaThlk  SCUXXW4-5816, Converted the fragment from dlgSerialNo.
-------------------------------------------------------------------------------------------------------
fragment SerialNumberAssistant;
component INVENT;
layer Core;
description "Use this assistant to enter serial numbers valid for the received parts.";
include fragment SequenceGeneratorAssistant;

----------------------------- CLIENT FRAGMENTS ------------------------------


-------------------------------- ASSISTANTS ---------------------------------
assistant SerialNumberAssistant using SerialNumberSet {
   label = "Enter Serials";
   input(Contract, PartNo, LocationNo, PartsToReceive);
   output(Objkey);
   singlestep {
      list SerialNoList(SerialNoArray);
   }
   command TransferSerialNoOk;
   command Cancel;
   command ClearSerialNumbers;
}

--------------------------------- COMMANDS ----------------------------------
command CheckSerialExist for SerialNumberListVirtual {
   variable PartSerialNoTemp {
      type = Text;
   }

   execute {
      call GetPartSerialState("${PartNo}", "${SerialNo}") into PartSerialNoTemp;
      if [PartSerialNoTemp != "UnderTransportation" and PartSerialNoTemp != null] {
         confirm("Serial no ${SerialNo} is already used by this part. Do you want to continue??") {
            when CANCEL {
               call RemoveRecord("${Objkey}");
            }
         }
      }
   }
}
command TransferSerialNoOk for SerialNumberVirtual {
   label = "OK";
   execute {
      call ValidateSerialNumbers(Objkey, PartNo, Contract, PartsToReceive);
      exit OK;
   }
}
command ClearSerialNumbers for SerialNumberVirtual {
   label = "Clear";
   execute {
      call RemoveSerialNumbers(Objkey);
      exit;
   }
}

----------------------------------- LISTS -----------------------------------
list SerialNoList for SerialNumberListVirtual {
   label = "Enter Serials";
   editmode = SingleCellEdit;
   crudactions {
      after command CheckSerialExist;
   }

   field Contract {
      columnexclude = [true];
   }
   field PartNo {
      columnexclude = [true];
   }
   field LocationNo {
      columnexclude = [true];
   }
   field SerialNo;

   command GenerateSerialSequenceCommand;
}

command GenerateSerialSequenceCommand for SerialNumberListVirtual {
   label = "Sequence";
   mode = Global;
   variable SerialListStr LongText;

   execute {
      assistant SequenceGeneratorAssistant("${PartsToReceive}") into(SerialListStr) {
         when OK {
            call CreateLines(Objkey, SerialListStr, Contract, PartNo, LocationNo);
         }
      }
   }

}

--------------------------- PROJECTION FRAGMENTS ----------------------------


----------------------------- MAIN ENTRY POINTS -----------------------------
entityset SerialNumberSet for SerialNumberVirtual;

---------------------------------- ACTIONS ----------------------------------
//This action works with the virtuals
action CreateLines {
   initialcheck none;
   parameter ParentObjkey Text;
   parameter SerialList LongText;
   parameter Contract Text;
   parameter PartNo Text;
   parameter LocationNo Text;
   ludependencies = SerialNumberVirtual, SerialNumberListVirtual;
}
//! TODO: Should be refactored as a function!
action ValidateSerialNumbers {
   initialcheck none;
   parameter ParentObjkey Text;
   parameter PartNo Text;
   parameter Contract Text;
   parameter PartsToReceive Number;
}
//! TODO: Should be refactored as a function!
action GetPartSerialState Text {
   initialcheck none;
   parameter PartNo Text;
   parameter SerialNo Text;
}
//This action works with the virtuals
action RemoveRecord {
   initialcheck none;
   parameter Objkey Text;
   ludependencies = SerialNumberVirtual, SerialNumberListVirtual;
}
//This action works with the virtuals
action RemoveSerialNumbers {
   initialcheck none;
   parameter ParentObjkey Text;
   ludependencies = SerialNumberVirtual, SerialNumberListVirtual;
}

--------------------------------- VIRTUALS ----------------------------------
virtual SerialNumberVirtual {
   attribute Contract Text;
   attribute PartNo Text;
   attribute LocationNo Text;
   attribute PartsToReceive Number;
   attribute MaxSerial Text {
      maxlength = 50;
   }

   array SerialNoArray(Contract, PartNo, LocationNo) to SerialNumberListVirtual(Contract, PartNo, LocationNo);
}

virtual SerialNumberListVirtual {
   attribute Contract Text;
   attribute PartNo Text;
   attribute LocationNo Text;
   attribute SerialNo Text {
      maxlength = 50;
      format = uppercase;
   }
}


