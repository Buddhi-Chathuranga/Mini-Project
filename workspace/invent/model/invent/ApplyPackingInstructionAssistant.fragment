-------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  --------------------------------------------------------------------------------
-- 2019-05-16  DaZase  SCUXXW4-19600, Added initialcheck to all unbounded actions.
-- 2018-12-13  ChFolk  SCUXXW4-4896, Converted dlgApplyPackingInstruction using MTG Version 1.34.
-------------------------------------------------------------------------------------------------------
fragment ApplyPackingInstructionAssistant;
component INVENT;
layer Core;
description "assistant use to apply one or several empty packing instructions";

include fragment PackingInstructionWithRootSelector;
@DynamicComponentDependency SHPMNT
include fragment ShipmentInitialCheck;

// NOTE: this assistant might be obsolete and replaced by some of the other add/create hu asistants that can handle structures also now.
// Needs further investigations.

----------------------------- CLIENT FRAGMENTS ------------------------------

-------------------------------- ASSISTANTS ---------------------------------
assistant ApplyPackingInstructionAssistant using ApplyPackingInstructionSet {
   label = "${PageTitle}";
   // label = "${TitleTextVar}";
   savemode = OnLostFocus;
   input(ParentHandlingUnitId, ShipmentId, PageTitle);
   output(TopHandlingUnitIdList);
//   setup InitTitle {
//      variable TitleTextVar {
//         type = Text;
//      }
//
//      execute {
//         set TitleTextVar = PageTitle {
//            translatable = true;
//         }
//      }
//   }
   steps {
      step {
         list ApplyPackingInstructionList(ApplyPackingInstructionArray);
      }
      final step {

      }
      cancelled step {

      }
   }
   finish command {
      enabled = [true];

      execute {
         call CreateHandlingUnitStructure(Objkey) into TopHandlingUnitIdList;
         exit OK;
      }
   }
   cancel command {
      execute {
         exit CANCEL;
      }
   }
   restart command {
      visible = [false];
   }
}

--------------------------------- COMMANDS ----------------------------------

--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------

----------------------------------- LISTS -----------------------------------
list ApplyPackingInstructionList for PackingInstructionsVirtual {
   label = "";
   lov PackingInstructionIdRef with ReferencePackingInstructionWithRootSelector {
      label = "Packing Instruction";
      description = PackingInstructionIdRef.PackingInstructionDesc;
      validate command {
         execute {
            call ValidatePackingInstruction(PackingInstructionId);
         }
      }
   }
   field Quantity {
      size = Small;
   }

}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

--------------------------- PROJECTION FRAGMENTS ----------------------------
----------------------------- MAIN ENTRY POINTS -----------------------------
entityset ApplyPackingInstructionSet for ApplyPackingInstructionVirtual;

------------------------------ ENTITY DETAILS -------------------------------

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------
action ValidatePackingInstruction {
   initialcheck none;
   parameter PackingInstructionId Text;
}

action CreateHandlingUnitStructure Text {
   initialcheck implementation;
   parameter ParentObjkey Text;
   ludependencies = HandlingUnit;
}
--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------
virtual ApplyPackingInstructionVirtual {
   attribute ParentHandlingUnitId Number;
   attribute ShipmentId Number;
   attribute PageTitle Text;
   attribute TopHandlingUnitIdList Text;
   array ApplyPackingInstructionArray() to PackingInstructionsVirtual();
}

virtual PackingInstructionsVirtual {
   crud = Read, Create, Delete;
   attribute PackingInstructionId Text {
      maxlength = 50;
      required = [true];
      format = uppercase;
   }
   attribute Quantity Number {
      label = "Quantity";
      editable = [true];
   }
   reference PackingInstructionIdRef(PackingInstructionId) to PackingInstructionWithRoot(PackingInstructionId);
}

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------

