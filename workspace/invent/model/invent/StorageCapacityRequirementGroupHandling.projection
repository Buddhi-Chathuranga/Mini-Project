-------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-09-11  SaGeLK  SCUXXW4-6014, Converted from frmCapacityRequirementGroups using MTG Version: 1.28
--------------------------------------------------------------------------------------
projection StorageCapacityRequirementGroupHandling;
component INVENT;
layer Core;
description "Use this API to define storage requirement values for dimensions, volume and weight.";
category Users;
include fragment WhStorageVolumeLovSelector;
include fragment UserAllowedSiteLovSelector;
include fragment DefineStorageVolumeRequirement;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset StorageCapacityReqGroupSet for StorageCapacityReqGroup;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity StorageCapacityReqGroup {
   attribute CapacityReqGroupId Text {
      label = "Capacity Requirement Group";
   }
   attribute Volume Number {
      label = "Quantity Per Volume";
      fetch = "1/VOLUME";
   }
   reference UomForLengthRef(UomForLength) to IsoUnit(UnitCode) {
      label = "Length UoM";
   }
   reference UomForVolumeRef(UomForVolume) to IsoUnit(UnitCode) {
      label = "Volume UoM";
   }
   reference UomForWeightRef(UomForWeight) to IsoUnit(UnitCode) {
      label = "Weight UoM";
   }

   array StorageCapacityReqGroupArray(CapacityReqGroupId) to CapacityGrpHandlingUnit(CapacityReqGroupId);

   action SaveVolume {
      parameter Volume Number;
      parameter UomVolume Text;
   }
}
@Override
entity CapacityGrpHandlingUnit {
   use attributes = MaxQuantityCapacity;
   attribute CapacityReqGroupId Text {
      label = "Capacity Requirement Group";
   }
   attribute HandlingUnitCategoryId Text {
      fetch = "Handling_Unit_Type_API.Get_Handling_Unit_Category_Id(handling_unit_type_id)";
      editable = [false];
   }
   reference HandlingUnitTypeRef(HandlingUnitTypeId) to HandlingUnitType(HandlingUnitTypeId);
   reference HandlingUnitCategoryRef(HandlingUnitCategoryId) to HandlingUnitCategory(HandlingUnitCategoryId);
   reference UnitCodeRef(UnitCode) to IsoUnit(UnitCode) {
      label = "UoM";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------
function GetLengthUomList List<Entity(IsoUnit)> {
   where = "UNIT_TYPE_DB = 'LENGTH'";
}
function GetVolumeUomList List<Entity(IsoUnit)> {
   where = "UNIT_TYPE_DB = 'VOLUME'";
}
function GetWeightUomList List<Entity(IsoUnit)> {
   where = "UNIT_TYPE_DB = 'WEIGHT'";
}
function GetDefaultLengthUom Text;
function GetDefaultWeightUom Text;

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------