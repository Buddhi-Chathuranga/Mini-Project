----------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------------
-- 2020-12-30  BudKLk  SC2020R1-11932, Replaced depreciated property personwidget to contactwidget.
-- 2019-12-26  ChFolk  SCXTEND-994, Added CreatedByUserId.
-- 2019-03-19  fandse  SCUXXW4-15907, State indicator and badge material requisition.
-- 2019-01-11  milise  SCUXXW4-15457, Added labels for code parts.
-- 2018-06-30  SuDelk  SCUXXW4-6857, Converted from tbwIntOrderDetailQuery using MTG Version: 1.23
----------------------------------------------------------------------------------------------------------
client MaterialRequisitionLinesAnalysis;
component INVENT;
layer Core;

include fragment InternalDestinationLovSelector;
include fragment UserAllowedSiteLovSelector;
include fragment InventoryPartLovMrpSelector;
include fragment MaterialRequisSelector;
include fragment MaterialRequisitionLineStateIndicator;
include fragment ProjectDetailsFieldSet;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry MatReqLinesAnalysisNavEntry parent InventNavigator.WarehouseManagementRequisition at index 300 {
      label = "Material Requisition Lines Analysis";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page List using MaterialRequisLineSet {
   label = "Material Requisition Lines Analysis";
   startupmode = search;
   list MaterialRequisitionLinesAnalysisList;
}

----------------------------------- LISTS -----------------------------------
list MaterialRequisitionLinesAnalysisList for MaterialRequisLine {
   lov OrderNoRef with ReferenceMaterialRequisSelector;
   field LineNo;
   field ReleaseNo;
   field PartNo {
      label = "Part No";
      lovswitch {
         when [InventoryPart = 1] {
            lov PartNoRef with ReferenceInventoryPartLovMrpSelector;
         }
         when [true] {
            @DynamicComponentDependency PURCH
            lov PartNo2Ref with PurchasePartSelector;

         }
      }
   }
   lov ContractRef with ReferenceUserAllowedSiteLovSelector;
   lov ConditionCodeRef with ReferenceConditionCodeSelector {
      label = "Condition Code";
      description = ConditionCodeRef.Description;
   }
   field InternalCustomerNo;
   field InternalCustomerName;
   field InternalDestinationID;
   field MaterialRequisitionRef.InternalDestination {
      label = "Internal Destination Description";
   }
   field UnitMeasRef;
   fieldset StatusCodeLine;
   field SupplyCode;
   field DateEntered;
   field CreatedByUserId {
      contactwidget {
         enabled = [true];
         source = Person;
      }
   }
   field PlannedDeliveryDate;
   field DueDate;
   field QtyShipped;
   field QtyDue;
   field QtyAssigned;
   field QtyOnOrder;
   field RemainingQty;
   field QtyReturned;
   field NoteText {
      multiline = true;
   }
   fieldset ProjectDetailsFieldSet;
   @DynamicComponentDependency PROJ
   field ActivitySeqRef;
   field PreAccountingRef.AccountNo {
      size = Small;
      label = "${context.Company.CodeAName}";
   }
   field PreAccountingRef.CodenoB {
      size = Small;
      label = "${context.Company.CodeBName}";
   }
   field PreAccountingRef.CodenoC {
      size = Small;
      label = "${context.Company.CodeCName}";
   }
   field PreAccountingRef.CodenoD {
      size = Small;
      label = "${context.Company.CodeDName}";
   }
   field PreAccountingRef.CodenoE {
      size = Small;
      label = "${context.Company.CodeEName}";
   }
   field PreAccountingRef.CodenoF {
      size = Small;
      label = "${context.Company.CodeFName}";
   }
   field PreAccountingRef.CodenoG {
      size = Small;
      label = "${context.Company.CodeGName}";
   }
   field PreAccountingRef.CodenoH {
      size = Small;
      label = "${context.Company.CodeHName}";
   }
   field PreAccountingRef.CodenoI {
      size = Small;
      label = "${context.Company.CodeIName}";
   }
   field PreAccountingRef.CodenoJ {
      size = Small;
      label = "${context.Company.CodeJName}";
   }
}


