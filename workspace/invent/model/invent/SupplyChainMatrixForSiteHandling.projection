--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2020-01-27  Aabalk  SCSPRING20-1687, Changed ShipInventoryLocationNoRef reference source to NonRemoteWarehouseShipmentLocation.
-- 2019-08-28  ChFolk  SCUXXW4-23117, Used Enumeration for DefaultShipVia instead of Boolean.
-- 2019-03-16  ChFolk  SCUXXW4-16871, Added dependency anootation where necessary.
-- 2018-10-22  Tmahlk  SCUXXW4-6492, Converted from frmSupplyChainMatrixForSite using MTG Version: 1.33
--------------------------------------------------------------------------------------

projection SupplyChainMatrixForSiteHandling;
component INVENT;
layer Core;
description "Use this API to view and manage supply chain parameters between an internal site within your corporation and any of the following types of sites or entities";
category Users;
@DynamicComponentDependency ORDER
include fragment FreightZoneJoinSelector;
include fragment NonRemoteWhseShipLocationSelector;
include fragment SiteUivSelector;
@DynamicComponentDependency ORDER
include fragment CustOrdCust1Selector;

@DynamicComponentDependency PURCH
include fragment ExternalSupplierLovSelector;
@DynamicComponentDependency PURCH
include fragment SuppAddressMatrixLovSelector;


@DynamicComponentDependency ORDER
include fragment ExternalCustomerLovSelector;
@DynamicComponentDependency ORDER
include fragment CustAddressMatrixLovSelector;
@DynamicComponentDependency SHPMNT
include fragment ShipmentTypeSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset SiteSet for Site;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity Site {
   crud = Read;
   from = "site_uiv";
   supportwarnings = [true];
   attribute Contract Text;
   reference ContractRef(Contract) to SiteUiv(Contract) {
      label = "Site";
   }
   array FromSupplySiteLeadtimeArray(Contract) to SiteToSiteLeadtime(DemandSite);
   array ToDemandSiteLeadtimeArray(Contract) to SiteToSiteLeadtime(SupplySite);
   @DynamicComponentDependency PURCH
   array FromExternalSupplierLeadtimeArray(Contract) to SupplierAddressLeadtime(Contract);
   @DynamicComponentDependency ORDER
   array ToExternalCustomerLeadtimeArray(Contract) to CustomerAddressLeadtime(Contract);
}

@Override
entity SiteToSiteLeadtime {
   crud = Read, Create, Update, Delete;
   ludependencies = SiteToSiteLeadtime, SiteToSitePartLeadtime;
   use attributes = DeliveryTerms, DelTermsLocation, ArrivalRouteId, RouteId, ForwardAgentId, PickingLeadtime, ShipmentType, ShipInventoryLocationNo, DeliveryLeadtime, TransportLeadtime, InternalDeliveryLeadtime, SafetyLeadTime, DistOrderCurrCode, Distance, ExpectedAdditionalCost, ExpAddCostCurrCode;
   @DynamicComponentDependency PURCH
   attribute InternalSupplier Text {
      fetch = "Supplier_API.Get_Vendor_No_From_Contract( supply_site )";
      editable = [false];
   }
   attribute SupplySite Text {
      maxlength = 5;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute DemandSite Text {
      maxlength = 5;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   @DynamicComponentDependency ORDER
   attribute InternalCustomer Text {
      fetch = "Cust_Ord_Customer_API.Get_Customer_No_From_Contract( demand_site )";
      editable = [false];
   }
   attribute DeliveryTerms Text {
      maxlength = 5;
      format = uppercase;
   }
   attribute ShipmentType Text {
      maxlength = 3;
      format = uppercase;
   }
   attribute ShipInventoryLocationNo Text {
      label = "Shipment Location No";
      maxlength = 35;
      format = uppercase;
   }

   attribute TransportLeadtime Number {
      required = [true];
   }
   attribute ManuallyAssignedZoneDb Boolean("TRUE", "FALSE") {
      fetch = "manually_assigned_zone_db";
      label = "Manually Assigned Zone";
   }
   attribute Distance Number;
   attribute ExpectedAdditionalCost Number;
   attribute FreightMapId Text {
      format = uppercase;
   }
   attribute ZoneId Text {
      maxlength = 15;
      format = uppercase;
   }
   attribute ShipViaCode Text {
      label = "Ship-Via";
   }
   attribute DefaultShipVia Enumeration(GenYesNo) {
      fetch = "default_ship_via_db";
      label = "Default";
   }
   attribute ExceptionDb Boolean("TRUE", "FALSE") {
      fetch = "DECODE(Site_To_Site_Part_Leadtime_API.Check_Part_Group_Rows_Exist(demand_site, supply_site), 'TRUE', 'TRUE', 'FALSE')";
      label = "Exception";
      editable = [false];
   }
   attribute DelTermsLocation Text {
      label = "Del Terms Location";
   }
   attribute ArrivalRouteId Text {
      label = "Arrival Route";
      maxlength = 100;
   }
   attribute RouteId Text {
      maxlength = 100;
   }
   attribute ForwardAgentId Text {
      label = "Forwarder";
   }
   attribute PickingLeadtime Number {
      maxlength = 3;
   }
   attribute DeliveryLeadtime Number {
      required = [true];
      maxlength = 3;
   }
   attribute InternalDeliveryLeadtime Number {
      label = "Internal Transport Lead Time";
      required = [true];
      maxlength = 3;
   }
   attribute ExpAddCostCurrCode Text {
      maxlength = 100;
   }
   reference SupplySiteRef(SupplySite) to SiteUiv(Contract) {
      label = "Supply Site";
   }
   reference DemandSiteRef(DemandSite) to SiteUiv(Contract) {
      label = "Demand Site";
   }
   @DynamicComponentDependency PURCH
   reference InternalSupplierRef(InternalSupplier) to Supplier(VendorNo) {
      label = "Internal Supplier";
   }
   @DynamicComponentDependency ORDER
   reference InternalCustomerRef(InternalCustomer) to CustOrdCust1(CustomerNo) {
      label = "Internal Customer";
   }
   reference ShipViaCodeRef(ShipViaCode) to MpccomShipVia(ShipViaCode) {
      label = "Ship-Via";
   }
   reference DeliveryTermsRef(DeliveryTerms) to OrderDeliveryTerm(DeliveryTerms) {
      label = "Delivery Terms";
   }
   @DynamicComponentDependency DISCOM
   reference ArrivalRouteIdRef(ArrivalRouteId) to DeliveryRoute(RouteId) {
      label = "Arrival Route";
   }
   @DynamicComponentDependency DISCOM
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Route";
   }
   reference ForwardAgentIdRef(ForwardAgentId) to ForwarderInfo(ForwarderId) {
      label = "Forwarder";
   }
   @DynamicComponentDependency SHPMNT
   reference ShipmentTypeRef(ShipmentType) to ShipmentType(ShipmentType) {
      label = "Shipment Type";
   }
   reference ShipInventoryLocationNoRef(SupplySite, ShipInventoryLocationNo) to NonRemoteWarehouseShipmentLocation(Contract, LocationNo) {
      label = "Shipment Location No";
   }
   reference DistOrderCurrCodeRef(DistOrderCurrCode) to IsoCurrency(CurrencyCode) {
      label = "Distribution Order Currency";
   }
   reference ExpAddCostCurrCodeRef(ExpAddCostCurrCode) to IsoCurrency(CurrencyCode) {
      label = "Exp Add Cost Currency";
   }
   @DynamicComponentDependency ORDER
   reference ZoneIdRef(SupplySite, ShipViaCode, ZoneId) to FreightZoneJoin(Contract, ShipViaCode, ZoneId) {
      label = "Zone";
   }
   @DynamicComponentDependency ORDER
   reference FreightMapIdRef(FreightMapId) to FreightMap(FreightMapId) {
      label = "Freight Map";
   }
   array FromSupplySitePartLeadtimeArray(SupplySite, DemandSite) to SiteToSitePartLeadtime(SupplySite, DemandSite);
}


@Override
entity SiteToSitePartLeadtime {
   crud = Read, Create, Update, Delete;
   use attributes = SafetyLeadTime, DeliveryTerms, ShipmentType, TransportLeadtime, Distance, ExpectedAdditionalCost, FreightMapId, ZoneId,
   DelTermsLocation, ArrivalRouteId, RouteId, ForwardAgentId, PickingLeadtime, DeliveryLeadtime, InternalDeliveryLeadtime, CurrencyCode;
   ludependencies = SiteToSiteLeadtime, SiteToSitePartLeadtime;
   attribute SupplyChainPartGroup Text {
      label = "Exception";
   }
   attribute ShipViaCode Text {
      label = "Ship-Via";
   }
   attribute SupplySite Text {
      maxlength = 5;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute DemandSite Text {
      maxlength = 5;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute DeliveryTerms Text {
      maxlength = 5;
      format = uppercase;
   }
   attribute ShipmentType Text {
      maxlength = 3;
      format = uppercase;
   }
   attribute TransportLeadtime Number {
      required = [true];
   }
   attribute Distance Number;
   attribute ExpectedAdditionalCost Number;
   attribute FreightMapId Text {
      maxlength = 15;
      format = uppercase;
   }
   attribute ZoneId Text {
      maxlength = 15;
      format = uppercase;
   }
   attribute ManuallyAssignedZoneDb Boolean("TRUE", "FALSE") {
      fetch = "manually_assigned_zone_db";
      label = "Manually Assigned Zone";
   }
   attribute DefaultShipVia Enumeration(GenYesNo) {
      fetch = "default_ship_via_db";
      label = "Default";
   }
   attribute DelTermsLocation Text {
      label = "Del Terms Location";
   }
   attribute ArrivalRouteId Text {
      label = "Arrival Route";
      maxlength = 100;
   }
   attribute RouteId Text {
      maxlength = 100;
   }
   attribute ForwardAgentId Text {
      label = "Forwarder";
   }
   attribute PickingLeadtime Number {
      maxlength = 3;
   }
   attribute DeliveryLeadtime Number {
      maxlength = 3;
   }
   attribute InternalDeliveryLeadtime Number {
      label = "Internal Transport Lead Time";
      maxlength = 3;
   }
   attribute CurrencyCode Text {
      label = "Currency";
   }
   reference SupplyChainPartGroupRef(SupplyChainPartGroup) to SupplyChainPartGroup(SupplyChainPartGroup) {
      label = "Exception";
   }
   reference ShipViaCodeRef(ShipViaCode) to MpccomShipVia(ShipViaCode) {
      label = "Ship-Via";
   }
   reference DeliveryTermsRef(DeliveryTerms) to OrderDeliveryTerm(DeliveryTerms) {
      label = "Delivery Terms";
   }
   @DynamicComponentDependency DISCOM
   reference ArrivalRouteIdRef(ArrivalRouteId) to DeliveryRoute(RouteId) {
      label = "Arrival Route";
   }
   @DynamicComponentDependency DISCOM
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Route";
   }
   reference ForwardAgentIdRef(ForwardAgentId) to ForwarderInfo(ForwarderId) {
      label = "Forwarder";
   }
   @DynamicComponentDependency SHPMNT
   reference ShipmentTypeRef(ShipmentType) to ShipmentType(ShipmentType) {
      label = "Shipment Type";
   }
   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Currency";
   }
   @DynamicComponentDependency ORDER
   reference ZoneIdRef(SupplySite, ShipViaCode, ZoneId) to FreightZoneJoin(Contract, ShipViaCode, ZoneId) {
      label = "Zone";
   }
   @DynamicComponentDependency ORDER
   reference FreightMapIdRef(FreightMapId) to FreightMap(FreightMapId) {
      label = "Freight Map";
   }
}


@Override
@DynamicComponentDependency PURCH
entity SupplierAddressLeadtime {
   ludependencies = SupplierAddressLeadtime, SuppAddrPartLeadtime;
   use attributes = DeliveryTerms, DelTermsLocation, RouteId, ForwardAgentId, VendorDeliveryLeadtime, TransportLeadtime, InternalDeliveryLeadtime, SafetyLeadTime, Distance, ExpectedAdditionalCost, CurrencyCode;
   attribute VendorNo Text {
      label = "Supplier";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute AddrNo Text {
      label = "Supplier Address";
      maxlength = 50;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute DefaultDeliveryAddress Boolean("TRUE", "FALSE") {
      fetch = "Supplier_Info_Address_Type_API.Is_Default(vendor_no,addr_no, Address_Type_Code_API.Decode('DELIVERY'))";
      label = "Default Delivery Address";
      editable = [false];
   }
   attribute ShipViaCode Text {
      label = "Ship-Via";
      maxlength = 3;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute DefaultShipVia Enumeration(GenYesNo) {
      fetch = "default_ship_via_db";
      label = "Default";
   }
   attribute Contract Text {
      label = "Site";
      maxlength = 5;
      required = [true];
      format = uppercase;
   }
   attribute ExceptionDb Boolean("TRUE", "FALSE") {
      fetch = "DECODE(Supp_Addr_Part_Leadtime_API.Check_Part_Group_Rows_Exist(vendor_no, addr_no, contract), 'TRUE', 'TRUE', 'FALSE')";
      label = "Exception";
      editable = [false];
   }
   attribute DeliveryTerms Text {
      label = "Delivery Terms";
      maxlength = 5;
      format = uppercase;
   }
   attribute DelTermsLocation Text {
      label = "Del Terms Location";
      maxlength = 100;
   }
   attribute RouteId Text {
      label = "Arrival Route";
      maxlength = 12;
      format = uppercase;
   }
   attribute ForwardAgentId Text {
      label = "Forwarder";
      maxlength = 20;
   }
   attribute VendorDeliveryLeadtime Number {
      label = "External Transport Lead Time";
      maxlength = 3;
      required = [true];
   }
   attribute TransportLeadtime Number {
      label = "Transport Lead Time";
      required = [true];
   }
   attribute InternalDeliveryLeadtime Number {
      label = "Internal Transport Lead Time";
      maxlength = 3;
      required = [true];
   }
   attribute SafetyLeadTime Number {
      label = "Safety Lead Time";
   }
   attribute Distance Number;

   attribute ExpectedAdditionalCost Number;

   attribute CurrencyCode Text {
      label = "Currency";
      maxlength = 3;
      format = uppercase;
   }

   reference VendorNoRef(VendorNo) to ExternalSupplierLov(SupplierId) {
      label = "Supplier";
   }
   reference AddrNoRef(VendorNo, AddrNo) to SuppAddressMatrixLov(SupplierId, AddressId) {
      label = "Supplier Address";
   }
   reference ShipViaCodeRef(ShipViaCode) to MpccomShipVia(ShipViaCode) {
      label = "Ship-Via";
   }
   reference ContractRef(Contract) to Site(Contract) {
      label = "Site";
   }
   reference DeliveryTermsRef(DeliveryTerms) to OrderDeliveryTerm(DeliveryTerms) {
      label = "Delivery Terms";
   }
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Arrival Route";
   }
   reference ForwardAgentIdRef(ForwardAgentId) to ForwarderInfo(ForwarderId) {
      label = "Forwarder";
   }
   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Currency";
   }
   array FromExternalSupplierPartLeadtimeArray(VendorNo, AddrNo, Contract) to SuppAddrPartLeadtime(VendorNo, AddrNo, Contract);

}

@Override
@DynamicComponentDependency PURCH
entity SuppAddrPartLeadtime {
   ludependencies = SupplierAddressLeadtime, SuppAddrPartLeadtime;
   use attributes = DeliveryTerms, DelTermsLocation, RouteId, ForwardAgentId, DeliveryLeadtime, TransportLeadtime, InternalDeliveryLeadtime, SafetyLeadTime, Distance, ExpectedAdditionalCost, CurrencyCode;

   attribute VendorNo Text {
      label = "Supplier";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute AddrNo Text {
      label = "Supplier Address";
      maxlength = 50;
      required = [true];
      format = uppercase;
   }
   attribute Contract Text {
      label = "Site";
      maxlength = 5;
      required = [true];
      format = uppercase;
   }
   attribute SupplyChainPartGroup Text {
      label = "Exception";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute ShipViaCode Text {
      label = "Ship-Via";
      maxlength = 3;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute DefaultShipVia Enumeration(GenYesNo) {
      fetch = "default_ship_via_db";
      label = "Default";
   }
   attribute DeliveryTerms Text {
      maxlength = 5;
      format = uppercase;
   }
   attribute DelTermsLocation Text {
      maxlength = 100;
   }
   attribute RouteId Text {
      label = "Arrival Route";
      maxlength = 12;
      format = uppercase;
   }
   attribute ForwardAgentId Text {
      label = "Forwarder";
      maxlength = 20;
   }
   attribute DeliveryLeadtime Number {
      label = "External Transport Lead Time";
      maxlength = 3;
      required = [true];
   }
   attribute TransportLeadtime Number {
      label = "Transport Lead Time";
      required = [true];
   }
   attribute InternalDeliveryLeadtime Number {
      label = "Internal Transport Lead Time";
      maxlength = 3;
      required = [true];
   }
   attribute SafetyLeadTime Number;

   attribute Distance Number;

   attribute ExpectedAdditionalCost Number {
      label = "Expected Additional Cost";
   }
   attribute CurrencyCode Text {
      label = "Currency";
      maxlength = 3;
      format = uppercase;
   }
   reference AddrNoRef(VendorNo, AddrNo) to SupplierAddress(VendorNo, AddrNo) {
      label = "Supplier Address";
   }
   reference ContractRef(Contract) to Site(Contract) {
      label = "Site";
   }
   reference SupplyChainPartGroupRef(SupplyChainPartGroup) to SupplyChainPartGroup(SupplyChainPartGroup) {
      label = "Exception";
   }
   reference ShipViaCodeRef(ShipViaCode) to MpccomShipVia(ShipViaCode) {
      label = "Ship-Via";
   }
   reference DeliveryTermsRef(DeliveryTerms) to OrderDeliveryTerm(DeliveryTerms) {
      label = "Delivery Terms";
   }
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Arrival Route";
   }
   reference ForwardAgentIdRef(ForwardAgentId) to ForwarderInfo(ForwarderId) {
      label = "Forwarder";
   }
   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Currency";
   }
}


@Override
@DynamicComponentDependency ORDER
entity CustomerAddressLeadtime {
   ludependencies = CustomerAddressLeadtime, CustAddrPartLeadtime;
   use attributes = DeliveryTerms, DelTermsLocation, RouteId, ForwardAgentId, PickingLeadtime, ShipmentType, ShipInventoryLocationNo, DeliveryLeadtime, Distance, ExpectedAdditionalCost, CurrencyCode, FreightMapId, ZoneId;
   attribute CustomerNo Text {
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute AddrNo Text {
      label = "Delivery Address";
      maxlength = 50;
      required = [true];
      editable = [ETag = null];
   }
   attribute DefaultAddress Boolean("TRUE", "FALSE") {
      fetch = "DECODE(Customer_Info_Address_Type_API.Is_Default(customer_no,addr_no, Address_Type_Code_API.Decode('DELIVERY')), 'TRUE', 'TRUE', 'FALSE')";
      editable = [false];
   }
   attribute ShipViaCode Text {
      label = "Ship-Via";
      maxlength = 3;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute DefaultShipVia Enumeration(GenYesNo) {
      fetch = "default_ship_via_db";
      label = "Default";
   }
   attribute Contract Text {
      label = "Site";
      maxlength = 5;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute ExceptionDb Boolean("TRUE", "FALSE") {
      fetch = "Cust_Addr_Part_Leadtime_API.Check_Part_Group_Rows_Exist( customer_no, addr_no, contract )";
      label = "Exception";
      editable = [false];
   }
   attribute DeliveryTerms Text {
      maxlength = 5;
      format = uppercase;
   }
   attribute DelTermsLocation Text {
      maxlength = 100;
   }
   attribute RouteId Text {
      label = "Route";
      maxlength = 12;
      format = uppercase;
   }
   attribute ForwardAgentId Text {
      label = "Forwarder";
      maxlength = 20;
   }
   attribute PickingLeadtime Number {
      label = "Picking Lead Time";
      maxlength = 3;
   }
   attribute ShipmentType Text {
      maxlength = 3;
      format = uppercase;
   }
   attribute ShipInventoryLocationNo Text {
      label = "Shipment Location No";
      maxlength = 35;
      format = uppercase;
   }
   attribute DeliveryLeadtime Number {
      label = "External Transport Lead Time";
      maxlength = 3;
      required = [true];
   }
   attribute Distance Number;
   attribute ExpectedAdditionalCost Number;
   attribute CurrencyCode Text {
      label = "Currency";
      maxlength = 3;
      format = uppercase;
   }
   attribute FreightMapId Text {
      maxlength = 15;
      format = uppercase;
   }
   attribute ZoneId Text {
      maxlength = 15;
      format = uppercase;
   }
   attribute ManuallyAssignedZoneDb Boolean("TRUE", "FALSE") {
      fetch = "manually_assigned_zone_db";
      label = "Manually Assigned Zone";
      editable = [ETag != null];
   }
   reference CustomerNoRef(CustomerNo) to ExternalCustomerLov(CustomerNo) {
      label = "Customer No";
   }
   reference AddrNoRef(CustomerNo, AddrNo) to CustAddressMatrixLov(CustomerNo, AddrNo) {
      label = "Delivery Address";
   }
   reference ShipViaCodeRef(ShipViaCode) to MpccomShipVia(ShipViaCode) {
      label = "Ship-Via";
   }
   reference ContractRef(Contract) to Site(Contract) {
      label = "Site";
   }
   reference DeliveryTermsRef(DeliveryTerms) to OrderDeliveryTerm(DeliveryTerms) {
      label = "Delivery Terms";
   }
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Route";
   }
   reference ForwardAgentIdRef(ForwardAgentId) to ForwarderInfo(ForwarderId) {
      label = "Forwarder";
   }
   reference ShipmentTypeRef(ShipmentType) to ShipmentType(ShipmentType) {
      label = "Shipment Type";
   }
   reference ShipInventoryLocationNoRef(Contract, ShipInventoryLocationNo) to NonRemoteWarehouseShipmentLocation(Contract, LocationNo) {
      label = "Shipment Location No";
   }
   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Currency";
   }
   reference FreightMapIdRef(FreightMapId) to FreightMap(FreightMapId) {
      label = "Freight Map";
   }
   reference ZoneIdRef(Contract, ShipViaCode, ZoneId) to FreightZoneJoin(Contract, ShipViaCode, ZoneId) {
      label = "Zone";
   }
   array ToExternalCustomerPartLeadtimeArray(CustomerNo, AddrNo, Contract) to CustAddrPartLeadtime(CustomerNo, AddrNo, Contract);

}


@Override
@DynamicComponentDependency ORDER
entity CustAddrPartLeadtime {
   ludependencies = CustomerAddressLeadtime, CustAddrPartLeadtime;
   use attributes = DeliveryTerms, DelTermsLocation, RouteId, ForwardAgentId, PickingLeadtime, ShipmentType, DeliveryLeadtime, Distance, ExpectedAdditionalCost, CurrencyCode, FreightMapId, ZoneId;
   attribute CustomerNo Text {
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute AddrNo Text {
      label = "Delivery Address";
      maxlength = 50;
      required = [true];
      editable = [ETag = null];
   }
   attribute Contract Text {
      label = "Site";
      maxlength = 5;
      required = [true];
      format = uppercase;
   }
   attribute SupplyChainPartGroup Text {
      label = "Exception";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute ShipViaCode Text {
      label = "Ship-Via";
      maxlength = 3;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute DefaultShipVia Enumeration(GenYesNo) {
      fetch = "default_ship_via_db";
      label = "Default";
   }
   attribute DeliveryTerms Text {
      maxlength = 5;
      format = uppercase;
   }
   attribute DelTermsLocation Text {
      maxlength = 100;
   }
   attribute RouteId Text {
      maxlength = 12;
      format = uppercase;
   }
   attribute ForwardAgentId Text {
      label = "Forwarder";
      maxlength = 20;
   }
   attribute PickingLeadtime Number {
      label = "Picking Lead Time";
      maxlength = 3;
   }
   attribute ShipmentType Text {
      maxlength = 3;
      format = uppercase;
   }
   attribute DeliveryLeadtime Number {
      label = "External Transport Lead Time";
      maxlength = 3;
      required = [true];
   }
   attribute Distance Number;

   attribute ExpectedAdditionalCost Number;

   attribute CurrencyCode Text {
      label = "Currency";
      maxlength = 3;
      format = uppercase;
   }
   attribute FreightMapId Text {
      label = "Freight Map";
      maxlength = 15;
      format = uppercase;
   }
   attribute ZoneId Text {
      label = "Zone";
      maxlength = 15;
      format = uppercase;
   }
   attribute ManuallyAssignedZoneDb Boolean("TRUE", "FALSE") {
      label = "Manually Assigned Zone";
      editable = [ETag != null];
   }
   reference ContractRef(Contract) to Site(Contract) {
      label = "Site";
   }
   reference SupplyChainPartGroupRef(SupplyChainPartGroup) to SupplyChainPartGroup(SupplyChainPartGroup) {
      label = "Exception";
   }
   reference ShipViaCodeRef(ShipViaCode) to MpccomShipVia(ShipViaCode) {
      label = "Ship-Via";
   }
   reference DeliveryTermsRef(DeliveryTerms) to OrderDeliveryTerm(DeliveryTerms) {
      label = "Delivery Terms";
   }
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Route";
   }
   reference ForwardAgentIdRef(ForwardAgentId) to ForwarderInfo(ForwarderId) {
      label = "Forwarder";
   }
   reference ShipmentTypeRef(ShipmentType) to ShipmentType(ShipmentType) {
      label = "Shipment Type";
   }
   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Currency";
   }
   reference FreightMapIdRef(FreightMapId) to FreightMap(FreightMapId) {
      label = "Freight Map";
   }
   reference ZoneIdRef(Contract, ShipViaCode, ZoneId) to FreightZoneJoin(Contract, ShipViaCode, ZoneId) {
      label = "Zone";
   }
}

---------------------------------- ACTIONS ----------------------------------
//! TODO: Should be refactored as a function!
@DynamicComponentDependency ORDER
action SetFreightMapId Text {
   initialcheck none;
   parameter ShipViaCode Text;
   parameter SupplySite Text;
   parameter ZoneId Text;
}

//! TODO: Should be refactored as a function!
@DynamicComponentDependency PURCH
action GetVendorNoFromContract Text {
   initialcheck none;
   parameter SupplySite Text;
}

//! TODO: Should be refactored as a function!
@DynamicComponentDependency ORDER
action GetCustomerNoFromContract Text {
   initialcheck none;
   parameter DemandSite Text;
}

//! TODO: Should be refactored as a function!
@DynamicComponentDependency DISCOM
action GetForwardAgentId Text {
   initialcheck none;
   parameter RouteId Text;
}