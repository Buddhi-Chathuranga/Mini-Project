---------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ----------------------------------------------------------
-- 2021-07-12  JaThlk  SC21R2-1921, Removed ReservationDetailsProjectDeliveryCommand since the component PDMPRO has been obsoleted.
-- 2021-01-20  Asawlk  SCZ-12896, Modified enabling of MoveReservationsCommand and MoveReservationswithTransportTaskCommand for
-- 2021-01-20          Proj Misc Demands.
-- 2020-10-08  Asawlk  SC2021R1-318, Modified ReservationDetailsWorkOrderCommand to change the navigation of WORK_TASK type reservations to
-- 2020-10-08          Work Task page, also modified MoveReservationswithTransportTaskCommand to handle move reservations of same type.
-- 2020-03-17  RoJalk  SCSPRING20-677, Added the command ReservationDetailsShipmentOrderCommand.
-- 2020-03-11  RoJalk  SCSPRING20-1930, Modified enable logic in MoveReservationswithTransportTaskCommand to support Shipment Order.
-- 2019-09-09  YasMlk  SCFALL19-225, Added get method for OrderSupplyDemandTypeDb in IdentifySerialsCommand.
-- 2019-09-04  MeAblk  SCFALL19-87, Merge the bug 149643 (SCZ-6081).
-- 2019-06-12  JaThlk  SCUXXW4-21635, Changed the navigate to Handling Units In Stock page to send Handling Unit Id list.
-- 2019-06-06  JaThlk  SCUXXW4-21919, Added a message in ReservationDetailsProjectDeliveryCommand instead of navigating to project delivery solution.
-- 2019-04-26  fandse  SCUXXW4-7047, Corrected ViewConfigurationCommand must be execute since mode is SingleRecord.
-- 2019-03-13  ChFolk  SCUXXW4-17194, Included dynamic dependency anotations where necessary.
-- 2019-03-07  ChFolk  SCUXXW4-16871, Correct dynamic dependency.
-- 2018-12-26  JaThlk  SCUXXW4-7047, Fixed the navigation in ViewConfigurationCommand and changed the mode to SingleRecord.
-- 2018-10-11  JaThlk  SCUXXW4-7047, Implemented SplitReservationAssistant.
-- 2018-09-27  FANDSE  SCUXXW4-7047, Removed comments.
-- 2018-09-06  FANDSE  SCUXXW4-7047, Fixed ShowTopLevelHandlingUNitCommand, navigation didn't work due to spaces
-- 2018-09-01  FANDSE  SCUXXW4-7047, Fixed @DynamicComponentDependency. Removed comments.
-- 2018-08-31  FANDSE  SCUXXW4-7047, Fixed Navigations to Transport Task, used navigate instead of bulknavigate to get the variable into the navigation.
-- 2018-08-28  FANDSE  SCUXXW4-7047, Fixed Navigations for Numeric fields after FW-correction TEUXX-13411.
-- 2018-08-27  FANDSE  SCUXXW4-7047, Fixed Move Reservation Command.
-- 2018-08-21  FANDSE  SCUXXW4-7047, Fixed TransportTaskCommand.
-- 2018-08-16  FANDSE  SCUXXW4-7047, Fixed commands for Shop Order and Interim Order
-- 2018-08-15  FANDSE  SCUXXW4-7047, Converted from tbwInvPartStockReservation using MTG Version: 1.21, initial commit, more changes will follow
---------------------------------------------------------------------------------

client InventoryPartInStockReservations;
component INVENT;
layer Core;
projection InventoryPartInStockReservationsHandling;

include fragment UserAllowedSiteLovSelector;
include fragment InventoryPartLovSelector;
include fragment MoveResWithTransportTask;
include fragment InventoryLocation5Selector;
include fragment TemporaryPartTrackingSerialSelector;
include fragment SplitReservationAssistant;
include fragment SequenceGeneratorAssistant;
include fragment IdentifySerialsByBarcodeDynamicAssistant;
warningsenabled = CreateSerialSequence;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry InventoryPartInStockReservationsNavEntry parent InventNavigator.WarehouseManagementQuantityinStock at index 200 {
      label = "Inventory Part In Stock Reservations";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page List using InventoryPartInStockReservationSet {
   label = "Inventory Part In Stock Reservations";
   startupmode = search;
   list InvPartStockReservationList;
}

---------------------------------- DIALOGS ----------------------------------
dialog MoveReservationDialog for MoveReservationStructure {
   label = "Move Reservations";
   input(Contract);
   output(ToLocationNo, MoveComment);
   group MoveReservationGroup;
   command Ok;
   command Cancel;
}

---------------------------------- GROUPS -----------------------------------
group MoveReservationGroup for MoveReservationStructure {
   label = "Move Reservations";
   lov ToLocationNoRef with ReferenceInventoryLocation5Selector using GetLocationNos(Contract) {
      description = ToLocationNoRef.LocationName;
      size = Large;
   }
   field MoveComment {
      size = Large;
   }
}

--------------------------------- COMMANDS ----------------------------------
@DynamicComponentDependency SHPORD
command ReservationDetailsShopOrderCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "0"];
   bulkexecute {
      call CheckTypeOfShopOrder(Selection) into TypeOfShopOrder;
      if [TypeOfShopOrder = "MroShopOrder"] {
         bulknavigate "page/ShopOrder/Form?$filter=OrderNo eq $[OrdRef1] and ReleaseNo eq $[OrdRef2] and SequenceNo eq $[OrdRef3]";
      }
      else {
         if [TypeOfShopOrder = "DispositionShopOrder"] {
            bulknavigate "page/DispositionShopOrder/Form?$filter=OrderNo eq $[OrdRef1] and ReleaseNo eq $[OrdRef2] and SequenceNo eq $[OrdRef3]";
         }
         else {
            if [TypeOfShopOrder = "ShopOrder"] {
               bulknavigate "page/ShopOrder/Form?$filter=OrderNo eq $[OrdRef1] and ReleaseNo eq $[OrdRef2] and SequenceNo eq $[OrdRef3]";
            }
            else {
               info("Can not open a mix of Shop Order, MRO Shop Order or Disposition Shop Order at the same time.");
            }
         }
      }
   }
}

@DynamicComponentDependency ORDER
command ReservationDetailsCustomerOrderCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "1"];
   bulkexecute {
      bulknavigate "page/CustomerOrder/Form?$filter=OrderNo eq $[OrdRef1]";
   }
}

@DynamicComponentDependency PURCH
command ReservationDetailsPurchaseOrderCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "2"];
   bulkexecute {
      bulknavigate "page/SupplierMaterialForPurchaseOrderLine/Form?$filter=OrderNo eq $[OrdRef1] and LineNo eq $[OrdRef2] and ReleaseNo eq $[OrdRef3]";
   }
}

command ReservationDetailsMaterialRequisitionCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "3"];
   bulkexecute {
      bulknavigate "page/MaterialRequisition/Form?$filter=OrderNo eq $[OrdRef1]";
   }
}

@DynamicComponentDependency PROJ
command ReservationDetailsProjectMiscDemandCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "30"];
   bulkexecute {
      bulknavigate "page/ProjectProcurement/ActivityLevel?$filter=ProjectId eq $[OrdRef1] and ActivitySeq eq ${OrdRef3}";
   }
}

@DynamicComponentDependency DOP
command ReservationDetailsDopDemandCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "13"];
   bulkexecute {
      bulknavigate "page/DopHeader/DopOrder?$filter=DopId eq $[OrdRef1] and DopOrderId eq ${OrdRef2}";
   }
}

@DynamicComponentDependency DOP
command ReservationDetailsDopNettedDemandCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "31"];
   bulkexecute {
      bulknavigate "page/DopHeader/DopOrder?$filter=DopId eq $[OrdRef1] and DopOrderId eq ${OrdRef2}";
   }
}

@DynamicComponentDependency WO
command ReservationDetailsWorkOrderCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "WORK_TASK"];
   bulkexecute {
      bulknavigate "page/WorkTask/Form?$filter=TaskSeq eq ${OrdRef1}";
   }
}

@DynamicComponentDependency ORDSTR
command ReservationDetailsInterimOrderDemandCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "29"];
   bulkexecute {
      call CheckTypeOfInterimOrder(Selection) into TypeOfInterimOrder;
      if [TypeOfInterimOrder = "MroInterimOrder"] {
         bulknavigate "page/MROInterimOrderHeader/InterimOrder?$filter=InterimHeaderId eq $[OrdRef1] and InterimOrderNo eq $[OrdRef2]";
      }
      else {
         if [TypeOfInterimOrder = "InterimOrder"] {
            bulknavigate "page/InterimOrderHeader/InterimOrder?$filter=InterimHeaderId eq $[OrdRef1] and InterimOrderNo eq $[OrdRef2]";
         }
         else {
            info("Can not open Interim Order and MRO Interim Order at the same time.");
         }
      }
   }
}

@DynamicComponentDependency ORDER
command ReservationDetailsSourcedOrderCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "25"];
   bulkexecute {
      bulknavigate "page/CustomerOrder/Form?$filter=OrderNo eq $[OrdRef1]";
   }
}

@DynamicComponentDependency ORDER
command ReservationDetailsExtCustOrderCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "23"];
   bulkexecute {
      bulknavigate "page/CustomerOrder/Form?$filter=OrderNo eq $[OrdRef1]";
   }
}

command ReservationDetailsTransportTaskCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "33"];
   bulkexecute {
      bulknavigate "page/TransportTask/Form?$filter=TransportTaskId eq ${OrdRef1}";
   }
}

@DynamicComponentDependency DISORD
command ReservationDetailsDistributionOrderCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "27"];
   bulkexecute {
      bulknavigate "page/DistributionOrder/Form?$filter=OrderNo eq $[OrdRef1]";
   }
}

@DynamicComponentDependency PMRP
command ReservationDetailsMaterialTransferRequisitionCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "32"];
   bulkexecute {
      bulknavigate "page/MaterialTransferRequisition/Form?$filter=Contract eq $[Contract] and PartNo eq $[PartNo] and RequisitionNo eq $[OrdRef1]";
   }
}

@DynamicComponentDependency CROMFG
command ReservationDetailsComponentRepairOrderCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "34"];
   bulkexecute {
      bulknavigate "page/ComponentRepairOrder/Form?$filter=CroNo eq $[OrdRef1]";
   }
}

@DynamicComponentDependency PROJ
command ReservationDetailsDesignObjectDemandCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "DESIGN_OBJECT_DEMAND"];
   bulkexecute {
      bulknavigate "page/Activity/Form?$filter=ActivitySeq eq $[ActivitySeq]";
   }
}

@DynamicComponentDependency PURCH
command ReservationDetailsSupplierShipmentCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "SUPPLIER_SHIPMENT"];
   bulkexecute {
      bulknavigate "page/SupplierShipment/Form?$filter=ShipmentId eq ${OrdRef1}";
   }
}

@DynamicComponentDependency PRJDEL
command ReservationDetailsProjectDeliverablesCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "PROJECT_DELIVERABLES"];
   bulkexecute {
      bulknavigate "page/DeliveryStructureItemShipmentHandling/ItemDetails?$filter=ItemNo eq ${OrdRef1} and ItemRevision eq $[OrdRef2]";
   }
}

@DynamicComponentDependency PRJDEL
command ReservationDetailsProjectDeliverablesMaterialCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "PROJ_DELIVERABLES_MATERIAL"];
   bulkexecute {
      bulknavigate "page/DeliveryStructureItemExecutionHandling/ItemDetails?$filter=ItemNo eq $[ProjectDeliverableMaterialItemNoFromPlanningNo]";
   }
}

@DynamicComponentDependency SHIPOD
command ReservationDetailsShipmentOrderCommand for InvPartStockReservation {
   label = "Reservation Details";
   mode = SelectedRecords;
   enabled = [SupplyDemandType = "SHIPMENT_ORDER"];
   bulkexecute {
      bulknavigate "page/ShipmentOrder/Form?$filter=ShipmentOrderIdText eq $[OrdRef1]";
   }
}

@DynamicComponentDependency CFGCHR
command ViewConfigurationCommand for InvPartStockReservation {
   label = "View Configuration";
   mode = SingleRecord;
   enabled = [ConfigurationId != "*"];
   variable Mode;
   execute {
      set Mode = "View";
      navigate "assistant/PartConfigurationAssistant/EditConfiguration?$action=InitConfiguration{  VarMode:$[Mode],
                                                                                                   VarPartNo:$[PartNo],
                                                                                                   VarConfigurationId:$[ConfigurationId]}";
   }
}

command IdentifySerialsCommand for InvPartStockReservation {
   label = "Identify Serials";
   enabled = [SerialNo = "*" and SerialTrackingatReceiptandIssue = "TRUE"];
   variable ShipmentIdVar {
      type = Text;
   }
   execute {
      call ConvertToString(ShipmentId) into ShipmentIdVar;
      call GetOrderSupplyDemandTypeDb(OrderSupplyDemandType) into OrderSupplyDemandTypeDbVar;
      assistant SplitReservationAssistant(OrderSupplyDemandTypeDbVar, OrdRef1, OrdRef2, OrdRef3, OrdRef4, PickListNo, ShipmentIdVar, QtyReserved, Contract, PartNo, ConfigurationId, LocationNo, LotBatchNo, EngChgLevel, WaivDevRejNo, ActivitySeq, HandlingUnitId) {
         when CANCEL {
            exit;
         }
      }
   }
}

command MoveReservationsCommand for InvPartStockReservation {
   label = "Move";
   mode = SelectedRecords;
   enabled = [SupplyDemandType in("0", "1", "3", "13", "31", "27", "PROJECT_DELIVERABLES", "SHIPMENT_ORDER", "30")];
   bulkexecute {
      set CommonSite = null;
      call FindCommonSiteSelected(Selection) into CommonSite;
      if [CommonSite = null] {
         error("Not all reservations are on the same site.");
      }
      if [CommonSite != null] {
         dialog MoveReservationDialog(CommonSite) into(ToLocationNo, MoveComment) {
            when OK {
               bulkcall MoveReservation(PartNo, ConfigurationId, Contract, LocationNo, ToLocationNo, SupplyDemandType, OrdRef1, OrdRef2, OrdRef3, OrdRef4,
               LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq, HandlingUnitId, QtyReserved, PickListNo, QtyPicked, PickListPrintedDbText,
               ShipmentId, MoveComment);
            }
         }
      }
   }
}

command MoveReservationswithTransportTaskCommand for InvPartStockReservation {
   label = "Move with Transport Task";
   mode = SelectedRecords;
   enabled = [SupplyDemandType in("0", "1", "3", "WORK_TASK", "13", "31", "27", "PROJECT_DELIVERABLES", "SHIPMENT_ORDER", "30")];
   bulkexecute {
      set CommonSite = null;
      call FindCommonSiteSelected(Selection) into CommonSite;
      if [CommonSite = null] {
         error("Not all reservations are on the same site.");
      }
      if [CommonSite != null] {
         dialog MoveResWithTransportTaskDialog(CommonSite) into(ToLocationNo) {
            when OK {
               bulkcall MoveResWithTransportTask(PartNo, ConfigurationId, Contract, LocationNo, ToLocationNo, SupplyDemandType, OrdRef1, OrdRef2, OrdRef3, OrdRef4,
               LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq, HandlingUnitId, QtyReserved, PickListNo, QtyPicked, PickListPrintedDbText,
               ShipmentId);
            }
         }
      }
   }
}

command TransportTaskCommand for InvPartStockReservation {
   label = "Transport Task";
   mode = SelectedRecords;
   enabled = [OnTransportTask = true];
   variable TransportTaskFilter;
   bulkexecute {
      call CreateTransportTaskFilter(Selection) into TransportTaskFilter;
      navigate "page/TransportTasks/List?$filter=${TransportTaskFilter}";
   }
}

command ShowTopLevelHUCommand for InvPartStockReservation {
   label = "Show Top Level Handling Unit ";
   mode = SelectedRecords;
   enabled = [HandlingUnitId != 0];
   variable DummyTopHUListVar Text;
   bulkexecute {
      call GetHandlingUnitIdList(Selection) into DummyTopHUListVar;
      navigate "page/HandlingUnitsInStock/List?searchcontext=HandlingUnitIdList:$[DummyTopHUListVar]";
   }
}

----------------------------------- LISTS -----------------------------------
list InvPartStockReservationList for InvPartStockReservation {
   lov PartNoRef with ReferenceInventoryPartLovSelector;
   field PartDescription;
   lov ContractRef with ReferenceUserAllowedSiteLovSelector;
   field QtyReserved;
   field OrderSupplyDemandType;
   field OrdRef1 {
      label = "Order Ref 1";
   }
   field OrdRef2 {
      label = "Order Ref 2";
   }
   field OrdRef3 {
      label = "Order Ref 3";
   }
   field OrdRef4 {
      label = "Order Ref 4";
   }
   @DynamicComponentDependency ORDER
   field PickListNoRef;
   field QtyPicked;
   field PickListPrintedDb {
      size = Small;
   }
   field ShipmentId;
   field ConfigurationId;
   field LocationNo;
   field HandlingUnitId;
   field HandlingUnitRef.HandlingUnitTypeId {
      label = "Handling Unit Type ID";
   }
   field TypeDescription;
   field HandlingUnitRef.Sscc {
      label = "SSCC";
   }
   field HandlingUnitRef.AltHandlingUnitLabelId {
      label = "Alt Handling Unit Label ID";
   }
   field Warehouse;
   field BayNo;
   field RowNo;
   field TierNo;
   field BinNo;
   field LotBatchNo;
   field SerialNo;
   field WaivDevRejNo;
   field EngChgLevel;
   @DynamicComponentDependency PROJ
   field ActivitySeqRef;
   field LastActivityDate;
   field ConditionCode;
   field TopParentHandlingUnitID;
   field TopParentHandlingUnitTypeID;
   field TopParentHandlingUnitTypeDesc;
   field TopParentSSCC;
   field TopParentAltHandlingUnitLabelID;
   field PickByChoiceBlockedDb {
      size = Small;
   }
   field OnTransportTask {
      size = Small;
   }

   commandgroup ReservationDetailsCmdGroup {
      label = "Reservation Details";
      @DynamicComponentDependency SHPORD
      command ReservationDetailsShopOrderCommand;
      @DynamicComponentDependency ORDER
      command ReservationDetailsCustomerOrderCommand;
      @DynamicComponentDependency PURCH
      command ReservationDetailsPurchaseOrderCommand;
      command ReservationDetailsMaterialRequisitionCommand;
      @DynamicComponentDependency PROJ
      command ReservationDetailsProjectMiscDemandCommand;
      @DynamicComponentDependency DOP
      command ReservationDetailsDopDemandCommand;
      @DynamicComponentDependency DOP
      command ReservationDetailsDopNettedDemandCommand;
      @DynamicComponentDependency WO
      command ReservationDetailsWorkOrderCommand;
      @DynamicComponentDependency ORDSTR
      command ReservationDetailsInterimOrderDemandCommand;
      @DynamicComponentDependency ORDER
      command ReservationDetailsSourcedOrderCommand;
      @DynamicComponentDependency ORDER
      command ReservationDetailsExtCustOrderCommand;
      command ReservationDetailsTransportTaskCommand;
      @DynamicComponentDependency DISORD
      command ReservationDetailsDistributionOrderCommand;
      @DynamicComponentDependency PMRP
      command ReservationDetailsMaterialTransferRequisitionCommand;
      @DynamicComponentDependency CROMFG
      command ReservationDetailsComponentRepairOrderCommand;
      @DynamicComponentDependency PROJ
      command ReservationDetailsDesignObjectDemandCommand;
      @DynamicComponentDependency PURCH
      command ReservationDetailsSupplierShipmentCommand;
      @DynamicComponentDependency PRJDEL
      command ReservationDetailsProjectDeliverablesCommand;
      @DynamicComponentDependency PRJDEL
      command ReservationDetailsProjectDeliverablesMaterialCommand;
      @DynamicComponentDependency SHIPOD
      command ReservationDetailsShipmentOrderCommand;
   }
   @DynamicComponentDependency CFGCHR
   command ViewConfigurationCommand;
   command IdentifySerialsCommand;
   command MoveReservationsCommand;
   command MoveReservationswithTransportTaskCommand;
   command TransportTaskCommand;
   command ShowTopLevelHUCommand;
}