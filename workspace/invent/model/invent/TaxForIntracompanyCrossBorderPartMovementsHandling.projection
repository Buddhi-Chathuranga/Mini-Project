-----------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------
-- 2021-07-07  MaEelk  SC21R2-1884, Created.
-----------------------------------------------------------------------------

projection TaxForIntracompanyCrossBorderPartMovementsHandling;
component INVENT;
layer Core;
description "This API is used to define Sender, Receiver Tax Codes use for Intracompany Cross-Border Part Movements";
category Users;

--------------------------------- FRAGMENTS ---------------------------------
include fragment TaxCodeRestrictedSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset CrossBorderPartMoveSet for CrossBorderPartMove {
   context Company(Company);

}

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity CrossBorderPartMove {
   crud = Create, Delete;
   reference PartCatalogRef(PartNo) to PartCatalog(PartNo);

   array CrossBorderPartSendTaxArray(Company, SenderCountry, ReceiverCountry, PartNo) to CrossBorderPartSendTax(Company, SenderCountry, ReceiverCountry, PartNo);
   array CrossBorderPartReceTaxArray(Company, SenderCountry, ReceiverCountry, PartNo) to CrossBorderPartReceTax(Company, SenderCountry, ReceiverCountry, PartNo);

}

@Override
entity CrossBorderPartSendTax {
   crud = Create, Delete;
   attribute TaxLineNo Number {
      required = [false];
      editable = [false];
   }

   reference TaxCodeRef(Company, TaxCode) to TaxCodeRestricted(Company, FeeCode);
}

@Override
entity CrossBorderPartReceTax {
   crud = Create, Delete;
   attribute TaxLineNo Number {
      required = [false];
      editable = [false];
   }

   reference TaxCodeRef(Company, TaxCode) to TaxCodeRestricted(Company, FeeCode);

}

------------------------------- ENUMERATIONS --------------------------------


---------------------------------- QUERIES ----------------------------------


---------------------------------- ACTIONS ----------------------------------


--------------------------------- FUNCTIONS ---------------------------------
function GetValidFrom Date {
   parameter Company Text;
   parameter TaxCode Text;

}

function GetValidTaxCodes List<Entity(TaxCodeRestricted)> {
   parameter Company Text;
   where = "COMPANY = :Company  AND ((FEE_TYPE_DB IN('TAX') AND FEE_RATE = 0) OR FEE_TYPE_DB IN('CALCTAX')) AND DEDUCTIBLE = 100";

}
-------------------------------- STRUCTURES ---------------------------------


--------------------------------- VIRTUALS ----------------------------------


--------------------------------- SUMMARIES ---------------------------------


-------------------------------- SINGLETONS ---------------------------------
