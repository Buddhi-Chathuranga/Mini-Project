----------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------------
-- 2021-05-10  JaThlk  Bug 159167(SCZ-14716), Modified MaterialRequisition entity and ChangeStatusHeader action to add subset of MaterialRequisStatus
-- 2021-05-10          in StatusCode in order to remove Reserved status from Material Requisition header.
-- 2019-12-26  ChFolk  SCXTEND-994, Added CreatedByUserId.
-- 2019-03-19  fandse  SCUXXW4-17417, When changing status in the header the lines were not refreshed, ludepndency added.
-- 2019-01-08  fandse  SCUXXW4-14262, Added handling of Pre Posting - Removed unnecesarry fragments as we now have support for fragments in fragments
-- 2018-12-17  milise  SCUXXW4-6850, Added fragment MaterialRequisitionLinesList.
-- 2018-11-29  fandse  SCUXXW4-6335, Changes after code review and demo.
-- 2018-11-24  fandse  SCUXXW4-6335, Added dynamic labels for code part, changes from code review.
-- 2018-11-22  ChFolk  SCUXXW4-5576, Coverted dlgManualDelivery using MTG 1.33. Added virtuals ManualIssueVirtual and InvPartInStockToIssueVirtual and action IssueMaterial.
-- 2018-11-16  ChFolk  SCUXXW4-5571, Added virtuals ManualReservationVirtual and InvPartInStockToReserveVirtual and action ReserveMaterials.
-- 2018-11-15  fandse  SCUXXW4-6335, Added Total value in header, made it possible to insert header and line, concatenation, dynamic dependencies etc.
-- 2018-11-13  fandse  SCUXXW4-6335, Further refinement, more commands added, fixing validations, dynamic code etc.
-- 2018-11-08  fandse  SCUXXW4-6335, Initial version of frmMaterialRequisition converted to Aurena with MTG Version: 1.31.
----------------------------------------------------------------------------------------------------------

projection MaterialRequisitionHandling;
component INVENT;
layer Core;
description "Manage MaterialRequisition";
category Users;
include fragment MaterialRequisitionLinesList;
include fragment InventoryPartLovMrpSelector;
include fragment MaterialRequisitionInitialCheck;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset MaterialRequisitionSet for MaterialRequisition;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity MaterialRequisition {
   crud = Create, Read, Update, Delete;
   ludependencies = DocumentText, MaterialRequisLine;

   keys = OrderNo, OrderClass {
      where = "ORDER_NO = :OrderNo and ORDER_CLASS_DB = :OrderClass";
   }
   supportwarnings = [true];
   use attributes = StatusCode, Contract, IntCustomerNo, DueDate, DateEntered, DestinationId, InternalDestination, NoteText, NoteId, PreAccountingId;
   attribute OrderNo Text {
      maxlength = 100;
   }
   attribute StatusCode Enumeration(MaterialRequisStatus.HeaderStatus) {
      label = "Status";
      editable = [false];
      required = [Etag != null];
   }
   attribute Contract Text {
      editable = [ETag = null];
   }
   attribute TotalValue Number {
      fetch = "Material_Requisition_API.Get_Total_Value(order_class,order_no,'FALSE')";
      editable = [false];
      label = "Total Amt/Base";
   }
   attribute IntCustomerNo Text {
      label = "Internal Customer No";
   }
   attribute DueDate Date {
      editable = [ETag = null];
   }
   attribute DateEntered Date {
      label = "Created";
      editable = [false];
      required = [Etag != null];
   }
   attribute CreatedByUserId Text {
      label = "Created By";
      editable = [false];
      updatable = [false];
   }
   attribute DestinationId Text {
      label = "Internal Destination ID";
   }
   attribute InternalDestination Text {
      label = "Description";
   }
   attribute NoteId Number {
      maxlength = 10;
   }
   attribute DocumentText Boolean("TRUE", "FALSE") {
      fetch = "DECODE(Document_Text_API.Note_Id_Exist(note_id), '1', 'TRUE', 'FALSE')";
      editable = [false];
   }
   attribute PreAccountingId Number {
      maxlength = 10;
   }
   attribute OrderClass Enumeration(MaterialRequisType) {
      fetch = "order_class_db";
      required = [Etag != null];
      editable = [false];
   }
   attribute Company Text {
      fetch = "Site_API.Get_Company(contract)";
      editable = [false];
   }
   attribute StatusChangeAllowed Boolean {
      fetch = "Material_Requisition_API.Status_Change_Allowed(ORDER_CLASS_DB,ORDER_NO)";
      label = "Status Change Allowed";
      editable = [false];
   }
   attribute PrintPickListAllowed Boolean {
      fetch = "Material_Requisition_API.Print_Pick_List_Allowed(ORDER_CLASS_DB,ORDER_NO)";
      label = "Print Pick List Allowed";
      editable = [false];
   }
   attribute LabelCodenoA Text {
      fetch = "Accounting_Code_Parts_API.Get_Name(Site_API.Get_Company(contract),'A')";
      label = "Label Code Part A";
   }
   attribute LabelCodenoB Text {
      fetch = "Accounting_Code_Parts_API.Get_Name(Site_API.Get_Company(contract),'B')";
      label = "Label Code Part B";
   }
   attribute LabelCodenoC Text {
      fetch = "Accounting_Code_Parts_API.Get_Name(Site_API.Get_Company(contract),'C')";
      label = "Label Code Part C";
   }
   attribute LabelCodenoD Text {
      fetch = "Accounting_Code_Parts_API.Get_Name(Site_API.Get_Company(contract),'D')";
      label = "Label Code Part D";
   }
   attribute LabelCodenoE Text {
      fetch = "Accounting_Code_Parts_API.Get_Name(Site_API.Get_Company(contract),'E')";
      label = "Label Code Part E";
   }
   attribute LabelCodenoF Text {
      fetch = "Accounting_Code_Parts_API.Get_Name(Site_API.Get_Company(contract),'F')";
      label = "Label Code Part F";
   }
   attribute LabelCodenoG Text {
      fetch = "Accounting_Code_Parts_API.Get_Name(Site_API.Get_Company(contract),'G')";
      label = "Label Code Part G";
   }
   attribute LabelCodenoH Text {
      fetch = "Accounting_Code_Parts_API.Get_Name(Site_API.Get_Company(contract),'H')";
      label = "Label Code Part H";
   }
   attribute LabelCodenoI Text {
      fetch = "Accounting_Code_Parts_API.Get_Name(Site_API.Get_Company(contract),'I')";
      label = "Label Code Part I";
   }
   attribute LabelCodenoJ Text {
      fetch = "Accounting_Code_Parts_API.Get_Name(Site_API.Get_Company(contract),'J')";
      label = "Label Code Part J";
   }
   reference InternalCustomerRef(IntCustomerNo) to InternalCustomer(IntCustomerNo);
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference DestinationIdRef(Contract, DestinationId) to InternalDestinationLov(Contract, DestinationId) {
      label = "Internal Destination ID";
   }

   array MaterialRequisitionLinesArray(OrderNo, OrderClass, Contract) to MaterialRequisLine(OrderNo, OrderClass, Contract);
}

---------------------------------- ACTIONS ----------------------------------
action ChangeStatusHeader {
   initialcheck implementation;
   parameter OrderClass Enumeration(MaterialRequisType);
   parameter OrderNo Text;
   parameter StatusCode Enumeration(MaterialRequisStatus.HeaderStatus);
   ludependencies = MaterialRequisition, MaterialRequisLine;
}

action GetPickListForMaterialRequistionResultKey Text {
   initialcheck none;
   parameter OrderNo Text;
}

--------------------------------- FUNCTIONS ---------------------------------
function GetSiteDate Date {
   parameter Contract Text;
}

