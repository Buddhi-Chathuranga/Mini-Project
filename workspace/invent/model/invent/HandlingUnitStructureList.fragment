----------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------------
-- 2020-10-20  ErRalk  SC2020R1-10777, Modified function name GetConnectedReceiptLocObjkeys into GetConnectedReceiptLocObjids and
-- 2020-10-20          Modified variables in UnattachPartsForHuFromReceiptInvLocCommand to fetch Objid instead of Objkey.
-- 2019-05-27  ChFolk  SCUXXW4-21153, Modified UnattachPartsForHuFromReceiptInvLocCommand to use parameter ObjIdList instead of where clause. Removed function
-- 2019-05-27          GenerateUnattachReceiptInLocWhereClause and added GetConnectedReceiptLocObjkeys which returns new parameter values.
-- 2019-02-25  fandse  SCUXXW4-16155, Re-naming Unattach Part, Excluded Pack According to Packing Instruction
-- 2019-02-13  fandse  SCUXXW4-6101, Excluded contract, location and location type
-- 2018-12-08  ChFolk  SCUXXW4-6101, Added ReceiptInvLocationForHuStructureList and ReceiptInvLocationForHu to support bottom part of the HU structure list.
-- 2018-12-06  ChFolk  SCUXXW4-6101 Created.
----------------------------------------------------------------------------------------------------------
fragment HandlingUnitStructureList;
component INVENT;
layer Core;
description "This fragment contains the derived list from HandlingUnitsInStockBaseList";

include fragment HandlingUnitsInStockBaseList;
include fragment PrePostingWithoutSourceAssistant;

----------------------------- CLIENT FRAGMENTS ------------------------------
----------------------------------- LISTS -----------------------------------

list HandlingUnitStructureList clone HandlingUnitsInStockBaseList {
   orderby = StructureLevel;
   exclude Contract;
   exclude LocationNo;
   commandgroup ContentStructureCommandGroup {
      commandgroup ContentStructureCommandSubGroup {
         exclude PackHandlingUnitsAccordingToPackingInstructionCommand;
      }
   }
}

list InventoryPartInStockForHuStructureList clone InventoryPartInStockForHuBaseList {
   exclude ContractRef;
   exclude LocationNoRef;
   exclude LocationType;
}
@DynamicComponentDependency RCEIPT
list ReceiptInvLocationForHuStructureList clone ReceiptInvLocationForHuBaseList {
   exclude ContractRef;
   exclude LocationNoRef;
   exclude LocationType;
}

--------------------------------- COMMANDS ----------------------------------

command IssueCommand {
   label = "Issue";
   mode = SelectedRecords;
   enabled = [IsInStock and(LocationTypeDb != "SHIPMENT" and LocationTypeDb != "QA" and LocationTypeDb != "ARRIVAL")];
   variable CodepartsSettingsVar {
      type = Structure(CodepartsSettingsStructure);
   }
   variable CodeAVar {
      type = Text;
   }
   variable CodeBVar {
      type = Text;
   }
   variable CodeCVar {
      type = Text;
   }
   variable CodeDVar {
      type = Text;
   }
   variable CodeEVar {
      type = Text;
   }
   variable CodeFVar {
      type = Text;
   }
   variable CodeGVar {
      type = Text;
   }
   variable CodeHVar {
      type = Text;
   }
   variable CodeIVar {
      type = Text;
   }
   variable CodeJVar {
      type = Text;
   }
   bulkexecute {
      confirm("The selected Handling Unit ID(s) will be issued. Do you want to continue?") {
         when OK {
            stringify(records, "CONTRACT=${Contract}^", JSON) into ContractSelectionVar;
            call GetContract(ContractSelectionVar) into ContractVar;
            call GetCodepartsSettings("M110", ContractVar) into CodepartsSettingsVar;
            if [CodepartsSettingsVar.AllCodepartsCompiled != "DISABLED"] {
               assistant PrePostingWithoutSourceAssistant(ContractVar, CodepartsSettingsVar.AccountNo, CodepartsSettingsVar.CodenoB, CodepartsSettingsVar.CodenoC,
               CodepartsSettingsVar.CodenoD, CodepartsSettingsVar.CodenoE, CodepartsSettingsVar.CodenoF, CodepartsSettingsVar.CodenoG,
               CodepartsSettingsVar.CodenoH, CodepartsSettingsVar.CodenoI, CodepartsSettingsVar.CodenoJ)
               into(CodeAVar, CodeBVar, CodeCVar, CodeDVar, CodeEVar, CodeFVar, CodeGVar, CodeHVar, CodeIVar, CodeJVar) {
                  when CANCEL {
                     exit;
                  }
               }
            }
            call IssueWithPosting(Selection, CodeAVar, CodeBVar, CodeCVar, CodeDVar, CodeEVar, CodeFVar, CodeGVar, CodeHVar, CodeIVar, CodeJVar);
         }
      }
   }
}

command UnattachPartsForHuFromReceiptInvLocCommand {
   label = "Unattach Part";
   mode = SelectedRecords;
   enabled = [true];
   variable ObjidVar {
      type = Text;
   }
   variable ObjidListVar {
      type = Text;
   }
   variable ConnectedSorceVar {
      type = Text;
   }
   bulkexecute {
      set ConnectedSorceVar = "RECEIPT";
      stringify(records, "OBJID=${ObjId}^", JSON) into ObjidVar;
      call GetConnectedReceiptLocObjids(ObjidVar) into ObjidListVar;
      assistant UnattachPartsFromHandlingUnitAssistant(ConnectedSorceVar, ObjidListVar, null, true) {
         when OK {
            exit;
         }
         when CANCEL {
            exit;
         }
      }
   }
}

--------------------------- PROJECTION FRAGMENTS ----------------------------

--------------------------------- FUNCTIONS ---------------------------------
function GetConnectedReceiptLocObjids Text {
   parameter Selection Text;
}

function GetContract Text {
   parameter SelectedContractList Text;
}