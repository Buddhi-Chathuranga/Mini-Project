----------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------------
-- 2020-10-19  PAMMLK  MF2020R1-7524, Moved the function call ChangeOwnershipBetweenCustomer from HandlingUnitsInStockBaseList
-- 2020-10-19          to keep the dialog remain open once the error message closed.
-- 2020-05-04  PAMMLK  MF2020R1-939, Added an attribute OwnershipTransferReasonId,a reference OwnershipTransferReasonRef
-- 2020-05-04          to TransferOwnershipToCustomerHUStructure and lov field to TransferOwnershipToCustomerHUGroup.
-- 2019-03-13  ChFolk  SCUXXW4-17533, Included dynamic dependency anotations where necessary.
-- 2018-09-12  SUDELK  SCUXXW4-5871 Created to include common code from dlgTransferOwnershipToCustomerHU
----------------------------------------------------------------------------------------------------------
fragment TransferOwnershipToCustomerHU;
component INVENT;
layer Core;
description "Put some useful description here ...";

----------------------------- CLIENT FRAGMENTS -----------------------------

---------------------------------- DIALOGS ----------------------------------
dialog TransferOwnershipToCustomerHUDialog for TransferOwnershipToCustomerHUStructure {
   label = "Transfer Ownership to Customer";
   input(SelectedHandlingUnits);
   group TransferOwnershipToCustomerHUGroup;
   command Ok {
      execute {
         call ChangeOwnershipBetweenCustomer(SelectedHandlingUnits, ToCustomer, OwnershipTransferReasonRef.TransferReasonId);
         exit OK;
      }
   }
   command Cancel;
}

---------------------------------- GROUPS -----------------------------------
group TransferOwnershipToCustomerHUGroup for TransferOwnershipToCustomerHUStructure {
   label = "Transfer Ownership to Customer";

   @DynamicComponentDependency ORDER
   field ToCustomerRef {
      validate command {
         execute {
            call GetCustomerName(ToCustomer) into CustomerName;
         }
      }
   }
   field CustomerName;

   lov OwnershipTransferReasonRef with ReferenceOwnershipTransferReasonSelector {
      description = OwnershipTransferReasonRef.Description;
   }
}

--------------------------- PROJECTION FRAGMENTS ----------------------------

-------------------------------- STRUCTURES ---------------------------------
structure TransferOwnershipToCustomerHUStructure {
   attribute ToCustomer Text {
      label = "To Customer";
      maxlength = 30;
      format = uppercase;
   }
   attribute CustomerName Text;
   attribute OwnershipTransferReasonId Text {
      format = uppercase;
      maxlength = 50;
   }
   attribute SelectedHandlingUnits Text {
      label = "";
   }
   reference OwnershipTransferReasonRef(OwnershipTransferReasonId) to OwnershipTransferReason(TransferReasonId) {
      label = "Ownership Transfer Reason";
   }
   @DynamicComponentDependency ORDER
   reference ToCustomerRef(ToCustomer) to CustOrdCustomer(CustomerNo) {
      label = "To Customer";
   }
}

--------------------------------- FUNCTIONS ---------------------------------
@DynamicComponentDependency ORDER
function GetCustomerName Text {
   parameter ToCustomer Text;
}

---------------------------------- ACTIONS ----------------------------------
action ChangeOwnershipBetweenCustomer {
   initialcheck implementation;
   parameter SelectedHandlingUnits Text;
   parameter NewCustomer Text;
   parameter OwnershipTransferReasonId Text;
   ludependencies = HandlingUnit, InventoryPartInStock;
}
