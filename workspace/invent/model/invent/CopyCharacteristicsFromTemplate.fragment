--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2020-01-06  ChFolk  SCXTEND-1593, Modified some attributes in CopyCharacteristicsTemplateList to support freeinput based on CharType.
-- 2019-12-12  JeLise  AP10-1917, Changed AttrValueNumericRef and AttrValueAlphaRef from field to lov.
-- 2019-01-23  SatGlk  SCUXXW4-2686, MultiSelect, MultiEdit enabled in the assistant
-- 2019-01-01  SucPlk  SCUXXW4-2686, Added source as an input to use the same assistant
-- 2019-01-01          in Characteristic tab in Purchase Part page.
-- 2018-12-03  SucPlk  SCUXXW4-6209, Added InventoryPartVirtualSet from InventoryPartHandling.
-- 2018-11-30  SWiclk  SCUXXW4-6209, Created.
--------------------------------------------------------------------------------------
fragment CopyCharacteristicsFromTemplate;
component INVENT;
layer Core;
description "Use this fragment to copy Characteristics from template.";

----------------------------- CLIENT FRAGMENTS ------------------------------
assistant CopyCharacteristicsTemplateAssistant using InventoryPartVirtualSet {
   label = "Copy From Template";
   savemode = OnLostFocus;

   input(PartNo, Contract, EngAttribute, UnitMeas, Source);
   output(Objkey);

   steps {
      step {
         group InventoryPartCharacteristicsGroup;
         list CopyCharacteristicsTemplateList(CharacteristicsTemplateSet);
      }
      final step {

      }
      cancelled step {

      }
   }
   finish command {
      execute {
         exit OK;
      }
   }
   cancel command {
      execute {
         exit CANCEL;
      }
   }
   restart command {
      visible = [false];
   }
}

group InventoryPartCharacteristicsGroup for InventoryPartVirtual {
   label = "";
   field EngAttributeRef;
}

list CopyCharacteristicsTemplateList for CopyCharacteristicsTemplateVirtual {
   label = "Characteristics";
   editmode = MultiRowEdit;
   multiselect = [true];
   lov CharacteristicRef with ReferenceCharacteristicSelector {
      description = CharacteristicRef.Description;
      validate command {
         execute {
            call GetCharType(CharacteristicCode) into CharTypeDb;
         }
      }
   }

   lov AttrValueNumericRef with ReferenceDiscreteCharacNumericValueSelector {
      freeinput = [CharTypeDb != "DiscreteCharacteristic"];
      editable = [CharacteristicRef.SearchType = "Numeric"];
   }
   lov AttrValueAlphaRef with  ReferenceDiscreteCharacValueSelector {
      editable = [CharacteristicRef.SearchType = "Alpha"];
      freeinput = [CharTypeDb != "DiscreteCharacteristic"];
   }

   field UnitMeasRef {
      size = Small;
   }
   field CharacteristicRef.SearchType {
      label = "Alpha/Numeric";
   }
   field CharType;
}
--------------------------- PROJECTION FRAGMENTS ----------------------------

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset InventoryPartVirtualSet for InventoryPartVirtual;

------------------------------ ENTITY DETAILS -------------------------------

--------------------------------- VIRTUALS ----------------------------------

virtual InventoryPartVirtual {
   attribute Contract Text {
      label = "Site";
      maxlength = 5;
      required = [true];
      editable = [false];
      format = uppercase;
   }
   attribute PartNo Text {
      label = "Part No";
      maxlength = 25;
      required = [true];
      format = uppercase;
   }

   attribute EngAttribute Text {
      label = "Characteristic Template";
      maxlength = 5;
      format = uppercase;
   }

   attribute UnitMeas Text {
      label = "UoM";
      maxlength = 10;
   }
   attribute Source Text {
      editable = [false];
   }

   reference EngAttributeRef(EngAttribute) to CharacteristicTemplate(EngAttribute) {
      label = "Characteristic Template";
   }

   array CharacteristicsTemplateSet(PartNo, Contract) to CopyCharacteristicsTemplateVirtual(PartNo, Contract);
}

virtual CopyCharacteristicsTemplateVirtual {
   ludependencies = InventoryPartVirtual;
   crud = Delete, Update, Read;

   attribute Contract Text {
      fetch = "contract";
      label = "Site";
      maxlength = 5;
      required = [true];
      format = uppercase;
   }
   attribute PartNo Text {
      fetch = "part_no";
      label = "Part No";
      maxlength = 25;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute EngAttribute Text {
      fetch = "eng_attribute";
      label = "Characteristic Template";
      maxlength = 5;
      format = uppercase;
   }
   attribute CharacteristicCode Text {
      fetch = "characteristic_code";
      label = "Characteristic Code";
      maxlength = 5;
      required = [true];
      editable = [false];
      format = uppercase;
   }
   attribute AttrValueNumeric Number {
      fetch = "attr_value_numeric";
      label = "Attribute Value Numeric";
      editable = [true];
   }
   attribute AttrValueAlpha Text {
      fetch = "attr_value_alpha";
      label = "Attribute Value Alpha";
      editable = [true];
      maxlength = 60;
   }
   attribute UnitMeas Text {
      fetch = "unit_meas";
      label = "UoM";
      maxlength = 10;
   }
   attribute CharType Text {
      fetch = "Characteristic_API.Get_Row_Type_Translated(characteristic_code)";
      label = "Char Type";
      maxlength = 50;
      editable = [false];
   }

   reference EngAttributeRef(EngAttribute) to CharacteristicTemplate(EngAttribute) {
      label = "Characteristic Template";
   }
   reference AttrValueNumericRef(CharacteristicCode, AttrValueNumeric) to DiscreteCharacNumericValue(CharacteristicCode, CharacteristicValue) {
      label = "Attribute Value Numeric";
   }
   reference AttrValueAlphaRef(CharacteristicCode, AttrValueAlpha) to DiscreteCharacValue(CharacteristicCode, CharacteristicValue) {
      label = "Attribute Value Alpha";
   }
   reference CharacteristicRef(CharacteristicCode) to Characteristic(CharacteristicCode) {
      label = "Characteristic Code";

   }
   reference UnitMeasRef(UnitMeas) to IsoUnit(UnitCode);

}

--------------------------------- FUNCTIONS ---------------------------------

function GetCharType Text {
   parameter CharacteristicCode Text;
}