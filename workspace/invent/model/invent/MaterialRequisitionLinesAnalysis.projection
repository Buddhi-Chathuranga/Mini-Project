----------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------------
-- 2019-12-26  ChFolk  SCXTEND-994, Added CreatedByUserId.
-- 2019-07-25  ChFolk  SCUXXW4-22798, Modified project information to increase performance.
-- 2018-06-30  SuDelk  SCUXXW4-6857, Converted from tbwIntOrderDetailQuery using MTG Version: 1.23
----------------------------------------------------------------------------------------------------------
projection MaterialRequisitionLinesAnalysis;
component INVENT;
layer Core;
description "Use this API to view information about entered material requisition lines";
category Users;
include fragment InternalDestinationLovSelector;
include fragment UserAllowedSiteLovSelector;
include fragment InventoryPartLovMrpSelector;
include fragment MaterialRequisSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset MaterialRequisLineSet for MaterialRequisLine;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity MaterialRequisLine {
   crud = Read;
   keys = OrderNo, OrderClass, LineNo, ReleaseNo, LineItemNo {
      where = "ORDER_NO = :OrderNo and ORDER_CLASS_DB = :OrderClass and LINE_NO = :LineNo and RELEASE_NO = :ReleaseNo and LINE_ITEM_NO = :LineItemNo";
   }
   attribute OrderNo Text {
      editable = [false];
      format = uppercase;
   }
   attribute OrderClass Enumeration(MaterialRequisType) {
      editable = [false];
   }
   attribute LineItemNo Number;
   attribute PartNo Text {
      editable = [false];
   }
   attribute Contract Text {
      editable = [false];
   }
   attribute ConditionCode Text {
      editable = [false];
      format = uppercase;
   }
   attribute InternalCustomerNo Text {
      fetch = "Material_Requisition_Api.Get_Int_Customer_No(ORDER_CLASS,ORDER_NO)";
      label = "Internal Customer No";
      maxlength = 100;
   }
   attribute InternalCustomerName Text {
      fetch = "Internal_Customer_Api.Get_Name(Material_Requisition_Api.Get_Int_Customer_No(ORDER_CLASS,ORDER_NO))";
      label = "Internal Customer Name";
      maxlength = 100;
   }
   attribute UnitMeas Text {
      label = "UoM";
   }
   attribute StatusCode Enumeration(MaterialRequisStatus) {
      label = "Status";
   }
   attribute SupplyCode Text {
      fetch = "SUPPLY_CODE";
      maxlength = 200;
   }
   attribute DateEntered Date {
      label = "Created";
   }
   attribute QtyShipped Number {
      label = "Issued Qty";
   }
   attribute QtyDue Number {
      label = "Due Qty";
      editable = [false];
   }
   attribute QtyAssigned Number {
      label = "Reserved Qty";
      editable = [false];
   }
   attribute QtyOnOrder Number {
      label = "Qty to be Received";
      editable = [false];
   }
   attribute RemainingQty Number {
      fetch = "QTY_DUE - QTY_SHIPPED";
      label = "Remaining Qty";
      editable = [false];
   }
   attribute QtyReturned Number {
      label = "Returned Qty";
      editable = [false];
   }
   attribute QtyShipdiff Number {
      label = "Ship Diff Qty";
      editable = [false];
   }
   attribute PreAccountingId Number {
      label = "Pre-Posting ID";
   }
   @DynamicComponentDependency PROJ
   attribute ProgramId Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Program_Id(ACTIVITY_SEQ))";
      maxlength = 10;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ProgramDescription Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Program_Description(ACTIVITY_SEQ))";
      maxlength = 2000;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ProjectName Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Project_Name(ACTIVITY_SEQ))";
      maxlength = 2000;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute SubProjectId Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Sub_Project_Id(ACTIVITY_SEQ))";
      maxlength = 10;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute SubProjectDescription Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Sub_Project_Description(ACTIVITY_SEQ))";
      maxlength = 2000;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ActivityNo Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Activity_No(ACTIVITY_SEQ))";
      maxlength = 10;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ActivityDescription Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Description(ACTIVITY_SEQ))";
      maxlength = 200;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ActivitySeq Number {
      label = "Activity Sequence";
      maxlength = 10;
      editable = [false];
   }
   attribute NoteId Number {
      maxlength = 10;
   }
   attribute NoteText Text {
      label = "Note";
      editable = [false];
   }
   attribute InventoryPart Number {
      fetch = "Inventory_Part_API.Part_Exist(CONTRACT, PART_NO)";
      label = "Inventory Part";
      editable = [false];
   }
   attribute OrderClassDb Text {
      fetch = "ORDER_CLASS_DB";
      label = "Order Class";
      maxlength = 20;
      editable = [false];
   }
   attribute InternalDestinationID Text {
      fetch = "NULL";
   }
   attribute CreatedByUserId Text {
      fetch = "Material_Requisition_API.Get_Created_By_User_Id(order_class,order_no)";
      label = "Created By";
   }
   reference MaterialRequisitionRef(OrderClass, OrderNo) to MaterialRequisition(OrderClass, OrderNo);
   @DynamicComponentDependency PROJ
   reference ActivitySeqRef(ActivitySeq) to Activity(ActivitySeq) {
      label = "Activity Sequence";
   }
   @DynamicComponentDependency PROJ
   reference ProjectIdRef(ProjectId) to Project(ProjectId);
   @DynamicComponentDependency PROJ
   reference ProgramIdRef(ProgramId) to ProjectProgramGlobal(ProgramId);
   @DynamicComponentDependency PROJ
   reference SubProjectIdRef(ProjectId, SubProjectId) to SubProject(ProjectId, SubProjectId);
   @DynamicComponentDependency PROJ
   reference ActivityNoRef(ActivitySeq, ActivityNo) to Activity(ActivitySeq, ActivityNo);
   reference PreAccountingRef(PreAccountingId) to PreAccounting(PreAccountingId);
   reference OrderNoRef(OrderNo) to MaterialRequis(OrderNo) {
      label = "Order No";
      // where = "<Define static Where statement for LOV, typically defined within a PM_DataItemLovUserWhere message>";
   }
   reference PartNoRef(Contract, PartNo) to InventoryPartLovMrp(Contract, PartNo) {
      label = "Part No";
      // where = "<Define static Where statement for LOV, typically defined within a PM_DataItemLovUserWhere message>";
   }
   @DynamicComponentDependency PURCH
   reference PartNo2Ref(Contract, PartNo) to PurchasePart(Contract, PartNo);
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
      // where = "<Define static Where statement for LOV, typically defined within a PM_DataItemLovUserWhere message>";
   }
   reference ConditionCodeRef(ConditionCode) to ConditionCode(ConditionCode) {
      label = "Condition Code";
   }
   reference InternalDestinationIDRef(Contract, InternalDestinationID) to InternalDestinationLov(Contract, DestinationId) {
      label = "Internal Destination ID";
      // where = "<Define static Where statement for LOV, typically defined within a PM_DataItemLovUserWhere message>";
   }
   reference UnitMeasRef(UnitMeas) to IsoUnit(UnitCode) {
      label = "UoM";
   }
}



