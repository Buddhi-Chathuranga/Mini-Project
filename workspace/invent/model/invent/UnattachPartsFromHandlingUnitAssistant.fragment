-------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  --------------------------------------------------------------------------------
-- 2020-04-15  ErRalk  SC2020R1-1287, Modified fetch in InvTransSourceRefTypeDb attribute to support Shipment Order.
-- 2019-12-20  Hadolk  MFSPRING20-77, Added the fields EngRevision, DrawingNo and DrawingRevisionNo and the reference to Part Revision.
-- 2019-05-27  ChFolk  SCUXXW4-21153, Replaced input parameter WhereClause with ObjListArr and HandlingUnitIdListArr.
-- 2019-05-20  DaZase  SCUXXW4-19713, Added initialcheck to all unbounded actions.
-- 2018-12-08  ChFolk  SCUXXW4-6101, Added ludependecis for ReceiptInvLocation of ExecuteUnAttachFromHandlingUnit.
-- 2018-10-15  ChFolk  SCUXXW4-5896, Added Input parameter WhereClause instead of ObjidList which is needed when supporting from Handling Unit in Stock.
-- 2018-09-21  ChFolk  SCUXXW4-5896, Removed the command buttons in the assistant as the functionality was covered with delete action.
-- 2018-09-17  ChFolk  SCUXXW4-5896, Created the fragment to dlgUnattachPartsFromHandlingUnit.
-------------------------------------------------------------------------------------------------------
fragment UnattachPartsFromHandlingUnitAssistant;
component INVENT;
layer Core;
description "Assistant use to unattach part and quantity from a handling unit. This contains part lines that are attached to the handling unit.
             Note that several part lines can be attached to one handling unit. For the relevant records user can enter the quantity
             to be unattached from the handling unit.";

----------------------------- CLIENT FRAGMENTS ------------------------------
-------------------------------- ASSISTANTS ---------------------------------
assistant UnattachPartsFromHandlingUnitAssistant using UnattachPartsFromHandlingUnitSet {
   label = "Unattach Parts from Handling Unit";
   savemode = OnLostFocus;

   input(ConnectedSource, ObjListArr, HandlingUnitIdListArr, UnattachAllQtyAsDefaultBool);
   steps {
      step {
         list InventoryPartInStockToUnAttachWithoutSourceInfoList(InventoryPartInStockToUnattachArray) {
            visible = [ConnectedSource = "INVENT"];
         }
         list InventoryPartInStockToUnAttachList(InventoryPartInStockToUnattachArray) {
            visible = [ConnectedSource != "INVENT"];
         }
      }
      final step {

      }
      cancelled step {

      }
   }
   finish command {
      execute {
         call ExecuteUnAttachFromHandlingUnit(Objkey);
         exit OK;
      }
   }
   cancel command {
      execute {
         exit CANCEL;
      }
   }
   restart command {
      visible = [false];
   }
}

--------------------------------- COMMANDS ----------------------------------

--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------

----------------------------------- LISTS -----------------------------------
list InventoryPartInStockToUnAttachList for InventoryPartInStockToUnattachVirtual {
   editmode = SingleCellEdit;
   label = " ";
   field QtyToUnattach {
      size = Small;
   }
   field CatchQtyToUnattach {
      size = Small;
      editable = [CatchUom != null];
   }
   field Contract {
      size = Small;
   }
   lov InventoryPartRef with ReferenceInventoryPartSelector {
      label = "Inventory Part";
      description = InventoryPartRef.DescriptionInUse;
      editable = [false];
   }
   field ConfigurationId {
      size = Small;
   }
   field LocationNo {
      size = Small;
   }
   field HandlingUnitId;
   field LotBatchNo {
      size = Small;
   }
   field SerialNo {
      size = Small;
   }
   field EngChgLevel {
      size = Small;
   }
   field WaivDevRejNo {
      size = Small;
   }
   field ActivitySeq;
   field QtyOnhand;
   field QtyReserved;
   field CatchQtyOnhand;
   field CatchUom {
      size = Small;
   }
   field SourceRef1 {
      size = Small;
   }
   field SourceRef2 {
      size = Small;
   }
   field SourceRef3 {
      size = Small;
   }
   field ReceiptNo;
   field SourceRefType {
      size = Small;
   }
   @DynamicComponentDependency MFGSTD
   field PartRevisionRef.EngRevision {
      label = "Engineering Revision No";
      editable = [false];
      columnvisible = [false];
   }
   @DynamicComponentDependency MFGSTD
   field PartRevisionRef.TechnicalDrawingNo {
      label = "Drawing No";
      editable = [false];
      columnvisible = [false];
   }
   @DynamicComponentDependency MFGSTD
   field PartRevisionRef.TechDrawingRevisionNo {
      label = "Drawing Revision No";
      editable = [false];
      columnvisible = [false];
   }
}

list InventoryPartInStockToUnAttachWithoutSourceInfoList for InventoryPartInStockToUnattachVirtual {
   editmode = SingleCellEdit;
   label = " ";
   field QtyToUnattach {
      size = Small;
   }
   field CatchQtyToUnattach {
      size = Small;
      editable = [CatchUom != null];
   }
   field Contract {
      size = Small;
   }
   lov InventoryPartRef with ReferenceInventoryPartSelector {
      label = "Inventory Part";
      description = InventoryPartRef.DescriptionInUse;
      editable = [false];
   }
   field ConfigurationId {
      size = Small;
   }
   field LocationNo {
      size = Small;
   }
   field HandlingUnitId;
   field LotBatchNo {
      size = Small;
   }
   field SerialNo {
      size = Small;
   }
   field EngChgLevel {
      size = Small;
   }
   field WaivDevRejNo {
      size = Small;
   }
   field ActivitySeq;
   field QtyOnhand;
   field QtyReserved;
   field CatchQtyOnhand;
   field CatchUom {
      size = Small;
   }
   @DynamicComponentDependency MFGSTD
   field PartRevisionRef.EngRevision {
      label = "Engineering Revision No";
      editable = [false];
      columnvisible = [false];
   }
   @DynamicComponentDependency MFGSTD
   field PartRevisionRef.TechnicalDrawingNo {
      label = "Drawing No";
      editable = [false];
      columnvisible = [false];
   }
   @DynamicComponentDependency MFGSTD
   field PartRevisionRef.TechDrawingRevisionNo {
      label = "Drawing Revision No";
      editable = [false];
      columnvisible = [false];
   }
}

--------------------------- PROJECTION FRAGMENTS ----------------------------
----------------------------- MAIN ENTRY POINTS -----------------------------
entityset UnattachPartsFromHandlingUnitSet for UnattachPartsFromHandlingUnitVirtual;

------------------------------ ENTITY DETAILS -------------------------------

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------
action ExecuteUnAttachFromHandlingUnit {
   initialcheck implementation;
   parameter ParentObjkey Text;
   ludependencies = InventoryPartInStock, ReceiptInvLocation;
}

--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------
virtual UnattachPartsFromHandlingUnitVirtual {
   attribute ObjListArr Text {
      label = " ";
      maxlength = 2000;
   }
   attribute HandlingUnitIdListArr Text {
      label = " ";
      maxlength = 2000;
   }
   attribute ConnectedSource Text {
      label = " ";
      maxlength = 100;
   }
   attribute UnattachAllQtyAsDefault Boolean {
      label = " ";
   }
   array InventoryPartInStockToUnattachArray() to InventoryPartInStockToUnattachVirtual();
}

virtual InventoryPartInStockToUnattachVirtual {
   crud = Read, Update, Delete;
   attribute QtyToUnattach Number {
      label = "Qty to Unattach";
      editable = [true];
   }
   attribute CatchQtyToUnattach Number {
      label = "Catch Qty to Unattach";
      editable = [true];
   }
   attribute Contract Text {
      label = "Site";
      maxlength = 5;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute PartNo Text {
      label = "Part No";
      maxlength = 25;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }

   attribute ConfigurationId Text {
      label = "Configuration ID";
      maxlength = 50;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute LocationNo Text {
      label = "Location No";
      maxlength = 35;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute HandlingUnitId Number {
      label = "Handling Unit ID";
      required = [true];
      editable = [ETag = null];
   }
   attribute LotBatchNo Text {
      label = "Lot/Batch No";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
   }
   attribute SerialNo Text {
      label = "Serial No";
      maxlength = 50;
      required = [true];
      editable = [ETag = null];
   }
   attribute EngChgLevel Text {
      label = "Revision No";
      maxlength = 6;
      required = [true];
      editable = [ETag = null];
   }
   attribute WaivDevRejNo Text {
      label = "W/D/R";
      maxlength = 15;
      required = [true];
      editable = [ETag = null];
   }
   attribute ActivitySeq Number {
      label = "Activity Sequence";
      required = [true];
      editable = [ETag = null];
   }
   attribute QtyOnhand Number {
      label = "Qty Onhand";
      required = [true];
      editable = [ETag = null];
   }
   attribute QtyReserved Number {
      fetch = "qty_reserved";
      label = "Qty Reserved";
      required = [true];
      editable = [ETag = null];
   }
   attribute CatchQtyOnhand Number {
      label = "Catch Qty Onhand";
      editable = [ETag = null];
   }
   attribute CatchUom Text {
      label = "Catch UoM";
      maxlength = 20;
      editable = [false];
   }
   attribute SourceRef1 Text {
      label = "Source Ref 1";
      maxlength = 50;
      editable = [false];
   }
   attribute SourceRef2 Text {
      label = "Source Ref 2";
      maxlength = 50;
      editable = [false];
   }
   attribute SourceRef3 Text {
      label = "Source Ref 3";
      maxlength = 50;
      editable = [false];
   }
   attribute ReceiptNo Number {
      label = "Receipt No";
      editable = [false];
   }
   attribute SourceRefType Text {
      label = "Source Ref Type";
      maxlength = 200;
      editable = [false];
   }
   attribute InvTransSourceRefTypeDb Text {
      fetch = "DECODE(INV_TRANS_SOURCE_REF_TYPE_DB, 'PURCHASE_ORDER', 'pur order', 'SHIPMENT_ORDER', 'SHIPMENT_ORDER', null)";
      label = "Inv Trans Source Ref Type";
      maxlength = 20;
      editable = [false];
   }
   reference InventoryPartRef(Contract, PartNo) to InventoryPart(Contract, PartNo);
   @DynamicComponentDependency MFGSTD
   reference PartRevisionRef(Contract, PartNo, EngChgLevel) to PartRevision(Contract, PartNo, EngChgLevel);
}
