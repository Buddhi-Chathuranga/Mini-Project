-------------------------------------------------------------------------------------------------------
--  Date        Sign    History
--  ----------  ------  --------------------------------------------------------------------------------
--  2021-05-05  JaThlk  Bug 158994 (SCZ-14511), Removed the default value of DefaultShipVia in SiteToSiteLeadtime and SiteToSitePartLeadtime
--  2021-05-05          to handle it in server side.
--  2020-11-06  JaThlk  SC2020R1-10847, Modified the attribute DefaultShipVia in SiteToSiteLeadtime and SiteToSitePartLeadtime to add default values.
--  2020-01-27  Aabalk  SCSPRING20-1687, Changed ShipInventoryLocationNoRef reference source to NonRemoteWarehouseShipmentLocation.
--  2019-08-27  ChFolk  SCUXXW4-23117, Used Enumeration for DefaultShipVia instead of Boolean.
--  2019-03-07  ChFolk  SCUXXW4-16871, Added dynamic dependency where it is missing.
--  2018-11-23  henlse  SCUXXW4-6134, Converted from frmInterSiteSuppChainParam using MTG Version 1.33.
--  ----------  ------  --------------------------------------------------------------------------------
projection SiteToSiteSupplyChainParametersHandling;
component INVENT;
layer Core;
description "Use this API to manage the supply chain parameters between sites. When using the inter-site feature, the sites will act as internal suppliers and internal customers. You can manage parameters such as ship via codes, lead times, distance, expected shipping costs, shipment type and shipment location.";
category Users;
@DynamicComponentDependency ORDER
include fragment FreightZoneJoinSelector;
include fragment NonRemoteWhseShipLocationSelector;
@DynamicComponentDependency ORDER
include fragment CustOrdCust1Selector;
include fragment SiteUivSelector;
@DynamicComponentDependency SHPMNT
include fragment ShipmentTypeSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset SiteToSiteLeadtimeSet for SiteToSiteLeadtime;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity SiteToSiteLeadtime {
   ludependencies = SiteToSiteLeadtime, SiteToSitePartLeadtime;

   use attributes = DeliveryTerms, DelTermsLocation, RouteId, ArrivalRouteId, PickingLeadtime, ShipmentType, ShipInventoryLocationNo, DeliveryLeadtime, TransportLeadtime, DistOrderCurrCode, InternalDeliveryLeadtime, Distance, ExpectedAdditionalCost, ExpAddCostCurrCode, FreightMapId, ZoneId;
   @DynamicComponentDependency PURCH
   attribute InternalSupplier Text {
      fetch = "Supplier_API.Get_Vendor_No_From_Contract( supply_site )";
      label = "Internal Supplier";
      maxlength = 2000;
      editable = [false];
   }
   @DynamicComponentDependency ORDER
   attribute InternalCustomer Text {
      fetch = "Cust_Ord_Customer_API.Get_Customer_No_From_Contract( demand_site )";
      label = "Internal Customer";
      maxlength = 2000;
      editable = [false];
   }
   attribute ShipViaCode Text {
      label = "Ship-Via";
   }
   attribute DefaultShipVia Enumeration(GenYesNo) {
      fetch = "default_ship_via_db";
      label = "Default";
      required = [true];
   }
   attribute ExceptionDb Boolean("TRUE", "FALSE") {
      fetch = "Site_To_Site_Part_Leadtime_API.Check_Part_Group_Rows_Exist( demand_site, supply_site )";
      label = "Exception";
      editable = [false];
   }
   attribute DelTermsLocation Text {
      label = "Del Terms Location";
   }
   attribute ArrivalRouteId Text {
      label = "Arrival Route";
   }
   attribute InternalDeliveryLeadtime Number {
      label = "Internal Transport Lead Time";
   }
   attribute ManuallyAssignedZoneDb Boolean("TRUE", "FALSE") {
      fetch = "manually_assigned_zone_db";
      label = "Manually Assigned Zone";
   }

   reference SupplySiteRef(SupplySite) to SiteUiv(Contract) {
      label = "Supply Site";
   }
   @DynamicComponentDependency PURCH
   reference InternalSupplierRef(InternalSupplier) to Supplier(VendorNo) {
      label = "Internal Supplier";
   }
   reference DemandSiteRef(DemandSite) to SiteUiv(Contract) {
      label = "Demand Site";
   }
   @DynamicComponentDependency ORDER
   reference InternalCustomerRef(InternalCustomer) to CustOrdCust1(CustomerNo) {
      label = "Internal Customer";
   }
   reference ShipViaCodeRef(ShipViaCode) to MpccomShipVia(ShipViaCode) {
      label = "Ship-Via";
   }
   reference DeliveryTermsRef(DeliveryTerms) to OrderDeliveryTerm(DeliveryTerms) {
      label = "Delivery Terms";
   }
   @DynamicComponentDependency DISCOM
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Route";
   }
   @DynamicComponentDependency DISCOM
   reference ArrivalRouteIdRef(ArrivalRouteId) to DeliveryRoute(RouteId) {
      label = "Arrival Route";
   }
   @DynamicComponentDependency SHPMNT
   reference ShipmentTypeRef(ShipmentType) to ShipmentType(ShipmentType) {
      label = "Shipment Type";
   }
   reference ShipInventoryLocationNoRef(SupplySite, ShipInventoryLocationNo) to NonRemoteWarehouseShipmentLocation(Contract, LocationNo) {
      label = "Shipment Location No";
   }
   reference DistOrderCurrCodeRef(DistOrderCurrCode) to IsoCurrency(CurrencyCode) {
      label = "Distribution Order Currency";
   }
   reference ExpAddCostCurrCodeRef(ExpAddCostCurrCode) to IsoCurrency(CurrencyCode) {
      label = "Exp Add Cost Currency";
   }
   @DynamicComponentDependency ORDER
   reference FreightMapIdRef(FreightMapId) to FreightMap(FreightMapId) {
      label = "Freight Map";
   }
   @DynamicComponentDependency ORDER
   reference ZoneIdRef(SupplySite, ShipViaCode, ZoneId) to FreightZoneJoin(Contract, ShipViaCode, ZoneId) {
      label = "Zone";
   }
   array SiteToSitePartLeadtimeArray(SupplySite, DemandSite) to SiteToSitePartLeadtime(SupplySite, DemandSite);
}
@Override
entity SiteToSitePartLeadtime {
   ludependencies = SiteToSitePartLeadtime;

   use attributes = DeliveryTerms, DelTermsLocation, RouteId, ArrivalRouteId, PickingLeadtime, ShipmentType, DeliveryLeadtime, TransportLeadtime, InternalDeliveryLeadtime, Distance, ExpectedAdditionalCost, CurrencyCode, FreightMapId, ZoneId;
   attribute SupplyChainPartGroup Text {
      label = "Exception";
   }
   attribute ShipViaCode Text {
      label = "Ship-Via";
   }
   attribute DefaultShipVia Enumeration(GenYesNo) {
      fetch = "default_ship_via_db";
      label = "Default";
      required = [true];
   }
   attribute DelTermsLocation Text {
      label = "Del Terms Location";
   }
   attribute ArrivalRouteId Text {
      label = "Arrival Route";
   }
   attribute InternalDeliveryLeadtime Number {
      label = "Internal Transport Lead Time";
   }
   attribute CurrencyCode Text {
      label = "Exp Add Cost Currency";
   }
   attribute ManuallyAssignedZoneDb Boolean("TRUE", "FALSE") {
      fetch = "manually_assigned_zone_db";
      label = "Manually Assigned Zone";
   }

   reference SupplyChainPartGroupRef(SupplyChainPartGroup) to SupplyChainPartGroup(SupplyChainPartGroup) {
      label = "Exception";
   }
   reference ShipViaCodeRef(ShipViaCode) to MpccomShipVia(ShipViaCode) {
      label = "Ship-Via";
   }
   reference DeliveryTermsRef(DeliveryTerms) to OrderDeliveryTerm(DeliveryTerms) {
      label = "Delivery Terms";
   }
   @DynamicComponentDependency DISCOM
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Route";
   }
   @DynamicComponentDependency DISCOM
   reference ArrivalRouteIdRef(ArrivalRouteId) to DeliveryRoute(RouteId) {
      label = "Arrival Route";
   }
   @DynamicComponentDependency SHPMNT
   reference ShipmentTypeRef(ShipmentType) to ShipmentType(ShipmentType) {
      label = "Shipment Type";
   }
   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Exp Add Cost Currency";
   }
   @DynamicComponentDependency ORDER
   reference FreightMapIdRef(FreightMapId) to FreightMap(FreightMapId) {
      label = "Freight Map";
   }
   @DynamicComponentDependency ORDER
   reference ZoneIdRef(SupplySite, ShipViaCode, ZoneId) to FreightZoneJoin(Contract, ShipViaCode, ZoneId) {
      label = "Zone";
   }
}
--------------------------------- FUNCTIONS ---------------------------------
function GetVendorNoFromContract Text {
   parameter SupplySite Text;
}
function GetCustomerNoFromContract Text {
   parameter DemandSite Text;
}
function GetFreightMapId Text {
   parameter ShipViaCode Text;
   parameter Contract Text;
   parameter ZoneId Text;
}

