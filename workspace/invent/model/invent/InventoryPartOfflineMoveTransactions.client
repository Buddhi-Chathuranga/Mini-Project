-----------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------
-- 2019-01-23  fandse  SCUXXW4-6995, Converted from tbwInventPartOfflineMove using MTG Version: 1.34, code review changes
-- 2019-01-22  fandse  SCUXXW4-6995, Converted from tbwInventPartOfflineMove using MTG Version: 1.34
-----------------------------------------------------------------------------

client InventoryPartOfflineMoveTransactions;
component INVENT;
layer Core;
projection InventoryPartOfflineMoveTransactionsHandling;

--------------------------------- FRAGMENTS ---------------------------------
include fragment UserAllowedSiteLovSelector;
include fragment InventoryLocation19Selector;
include fragment InventoryPartLov4Selector;
include fragment PartMoveAcknowldgReasonLovSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry InventoryPartOfflineMoveTransactionsNavEntry parent InventNavigator.WarehouseManagementTransactionHistory at index 450 {
      label = "Inventory Part Offline Move Transactions";
      page List home InventPartOfflineMove;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page List using InventPartOfflineMoveSet {
   label = "Inventory Part Offline Move Transactions";
   startupmode = search;
   list InventPartOfflineMoveList;
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command MoveInventoryPartsCommand for InventPartOfflineMove {
   label = "Move Inventory Parts";
   mode = SelectedRecords;
   enabled = [StatusDb = "ERROR"];
   bulkexecute {
      bulkcall RunPendingMovePart(ExternalOfflineMoveId);
   }
}
command AcknowledgeCommand for InventPartOfflineMove {
   label = "Acknowledge";
   mode = SelectedRecords;
   enabled = [StatusDb = "UNACKNOWLEDGED"];
   variable AcknowledgeReasonIdVar {
      type = Text;
   }
   variable AcknowledgeNoteTextVar {
      type = Text;
   }
   bulkexecute {
      dialog PartMoveAcknowledgeReasonDialog into(AcknowledgeReasonIdVar, AcknowledgeNoteTextVar) {
         when OK {
            bulkcall AcknowledgePartMove(ExternalOfflineMoveId, AcknowledgeReasonIdVar, AcknowledgeNoteTextVar);
         }
         when CANCEL {
            exit;
         }
      }
   }
}
command InventoryTransactionHistoryCommand for InventPartOfflineMove {
   label = "Inventory Transaction History";
   mode = SelectedRecords;
   enabled = [StatusDb != "ERROR"];
   bulkexecute {
      bulknavigate "page/InventoryTransactionHistory/Form?$filter=SourceRef1 eq $[InternalOfflineMoveIdChar] and SourceRefType eq IfsApp.InventoryTransactionHistoryHandling.OrderType'InventoryPartOfflineMove'";
   }
}

--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------
group PartMoveAcknowledgeReasonGroup for PartMoveAcknowledgeReasonDialogStructure {
   label = "Acknowledge Reason";
   lov AcknowledgeReasonIdRef with ReferencePartMoveAcknowldgReasonLovSelector {
      size = Large;
      description = AcknowledgeReasonIdRef.Description;
   }
   field AcknowledgeNoteText {
      multiline = true;
   }
}

----------------------------------- LISTS -----------------------------------
list InventPartOfflineMoveList for InventPartOfflineMove {
   orderby = ExternalOfflineMoveId;
   crudactions {
      delete {
         enabled = [StatusDb = "ERROR"];
      }
   }
   field ExternalOfflineMoveId {
      size = Small;
   }
   field InternalOfflineMoveId {
      size = Small;
   }
   lov FromContractRef with ReferenceUserAllowedSiteLovSelector {
      size = Small;
   }
   lov FromLocationNoRef with ReferenceInventoryLocation19Selector {
      size = Small;
   }
   lov ToContractRef with ReferenceUserAllowedSiteLovSelector {
      size = Small;
   }
   lov ToLocationNoRef with ReferenceInventoryLocation19Selector {
      size = Small;
   }
   lov PartNoRef with ReferenceInventoryPartLov4Selector {
      description = PartNoRef.Description;
   }
   field ConfigurationIdRef {
      size = Small;
   }
   field LotBatchNo {
      size = Small;
   }
   field SerialNo {
      size = Small;
   }
   field EngChgLevel {
      size = Small;
   }
   field WaivDevRejNo {
      size = Small;
   }
   field ActivitySeq;
   field HandlingUnitId;
   field Quantity;
   field CatchQuantity;
   field FirstSyncUserId {
      size = Small;
   }
   field FirstSyncDateTime;
   field SecondSyncUserId {
      size = Small;
   }
   field SecondSyncDateTime;
   field ErrorDescription {
      size = Small;
   }
   lov AcknowledgeReasonIdRef with ReferencePartMoveAcknowldgReasonLovSelector {
      description = AcknowledgeReasonIdRef.Description;
   }
   field AcknowledgeNoteText {
      multiline = true;
   }
   field MoveExecutionDateTime;
   field Status {
      size = Small;
   }

   fieldranking Status, ExternalOfflineMoveId, FromContractRef, FromLocationNoRef, ToContractRef, ToLocationNoRef, PartNoRef, ConfigurationIdRef, LotBatchNo, SerialNo, EngChgLevel;

   command MoveInventoryPartsCommand;
   command AcknowledgeCommand;
   command InventoryTransactionHistoryCommand;
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------
dialog PartMoveAcknowledgeReasonDialog for PartMoveAcknowledgeReasonDialogStructure {
   label = "Acknowledge Reason";
   output(AcknowledgeReasonId, AcknowledgeNoteText);
   group PartMoveAcknowledgeReasonGroup;
   command Ok {
      enabled = [AcknowledgeReasonId != null];
   }
   command Cancel;
}

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

--------------------------------- CHECKLIST ---------------------------------
