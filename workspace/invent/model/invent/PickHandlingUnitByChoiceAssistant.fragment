-----------------------------------------------------------------------------------------------------
-- Date        Sign     History
-- ----------  ------   -----------------------------------------------------------------------------
-- 2021-09-21  ErRalk  SC21R2-2820, Added Dynamic Dependency for SenderType in HandlingUnitSourceInfoStructure.
-- 2020-11-05  ErRalk  SC2020R1-11001, Added SenderId and SenderType into HandlingUnitSourceInfoStructure and PickHandlingUnitByChoiceVirtual.
-- 2020-03-11  RasDlk  SCSPRING20-689, Passed "SITE" for SenderType and Contract for SenderId parameters for MovePartsIntoShipmentInventoryDialog.
-- 2020-01-29  RasDlk  SCSPRING20-689, Replaced the function name CheckDialogThree with CheckReportPicking.
-- 2019-05-21  RasDlk  SCUXXW4-21353, Removed the fragment MovePartsIntoShipmentInventoryDialog.
-- 2019-05-20  DaZase  SCUXXW4-19681, Added initialcheck to all unbounded actions.
-- 2019-04-05  SBalLK  SCUXXW4-18671, Included fragment MovePartsIntoShipmentInventoryDialog.
-- 2019-04-02  KHVESE  SCUXXW4-5664, Converted from dlgPickHandlingUnitByChoice using MTG Version: 1.34.
-----------------------------------------------------------------------------------------------------

fragment PickHandlingUnitByChoiceAssistant;
component INVENT;
layer Core;
description "Use this API to pick a handling unit by choice, i.e. to report picking of handling units in a more flexible way";

include fragment HandlingUnitLov7Selector;
include fragment HandlingUnitExtendedInitialCheck;

----------------------------- CLIENT FRAGMENTS ------------------------------

----------------------------- NAVIGATOR ENTRIES -----------------------------

-------------------------------- MAIN PAGES ---------------------------------

-------------------------------- ASSISTANTS ---------------------------------

assistant PickHandlingUnitByChoiceAssistant using PickHandlingUnitByChoiceSet {
   label = "Pick Handling Unit by Choice";
   input(Component, PickListNo, OrderSupplyDemandType, LocationNo, HandlingUnitId);
   steps {
      step {
         group PickHandlingUnitByChoiceGeneralGroup;
         group PickHandlingUnitByChoiceHuGroup;
         list HandlingUnitList(HandlingUnitVirtualArray);
      }
      final step {

      }
      cancelled step {

      }
   }
   finish command {
      label = "Report Picking";
      enabled = [component.HandlingUnitList.RowCount > 0];
      variable ShipInvLocationNoVar Text;
      execute {
         call PickHuByChoiceUsesShipInv(PickListNo) into UsesShipmentInventoryVar;
         @DynamicComponentDependency SHPMNT
         if [UsesShipmentInventoryVar] {
            call CheckReportPicking(Contract, PickListNo, PickListType) into ShipmentInvLocVar;
            if [ShipmentInvLocVar.ShowDialog = "TRUE"] {
               dialog MovePartsIntoShipmentInventoryDialog(ShipmentInvLocVar.LocationNo, Contract, SenderType, SenderId) into(ShipInvLocationNoVar) {
                  when CANCEL {
                     exit CANCEL;
                  }
               }
            }
         }
         call PickHuByChoice(Objkey, ShipInvLocationNoVar) {
            when SUCCESS {
               exit OK;
            }
            when FAIL {
               if [not(error.Message = null)] {
                  error("${error.Message}");
               }
               exit CANCEL;
            }
         }
      }
   }
   cancel command {
      execute {
         exit CANCEL;
      }
   }
   restart command {
      visible = [false];
   }
}

--------------------------------- COMMANDS ----------------------------------

command HandlingUnitKeyValidationCommand {
   execute {
      call HandlingUnitKeyValidation(Contract, HandlingUnitId, Sscc, AltHandlingUnitLabelId) into HandlingUnitValidationStructureVar;
      set HandlingUnitId = HandlingUnitValidationStructureVar.HandlingUnitId;
      set HandlingUnitTypeId = HandlingUnitValidationStructureVar.HandlingUnitTypeId;
      set HandlingUnitTypeDesc = HandlingUnitValidationStructureVar.HandlingUnitTypeDesc;
      set HandlingUnitCategoryId = HandlingUnitValidationStructureVar.HandlingUnitCategoryId;
      set HandlingUnitCategoryDesc = HandlingUnitValidationStructureVar.HandlingUnitCategoryDesc;
      set Sscc = HandlingUnitValidationStructureVar.Sscc;
      set AltHandlingUnitLabelId = HandlingUnitValidationStructureVar.AltHandlingUnitLabelId;
      set LocationNo = HandlingUnitValidationStructureVar.LocationNo;
      set LocationDesc = HandlingUnitValidationStructureVar.LocationDesc;
      set PartNo = HandlingUnitValidationStructureVar.PartNo;
      set ConfigurationId = HandlingUnitValidationStructureVar.ConfigurationId;
      set LotBatchNo = HandlingUnitValidationStructureVar.LotBatchNo;
      set SerialNo = HandlingUnitValidationStructureVar.SerialNo;
      set RevisionNo = HandlingUnitValidationStructureVar.EngChgLevel;
      set WaivDevRejNo = HandlingUnitValidationStructureVar.WaivDevRejNo;
      set ActivitySeq = HandlingUnitValidationStructureVar.ActivitySeq;
      set QtyOnhand = HandlingUnitValidationStructureVar.QtyOnhand;
      set QtyReserved = HandlingUnitValidationStructureVar.QtyReserved;
   }
}

--------------------------------- SELECTORS ---------------------------------

@Override
selector ReferenceHandlingUnitLov7Selector for HandlingUnitLov7 {
   label = "";
   static LocationNo;
   static HandlingUnitId;
   static HandlingUnitTypeId;
   static Sscc;
   static AltHandlingUnitLabelId;
}

---------------------------------- GROUPS -----------------------------------

group PickHandlingUnitByChoiceGeneralGroup for PickHandlingUnitByChoiceVirtual {
   label = "";
   field PickListNo {
      size = Small;
   }
   field SourceRef1 {
      size = Small;
   }
   field SourceRef2 {
      size = Small;
   }
   field SourceRef3 {
      size = Small;
   }
   field SourceRef4 {
      size = Small;
   }
   field OrderSupplyDemandType {
      size = Small;
   }
   field Contract {
      size = Small;
   }
}

group PickHandlingUnitByChoiceHuGroup for PickHandlingUnitByChoiceVirtual {
   label = "Handling Unit";
   field HandlingUnitId;
   lov HandlingUnitTypeIdRef with ReferenceHandlingUnitTypeSelector {
      description = HandlingUnitTypeDesc;
   }
   lov HandlingUnitCategoryIdRef with ReferenceHandlingUnitCategorySelector {
      description = HandlingUnitCategoryDesc;
      visible = [HandlingUnitCategoryId != null];
   }
   field Sscc {
      visible = [Sscc != null];
   }
   field AltHandlingUnitLabelId {
      visible = [AltHandlingUnitLabelId != null];
   }
   lov PartNoRef with ReferenceInventoryPartSelector {
      label = "Part";
      description = PartDesc;
   }
   field LocationNo {
      size = Small;
   }
   field QtyToPick {
      size = Small;
   }
   computedfield PickByChoiceQty {
      value = "#{HandlingUnitVirtualArray.sum(QtyOnhand)}";
      size = Small;
   }
   field ShipmentId {
      size = Small;
      visible = [ShipmentId != 0 and ShipmentId != null];
   }
}

----------------------------------- LISTS -----------------------------------

list HandlingUnitList for HandlingUnitVirtual {
   label = "";
   crudactions {
      edit {
         enabled = [false];
      }
   }
   lov LocationNoRef with ReferenceHandlingUnitLov7Selector using HandlingUnitLov(parent.Objkey) {
      label = "Location No";
      validate command HandlingUnitKeyValidationCommand;
   }
   field LocationDesc;
   lov HandlingUnitIdRef with ReferenceHandlingUnitLov7Selector using HandlingUnitLov(parent.Objkey) {
      label = "Handling Unit ID";
      validate command HandlingUnitKeyValidationCommand;
   }
   field HandlingUnitTypeId;
   field HandlingUnitTypeDesc;
   field QtyOnhand {
      size = Small;
   }
   field QtyReserved {
      size = Small;
   }
   lov SsccRef with ReferenceHandlingUnitLov7Selector using HandlingUnitLov(parent.Objkey) {
      label = "SSCC";
      validate command HandlingUnitKeyValidationCommand;
   }
   lov AltHandlingUnitLabelIdRef with ReferenceHandlingUnitLov7Selector using HandlingUnitLov(parent.Objkey) {
      label = "Alt Handling Unit Label ID";
      validate command HandlingUnitKeyValidationCommand;
   }
   field PartNo;
   field ConfigurationId;
   field LotBatchNo;
   field SerialNo;
   field RevisionNo;
   field WaivDevRejNo;
   field ActivitySeq;
}


--------------------------- PROJECTION FRAGMENTS ----------------------------

entityset PickHandlingUnitByChoiceSet for PickHandlingUnitByChoiceVirtual;

------------------------------ ENTITY DETAILS -------------------------------

--------------------------------- VIRTUALS ----------------------------------

virtual PickHandlingUnitByChoiceVirtual {
   attribute PickListNo Text {
      label = "Pick List No";
      editable = [false];
   }
   attribute PickListType Text;
   attribute SourceRef1 Text {
      label = "Source Ref 1";
      editable = [false];
      format = uppercase;
   }
   attribute SourceRef2 Text {
      label = "Source Ref 2";
      editable = [false];
      format = uppercase;
   }
   attribute SourceRef3 Text {
      label = "Source Ref 3";
      editable = [false];
      format = uppercase;
   }
   attribute SourceRef4 Text {
      label = "Source Ref 4";
      editable = [false];
   }
   attribute OrderSupplyDemandType Text {
      label = "Source Ref Type";
      editable = [false];
   }
   attribute Contract Text {
      label = "Site";
      editable = [false];
      format = uppercase;
   }
   attribute HandlingUnitId Number {
      label = "Handling Unit ID";
      editable = [false];
   }
   attribute HandlingUnitTypeId Text {
      label = "Handling Unit Type ID";
      editable = [false];
      format = uppercase;
   }
   attribute HandlingUnitTypeDesc Text {
      label = "Type Description";
      editable = [false];
   }
   attribute LocationNo Text {
      label = "Location No";
      editable = [false];
   }
   attribute HandlingUnitCategoryId Text {
      label = "Category ID";
      editable = [false];
      format = uppercase;
   }
   attribute HandlingUnitCategoryDesc Text {
      label = "Category Description";
      editable = [false];
   }
   attribute Sscc Text {
      label = "SSCC";
      editable = [false];
   }
   attribute AltHandlingUnitLabelId Text {
      label = "Alt Handling Unit Label ID";
      editable = [false];
   }
   attribute PartNo Text {
      label = "Part No";
      editable = [false];
      format = uppercase;
   }
   attribute PartDesc Text {
      label = "Part Description";
      editable = [false];
   }
   attribute QtyToPick Number {
      label = "Qty to Pick";
      editable = [false];
   }
   attribute PickByChoiceQty Number {
      label = "Pick by Choice Qty";
      editable = [false];
   }
   attribute ShipmentId Number {
      label = "Shipment ID";
      editable = [false];
   }
   attribute Component Text;
   attribute SenderId Text;
   @DynamicComponentDependency DISCOM
   attribute SenderType Enumeration(SenderReceiverType.SenderReceiver);
   reference HandlingUnitTypeIdRef(HandlingUnitTypeId) to HandlingUnitType(HandlingUnitTypeId) {
      label = "Handling Unit Type";
   }
   reference HandlingUnitCategoryIdRef(HandlingUnitCategoryId) to HandlingUnitCategory(HandlingUnitCategoryId) {
      label = "Handling Unit Category";
   }
   reference PartNoRef(Contract, PartNo) to InventoryPart(Contract, PartNo) {
      label = "Part";
   }
   array HandlingUnitVirtualArray(Contract) to HandlingUnitVirtual(Contract);
}


virtual HandlingUnitVirtual {
   attribute Contract Text {
      maxlength = 5;
      required = [true];
      editable = [false];
      format = uppercase;
      implementationtype = "VARCHAR2(5)";
   }
   attribute LocationNo Text {
      maxlength = 35;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
      implementationtype = "VARCHAR2(35)";
   }
   attribute LocationDesc Text {
      label = "Location Description";
      editable = [false];
      format = uppercase;
   }
   attribute HandlingUnitId Number {
      fetch = "handling_unit_id";
      label = "Handling Unit ID";
      required = [true];
      editable = [ETag = null];
      implementationtype = "NUMBER";
   }
   attribute HandlingUnitTypeId Text {
      label = "Handling Unit Type ID";
      editable = [false];
   }
   attribute HandlingUnitTypeDesc Text {
      label = "Handling Unit Type Description";
      editable = [false];
   }
   attribute QtyOnhand Number {
      label = "Qty Onhand";
      editable = [false];
   }
   attribute QtyReserved Number {
      label = "Qty Reserved";
      editable = [false];
   }
   attribute Sscc Text {
      label = "SSCC";
      editable = [ETag = null];
   }
   attribute AltHandlingUnitLabelId Text {
      label = "Alt Handling Unit Label ID";
      editable = [ETag = null];
   }
   attribute PartNo Text {
      editable = [false];
      format = uppercase;
      implementationtype = "VARCHAR2(25)";
   }
   attribute ConfigurationId Text {
      label = "Configuration ID";
      editable = [false];
      format = uppercase;
      implementationtype = "VARCHAR2(50)";
   }
   attribute LotBatchNo Text {
      label = "Lot/Batch No";
      maxlength = 20;
      editable = [false];
      implementationtype = "VARCHAR2(20)";
   }
   attribute SerialNo Text {
      maxlength = 50;
      editable = [false];
      implementationtype = "VARCHAR2(50)";
   }
   attribute RevisionNo Text {
      label = "Revision No";
      maxlength = 6;
      editable = [false];
      implementationtype = "VARCHAR2(6)";
   }
   attribute WaivDevRejNo Text {
      label = "W/D/R No";
      maxlength = 15;
      editable = [false];
      implementationtype = "VARCHAR2(15)";
   }
   attribute ActivitySeq Number {
      label = "Activity Sequence";
      editable = [false];
      implementationtype = "NUMBER";
   }
   reference LocationNoRef(Contract, HandlingUnitId, LocationNo) to HandlingUnitLov7(Contract, HandlingUnitId, LocationNo);
   reference HandlingUnitIdRef(Contract, LocationNo, HandlingUnitId) to HandlingUnitLov7(Contract, LocationNo, HandlingUnitId);
   reference SsccRef(Contract, LocationNo, HandlingUnitId, Sscc) to HandlingUnitLov7(Contract, LocationNo, HandlingUnitId, Sscc);
   reference AltHandlingUnitLabelIdRef(Contract, LocationNo, HandlingUnitId, AltHandlingUnitLabelId) to HandlingUnitLov7(Contract, LocationNo, HandlingUnitId, AltHandlingUnitLabelId);
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

action PickHuByChoice {
   initialcheck implementation;
   parameter Objkey Text;
   parameter ShipInvLocationNo Text;
}

--------------------------------- FUNCTIONS ---------------------------------


function HandlingUnitLov List < Entity(HandlingUnitLov7) > {
   parameter HeaderObjkey  Text;
}

function HandlingUnitKeyValidation Structure(HandlingUnitValidationStructure) {
   parameter Contract               Text;
   parameter HandlingUnitId         Number;
   parameter Sscc                   Text;
   parameter AltHandlingUnitLabelId Text;
}

function PickHuByChoiceUsesShipInv Boolean {
   parameter PickListNo Text;
}

-------------------------------- STRUCTURES ---------------------------------

structure HandlingUnitSourceInfoStructure {
   attribute PickListType  Text;
   attribute SourceRef1    Text;
   attribute SourceRef2    Text;
   attribute SourceRef3    Text;
   attribute SourceRef4    Text;
   attribute ShipmentId    Number;
   attribute QtyToPick     Number;
   attribute SenderId      Text;
   @DynamicComponentDependency DISCOM
   attribute SenderType    Enumeration(SenderReceiverType.SenderReceiver);
}

structure HandlingUnitValidationStructure {
   attribute HandlingUnitId            Number;
   attribute HandlingUnitTypeId        Text;
   attribute HandlingUnitTypeDesc      Text;
   attribute HandlingUnitCategoryId    Text;
   attribute HandlingUnitCategoryDesc  Text;
   attribute Sscc                      Text;
   attribute AltHandlingUnitLabelId    Text;
   attribute LocationNo                Text;
   attribute LocationDesc              Text;
   attribute PartNo                    Text;
   attribute ConfigurationId           Text;
   attribute LotBatchNo                Text;
   attribute SerialNo                  Text;
   attribute EngChgLevel               Text;
   attribute WaivDevRejNo              Text;
   attribute ActivitySeq               Number;
   attribute QtyOnhand                 Number;
   attribute QtyReserved               Number;
}

