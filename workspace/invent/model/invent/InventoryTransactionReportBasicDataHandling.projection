----------------------------------------------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------------------------------------------------
-- 2019-05-16  DaZase  SCUXXW4-19661, Added initialcheck to all unbounded actions.
-- 2019-04-11  ChFolk  SCUXXW4-18806, Added function GetDirectionFilter to filter the records based on the entered direction. Add where clause to CompanyDistributionInfo
-- 2019-04-11          to filter the use allowed companies.
-- 2019-04-08  ChFolk  SCUXXW4-18806, Added new attribute Firection1 with enumeration into InventTransReportGroup to use in client. Restructure the code.
-- 2018-12-26  Yasmlk  SCUXXW4-15127, Resolved a bug where records were not able to create in report types tab.
-- 2018-12-10  Yasmlk  SCUXXW4-5434, Converted from frmInventTransRepSeries using MTG Version: 1.34.
-- 2018-12-03  Sudelk  SCUXXW4-6001, included entity InventTransReportGroup and InventTransRepGrpType.
-- 2018-12-03  Yasmlk  SCUXXW4-6001, Converted from dlgCopyToCompany using MTG Version: 1.34.
-- 2018-12-27  Yasmlk  SCUXXW4-6001, Converted from frmBasicDataInventTransReport, tbwInventTransReportTypes and tbwInvTransRepTypeForInvTrans using MTG Version: 1.33.
----------------------------------------------------------------------------------------------------------------------------------------------
projection InventoryTransactionReportBasicDataHandling;
component INVENT;
layer Core;
description "Use this window to reach the tabs where you can enter basic data for IFS/Inventory Transaction Reports.";
category Users;
include fragment InventWarehouseLocationSelector;
include fragment UserSiteCompanyLovSelector;
include fragment CompanyDistributionInfoLovSelector;
include fragment InventTransactionCodeLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset CompanyDistributionInfoSet for CompanyDistributionInfo;

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity CompanyDistributionInfo {
   crud = Read, Update;
   from = "company_distribution_info";
   exec = "COMPANY_DISTRIBUTION_INFO_API";
   where = "COMPANY IN (SELECT COMPANY FROM COMPANY_FINANCE_AUTH_PUB)";
   keys = Company {
      where = "COMPANY = :Company";
   }
   exclude attributes = CompanyPrefix, DataCaptureMenuId, IntrastatTaxNumber, MandatoryCostSource, MandatoryPostingGroup, SsccCompanyPrefix, UseAccountingYear;
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 100;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   array TransactionReportTypesArray(Company) to InventoryTransactionReportType(Company);
   array InventTransReportGroupArray(Company) to InventTransReportGroup(Company);
   array InventTransCodeRepTypeArray(Company) to InventTransCodeRepType(Company);
   array TransactionReportTypesSeriesArray(Company) to InventoryTransactionReportTypeSeries(Company);
}

@Override
entity InventoryTransactionReportType using InventTransReportType {
   crud = Create, Read, Update, Delete;
   from = "invent_trans_report_type";
   exec = "INVENT_TRANS_REPORT_TYPE_API";
   keys = Company, ReportTypeId {
      where = "COMPANY = :Company and REPORT_TYPE_ID = :ReportTypeId";
   }
   use attributes = Description, Direction;

   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute ReportTypeId Text {
      fetch = "report_type_id";
      label = "Report Type";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute Description Text {
      fetch = "description";
      label = "Report Type Description";
      maxlength = 100;
   }
   attribute Direction Enumeration(MpccomTransDirection) {
      fetch = "direction_db";
      label = "Report Type Direction";
      required = [true];
      editable = [ETag = null];
   }
   reference CompanyRef(Company) to CompanyDistributionInfo(Company) {
      label = "Company";
   }
}

@Override
entity InventTransReportGroup {
   crud = Create, Read, Update, Delete;
   from = "invent_trans_report_group";
   exec = "INVENT_TRANS_REPORT_GROUP_API";
   keys = Company, ReportGroupId {
      where = "COMPANY = :Company and REPORT_GROUP_ID = :ReportGroupId";
   }
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute ReportGroupId Text {
      fetch = "report_group_id";
      label = "Report Group";
      maxlength = 100;
      required = [true];
      editable = [ETag = null];
   }
   attribute Description Text {
      fetch = "description";
      label = "Report Group Description";
      maxlength = 100;
   }
   attribute Direction Text {
      fetch = "direction";
   }
   attribute Direction1 Enumeration(MpccomTransDirection) {
      fetch = "direction";
      label = "Report Group Direction";
      maxlength = 1;
      required = [true];
      editable = [ETag = null];
   }
   reference CompanyRef(Company) to CompanyDistributionInfo(Company) {
      label = "Company";
   }
   array InventTransReportTypeArray(Company, ReportGroupId) to InventTransRepGrpType(Company, ReportGroupId);
}

@Override
entity InventTransRepGrpType {
   crud = Create, Read, Update, Delete;
   from = "invent_trans_rep_grp_type";
   exec = "INVENT_TRANS_REP_GRP_TYPE_API";
   keys = Company, ReportGroupId, ReportTypeId {
      where = "COMPANY = :Company and REPORT_GROUP_ID = :ReportGroupId and REPORT_TYPE_ID = :ReportTypeId";
   }
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute ReportGroupId Text {
      fetch = "report_group_id";
      label = "Report Group";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute ReportTypeId Text {
      fetch = "report_type_id";
      label = "Report Type";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute ReportTypeDescription Text {
      fetch = "Invent_Trans_Report_Type_API.Get_Description(company,report_type_id)";
      label = "Report Type Description";
      maxlength = 100;
      editable = [false];
   }
   reference ReportGroupIdRef(Company, ReportGroupId) to InventTransReportGroup(Company, ReportGroupId) {
      label = "Report Group";
   }
   reference ReportTypeIdRef(Company, ReportTypeId) to InventTransReportType(Company, ReportTypeId) {
      label = "Report Type";
   }
}

@Override
entity InventTransCodeRepType {
   keys = Company, TransactionCode {
      where = "COMPANY = :Company and TRANSACTION_CODE = :TransactionCode";
   }
   use attributes = ReportTypeId;
   attribute Description Text {
      fetch = "Mpccom_Transaction_Code_API.Get_Transaction(transaction_code)";
      label = "Description";
      maxlength = 100;
      editable = [false];
   }
   attribute ReportTypeId Text {
      label = "Report Type";
   }
   attribute ReportTypeDescription Text {
      fetch = "Invent_Trans_Report_Type_API.Get_Description(company,report_type_id)";
      label = "Report Type Description";
      maxlength = 100;
      editable = [false];
   }
   reference MpccomTransactionCodeRef(TransactionCode) to MpccomTransactionCode(TransactionCode);
   reference CompanyRef(Company) to CompanyDistributionInfo(Company) {
      label = "Company";
   }
   reference TransactionCodeRef(TransactionCode) to InventTransactionCodeLov(TransactionCode) {
      label = "Transaction Code";
   }
   reference ReportTypeIdRef(Company, ReportTypeId) to InventTransReportType(Company, ReportTypeId) {
      label = "Report Type";
   }
}

@Override
entity InventoryTransactionReportTypeSeries using InventTransReportType {
   crud = Read;
   from = "invent_trans_report_type";
   exec = "INVENT_TRANS_REPORT_TYPE_API";
   keys = Company, ReportTypeId {
      where = "COMPANY = :Company and REPORT_TYPE_ID = :ReportTypeId";
   }
   exclude attributes = Description, Direction;
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute ReportTypeId Text {
      fetch = "report_type_id";
      label = "Report Type";
      maxlength = 100;
      required = [true];
      editable = [ETag = null];
   }

   reference CompanyRef(Company) to CompanyDistributionInfo(Company) {
      label = "Company";
   }
   reference ReportTypeIdRef(Company, ReportTypeId) to InventoryTransactionReportTypeSeries(Company, ReportTypeId) {
      label = "Report Type";
   }
   array InventTransRepSeriesArray(Company, ReportTypeId) to InventTransRepSeries(Company, ReportTypeId);
}

@Override
entity InventTransRepSeries {
   use attributes = StartReportNo, EndReportNo, NextReportNo;
   attribute ReportTypeId Text {
      label = "Report Type";

   }
   attribute NextReportNo Number {
      editable = [false];
   }
   reference ReportTypeIdRef(Company, ReportTypeId) to InventoryTransactionReportTypeSeries(Company, ReportTypeId) {
      label = "Report Type";
   }
   reference ContractRef(Company, Contract) to UserSiteCompanyLov(Company, Contract) {
      label = "Site";
   }
   reference WarehouseRef(Contract, Warehouse) to InventWarehouseLocation(Contract, Warehouse) {
      label = "Warehouse";
   }
}


---------------------------------- ACTIONS ----------------------------------

action CopyCompanies {
   initialcheck UserAllowedCompany(FromCompany);
   initialcheck UserAllowedCompany(ToCompany);
   ludependencies = CompanyDistributionInfo, InventTransReportType, InventTransReportGroup, InventTransRepGrpType, InventTransCodeRepType, InventTransRepSeries;
   parameter FromCompany Text;
   parameter ToCompany Text;
}
--------------------------------- FUNCTIONS ---------------------------------
function GetListOfToCompany List<Entity(CompanyDistributionInfoLov)> {
   parameter FromCompany Text;
   where = "(COMPANY != :FromCompany)";
   ludependencies = CompanyDistributionInfo, InventTransReportType, InventTransReportGroup, InventTransRepGrpType, InventTransCodeRepType, InventTransRepSeries;
}

function GetDirectionFilter List<Entity(InventTransReportType)> {
   parameter Direction Text;
   where = "DIRECTION_DB = :Direction";
}

-------------------------------- STRUCTURES ---------------------------------

structure CopyToCompanyStructure {
   attribute FromCompany Text {
      label = "Company";
      maxlength = 20;
      required = [true];
      format = uppercase;
   }
   attribute ToCompany Text {
      label = "Company";
      maxlength = 20;
      required = [true];
      format = uppercase;
   }
   attribute ToCompanyName Text {
      label = "Name";
      maxlength = 2000;
      required = [true];
   }
   reference ToCompanyRef(ToCompany) to CompanyDistributionInfoLov(Company) {
      label = "Company";
   }
}













