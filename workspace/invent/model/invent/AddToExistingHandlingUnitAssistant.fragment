-------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  --------------------------------------------------------------------------------
-- 2020-10-08  RasDlk  SC2020R1-10347, Removed the method call for the attribute HandlingUnitCategoryId and made it uneditable.
-- 2020-10-08          Set default values for the attributes NoOfUnits and Quantity. Set HandlingUnitCategoryId when HandlingUnitTypeId is selected in AddHandlingUnitTypesList.
-- 2019-06-10  JaThlk  SCUXXW4-19246, Added Volume in the Handling Unit Type Lov.
-- 2019-05-16  DaZase  SCUXXW4-19599, Added initialcheck to all unbounded actions.
-- 2019-05-13  ChFolk  SCUXXW4-6101, Renamed ValidatePackingInstruction as ValidatePkgInstruction as the previous method exists in another assistant.
-- 2019-04-04  milise  SCUXXW4-18022, Replacing of label = "" with showlabel = false
-- 2019-01-24  ChFolk  SCUXXW4-6101, Created the fragment to support adding handling units to an existing Handling Unit
-- 2019-01-24          either from given handling unit types or packing instructions.
-------------------------------------------------------------------------------------------------------
fragment AddToExistingHandlingUnitAssistant;
component INVENT;
layer Core;
description "Assistant use to Add Handling Units to an existing Handling Unit either from given Handling Unit Type or Packing Instructions";

include fragment AddHandlingUnitEnumeration;
@DynamicComponentDependency SHPMNT
include fragment ShipmentInitialCheck;

----------------------------- CLIENT FRAGMENTS ------------------------------
-------------------------------- ASSISTANTS ---------------------------------
assistant AddToExistingHandlingUnitAssistant using AddToExistingHandlingUnitSet {
   label = "Add Handling Unit";
   input(ParentHandlingUnitId, ShipmentId, SourceRefType, SourceRef1, SourceRef2, SourceRef3);
   init command {
      execute {
         set AddHandlingUnitOption = "UsingHuType";
      }
   }
   steps {
      step {
         group ParentHandlingUnitDetailsGroup;
         group AddHandlingUnitOptionGroup;
         list AddHandlingUnitTypesList(AddHandlingUnitTypesArray) {
            visible = [AddHandlingUnitOption = "UsingHuType"];
         }
         list AddPackingInstructionsList(AddPackingInstructionsArray) {
            visible = [AddHandlingUnitOption = "UsingPackingInstruction"];
         }
      }
      final step {

      }
      cancelled step {

      }
   }
   finish command {
      enabled = [(component.AddHandlingUnitTypesList.RowCount > 0) or(component.AddPackingInstructionsList.RowCount > 0)];
      execute {
         call AddToExistingHandlingUnit(ParentHandlingUnitId, ShipmentId, SourceRefTypeDb, SourceRef1, SourceRef2, SourceRef3, AddHandlingUnitOption, Objkey);
         exit OK;
      }
   }
   cancel command {
      execute {
         exit CANCEL;
      }
   }
   restart command {
      visible = [false];
   }
}

--------------------------------- COMMANDS ----------------------------------

--------------------------------- SELECTORS ---------------------------------
@Override
selector ReferenceHandlingUnitTypeSelector for HandlingUnitType {
   static Volume;
}

---------------------------------- GROUPS -----------------------------------
group ParentHandlingUnitDetailsGroup for AddToExistingHandlingUnitVirtual {
   label = " ";
   field ParentHandlingUnitId {
      label = "Parent Handling Unit ID";
   }
   field ShipmentId {
      label = "Shipment ID";
      visible = [ShipmentId != null];
   }
   field SourceRefTypeDb {
      label = "Source Ref Type";
      visible = [SourceRefType != null];
   }
   field SourceRef1 {
      label = "Source Ref1";
      visible = [SourceRef1 != null];
   }
   field SourceRef2 {
      label = "Source Ref2";
      visible = [SourceRef2 != null];
   }
   field SourceRef3 {
      label = "Source Ref3";
      visible = [SourceRef3 != null];
   }

}

group AddHandlingUnitOptionGroup for AddToExistingHandlingUnitVirtual {
   label = "";
   radiogroup AddHandlingUnitOption {
      showlabel = false;
      size = FullWidth;
      validate command {
         execute {
            if [AddHandlingUnitOption = "UsingHuType" and component.AddPackingInstructionsList.RowCount > 0] {
               call ClearPackingInstructionDetails(Objkey);
            }
            if [AddHandlingUnitOption = "UsingPackingInstruction" and component.AddHandlingUnitTypesList.RowCount > 0] {
               call ClearHandlingUnitTypeDetails(Objkey);
            }
         }
      }
   }
}

----------------------------------- LISTS -----------------------------------
list AddHandlingUnitTypesList for AddHandlingUnitTypesVirtual {
   label = "";
   lov HandlingUnitTypeIdRef with ReferenceHandlingUnitTypeSelector {
      label = "Handling Unit Type";
      description = HandlingUnitTypeIdRef.Description;
      validate command {
         execute {
            set HandlingUnitCategoryId = HandlingUnitTypeIdRef.HandlingUnitCategoryId;
         }
      }
   }
   field NoOfUnits {
      validate command {
         execute {
            if [NoOfUnits < 0] {
               error("No of Units must be an integer greater than zero.");
            }
         }
      }
   }
   lov HandlingUnitCategoryIdRef with ReferenceHandlingUnitCategorySelector {
      label = "Handling Unit Category";
      description = HandlingUnitCategoryIdRef.Description;
   }
}

list AddPackingInstructionsList for AddPackingInstructionsVirtual {
   label = "";
   lov PackingInstructionIdRef with ReferencePackingInstructionWithRootSelector {
      label = "Packing Instruction";
      description = PackingInstructionIdRef.PackingInstructionDesc;
      validate command {
         execute {
            call ValidatePkgInstruction(PackingInstructionId);
         }
      }
   }
   field Quantity {
      size = Small;
   }
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

--------------------------- PROJECTION FRAGMENTS ----------------------------
----------------------------- MAIN ENTRY POINTS -----------------------------
entityset AddToExistingHandlingUnitSet for AddToExistingHandlingUnitVirtual;

------------------------------ ENTITY DETAILS -------------------------------

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------
action AddToExistingHandlingUnit {
   initialcheck implementation;
   supportwarnings = [true];
   parameter ParentHandlingUnitId Number;
   parameter ShipmentId Number;
   parameter SourceRefTypeDb Text;
   parameter SourceRef1 Text;
   parameter SourceRef2 Text;
   parameter SourceRef3 Text;
   parameter AddHandlingUnitOption Text;
   parameter ParentObjkey Text;
   ludependencies = HandlingUnit;
}

action ClearHandlingUnitTypeDetails {
   initialcheck none;
   parameter ParentObjkey Text;
   ludependencies = AddHandlingUnitTypesVirtual;
}

action ClearPackingInstructionDetails {
   initialcheck none;
   parameter ParentObjkey Text;
   ludependencies = AddPackingInstructionsVirtual;
}

action ValidatePkgInstruction {
   initialcheck none;
   parameter PackingInstructionId Text;
}

--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------
--------------------------------- VIRTUALS ----------------------------------
virtual AddToExistingHandlingUnitVirtual {
   attribute AddHandlingUnitOption Enumeration(AddHandlingUnitOptionEnum);
   attribute ParentHandlingUnitId Number;
   attribute ShipmentId Number;
   attribute SourceRefTypeDb Text;
   attribute SourceRef1 Text;
   attribute SourceRef2 Text;
   attribute SourceRef3 Text;
   array AddHandlingUnitTypesArray() to AddHandlingUnitTypesVirtual();
   array AddPackingInstructionsArray() to AddPackingInstructionsVirtual();
}

virtual AddHandlingUnitTypesVirtual {
   crud = Read, Create, Delete;
   attribute HandlingUnitId Number {
      fetch = "handling_unit_id";
      label = "Handling Unit ID";
      editable = [false];
   }
   attribute HandlingUnitTypeId Text {
      fetch = "handling_unit_type_id";
      label = "Handling Unit Type ID";
      maxlength = 25;
      required = [true];
      format = uppercase;
   }
   attribute NoOfUnits Number {
      fetch = "no_of_units";
      label = "No of Units";
      required = [true];
      default = "1";
   }
   attribute HandlingUnitCategoryId Text {
      fetch = "handling_unit_category_id";
      editable = [false];
   }
   reference HandlingUnitTypeIdRef(HandlingUnitTypeId) to HandlingUnitType(HandlingUnitTypeId);
   reference HandlingUnitCategoryIdRef(HandlingUnitCategoryId) to HandlingUnitCategory(HandlingUnitCategoryId);
}

virtual AddPackingInstructionsVirtual {
   crud = Create, Update, Delete;
   attribute PackingInstructionId Text {
      maxlength = 50;
      required = [true];
      format = uppercase;
   }
   attribute Quantity Number {
      label = "Quantity";
      editable = [true];
      required = [true];
      default = "1";
   }
   reference PackingInstructionIdRef(PackingInstructionId) to PackingInstructionWithRoot(PackingInstructionId);
}
