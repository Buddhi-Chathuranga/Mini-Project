--------------------------------------------------------------------------------------
 	 	-- Date        Sign    History
 	 	-- ----------  ------  ---------------------------------------------------------------
 	 	-- 2018-04-17  milise  SCUXXW4-6907, Converted from tbwInventoryPartPeriodHist using MTG Version: 1.16
 	 	--------------------------------------------------------------------------------------

projection OnHandDevelopPerPeriodHandling;
component INVENT;
layer Core;
description "Use this API to view statistical period changes as to the quantity of a part. The window displays, among other things, from which year and period the statistics are taken. The statistics are calculated when executing Aggregate Inventory Transactions per Period.";
category Users;
include fragment UserAllowedSiteLovSelector;
include fragment InventoryPartLovSelector;

 	 	----------------------------- MAIN ENTRY POINTS -----------------------------
entityset InventoryPartPeriodHistorySet for InventoryPartPeriodHistory;

 	 	------------------------------ ENTITY DETAILS -------------------------------
@Override
entity InventoryPartPeriodHistory using InventoryPartPeriodHist {
   crud = Read;
   //keys = PartNo, Contract, ConfigurationId, StatYearNo, StatPeriodNo, SecondCommodity;

//   {
//      //where = "PART_NO = :PartNo and CONTRACT = :Contract and CONFIGURATION_ID = :ConfigurationId and STAT_YEAR_NO = :StatYearNo and STAT_PERIOD_NO = :StatPeriodNo and SECOND_COMMODITY = :SecondCommodity";
//   }
   attribute PartNo Text {
      editable = [false];
      format = uppercase;
   }
   attribute PartDescription Text {
      fetch = "Inventory_Part_API.Get_Description(Contract,Part_No)";
      label = "Part Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute Contract Text {
      editable = [false];
   }
   attribute SiteDescription Text {
      fetch = "Site_API.Get_Description(CONTRACT)";
      label = "Site Description";
      maxlength = 2000;
 	 	      // searchable = false;
      editable = [false];
   }
   attribute ConfigurationId Text {
      editable = [false];
   }
   attribute StatYearNo Number {
      label = "Statistical Year";
      editable = [false];
   }
   attribute StatPeriodNo Number {
      label = "Statistical Period";
      editable = [false];
   }
   attribute SecondCommodity Text {
      label = "Commodity Group 2";
      editable = [false];
   }
   attribute BegBalance Number {
      label = "Beginning Inventory";
      editable = [false];
      format = decimal;
   }
   attribute CountAdjust Number {
      label = "No of Adjustments";
      editable = [false];
   }
   attribute CountIssues Number {
      label = "Number of Issues";
      editable = [false];
   }
   attribute CountAbnormalIssues Number {
      label = "Number of Issues - Abnormal Demands";
      editable = [false];
   }
   attribute CountReceipts Number {
      label = "Number of Receipts";
      editable = [false];
   }
   attribute MtdAdjust Number {
      label = "Adjusted Qty";
      editable = [false];
   }
   attribute MtdIssues Number {
      label = "Issued Qty";
      editable = [false];
   }
   attribute MtdAbnormalIssues Number {
      label = "Issued Qty - Abnormal Demands";
      editable = [false];
   }
   attribute MtdReceipts Number {
      label = "Received Qty";
      editable = [false];
   }
   attribute QtyOnhand Number {
      label = "Ending Inventory";
      editable = [false];
   }
   reference InventoryPartRef(Contract, PartNo) to InventoryPart(Contract, PartNo);

   reference PartNoRef(Contract, PartNo) to InventoryPartLov(Contract, PartNo) {
      label = "Part No";
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference ConfigurationIdRef(Contract, PartNo, ConfigurationId) to InventoryPartConfig(Contract, PartNo, ConfigurationId) {
      label = "Configuration ID";
   }
   reference SecondCommodityRef(SecondCommodity) to CommodityGroup(CommodityCode) {
      label = "Commodity Group 2";
   }
}