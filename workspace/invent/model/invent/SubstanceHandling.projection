----------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------------
-- 2021-02-01  RasDlk  SC2020R1-12357, Changed the labels of the attributes CasNo, EuIndexNo and FieldOfApplication.
-- 2019-01-03  MaAtlk  MFUXXW4-3799, Added Environmentel Properties.
-- 2018-12-28  AmPalk  MFUXXW4-131, Added Chemical Properties group.
-- 2018-04-03  ChFolk  SCUXXW4-6487, Converted from frmSubstance using MTG Version: 1.15
----------------------------------------------------------------------------------------------------------

projection SubstanceHandling;
component INVENT;
layer Core;
description "Use this API to enter and maintain information relating to the substances.";
category Users;
@DynamicComponentDependency ECOMAN
include fragment EmissionSubstanceCodes;
----------------------------- MAIN ENTRY POINTS -----------------------------
entityset Substances for Substance;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity Substance {
   attribute SubstanceNo Text {
      maxlength = 100;
   }
   attribute Description Text {
      editable = [true];
   }
   attribute CasNo Text {
      label = "CAS No";
   }
   attribute EuIndexNo Text {
      label = "EU Index No";
   }
   attribute FieldOfApplication Text {
      format = uppercase;
      label = "Field of Application";
   }
   @DynamicComponentDependency MFGSTD
   array ChemicalSubstanceArray(SubstanceNo) to ChemicalSubstance(SubstanceNo);
   @DynamicComponentDependency ECOMAN
   array EmissionSubstanceCodeArray(SubstanceNo) to EmissionSubstanceCode(SubstanceNo);
}

@Override
@DynamicComponentDependency MFGSTD
entity ChemicalSubstance {
   attribute Density Number {
      label = "Density";
   }
   attribute UomForDensity Text {
      label = "Density UoM";
   }
   attribute SolventNonVocEuDb Boolean("TRUE", "FALSE") {
      fetch = "solvent_non_voc_eu_db";
      label = "Non-VOC Solvent";
      required = [true];
   }
   attribute ColorPigmentDb Boolean("TRUE", "FALSE") {
      fetch = "color_pigment_db";
      label = "Color Pigment";
      required = [true];
   }
   attribute VolatileDb Boolean("TRUE", "FALSE") {
      fetch = "volatile_db";
      label = "Volatile";
      required = [true];
   }
   attribute Notes Text {
      label = "Notes";
   }
   attribute SubstanceTypeDb Enumeration(ChemicalSubstanceType) {
      fetch = "substance_type_db";
      maxlength = 50;
   }
   reference UomForDensityRef(UomForDensity) to ForIsoUnitDensityLov(UnitCode) {
      label = "Density UoM";
   }
}

--------------------------------- FUNCTIONS ---------------------------------

function UomDensityFilter List<Entity(ForIsoUnitDensityLov)> {
   where = "unit_type_db = 'DENSITY'";
}

---------------------------------- QUERIES ----------------------------------
query ForIsoUnitDensityLov {
   from = "iso_unit";
   lu = IsoUnit;
   keys = UnitCode;
   ludependencies = IsoUnit;
   attribute UnitCode Text {
      label = "UoM";
      lovcolumn = [true];
   }
   attribute Description Text {
      lovcolumn = [true];
   }
   attribute BaseUnit Text {
      label = "Base UoM";
      lovcolumn = [true];
   }
   attribute UnitType Enumeration(IsoUnitType) {
      label = "UoM Type";
      lovcolumn = [true];
      fetch = "unit_type_db";
   }
}