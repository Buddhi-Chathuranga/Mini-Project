-------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  --------------------------------------------------------------------------------
-- 2019-05-17  JaThlk  SCUXXW4-20876, Included CreateCustomerSelector fragment.
-- 2019-03-07  ChFolk  SCUXXW4-16871, Removed dynamic dependency where it is not necessary.
-- 2018-10-26  SUDELK  SCUXXW4-6006 Converted from frmBasicDataPlanningHierarchy using MTG Version: 1.32
-------------------------------------------------------------------------------------------------------
projection PlanningHierarchyBasicDataHandling;
component INVENT;
layer Core;
description "Used for basic data planning hierarchy functionality";
category Users;

--------------------------------- FRAGMENTS ---------------------------------
include fragment UserSiteCompanyLovSelector;
@DynamicComponentDependency PURCH
include fragment CreateCustomerSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset CompanyDistributionInfoSet for CompanyDistributionInfo;

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity CompanyDistributionInfo {
   crud = Read;
   from = "COMPANY_DISTRIBUTION_INFO";
   where = "company in (SELECT company FROM COMPANY_FINANCE_AUTH1)";
   exec = "COMPANY_DISTRIBUTION_INFO_API";
   supportwarnings = [true];
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 100;
      editable = [false];
      format = uppercase;
   }

   reference CompanyRef(Company) to Company(Company);
   array CompanyInventInfoArray(Company) to CompanyInventInfo(Company);
   @DynamicComponentDependency INVPLA
   array CompanyInvplaInfoOrderPointArray(Company) to CompanyInvplaInfoOrderPoint(Company);
   @DynamicComponentDependency INVPLA
   array CompanyInvplaInfoTpssArray(Company) to CompanyInvplaInfoTpss(Company);
   array SiteInventInfoArray(Company)to SiteInventInfo(Company);
   @DynamicComponentDependency INVPLA
   array SiteInvplaInfoOrderPointArray(Company) to SiteInvplaInfoOrderPoint(Company);
   @DynamicComponentDependency INVPLA
   array SiteInvplaInfoTpssArray(Company) to SiteInvplaInfoTpss(Company);
   array AbcFrequencyLifeCycleArray(Company)to AbcFrequencyLifecycle(Company);
   @DynamicComponentDependency INVPLA
   array AbcFrequencyLifeInvplaOrderPointArray(Company) to AbcFrequencyLifeInvplaOrderPoint(Company);
   @DynamicComponentDependency INVPLA
   array AbcFrequencyLifeInvplaTpssArray(Company) to AbcFrequencyLifeInvplaTpss(Company);
   array AssetClassCompanyArray(Company)to AssetClassCompany(Company);
   @DynamicComponentDependency INVPLA
   array AssetClassCompanyInvplaOrderPointArray(Company)to AssetClassCompanyInvplaOrderPoint(Company);
   @DynamicComponentDependency INVPLA
   array AssetClassCompanyInvplaTpssArray(Company)to AssetClassCompanyInvplaTpss(Company);
   array CommodityGroupCompanyArray(Company) to CommodityGroupCompany(Company);
   @DynamicComponentDependency INVPLA
   array CommGroupCompanyInvplaOrderPointArray(Company)to CommGroupCompanyInvplaOrderPoint(Company);
   @DynamicComponentDependency INVPLA
   array CommGroupCompanyInvplaTpssArray(Company)to CommGroupCompanyInvplaTpss(Company);
   @DynamicComponentDependency PURCH
   array SupplierCompanyPurchArray(Company)to SupplierCompanyPurch(Company);
   @DynamicComponentDependency INVPLA
   array SupplierCompanyInvplaOrderPointArray(Company)to SupplierCompanyInvplaOrderPoint(Company);
   @DynamicComponentDependency INVPLA
   array SupplierCompanyInvplaTpssArray(Company)to SupplierCompanyInvplaTpss(Company);
}

@Override
entity CompanyInventInfo {
   crud = Read, Update;
   from = "company_invent_info";
   exec = "COMPANY_INVENT_INFO_API";
   keys = Company {
      where = "COMPANY = :Company";
   }
   supportwarnings = [true];
   use attributes = InventoryInterestRate, OrderingCost, ServiceLevelRate;
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      required = [true];
      format = uppercase;
   }
   attribute InventoryInterestRate Number {
      fetch = "inventory_interest_rate";
      label = "Inventory Interest (%)";
      required = [true];
   }
   attribute OrderingCost Number {
      fetch = "ordering_cost";
      label = "Ordering Cost";
      required = [true];
   }
   attribute ServiceLevelRate Number {
      fetch = "service_level_rate";
      label = "Service Rate (%)";
      required = [true];
   }
   reference ServiceLevelRateRef(ServiceLevelRate) to ServiceRate(ServiceRate) {
      label = "Service Rate (%)";
   }
}

@Override
@DynamicComponentDependency INVPLA
entity CompanyInvplaInfoOrderPoint using CompanyInvplaInfo {
   crud = Read, Update;
   from = "company_op_invpla_info";
   exec = "COMPANY_INVPLA_INFO_API";
   keys = Company, HierarchyType {
      where = "COMPANY = :Company and HIERARCHY_TYPE = :HierarchyType";
   }
   supportwarnings = [true];
   use attributes = DemandModel, SafetyStockModel, SafetyStockCoverTime, LeadTimeFactor, MaxSafetyStkCoverTime, LotSizeModel, OrderPointModel, LotSizeCoverTime, MaxOrderCoverTime, AbsoluteMaxCapacity;
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      required = [true];
      format = uppercase;
   }
   attribute DemandModel Enumeration(InvPartDemandModel) {
      fetch = "demand_model_db";
      label = "Demand Model";
      required = [true];
   }
   attribute SafetyStockModel Enumeration(InvPartSafetystockModel) {
      fetch = "safety_stock_model_db";
      label = "Safety Stock Model";
      required = [true];
   }
   attribute SafetyStockCoverTime Number {
      fetch = "safety_stock_cover_time";
      label = "Safety Stock Cover Time";
      required = [true];
   }
   attribute LeadTimeFactor Number {
      fetch = "lead_time_factor";
      label = "Lead Time Factor";
      required = [true];
   }
   attribute MaxSafetyStkCoverTime Number {
      fetch = "max_safety_stk_cover_time";
      label = "Max Safety Stock Cover Time";
      required = [true];
   }
   attribute HierarchyType Text {
      fetch = "hierarchy_type";
      label = "Hierarchy Type";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute LotSizeModel Enumeration(InvPartLotSizeModel) {
      fetch = "lot_size_model_db";
      label = "Lot Size Model";
      required = [true];
   }
   attribute OrderPointModel Enumeration(InvPartOrderPointModel) {
      fetch = "order_point_model_db";
      label = "Order Point Model";
      required = [true];
   }
   attribute LotSizeCoverTime Number {
      fetch = "lot_size_cover_time";
      label = "Lot Size Cover Time";
      required = [true];
   }
   attribute MaxOrderCoverTime Number {
      fetch = "max_order_cover_time";
      label = "Max Order Cover Time";
      required = [true];
   }
   attribute AbsoluteMaxCapacity Enumeration(FndYesNo) {
      fetch = "absolute_max_capacity_db";
      label = "Absolute Max Capacity";
   }
}

@Override
@DynamicComponentDependency INVPLA
entity CompanyInvplaInfoTpss using CompanyInvplaInfo {
   crud = Read, Update;
   from = "company_tpss_invpla_info";
   exec = "COMPANY_INVPLA_INFO_API";
   keys = Company, HierarchyType {
      where = "COMPANY = :Company and HIERARCHY_TYPE = :HierarchyType";
   }
   supportwarnings = [true];
   use attributes = DemandModel, SafetyStockModel, SafetyStockCoverTime, LeadTimeFactor, MaxSafetyStkCoverTime;
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      required = [true];
      format = uppercase;
   }
   attribute DemandModel Enumeration(InvPartDemandModel) {
      fetch = "demand_model_db";
      label = "Demand Model";
      required = [true];
   }
   attribute SafetyStockModel Enumeration(InvPartSafetystockModel) {
      fetch = "safety_stock_model_db";
      label = "Safety Stock Model";
      required = [true];
   }
   attribute SafetyStockCoverTime Number {
      fetch = "safety_stock_cover_time";
      label = "Safety Stock Cover Time";
      required = [true];
   }
   attribute LeadTimeFactor Number {
      fetch = "lead_time_factor";
      label = "Lead Time Factor";
      required = [true];
   }
   attribute MaxSafetyStkCoverTime Number {
      fetch = "max_safety_stk_cover_time";
      label = "Max Safety Stock Cover Time";
      required = [true];
   }
   attribute HierarchyType Text {
      fetch = "hierarchy_type";
      label = "Hierarchy Type";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
}


@Override
entity SiteInventInfo {
   crud = Create, Read, Update, Delete;
   from = "site_invent_info_planning";
   exec = "SITE_INVENT_INFO_PLANNING_API";
   use attributes = InventoryInterestRate, OrderingCost, ServiceLevelRate;
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      required = [true];
      editable = [false];
      format = uppercase;
   }
   attribute Contract Text {
      fetch = "contract";
      label = "Site";
      maxlength = 5;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute Description Text {
      fetch = "Site_API.Get_Description(contract)";
      label = "Description";
      maxlength = 4000;
      editable = [false];
   }
   attribute InventoryInterestRate Number {
      fetch = "inventory_interest_rate";
      label = "Inventory Interest (%)";
   }
   attribute OrderingCost Number {
      fetch = "ordering_cost";
      label = "Ordering Cost";
   }
   attribute ServiceLevelRate Number {
      fetch = "service_level_rate";
      label = "Service Rate (%)";
   }
   reference ContractRef(Company, Contract) to UserSiteCompanyLov(Company, Contract) {
      label = "Site";
   }
   reference ServiceLevelRateRef(ServiceLevelRate) to ServiceRate(ServiceRate) {
      label = "Service Rate (%)";
   }
}

@Override
@DynamicComponentDependency INVPLA
entity SiteInvplaInfoOrderPoint using SiteInvplaInfo {
   crud = Create, Read, Update, Delete;
   from = "active_site_op_invpla_info";
   exec = "SITE_INVPLA_INFO_API";
   keys = Company, Contract, HierarchyType {
      where = "COMPANY = :Company and CONTRACT = :Contract and HIERARCHY_TYPE = :HierarchyType";
   }
   use attributes = DemandModel, SafetyStockModel, LotSizeModel, OrderPointModel, LotSizeCoverTime, SafetyStockCoverTime, MaxOrderCoverTime, MaxSafetyStkCoverTime, LeadTimeFactor, AbsoluteMaxCapacity;
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      insertable = [true];
      editable = [false];
      format = uppercase;
   }
   attribute Contract Text {
      fetch = "contract";
      label = "Site";
      maxlength = 5;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute HierarchyType Text {
      fetch = "hierarchy_type";
      label = "Hierarchy Type";
      maxlength = 20;
      required = [true];
      editable = [false];
      format = uppercase;
   }
   attribute Description Text {
      fetch = "Site_API.Get_Description(contract)";
      label = "Description";
      maxlength = 200;
      editable = [ETag != null];
   }
   attribute DemandModel Enumeration(InvPartDemandModel) {
      fetch = "demand_model_db";
      label = "Demand Model";
   }
   attribute SafetyStockModel Enumeration(InvPartSafetystockModel) {
      fetch = "safety_stock_model_db";
      label = "Safety Stock Model";
   }
   attribute LotSizeModel Enumeration(InvPartLotSizeModel) {
      fetch = "lot_size_model_db";
      label = "Lot Size Model";
   }
   attribute OrderPointModel Enumeration(InvPartOrderPointModel) {
      fetch = "order_point_model_db";
      label = "Order Point Model";
   }
   attribute LotSizeCoverTime Number {
      fetch = "lot_size_cover_time";
      label = "Lot Size Cover Time";
   }
   attribute SafetyStockCoverTime Number {
      fetch = "safety_stock_cover_time";
      label = "Safety Stock Cover Time";
   }
   attribute MaxOrderCoverTime Number {
      fetch = "max_order_cover_time";
      label = "Max Order Cover Time";
   }
   attribute MaxSafetyStkCoverTime Number {
      fetch = "max_safety_stk_cover_time";
      label = "Max Safety Stock Cover Time";
   }
   attribute LeadTimeFactor Number {
      fetch = "lead_time_factor";
      label = "Lead Time Factor";
   }
   attribute AbsoluteMaxCapacity Enumeration(FndYesNo) {
      fetch = "absolute_max_capacity_db";
      label = "Absolute Max Capacity";
   }
   reference ContractRef(Company, Contract) to UserSiteCompanyLov(Company, Contract) {
      label = "Site";
   }
}

@Override
@DynamicComponentDependency INVPLA
entity SiteInvplaInfoTpss using SiteInvplaInfo {
   crud = Create, Read, Update, Delete;
   from = "active_site_tpss_invpla_info";
   exec = "SITE_INVPLA_INFO_API";
   keys = Company, Contract, HierarchyType {
      where = "COMPANY = :Company and CONTRACT = :Contract and HIERARCHY_TYPE = :HierarchyType";
   }
   use attributes = DemandModel, SafetyStockModel, SafetyStockCoverTime, MaxSafetyStkCoverTime, LeadTimeFactor;
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      insertable = [true];
      editable = [false];
      format = uppercase;
   }
   attribute Contract Text {
      fetch = "contract";
      label = "Site";
      maxlength = 5;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute HierarchyType Text {
      fetch = "hierarchy_type";
      label = "Hierarchy Type";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute Description Text {
      fetch = "Site_API.Get_Description(contract)";
      label = "Description";
      maxlength = 200;
      editable = [ETag != null];
   }
   attribute DemandModel Enumeration(InvPartDemandModel) {
      fetch = "demand_model_db";
      label = "Demand Model";
   }
   attribute SafetyStockModel Enumeration(InvPartSafetystockModel) {
      fetch = "safety_stock_model_db";
      label = "Safety Stock Model";
   }
   attribute SafetyStockCoverTime Number {
      fetch = "safety_stock_cover_time";
      label = "Safety Stock Cover Time";
   }
   attribute MaxSafetyStkCoverTime Number {
      fetch = "max_safety_stk_cover_time";
      label = "Max Safety Stock Cover Time";
   }
   attribute LeadTimeFactor Number {
      fetch = "lead_time_factor";
      label = "Lead Time Factor";
   }
   attribute SafetyStockValidity Text {
      fetch = "'TRUE'";
   }

   reference ContractRef(Company, Contract) to UserSiteCompanyLov(Company, Contract) {
      label = "Site";
   }
}

@Override
entity AbcFrequencyLifecycle {
   crud = Create, Read, Update, Delete;
   from = "active_abc_frequency_lifecycle";
   exec = "ABC_FREQUENCY_LIFECYCLE_API";
   keys = Contract, AbcClass, FrequencyClass, LifecycleStage, Company {
      where = "CONTRACT = :Contract and ABC_CLASS = :AbcClass and FREQUENCY_CLASS_DB = :FrequencyClass and LIFECYCLE_STAGE_DB = :LifecycleStage and COMPANY = :Company";
   }
   use attributes = InventoryInterestRate, OrderingCost, ServiceLevelRate;

   attribute Contract Text {
      fetch = "contract";
      label = "Site";
      maxlength = 5;
      editable = [ETag = null];
      format = uppercase;
   }
   attribute AbcClass Text {
      fetch = "abc_class";
      label = "ABC Class";
      maxlength = 1;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute FrequencyClass Enumeration(InvPartFrequencyClass) {
      fetch = "frequency_class_db";
      label = "Frequency Class";
      required = [true];
      editable = [ETag = null];
   }
   attribute LifecycleStage Enumeration(InvPartLifecycleStage) {
      fetch = "lifecycle_stage_db";
      label = "Lifecycle Stage";
      required = [true];
      editable = [ETag = null];
   }
   attribute InventoryInterestRate Number {
      fetch = "inventory_interest_rate";
      label = "Inventory Interest (%)";
   }
   attribute OrderingCost Number {
      fetch = "ordering_cost";
      label = "Ordering Cost";
   }
   attribute ServiceLevelRate Number {
      fetch = "service_level_rate";
      label = "Service Rate (%)";
   }
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      editable = [false];
      format = uppercase;
   }
   reference ContractRef(Company, Contract) to UserSiteCompanyLov(Company, Contract) {
      label = "Site";
   }
   reference AbcClassRef(AbcClass) to AbcClass(AbcClass) {
      label = "ABC Class";
   }
   reference ServiceLevelRateRef(ServiceLevelRate) to ServiceRate(ServiceRate) {
      label = "Service Rate (%)";
   }
   reference CompanyRef(Company) to CompanyInventInfo(Company) {
      label = "Company";
   }
}

@Override
@DynamicComponentDependency INVPLA
entity AbcFrequencyLifeInvplaOrderPoint using AbcFrequencyLifeInvpla {
   crud = Create, Read, Update, Delete;
   from = "act_abc_frq_life_op_invpla";
   exec = "ABC_FREQUENCY_LIFE_INVPLA_API";
   keys = Contract, AbcClass, FrequencyClass, LifecycleStage, HierarchyType, Company {
      where = "CONTRACT = :Contract and ABC_CLASS = :AbcClass and FREQUENCY_CLASS_DB = :FrequencyClass and LIFECYCLE_STAGE_DB = :LifecycleStage and HIERARCHY_TYPE = :HierarchyType and COMPANY = :Company";
   }
   use attributes = DemandModel, SafetyStockModel, LotSizeModel, OrderPointModel, LotSizeCoverTime, SafetyStockCoverTime, MaxOrderCoverTime, MaxSafetyStkCoverTime, LeadTimeFactor, AbsoluteMaxCapacity;
   attribute Contract Text {
      fetch = "contract";
      label = "Site";
      maxlength = 5;
      editable = [ETag = null];
      format = uppercase;
   }
   attribute AbcClass Text {
      fetch = "abc_class";
      label = "ABC Class";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute FrequencyClass Enumeration(InvPartFrequencyClass) {
      fetch = "frequency_class_db";
      label = "Frequency Class";
      required = [true];
      editable = [ETag = null];
   }
   attribute LifecycleStage Enumeration(InvPartLifecycleStage) {
      fetch = "lifecycle_stage_db";
      label = "Lifecycle Stage";
      required = [true];
      editable = [ETag = null];
   }
   attribute HierarchyType Text {
      fetch = "hierarchy_type";
      label = "Hierarchy Type";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute DemandModel Enumeration(InvPartDemandModel) {
      fetch = "demand_model_db";
      label = "Demand Model";
   }
   attribute SafetyStockModel Enumeration(InvPartSafetystockModel) {
      fetch = "safety_stock_model_db";
      label = "Safety Stock Model";
   }
   attribute LotSizeModel Enumeration(InvPartLotSizeModel) {
      fetch = "lot_size_model_db";
      label = "Lot Size Model";
   }
   attribute OrderPointModel Enumeration(InvPartOrderPointModel) {
      fetch = "order_point_model_db";
      label = "Order Point Model";
   }
   attribute LotSizeCoverTime Number {
      fetch = "lot_size_cover_time";
      label = "Lot Size Cover Time";
   }
   attribute SafetyStockCoverTime Number {
      fetch = "safety_stock_cover_time";
      label = "Safety Stock Cover Time";
   }
   attribute MaxOrderCoverTime Number {
      fetch = "max_order_cover_time";
      label = "Max Order Cover Time";
   }
   attribute MaxSafetyStkCoverTime Number {
      fetch = "max_safety_stk_cover_time";
      label = "Max Safety Stock Cover Time";
   }
   attribute LeadTimeFactor Number {
      fetch = "lead_time_factor";
      label = "Lead Time Factor";
   }
   attribute AbsoluteMaxCapacity Enumeration(FndYesNo) {
      fetch = "absolute_max_capacity_db";
      label = "Absolute Max Capacity";
   }
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      editable = [false];
      format = uppercase;
   }
   reference ContractRef(Company, Contract) to UserSiteCompanyLov(Company, Contract) {
      label = "Site";
   }
   reference AbcClassRef(AbcClass) to AbcClass(AbcClass) {
      label = "ABC Class";
   }
   reference HierarchyTypeRef(Company, HierarchyType) to CompanyInvplaInfo(Company, HierarchyType) {
      label = "Hierarchy Type";
   }
}

@Override
@DynamicComponentDependency INVPLA
entity AbcFrequencyLifeInvplaTpss using AbcFrequencyLifeInvpla {
   crud = Create, Read, Update, Delete;
   from = "act_abc_frq_life_tpss_invpla";
   exec = "ABC_FREQUENCY_LIFE_INVPLA_API";
   keys = Contract, AbcClass, FrequencyClass, LifecycleStage, HierarchyType, Company {
      where = "CONTRACT = :Contract and ABC_CLASS = :AbcClass and FREQUENCY_CLASS_DB = :FrequencyClass and LIFECYCLE_STAGE_DB = :LifecycleStage and HIERARCHY_TYPE = :HierarchyType and COMPANY = :Company";
   }
   use attributes = DemandModel, SafetyStockModel, SafetyStockCoverTime, MaxSafetyStkCoverTime, LeadTimeFactor;
   attribute Contract Text {
      fetch = "contract";
      label = "Site";
      maxlength = 5;
      editable = [ETag = null];
      format = uppercase;
   }
   attribute AbcClass Text {
      fetch = "abc_class";
      label = "ABC Class";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute FrequencyClass Enumeration(InvPartFrequencyClass) {
      fetch = "frequency_class_db";
      label = "Frequency Class";
      required = [true];
      editable = [ETag = null];
   }
   attribute LifecycleStage Enumeration(InvPartLifecycleStage) {
      fetch = "lifecycle_stage_db";
      label = "Lifecycle Stage";
      required = [true];
      editable = [ETag = null];
   }
   attribute HierarchyType Text {
      fetch = "hierarchy_type";
      label = "Hierarchy Type";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute DemandModel Enumeration(InvPartDemandModel) {
      fetch = "demand_model_db";
      label = "Demand Model";
   }
   attribute SafetyStockModel Enumeration(InvPartSafetystockModel) {
      fetch = "safety_stock_model_db";
      label = "Safety Stock Model";
   }
   attribute SafetyStockCoverTime Number {
      fetch = "safety_stock_cover_time";
      label = "Safety Stock Cover Time";
   }
   attribute MaxSafetyStkCoverTime Number {
      fetch = "max_safety_stk_cover_time";
      label = "Max Safety Stock Cover Time";
   }
   attribute LeadTimeFactor Number {
      fetch = "lead_time_factor";
      label = "Lead Time Factor";
   }
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
   }
   attribute SafetyStockValidity Text {
      fetch = "'TRUE'";
   }
   reference ContractRef(Company, Contract) to UserSiteCompanyLov(Company, Contract) {
      label = "Site";
   }
   reference AbcClassRef(AbcClass) to AbcClass(AbcClass) {
      label = "ABC Class";
   }
}


@Override
entity AssetClassCompany {
   crud = Create, Read, Update, Delete;
   from = "active_asset_class_company";
   exec = "ASSET_CLASS_COMPANY_API";
   keys = Company, AssetClass {
      where = "COMPANY = :Company and ASSET_CLASS = :AssetClass";
   }
   use attributes = InventoryInterestRate, OrderingCost, ServiceLevelRate;
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      required = [true];
      format = uppercase;
   }
   attribute AssetClass Text {
      fetch = "asset_class";
      label = "Asset Class";
      maxlength = 2;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute Description Text {
      fetch = "Asset_Class_API.Get_Description(asset_class)";
      label = "Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute InventoryInterestRate Number {
      fetch = "inventory_interest_rate";
      label = "Inventory Interest (%)";
   }
   attribute OrderingCost Number {
      fetch = "ordering_cost";
      label = "Ordering Cost";
   }
   attribute ServiceLevelRate Number {
      fetch = "service_level_rate";
      label = "Service Rate (%)";
   }
   reference AssetClassRef(AssetClass) to AssetClass(AssetClass) {
      label = "Asset Class";
   }
   reference ServiceLevelRateRef(ServiceLevelRate) to ServiceRate(ServiceRate) {
      label = "Service Rate (%)";
   }
}

@Override
@DynamicComponentDependency INVPLA
entity AssetClassCompanyInvplaOrderPoint using AssetClassCompanyInvpla {
   crud = Create, Read, Update, Delete;
   from = "act_asset_cls_comp_op_invpla";
   exec = "ASSET_CLASS_COMPANY_INVPLA_API";
   keys = HierarchyType, AssetClass, Company {
      where = "HIERARCHY_TYPE = :HierarchyType and ASSET_CLASS = :AssetClass and COMPANY = :Company";
   }
   use attributes = DemandModel, SafetyStockModel, LotSizeModel, OrderPointModel, LotSizeCoverTime, SafetyStockCoverTime, MaxOrderCoverTime, MaxSafetyStkCoverTime, LeadTimeFactor, AbsoluteMaxCapacity;
   attribute HierarchyType Text {
      fetch = "hierarchy_type";
      label = "Hierarchy Type";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute AssetClass Text {
      fetch = "asset_class";
      label = "Asset Class";
      maxlength = 2;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute Description Text {
      fetch = "Asset_Class_API.Get_Description(asset_class)";
      label = "Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute DemandModel Enumeration(InvPartDemandModel) {
      fetch = "demand_model_db";
      label = "Demand Model";
   }
   attribute SafetyStockModel Enumeration(InvPartSafetystockModel) {
      fetch = "safety_stock_model_db";
      label = "Safety Stock Model";
   }
   attribute LotSizeModel Enumeration(InvPartLotSizeModel) {
      fetch = "lot_size_model_db";
      label = "Lot Size Model";
   }
   attribute OrderPointModel Enumeration(InvPartOrderPointModel) {
      fetch = "order_point_model_db";
      label = "Order Point Model";
   }
   attribute LotSizeCoverTime Number {
      fetch = "lot_size_cover_time";
      label = "Lot Size Cover Time";
   }
   attribute SafetyStockCoverTime Number {
      fetch = "safety_stock_cover_time";
      label = "Safety Stock Cover Time";
   }
   attribute MaxOrderCoverTime Number {
      fetch = "max_order_cover_time";
      label = "Max Order Cover Time";
   }
   attribute MaxSafetyStkCoverTime Number {
      fetch = "max_safety_stk_cover_time";
      label = "Max Safety Stock Cover Time";
   }
   attribute LeadTimeFactor Number {
      fetch = "lead_time_factor";
      label = "Lead Time Factor";
   }
   attribute AbsoluteMaxCapacity Enumeration(FndYesNo) {
      fetch = "absolute_max_capacity_db";
      label = "Absolute Max Capacity";
   }
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   reference HierarchyTypeRef(Company, HierarchyType) to CompanyInvplaInfo(Company, HierarchyType) {
      label = "Hierarchy Type";
   }
   reference AssetClassRef(AssetClass) to AssetClass(AssetClass) {
      label = "Asset Class";
   }
   reference CompanyRef(Company) to CompanyInvplaInfo(Company) {
      label = "Company";
   }
}

@Override
@DynamicComponentDependency INVPLA
entity AssetClassCompanyInvplaTpss using AssetClassCompanyInvpla {
   crud = Create, Read, Update, Delete;
   from = "act_asset_cls_comp_tpss_invpla";
   exec = "ASSET_CLASS_COMPANY_INVPLA_API";
   keys = HierarchyType, AssetClass, Company {
      where = "HIERARCHY_TYPE = :HierarchyType and ASSET_CLASS = :AssetClass and COMPANY = :Company";
   }
   use attributes = DemandModel, SafetyStockModel, SafetyStockCoverTime, MaxSafetyStkCoverTime, LeadTimeFactor;
   attribute HierarchyType Text {
      fetch = "hierarchy_type";
      label = "Hierarchy Type";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute AssetClass Text {
      fetch = "asset_class";
      label = "Asset Class";
      maxlength = 2;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute Description Text {
      fetch = "Asset_Class_API.Get_Description(asset_class)";
      label = "Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute DemandModel Enumeration(InvPartDemandModel) {
      fetch = "demand_model_db";
      label = "Demand Model";
   }
   attribute SafetyStockModel Enumeration(InvPartSafetystockModel) {
      fetch = "safety_stock_model_db";
      label = "Safety Stock Model";
   }
   attribute SafetyStockCoverTime Number {
      fetch = "safety_stock_cover_time";
      label = "Safety Stock Cover Time";
   }
   attribute MaxSafetyStkCoverTime Number {
      fetch = "max_safety_stk_cover_time";
      label = "Max Safety Stock Cover Time";
   }
   attribute LeadTimeFactor Number {
      fetch = "lead_time_factor";
      label = "Lead Time Factor";
   }
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute SafetyStockValidity Text {
      fetch = "'TRUE'";
   }
   reference AssetClassRef(AssetClass) to AssetClass(AssetClass) {
      label = "Asset Class";
   }
}

@Override
entity CommodityGroupCompany {
   crud = Create, Read, Update, Delete;
   from = "active_comm_group_company";
   exec = "COMMODITY_GROUP_COMPANY_API";
   keys = Company, CommodityCode {
      where = "COMPANY = :Company and COMMODITY_CODE = :CommodityCode";
   }
   use attributes = InventoryInterestRate, OrderingCost, ServiceLevelRate;
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      required = [true];
      format = uppercase;
   }
   attribute CommodityCode Text {
      fetch = "commodity_code";
      label = "Commodity Group";
      maxlength = 5;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute Description Text {
      fetch = "Commodity_Group_API.Get_Description(commodity_code)";
      label = "Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute InventoryInterestRate Number {
      fetch = "inventory_interest_rate";
      label = "Inventory Interest (%)";
   }
   attribute OrderingCost Number {
      fetch = "ordering_cost";
      label = "Ordering Cost";
   }
   attribute ServiceLevelRate Number {
      fetch = "service_level_rate";
      label = "Service Rate (%)";
   }
   reference CommodityCodeRef(CommodityCode) to CommodityGroup(CommodityCode) {
      label = "Commodity Group";
   }
   reference ServiceLevelRateRef(ServiceLevelRate) to ServiceRate(ServiceRate) {
      label = "Service Rate (%)";
   }
}

@Override
@DynamicComponentDependency INVPLA
entity CommGroupCompanyInvplaOrderPoint using CommGroupCompanyInvpla {
   crud = Create, Read, Update, Delete;
   from = "act_comm_grp_comp_op_invpla";
   exec = "COMM_GROUP_COMPANY_INVPLA_API";
   keys = Company, CommodityCode, HierarchyType {
      where = "COMPANY = :Company and COMMODITY_CODE = :CommodityCode and HIERARCHY_TYPE = :HierarchyType";
   }
   use attributes = DemandModel, SafetyStockModel, LotSizeModel, OrderPointModel, LotSizeCoverTime, SafetyStockCoverTime, MaxOrderCoverTime, MaxSafetyStkCoverTime, LeadTimeFactor, AbsoluteMaxCapacity;
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      required = [true];
      format = uppercase;
   }
   attribute CommodityCode Text {
      fetch = "commodity_code";
      label = "Commodity Group";
      maxlength = 5;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute HierarchyType Text {
      fetch = "hierarchy_type";
      label = "Hierarchy Type";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute Description Text {
      fetch = "Commodity_Group_API.Get_Description(commodity_code)";
      label = "Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute DemandModel Enumeration(InvPartDemandModel) {
      fetch = "demand_model_db";
      label = "Demand Model";
   }
   attribute SafetyStockModel Enumeration(InvPartSafetystockModel) {
      fetch = "safety_stock_model_db";
      label = "Safety Stock Model";
   }
   attribute LotSizeModel Enumeration(InvPartLotSizeModel) {
      fetch = "lot_size_model_db";
      label = "Lot Size Model";
   }
   attribute OrderPointModel Enumeration(InvPartOrderPointModel) {
      fetch = "order_point_model_db";
      label = "Order Point Model";
   }
   attribute LotSizeCoverTime Number {
      fetch = "lot_size_cover_time";
      label = "Lot Size Cover Time";
   }
   attribute SafetyStockCoverTime Number {
      fetch = "safety_stock_cover_time";
      label = "Safety Stock Cover Time";
   }
   attribute MaxOrderCoverTime Number {
      fetch = "max_order_cover_time";
      label = "Max Order Cover Time";
   }
   attribute MaxSafetyStkCoverTime Number {
      fetch = "max_safety_stk_cover_time";
      label = "Max Safety Stock Cover Time";
   }
   attribute LeadTimeFactor Number {
      fetch = "lead_time_factor";
      label = "Lead Time Factor";
   }
   attribute AbsoluteMaxCapacity Enumeration(FndYesNo) {
      fetch = "absolute_max_capacity_db";
      label = "Absolute Max Capacity";
   }
   reference CommodityCodeRef(CommodityCode) to CommodityGroup(CommodityCode) {
      label = "Commodity Group";
   }
}

@Override
@DynamicComponentDependency INVPLA
entity CommGroupCompanyInvplaTpss using CommGroupCompanyInvpla {
   crud = Create, Read, Update, Delete;
   from = "act_comm_grp_comp_tpss_invpla";
   exec = "COMM_GROUP_COMPANY_INVPLA_API";
   keys = Company, CommodityCode, HierarchyType {
      where = "COMPANY = :Company and COMMODITY_CODE = :CommodityCode and HIERARCHY_TYPE = :HierarchyType";
   }
   use attributes = DemandModel, SafetyStockModel, SafetyStockCoverTime, MaxSafetyStkCoverTime, LeadTimeFactor;
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      required = [true];
      format = uppercase;
   }
   attribute CommodityCode Text {
      fetch = "commodity_code";
      label = "Commodity Group";
      maxlength = 5;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute HierarchyType Text {
      fetch = "hierarchy_type";
      label = "Hierarchy Type";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute Description Text {
      fetch = "Commodity_Group_API.Get_Description(commodity_code)";
      label = "Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute DemandModel Enumeration(InvPartDemandModel) {
      fetch = "demand_model_db";
      label = "Demand Model";
   }
   attribute SafetyStockModel Enumeration(InvPartSafetystockModel) {
      fetch = "safety_stock_model_db";
      label = "Safety Stock Model";
   }
   attribute SafetyStockCoverTime Number {
      fetch = "safety_stock_cover_time";
      label = "Safety Stock Cover Time";
   }
   attribute MaxSafetyStkCoverTime Number {
      fetch = "max_safety_stk_cover_time";
      label = "Max Safety Stock Cover Time";
   }
   attribute LeadTimeFactor Number {
      fetch = "lead_time_factor";
      label = "Lead Time Factor";
   }
   attribute SafetyStockValidity Text {
      fetch = "'TRUE'";
   }
   reference CommodityCodeRef(CommodityCode) to CommodityGroup(CommodityCode) {
      label = "Commodity Group";
   }
}

@Override
@DynamicComponentDependency PURCH
entity SupplierCompanyPurch {
   crud = Create, Read, Update, Delete;
   from = "active_supplier_company";
   exec = "SUPPLIER_COMPANY_PURCH_API";
   keys = Company, VendorNo {
      where = "COMPANY = :Company and VENDOR_NO = :VendorNo";
   }
   use attributes = InventoryInterestRate, OrderingCost, ServiceLevelRate;
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      required = [true];
      format = uppercase;
   }
   attribute VendorNo Text {
      fetch = "vendor_no";
      label = "Supplier";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute Name Text {
      fetch = "Supplier_API.Get_Vendor_Name(vendor_no)";
      label = "Name";
      maxlength = 2000;
      editable = [false];
   }
   attribute InventoryInterestRate Number {
      fetch = "inventory_interest_rate";
      label = "Inventory Interest (%)";
   }
   attribute OrderingCost Number {
      fetch = "ordering_cost";
      label = "Ordering Cost";
   }
   attribute ServiceLevelRate Number {
      fetch = "service_level_rate";
      label = "Service Rate (%)";
   }
   reference VendorNoRef(VendorNo) to CreateCustomer(SupplierId) {
      label = "Supplier";
   }
   reference ServiceLevelRateRef(ServiceLevelRate) to ServiceRate(ServiceRate) {
      label = "Service Rate (%)";
   }
}

@Override
@DynamicComponentDependency INVPLA
entity SupplierCompanyInvplaOrderPoint using SupplierCompanyInvpla {
   crud = Create, Read, Update, Delete;
   from = "act_sup_comp_op_invpla";
   exec = "SUPPLIER_COMPANY_INVPLA_API";
   keys = Company, VendorNo, HierarchyType {
      where = "COMPANY = :Company and VENDOR_NO = :VendorNo and HIERARCHY_TYPE = :HierarchyType";
   }
   use attributes = DemandModel, SafetyStockModel, LotSizeModel, OrderPointModel, LotSizeCoverTime, MaxOrderCoverTime, SafetyStockCoverTime, MaxSafetyStkCoverTime, LeadTimeFactor, AbsoluteMaxCapacity;
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      required = [true];
      format = uppercase;
   }
   attribute VendorNo Text {
      fetch = "vendor_no";
      label = "Supplier";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute HierarchyType Text {
      fetch = "hierarchy_type";
      label = "Hierarchy Type";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute SupplierName Text {
      fetch = "Supplier_API.Get_Vendor_Name(vendor_no)";
      label = "Supplier Name";
      maxlength = 2000;
      editable = [false];
   }
   attribute DemandModel Enumeration(InvPartDemandModel) {
      fetch = "demand_model_db";
      label = "Demand Model";
   }
   attribute SafetyStockModel Enumeration(InvPartSafetystockModel) {
      fetch = "safety_stock_model_db";
      label = "Safety Stock Model";
   }
   attribute LotSizeModel Enumeration(InvPartLotSizeModel) {
      fetch = "lot_size_model_db";
      label = "Lot Size Model";
      required = [true];
   }
   attribute OrderPointModel Enumeration(InvPartOrderPointModel) {
      fetch = "order_point_model_db";
      label = "Order Point Model";
      required = [true];
   }
   attribute LotSizeCoverTime Number {
      fetch = "lot_size_cover_time";
      label = "Lot Size Cover Time";
   }
   attribute MaxOrderCoverTime Number {
      fetch = "max_order_cover_time";
      label = "Max Order Cover Time";
   }
   attribute SafetyStockCoverTime Number {
      fetch = "safety_stock_cover_time";
      label = "Safety Stock Cover Time";
   }
   attribute MaxSafetyStkCoverTime Number {
      fetch = "max_safety_stk_cover_time";
      label = "Max Safety Stock Cover Time";
   }
   attribute LeadTimeFactor Number {
      fetch = "lead_time_factor";
      label = "Lead Time Factor";
   }
   attribute AbsoluteMaxCapacity Enumeration(FndYesNo) {
      fetch = "absolute_max_capacity_db";
      label = "Absolute Max Capacity";
   }
   reference VendorNoRef(VendorNo) to CreateCustomer(SupplierId) {
      label = "Supplier";
   }
}

@Override
@DynamicComponentDependency INVPLA
entity SupplierCompanyInvplaTpss using SupplierCompanyInvpla {
   crud = Create, Read, Update, Delete;
   from = "act_sup_comp_tpss_invpla";
   exec = "SUPPLIER_COMPANY_INVPLA_API";
   keys = Company, VendorNo, HierarchyType {
      where = "COMPANY = :Company and VENDOR_NO = :VendorNo and HIERARCHY_TYPE = :HierarchyType";
   }
   use attributes = DemandModel, SafetyStockModel, SafetyStockCoverTime, MaxSafetyStkCoverTime, LeadTimeFactor;
   attribute Company Text {
      fetch = "company";
      label = "Company";
      maxlength = 20;
      required = [true];
      format = uppercase;
   }
   attribute VendorNo Text {
      fetch = "vendor_no";
      label = "Supplier";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute HierarchyType Text {
      fetch = "hierarchy_type";
      label = "Hierarchy Type";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute SupplierName Text {
      fetch = "Supplier_API.Get_Vendor_Name(vendor_no)";
      label = "Supplier Name";
      maxlength = 2000;
      editable = [false];
   }
   attribute DemandModel Enumeration(InvPartDemandModel) {
      fetch = "demand_model_db";
      label = "Demand Model";
   }
   attribute SafetyStockModel Enumeration(InvPartSafetystockModel) {
      fetch = "safety_stock_model_db";
      label = "Safety Stock Model";
   }
   attribute SafetyStockCoverTime Number {
      fetch = "safety_stock_cover_time";
      label = "Safety Stock Cover Time";
   }
   attribute MaxSafetyStkCoverTime Number {
      fetch = "max_safety_stk_cover_time";
      label = "Max Safety Stock Cover Time";
   }
   attribute LeadTimeFactor Number {
      fetch = "lead_time_factor";
      label = "Lead Time Factor";
   }
   attribute SafetyStockValidity Text {
      fetch = "'TRUE'";
   }
   reference VendorNoRef(VendorNo) to CreateCustomer(SupplierId) {
      label = "Supplier";
   }
}


--------------------------------- FUNCTIONS ---------------------------------
function GetDescription Text {
   parameter Contract Text;
}
