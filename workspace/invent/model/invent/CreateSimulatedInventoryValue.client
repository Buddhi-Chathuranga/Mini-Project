-------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  --------------------------------------------------------------------------------
-- 2018-10-09  ChFolk  SCUXXW4-5546, Created dlgInventoryValueSimulation.
-------------------------------------------------------------------------------------------------------
client CreateSimulatedInventoryValue;
component INVENT;
layer Core;
include fragment UserAllowedSiteLovSelector;
include fragment StatisticPeriod2Selector;
@DynamicComponentDependency COST
include fragment CostSetLovSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry CreateSimulatedInventoryValueNavEntry parent MpccomNavigator.WarehouseManagementFinancialControl at index 620 {
      label = "Create Simulated Inventory Value";
      assistant CreateSimulatedInventoryValueAssistant;
   }
}
-------------------------------- MAIN PAGES ---------------------------------

-------------------------------- ASSISTANTS ---------------------------------

assistant CreateSimulatedInventoryValueAssistant using InventoryValueSimulationSet {
   label = "Create Simulated Inventory Value";
   savemode = OnLostFocus;
   setup SetupDefaultValues {
      variable DefaultContractVar {
         type = Text;
      }
      execute {
         set Contract = DefaultContractVar;
      }
   }
   init command {
      execute {
         if [Contract = null] {
            call FetchDefaultContract()into Contract;
         }
      }
   }
   steps {
      step {
         group InventoryValueSimulateForGroup;
         group InventorySimulateValue1BasedOnGroup;
         group InventorySimulateValue2BasedOnGroup;

      }
      final step {

      }
      cancelled step {

      }
   }
   finish command {
      enabled = [(Contract != null) and(StatYearNo != null) and(StatPeriodNo != null) and(CostType1 != null or CostSet1 != null) and(CostType2 != null or CostSet2 != null)];
      execute {
         if [CostSet1 = null] {
            set CostSet1 = 0;
         }
         if [CostSet2 = null] {
            set CostSet2 = 0;
         }
         call CreateSimulation(Contract, StatYearNo, StatPeriodNo, CostType1, CostSet1, CostType2, CostSet2);
         navigate back;
      }
   }
   cancel command {
      execute {
         navigate back;
      }
   }
   restart command {
      visible = [false];
   }
}

--------------------------------- COMMANDS ----------------------------------

--------------------------------- SELECTORS ---------------------------------
@Override
selector StatisticPeriod2Selector for StatisticPeriod2 {
   orderby = StatYearNo;
   label = "${StatYearNo}";
   static StatYearNo;
}

---------------------------------- GROUPS -----------------------------------
group InventoryValueSimulateForGroup for InventoryValueSimulationVirtual {
   label = "Simulate for";

   lov ContractRef with ReferenceUserAllowedSiteLovSelector {
      size = Small;
   }
   lov StatYearNoRef with StatisticPeriod2Selector;
   field StatPeriodNoRef;
}

group InventorySimulateValue1BasedOnGroup for InventoryValueSimulationVirtual {
   label = "Simulate value 1 based on";
   field CostType1 {
      size = Small;
      editable = [CostSet1 = null];
   }
   @DynamicComponentDependency COST
   lov CostSet1Ref with ReferenceCostSetLovSelector {
      editable = [CostType1 = null];
   }
}
group InventorySimulateValue2BasedOnGroup for InventoryValueSimulationVirtual {
   label = "Simulate value 2 based on";
   field CostType2 {
      size = Small;
      editable = [CostSet2 = null];
   }
   @DynamicComponentDependency COST
   lov CostSet2Ref with ReferenceCostSetLovSelector {
      editable = [CostType2 = null];
   }
}

