----------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------------
-- 2018-10-09  ChFolk  SCUXXW4-5546, Removed InventoryValueSimulationStructure and action CreateSimulation and move them to
-- 2018-10-09          CreateSimulatedInventoryValue.projection as the dialog should be a navigated Assistant.
-- 2018-09-25  ChFolk  SCUXXW4-5546, Added InventoryValueSimulationStructure and action CreateSimulation and include fragments
-- 2018-09-25          StatisticPeriod2Selector and to support dlgInventoryValueSimulation.
-- 2018-06-19  JaThlk  SCUXXW4-11617, Included UserAllowedSiteLovSelector fragment instead of UserAllowedSiteLov.
-- 2018-03-21  ChFolk  SCUXXW4-6437, Converted from frmQueryInventoryValueSimulation using MTG Version: 1.15
----------------------------------------------------------------------------------------------------------

projection InventoryValueSimulationHandling;
component INVENT;
layer Core;
description "Use this API to view the result of the simulation performed in the Create Simulated Inventory Value window";
category Users;
include fragment UserAllowedSiteLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset InventoryValueSimulations for InventoryValueSimulation;


------------------------------ ENTITY DETAILS -------------------------------
@Override
entity InventoryValueSimulation {
   crud = Read;
   keys = StatYearNo, StatPeriodNo, Contract, SimulationId {
      where = "STAT_YEAR_NO = :StatYearNo and STAT_PERIOD_NO = :StatPeriodNo and CONTRACT = :Contract and SIMULATION_ID = :SimulationId";
   }
   attribute SimulationId Number {
      label = "Simulation ID";
   }
   attribute StatYearNo Number {
      label = "Year";
      editable = [false];
   }
   attribute StatPeriodNo Number {
      label = "Period";
      editable = [false];
   }
   attribute Contract Text {
      editable = [false];
   }
   attribute Description Text {
      fetch = "Site_API.Get_Description(CONTRACT)";
      label = "Description";
      maxlength = 20;
      editable = [false];
   }
   attribute CreateDate Date {
      label = "Created";
      editable = [false];
   }
   attribute Parameter1 Text {
      label = "Simulation Parameter 1";
      editable = [false];
   }
   attribute Parameter2 Text {
      label = "Simulation Parameter 2";
      editable = [false];
   }
   attribute Userid Text {
      label = "By";
      editable = [false];
   }
   attribute DefaultContract Text {
      fetch = "User_Allowed_Site_API.Get_Default_Site";
   }
   reference StatPeriodNoRef(StatYearNo, StatPeriodNo) to StatisticPeriod(StatYearNo, StatPeriodNo) {
      label = "Period";
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   array InventoryValueSimulationLines(StatYearNo, StatPeriodNo, Contract, SimulationId) to InventoryValueSimulationLine(StatYearNo, StatPeriodNo, Contract, SimulationId);
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------
query InventoryValueSimulationLine {
   from = "inventory_value_sim_line_ext";
   lu = InventoryValueSimLine;
   keys = StatYearNo, StatPeriodNo, Contract, SimulationId, PartNo, ConfigurationId {
      where = "STAT_YEAR_NO = :StatYearNo and STAT_PERIOD_NO = :StatPeriodNo and CONTRACT = :Contract and SIMULATION_ID = :SimulationId and PART_NO = :PartNo and CONFIGURATION_ID = :ConfigurationId";
   }
   attribute StatYearNo Number {
      label = "Year";
      editable = [false];
   }
   attribute StatPeriodNo Number {
      label = "Period";
      editable = [false];
   }
   attribute Contract Text {
      editable = [false];
   }
   attribute SimulationId Number {
      editable = [false];
   }
   attribute PartNo Text {
      editable = [false];
   }
   attribute Description Text {
      fetch = "DESCRIPTION";
      label = "Part Description";
      maxlength = 200;
      editable = [false];
   }
   attribute ConfigurationId Text {
      editable = [false];
   }
   attribute UnitMeas Text {
      fetch = "UNIT_MEAS";
      label = "UoM";
      maxlength = 10;
      editable = [false];
   }
   attribute AbcClass Text {
      fetch = "ABC_CLASS";
      label = "ABC Class";
      maxlength = 1;
      editable = [false];
   }
   attribute PlannerBuyer Text {
      fetch = "PLANNER_BUYER";
      label = "Planner";
      maxlength = 20;
      editable = [false];
      format = uppercase;
   }
   attribute AccountingGroup Text {
      fetch = "ACCOUNTING_GROUP";
      label = "Accounting Group";
      maxlength = 5;
      editable = [false];
   }
   attribute PartProductFamily Text {
      fetch = "PART_PRODUCT_FAMILY";
      label = "Product Family";
      maxlength = 5;
      editable = [false];
   }
   attribute PartProductCode Text {
      fetch = "PART_PRODUCT_CODE";
      label = "Product Code";
      maxlength = 5;
      editable = [false];
   }
   attribute TypeCode Enumeration(InventoryPartType) {
      fetch = "TYPE_CODE_DB";
      label = "Part Type";
      editable = [false];
   }
   attribute PrimeCommodity Text {
      fetch = "PRIME_COMMODITY";
      label = "Commodity Group 1";
      maxlength = 5;
      editable = [false];
   }
   attribute SecondCommodity Text {
      fetch = "SECOND_COMMODITY";
      label = "Commodity Group 2";
      maxlength = 5;
      editable = [false];
   }
   attribute AssetClass Text {
      fetch = "ASSET_CLASS";
      label = "Asset Class";
      maxlength = 2;
      editable = [false];
      format = uppercase;
   }
   attribute QtyWaivDevRej Number {
      label = "W/D/R Qty";
      editable = [false];
   }
   attribute Quantity Number {
      editable = [false];
   }
   attribute QtyInTransit Number {
      label = "In Transit Qty";
      editable = [false];
   }
   attribute QtyAtCustomer Number {
      editable = [false];
   }
   attribute Value1 Number {
      label = "Total Inventory Value 1";
      editable = [false];
      format = ifscurrency;
   }
   attribute Value2 Number {
      label = "Total Inventory Value 2";
      editable = [false];
      format = ifscurrency;
   }
   attribute AmountDiff Number {
      label = "Amount Difference";
      editable = [false];
      format = ifscurrency;
   }
   attribute PercentageDiff Number {
      label = "Percentage Difference";
      editable = [false];
   }
   reference PartNoRef(Contract, PartNo) to InventoryPart(Contract, PartNo) {
      label = "Part No";
   }
   reference ConfigurationIdRef(Contract, PartNo, ConfigurationId) to InventoryPartConfig(Contract, PartNo, ConfigurationId) {
      label = "Configuration ID";
   }
   reference UnitMeasRef(UnitMeas) to IsoUnit(UnitCode) {
      label = "UoM";
   }
   reference AbcClassRef(AbcClass) to AbcClass(AbcClass) {
      label = "ABC Class";
   }
   reference PlannerBuyerRef(PlannerBuyer) to InventoryPartPlanner(BuyerCode) {
      label = "Planner";
   }
   reference AccountingGroupRef(AccountingGroup) to AccountingGroup(AccountingGroup) {
      label = "Accounting Group";
   }
   reference PartProductFamilyRef(PartProductFamily) to InventoryProductFamily(PartProductFamily) {
      label = "Product Family";
   }
   reference PartProductCodeRef(PartProductCode) to InventoryProductCode(PartProductCode) {
      label = "Product Code";
   }
   reference PrimeCommodityRef(PrimeCommodity) to CommodityGroup(CommodityCode) {
      label = "Commodity Group 1";
   }
   reference SecondCommodityRef(SecondCommodity) to CommodityGroup(CommodityCode) {
      label = "Commodity Group 2";
   }
   reference AssetClassRef(AssetClass) to AssetClass(AssetClass) {
      label = "Asset Class";
   }
}

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------
