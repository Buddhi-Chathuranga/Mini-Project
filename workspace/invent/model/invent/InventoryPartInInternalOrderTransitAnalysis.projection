--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2022-01-26  SaLelk  SC21R2-7403, Modified fetching of Project ID considering default values.
-- 2021-10-27  RoJalk  SC21R2-3082, Added OwnerName and modified fetching of Owner considering default values.
-- 2021-09-27  AvWilk  SC21R2-688, Added ProgramId,ProgramDescription,ProjectName,SubProjectId,SubProjectDescription,ActivityNo,ActivityDescription.
-- 2018-04-13  DaZase  SCUXXW4-7215, Changed the entity to be a query and added ExpirationDateDb to be used as a key.
-- 2018-04-05  DaZase  SCUXXW4-7215, Converted from tbwQueryInventoryPartInTransit using MTG Version: 1.15
--------------------------------------------------------------------------------------

projection InventoryPartInInternalOrderTransitAnalysis;
component INVENT;
layer Core;
description "Use this API to view information about the inventory parts in internal order transit between sites which belong to the same financial company. When you make a search, you can group and sum the information as requested. This is a quick method to search for part in internal order transit between sites belonging to the same company.";
category Users;
include fragment SiteUivLov;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset InventoryPartInTransits for InventoryPartInTransit;


------------------------------ ENTITY DETAILS -------------------------------

query InventoryPartInTransit {
   from = "inventory_part_in_transit_all";
   lu = InventoryPartInTransit;
   keys = DeliveringContract, Contract, PartNo, ConfigurationId, HandlingUnitId, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ExpirationDateDb, DeliveringWarehouseId, ReceivingWarehouseId, ActivitySeq, PartOwnership, OwningCustomerNo, OwningVendorNo, DelivNo, ShipmentId, ShipmentLineNo {
      where = "DELIVERING_CONTRACT  = :DeliveringContract and CONTRACT           = :Contract         and PART_NO                 = :PartNo                and CONFIGURATION_ID       = :ConfigurationId
               and HANDLING_UNIT_ID = :HandlingUnitId     and LOT_BATCH_NO       = :LotBatchNo       and SERIAL_NO               = :SerialNo              and ENG_CHG_LEVEL          = :EngChgLevel
               and WAIV_DEV_REJ_NO  = :WaivDevRejNo       and EXPIRATION_DATE_DB = :ExpirationDateDb and DELIVERING_WAREHOUSE_ID = :DeliveringWarehouseId and RECEIVING_WAREHOUSE_ID = :ReceivingWarehouseId
               and ACTIVITY_SEQ     = :ActivitySeq        and PART_OWNERSHIP_DB  = :PartOwnership    and OWNING_CUSTOMER_NO      = :OwningCustomerNo      and OWNING_VENDOR_NO       = :OwningVendorNo
               and DELIV_NO         = :DelivNo            and SHIPMENT_ID        = :ShipmentId       and SHIPMENT_LINE_NO        = :ShipmentLineNo";
   }

   attribute DeliveringContract Text {
      fetch = "delivering_contract";
      label = "Delivering Site";
      maxlength = 5;
      format = uppercase;
      implementationtype = "VARCHAR2(5)";
   }
   attribute Contract Text {
      fetch = "contract";
      label = "Site";
      maxlength = 5;
      format = uppercase;
      implementationtype = "VARCHAR2(5)";
   }
   attribute PartNo Text {
      fetch = "part_no";
      label = "Part No";
      maxlength = 25;
      format = uppercase;
      implementationtype = "VARCHAR2(25)";
   }
   attribute ConfigurationId Text {
      fetch = "configuration_id";
      label = "Configuration Id";
      maxlength = 50;
      implementationtype = "VARCHAR2(50)";
   }
   attribute LotBatchNo Text {
      fetch = "lot_batch_no";
      label = "Lot/Batch No";
      maxlength = 20;
      lovcolumn = [true];
      implementationtype = "VARCHAR2(20)";
   }
   attribute SerialNo Text {
      fetch = "serial_no";
      label = "Serial No";
      maxlength = 50;
      lovcolumn = [true];
      implementationtype = "VARCHAR2(50)";
   }
   attribute EngChgLevel Text {
      fetch = "eng_chg_level";
      label = "Revision No";
      maxlength = 6;
      lovcolumn = [true];
      implementationtype = "VARCHAR2(6)";
   }
   attribute WaivDevRejNo Text {
      fetch = "waiv_dev_rej_no";
      label = "W/D/R No";
      maxlength = 15;
      lovcolumn = [true];
      implementationtype = "VARCHAR2(15)";
   }
   attribute HandlingUnitId Number {
      fetch = "handling_unit_id";
      label = "Handling Unit ID";
      lovcolumn = [true];
      implementationtype = "NUMBER";
   }
   attribute HandlingUnitTypeId Text {
      fetch = "Handling_Unit_API.Get_Handling_Unit_Type_Id(handling_unit_id)";
      label = "Handling Unit Type ID";
   }
   attribute ExpirationDate Date {
      fetch = "expiration_date";
      label = "Expiration Date";
      lovcolumn = [true];
      implementationtype = "DATE";
   }
   attribute ExpirationDateDb Date {
      fetch = "expiration_date_db";
      label = "Expiration Date Db";
      lovcolumn = [true];
      implementationtype = "DATE";
   }
   attribute DeliveringWarehouseId Text {
      fetch = "delivering_warehouse_id";
      label = "Delivering Warehouse ID";
   }
   attribute ReceivingWarehouseId Text {
      fetch = "receiving_warehouse_id";
      label = "Receiving Warehouse ID";
   }
   attribute ActivitySeq Number {
      fetch = "activity_seq";
      label = "Activity Sequence";
   }
   attribute PartOwnership Enumeration(PartOwnership) {
      fetch = "part_ownership_db";
      label = "Ownership";
   }
   attribute OwningCustomerNo Text {
      fetch = "owning_customer_no";
   }
   attribute OwningVendorNo Text {
      fetch = "owning_vendor_no";
   }
   attribute Owner Text {
      fetch = "DECODE(owning_customer_no, '*', owning_vendor_no, owning_customer_no)";
      label = "Owner";
      format = uppercase;
   }
   attribute OwnerName Text {
      fetch = "Inventory_Part_In_Transit_API.Get_Owner_Name(delivering_contract, contract, part_no,configuration_id,lot_batch_no,serial_no,eng_chg_level,waiv_dev_rej_no,handling_unit_id,expiration_date_db,delivering_warehouse_id,receiving_warehouse_id,activity_seq,part_ownership_db,owning_customer_no,owning_vendor_no,deliv_no,shipment_id,shipment_line_no)";
      label = "Owner Name";
      maxlength = 100;
   }
   attribute DelivNo Number {
      fetch = "deliv_no";
   }
   attribute ShipmentId Number {
      fetch = "shipment_id";
   }
   attribute ShipmentLineNo Number {
      fetch = "shipment_line_no";
   }
   attribute Quantity Number {
      fetch = "quantity";
      label = "Quantity";
      lovcolumn = [true];
      implementationtype = "NUMBER";
   }
   attribute CatchQuantity Number {
      fetch = "catch_quantity";
      label = "Catch Quantity";
      implementationtype = "NUMBER";
   }
   attribute TypeDescription Text {
      fetch = "Handling_Unit_Type_API.Get_Description(Handling_Unit_API.Get_Handling_Unit_Type_Id(HANDLING_UNIT_ID))";
      label = "Handling Unit Type Description";
      maxlength = 2000;
   }
   attribute TopParentHandlingUnitID Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Handl_Unit_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Handling Unit ID";
      maxlength = 2000;
   }
   attribute TopParentHandlingUnitTypeID Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Hu_Type_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Handling Unit Type ID";
      maxlength = 2000;
   }
   attribute TopParentHandlingUnitTypeDesc Text {
      fetch = "Handling_Unit_Type_API.Get_Description(Handling_Unit_API.Get_Top_Parent_Hu_Type_Id(HANDLING_UNIT_ID))";
      label = "Top Parent Handling Unit Type Desc";
      maxlength = 2000;
   }
   attribute TopParentSSCC Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Sscc(HANDLING_UNIT_ID)";
      label = "Top Parent SSCC";
      maxlength = 2000;
   }
   attribute TopParentAltHandlingUnitLabelID Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Alt_Hu_Label_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Alt Handling Unit Label ID";
      maxlength = 2000;
   }

   attribute CatchUoM Text {
      fetch = "Inventory_Part_API.Get_Enabled_Catch_Unit_Meas(CONTRACT,PART_NO)";
      label = "Catch UoM";
      maxlength = 100;
      // searchable = false;
   }
   attribute UoM Text {
      fetch = "Inventory_Part_API.Get_Unit_Meas(CONTRACT, PART_NO)";
   }
   @DynamicComponentDependency PROJ
   attribute ProjectId Text {
      fetch = "project_id";
      maxlength = 10;
   }
   @DynamicComponentDependency PROJ
   attribute ProgramId Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Program_Id(ACTIVITY_SEQ))";
      maxlength = 10;
   }
   @DynamicComponentDependency PROJ
   attribute ProgramDescription Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Program_Description(ACTIVITY_SEQ))";
      maxlength = 2000;
   }
   @DynamicComponentDependency PROJ
   attribute ProjectName Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Project_Name(ACTIVITY_SEQ))";
      maxlength = 2000;
   }
   @DynamicComponentDependency PROJ
   attribute SubProjectId Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Sub_Project_Id(ACTIVITY_SEQ))";
      maxlength = 10;
   }
   @DynamicComponentDependency PROJ
   attribute SubProjectDescription Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Sub_Project_Description(ACTIVITY_SEQ))";
      maxlength = 2000;
   }
   @DynamicComponentDependency PROJ
   attribute ActivityNo Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Activity_No(ACTIVITY_SEQ))";
      maxlength = 10;
   }
   @DynamicComponentDependency PROJ
   attribute ActivityDescription Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Description(ACTIVITY_SEQ))";
      maxlength = 200;
   }
   @DynamicComponentDependency PROJ
   reference ProjectIdRef(ProjectId) to Project(ProjectId);
   @DynamicComponentDependency PROJ
   reference ProgramIdRef(ProgramId) to ProjectProgramGlobal(ProgramId);
   @DynamicComponentDependency PROJ
   reference SubProjectIdRef(ProjectId, SubProjectId) to SubProject(ProjectId, SubProjectId);
   @DynamicComponentDependency PROJ
   reference ActivityNoRef(ActivitySeq, ActivityNo) to Activity(ActivitySeq, ActivityNo);
   reference InventoryPartRef(Contract, PartNo) to InventoryPart(Contract, PartNo);

   reference HandlingUnitRef(HandlingUnitId) to HandlingUnit(HandlingUnitId);
   reference ContractRef(Contract) to SiteUiv(Contract) {
      label = "Site";
   }
   reference UoMRef(UoM) to IsoUnit(UnitCode) {
      label = "UoM";
   }
   reference ConfigurationIdRef(Contract, PartNo, ConfigurationId) to InventoryPartConfig(Contract, PartNo, ConfigurationId) {
      label = "Configuration ID";
   }
   reference HandlingUnitIdRef(HandlingUnitId) to HandlingUnit(HandlingUnitId) {
      label = "Handling Unit ID";
   }
   reference HandlingUnitTypeIdRef(HandlingUnitTypeId) to HandlingUnitType(HandlingUnitTypeId) {
      label = "Handling Unit Type ID";
   }
   reference TopParentHandlingUnitTypeIdRef(TopParentHandlingUnitTypeID) to HandlingUnitType(HandlingUnitTypeId) {
      label = "Top Parent Handling Unit Type ID";
   }

}


