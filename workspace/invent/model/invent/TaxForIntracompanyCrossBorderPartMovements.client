-----------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------
-- 2021-07-07  MaEelk  SC21R2-1884, Created.
-----------------------------------------------------------------------------

client TaxForIntracompanyCrossBorderPartMovements;
component INVENT;
layer Core;
projection TaxForIntracompanyCrossBorderPartMovementsHandling;
description "This is used to define Sender, Receiver Tax Codes use for Intracompany Cross-border Part Movements";

--------------------------------- FRAGMENTS ---------------------------------
include fragment TaxCodeRestrictedSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry TaxForIntracompanyCrossBorderPartMovementsNavEntry parent InventNavigator.WarehouseManagementIntraCompanyTaxReporting at index 100 {
      label = "Tax Information for Intracompany Cross-border Part Movements";
      page Form home CrossBorderPartMove;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using CrossBorderPartMoveSet {
   label = "Tax Information for Intracompany Cross-border Part Movements";
   selector CrossBorderPartMoveSelector;
   group SenderReceiverCountryGroup {
      showlabel = false;
   }
   arrange {
      list PartMoveSenderTaxList(CrossBorderPartSendTaxArray);
      list PartMoveReceiverTaxList(CrossBorderPartReceTaxArray);
   }
}


--------------------------------- COMMANDS ----------------------------------


--------------------------------- SELECTORS ---------------------------------
@Override
selector CrossBorderPartMoveSelector for CrossBorderPartMove {
   label = "${SenderCountry} - ${ReceiverCountry} - ${PartNo}";
   static SenderCountry;
   static ReceiverCountry;
   static PartNo;

}

---------------------------------- GROUPS -----------------------------------
group SenderReceiverCountryGroup for CrossBorderPartMove {
   label = "";
   field SenderCountry;
   field ReceiverCountry;
   lov PartCatalogRef with PartCatalogSelector {
      freeinput = true;
      label = "Part No";

   }
}

----------------------------------- LISTS -----------------------------------
list PartMoveSenderTaxList for CrossBorderPartSendTax {
   label = "Sender Country Tax Codes";
   crudactions {
      duplicate {
         enabled = [false];
      }
   }

   lov TaxCodeRef with ReferenceTaxCodeRestrictedSelector using GetValidTaxCodes(Company) {
      label = "Tax Code";
      description = TaxCodeRef.Description;
      validate command {
         execute {
            call GetValidFrom(Company, TaxCode) into ValidFrom;
         }
      }
   }
   field ValidFrom;
}

list PartMoveReceiverTaxList for CrossBorderPartReceTax {
   label = "Receiver Country Tax Codes";
   crudactions {
      duplicate {
         enabled = [false];
      }
   }

   lov TaxCodeRef with ReferenceTaxCodeRestrictedSelector using GetValidTaxCodes(Company) {
      label = "Tax Code";
      description = TaxCodeRef.Description;
      validate command {
         execute {
            call GetValidFrom(Company, TaxCode) into ValidFrom;
         }
      }
   }
   field ValidFrom;
}

---------------------------------- DIALOGS ----------------------------------


-------------------------------- SINGLETONS ---------------------------------


---------------------------------- CHARTS -----------------------------------


--------------------------------- CALENDERS ---------------------------------


---------------------------------- SHEETS -----------------------------------


----------------------------- STATE INDICATORS ------------------------------


----------------------------------- TREES -----------------------------------


---------------------------------- PLUGINS ----------------------------------


------------------------------- IMAGE VIEWERS -------------------------------
