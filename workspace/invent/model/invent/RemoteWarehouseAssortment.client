----------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------------
-- 2019-05-29  fandse  SCUXXW4-21453, Should not be any edit possibility on SitesList and RemoteWarehouseAssortConnectionsList
-- 2019-05-03  ChFolk  SCUXXW4-13755, Added AssortmentId and Description separately.
-- 2018-11-22  ChFolk  SCUXXW4-7232, Moved RemoteWarehouseAssortConnectionsList and OptimizeStorageCommand into the fragment RemoteWarehouseAssortmentList and it is included here.
-- 2018-10-19  ChFolk  SCUXXW4-6447, added enabled conditions for crud actions and OptimizeAllWarehousesCommand and concatenate descriptions.
-- 2018-08-24  ChFolk  SCUXXW4-6447, Added Command actions.
-- 2018-08-23  SuDelk  SCUXXW4-6447, Started to convert FrmRemoteWarehouseAssortment using MTG Version: 1.25
----------------------------------------------------------------------------------------------------------
client RemoteWarehouseAssortment;
component INVENT;
layer Core;
projection RemoteWarehouseAssortmentHandling;
include fragment UserAllowedSiteLovSelector;
include fragment RemoteWhseSiteWhseLovSelector;
include fragment RemoteWhseAssortmentLovSelector;
include fragment WarehouseLov5Selector;
include fragment RemoteWarehouseAssortmentList;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry RemoteWarehouseAssortmentNavEntry parent InventNavigator.LocationRemoteWarehouse at index 100 {
      label = "Remote Warehouse Assortment";
      page Form home RemoteWhseAssortment;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using RemoteWhseAssortmentSet {
   label = "Remote Warehouse Assortment";
   selector RemoteWhseAssortmentSelector;
   group RemoteWarehouseAssortmentGroup;

   tabs {
      tab {
         label = "Parts";
         list PartsList(PartsArray);
      }
      tab {
         label = "Sites";
         list SitesList(SitesArray);
      }
      tab {
         label = "Remote Warehouse";
         list RemoteWarehouseAssortConnectionsList(RemoteWarehouseArray);
      }
   }

   commandgroup CommandGroupCmdGroup {

      command ConnectAllRemoteWarehouseCommand;
      command OptimizeAllWarehousesCommand;
   }
}

--------------------------------- COMMANDS ----------------------------------
command ConnectAllRemoteWarehouseCommand for RemoteWhseAssortment {
   label = "Connect to all Remote Warehouses";
   enabled = [ContractExists = "TRUE"];
   execute {
      call ConnectToAllWarehouses(AssortmentId);
   }
}
command OptimizeAllWarehousesCommand for RemoteWhseAssortment {
   label = "Optimize Storage on Connected Warehouses";
   enabled = [RemoteWarehouseExist];
   execute {
      call OptimizeUsingPutawayForAllWarehouses(AssortmentId);
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector RemoteWhseAssortmentSelector for RemoteWhseAssortment {
   label = "${AssortmentId}";
   static AssortmentId;
}

---------------------------------- GROUPS -----------------------------------
group RemoteWarehouseAssortmentGroup for RemoteWhseAssortment {
   label = "";
   field AssortmentId;
   field Description;
   field Priority;
   @DynamicComponentDependency PURCH
   lov OrderProcTypeRef with ReferenceOrderProcTypeSelector {
      label = "Order Processing Type";
      description = OrderProcTypeRef.Description;
      validate command {
         execute {
            call GetOpTypeDescription(AssortmentId) into OrderProcTypeDesc;
         }
      }
   }

   field ValidForAllSitesDb {
      editable = [true];
      required = [true];
      validate command {
         variable ConnectedWarehouseExistVar {
            type = Text;
         }
         execute {
            if [not ValidForAllSitesDb] {
               call CheckConnectedWarehouseExist(AssortmentId) into ConnectedWarehouseExistVar;
               if [ConnectedWarehouseExistVar = "TRUE"] {
                  confirm("This operation will remove all assortment connected remote warehouses") {
                     when CANCEL {
                        set ValidForAllSitesDb = true;
                        exit;
                     }
                  }
               }
            }
         }
      }

   }
   field ConnectToSite {
      visible = [false];
   }
}
----------------------------------- LISTS -----------------------------------
list PartsList for RemoteWhseAssortPart {
   lov PartNoRef with ReferencePartCatalogSelector {
      label = "Part";
      description = PartNoRef.LanguageDescription;
   }
   field RefillPointQty;
   field RefillToQty;
   field PartNoRef.UnitCode {
      size = Small;
      label = "UoM";
   }
   field RefillSource;
   field RemoveExcessInventoryDb;
   fieldranking PartNoRef, Description, RefillPointQty, RefillToQty, PartNoRef.UnitCode, RefillSource, RemoveExcessInventoryDb;
}

list SitesList for RemoteWhseAssortSite {
   crudactions {
      new {
         enabled = [not parent.ValidForAllSitesDb];
      }
      edit {
         enabled = [false];
      }
   }

   lov ContractRef with ReferenceUserAllowedSiteLovSelector {
      label = "Site";
      description = ContractRef.ContractDesc;
   }
}


