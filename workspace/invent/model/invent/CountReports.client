-----------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------
-- 2022-01-12  JaThlk  SC21R2-2942, Renamed the label of PrintAggregatedCommand.
-- 2019-03-16  ChFolk  SCUXXW4-16871, Added dependency annotation where necessary.
-- 2018-05-31  DaZase  SCUXXW4-7060, Converted from tbwOverviewCountReports using MTG Version: 1.20
-----------------------------------------------------------------------------
client CountReports;
component INVENT;
layer Core;
projection CountReportsAnalysis;
include fragment UserAllowedSiteLovSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry OverviewCountReportsNavEntry parent InventNavigator.WarehouseManagementCounting at index 300 {
      label = "Count Reports";
      page List;
   }
}
-------------------------------- MAIN PAGES ---------------------------------
page List using CountingReports {
   label = "Count Reports";
   startupmode = search;
   list CountReportsList;
}

----------------------------------- LISTS -----------------------------------
list CountReportsList for CountingReport {
   field InvListNo {
      size = Small;
   }
   lov ContractRef with ReferenceUserAllowedSiteLovSelector {
      size = Small;
   }
   field WarehouseId;
   field BayId {
      size = Small;
   }
   field RowId {
      size = Small;
   }
   field TierId {
      size = Small;
   }
   field BinId {
      size = Small;
   }
   field StorageZoneId {
      label = "Storage Zone";
      size = Small;
   }
   field CycleCode {
      label = "Part Selection";
      size = Large;
   }
   field IncludeAllQty {
      enumerationtrue = "Yes";
      enumerationfalse = "No";
      size = Small;
   }
   field FreezeCode {
      label = "Freeze Part";
      enumerationtrue = "FrozenForCounting";
      enumerationfalse = "NotFrozen";
      size = Small;
   }
   field ProcessCount {
      label = "Max Lines in Report";
   }
   field MaxQtyOnhand {
      label = "Max On Hand Qty";
   }
   field SecondCommodity {
      size = Small;
   }
   field PartNo;
   field LocationGroup {
      size = Small;
   }
   field AbcClass {
      label = "ABC Class";
      size = Small;
   }
   field FrequencyClass {
      size = Small;
   }
   field LifecycleStage {
      size = Small;
   }
   field ExcludeCompanyOwned {
      size = Small;
      enumerationtrue = "ExcludeOwnership";
      enumerationfalse = "IncludeOwnership";
   }
   field ExcludeConsignment {
      size = Small;
      enumerationtrue = "ExcludeOwnership";
      enumerationfalse = "IncludeOwnership";
   }
   field ExcludeCustomerOwned {
      size = Small;
      enumerationtrue = "ExcludeOwnership";
      enumerationfalse = "IncludeOwnership";
   }
   field ExcludeSupplierLoaned {
      size = Small;
      enumerationtrue = "ExcludeOwnership";
      enumerationfalse = "IncludeOwnership";
   }
   field ExcludeRotablePool {
      size = Small;
      enumerationtrue = "Exclude";
      enumerationfalse = "Include";
   }
   field ExcludeFaRotablePool {
      label = "Exclude FA Rotable Pool";
      size = Small;
      enumerationtrue = "Exclude";
      enumerationfalse = "Include";
   }
   field ExcludeStandardInventory {
      size = Small;
      enumerationtrue = "Yes";
      enumerationfalse = "No";
   }
   field ExcludeProjectInventory {
      size = Small;
      enumerationtrue = "Yes";
      enumerationfalse = "No";
   }
   field ExcludeAttachedToHu {
      size = Small;
      enumerationtrue = "Yes";
      enumerationfalse = "No";
   }
   field ExcludeNotAttachedToHu {
      size = Small;
      enumerationtrue = "Yes";
      enumerationfalse = "No";
   }
   field ExcludeSupplierRented {
      size = Small;
      enumerationtrue = "ExcludeOwnership";
      enumerationfalse = "IncludeOwnership";
   }
   field ExcludeCompRentalAsset {
      size = Small;
   }
   @DynamicComponentDependency PROJ
   field ProjectIdRef {
      size = Small;
   }
   field UnconfirmedLinesExist {
      size = Small;
   }
   field RejectedLinesExist {
      size = Small;
   }
   field DetailReportPrinted {
      size = Small;
      enumerationtrue = "Yes";
      enumerationfalse = "No";
   }
   field AggregatedReportPrintedDb {
      size = Small;
   }
   field CreateDate;
   field UseridRef {
      contactwidget {
         enabled = [true];
         source = Person;
      }
      size = Small;
   }

   commandgroup NavigateCommandsCmdGroup {

      command CountPerCountReportCommand;
      command CountResultPerCountReportCommand;
      command CountResultsCommand;
   }

   commandgroup PrintCommandsCmdGroup {
      label = "Print Commands";
      command PrintDetailedCommand;
      command PrintAggregatedCommand;
   }
}
--------------------------------- COMMANDS ----------------------------------
command CountPerCountReportCommand for CountingReport {
   label = "Count Per Count Report";
   enabled = [UnconfirmedLinesExist = true];
   mode = SelectedRecords;
   bulkexecute {
      bulknavigate "page/CountPerCountReport/Form?$filter=InvListNo eq $[InvListNo]";
   }
}

command CountResultPerCountReportCommand for CountingReport {
   label = "Count Result Per Count Report";
   enabled = [RejectedLinesExist = true];
   mode = SelectedRecords;
   bulkexecute {
      bulknavigate "page/CountResultsPerCountReport/Form?$filter=InvListNo eq $[InvListNo]";
   }
}

command CountResultsCommand for CountingReport {
   label = "Count Results";
   enabled = [CountResultLinesExist = true];
   mode = SelectedRecords;
   bulkexecute {
      bulknavigate "page/CountResults/List?$filter=InvListNo eq $[InvListNo]";
   }
}

command PrintDetailedCommand for CountingReport {
   label = "Print Detailed Report";
   enabled = [true];
   mode = SelectedRecords;
   variable ResultKeyListStr {
      type = Text;
   }
   bulkexecute {
      call GetResultKeyList(Selection, "COUNTING_REPORT_PRINT_REP") into ResultKeyListStr;
      if [ResultKeyListStr != null] {
         printdialog ResultKeyListStr;
      }
   }
}

command PrintAggregatedCommand for CountingReport {
   label = "Print Aggregated on Handling Unit / Location Report";
   enabled = [true];
   mode = SelectedRecords;
   variable ResultKeyListStr {
      type = Text;

   }
   bulkexecute {
      call GetResultKeyList(Selection, "COUNTING_REPORT_HU_REP") into ResultKeyListStr;
      if [ResultKeyListStr != null] {
         printdialog ResultKeyListStr;
      }
   }
}
