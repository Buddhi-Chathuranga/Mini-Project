-------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-09-11  SaGeLK  SCUXXW4-6014, Converted from frmCapacityRequirementGroups using MTG Version: 1.28
--------------------------------------------------------------------------------------
client StorageCapacityRequirementGroup;
component INVENT;
layer Core;
projection StorageCapacityRequirementGroupHandling;
include fragment UserAllowedSiteLovSelector;
include fragment WhStorageVolumeLovSelector;
include fragment DefineStorageVolumeRequirement;

----------------------------- VISUAL COMPONENTS -----------------------------

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry CapacityRequirementGroupsNavEntry parent PartcaNavigator.StorageRequirementGroups at index 1 {
      label = "Storage Capacity Requirement Group";
      page Form home StorageCapacityReqGroup;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using StorageCapacityReqGroupSet {
   label = "Storage Capacity Requirement Group";
   selector CapacityRequirementGroupSelector;
   group CapacityRequirementGroup;
   list CapacityReqGrpHandlingUnitList(StorageCapacityReqGroupArray);

   commandgroup CapacityRequirementCommandGroup {

      command TranslationCommand;
      command DefineStorageVolumeRequiremeCommand;
   }
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command TranslationCommand for StorageCapacityReqGroup {
   label = "Translation";
   mode = Global;
   enabled = [true];
   execute {
      navigate "page/BasicDataTranslation/Form?$filter=Module eq 'INVENT' and Lu eq 'StorageCapacityReqGroup' ";
   }
}
command DefineStorageVolumeRequiremeCommand for StorageCapacityReqGroup {
   label = "Define Storage Volume Requirement";
   enabled = [true];
   execute {
      dialog DefineStorageVolumeReqDialog(null, null) into(VolumeVar, VolumeUom) {
         when OK {
            call SaveVolume(VolumeVar, VolumeUom);
         }
      }
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector CapacityRequirementGroupSelector for StorageCapacityReqGroup {
   orderby = CapacityReqGroupId;
   label = "${CapacityReqGroupId} - ${Description}";
   static CapacityReqGroupId;
   static Description;
}

---------------------------------- GROUPS -----------------------------------
group CapacityRequirementGroup for StorageCapacityReqGroup {
   label = "";
   field CapacityReqGroupId;
   field Description;
   field Width {
      size = Small;
      validate command {
         execute {
            if [Width != null and UomForLength = null] {
               call GetDefaultLengthUom() into UomForLength;
            }
            if [Height = null and Depth = null and Width = null] {
               set UomForLength = null;
            }
         }
      }
   }
   field Height {
      size = Small;
      validate command {
         execute {
            if [Height != null] {
               call GetDefaultLengthUom() into UomForLength;
            }
            if [Height = null and Depth = null and Width = null] {
               set UomForLength = null;
            }
         }
      }
   }
   field Depth {
      size = Small;
      validate command {
         execute {
            if [Depth != null] {
               call GetDefaultLengthUom() into UomForLength;
            }
            if [Height = null and Depth = null and Width = null] {
               set UomForLength = null;
            }
         }
      }
   }
   lov UomForLengthRef with ReferenceIsoUnitSelector using GetLengthUomList {
      size = Small;
   }
   field Volume {
      size = Small;
      validate command {
         execute {
            if [Volume = null] {
               set UomForVolume = null;
            }
         }
      }
   }
   lov UomForVolumeRef with ReferenceIsoUnitSelector using GetVolumeUomList {
      size = Small;
   }
   field Weight {
      size = Small;
      validate command {
         execute {
            if [Weight != null and UomForWeight = null] {
               call GetDefaultWeightUom() into UomForWeight;
            }
            if [Weight = null] {
               set UomForWeight = null;
            }
         }
      }
   }
   lov UomForWeightRef with ReferenceIsoUnitSelector using GetWeightUomList {
      size = Small;
   }
}

----------------------------------- LISTS -----------------------------------
list CapacityReqGrpHandlingUnitList for CapacityGrpHandlingUnit {
   label = "";

   lov HandlingUnitTypeRef with ReferenceHandlingUnitTypeSelector {
      label = "Handling Unit Type";
      description = HandlingUnitTypeRef.Description;
      validate command {
         execute {
            set HandlingUnitCategoryId = HandlingUnitTypeRef.HandlingUnitCategoryId;
         }
      }
   }
   lov HandlingUnitCategoryRef with ReferenceHandlingUnitCategorySelector {
      label = "Handling Unit Category";
      description = HandlingUnitCategoryRef.Description;
      editable = [false];
   }
   field MaxQuantityCapacity;
   field UnitCodeRef;
   // fieldranking HandlingUnitTypeIdRef, HandlingUnitTypeDescription, HandlingUnitTypeRef.HandlingUnitCategoryId, HandlingUnitCategoryDescription, MaxQuantityCapacity, UnitCodeRef;
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

--------------------------------- CHECKLIST ---------------------------------