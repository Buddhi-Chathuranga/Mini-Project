-------------------------------------------------------------------------------------------------------
--  Date        Sign    History
--  ----------  ------  --------------------------------------------------------------------------------
--  2020-06-02  LaDeLK  PR2020R1-155, Changed labels.
--  2020-05-18  LaDeLK  PR2020R1-12, Created.
--  ----------  ------  --------------------------------------------------------------------------------

fragment PartAssortmentList;
component INVENT;
layer Core;
description "Tab in master part used to connect and show assortments";

--------------------------------- FRAGMENTS ---------------------------------


----------------------------- CLIENT FRAGMENTS ------------------------------

----------------------------------- LISTS -----------------------------------
list AssortmentConnectionsList for AssortmentNode {
   label = "Connected Assortments";
   lov AssortmentNodeStructureRef with ReferenceAssortmentStructureSelector {
      description = AssortmentNodeStructureRef.Description;
   }
   lov AssortmentNodeRef with ReferenceAssortmentNodeSelector using GetAssortmentNodes(AssortmentId) {
      description = AssortmentNodeRef.Description;
   }
   field ClassificationPartNo;
   lov UnitCodeRef with IsoUnitSelector;
   field AssortmentNodeStructureRef.ProcCategoryAssortment;
   badge AssortmentNodeStructureRef.Objstate {
      label = "Assortment Status";
      style = TextOnly;
      emphasis Complementary7 = [AssortmentNodeStructureRef.Objstate = "Active"];
      emphasis Complementary2 = [AssortmentNodeStructureRef.Objstate = "Planned"];
   }

}

--------------------------- PROJECTION FRAGMENTS ----------------------------

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity AssortmentNode {
   attribute AssortmentNodeId Text {
      required = [false];
   }
   attribute ParentNode Text;
   attribute Description Text {
      required = [false];
   }
   attribute ClassificationPartNo Text {
      maxlength = 25;
   }
   attribute UnitCode Text {
      maxlength = 10;
   }
   reference UnitCodeRef(UnitCode) to IsoUnit(UnitCode) {
      label = "Classification UoM";
   }
   reference AssortmentNodeStructureRef(AssortmentId) to AssortmentStructure(AssortmentId) {
      label = "Assortment";
   }
   reference AssortmentNodeRef(AssortmentId, ParentNode) to AssortmentNode(AssortmentId, AssortmentNodeId) {
      label = "Assortment Node";
   }
}

--------------------------------- FUNCTIONS ---------------------------------
function GetAssortmentNodes List < Entity(AssortmentNode) > {
   parameter AssortmentId Text;
   where = "Assortment_Id = :AssortmentId and part_no IS null";
}