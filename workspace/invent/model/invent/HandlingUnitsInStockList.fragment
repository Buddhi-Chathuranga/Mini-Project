----------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------------
-- 2022-02-02  BwItLk  SC21R2-7297, Modified GetHandlingUnitInStockDetails by adding BayId, RowId, TierId, BinId to filter out data in Warehouse Navigator in each level.
-- 2019-05-06  DaZase  SCUXXW4-19634, Added initialcheck to all unbounded actions.
-- 2019-04-10  Chfolk  SCUXXW4-18421, Modified GetHandlingUnitInStockDetails by adding where clause to avoid method in plsvc.
-- 2018-03-31  ChFolk  SCUXXW4-6121, Revert changes in GetHandlingUnitInStockDetails and it was moved to HandlingUnitInStockHandling.
-- 2018-03-19  ChFolk  SCUXXW4-6121, Added contract_list and handling_unit_id_list parameters to GetHandlingUnitInStockDetails to support navigation from external sources.
-- 2018-12-24  KoDelk  SCUXXW4-14359, Included HandlingUnitsSearchContext fragmnets
-- 2018-12-06  ChFolk  SCUXXW4-6121, Move the content to HandlingUnitsInStockBaseList which will be a base.
-- 2018-12-06          HandlingUnitsInStockList and InventoryPartInStockForHuList are derrived from HandlingUnitsInStockBaseList and InventoryPartInStockForHuBaseList.
-- 2018-12-01  ChFolk  SCUXXW4-6121 Created.
----------------------------------------------------------------------------------------------------------
fragment HandlingUnitsInStockList;
component INVENT;
layer Core;
description "This fragment contains the derived list from HandlingUnitsInStockBaseList";

include fragment HandlingUnitsInStockBaseList;
include fragment HandlingUnitsSearchContext;
include fragment PrePostingWithoutSourceAssistant;

----------------------------- CLIENT FRAGMENTS ------------------------------
----------------------------------- LISTS -----------------------------------
list HandlingUnitsInStockList clone HandlingUnitsInStockBaseList {
}

list InventoryPartInStockForHuList clone InventoryPartInStockForHuBaseList {
}

--------------------------------- COMMANDS ----------------------------------
command IssueCommand {
   label = "Issue";
   mode = SelectedRecords;
   enabled = [IsInStock and(LocationTypeDb != "SHIPMENT" and LocationTypeDb != "QA" and LocationTypeDb != "ARRIVAL")];
   variable ContractsVar {
      type = Text;
   }
   variable ContractVar {
      type = Text;
   }
   variable CodepartsSettingsVar {
      type = Structure(CodepartsSettingsStructure);
   }
   variable CodeAVar {
      type = Text;
   }
   variable CodeBVar {
      type = Text;
   }
   variable CodeCVar {
      type = Text;
   }
   variable CodeDVar {
      type = Text;
   }
   variable CodeEVar {
      type = Text;
   }
   variable CodeFVar {
      type = Text;
   }
   variable CodeGVar {
      type = Text;
   }
   variable CodeHVar {
      type = Text;
   }
   variable CodeIVar {
      type = Text;
   }
   variable CodeJVar {
      type = Text;
   }
   bulkexecute {
      stringify(records, "${Contract}") into ContractsVar;
      call ValidateSelectedContact(ContractsVar) into ContractVar;
      if [ContractVar = null] {
         error("It is not allowed to issue Handling Units from different sites.");
      }
      else {
         confirm("The selected Handling Unit ID(s) will be issued. Do you want to continue?") {
            when OK {
               call GetCodepartsSettings("M110", ContractVar) into CodepartsSettingsVar;
               if [CodepartsSettingsVar.AllCodepartsCompiled != "DISABLED"] {
                  assistant PrePostingWithoutSourceAssistant(ContractVar, CodepartsSettingsVar.AccountNo, CodepartsSettingsVar.CodenoB, CodepartsSettingsVar.CodenoC,
                  CodepartsSettingsVar.CodenoD, CodepartsSettingsVar.CodenoE, CodepartsSettingsVar.CodenoF, CodepartsSettingsVar.CodenoG,
                  CodepartsSettingsVar.CodenoH, CodepartsSettingsVar.CodenoI, CodepartsSettingsVar.CodenoJ)
                  into(CodeAVar, CodeBVar, CodeCVar, CodeDVar, CodeEVar, CodeFVar, CodeGVar, CodeHVar, CodeIVar, CodeJVar) {
                     when CANCEL {
                        exit;
                     }
                  }
               }
               call IssueWithPosting(Selection, CodeAVar, CodeBVar, CodeCVar, CodeDVar, CodeEVar, CodeFVar, CodeGVar, CodeHVar, CodeIVar, CodeJVar);
            }
         }
      }
   }
}
--------------------------- PROJECTION FRAGMENTS ----------------------------

---------------------------------- ACTIONS ----------------------------------
action ValidateSelectedContact Text {
   initialcheck implementation;
   parameter ContractList Text;
}

--------------------------------- FUNCTIONS ---------------------------------
function GetHandlingUnitInStockDetails List < Entity(HandlingUnitInStock) > {
   parameter ShowHuLevel Enumeration(ShowHuLevels);
   parameter Contract    Text;
   parameter WarehouseId Text;
   parameter BayId Text;
   parameter RowId Text;
   parameter TierId Text;
   parameter BinId Text;
   basedon HandlingUnitInStockSet;
   from = "HANDLING_UNIT_EXTENDED";
   where = "IS_IN_STOCK = 'TRUE'
      AND (:Contract IS NULL OR :Contract = CONTRACT)
      AND (:WarehouseId IS NULL OR :WarehouseId = WAREHOUSE_ID)
      AND (:BayId IS NULL OR :BayId = BAY_ID)
      AND (:RowId IS NULL OR :RowId = ROW_ID)
      AND (:TierId IS NULL OR :TierId = TIER_ID)
      AND (:BinId IS NULL OR :BinId = BIN_ID)
      AND (CASE
          WHEN :ShowHuLevel = 'ShowOnlyTopLevel' AND PARENT_HANDLING_UNIT_ID IS NULL THEN 1
          WHEN :ShowHuLevel = 'ShowAll' THEN 1
          ELSE 0 END) = 1";

}
