---------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ----------------------------------------------------------
-- 2018-03-19  Mwerse  SCUXXW4-6106, Converted from frmHandlingUnitParts using MTG Version: 1.15
---------------------------------------------------------------------------------

projection PartsPerHandlingUnitHandling;
component INVENT;
layer Core;
description "Use this API to enter parts that can be stored in a specific handling unit type. For parts entered, it is possible to enter the maximum quantity per unit of measure when stored in the specific handling unit type. ";
category Users;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset HandlingUnitTypes for HandlingUnitType;
entityset IsoUnits for IsoUnit;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity HandlingUnitType {
   crud = Read;
   attribute HandlingUnitTypeId Text {
      fetch = "HANDLING_UNIT_TYPE_ID";
      label = "Handling Unit Type ID";
      maxlength = 25;
      required = [true];
      editable = [false];
   }
   attribute HandlingUnitCategoryId Text {
      fetch = "HANDLING_UNIT_CATEGORY_ID";
      label = "Handling Unit Category ID";
      maxlength = 25;
      required = [true];
      format = uppercase;
   }
   reference HandlingUnitTypeIdRef(HandlingUnitTypeId) to HandlingUnitType(HandlingUnitTypeId) {
      label = "Handling Unit Type ID";
   }
   reference HandlingUnitCategoryIdRef(HandlingUnitCategoryId) to HandlingUnitCategory(HandlingUnitCategoryId) {
      label = "Handling Unit Category ID";
   }
   array DetailHandlingUnitParts(HandlingUnitTypeId) to PartHandlingUnit(HandlingUnitTypeId);
}

@Override
entity PartHandlingUnit {
   crud = Create, Read, Update, Delete;
   from = "part_handling_unit";
   exec = "PART_HANDLING_UNIT_API";
   keys = HandlingUnitTypeId, PartNo, UnitCode {
      where = "HANDLING_UNIT_TYPE_ID = :HandlingUnitTypeId and PART_NO = :PartNo and UNIT_CODE = :UnitCode";
   }
   attribute HandlingUnitTypeId Text {
      fetch = "HANDLING_UNIT_TYPE_ID";
      label = "Handling Unit Type ID";
      maxlength = 25;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute PartNo Text {
      fetch = "PART_NO";
      label = "Part Catalog Part No";
      maxlength = 25;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute MaxQuantityCapacity Number {
      fetch = "MAX_QUANTITY_CAPACITY";
      label = "Max Quantity (Operative Value)";
      required = [true];
   }
   attribute UnitCode Text {
      fetch = "UNIT_CODE";
      label = "UoM";
      maxlength = 10;
      required = [true];
      editable = [ETag = null];
   }
   reference HandlingUnitTypeIdRef(HandlingUnitTypeId) to HandlingUnitType(HandlingUnitTypeId) {
      label = "Handling Unit Type ID";
   }
   reference PartNoRef(PartNo) to PartCatalog(PartNo) {
      label = "Part Catalog Part No";
   }
   reference UnitCodeRef(UnitCode) to IsoUnit(UnitCode) {
      label = "UoM";
   }
}
