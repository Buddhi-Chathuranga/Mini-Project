-------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  --------------------------------------------------------------------------------
-- 2021-11-12  DigPlk  SC21R2-5150, Replaced the functionality of IdentifySerialsInLocAssistant with IdentifySerialsInLocRepeatAssistant.
-- 2019-05-17  DaZase  SCUXXW4-19612, Added initialcheck to all unbounded actions.
-- 2019-03-12  JaThlk  SCUXXW4-17128, Added SessionId as an in parameter in IdentifySerialsInLocationAssistant.
-- 2018-12-24  ChFolk  SCUXXW4-5341, Created the fragment for dlgConnectInvPartsToHandlingUnit using MTG Version: 1.34.
-------------------------------------------------------------------------------------------------------
fragment ConnectInvPartsToHandlingUnitAssistant;
component INVENT;
layer Core;
description "Assistant to attach inventory part in stock records to handling units.
Note that it is only part records that hasn't already been packed into handling units that are available.
The upper part of the dialog contains the inventory part in stock records to be attached to the handling unit.
Note that several stock records can be selected and attached to one handling unit at the same time.
The lower part of the dialog box contains the stock records previously attached to this handling unit.
Note that it is only possible to attach parts with quantity available.";

include fragment BayDropOffLocationSelector;
@DynamicComponentDependency MFGSTD
include fragment ControlPlanPartRevLovSelector;
@DynamicComponentDependency PROJ
include fragment ActivityCalculationBaseSelector;
include fragment IdentifySerialsInLocationAssistant;

----------------------------- CLIENT FRAGMENTS ------------------------------

----------------------------- NAVIGATOR ENTRIES -----------------------------

-------------------------------- MAIN PAGES ---------------------------------

-------------------------------- ASSISTANTS ---------------------------------
assistant ConnectInvPartsToHandlingUnitAssistant using ConnectInvPartsToHandlingUnitSet {
   label = "Attach Parts to Handling Unit";
   savemode = OnLostFocus;
   input(ConnectedSource, HandlingUnitId, HandlingUnitTypeId, ObjidListArr);
   steps {
      step {
         group ConnectInvPartsToHandlingUnitGroup;
         list PartInStocksToAttachToHandlingUnitList(AddPartsToHandlingUnitArray);
         list PreviouslyAttachedPartsInStockList(PartsInHandlingUnitArray);
      }
      final step {

      }
      cancelled step {

      }
   }
   finish command {
      execute {
         call ConnectToHandlingUnit(Objkey);
         exit OK;
      }
   }
   cancel command {
      execute {
         exit CANCEL;
      }
   }
   restart command {
      visible = [false];
   }
}

--------------------------------- COMMANDS ----------------------------------
command ConnectSerialsCommand for PartInStocksToAttachToHuVirtual {
   variable SessionSelection {
      type = Text;
   }
   variable ReceiptSerialTrackingDbStr {
      type = Text;
   }
   variable SerialNoStr {
      type = Text;
   }
   variable SourceRef1Str {
      type = Text;
   }
   variable HandlingUnitIdNum {
      type = Number;
   }
   execute {
      set ReceiptSerialTrackingDbStr = ReceiptIssueSerialTrackDb;
      set SerialNoStr = SerialNo;
      set SourceRef1Str = SourceRef1;
      set HandlingUnitIdNum = HandlingUnitId;

      if [ReceiptSerialTrackingDbStr = "TRUE" and SerialNoStr = "*" and SourceRef1Str = null] {
         if [not HandlingUnitIdNum] {
            set HandlingUnitIdNum = 0;
         }
         call GetRecordsWithSessionId("${Contract}", "${PartNo}", "${ConfigurationId}", "${LocationNo}", "${LotBatchNo}", "${EngChgLevel}", "${WaivDevRejNo}", ActivitySeq, HandlingUnitIdNum, QtyToAttach, CatchQtyToAttach, NULL, NULL, NULL) into IdentifySerialsRecStructure;
         assistant IdentifySerialsInLocRepeatAssistant(IdentifySerialsRecStructure.RemainingSelection, IdentifySerialsRecStructure.Total, null, null) into(SessionSelection) {
            when OK {
               set PartTrackingSessionId = IdentifySerialsRecStructure.SessionId;
               exit;
            }
         }

      }
   }
}
--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------
group ConnectInvPartsToHandlingUnitGroup for ConnectInvPartsToHandlingUnitVirtual {
   label = "";
   field HandlingUnitTypeId {
      size = Small;
   }
   field HandlingUnitId;
}

----------------------------------- LISTS -----------------------------------
list PartInStocksToAttachToHandlingUnitList for PartInStocksToAttachToHuVirtual {
   editmode = SingleRowEdit;
   label = "Attach Parts to Handling Unit";
   crudactions {
      before command ConnectSerialsCommand;
   }
   field Contract {
      size = Small;
   }
   lov InventoryPartRef with ReferenceInventoryPartSelector {
      label = "Part";
      description = InventoryPartRef.DescriptionInUse;
   }
   field QtyToAttach;
   field CatchQtyToAttach {
      editable = [CatchUom != null];
   }
   field ConfigurationIdRef {
      size = Small;
   }
   lov LocationNoRef with ReferenceBayDropOffLocationSelector {
      size = Small;
   }
   field LotBatchNo {
      size = Small;
   }
   field SerialNo {
      size = Small;
   }

   field EngChgLevel;

   field WaivDevRejNo {
      size = Small;
   }

   field ActivitySeq;
   field QtyOnhand;
   field QtyReserved;
   field AvailableQty;
   field CatchQtyOnhand;
   field CatchUom {
      size = Small;
   }
   field SourceRef1 {
      columnvisible = [parent.ConnectedSource = "RECEIPT"];
   }
   field SourceRef2 {
      columnvisible = [parent.ConnectedSource = "RECEIPT"];
   }
   field SourceRef3 {
      columnvisible = [parent.ConnectedSource = "RECEIPT"];
   }
   field ReceiptNo {
      columnvisible = [parent.ConnectedSource = "RECEIPT"];
   }
   field ReceiptNo {
      columnvisible = [parent.ConnectedSource = "RECEIPT"];
   }
   field SourceRefType {
      columnvisible = [parent.ConnectedSource = "RECEIPT"];
   }
   field ReceiptIssueSerialTrackDb {
      size = Small;
   }
//   field PartTrackingSessionId {
//      columnvisible = [false];
//}
   // fieldranking Contract, PartNo, ConfigurationIdRef, LocationNoRef, LotBatchNo, SerialNo, EngChgLevelRef, WaivDevRejNo, QtyOnhand, QtyReserved;
}
list PreviouslyAttachedPartsInStockList for PreviouslyAttachedPartsInStockToHuVirtual {
   label = "Parts in Handling Unit";
   field Contract {
      size = Small;
   }
   lov InventoryPartRef with ReferenceInventoryPartSelector {
      label = "Part";
      description = InventoryPartRef.DescriptionInUse;
   }
   field ConfigurationIdRef {
      size = Small;
   }
   lov LocationNoRef with ReferenceBayDropOffLocationSelector {
      size = Small;
   }
   field LotBatchNo {
      size = Small;
   }
   field SerialNo {
      size = Small;
   }
   @DynamicComponentDependency MFGSTD
   lov EngChgLevelRef with ReferenceControlPlanPartRevLovSelector {
      size = Small;
   }
   field WaivDevRejNo {
      size = Small;
   }
   @DynamicComponentDependency PROJ
   field ActivitySeqRef;
   field QtyOnhand;
   field QtyReserved;
   field SourceRef1 {
      columnvisible = [parent.ConnectedSource = "RECEIPT"];
   }
   field SourceRef2 {
      columnvisible = [parent.ConnectedSource = "RECEIPT"];
   }
   field SourceRef3 {
      columnvisible = [parent.ConnectedSource = "RECEIPT"];
   }
   field ReceiptNo {
      columnvisible = [parent.ConnectedSource = "RECEIPT"];
   }
   field ReceiptNo {
      columnvisible = [parent.ConnectedSource = "RECEIPT"];
   }
   field SourceRefType {
      columnvisible = [parent.ConnectedSource = "RECEIPT"];
   }
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------


--------------------------- PROJECTION FRAGMENTS ----------------------------
----------------------------- MAIN ENTRY POINTS -----------------------------
entityset ConnectInvPartsToHandlingUnitSet for ConnectInvPartsToHandlingUnitVirtual;

------------------------------ ENTITY DETAILS -------------------------------


------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------
action ConnectToHandlingUnit {
   initialcheck implementation;
   supportwarnings = [true];
   parameter ParentObjkey Text;
   ludependencies = InventoryPartInStock, ReceiptInvLocation;

}
--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------
virtual ConnectInvPartsToHandlingUnitVirtual {
   attribute HandlingUnitTypeId Text {
      label = "Handling Unit Type ID";
      maxlength = 100;
   }
   attribute HandlingUnitId Number {
      label = "Handling Unit ID";
   }
   attribute ObjidListArr Text {
      label = " ";
      maxlength = 2000;
   }
   attribute ConnectedSource Text {
      label = " ";
      maxlength = 100;
   }
   array AddPartsToHandlingUnitArray() to PartInStocksToAttachToHuVirtual();
   array PartsInHandlingUnitArray() to PreviouslyAttachedPartsInStockToHuVirtual();
}

virtual PartInStocksToAttachToHuVirtual {
   crud = Read, Update, Delete;

   attribute Contract Text {
      label = "Site";
      maxlength = 5;
      editable = [false];
      format = uppercase;
   }
   attribute PartNo Text {
      label = "Part No";
      maxlength = 25;
      editable = [false];
      format = uppercase;
   }
   attribute QtyToAttach Number {
      label = "Qty to Attach";
      editable = [true];
   }
   attribute CatchQtyToAttach Number {
      label = "Catch Qty to Attach";
      editable = [true];
   }
   attribute ConfigurationId Text {
      label = "Configuration ID";
      maxlength = 50;
      editable = [false];
      format = uppercase;
   }
   attribute LocationNo Text {
      label = "Location No";
      maxlength = 35;
      editable = [false];
      format = uppercase;
   }
   attribute HandlingUnitId Number {
      label = "Handling Unit ID";
      editable = [false];
   }
   attribute LotBatchNo Text {
      label = "Lot/Batch No";
      maxlength = 20;
      editable = [false];
   }
   attribute SerialNo Text {
      label = "Serial No";
      maxlength = 50;
      editable = [false];
   }
   attribute EngChgLevel Text {
      label = "Revision No";
      maxlength = 6;
      editable = [false];
   }
   attribute WaivDevRejNo Text {
      maxlength = 15;
      editable = [false];
   }
   attribute ActivitySeq Number {
      label = "Activity Sequence";
      editable = [false];
   }
   attribute QtyOnhand Number {
      label = "Qty Onhand";
      editable = [false];
   }
   attribute QtyReserved Number {
      label = "Qty Reserved";
      editable = [false];
   }
   attribute AvailableQty Number {
      label = "Available Qty";
      editable = [false];
   }
   attribute CatchQtyOnhand Number {
      label = "Catch Qty Onhand";
      editable = [false];
   }
   attribute CatchUom Text {
      label = "Catch UoM";
      maxlength = 20;
      editable = [false];
   }
   attribute SourceRef1 Text {
      label = "Source Ref 1";
      maxlength = 50;
      editable = [false];
   }
   attribute SourceRef2 Text {
      label = "Source Ref 2";
      maxlength = 50;
      editable = [false];
   }
   attribute SourceRef3 Text {
      label = "Source Ref 3";
      maxlength = 50;
      editable = [false];
   }
   attribute ReceiptNo Number {
      label = "Receipt No";
      editable = [false];
   }
   attribute SourceRefType Text {
      label = "Source Ref Type";
      maxlength = 200;
      editable = [false];
   }
   attribute SourceRefTypeDb Text {
      label = "Source Ref Type Db";
      editable = [false];
   }
   attribute InvTransSourceRefTypeDb Text {
     // fetch = "DECODE(source_ref_type_db, 'purCHASE_order', 'pur order', null)";
      label = "Inv Trans Source Ref Type";
      maxlength = 20;
      editable = [false];
   }
   attribute ReceiptIssueSerialTrackDb Text {
      label = "At Receipt and Issue";
      maxlength = 5;
      editable = [false];
   }
   attribute PartTrackingSessionId Number;
   reference InventoryPartRef(Contract, PartNo) to InventoryPart(Contract, PartNo);
   reference ConfigurationIdRef(Contract, PartNo, ConfigurationId) to InventoryPartConfig(Contract, PartNo, ConfigurationId) {
      label = "Configuration ID";
   }
   reference LocationNoRef(Contract, LocationNo) to BayDropOffLocation(Contract, LocationNo) {
      label = "Location No";

   }
   @DynamicComponentDependency MFGSTD
   reference EngChgLevelRef(Contract, PartNo, EngChgLevel) to ControlPlanPartRevLov(Contract, PartNo, EngChgLevel) {
      label = "Revision No";

   }
   @DynamicComponentDependency PROJ
   reference ActivitySeqRef(ActivitySeq) to ActivityCalculationBase(ActivitySeq) {
      label = "Activity Sequence";

   }
}

virtual PreviouslyAttachedPartsInStockToHuVirtual {
   crud = Read;
   attribute Contract Text {

      label = "Site";
      maxlength = 5;

      format = uppercase;
   }
   attribute PartNo Text {

      label = "Part No";
      maxlength = 25;

      format = uppercase;
   }

   attribute ConfigurationId Text {

      label = "Configuration ID";
      maxlength = 50;

      format = uppercase;
   }
   attribute LocationNo Text {

      label = "Location No";
      maxlength = 35;

      format = uppercase;
   }
   attribute HandlingUnitId Number {

      label = "Handling Unit ID";

   }
   attribute LotBatchNo Text {

      label = "Lot/Batch No";
      maxlength = 20;

   }
   attribute SerialNo Text {

      label = "Serial No";
      maxlength = 50;

   }
   attribute EngChgLevel Text {

      label = "Revision No";
      maxlength = 6;

   }
   attribute WaivDevRejNo Text {

      label = "W/D/R";
      maxlength = 15;

   }
   attribute ActivitySeq Number {

      label = "Activity Sequence";

   }
   attribute QtyOnhand Number {

      label = "Qty Onhand";

   }
   attribute QtyReserved Number {

      label = "Qty Reserved";

   }
   attribute SourceRef1 Text {

      label = "Source Ref 1";
      maxlength = 50;

   }
   attribute SourceRef2 Text {

      label = "Source Ref 2";
      maxlength = 50;

   }
   attribute SourceRef3 Text {

      label = "Source Ref 3";
      maxlength = 50;

   }
   attribute ReceiptNo Number {

      label = "Receipt No";

   }
   attribute SourceRefType Text {

      label = "Source Ref Type";
      maxlength = 200;

   }
   reference InventoryPartRef(Contract, PartNo) to InventoryPart(Contract, PartNo);
   reference ConfigurationIdRef(Contract, PartNo, ConfigurationId) to InventoryPartConfig(Contract, PartNo, ConfigurationId) {
      label = "Configuration ID";
   }
   reference LocationNoRef(Contract, LocationNo) to BayDropOffLocation(Contract, LocationNo) {
      label = "Location No";

   }
   @DynamicComponentDependency MFGSTD
   reference EngChgLevelRef(Contract, PartNo, EngChgLevel) to ControlPlanPartRevLov(Contract, PartNo, EngChgLevel) {
      label = "Revision No";

   }
   @DynamicComponentDependency PROJ
   reference ActivitySeqRef(ActivitySeq) to Activity(ActivitySeq) {
      label = "Activity Sequence";
   }
}

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------


