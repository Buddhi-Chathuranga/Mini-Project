-----------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------
-- 2019-08-07  ChFolk  SCUXXW4-23438, Included fragment ModifyLevelCostDetailAssistant.
-- 2019-03-07  ChFolk  SCUXXW4-16871, Added dynamic dependency where it is missing.
-- 2018-03-16  Mwerse  SCUXXW4-6219, Converted from frmInventoryPartCostDetail using MTG Version: 1.14
-----------------------------------------------------------------------------

projection InventoryPartUnitCostDetailsHandling;
component INVENT;
layer Core;
description "Use this API to view the cost detail structure of an inventory part.";
category Users;
include fragment UserAllowedSiteLovSelector;
include fragment ModifyLevelCostDetailAssistant;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset InventoryPartUnitCosts for InventoryPartUnitCostSum;

---------------------------------- QUERIES ----------------------------------
query InventoryPartUnitCostSum {
   from = "inventory_part_unit_cost_sum";
   lu = InventoryPartUnitCost;
   keys = Contract, PartNo, ConfigurationId, LotBatchNo, SerialNo
      {
      where = "CONTRACT = :Contract and PART_NO = :PartNo and CONFIGURATION_ID = :ConfigurationId and LOT_BATCH_NO = :LotBatchNo and SERIAL_NO = :SerialNo";
   }
   attribute PartNo Text {
      maxlength = 100;
      editable = [false];
   }
   attribute Description2 Text {
      fetch = "Inventory_Part_API.Get_Description(CONTRACT,PART_NO)";
      label = "Part Description";
      maxlength = 200;
      editable = [false];
   }
   attribute ConfigurationId Text {
      editable = [false];
   }
   attribute Contract Text {
      maxlength = 20;
   }
   attribute ConditionCode Text {
      fetch = "CONDITION_CODE_MANAGER_API.Get_Condition_Code(PART_NO,SERIAL_NO,LOT_BATCH_NO)";
      label = "Condition Code";
      maxlength = 2000;
      editable = [false];
   }
   attribute Description3 Text {
      fetch = "Condition_Code_API.Get_Description(Condition_Code_Manager_API.Get_Condition_Code(PART_NO,SERIAL_NO,LOT_BATCH_NO))";
      label = "Condition Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute LotBatchNo Text {
      label = "Lot/Batch No";
      editable = [false];
   }
   attribute SerialNo Text {
      editable = [false];
   }
   attribute InventoryValue Number {
      label = "Total Cost/Unit";
      editable = [false];
      format = ifscurrency;
   }
   attribute InventoryPartCostLevel Text {
      fetch = "Inventory_Part_API.Get_Invent_Part_Cost_Level_Db(contract, part_no)";
   }
   attribute InventValuationMethodDb Text {
      fetch = "Inventory_Part_API.Get_Invent_Valuation_Method_Db(contract, part_no)";
   }
   reference ConfigurationIdRef(Contract, PartNo, ConfigurationId) to InventoryPartConfig(Contract, PartNo, ConfigurationId) {
      label = "Configuration ID";
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   array DetailCostDetail(Contract, PartNo, ConfigurationId, LotBatchNo, SerialNo) to InventoryPartUnitCost(Contract, PartNo, ConfigurationId, LotBatchNo, SerialNo);
}

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity InventoryPartUnitCost {
   crud = Read;
   from = "inventory_part_unit_cost";
   exec = "INVENTORY_PART_UNIT_COST_API";
   keys = CostBucketId, CostSourceId, AccountingYear, Contract, PartNo, ConfigurationId, LotBatchNo, SerialNo, Company {
      where = "COST_BUCKET_ID = :CostBucketId and COST_SOURCE_ID = :CostSourceId and ACCOUNTING_YEAR = :AccountingYear and CONTRACT = :Contract and PART_NO = :PartNo and CONFIGURATION_ID = :ConfigurationId and LOT_BATCH_NO = :LotBatchNo and SERIAL_NO = :SerialNo and COMPANY = :Company";
   }
   attribute CostBucketId Text {
      fetch = "COST_BUCKET_ID";
      label = "Cost Bucket ID";
      maxlength = 5;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   @DynamicComponentDependency COST
   attribute PostingCostGroupDescription Text {
      fetch = "COST_BUCKET_POSTING_GROUP_API.Get_Description(COMPANY,COST_BUCKET_API.Get_Posting_Group_Id(CONTRACT,COST_BUCKET_ID))";
      label = "Posting Cost Group Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute CostSourceId Text {
      fetch = "COST_SOURCE_ID";
      label = "Cost Source ID";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute AccountingYear Text {
      fetch = "ACCOUNTING_YEAR";
      label = "OH Accounting Year";
      maxlength = 4;
      required = [true];
      editable = [ETag = null];
   }
   attribute InventoryValue Number {
      fetch = "INVENTORY_VALUE";
      label = "Cost / Unit";
      required = [true];
      format = ifscurrency;
   }
   attribute Contract Text {
      fetch = "CONTRACT";
      label = "Site";
      maxlength = 5;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute PartNo Text {
      fetch = "PART_NO";
      label = "Part No";
      maxlength = 25;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute ConfigurationId Text {
      fetch = "CONFIGURATION_ID";
      label = "Configuration ID";
      maxlength = 50;
      required = [true];
      editable = [ETag = null];
   }
   attribute LotBatchNo Text {
      fetch = "LOT_BATCH_NO";
      label = "Lot/Batch No";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
   }
   attribute SerialNo Text {
      fetch = "SERIAL_NO";
      label = "Serial No";
      maxlength = 50;
      required = [true];
      editable = [ETag = null];
   }
   attribute Company Text {
      fetch = "COMPANY";
      label = "Company";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   @DynamicComponentDependency COST
   reference CostBucketIdRef(Contract, CostBucketId) to CostBucket(Contract, CostBucketId) {
      label = "Cost Bucket ID";
   }
   reference CostSourceIdRef(Company, CostSourceId) to CostSource(Company, CostSourceId) {
      label = "Cost Source ID";
   }
   reference ConfigurationIdRef(Contract, PartNo, ConfigurationId) to InventoryPartConfig(Contract, PartNo, ConfigurationId) {
      label = "Configuration ID";
   }
}
