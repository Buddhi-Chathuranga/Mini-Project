----------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------
-- 181115      RAKUSE  SCUXXW4-5759, Converted dialog 'dlgPSheetStorageOptimization' using MTG Version: 1.34
----------------------------------------------------------------------------------------------------
projection StorageOptimizationHandling;
component INVENT;
layer Core;
description "Scheduled Task Assistant handling ''Storage Optimization''";
category Users;
include fragment ScheduledTasksCommon;
include fragment UserAllowedSiteLovSelector;
include fragment WarehouseLov2Selector;
include fragment WarehouseBayLov2Selector;
include fragment WarehouseBayRowLov2Selector;
include fragment WarehouseBayTierLov2Selector;
include fragment InventoryPartInStockLov26Selector;

-------------------------------- STRUCTURES----------------------------------

@Override
structure ParametersStructure {
   attribute Contract Text;
   attribute PartNo Text;
   attribute LocationType Text;
   attribute WarehouseId Text;
   attribute BayId Text;
   attribute RowId Text;
   attribute TierId Text;
   attribute LocationGroup Text;
}

--------------------------------- VIRTUALS ----------------------------------

@Override
virtual TaskVirtual using BatchSchedule {
   attribute Contract Text {
      required = [true];
      format = uppercase;
   }
   attribute PartNo Text {
      format = uppercase;
   }
   attribute LocationType Text;
   attribute WarehouseId Text;
   attribute BayId Text;
   attribute RowId Text;
   attribute TierId Text;
   attribute LocationGroup Text;

   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference WarehouseIdRef(Contract, WarehouseId) to WarehouseLov2(Contract, WarehouseId) {
      label = "From Warehouse";
   }
   reference BayIdRef(Contract, WarehouseId, BayId) to WarehouseBayLov2(Contract, WarehouseId, BayId) {
      label = "From Bay";
   }
   reference RowIdRef(Contract, WarehouseId, BayId, RowId) to WarehouseBayRowLov2(Contract, WarehouseId, BayId, RowId) {
      label = "From Row";
   }
   reference TierIdRef(Contract, WarehouseId, BayId, TierId) to WarehouseBayTierLov2(Contract, WarehouseId, BayId, TierId) {
      label = "From Tier";
   }
   reference PartNoRef(Contract, PartNo) to InventoryPartInStockLov26(Contract, PartNo) {
      label = "Part No";
   }
   reference LocationGroupRef(LocationGroup) to InventoryLocationGroup(LocationGroup) {
      label = "Location Group";
   }
   reference LocationTypeRef(LocationType) to InventLocationType(InventoryLocationType) {
      label = "Location Type";
   }

   ---------------------------
   ---

}

function WarehouseIdRefFilter List<Entity(WarehouseLov2)> {
   parameter Contract Text;
   where = "CONTRACT = :Contract";
}

query InventLocationType {
   from = "inventory_location_type";
   keys = InventoryLocationType;
   attribute InventoryLocationType Text {
      lovcolumn = [true];
   }
   attribute Description Text {
      lovcolumn = [true];
   }
}

//function BayIdNullFilter List<Entity(WarehouseBayLov2)> {
//   parameter Contract Text;
//   where = "CONTRACT = :Contract";
//}
//
//function BayIdFilter List<Entity(WarehouseBayLov2)> {
//   parameter Contract Text;
//   parameter WarehouseId Text;
//   where = "CONTRACT = :Contract AND WAREHOUSE_ID = :WarehouseId";
//}
//
//function RowRefNullFilter List<Entity(WarehouseBayRowLov2)> {
//   parameter Contract Text;
//   where = "CONTRACT = :Contract";
//}
//
//function RowRefNull2Filter List<Entity(WarehouseBayRowLov2)> {
//   parameter Contract Text;
//   parameter WarehouseId Text;
//   where = "CONTRACT = :Contract AND WAREHOUSE_ID = :WarehouseId";
//}
//
//function RowRefFilter List<Entity(WarehouseBayRowLov2)> {
//   parameter Contract Text;
//   parameter WarehouseId Text;
//   parameter BayId Text;
//   where = "CONTRACT = :Contract AND WAREHOUSE_ID = :WarehouseId AND BAY_ID = :BayId";
//}