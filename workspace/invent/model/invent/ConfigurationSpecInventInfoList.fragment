fragment ConfigurationSpecInventInfoList;
component INVENT;
layer Core;
description "Tab used to show inventory parts in stocks in configuration Specification page";

----------------------------- CLIENT FRAGMENTS ------------------------------

--------------------------------- COMMANDS ----------------------------------
command InventoryPartInStockCommand for InventoryPartInStock {
   label = "Inventory Part In Stock";
   mode = SelectedRecords;
   enabled = [PartNo != null];
   bulkexecute {
      bulknavigate "page/InventoryPartInStock/List?$filter=PartNo eq $[PartNo] and ConfigurationId eq $[ConfigurationId] and Contract eq $[Contract] and LocationNo eq $[LocationNo]";
   }
}

----------------------------------- LISTS -----------------------------------

list ConfigurationSpecInventInfoList for InventoryPartInStock {
   field Contract {
      label = "Site";
      size = Small;
   }
   lov LocationNoRef with InventoryLocationSelector {
      label = "Location";
      size = Medium;
      description = LocationDescription;
   }
   field QtyOnhand;
   field InventoryPartRef.UnitMeas {
      size = Small;
      label = "UoM";
   }

   commandgroup CommandGroupCmdGroup {
      
      command InventoryPartInStockCommand;
   }
}


--------------------------- PROJECTION FRAGMENTS ----------------------------
entityset InventoryPartInStockSet for InventoryPartInStock;

---------------------------------- QUERIES ----------------------------------
query InventoryLocation {
   from = "INVENTORY_LOCATION";
   lu = InventoryLocation;
   keys = Contract, LocationNo;
   attribute Contract Text;
   attribute LocationNo Text;
   attribute LocationGroup Text;
   attribute Warehouse Text;
   attribute BayNo Text;
   attribute RowNo Text;
   attribute TierNo Text;
   attribute LocationName Text;
}

query InventoryPartInStock {
   from = "inventory_part_in_stock_sum";
   lu = InventoryPartInStock;
   keys = Contract, LocationNo, PartNo, ConfigurationId {
      where = "CONTRACT = :Contract and LOCATION_NO = :LocationNo and PART_NO = :PartNo and CONFIGURATION_ID = :ConfigurationId";
   }
   attribute Contract Text;
   attribute LocationNo Text;
   attribute PartNo Text;
   attribute ConfigurationId Text;

   attribute LocationDescription Text {
      fetch = "Inventory_Location_API.Get_Location_Name(contract,location_no)";
      label = "Location Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute QtyOnhand Number {
      label = "On Hand Qty";
      editable = [ETag = null];
   }
   reference InventoryPartRef(Contract, PartNo) to InventoryPart(Contract, PartNo);
   reference LocationNoRef(Contract, LocationNo) to InventoryLocation(Contract, LocationNo) {
      label = "Location No";
   }
   reference ConfigurationIdRef(Contract, PartNo, ConfigurationId) to InventoryPartConfig(Contract, PartNo, ConfigurationId) {
      label = "Configuration ID";
   }
}

