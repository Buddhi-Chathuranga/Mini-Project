-------------------------------------------------------------------------------------------------------
--  Date        Sign    History
--  ----------  ------  --------------------------------------------------------------------------------
--  2020-11-06  JaThlk  SC2020R1-10847, Enabled the duplicate functionality.
--  2020-01-27  Aabalk  SCSPRING20-1687, Excluded remote warehouse shipment locations from ShipInventoryLocationNoRef.
--  2019-08-27  ChFolk  SCUXXW4-23117, Used Enumeration for DefaultShipVia instead of Boolean.
--  2019-03-07  ChFolk  SCUXXW4-16871, Added dynamic dependency where it is missing.
--  2018-11-23  henlse  SCUXXW4-6134, Converted from frmInterSiteSuppChainParam using MTG Version 1.33.
--  ----------  ------  --------------------------------------------------------------------------------
client SiteToSiteSupplyChainParameters;
component INVENT;
layer Core;
projection SiteToSiteSupplyChainParametersHandling;
include fragment SiteUivSelector;
@DynamicComponentDependency ORDER
include fragment CustOrdCust1Selector;
include fragment NonRemoteWhseShipLocationSelector;
@DynamicComponentDependency ORDER
include fragment FreightZoneJoinSelector;
@DynamicComponentDependency SHPMNT
include fragment ShipmentTypeSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry SitetoSiteSupplyChainParametersNavEntry parent EnterpNavigator.SiteMenu at index 1000 {
      label = "Site to Site Supply Chain Parameters";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page List using SiteToSiteLeadtimeSet {
   label = "Site to Site Supply Chain Parameters";
   startupmode = search;
   list SiteToSiteLeadtimeList;
   list SiteToSitePartLeadtimeList(SiteToSitePartLeadtimeArray) bind SiteToSiteLeadtimeList {
      display = Nested;
   }
}

--------------------------------- COMMANDS ----------------------------------
command SetasDefaultShipViaCommand for SiteToSiteLeadtime {
   label = "Set as Default Ship Via";
   enabled = [SupplySite != null and DemandSite != null and ShipViaCode != null and DefaultShipVia = "No"];
   execute {
      set DefaultShipVia = "Yes";
      refresh;
   }
}
command SetasDefaultShipViaCommand for SiteToSitePartLeadtime {
   label = "Set as Default Ship Via";
   enabled = [SupplyChainPartGroup != null and ShipViaCode != null and DefaultShipVia = "No"];
   execute {
      set DefaultShipVia = "Yes";
      refresh;
   }
}

----------------------------------- LISTS -----------------------------------
list SiteToSiteLeadtimeList for SiteToSiteLeadtime {
   label = "";
   lov SupplySiteRef with ReferenceSiteUivSelector {
      description = SupplySiteRef.Description;
      validate command {
         execute {
            @DynamicComponentDependency PURCH
            call GetVendorNoFromContract(SupplySite) into InternalSupplier;
            set FreightMapId = null;
            set ManuallyAssignedZoneDb = false;
         }
      }
   }

   @DynamicComponentDependency PURCH
   lov InternalSupplierRef with ReferenceSupplierSelector {
      description = InternalSupplierRef.VendorName;
      contactwidget {
         enabled = [InternalSupplier != null];
         source = Supplier;
      }
   }
   lov DemandSiteRef with ReferenceSiteUivSelector {
      description = DemandSiteRef.Description;
      validate command {
         execute {
            @DynamicComponentDependency ORDER
            call GetCustomerNoFromContract(DemandSite) into InternalCustomer;
         }
      }
   }
   @DynamicComponentDependency ORDER
   lov InternalCustomerRef with ReferenceCustOrdCust1Selector {
      description = InternalCustomerRef.Name;
      contactwidget {
         enabled = [InternalCustomer != null];
         source = Customer;
      }
   }
   lov ShipViaCodeRef with ReferenceMpccomShipViaSelector {
      description = ShipViaCodeRef.Description;
      validate command {
         execute {
            set FreightMapId = null;
            set ManuallyAssignedZoneDb = false;
         }
      }
   }
   field DefaultShipVia {
      size = Small;
      enumerationtrue = "Yes";
      enumerationfalse = "No";
      editable = [false];
   }
   field ExceptionDb {
      size = Small;
      required = [true];
   }
   lov DeliveryTermsRef with ReferenceOrderDeliveryTermSelector {
      description = DeliveryTermsRef.Description;
   }
   field DelTermsLocation;
   @DynamicComponentDependency DISCOM
   lov RouteIdRef with ReferenceDeliveryRouteSelector {
      description = RouteIdRef.Description;
   }
   @DynamicComponentDependency DISCOM
   lov ArrivalRouteIdRef with ReferenceDeliveryRouteSelector {
      description = ArrivalRouteIdRef.Description;
   }
   field PickingLeadtime;
   @DynamicComponentDependency SHPMNT
   lov ShipmentTypeRef with ShipmentTypeSelector {
      description = ShipmentTypeRef.Description;
   }
   lov ShipInventoryLocationNoRef with ReferenceNonRemoteWhseShipLocationSelector {
      size = Small;
   }
   field DeliveryLeadtime;
   field TransportLeadtime;
   field DistOrderCurrCodeRef;
   field InternalDeliveryLeadtime;
   field Distance;
   field ExpectedAdditionalCost;
   field ExpAddCostCurrCodeRef;
   @DynamicComponentDependency ORDER
   lov ZoneIdRef with ReferenceFreightZoneJoinSelector {
      description = ZoneIdRef.Description;

      validate command {
         execute {
            call GetFreightMapId(ShipViaCode, SupplySite, ZoneId) into FreightMapId;
            set ManuallyAssignedZoneDb = true;
            if [ZoneId = null and FreightMapId = null] {
               set ManuallyAssignedZoneDb = false;
            }
         }
      }
   }
   @DynamicComponentDependency ORDER
   lov FreightMapIdRef with ReferenceFreightMapSelector {
      description = FreightMapIdRef.Description;
      editable = [false];
   }
   field ManuallyAssignedZoneDb {
      size = Small;
      required = [true];
      editable = [false];
   }
   fieldranking SupplySiteRef, InternalSupplierRef, DemandSiteRef, InternalCustomerRef, ShipViaCodeRef, DefaultShipVia, DeliveryLeadtime, TransportLeadtime, InternalDeliveryLeadtime;

   commandgroup CommandGroupCmdGroup {

      command SetasDefaultShipViaCommand;
   }
}
list SiteToSitePartLeadtimeList for SiteToSitePartLeadtime {
   label = "Exceptions for Supply Site: ${parent.SupplySite}, Demand Site: ${parent.DemandSite}";
   lov SupplyChainPartGroupRef with ReferenceSupplyChainPartGroupSelector {
      description = SupplyChainPartGroupRef.Description;
   }
   lov ShipViaCodeRef with ReferenceMpccomShipViaSelector {
      description = ShipViaCodeRef.Description;
      validate command {
         execute {
            set FreightMapId = null;
            set ManuallyAssignedZoneDb = false;
         }
      }
   }
   field DefaultShipVia {
      size = Small;
      enumerationtrue = "Yes";
      enumerationfalse = "No";
      editable = [false];
   }
   lov DeliveryTermsRef with ReferenceOrderDeliveryTermSelector {
      description = DeliveryTermsRef.Description;
   }
   field DelTermsLocation;
   @DynamicComponentDependency DISCOM
   lov RouteIdRef with ReferenceDeliveryRouteSelector {
      description = RouteIdRef.Description;
   }
   @DynamicComponentDependency DISCOM
   lov ArrivalRouteIdRef with ReferenceDeliveryRouteSelector {
      description = ArrivalRouteIdRef.Description;
   }
   field PickingLeadtime;
   @DynamicComponentDependency SHPMNT
   lov ShipmentTypeRef with ShipmentTypeSelector {
      description = ShipmentTypeRef.Description;
   }
   field DeliveryLeadtime;
   field TransportLeadtime;
   field InternalDeliveryLeadtime;
   field Distance;
   field ExpectedAdditionalCost;
   field CurrencyCodeRef {
      size = Small;
   }
   @DynamicComponentDependency ORDER
   lov ZoneIdRef with ReferenceFreightZoneJoinSelector {
      description = ZoneIdRef.Description;

      validate command {
         execute {
            call GetFreightMapId(ShipViaCode, SupplySite, ZoneId) into FreightMapId;
            set ManuallyAssignedZoneDb = true;
            if [ZoneId = null and FreightMapId = null] {
               set ManuallyAssignedZoneDb = false;
            }
         }
      }
   }
   @DynamicComponentDependency ORDER
   lov FreightMapIdRef with ReferenceFreightMapSelector {
      description = FreightMapIdRef.Description;
      editable = [false];
   }
   field ManuallyAssignedZoneDb {
      size = Small;
      required = [true];
      editable = [false];
   }

   fieldranking SupplyChainPartGroupRef, ShipViaCodeRef, DefaultShipVia, DeliveryTermsRef, DeliveryLeadtime, TransportLeadtime, InternalDeliveryLeadtime;

   commandgroup CommandGroupCmdGroup {

      command SetasDefaultShipViaCommand;
   }
}