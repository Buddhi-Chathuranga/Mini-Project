--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-04-18  SURBLK  SCUXXW4-7095, Converted from tbwOverviewInvPartChar using MTG Version: 1.16
--------------------------------------------------------------------------------------

projection InventoryPartCharacteristicsHandling;
component INVENT;
layer Core;
description "Use this API to view inventory parts grouped by their characteristics. Characteristics are categorized into characteristic templates which are defined by grouping a number of optional characteristics together.";
category Users;
include fragment IntorderPartAlternateLovSelector;
include fragment UserAllowedSiteLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset InventoryPartChars for InventoryPartChar;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity InventoryPartChar {
   crud = Read, Update, Delete;
   from = "inventory_part_char_all";

   keys = PartNo, Contract, CharacteristicCode {
      where = "PART_NO = :PartNo and CONTRACT = :Contract and CHARACTERISTIC_CODE = :CharacteristicCode";
   }

   attribute EngAttribute Text {
      fetch = "INVENTORY_PART_API.Get_Eng_Attribute(CONTRACT,PART_NO)";
      label = "Eng Attribute";
      maxlength = 5;
      editable = [false];
   }

   attribute CharacteristicTemplateDescription Text {
      fetch = "CHARACTERISTIC_TEMPLATE_API.GET_DESCRIPTION(INVENTORY_PART_API.Get_Eng_Attribute(CONTRACT,PART_NO))";
      label = "Characteristic Template Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute CharType Text {
      fetch = "Characteristic_API.Get_Row_Type(CHARACTERISTIC_CODE)";
      label = "Char Type";
      maxlength = 50;
      editable = [false];
   }

   attribute CharacteristicSearchTypeDb Text {
      fetch = "CHARACTERISTIC_API.Get_Search_Type_Db(CHARACTERISTIC_CODE)";
      label = "Char Search Type";
      editable = [false];
   }

   reference InventoryPartRef(Contract, PartNo) to InventoryPart(Contract, PartNo);
   reference CharacteristicRef(CharacteristicCode) to Characteristic(CharacteristicCode);
   reference PartNoRef(Contract, PartNo) to IntorderPartAlternateLov(Contract, PartNo) {
      label = "Part No";
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference CharacteristicTemplateRef(EngAttribute) to CharacteristicTemplate(EngAttribute) {
      label = "Characteristic Template";
   }
   reference CharacteristicCodeRef(CharacteristicCode) to Characteristic(CharacteristicCode) {
      label = "Characteristic Code";
   }
   reference AttrValueNumericRef(CharacteristicCode, AttrValueNumeric) to DiscreteCharacValue(CharacteristicCode, CharacteristicValue) {
      label = "Attribute Value Numeric";
   }
   reference AttrValueAlphaRef(CharacteristicCode, AttrValueAlpha) to DiscreteCharacValue(CharacteristicCode, CharacteristicValue) {
      label = "Attribute Value Alpha";
   }
   reference UnitMeasRef(UnitMeas) to IsoUnit(UnitCode) {
      label = "UoM";
   }
}

