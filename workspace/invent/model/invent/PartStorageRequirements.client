-------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-11-13  FRBESE  SCXTEND-1158, Changed PartStorageRequirementsNavEntry navigator entry index from 1000 to 900.
-- 2019-11-04  NiAslk  SCXTEND-1218, Added startup mode as search.
-- 2019-02-21  SAGELK  SCUXXW4-6385, Added  Capacity and Condition Requirements tab
-- 2018-11-30  SAGELK  SCUXXW4-6385, Converted from frmPartCatStorageRequirements using MTG Version: 1.33
--------------------------------------------------------------------------------------
client PartStorageRequirements;
component INVENT;
layer Core;
projection PartStorageRequirementsHandling;
include fragment StorageCapacityReqGroupLovSelector;
//Define Storage Volume
include fragment DefineStorageVolumeRequirement;
include fragment WhStorageVolumeLovSelector;
include fragment UserAllowedSiteLovSelector;
warningsenabled = PartCatalogInventAttrib;

----------------------------- VISUAL COMPONENTS -----------------------------

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry PartStorageRequirementsNavEntry parent PartcaNavigator.PartMasterDataMasterPart at index 900 {
      label = "Part Storage Requirements";
      page Form;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using PartCatalogInventAttribSet {
   label = "Part Storage Requirements";
   startupmode = search;
   selector PartCatalogSelector;
   group PartCatStorageRequirementsGroup;

   tabs {
      tab {
         label = "Capacity and Condition Requirements";
         singleton PartCatalogInventAttribSingleton(PartCatalogInventAttribArray);

         group CapacityConditionRequirementsGroup bind PartCatalogInventAttribSingleton;

//       This is group is needed to diplay the values in Markdowntext as when using the singleton to bind the markdowntext the values are not showm.
//       But when this group is added the values are shown so made the group invisible.
         group PartCatalogInventAttribGroup bind PartCatalogInventAttribSingleton {
            visible = [false];
         }

         markdowntext bind PartCatalogInventAttribSingleton {
            text = "|             | Part Catalog Value | Operative Value | Operative Value Source | UoM |
            | ----------- | ---------: | --------------: | --------------: |--: |
            | **Bin Cubic Capacity** | | | | |
            | Width           | ${StorageWidthRequirement} | ${WidthOperateValue} | ${WidthOperateSource} | ${UomForLength} |
            | Height          | ${StorageHeightRequirement} | ${HeightOperateValue} | ${HeightOperateSource} | ${UomForLength} |
            | Depth           | ${StorageDepthRequirement} | ${DepthOperateValue} | ${DepthOperateSource} | ${UomForLength} |
            | Volume          | ${StorageVolumeRequirementRounded} | ${QtyPerVolumeOperateValueRounded} | ${QtyPerVolumeOperateSource} | ${VolumeUom} |
            | **Carrying Capacity** | | | |
            | Weight          | ${StorageWeightRequirement} | ${WeightOperateValue} | ${WeightOperateSource} | ${UomForWeight} |
            | **Storage Conditions** | | | |
            | Min Temperature | ${MinStorageTemperature} | ${MinTemperatureOperateValue} | ${MinTemperatureOperateSource} | ${UomForTemperature} |
            | Max Temperature | ${MaxStorageTemperature} | ${MaxTemperatureOperateValue} | ${MaxTemperatureOperateSource} | ${UomForTemperature} |
            | Min Humidity    | ${MinStorageHumidity} | ${MinHumidityOperateValue} | ${MinHumidityOperateSource} | ${MinHumidityUom} |
            | Max Humidity    | ${MaxStorageHumidity} | ${MaxHumidityOperateValue} | ${MaxHumidityOperateSource} | ${MinHumidityUom} |";
         }
      }
      tab {
         label = "Capability Requirements";
         group CapabilityRequirementsGroup bind PartCatalogInventAttribSingleton;
         arrange {
            list InvPartStorageCapabilityList(InvPartStorageCapabilityArray);
            list PartCatCapabilityOperativeList(PartCatCapabilityOperativeArray);
         }
      }
   }
}

-------------------------------- ASSISTANTS ---------------------------------
assistant EditCapacityAndConditionsAssistant using CapacitiesAndConditionsVirtualSet {
   label = "Modify Capacities and Conditions";
   savemode = OnLostFocus;
   input(PartNo);

   singlestep {
      group InventoryPartCapacityGroup;
      group CarryingCapacityGroup;
      group StorageConditionGroup;
   }
   command Ok;
   command Cancel {
      execute {
         exit CANCEL;
      }
   }
   command DefineStorageVolumeRequiremeCommand;
}

--------------------------------- COMMANDS ----------------------------------
command Ok for CapacitiesAndConditionsVirtual {
   label = "OK";
   enabled = [true];
   execute {
      call SaveCapacityAndConditions();
      exit OK;
   }
}
command DefineStorageVolumeRequiremeCommand for CapacitiesAndConditionsVirtual {
   label = "Define Storage Volume Requirement";
   enabled = [true];
   execute {
      dialog DefineStorageVolumeReqDialog(null, null) into(VolumeVar, VolumeUom) {
         when OK {
            set Volume = VolumeVar;
            refresh;
         }
         when CANCEL {
            refresh;
         }

      }
   }
}
command RemoveCapabilityCommand for PartCatalogCapabilityQuery {
   label = "Remove Capability";
   enabled = [true];
   execute {
      call CreateRemoveCapability(PartNo, StorageCapabilityId);
   }
}

command CapacitiesAndConditionsCommand for PartCatalogInventAttrib {
   label = "Edit";
   enabled = [true];
   icon = "edit";
   style = IconOnly;
   execute {
      assistant EditCapacityAndConditionsAssistant(PartNo) {
         when OK {
            success("Capacities and Conditions has been saved.");
         }
      }
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector PartCatalogSelector for PartCatalog {
   label = "${PartNo} - ${Description}";
   static PartNo;
   static Description;
}

singleton PartCatalogInventAttribSingleton for PartCatalogInventAttrib {
   crudactions {
      new {
         enabled = [true];
      }
      edit {
         visible = [false];
      }
   }

   commandgroup ModifyCommandGroup {
      command CapacitiesAndConditionsCommand;
   }
}

@Override
selector ReferenceStorageCondReqGroupSelector for StorageCondReqGroup {
   label = "";
   static ConditionReqGroupId;
   static Description;
   static MinTemperature;
   static MaxTemperature;
   static UomForTemperature;
   static MinHumidity;
   static MaxHumidity;
}
---------------------------------- GROUPS -----------------------------------
group PartCatalogInventAttribGroup for PartCatalogInventAttrib {
   field StorageWidthRequirement;
   field WidthOperateValue;
   field WidthOperateSource;
   field UomForLength;
   field StorageHeightRequirement;
   field HeightOperateValue;
   field HeightOperateSource;
   field UomForLength;
   field StorageDepthRequirement;
   field DepthOperateValue;
   field DepthOperateSource;
   field UomForLength;
   field StorageVolumeRequirement;
   field StorageVolumeRequirementRounded;
   field QtyPerVolumeOperateValue;
   field QtyPerVolumeOperateValueRounded;
   field QtyPerVolumeOperateSource;
   field VolumeUom;
   field StorageWeightRequirement;
   field WeightOperateValue;
   field WeightOperateSource;
   field UomForWeight;
   field MinStorageTemperature;
   field MinTemperatureOperateValue;
   field MinTemperatureOperateSource;
   field UomForTemperature;
   field MaxStorageTemperature;
   field MaxTemperatureOperateValue;
   field MaxTemperatureOperateSource;
   field UomForTemperature;
   field MinStorageHumidity;
   field MinHumidityOperateValue;
   field MinHumidityOperateSource;
   field MinHumidityUom;
   field MaxStorageHumidity;
   field MaxHumidityOperateValue;
   field MaxHumidityOperateSource;
   field MinHumidityUom;
}

group CapacityConditionRequirementsGroup for PartCatalogInventAttrib {
   lov CapacityReqGroupIdRef with ReferenceStorageCapacityReqGroupLovSelector {
      preview = StorageCapacityReqGroupLovCard;

      description = CapacityReqGroupIdRef.Description;
      size = Large;
   }
   lov ConditionReqGroupIdRef with ReferenceStorageCondReqGroupSelector {
      description = ConditionReqGroupIdRef.Description;
      size = Large;
   }
}

group PartCatStorageRequirementsGroup for PartCatalog {
   label = "";
   field PartNo;
   field Description;
}

group CapabilityRequirementsGroup for PartCatalogInventAttrib {
   lov CapabilityReqGroupIdRef with ReferenceStorageCapabilReqGroupSelector {
      description = CapabilityReqGroupIdRef.Description;
      size = Large;
   }
}

group InventoryPartCapacityGroup for CapacitiesAndConditionsVirtual {
   label = "Dimension Capacity";
   field Width;
   field Height;
   field Depth;
   lov UomForLengthRef with ReferenceIsoUnitSelector using GetLengthUomList {
      editable = [LengthUom = null];
   }
   field Volume {
      label = "Qty Per Volume";
      validate command {
         execute {
            if [Volume <= 0] {
               set Volume = null;
                -- Avoid division by 0
            }
         }
      }
   }
}

group CarryingCapacityGroup for CapacitiesAndConditionsVirtual {
   label = "Carrying Capacity";
   field Weight;
   lov UomForWeightRef with ReferenceIsoUnitSelector using GetWeightUomList {
      editable = [WeightUom = null];
   }
}

group StorageConditionGroup for CapacitiesAndConditionsVirtual {
   label = "Storage Conditions";
   field MinTemperature;
   field MaxTemperature;
   lov UomForTemperatureRef with ReferenceIsoUnitSelector using GetTemperatureUomList {
      editable = [TemperatureUom = null];
   }
   measure MinHumidity(HumidityUom);
   measure MaxHumidity(HumidityUom);
}

----------------------------------- LISTS -----------------------------------
list InvPartStorageCapabilityList for PartCatalogCapability {
   label = "Part Catalog Value";
   editmode = SingleRowEdit;

   lov StorageCapabilityIdRef with ReferenceStorageCapabilitySelector {
      label = "Storage Capability";
      description = StorageCapabilityIdRef.Description;
      size = Large;
   }
   field RemovedDb;
   // fieldranking StorageCapabilityIdRef, StorageCapabilityRef.Description, RemovedDb;
}

list PartCatCapabilityOperativeList for PartCatalogCapabilityQuery {
   label = "Operative Values";
   editmode = SingleRowEdit;

   lov StorageCapabilityIdRef with ReferenceStorageCapabilitySelector {
      label = "Storage Capability";
      description = StorageCapabilityIdRef.Description;
      size = Large;
   }
   field Source;
   // fieldranking StorageCapabilityIdRef, StorageCapabilityRef.Description, Source;

   commandgroup CommandGroupCmdGroup {
      command RemoveCapabilityCommand;
   }
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

--------------------------------- CHECKLIST ---------------------------------
