--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-04-30  fandse  SCUXXW4-17693, Correction of the key and added fetch for fields to avoid system error.
-- 2019-03-07  ChFolk  SCUXXW4-16871, Added dynamic dependency where it is missing.
-- 2018-03-23  SURBLK  SCUXXW4-7072, Converted from tbwInvPartUnitCostOverview using MTG Version: 1.15
--------------------------------------------------------------------------------------

projection InventoryPartsUnitCostDetailsAnalysis;
component INVENT;
layer Core;
description "Use this API to view inventory value information about any part in stock, broken down into its cost details (if any)";
category Users;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset InventoryPartUnitCosts for InventoryPartUnitCost;

---------------------------------- QUERIES ----------------------------------

@Override
query InventoryPartUnitCost {
   from = "inventory_part_unit_cost";
   lu = InventoryPartUnitCost;

   keys = PartNo, Contract, ConfigurationId, LotBatchNo, SerialNo, CostBucketId;

   attribute PartNo Text {
      fetch = "PART_NO";
   }
   attribute Contract Text {
      fetch = "CONTRACT";
      label = "Site";
   }
   attribute ConfigurationId Text {
      fetch = "CONFIGURATION_ID";
   }
   attribute SerialNo Text {
      fetch = "SERIAL_NO";
   }
   attribute Company Text {
      fetch = "COMPANY";
   }
   attribute PartDescription Text {
      fetch = "Inventory_Part_API.Get_Description(CONTRACT, PART_NO)";
      label = "Part Description";
      maxlength = 200;
   }
   attribute Description Text {
      fetch = "Site_API.Get_Description(CONTRACT)";
      label = "Description";
      maxlength = 2000;
   }
   attribute ConditionCode Text {
      fetch = "CONDITION_CODE_MANAGER_API.Get_Condition_Code(PART_NO,SERIAL_NO,LOT_BATCH_NO )";
      label = "Condition Code";
      maxlength = 2000;
      format = uppercase;
   }
   attribute LotBatchNo Text {
      fetch = "LOT_BATCH_NO";
      label = "Lot/Batch No";
   }
   attribute CostBucketId Text {
      fetch = "COST_BUCKET_ID";
      maxlength = 100;
   }
   @DynamicComponentDependency COST
   attribute PostingCostGroupDescription Text {
      fetch = "Cost_Bucket_Posting_Group_Api.Get_Description(COMPANY,Cost_Bucket_API.Get_Posting_Group_Id(CONTRACT, COST_BUCKET_ID))";
      label = "Posting Cost Group Description";
      maxlength = 100;
      required = [true];
   }
   attribute CostSourceId Text {
      maxlength = 100;
   }
   attribute AccountingYear Text {
      maxlength = 100;
   }
   attribute InventoryValue Number {
      label = "Cost / Unit";
      format = ifscurrency;
   }
   @DynamicComponentDependency COST
   reference CostBucketRef(Contract, CostBucketId) to CostBucket(Contract, CostBucketId);
   reference CostSourceRef(Company, CostSourceId) to CostSource(Company, CostSourceId);
   reference ConfigurationIdRef(Contract, PartNo, ConfigurationId) to InventoryPartConfig(Contract, PartNo, ConfigurationId) {
      label = "Configuration ID";
   }
   @DynamicComponentDependency COST
   reference CostBucketIdRef(Contract, CostBucketId) to CostBucket(Contract, CostBucketId) {
      label = "Cost Bucket ID";
   }
}
