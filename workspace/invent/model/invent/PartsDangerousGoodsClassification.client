-----------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------
-- 2019-11-13  FRBESE  SCXTEND-1158, Changed PartsCatalogInventAttributesNavEntry navigator entry index from 900 to 1400.
-- 2019-11-04  NiAslk  SCXTEND-1218, Added startup mode as search.
-- 2019-07-15  JaThlk  SCUXXW4-23055, Removed multiple calls for better performance.
-- 2019-03-20  STHOSE  SCUXXW4-7145, Added a lot of concatenations using lov with references
-- 2018-05-28  SURBLK  SCUXXW4-7145, Converted from tbwPartCatalogInventAttrib using MTG Version: 1.19
-----------------------------------------------------------------------------

client PartsDangerousGoodsClassification;
component INVENT;
layer Core;
projection PartsDangerousGoodsClassificationHandling;
include fragment CopyDangerousGoodsClassificationTemplateAssistant;
include fragment UserAllowedSiteLovSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry PartsCatalogInventAttributesNavEntry parent PartcaNavigator.PartMasterDataMasterPart at index 1400 {
      label = "Parts Dangerous Goods Classification";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------

page List using PartCatalogInventAttributes {
   label = "Parts Dangerous Goods Classification";
   startupmode = search;
   list PartCatalogInventAttribList;
}

--------------------------------- COMMANDS ----------------------------------
command PartCommand {
   label = "Part";
   enabled = [PartNo != null];
   execute {
      navigate "page/Part/Form?$filter=PartNo eq $[PartNo]";
   }
}

command CopyDangerousGoodsClassificationCommand {
   label = "Copy from Template Part";
   enabled = [true];
   mode = SelectedRecords;

   bulkexecute {
      assistant Assistant(Selection) {
         when OK {
            exit OK;
         }
      }
   }
}

----------------------------------- LISTS -----------------------------------
list PartCatalogInventAttribList for PartCatalogInventAttribute {
   lov PartNoRef with ReferencePartCatalogSelector {
      description = PartNoRef.Description;
      size = Large;
   }
   lov HseContractRef with ReferenceUserAllowedSiteLovSelector {
      size = Small;
   }
   field FlashPoint;
   field ModifiedDate;
   lov ProperShippingNameIdRef with ReferenceProperShippingNameSelector {
      label = "Proper Shipping Name";
      description = ProperShippingNameIdRef.ProperShippingName;
      validate command {
         execute {
            call GetUnNoAndNos(ProperShippingNameId) into UnNoAndNosStructure;
            set UnNo = UnNoAndNosStructure.UnNo;
            set NOS = UnNoAndNosStructure.Nos;
         }
      }
   }
   field UnNo;
   field NOS;
   lov AdditionalShipDescIdRef with  ReferenceAdditionalShippingDescSelector {
      label = "Additional Shipping Description";
      description = AdditionalShipDescIdRef.AdditionalShippingDesc;
   }
   field ColdSensitive {
      size = Small;
      enumerationtrue = "ColdSensitive";
      enumerationfalse = "NotColdSensitive";
      truelabel = "Yes";
      falselabel = "No";
   }
   field TemplatePart;
   field DocumentText;
   lov PackagingGroupIdRef with ReferencePackagingGroupSelector {
      label = "Packaging Group";
      description = PackagingGroupIdRef.PackagingGroup;
   }
   lov PackagingMaterialIdRef with ReferencePackagingMaterialSelector {
      --label = "Packaging Material";
      description = PackagingMaterialIdRef.PackagingMaterial;
   }
   lov ImdgClassIdRef with ReferenceTransportHazardClassSelector {
      description = ImdgClassIdRef.Description;
   }
   lov ImdgSubsidiaryRisk1IdRef with  ReferenceTransportHazardClassSelector {
      description = ImdgSubsidiaryRisk1IdRef.Description;
   }
   lov ImdgSubsidiaryRisk2IdRef with  ReferenceTransportHazardClassSelector {
      description = ImdgSubsidiaryRisk2IdRef.Description;
   }
   lov ImdgLimitedQuantityRef with ReferenceTransportLimitedQuantitySelector {
      description = ImdgLimitedQuantityRef.Description;
   }
   field EmSNo;
   field SegregationCode;
   field MarinePollutant {
      size = Small;
      enumerationtrue = "MarinePollutant";
      enumerationfalse = "NotMarinePollutant";
      truelabel = "Yes";
      falselabel = "No";
   }
   lov ImdgCommentIdRef with ReferenceTransportHazardCommentSelector {
      description = ImdgCommentIdRef.HazardComment;
   }
   field ImdgSpecialProvision;
   lov AdrRidClassIdRef with ReferenceTransportHazardClassSelector {
      description = AdrRidClassIdRef.Description;
   }
   lov AdrSubsidiaryRisk1IdRef with ReferenceTransportHazardClassSelector {
      description = AdrSubsidiaryRisk1IdRef.Description;
   }
   lov AdrSubsidiaryRisk2IdRef with ReferenceTransportHazardClassSelector {
      description = AdrSubsidiaryRisk2IdRef.Description;
   }
   lov AdrLimitedQuantityRef with ReferenceTransportLimitedQuantitySelector {
      description = AdrLimitedQuantityRef.Description;
   }
   lov TunnelCodeRef with ReferenceTunnelCodeSelector {
      description = TunnelCodeRef.Description;
   }
   field AdrEnvironmentalHazard;
   lov AdrCommentIdRef with ReferenceTransportHazardCommentSelector {
      description = AdrCommentIdRef.HazardComment;
   }
   field AdrSpecialProvision;
   lov IataDgrClassIdRef with ReferenceTransportHazardClassSelector {
      description = IataDgrClassIdRef.Description;
   }
   lov IataSubsidiaryRisk1IdRef with ReferenceTransportHazardClassSelector {
      description = IataSubsidiaryRisk1IdRef.Description;
   }
   lov IataSubsidiaryRisk2IdRef with ReferenceTransportHazardClassSelector {
      description = IataSubsidiaryRisk2IdRef.Description;
   }
   lov IataLimitedQuantityRef with ReferenceTransportLimitedQuantitySelector {
      description = IataLimitedQuantityRef.Description;
   }
   field IataEnvironmentalHazard {
      size = Small;
   }
   lov IataCommentIdRef with ReferenceTransportHazardCommentSelector {
      description = IataCommentIdRef.HazardComment;
   }
   field IataSpecialProvision;

   commandgroup ClassificationCmdGroup {
      command PartCommand;
      command CopyDangerousGoodsClassificationCommand;
   }
}

--------------------------------- ASSISTANT ---------------------------------