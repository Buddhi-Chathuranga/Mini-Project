-----------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------
-- 2019-07-24  ChFolk  SCUXXW4-22798, Included fragment ProjectDetailsFieldSet.
-- 2019-04-30  fandse  SCUXXW4-17693, Aligned command name to "View Configuration"
-- 2019-04-29  fandse  SCUXXW4-17693, Fixed navigation to configurration
-- 2019-03-13  ChFolk  SCUXXW4-17195, Included dynamic dependency anotations where necessary.
-- 2018-10-17  SWiclk  SCUXXW4-6229, Converted from frmInventoryPartOnhandDevelop using MTG Version: 1.31
-----------------------------------------------------------------------------
client InventoryPartOnHandDevelopment;
component INVENT;
layer Core;
projection InventoryPartOnHandDevelopmentAnalysis;
include fragment InventoryPartLovSelector;
include fragment UserAllowedSiteLovSelector;
include fragment ProjectDetailsFieldSet;

warningsenabled = InventoryPartConfig;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry InventoryPartOnHandDevelopmentNavEntry parent InventNavigator.QuantityinStockAnalysis at index 300 {
      label = "Inventory Part On Hand Development";
      page Form;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using InventoryPartConfigSet {
   label = "Inventory Part On Hand Development";
   startupmode = search;
   selector InventoryPartConfigSelector;
   group InventoryPartOnhandDevelopGroup;
   list InventoryPartOnhandDevelopList(InventoryPartOnhandDevelopArray);

   commandgroup CommandGroupCmdGroup {

      command ViewConfigurationCommand;
   }
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command ViewConfigurationCommand for InventoryPartConfig {
   label = "View Configuration";
   enabled = [ConfigurationId != "*"];
   execute {
      set Mode = "View";
      navigate "assistant/PartConfigurationAssistant/EditConfiguration?$action=InitConfiguration{  VarMode:$[Mode],
                                                                                                   VarPartNo:$[PartNo],
                                                                                                   VarConfigurationId:$[ConfigurationId]}";
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector InventoryPartConfigSelector for InventoryPartConfig {
   label = "${PartNo} - ${PartDescription} - ${Contract} - ${ConfigurationId}";
   static PartNo;
   static PartDescription;
   static Contract;
   static ConfigurationId;
}

---------------------------------- GROUPS -----------------------------------
group InventoryPartOnhandDevelopGroup for InventoryPartConfig {
   label = "";
   lov PartNoRef with ReferenceInventoryPartLovSelector {
      description = PartDescription;
   }

   lov ContractRef with ReferenceUserAllowedSiteLovSelector {
      description = ContractRef.ContractDesc;
   }
   field ConfigurationId {
      label = "Configuration ID";
      size = Small;
   }
   field InventoryPartRef.UnitMeas {
      label = "Inventory UoM";
      size = Small;
   }
   field LeadTime {
      size = Small;
   }
   field TotalQuantity {
      visible = [false];
   }
   field Days {
      visible = [false];
   }
}

----------------------------------- LISTS -----------------------------------
list InventoryPartOnhandDevelopList for InventoryTransactionHist {
   label = "";
   orderby = TransactionId desc;
   preselect = [false];

   field DateCreated;
   field DateTimeCreated {
      format = longtime;
   }
   field TransactionCode;
   field Transaction {
      size = Large;
   }
   field SourceRef1;
   field SourceRefType;
   field TransactionQty;
   field OnHandQtyAfterTransaction;

   computedfield LeadTimeCoverage {
      label = "Lead Time Coverage";
      value = "#{(parent.TotalQuantity != 0 && parent.LeadTime > 0) ? (OnHandQtyAfterTransaction * parent.Days) / (parent.TotalQuantity * parent.LeadTime) : 0}";
   }

   field Userid {
      contactwidget {
         enabled = [true];
         source = Person;
      }
   }
   field PartOwnership;

   computedfield Owner {
      label = "Owner";
      value = "${Owner} - ${OwnerName}";
   }

   fieldset ProjectDetailsFieldSet;
   @DynamicComponentDependency PROJ
   field ActivitySeqRef;
   // fieldranking DateCreated, DateTimeCreated, TransactionCode, Transaction, SourceRef1, SourceRefType, TransactionQty, OnHandQtyAfterTransaction, Null, Userid;
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

