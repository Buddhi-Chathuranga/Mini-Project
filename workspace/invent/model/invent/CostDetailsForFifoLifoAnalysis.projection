--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-04-23  DaZase  SCUXXW4-6049, Converted from frmCostDetailsFifoLifo using MTG Version: 1.16
--------------------------------------------------------------------------------------

projection CostDetailsForFifoLifoAnalysis;
component INVENT;
layer Core;
description "Use this API to study FIFO/LIFO inventory values at the cost detail level. You can perform a search by part number, site and/or transaction ID.";
category Users;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset InventoryPartFifoLifoTransactions for InventoryPartFifoLifoTransaction;

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity InventoryPartFifoLifoTransaction using InventoryPartCostFifo {
   crud = Read;
   from = "inventory_part_cost_fifo";
   keys = PartNo, Contract, SequenceNo {
      where = "PART_NO = :PartNo and CONTRACT = :Contract and SEQUENCE_NO = :SequenceNo";
   }
   attribute PartNo Text {
      fetch = "PART_NO";
      label = "Part No";
      maxlength = 100;
      format = uppercase;
   }
   attribute Description Text {
      fetch = "INVENTORY_PART_API.Get_Description(contract,PART_NO)";
      label = "Description";
      maxlength = 2000;
   }
   attribute Contract Text {
      fetch = "CONTRACT";
      label = "Site";
      maxlength = 5;
      format = uppercase;
   }
   attribute TransactionId Number {
      fetch = "TRANSACTION_ID";
      label = "Transaction ID";
   }
   attribute SequenceNo Number {
      fetch = "SEQUENCE_NO";
      label = "Sequence No";
   }
   array Detail(PartNo, Contract, SequenceNo) to InventoryPartFifoLifoTransactionDetail(PartNo, Contract, SequenceNo);
}

---------------------------------- QUERIES ----------------------------------

query InventoryPartFifoLifoTransactionDetail {
   from = "INVENTORY_PART_FIFO_DETAIL";
   lu = InventoryPartFifoDetail;
   keys = PartNo, Contract, SequenceNo, AccountingYear, CostBucketId, Company, CostSourceId {
      where = "PART_NO = :PartNo and CONTRACT = :Contract and SEQUENCE_NO = :SequenceNo and ACCOUNTING_YEAR = :AccountingYear and COST_BUCKET_ID = :CostBucketId and Company = :Company and COST_SOURCE_ID = :CostSourceId";
   }

   attribute Contract Text {
      fetch = "contract";
      label = "Site";
      maxlength = 5;
      format = uppercase;
      implementationtype = "VARCHAR2(5)";
   }
   attribute PartNo Text {
      fetch = "part_no";
      label = "Part No";
      maxlength = 25;
      format = uppercase;
      implementationtype = "VARCHAR2(25)";
   }
   attribute SequenceNo Number {
      fetch = "SEQUENCE_NO";
      label = "Sequence No";
   }
   attribute CostBucketId Text {
      fetch = "COST_BUCKET_ID";
      label = "Cust Bucket ID";
      maxlength = 5;
      format = uppercase;
      implementationtype = "VARCHAR2(5)";
   }
   @DynamicComponentDependency COST
   attribute PostingCostGroupDescription Text {
      fetch = "Cost_Bucket_Posting_Group_Api.Get_Description(COMPANY,Cost_Bucket_API.Get_Posting_Group_Id(CONTRACT, COST_BUCKET_ID))";
      label = "Posting Cost Group Description";
   }
   attribute CostSourceId Text {
      fetch = "COST_SOURCE_ID";
      label = "Cost Source ID";
   }
   attribute AccountingYear Text {
      fetch = "ACCOUNTING_YEAR";
      label = "OH Accounting Year";
   }
   attribute UnitCost Number {
      fetch = "UNIT_COST";
      label = "Cost / Unit";
      format = ifscurrency;
   }
   attribute Company Text {
      fetch = "COMPANY";
      label = "Company";
   }
   @DynamicComponentDependency COST
   reference CostBucketIdRef(Contract, CostBucketId) to CostBucket(Contract, CostBucketId);
   reference CostSourceIdRef(Company, CostSourceId) to CostSource(Company, CostSourceId);
}