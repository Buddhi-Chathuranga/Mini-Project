--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-06-18  JaThlk  SCUXXW4-11617, Replaced the ContractRefSelector with MTG generated ReferenceUserAllowedSiteLovSelector.
-- 2018-03-20  SWiclk  SCUXXW4-7421, Converted from tbwWarehouseWorkerOverview using MTG Version: 1.15
--------------------------------------------------------------------------------------

client WorkloadPerWorker;
component INVENT;
layer Core;
projection WorkloadPerWorkerAnalysis;
include fragment UserAllowedSiteLovSelector;



----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry WorkloadPerWorkerNavEntry parent InventNavigator.WarehouseTasksTaskPlanning at index 200 {
      label = "Workload per Worker";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page List using WarehouseWorkers {
   label = "Workload per Worker";
   startupmode = search;
   list WorkloadPerWorkerList;
}

--------------------------------- COMMANDS ----------------------------------

command WarehouseTasks for WarehouseWorker {
   label = "Details";
   //! TODO: <Use the "enabled" keyword below to define the Inquire logic, found within the event handler 'menuItem__Warehouse_Inquire'>
   enabled = [TaskID != null];
   execute {
      navigate "page/WarehouseTask/Form?$filter=TaskId eq ${TaskID}";
   }
}

command ViewAssignedTasks for WarehouseWorker {
   label = "Assigned Tasks";
   //! TODO: <Use the "enabled" keyword below to define the Inquire logic, found within the event handler 'menuItem__View_Inquire'>
   enabled = [TaskID != null];
   execute {
      navigate "page/WarehouseTasks/List?$filter=TaskId eq ${TaskID}";
   }
}

----------------------------------- LISTS -----------------------------------
list WorkloadPerWorkerList for WarehouseWorker {
   lov ContractRef with ReferenceUserAllowedSiteLovSelector {
      size = Small;
   }
   field WorkerIdRef {
      size = Medium;
      contactwidget {
         enabled = [true];
         source = Person;
      }
   }
   field PersonInfoRef.Name {
      size = Large;
      label = "Worker Name";
   }
   field TaskID;
   field ExpectedFinishDate;
   field NoofAssignedTasks;
   field TotalPlannedTimemin;
   field WorkerGroupRef {
      size = Small;
   }
   field CalendarIdRef {
      size = Small;
   }
   field StartDate;
   field EndDate;

   commandgroup CommandGroup {

      command WarehouseTasks;
      command ViewAssignedTasks;
   }
}