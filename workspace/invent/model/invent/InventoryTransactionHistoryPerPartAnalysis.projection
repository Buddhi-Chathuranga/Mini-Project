-------------------------------------------------------------------------------------------------
-- Date Sign History
-- ---------- ------ ----------------------------------------------------------------------------
-- 2021-01-13 JaThlk  Bug 157423 (SCZ-13203), Increased the max length of the attributes SourceRefType, SourceRef1,
-- 2021-01-13         SourceRef2 and SourceRef3.
-- 2020-01-02 NISMLK  MFSPRING20-711, Added OwnershipTransferReasonId to InventoryTransactionHist.
-- 2019-07-25 ChFolk  SCUXXW4-22798, Modified project information to increase performance.
-- 2019-03-07 ChFolk  SCUXXW4-16871, Added dynamic dependency where it is missing.
-- 2018-06-19 JaThlk SCUXXW4-11617, Included UserAllowedSiteLovSelector fragment instead of UserAllowedSiteLov.
-- 2018-05-23 HaPulk SCUXXW4-6517, Suffix label of Warehouse/Bay/Row/Tier/Bin with 'ID'
-- 2018-04-17 HaPulk SCUXXW4-6517, Converted from frmTransum using MTG Version: 1.16
--------------------------------------------------------------------------------------------------

projection InventoryTransactionHistoryPerPartAnalysis;
component INVENT;
layer Core;
description "Use this API to view all inventory transactions for specified parts";
category Users;
include fragment UserAllowedSiteLovSelector;
include fragment InventoryPartLov4;


----------------------------- MAIN ENTRY POINTS -----------------------------
entityset InventoryPartConfigurations for InventoryPartConfiguration;

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity InventoryPartConfiguration using InventoryPartConfig {
   crud = Read;
   keys = PartNo, Contract, ConfigurationId {
      where = "PART_NO = :PartNo and CONTRACT = :Contract and CONFIGURATION_ID = :ConfigurationId";
   }
   attribute PartNo Text {
      maxlength = 100;
      editable = [false];
   }
   attribute PartDescription Text {
      fetch = "Inventory_Part_API.Get_Description(CONTRACT,PART_NO)";
      label = "Part Description";
      maxlength = 200;
      editable = [false];
   }
   attribute InventoryUoM Text {
      fetch = "Inventory_Part_API.Get_Unit_Meas(CONTRACT,PART_NO)";
      editable = [false];
   }
   attribute Contract Text {
      editable = [false];
   }
   attribute ConfigurationId Text {
      editable = [false];
      format = uppercase;
   }
   attribute CatchUoM Text {
      fetch = "Inventory_Part_API.Get_Enabled_Catch_Unit_Meas(CONTRACT,PART_NO)";
      label = "Catch UoM";
      maxlength = 100;
      editable = [false];
   }
   reference PartNoRef(Contract, PartNo) to InventoryPartLov4(Contract, PartNo) {
      label = "Part No";
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference InventoryUoMRef(InventoryUoM) to IsoUnit(UnitCode) {
      label = "Inventory UoM";
   }

   array DetailInvtran(PartNo, Contract, ConfigurationId) to InventoryTransactionHist(PartNo, Contract, ConfigurationId);
}

@Override
entity InventoryTransactionHist {
   crud = Read;
   keys = TransactionId
      {
      where = "PART_NO = :PartNo and CONTRACT = :Contract and CONFIGURATION_ID = :ConfigurationId";
   }
   attribute DateCreated Date {
      label = "Created";
      editable = [ETag != null];
   }
   attribute DateTimeCreated Time {
      label = "Creation Time";
      editable = [false];
   }
   attribute TransactionCode Text {
      editable = [false];
   }
   attribute Transaction Text {
      label = "Transaction Description";
      maxlength = 2000;
   }
   attribute LocationNo Text {
      label = "Inventory Location";
      editable = [false];
      format = uppercase;
   }
   attribute HandlingUnitId Number {
      editable = [false];
   }
   attribute TypeDescription Text {
      fetch = "Handling_Unit_Type_API.Get_Description(Handling_Unit_API.Get_Handling_Unit_Type_Id(HANDLING_UNIT_ID))";
      label = "Type Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute Warehouse Text {
      fetch = "INVENTORY_LOCATION_API.Get_Warehouse(CONTRACT,LOCATION_NO)";
      label = "Warehouse ID";
      maxlength = 15;
      editable = [false];
   }
   attribute Bay Text {
      fetch = "INVENTORY_LOCATION_API.Get_Bay_No(CONTRACT,LOCATION_NO)";
      label = "Bay ID";
      maxlength = 5;
      editable = [false];
   }
   attribute RowNo Text {
      fetch = "INVENTORY_LOCATION_API.Get_Row_No(CONTRACT,LOCATION_NO)";
      label = "Row ID";
      maxlength = 5;
      editable = [false];
   }
   attribute Tier Text {
      fetch = "INVENTORY_LOCATION_API.Get_Tier_No(CONTRACT,LOCATION_NO)";
      label = "Tier ID";
      maxlength = 5;
      editable = [false];
   }
   attribute Bin Text {
      fetch = "INVENTORY_LOCATION_API.Get_Bin_No(CONTRACT, LOCATION_NO)";
      label = "Bin ID";
      maxlength = 5;
      editable = [false];
   }
   attribute Direction Text {
      editable = [false];
   }
   attribute Quantity Number {
      editable = [false];
   }
   attribute QuantityDirection Number {
      fetch = "(DECODE(direction, '-', Quantity*-1, Quantity))";
      label = "Quantity";
      editable = [false];
   }
   attribute CatchQuantity Text {
      label = "Catch Qty";
      maxlength = 100;
      editable = [false];
   }
   attribute SourceRefType Text {
      fetch = "SOURCE_REF_TYPE";
      maxlength = 200;
      editable = [false];
   }
   attribute SourceRef1 Text {
      label = "Source Ref 1";
      maxlength = 50;
      editable = [false];
      format = uppercase;
   }
   attribute SourceRef2 Text {
      label = "Source Ref 2";
      maxlength = 50;
      format = uppercase;
   }
   attribute SourceRef3 Text {
      label = "Source Ref 3";
      maxlength = 50;
      editable = [false];
      format = uppercase;
   }
   attribute SourceRef4 Text {
      label = "Order Ref 4";
   }
   attribute SourceRef5 Text {
      label = "Order Ref 5";
   }
   attribute Userid Text {
      label = "By";
      editable = [ETag = null];
   }
   attribute PartOwnership Enumeration(PartOwnership) {
      label = "Ownership";
      editable = [false];
   }
   attribute Owner Text {
      fetch = "DECODE(OWNING_CUSTOMER_NO,NULL,OWNING_VENDOR_NO,OWNING_CUSTOMER_NO)";
      label = "Owner";
      maxlength = 100;
      editable = [false];
      format = uppercase;
   }
   @DynamicComponentDependency ORDER
   @DynamicComponentDependency PURCH
   attribute OwnerName Text {
      fetch = "DECODE(OWNING_CUSTOMER_NO,NULL,SUPPLIER_API.Get_Vendor_Name(OWNING_VENDOR_NO), Cust_Ord_Customer_API.Get_Name(OWNING_CUSTOMER_NO))";
      label = "Owner Name";
      maxlength = 100;
      editable = [false];
   }
   attribute ProjectId Text {
      editable = [false];
      format = uppercase;
   }
   @DynamicComponentDependency PROJ
   attribute ProgramId Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Program_Id(ACTIVITY_SEQ))";
      maxlength = 10;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ProgramDescription Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Program_Description(ACTIVITY_SEQ))";
      maxlength = 2000;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ProjectName Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Project_Name(ACTIVITY_SEQ))";
      maxlength = 2000;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute SubProjectId Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Sub_Project_Id(ACTIVITY_SEQ))";
      maxlength = 10;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute SubProjectDescription Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Sub_Project_Description(ACTIVITY_SEQ))";
      maxlength = 2000;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ActivityNo Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Activity_No(ACTIVITY_SEQ))";
      maxlength = 10;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ActivityDescription Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Description(ACTIVITY_SEQ))";
      maxlength = 200;
      editable = [false];
   }
   attribute ActivitySeq Number {
      label = "Activity Sequence";
      editable = [false];
   }
   attribute TopParentHandlingUnitID Number {
      fetch = "Handling_Unit_API.Get_Top_Parent_Handl_Unit_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Handling Unit ID";
      editable = [false];
   }
   attribute TopParentHandlingUnitTypeID Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Hu_Type_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Handling Unit Type ID";
      maxlength = 2000;
      editable = [false];
   }
   attribute TopParentHandlingUnitTypeDesc Text {
      fetch = "Handling_Unit_Type_API.Get_Description(Handling_Unit_API.Get_Top_Parent_Hu_Type_Id(HANDLING_UNIT_ID))";
      label = "Top Parent Handling Unit Type Desc";
      maxlength = 2000;
      editable = [false];
   }
   attribute TopParentSSCC Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Sscc(HANDLING_UNIT_ID)";
      label = "Top Parent SSCC";
      maxlength = 2000;
      editable = [false];
   }
   attribute TopParentAltHandlingUnitLabelID Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Alt_Hu_Label_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Alt Handling Unit Label ID";
      maxlength = 2000;
      editable = [false];
   }
   attribute PartNo Text {
      label = "PartNo";
      editable = [false];
   }
   attribute Contract Text {
      editable = [false];
   }
   attribute ConfigurationId Text {
      editable = [false];
   }
   reference HandlingUnitRef(HandlingUnitId) to HandlingUnit(HandlingUnitId);
   @DynamicComponentDependency PROJ
   reference ProjectIdRef(ProjectId) to Project(ProjectId);
   @DynamicComponentDependency PROJ
   reference ProgramIdRef(ProgramId) to ProjectProgramGlobal(ProgramId);
   @DynamicComponentDependency PROJ
   reference SubProjectIdRef(ProjectId, SubProjectId) to SubProject(ProjectId, SubProjectId);
   @DynamicComponentDependency PROJ
   reference ActivityNoRef(ActivitySeq, ActivityNo) to Activity(ActivitySeq, ActivityNo);
   @DynamicComponentDependency PROJ
   reference ActivitySeqRef(ActivitySeq) to Activity(ActivitySeq);
   reference OwnershipTransferReasonRef(OwnershipTransferReasonId) to OwnershipTransferReason(TransferReasonId) {
      label = "Ownership Transfer Reason";
   }
}





