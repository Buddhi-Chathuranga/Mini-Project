----------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------------
-- 2020-01-23  Dinklk  MFXTEND-3208, Modified InvPartAvailPlanVisualizer command to create a SessionId before navigating to the visualizer page.
-- 2019-11-04  Dinklk  MFXTEND-395, Added a navigation command VisualInvPartAvailPlanVisualizer.
-- 2019-05-08  ChFolk  SCUXXW4-5991, Removed ViewDetailsCommand from the list and add it to InvPartConfigProjectSelector.
-- 2019-04-10  ChFolk  SCUXXW4-5991, Commented out InventoryPartAvailabilityPlanningSearchAssistant as Framework search pannel is going to be used.
-- 2019-04-10          Keep the commented code as some improvements expecting from framework to use the search pannel if not the assistant will be used.
-- 2019-03-05  ChFolk  SCUXXW4-5991, Added Navigate commands in the header and changed visible conditions of leadtime informations.
-- 2019-03-02  ChFolk  SCUXXW4-5991, Hide the tab when there snapshot_id is null.
-- 2019-02-22  ChFolk  SCUXXW4-7177, Included fragment PlannablePerPartSummaryTab and added Availability Check per Day.
-- 2019-02-22  ChFolk  SCUXXW4-7172, Included fragment PlannablePerPartDetailTab and added Availability Check Tab.
-- 2019-02-22  ChFolk  SCUXXW4-7302, Included fragment SumProcurementPlanningTab and added Order Proposal per Day Tab.
-- 2019-02-22  ChFolk  SCUXXW4-7182, Included fragment ProcurementPlanningTab and added Order Proposal Tab.
-- 2019-02-22  ChFolk  SCUXXW4-7297, Included fragment SumDetailedPlanningTab and added All Per Day Tab.
-- 2019-02-22  ChFolk  SCUXXW4-7317, Include fragment SupplyDemandViewExtTab and added All Tab.
-- 2019-02-22  ChFolk  SCUXXW4-5991, Converted frmAvailabilityPlanning using MTG Version: 1.34.
----------------------------------------------------------------------------------------------------------
client InventoryPartAvailabilityPlanning;
component INVENT;
layer Core;
projection InventoryPartAvailabilityPlanningAnalysis;

--------------------------------- FRAGMENTS ---------------------------------
include fragment UserAllowedSiteLovSelector;
include fragment InventoryPartPlannerLovSelector;
include fragment InventoryPartLov;
include fragment SupplyDemandViewExtTab;
include fragment SumDetailedPlanningTab;
include fragment ProcurementPlanningTab;
include fragment SumProcurementPlanningTab;
include fragment PlannablePerPartDetailTab;
include fragment PlannablePerPartSummaryTab;

warningsenabled = InvPartConfigProject;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry InventoryPartAvailabilityPlanningNavEntry parent InventNavigator.SupplyChainPlanningPartPlanning at index 100 {
      label = "Inventory Part Availability Planning";
      page Form home InvPartConfigProject;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using InvPartConfigProjectSet {
   label = "Inventory Part Availability Planning";
   startupmode = search;
   selector InvPartConfigProjectSelector;
   group AvailabilityPlanningGroup;
   group AvailabilityPlanningDetailGroup;
   arrange {
      group QuantityGroup;
      group LeadTimesGroup;
   }

//   markdowntext {
//      text =
//      "|                 |Leadtime            |Unlimited Supply Date           |
//       |-----------------|--------------------|--------------------------------|
//       |Purchasing:      |${PurchLeadtime}    |${UnlimitedPurchLeadTime}       |
//       |Manufacturing:   |${ManufLeadtime}    |${UnlimitedManufLeadTime}       |
//       |Expected:        |${ExpectedLeadtime} |${UnlimitedExpectedLeadTime}    |
//       |Picking:         |${PickingLeadtime}  |${UnlimitedPickingLeadTime}|
//       ";
//   }
   tabs {
      tab {
         visible = [SnapshotId != null];
         label = "All";
         list SupplyDemandDetailPlanningList using GetSupplyDemandDetailPlanning(SnapshotId);
      }
      tab {
         visible = [SnapshotId != null];
         label = "All per Day";
         list SumDetailedPlanningList using GetSumDetailedPlanning(SnapshotId);
      }
      tab {
         visible = [ProjectId = "*" and SnapshotId != null];
         label = "Order Proposal";
         list ProcurementPlanningList using GetProcurementPlanning(SnapshotId);
      }
      tab {
         visible = [ProjectId = "*" and SnapshotId != null];
         label = "Order Proposal per Day";
         list SumProcurementPlanningList using GetSumProcurementPlanning(SnapshotId);
      }
      tab {
         visible = [SnapshotId != null];
         label = "Availability Check";
         list PlannablePerPartDetailList using GetPlannablePerPartDetail(SnapshotId);
      }
      tab {
         visible = [SnapshotId != null];
         label = "Availability Check per Day";
         list PlannablePerPartSummaryList using GetPlannablePerPartSummary(SnapshotId);
      }
      tab {
         visible = [SnapshotId != null];
         label = "Planning Info";
         group PlanningInfoGroup;
      }
   }
   @DynamicComponentDependency MFGVIZ
   commandgroup CommandGroupCmdGroup1 {
      command InvPartAvailPlanVisualizer;
   }
   commandgroup CommandGroupCmdGroup {
      command InventoryTransactionHistoryCommand;
      command InventoryPartCurrentlyOnHandCommand;
      command ViewConfigurationCommand;
      command MrpPartInformationCommand;
   }
}


-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command ViewDetailsCommand for InvPartConfigProject {
   label = "View Latest Details";
   enabled = [true];
   execute {
      call GenerateSnapshot(Contract, PartNo, ConfigurationId, ProjectId, SnapshotId);
   }
}

command InventoryTransactionHistoryCommand for InvPartConfigProject {
   label = "Inventory Transaction History per Part";
   enabled = [PartNo != null];
   execute {
      navigate "page/InventoryTransactionHistoryPerPart/Form?$filter=Contract eq $[Contract] and PartNo eq $[PartNo] and ConfigurationId eq $[ConfigurationId]";
   }
}

command InventoryPartCurrentlyOnHandCommand for InvPartConfigProject {
   label = "Inventory Part Currently On Hand";
   enabled = [PartNo != null];
   execute {
      navigate "page/InventoryPartCurrentlyOnHand/Form?$filter=Contract eq $[Contract] and PartNo eq $[PartNo]";
   }
}
command ViewConfigurationCommand for InvPartConfigProject {
   label = "View Configuration";
   enabled = [ConfigurationId != "*"];
   variable Mode;
   execute {
      set Mode = "View";
      navigate "assistant/PartConfigurationAssistant/EditConfiguration?$action=InitConfiguration{VarMode:$[Mode],
                                                                                                 VarPartNo:$[PartNo],
                                                                                                 VarConfigurationId:$[ConfigurationId]}";
   }
}
command MrpPartInformationCommand for InvPartConfigProject {
   label = "MRP Part Information";
   enabled = [(PartNo != null) and(PlanningMethod = "A" or PlanningMethod = "D" or PlanningMethod = "E" or PlanningMethod = "F" or PlanningMethod = "G" or PlanningMethod = "M" or PlanningMethod = "H")];
   execute {
      navigate "page/MrpPartInformation/Form?$filter=Contract eq $[Contract] and PartNo eq $[PartNo]";
   }
}

@DynamicComponentDependency MFGVIZ
command InvPartAvailPlanVisualizer for InvPartConfigProject {
   label = "Visual Inventory Part Availability Planning";
   icon = "pie-chart";
   style = IconOnly;
   enabled = [true];
   variable VarSessionId Number;
   execute {
      call CreateVizSessionForIpap() into VarSessionId;
      navigate "page/InvPartAvailPlanVisualizer/Form?initcontext=SessionId:${VarSessionId}&$filter=Contract eq $[Contract] and PartNo eq $[PartNo] and ConfigurationId eq $[ConfigurationId] and ProjectId eq $[ProjectId]";
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector InvPartConfigProjectSelector for InvPartConfigProject {
   label = "${PartNo} - ${Description} - ${Contract} - ${ConfigurationId} - ${ProjectId}";
   selectionchanged command ViewDetailsCommand;
   static PartNo;
   static Description;
   static Contract;
   static ConfigurationId;
   static ProjectId;
}

@Override
@DynamicComponentDependency PROJ
selector OpenProjectSiteSelector for OpenProjectSite {
   static Site;
   static ProjectId;

}
---------------------------------- GROUPS -----------------------------------

group AvailabilityPlanningGroup for InvPartConfigProject {
   label = "";
   lov InventoryPartLovRef with ReferenceInventoryPartLovSelector {
      label = "Part";
      description = Description;
      size = Large;
      editable = [false];
   }
   lov ContractRef with ReferenceUserAllowedSiteLovSelector {
      preview = UserAllowedSiteLovCard;
      size = Small;
   }
   field ConfigurationId {
      size = Small;
   }
   @DynamicComponentDependency PROJ
   field ProjectIdRef {
      size = Small;
   }
   field SnapshotId {
      size = Small;
      visible = [false];
   }
}

group AvailabilityPlanningDetailGroup for InvPartConfigProject {
   collapsed = [true];
   label = "Details";
   lov PlannerBuyerRef with ReferenceInventoryPartPlannerLovSelector {
      size = Small;
      preview = InventoryPartPlannerLovCard;
   }
   field CostPerUnit {
      size = Small;
   }
   field PlanningMethod {
      size = Small;
   }
   field TypeCode {
      size = Small;
   }
   field DefaultSupplyType {
      size = Small;
   }
   field AlternatePartsExist {
      size = Small;
   }
}


group LeadTimesGroup for InvPartConfigProject {

//   markdowntext {
//      text = "| **Lead Times/Unlimited Supply Date** | | | |
//            | ---------| ---------: | ---------: | ---------: |
//            |  | **Leadtime** | **Date** |
//            | Purchasing: | ${PurchLeadtime} | ${UnlimitedPurchLeadTime}|
//            | Manufacturing: | ${ManufLeadtime} | ${UnlimitedManufLeadTime} |
//            | Expected: | ${ExpectedLeadtime} | ${UnlimitedExpectedLeadTime}|
//            | Picking: | ${PickingLeadTime} | ${UnlimitedPickingLeadTime} |";
//   }
   label = "Lead Times/Unlimited Supply Date";

   field PurchLeadtime {
      size = Small;
      visible = [TypeCodeDb != "1" and TypeCodeDb != "2"];
   }
   field UnlimitedPurchLeadTime {
      visible = [TypeCodeDb != "1" and TypeCodeDb != "2"];
   }
   field ManufLeadtime {
      size = Small;
      visible = [TypeCodeDb = "1" or TypeCodeDb = "2"];
   }
   field UnlimitedManufLeadTime {
      visible = [TypeCodeDb = "1" or TypeCodeDb = "2"];
   }
   field ExpectedLeadtime {
      size = Small;
   }
   field UnlimitedExpectedLeadTime;
   field PickingLeadTime {
      label = "Picking";
      size = Small;
   }
   field UnlimitedPickingLeadTime;
}

group QuantityGroup for InvPartConfigProject {
   label = "Quantities";
   measure OnhandQty(UnitMeas) {
      size = Small;
   }
   measure InTransitQty(UnitMeas) {
      size = Small;
   }
   measure UsableQty(UnitMeas) {
      size = Small;
   }
   measure AvailableQty(UnitMeas) {
      size = Small;
   }
   field UnitMeas {
      visible = [false];
      size = Small;
   }

}

group PlanningInfoGroup for InvPartConfigProject {
   field LastYearOut {
      size = Small;
   }
   field LastYearIn {
      size = Small;
   }
   field AbcClass {
      size = Small;
   }
   field AbcPercent {
      size = Small;
   }
   field CurrentYearOut {
      size = Small;
   }
   field CurrentYearIn {
      size = Small;
   }
   field FrequencyClass {
      size = Small;
   }
   field CarryRate {
      size = Small;
   }
   field MinOrderQty {
      size = Small;
   }
   field MaxOrderQty {
      size = Small;
   }
   field LifecycleStage {
      size = Small;
   }
   field SetupCost {
      size = Small;
   }
   field StdOrderSize {
      size = Small;
   }
   field MulOrderQty {
      size = Small;
   }
   field ShrinkageFac {
      size = Small;
   }
   field ServiceRate {
      size = Small;
   }
   field PrimarySupplier {
      size = Small;
   }
   field MainVendorName {
      size = Small;
   }
   field SafetyStock {
      size = Small;
   }
   field MaxweekSupply {
      size = Small;
   }
   field PartProductFamily {
      size = Small;
   }
   field PartProductCode {
      size = Small;
   }
   field SafetyLeadTime {
      size = Small;
   }
   field OrderPointQty {
      size = Small;
   }
   field LotSize {
      size = Small;
   }
}

----------------------------------- LISTS -----------------------------------


----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------


----------------------------- VISUAL COMPONENTS -----------------------------
