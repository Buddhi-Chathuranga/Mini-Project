-------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  --------------------------------------------------------------------------------
-- 2021-02-23  BudKlk  Bug 158030(SCZ-13723), Modified ViewConfigurationCommand to send bulk data to the assistant and changed to send order information when the OrderSupplyDemandType is CustOrder.
-- 2021-01-20  DiJwlk  SC2020R1-11785, Removed field references to optimize performance.
-- 2020-07-21  PamPlk  Bug 148531(SCZ-5329), Changed the maximum length of OrderNo, LineNo and RelNo.
-- 2020-03-02  MeAblk  SCSPRING20-1798, Added SupplyDemandDetailsShipmentOrderCommand, SupplyDemandDetailsArrivedShipmentOrderCommand.
-- 2019-05-29  ChFolk  SCUXXW4-19189, Added ConcatOrderRefs to be used as a key in PlannablePerPartDetail. Made all attributes sortable and searchable false.
-- 2019-03-04  ChFolk  SCUXXW4-5991, Include fragment SupplyDemandDetailsCommands which contains commands for Supply Demand Details.
-- 2019-03-04          Removed command details and functions as now there are from the fragment.
-- 2019-02-28  ChFolk  SCUXXW4-7172, included commands to navigate supply demand details and to view configurations.
-- 2019-02-14  ChFolk  SCUXXW4-7172, Converted tbwPlannablePerPartDetail using MTG Version: 1.34.
-- 2019-02-14          Contains the list in Availability Check tab in InventoryPartAvailabilityPlanning.
-------------------------------------------------------------------------------------------------------
fragment PlannablePerPartDetailTab;
component INVENT;
layer Core;
description "Tab in InventoryPartAvailabilityPlanning which containing the open orders for a part.
It provides the supply and demand information used to perform availability checks for orders. Each supply or demand is represented by one line in the table.";

include fragment SupplyDemandDetailsCommands;

----------------------------- CLIENT FRAGMENTS ------------------------------

----------------------------- NAVIGATOR ENTRIES -----------------------------

-------------------------------- MAIN PAGES ---------------------------------
page PlannablePerPartDetailList using PlannablePerPartDetailSet {
   label = "Plannable Per Part Detail";
   list PlannablePerPartDetailList;
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command ViewConfigurationCommand for PlannablePerPartDetail {
   label = "View Configuration";
   mode = SelectedRecords;
   enabled = [ConfigurationId != "*"];
   variable Mode;
   bulkexecute {
      ifall [OrderSupplyDemandTypeDb = "1"] {

         bulknavigate "assistant/PartConfigurationAssistant/EditConfiguration?$action=InitConfiguration{ VarUsage:'CustomerOrder',
                                                                                                         VarMode:'View',
                                                                                                         VarPartNo:$[PartNo],
                                                                                                         VarConfigurationId:$[ConfigurationId],
                                                                                                         VarIdentity1:$[OrderNo],
                                                                                                         VarIdentity2:$[LineNo],
                                                                                                         VarIdentity3:$[RelNo],
                                                                                                         VarIdentity4:$[LineItemNo]}";

      }
      else {
         bulkset Mode = "View";

         bulknavigate "assistant/PartConfigurationAssistant/EditConfiguration?$action=InitConfiguration{ VarMode:$[Mode],
                                                                                                         VarPartNo:$[PartNo],
                                                                                                         VarConfigurationId:$[ConfigurationId]}";
      }
   }
}

--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------

----------------------------------- LISTS -----------------------------------

list PlannablePerPartDetailList for PlannablePerPartDetail {
   field DateRequired {
      size = Small;
      sortable = false;
      searchable = false;
   }
   field ConcatOrderRefs {
      columnexclude = [true];
      sortable = false;
      searchable = false;
   }
   field OrderSupplyDemandType {
      sortable = false;
      searchable = false;
   }
   field Description {
      sortable = false;
      searchable = false;
   }
   field Demand {
      size = Small;
      sortable = false;
      searchable = false;
   }
   field QtySupply {
      size = Small;
      sortable = false;
      searchable = false;
   }
   field ProjectedQty {
      size = Small;
      sortable = false;
      searchable = false;
   }
   field CoPlannableQty {
      size = Small;
      sortable = false;
      searchable = false;
   }
   field OrderNo {
      size = Small;
      sortable = false;
      searchable = false;
   }
   field LineNo {
      size = Small;
      sortable = false;
      searchable = false;
   }
   field RelNo {
      size = Small;
      sortable = false;
      searchable = false;
   }
   field LineItemNo {
      size = Small;
      sortable = false;
      searchable = false;
   }
   @DynamicComponentDependency PROJ
   lov ProjectRef with ReferenceProjectSelector {
      label = "Project";
      description = ProjectName;
      editable = [false];
      searchable = false;
   }
   @DynamicComponentDependency PROJ
   field SubProjectId {
      size = Small;
      label = "Sub Project ID";
      sortable = false;
      searchable = false;
   }
   @DynamicComponentDependency PROJ
   field SubProjectDescription {
      sortable = false;
      searchable = false;
   }
   @DynamicComponentDependency PROJ
   field ActivityNo {
      size = Small;
      label = "Activity ID";
      sortable = false;
      searchable = false;
   }
   @DynamicComponentDependency PROJ
   field ActivityDescription {
      size = Small;
      label = "Activity Description";
      sortable = false;
      searchable = false;
   }
   @DynamicComponentDependency PROJ
   field ActivitySeqRef {
      size = Small;
      sortable = false;
      searchable = false;
   }

   command ViewConfigurationCommand;
   commandgroup SupplyDemandDetailsCmdGroup {

      @DynamicComponentDependency SHPORD
      command SupplyDemandDetailsShpordMaterialCommand;
      @DynamicComponentDependency SHPORD
      command SupplyDemandDetailsShopOrderCommand;
      @DynamicComponentDependency PURCH
      command SupplyDemandDetailsPurchaseOrderCommand;
      @DynamicComponentDependency ORDER
      command SupplyDemandDetailsCustomerOrderCommand;
      @DynamicComponentDependency PURCH
      command SupplyDemandDetailsPurchaseRequisitionCommand;
      command SupplyDemandDetailsMaterialRequisitionCommand;
      @DynamicComponentDependency PROSCH
      command SupplyDemandDetailsProdScheduleByLinePartCommand;
      @DynamicComponentDependency WO
      command SupplyDemandDetailsPrepareWorkOrderCommand;
      @DynamicComponentDependency ORDER
      command SupplyDemandDetailsSalesQuotationCommand;
      @DynamicComponentDependency PURCH
      command SupplyDemandDetailsArrivedPurchaseOrderCommand;
      @DynamicComponentDependency DISORD
      command SupplyDemandDetailsDistributionOrderCommand;
      @DynamicComponentDependency PURCH
      command SupplyDemandDetailsPurOrdComponentCommand;
      @DynamicComponentDependency ORDER
      command SupplyDemandDetailsExtCustomerOrderCommand;
      @DynamicComponentDependency ORDER
      command SupplyDemandDetailsExtSourceOrderCommand;
      @DynamicComponentDependency ORDSTR
      command SupplyDemandDetailsInterimOrderSupplyCommand;
      @DynamicComponentDependency ORDSTR
      command SupplyDemandDetailsInterimOrderDemandCommand;
      command SupplyDemandDetailsTransportTaskCommand;
      @DynamicComponentDependency ORDER
      command SupplyDemandDetailsSourcedOrderCommand;
      @DynamicComponentDependency SHIPOD
      command SupplyDemandDetailsShipmentOrderCommand;
      @DynamicComponentDependency SHIPOD
      command SupplyDemandDetailsArrivedShipmentOrderCommand;
   }
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------


--------------------------- PROJECTION FRAGMENTS ----------------------------
----------------------------- MAIN ENTRY POINTS -----------------------------
entityset PlannablePerPartDetailSet for PlannablePerPartDetail;

------------------------------ ENTITY DETAILS -------------------------------

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

query PlannablePerPartDetail {
   from = "Plannable_Per_Part_Detail";
   keys = SnapshotId, DateRequired, OrderSupplyDemandType, ConcatOrderRefs, ProjectId, QtyDemandKey, QtySupplyKey;
   attribute SnapshotId Number;
   attribute DateRequired Date {
      fetch = "date_required";
      label = "Due Date";
      editable = [false];
   }
   attribute ConcatOrderRefs Text {
      fetch = "concat_order_refs";
   }
   attribute QtyDemandKey Number {
      fetch = "DECODE((qty_demand - qty_reserved), 0, 0, 1)";
   }
   attribute QtySupplyKey Number {
      fetch = "DECODE(qty_supply, 0, 0, 1)";
   }
   attribute SortOrder Number {
      fetch = "sort_order";
   }
   attribute OrderSupplyDemandType Text {
      fetch = "order_supply_demand_type";
      label = "Type";
      maxlength = 50;
      editable = [false];
   }
   attribute OrderSupplyDemandTypeDb Text {
      fetch = "Order_Supply_Demand_Type_API.Encode(ORDER_SUPPLY_DEMAND_TYPE)";
      maxlength = 30;
      editable = [false];
   }
   attribute Description Text {
      fetch = "description";
      label = "Status";
      maxlength = 253;
      editable = [false];
   }
   attribute Demand Number {
      fetch = "qty_demand - qty_reserved";
      label = "Demand";
      editable = [false];
   }
   attribute QtySupply Number {
      fetch = "qty_supply";
      label = "Supply";
      editable = [false];
   }
   attribute ProjectedQty Number {
      fetch = "projected_qty";
   }
   attribute CoPlannableQty Number {
      fetch = "co_plannable_qty";
   }
   attribute OrderNo Text {
      fetch = "order_no";
      label = "Order Ref 1";
      maxlength = 40;
      editable = [false];
      format = uppercase;
   }
   attribute LineNo Text {
      fetch = "line_no";
      label = "Order Ref 2";
      maxlength = 12;
      editable = [false];
      format = uppercase;
   }
   attribute RelNo Text {
      fetch = "rel_no";
      label = "Order Ref 3";
      maxlength = 40;
      editable = [false];
      format = uppercase;
   }
   attribute LineItemNo Number {
      fetch = "line_item_no";
      label = "Order Ref 4";
      editable = [false];
   }
   attribute ProjectId Text {
      fetch = "project_id";
      label = "Project ID";
      maxlength = 10;
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ProjectName Text {
      fetch = "Project_API.Get_Name(PROJECT_ID)";
   }
   @DynamicComponentDependency PROJ
   attribute SubProjectId Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Sub_Project_Id(ACTIVITY_SEQ))";
      label = "Sub Project ID";
   }
   @DynamicComponentDependency PROJ
   attribute SubProjectDescription Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Sub_Project_Description(activity_seq))";
      label = "Sub Project Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute ActivitySeq Number {
      fetch = "activity_seq";
      label = "Activity Sequence";
      editable = [false];
   }
   @DynamicComponentDependency PROJ
   attribute ActivityNo Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Activity_No(ACTIVITY_SEQ))";
      label = "Activity ID";
   }
   @DynamicComponentDependency PROJ
   attribute ActivityDescription Text {
      fetch = "DECODE(ACTIVITY_SEQ, 0, NULL, Activity_API.Get_Description(ACTIVITY_SEQ))";
      label = "Activity Description";
   }
   attribute PartNo Text {
      fetch = "part_no";
      label = "Part No";
      maxlength = 25;
      required = [true];
      format = uppercase;
   }
   attribute ConfigurationId Text {
      fetch = "configuration_id";
      label = "Configuration ID";
      maxlength = 50;
      required = [true];
   }
   attribute Contract Text {
      fetch = "contract";
      label = "Site";
      maxlength = 5;
      editable = [false];
      format = uppercase;
   }
   @DynamicComponentDependency PROJ
   reference ProjectRef(ProjectId) to Project(ProjectId);
   @DynamicComponentDependency PROJ
   reference ActivitySeqRef(ActivitySeq) to Activity(ActivitySeq) {
      label = "Activity Sequence";
   }
}

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------
