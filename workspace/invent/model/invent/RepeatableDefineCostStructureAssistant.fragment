-------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  --------------------------------------------------------------------------------
-- 2019-03-18  RakAlk  MFUXXW4-14942, Created.
-------------------------------------------------------------------------------------------------------
fragment RepeatableDefineCostStructureAssistant;
component INVENT;
layer Core;
description "Repeatable Define Cost Structure Assistant";

include fragment DefineCostStructureAssistant;

----------------------------- CLIENT FRAGMENTS ------------------------------

----------------------------- NAVIGATOR ENTRIES -----------------------------

-------------------------------- MAIN PAGES ---------------------------------

-------------------------------- ASSISTANTS ---------------------------------

assistant RepeatableDefineCostStructureAssistant using DefineCostStructureSet {
   label = "Define Cost Structure";
   input(ParameterList, CallingProcess);
   output(CostDetailIdList);
   init command {
      variable RepeatableInitialValuesStruct Structure(RepeatableDefineCostStructureInitialValuesStructure);
      execute {
         call GetRepeatableDefineCostStructureInitialValues(ParameterList, CallingProcess) into RepeatableInitialValuesStruct;

         //Parameter values extracted from the firest record of ParameterList
         set Contract = RepeatableInitialValuesStruct.Contract;
         set PartNo = RepeatableInitialValuesStruct.PartNo;
         set ConfigurationId = RepeatableInitialValuesStruct.ConfigurationId;
         set LotBatchNo = RepeatableInitialValuesStruct.LotBatchNo;
         set SerialNo = RepeatableInitialValuesStruct.SerialNo;

         set CallingProcess = RepeatableInitialValuesStruct.CallingProcess;
         set CallerObjkey = RepeatableInitialValuesStruct.CallerObjkey;

         //Rest of the parameter list
         set NextParameterList = RepeatableInitialValuesStruct.NextParameterList;

         //This part is same as the non repeating dialog.
         set PartDescription = RepeatableInitialValuesStruct.PartDescription;
         set ConditionCode = RepeatableInitialValuesStruct.ConditionCode;
         set ConditionCodeDescription = RepeatableInitialValuesStruct.ConditionCodeDescription;
         set CostModuleInstalled = RepeatableInitialValuesStruct.CostModuleInstalled;
         set SerialLabel = RepeatableInitialValuesStruct.SerialLabel;
         set CostDetailId = RepeatableInitialValuesStruct.CostDetailId;
         set Company = RepeatableInitialValuesStruct.Company;
         set ShopOrderReceipt = RepeatableInitialValuesStruct.ShopOrderReceipt;
         set GenerateAutomatically = RepeatableInitialValuesStruct.GenerateAutomatically;
         set PopulateWithCostDetailId = RepeatableInitialValuesStruct.PopulateWithCostDetailId;
         set CreateNewLine = RepeatableInitialValuesStruct.CreateNewLine;

      }
   }

   singlestep {
      group DefineCostStructureGroup;
      //group RepeatableDefineCostStructureDebugGroup;
      list CostDetailList(CostDetailArray) {
         visible = [CostModuleInstalled];
      }
   }

   command DefineCostStructureNextCommand;
   command DefineCostStructureFinishCommand;
   command DefineCostStructureCancelAllCommand;
   command GetDefaultCostCommand;
}

--------------------------------- COMMANDS ----------------------------------

command DefineCostStructureNextCommand clone DefineCostStructureOkCommandBase {
   label = "Next";
   enabled = [component.CostDetailList.RowCount > 0 and NextParameterList != null];

   execute {
      super;
      if [CommandSuccess] {
         call DefineCostStructureGoToNextRecord(Objkey);
         exit;
      }
   }
}
command DefineCostStructureFinishCommand clone DefineCostStructureOkCommandBase {
   label = "Finish";
   enabled = [component.CostDetailList.RowCount > 0 and NextParameterList = null];
   variable CostDetailIdTempList Text;
   execute {
      super;
      if [CommandSuccess] {
         if [CostDetailIdList = null] {
            set CostDetailIdList = "OBJKEY=${CallerObjkey}^COST_DETAIL_ID=${CostDetailId}^,";
         }
         else {
            set CostDetailIdTempList = "${CostDetailIdList}OBJKEY=${CallerObjkey}^COST_DETAIL_ID=${CostDetailId}^,";
            set CostDetailIdList = CostDetailIdTempList;
         }
         exit OK;
      }
   }
}

command DefineCostStructureCancelAllCommand for DefineCostStructureVirtual {
   label = "Cancel";
   execute {
      call RemoveAllDetails(Objkey);
      exit CANCEL;
   }
}
--------------------------------- SELECTORS ---------------------------------


---------------------------------- GROUPS -----------------------------------
group RepeatableDefineCostStructureDebugGroup for DefineCostStructureVirtual {
   field CallerObjkey {
      size = Large;
   }
   field NextParameterList {
      multiline = true;
      size = FullWidth;
   }
   field CostDetailIdList {
      multiline = true;
      size = FullWidth;
   }
}
----------------------------------- LISTS -----------------------------------

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

--------------------------- PROJECTION FRAGMENTS ----------------------------
----------------------------- MAIN ENTRY POINTS -----------------------------

------------------------------ ENTITY DETAILS -------------------------------

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

//! TODO: Should be refactored as a function!
action DefineCostStructureGoToNextRecord {
   initialcheck none;
   parameter Objkey Text;
   ludependencies = TemporaryPartCostDetailVirtual, DefineCostStructureVirtual;
}

//! TODO: Should be refactored as a function!
action RemoveAllDetails {
   initialcheck none;
   parameter Objkey Text;
   ludependencies = TemporaryPartCostDetailVirtual, DefineCostStructureVirtual;
}

--------------------------------- FUNCTIONS ---------------------------------

function GetRepeatableDefineCostStructureInitialValues Structure(RepeatableDefineCostStructureInitialValuesStructure) {

   parameter ParameterList Text;
   parameter CallingProcess Text;
}


-------------------------------- STRUCTURES ---------------------------------

structure RepeatableDefineCostStructureInitialValuesStructure {
   attribute Contract Text;
   attribute PartNo Text;
   attribute ConfigurationId Text;
   attribute LotBatchNo Text;
   attribute SerialNo Text;
   attribute CallerObjkey Text;
   attribute NextParameterList Text;

   attribute PartDescription Text;
   attribute ConditionCode Text;
   attribute ConditionCodeDescription Text;
   attribute CostModuleInstalled Boolean;
   attribute SerialLabel Text;
   attribute CostDetailId Number;
   attribute Company Text;
   attribute ShopOrderReceipt Boolean;
   attribute GenerateAutomatically Text;
   attribute PopulateWithCostDetailId Text;
   attribute CreateNewLine Text;

}

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------