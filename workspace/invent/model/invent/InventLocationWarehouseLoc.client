-------------------------------------------------------------------------------------------------------
--  Date        Sign    History
--  ----------  ------  --------------------------------------------------------------------------------
--  2022-02-02  BwItLk  SC21R2-7297, Modified GetHandlingUnitInStockDetails method parameters  by adding BayId, RowId, TierId, BinId to filter out data in Warehouse Navigator in each level.
--  2019-05-02  fandse  SCUXXW4-17693, Added details navigation for Parts In Stock tab and Handling Units In Stock tab.
--  2019-02-15  bajelk  SCUXXW4-16026, Deleted objstate attribute inside overrided BinValues entity.
--  2019-01-27  bajelk  SCUXXW4-15286, Deleted the "Hidden" status in  Storage Capability LOV.
--  2018-11-15  KoDelk  SCUXXW4-6181, Converted from frmInventLocationWarehouseLoc using MTG Version 1.31.
--  ----------  ------  --------------------------------------------------------------------------------
client InventLocationWarehouseLoc;
component INVENT;
layer Core;
projection InventLocationWarehouseLocHandling;

include fragment InventoryPartInStockList;
include fragment HandlingUnitsInStockList;
include fragment ModifyCapacitiesAndConditionsAssistant;

----------------------------- VISUAL COMPONENTS -----------------------------

----------------------------- NAVIGATOR ENTRIES -----------------------------

-------------------------------- MAIN PAGES ---------------------------------
page Form using WarehouseBayBinSet {
   label = "Warehouse Navigator";
   editmode = MultiField;
   selector WarehouseBayBinSelector;
   group InventLocationWarehouseLocGroup;
   tabs {
      tab {
         label = "General";
         arrange {
            group ReceiptControlGroup;
            arrange {
               group VisibilityControlGroup;
               group DefaultPartAvailabilityControlGroup;
            }
         }
      }
      tab {
         label = "Capacities and Conditions";
         singleton CapacitiesAndConditionsSingleton(WarehouseBayBinArray);
         markdowntext {
            text = "|             | Bin Value | Operative Value | Operative Value Source | UoM |
            | ----------- | ---------: | --------------: | --------------: | --: |
            | **Bin Cubic Capacity** | | | | |
            | Width           | ${WidthCapacity} | ${BinWidthCapacityOppValue} | ${BinWidthSource} | ${LengthUom} |
            | Height          | ${HeightCapacity} | ${BinHeightCapacityOppValue} | ${BinHeightSource} | ${LengthUom} |
            | Depth           | ${DeptCapacity} | ${BinDeptCapacityOppValue} | ${BinDepthSource} | ${LengthUom} |
            | Volume          | ${VolumeCapacity} | ${BinVolumeCapacityOppValue} | ${BinVolumeSource} | ${VolumeUom} |
            | **Carrying Capacity** | | | | |
            | Bin             | ${CarryingCapacity} | ${BinCarryingCapacityOppValue} | ${BinCarryingCapacitySource} | ${WeightUom} |
            | **Storage Conditions** | | | | |
            | Min Temperature | ${MinTemperature} | ${MinTemperatureOppValue} | ${MinTemperatureSource} | ${TemperatureUom} |
            | Max Temperature | ${MaxTemperature} | ${MaxTemperatureOppValue} | ${MaxTemperatureSource} | ${TemperatureUom} |
            | Min Humidity    | ${MinHumidity} | ${MinHumidityOppValue} | ${MinHumiditySource} | ${HumidityUom} |
            | Max Humidity    | ${MaxHumidity} | ${MaxHumidityOppValue} | ${MaxHumiditySource} | ${HumidityUom} |";
         }
      }
      tab {
         label = "Handling Unit Capacity";
         list WarehouseBinHuCapacityList(WarehouseBinHuCapacityArray);
      }
      tab {
         label = "Capabilities";
         arrange {
            list WarehouseBinCapabilityList(BinValuesArray);
            list WhseBinCapabilityOperativeList(OperativeValuesArray);
         }
      }
      tab {
         label = "Parts In Stock";
         list InventoryPartInStockList(InventoryPartInStockArray) {
            details = "page/QuantityPerLocationDetails/Form?$filter=PartNo eq $[PartNo] and Contract eq $[Contract] and ConfigurationId eq $[ConfigurationId] and LocationNo eq $[LocationNo] and LotBatchNo eq $[LotBatchNo] and SerialNo eq $[SerialNo] and EngChgLevel eq $[EngChgLevel] and WaivDevRejNo eq $[WaivDevRejNo] and ActivitySeq eq $[ActivitySeq] and HandlingUnitId eq $[HandlingUnitId]";
         }
      }
      tab {
         label = "Handling Units In Stock";
         list HandlingUnitsInStockList using GetHandlingUnitInStockDetails(HandlingUnitsSearchContext.ShowHuLevel, Contract, WarehouseId, BayId, RowId, TierId, BinId) {
            details = "tree/HandlingUnit/HandlingUnitStructureTree?$filter=HandlingUnitId eq $[HandlingUnitId]";
            searchcontext HandlingUnitsSearchContext {
               defaults = GetHandlingUnitsSearchContextDefaults();
            }
         }
         list InventoryPartInStockForHuList(InventoryPartsInStockForHuArray) bind HandlingUnitsInStockList;
      }
   }
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command CustomRemoveCapabilityCommand for OperativeValues {
   label = "Remove Capability";
   mode = SelectedRecords;

   bulkexecute {
      call RemoveCapability(Selection);
   }
}

command EditCapacitiesAndConditionsCommand for WarehouseBayBin {
   label = "Edit";
   enabled = [true];
   icon = "edit";
   style = IconOnly;
   execute {
      assistant ConnectCustomersAssistant("WarehouseBayBin", Contract, WarehouseId, BayId, RowId, TierId, BinId) {
         when OK {
            success("Capacities and Conditions has been saved.");
         }
      }
   }
}
--------------------------------- SELECTORS ---------------------------------
@Override
selector InventoryLocationGroupSelector for InventoryLocationGroup {
   static Description;
}
@Override
selector PartAvailabilityControlSelector for PartAvailabilityControl {
   label = "${Description}";
   static Description;
   fieldorder = AvailabilityControlId, Description, Objstate;
}
@Override
selector HandlingUnitTypeSelector for HandlingUnitType {
   static Description;
}
@Override
selector StorageCapabilitySelector for StorageCapability {
   label = "${Description}";
   static Description;
   fieldorder = StorageCapabilityId, Description, Objstate;
}
---------------------------------- GROUPS -----------------------------------
group InventLocationWarehouseLocGroup for WarehouseBayBin {
   label = "Invent Location Warehouse Location Group";

   field BinId {
      size = Small;
   }
   field Description;
   lov InventoryLocationGroupRef with InventoryLocationGroupSelector {
      description = LocationGroupDescription;
   }
   field InventoryLocationGroupRef.InventoryLocationType {
      size = Small;
      label = "Location Type";
   }
   field LocationSequence;
   field LocationNo {
      size = Small;
   }
   field NoteText {
      size = Small;
   }
}
group ReceiptControlGroup for WarehouseBayBin {
   label = "Receipt Control";

   field ReceiptsBlockedDb {
      editable = [not ReceiptsBlockedParentDb];
      size = Small;
   }
   field ReceiptsBlockedOn;
   field ReceiptToOccupiedBlockedDb {
      editable = [not ReceiptToOccupiedBlockedParentDb];
      size = Small;
   }
   field ReceiptToOccupiedBlockedOn;
   field MixOfPartNumberBlockedDb {
      editable = [not MixOfPartNumberBlockedParentDb];
      size = Small;
   }
   field MixOfPartNumberBlockedOn;
   field MixOfCondCodesBlockedDb {
      editable = [not MixOfCondCodesBlockedParentDb];
      size = Small;
   }
   field MixOfCondCodesBlockedOn;
   field MixOfLotBatchNoBlockedDb {
      editable = [not MixOfLotBatchNoBlockedParentDb];
      size = Small;
   }
   field MixOfLotBatchNoBlockedOn;
   field ExcludeStorageReqValDb {
      editable = [not ExcludeStorageReqValParentDb];
      size = Small;
   }
   field ExcludeStorageReqValOn;
}
group VisibilityControlGroup for WarehouseBayBin {
   label = "Visibility Control";
   field HideInWhseNavigatorDb;
}
group DefaultPartAvailabilityControlGroup for WarehouseBayBin {
   label = "Default Part Availability Control";
   lov AvailabilityControlIdRef with PartAvailabilityControlSelector {
      description = AvailabilityControlIdRef.Description;
   }
   field OperativeValue;
   field OperativeValueSource;
}
----------------------------------- LISTS -----------------------------------
list WarehouseBinHuCapacityList for WarehouseBinHuCapacity {
   lov HandlingUnitTypeIdRef with HandlingUnitTypeSelector {
      description = Description;
   }
   field BinHuTypeCapacity;
}
list WarehouseBinCapabilityList for BinValues {
   label = "Bin Values";
   lov StorageCapabilityIdRef with StorageCapabilitySelector using GetBinValuesActiveState {
      description = StorageCapabilityIdRef.Description;
   }
   field RemovedDb {
      size = Small;
   }
}
list WhseBinCapabilityOperativeList for OperativeValues {
   label = "Operative Value";

   lov StorageCapabilityIdRef with StorageCapabilitySelector {
      description = StorageCapabilityIdRef.Description;
   }
   field Source {
      size = Small;
   }

   commandgroup CommandGroupCmdGroup {

      command CustomRemoveCapabilityCommand;
   }
}

--------------------------------- SINGLETON ---------------------------------
singleton CapacitiesAndConditionsSingleton for WarehouseBayBin {
   commandgroup ModifyCommandGroup {
      command EditCapacitiesAndConditionsCommand;
   }
}
----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------