-----------------------------------------------------------------------------
-- Date        Sign      History
-- ----------  ------   -----------------------------------------------------
-- 2018-08-24  CLEKLK   SAUXXW4-1279, MTG Version: 1.26,Enterprise Explorer Source: frmSparePartIncludedIn, tbwInPmSpare, tbwInStdSpare
-- 2018-08-28  CLEKLK   SAUXXW4-3354, MTG Version: 1.27, Enterprise Explorer Source: tbwInWoSpare
-- 2018-10-09  SHEPLK   SAUXXW4-1636, MTG Version: 1.29, Enterprise Explorer Source: tbwInSerialObject
-- 2018-10-10  DHWELK   SAUXXW4-1288, MTG Version: 1.31, Enterprise Explorer Source: tbwInDetachedPartList - In Detached Part List
-- 2020-01-01  LASSLK   SAXTEND-1244, Implement LOV Filtering
-----------------------------------------------------------------------------

client PartIncludedInAnalysis;
component EQUIP;
layer Core;
projection PartIncludedInAnalysisHandling;
include fragment ReplacePartAssistant;
include fragment CustomerInfoCustcategoryPubSelector;
include fragment EquipmentAllObjectUivSelector;
include fragment EquipInvPurPartSelector;
include fragment EquipmentAllObjectPerfQuery;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry ServFunctionalObjectNavEntry parent EquipNavigator.ServEquipmentSparePartList at index 5 {
      label = "Part Included in Analysis";
      page Form;
   }
   entry MaintFunctionalObjectNavEntry parent EquipNavigator.MaintEquipmentSparePartList at index 5 {
      label = "Part Included in Analysis";
      page Form;
   }
}
-------------------------------- MAIN PAGES ---------------------------------
page Form using EquipmentPartQuerySet {
   label = "Part Included in Analysis";
   selector PurchasePartQuerySelector;
   group PurchasePartInfoGroup;

   tabs {
      tab {
         label = "Object Spare Part List";
         list InObjectSparePartListList(EquipmentObjectSpareArray);
      }
      tab {
         label = "Detached Spare Part List";
         list InDetachedPartListList(DetachedSparePartListArray) {
            details = "page/DetachedSparePartList/Form?$filter= PartNo eq $[SpareId]  and Contract eq $[SpareContract]";
         }
      }


      tab {
         label = "Serial Objects";
         list InSerialObjectList(SerialObjectArray) {
            details = "page/SerialObject/Form?$filter=MchCode eq $[MchCode] and Contract eq $[Contract]";
         }
      }
      tab {
         label = "PM Actions";
         @DynamicComponentDependency PM
         list InPmSpareList(PmActionArray);
      }
      @DynamicComponentDependency PCMSTD
      tab {
         label = "Work Task Templates";
         list InStdSpareList(TaskTemplateSpareArray) {
            details = "page/WorkTaskTemplates/List?$filter= TaskTemplateId eq $[TaskTemplateId] and TaskTemplateRev eq $[TaskTemplateRev]";
         }
      }
      @DynamicComponentDependency WO
      tab {
         label = "WO Maint Material Req Lines";
         list InWoSpareList(MaintMReqLineArray) {
            details = "page/MaintenanceMaterialRequisition/Form?$filter= MaintMaterialOrderNo eq $[MaintMaterialOrderNo]";
         }
      }
   }
   commandgroup CommandGroupCmdGroup {

      command ReplacePartCommand;
   }
}

--------------------------------- COMMANDS ----------------------------------

@DynamicComponentDependency PM
command SeparatePMActionCommand for PmActionSparePart {
   label = "PM Action";
   enabled = [true];
   mode = SelectedRecords;
   bulkexecute {
      bulknavigate "page/PmActions/List?$filter= PmNo eq $[PmNo] and PmRevision eq $[PmRevision] and OrgContract eq $[SpareContract]";
   }
}
command ReplacePartCommand for EquipmentPartQuery {
   label = "Replace Part";
   enabled = [true];
   execute {
      assistant SubstituteSparePartAssistant(PartNo, Contract) {
         when OK {
            exit;
         }
         when CANCEL {
            exit;
         }

      }
   }
}



--------------------------------- SELECTORS ---------------------------------
selector PurchasePartQuerySelector for EquipmentPartQuery {
   label = "${PartNo} ${Description}";
   static PartNo;
   static Description;
   static Contract {
      label = "Site";
   }
}
@Override
selector IsoUnitSelector for IsoUnit {
   label = "${Description}";
   static UnitCode;
   static Description;
   static PresentFactor;
}
---------------------------------- GROUPS -----------------------------------

group PurchasePartInfoGroup for EquipmentPartQuery {
   label = "";
   field PartNo {
      size = Medium;
      format = uppercase;

   }
   field MaintDescription {
      size = Medium;
   }
   field Contract {
      size = Small;
      label = "Site";
      format = uppercase;

   }
   @DynamicComponentDependency INVENT
   field TypeDesignation {
      size = Small;
      format = uppercase;

   }
   @DynamicComponentDependency INVENT
   field DimQuality {
      size = Small;
      label = "Dimension/Quality";
   }
}

----------------------------------- LISTS -----------------------------------
@DynamicComponentDependency PCMSTD
list InStdSpareList for TaskTemplateSpare {
   lov TaskTemplateRef with ReferenceTaskTemplateSelector {
      search = TaskTemplateRev, Definition;
      size = Medium;
      label = "Task Template ID";
   }
   field TaskTemplateRef.Definition {
      size = Medium;
      label = "Definition";
   }
   lov TaskTemplateRevRef  with ReferenceTaskTemplateSelector {
      search = TaskTemplateRev, Definition;
      label = "Revision";
      size = Small;
   }
   badge Status {
      emphasis StatePreliminary = [Status = "Preliminary"];
      emphasis StateActive = [Status = "Active"];
      emphasis StateObsolete = [Status = "Obsolete"];
      style = TextOnly;
   }
   field DimensionQlty {
      size = Medium;
      label = "Dimension/Quality";
   }
   field TypeDesignation {
      size = Medium;
      label = "Type Designation";
   }

   lov UnitRef with IsoUnitSelector {
      search = UnitCode, Description;
      size = Small;
   }
   field PlannedQty {
      size = Medium;
   }

}

list InObjectSparePartListList for EquipmentObjectSpare {
   lov EquipmentObjectRef with ReferenceEquipmentObjectSelector {
      search = MchCode, MchName;
      size = Medium;
      label = "Object ID";
   }
   field EquipmentObjectPerfRef.MchName {
      size = Medium;
      label = "Description";
   }
   lov SpareContractRef with ReferenceUserAllowedSiteLovSelector {
      search = Contract, ContractDesc;
      size = Small;
   }
   field Qty;
   field MchPart {
      size = Medium;
   }
   field DrawingNo {
      size = Small;
   }
   field DrawingPos {
      size = Medium;
   }
   field Note {
      size = Medium;
      multiline = true;
   }
}

@DynamicComponentDependency PM
list InPmSpareList for PmActionSparePart {
   orderby = PmNo;
   field PmNo {
      label = "PM No";
   }
   field PmRevision {
      size = Medium;
   }
   field Contract {
      size = Small;
   }
   field State {
      size = Medium;
   }
   field QtyPlan;
   @DynamicComponentDependency PURCH
   field PurchasePartRef.InventoryFlag {
      size = Medium;
      label = "Inventory Part";
   }
   field InventoryPartRef.DimQuality {
      size = Medium;
      label = "Dimension/Quality";
   }
   field InventoryPartRef.TypeDesignation {
      size = Medium;
      label = "Type Designation";
   }
   field QuantityOnHand {
      size = Small;
   }
   @DynamicComponentDependency PURCH
   field Unit {
      size = Small;
   }
   field TaskTemplateID {
      size = Medium;
   }
   field TaskTemplateRevision {
      size = Medium;
   }
   @DynamicComponentDependency PCMSTD
   field Definition {
      size = Large;
   }
   @DynamicComponentDependency PCMSTD
   field TaskTemplateStatus {
      size = Medium;
   }
   lov ConditionCodeRef with ReferenceConditionCodeSelector {
      search = ConditionCode, Description;
      size = Medium;
   }
   field PartOwnership {
      size = Small;
   }
   lov OwnerRef with ReferenceCustomerInfoCustcategoryPubSelector {
      search = CustomerId, Name;

      size = Small;
   }
   field SpareContract {
      columnexclude = [true];
   }

   commandgroup CommandGroup2CmdGroup {

      command SeparatePMActionCommand;
   }
}
@DynamicComponentDependency WO
list InWoSpareList for MaintMaterialReqLine {
   orderby = MaintMaterialOrderNo;
   field MaintMaterialOrderNo;
   field RequisitionSite {
      size = Medium;
   }
   field WoNo;
   field WorkOrderRef.Contract {
      size = Small;
      label = "WO Site";
   }
   field WorkOrderRef.MchCode {
      size = Medium;
      label = "Object ID";
   }
   field WorkOrderRef.MchCodeContract {
      size = Small;
      label = "Object Site";
   }
   field WorkOrderRef.ErrDescr {
      size = Large;
      label = "Directive";
   }
   field State {
      size = Medium;
      label = "Status";
   }
   field LineItemNo {
      size = Small;
   }
   // Column 'PartNo' (colSpareID) is in EE designed having the attribute 'Visible = false', for why it is excluded from being added to the .client file.
   // Column 'SpareContract' (colSpareContract) is in EE designed having the attribute 'Visible = false', for why it is excluded from being added to the .client file.
   field InventoryPartRef.DimQuality {
      size = Medium;
      label = "Dimension/Quality";
   }
   field InventoryPartRef.TypeDesignation {
      size = Medium;
      label = "Type Designation";
   }
   field PlanQty;
   @DynamicComponentDependency PURCH
   field Unit {
      size = Small;
   }
   // fieldranking MaintMaterialOrderNo, RequisitionSite, WoNo, WorkOrderRef.Contract, WorkOrderRef.MchCode, WorkOrderRef.MchCodeContract, WorkOrderRef.ErrDescr, MaintMaterialRequisitionRef.State, LineItemNo, InventoryPartRef.DimQuality;

}

list InSerialObjectList for EquipmentSerial {
   field MchCode {
      size = Medium;
   }
   field MchName {
      size = Large;
   }
   field Contract {
      size = Small;
   }
   lov PartNoRef with ReferencePartCatalogSelector {
      search = PartNo, Description;
      size = Medium;
   }
   field SerialNo {
      size = Medium;
   }
   badge OperationalStatus {
      size = Medium;
      style = TextOnly;
      emphasis StatePlanned = [OperationalStatus = "PlannedForOperation"];
      emphasis StateConfirmed = [OperationalStatus = "InOperation"];
      emphasis StateCancelled = [OperationalStatus = "Scrapped"];
      emphasis StateObsolete = [OperationalStatus = "NotApplicable"];
      emphasis StateInProgress = [OperationalStatus = "PartiallyInOperation"];
      emphasis StateStopped = [OperationalStatus = "OutofOperation"];
   }
   field OperationalCondition {
      size = Medium;
   }
   badge SerialState {
      style = TextOnly;
      size = Medium;
      emphasis Complementary1 = [CurrentPosition = "InFacility"];
      emphasis Complementary2 = [CurrentPosition = "Issued"];
      emphasis Complementary3 = [CurrentPosition = "UnderTransportation"];
      emphasis Complementary4 = [CurrentPosition = "InRepairWorkshop"];
      emphasis Complementary5 = [CurrentPosition = "InInventory"];
      emphasis Complementary6 = [CurrentPosition = "ReturnedToSupplier"];
      emphasis Complementary7 = [CurrentPosition = "Contained"];
   }
   field LatestTransaction {
      size = Large;
   }
   field SupContract {
      size = Small;
   }
   field SupMchCode {
      size = Medium;
   }

}

list InDetachedPartListList for EquipmentSpareStructure {
   lov SpareIdRef with ReferenceEquipInvPurPartSelector {
      search = PartNo, Description;
      size = Medium;
   }
   field PartDescription {
      size = Medium;
   }
   lov SpareContractRef with ReferenceUserAllowedSiteLovSelector {
      search = Contract, ContractDesc;
      size = Small;
   }
   field InventoryPart {
      size = Medium;
   }
   @DynamicComponentDependency INVENT
   field DimQuality {
      size = Small;
      label = "Dimension/Quality";
   }
   @DynamicComponentDependency INVENT
   field TypeDesignation {
      size = Small;
      label = "Type Designation";
   }
   @DynamicComponentDependency INVENT
   field QuantityOnHand {
      size = Small;

   }
   field UnitOfMeasure {
      size = Small;
   }
   field Qty {
      size = Small;

   }
   field MchPart {
      size = Small;
   }
   field DrawingNo {
      size = Small;
   }
   field DrawingPos {
      size = Small;
   }
   field Note {
      size = Large;
   }

}


----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------