-----------------------------------------------------------------------------
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  181010  TAJALK  SAUXXW4-1304 tbwSparePartStructure - Detached Spare Part Lists generated from MTG 1.30
--  200102  LASSLK  SAXTEND-1244, Implement LOV Filtering
-----------------------------------------------------------------------------
client DetachedSparePartLists;
component EQUIP;
layer Core;
projection DetachedSparePartListsHandling;
include fragment UserAllowedSiteLovSelector;
include fragment CustomerInfoCustcategoryPubSelector;
include fragment CopySparePartStructureDialog;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry ServDetachedSparePartListsNavEntry parent EquipNavigator.ServEquipmentSparePartList at index 2 {
      label = "Detached Spare Part Lists";
      page List home EquipmentSpareStructure;
   }
   entry MaintDetachedSparePartListsNavEntry parent EquipNavigator.MaintEquipmentSparePartList at index 2 {
      label = "Detached Spare Part Lists";
      page List home EquipmentSpareStructure;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page List using EquipmentSpareStructureSet {
   label = "Detached Spare Part Lists";
   list SparePartStructureList;
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command ViewCreateStructureCommand for EquipmentSpareStructure {
   label = "View/Create Structure";
   icon = "popup";
   style = IconOnly;
   mode = SelectedRecords;
   enabled = [SpareId != null and SpareContract != null];
   bulkexecute {
      bulknavigate  "page/DetachedSparePartList/Form?$filter=SpareId eq $[SpareId] and SpareContract eq $[SpareContract]";
   }
}
@DynamicComponentDependency PURCH
command CopySparePartListCommand for EquipmentSpareStructure {
   label = "Copy Spare Part List";
   mode = SingleRecord;
   enabled = [(not component.SparePartStructureList.IsEmpty)];
   execute {
      dialog CopySparePartListDialog(SpareContract, SpareId, PartDescription) {
         when OK {
            exit OK;
         }
         when CANCEL {
            exit CANCEL;
         }
      }
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector ConditionCodeSelectLov for ConditionCode {
   field ConditionCode;
   field Description;
   field ConditionCodeType {
      label = "Default Condition Code";
   }
}

@Override
@DynamicComponentDependency PURCH
selector ReferencePurchasePartLovSelector for PurchasePart {
   field Contract;
   field PartNo;
   field Description;
   field InventoryFlag;
}

@Override
selector CustomerInfoCustcategoryPubSelector for CustomerInfoCustcategoryPub {
   label = "${CustomerId}";
   static CustomerId {
      label = "Customer ID";

   }
}
---------------------------------- GROUPS -----------------------------------

----------------------------------- LISTS -----------------------------------
list SparePartStructureList for EquipmentSpareStructure {
   orderby = SpareId;
   @DynamicComponentDependency PURCH
   lov PurchaseSpareIdRef with ReferencePurchasePartLovSelector {
      search = PartNo, Description;
   }
   field PartDescription {
      size = Large;
   }
   @DynamicComponentDependency INVENT
   lov SpareContractRef with ReferenceUserAllowedSiteLovSelector {
      search = Contract, ContractDesc;
      size = Small;
   }
   lov ConditionCodeRef with ConditionCodeSelectLov {
      search = ConditionCode, Description;
      description = ConditionCodeRef.Description;
   }
   field PartOwnership;
   @DynamicComponentDependency INVENT
   lov OwnerRef with ReferenceCustomerInfoCustcategoryPubSelector {
      search = CustomerId, Name;
      description = OwnerPerfRef.Name;
   }
   @DynamicComponentDependency INVENT
   field InventoryPart;
   @DynamicComponentDependency INVENT
   field InventoryPartRef.DimQuality {
      size = Medium;
      label = "Dimension/Quality";
   }
   @DynamicComponentDependency INVENT
   field InventoryPartRef.TypeDesignation {
      size = Small;
      label = "Type Designation";
   }
   @DynamicComponentDependency INVENT
   field QuantityOnHand;
   field Uom {
      size = Small;
   }
   commandgroup CommandGroupCmdGroup {

      command ViewCreateStructureCommand;
      @DynamicComponentDependency PURCH
      command CopySparePartListCommand;
   }
}

@Override
list CustomerInfoCustcategoryPubLovList for CustomerInfoCustcategoryPub {
   static CustomerId {
      label = "Customer ID";
   }
   static CorporateForm {
      label = "Form of Business";
   }
   static IdentifierRefValidation {
      label = "ID Reference Validation";
   }
}


----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------


