-----------------------------------------------------------------------------
--  Date        Sign    History
--  ----------  ------  -----------------------------------------------------
--  2019-03-15  TAJALK  SAUXXW4-1254, Created
-----------------------------------------------------------------------------
projection CustomerEquipmentObjectHandling;
component EQUIP;
layer Core;
description "View Customer Equipment Objects";
category Users;

--------------------------------- FRAGMENTS ---------------------------------
include fragment CompanyHavingSiteSelector;
include fragment CustomerInfoCustcategoryPubSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset EquipmentObjectPartySet for EquipmentObjectParty;
------------------------------ ENTITY DETAILS -------------------------------
@Override
entity EquipmentObjectParty {
   crud = Read;
   from = "customer_object_addr_lov1";
   keys = Identity, MchCode, AddressId;
   attribute Identity Text {
      editable = [false];
   }
   attribute MchCode Text {
      editable = [false];
      label = "Object ID";
   }
   attribute MchName Text {
      fetch = "mch_name";
      label = "Object Description";
      editable = [false];
   }
   attribute MchCodeContract Text {
      fetch = "mch_code_contract";
      label = "Site";
      editable = [false];
   }
   attribute SupMchCode Text {
      fetch = "sup_mch_code";
      label = "Belongs To";
      format = uppercase;
   }
   attribute SupContract Text {
      fetch = "sup_contract";
      label = "Belongs To Site";
      format = uppercase;
   }
   attribute MchType Text {
      fetch = "mch_type";
      label = "Object Type";
      editable = [false];
      format = uppercase;
   }
   attribute AddressId Text {
      fetch = "NVL(address_id,' ')";
      label = "Address Id";
      editable = [false];
   }
   attribute Address1 Text {
      fetch = "address1";
      label = "Address 1";
      editable = [false];
   }
   attribute Address2 Text {
      fetch = "address2";
      label = "Address 2";
      editable = [false];
   }
   attribute Address3 Text {
      fetch = "address3";
      label = "Address8";
      editable = [false];
   }
   attribute Address4 Text {
      fetch = "address4";
      label = "Address9";
      editable = [false];
   }
   attribute Address5 Text {
      fetch = "address5";
      label = "Address10";
      editable = [false];
   }
   attribute Address6 Text {
      fetch = "address6";
      label = "Address11";
      editable = [false];
   }
   attribute ZipCode Text {
      fetch = "zip_code";
      label = "Address 3";
      editable = [false];
   }
   attribute City Text {
      fetch = "city";
      label = "Address 4";
      maxlength = 35;
      editable = [false];
   }
   attribute County Text {
      fetch = "county";
      label = "County";
      editable = [false];
   }
   attribute Country Text {
      fetch = "country";
      label = "Address 6";
      maxlength = 35;
   }
   attribute State Text {
      fetch = "State";
      label = "Address 5";
   }
   attribute CountryCode Text {
      fetch = "country_code";
      label = "Country Code";
      editable = [false];
      format = uppercase;
   }
   attribute PrimaryAddress Text {
      fetch = "primary_address";
      label = "Primary Address";
      editable = [false];
   }
   attribute ObjLevel Text {
      fetch = "obj_level";
      label = "Object Level";
   }
   attribute Company Text {
      fetch = "Site_API.Get_Company(mch_code_contract)";
   }
   attribute OperationalStatus Text {
      fetch = "operational_status";
   }
   attribute OperationalStatusDb Text {
      fetch = "operational_status_db";
   }

   reference SupMchCodeRef(SupContract, SupMchCode) to EquipmentObject(Contract, MchCode) {
      label = "Belongs To";
   }
   reference SupContractRef(SupContract) to CompanyHavingSite(Company) {
      label = "Belongs To Site";
   }
   reference CountryRef(Country) to IsoCountry(CountryCode) {
      label = "Address 6";
   }
   @DynamicComponentDependency PCMSCI
   array PscContrProductArray(MchCode, Contract)  to PscContrProduct(MchCode, MchContract);
}

@Override
@DynamicComponentDependency PCMSCI
entity PscContrProduct {
   crud = Read;
   from = "psc_contr_srv_line_object";
   where = "NVL(date_from, SYSDATE) <= SYSDATE AND NVL(expiry_date, SYSDATE) >= SYSDATE AND OBJSTATE = 'Active'";
//   AND ((contract_id, line_no) IN (SELECT contract_id, line_no
// 											FROM psc_srv_line_objects
// 											WHERE mch_code = :child.MchCode
//                                 AND mch_contract = :child.Contract))";


   attribute DateFrom Date {
      fetch = "date_from";
      label = "Date From";
      editable = [false];
   }
   attribute MchCode Text {
      label = "Mch Code";
   }
   attribute MchContract Text {
      label = "Mch Contract";
   }
   attribute ExpiryDate Date {
      fetch = "expiry_date";
      label = "Expiry Date";
      editable = [false];
   }
   attribute WorkTypeId Text {
      label = "Work Type";
      required = [true];
   }
   reference ScServiceContractRef(ContractId) to ScServiceContract(ContractId);
}

---------------------------------- QUERIES ----------------------------------

