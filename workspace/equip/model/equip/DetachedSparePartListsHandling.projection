-----------------------------------------------------------------------------
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  181010  TAJALK  SAUXXW4-1304 tbwSparePartStructure - Detached Spare Part Lists generated from MTG 1.30
-----------------------------------------------------------------------------
projection DetachedSparePartListsHandling;
component EQUIP;
layer Core;
description "View Detached Spare Part Lists";
category Users;
include fragment CustomerInfoCustcategoryPubSelector;
include fragment UserAllowedSiteLovSelector;
include fragment CopySparePartStructureDialog;
@DynamicComponentDependency PURCH
include fragment PurchasePartLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset EquipmentSpareStructureSet for EquipmentSpareStructure;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity EquipmentSpareStructure {
   crud = Read;
   from = "equipment_spare_struc_distinct";
   ludependencies = EquipmentSpareStructure;
   keys = SpareSeq, SpareContract, SpareId, ComponentSpareId, ComponentSpareContract {
      where = "SPARE_SEQ =:SpareSeq and SPARE_CONTRACT = :SpareContract and SPARE_ID = :SpareId and COMPONENT_SPARE_ID = :ComponentSpareId and COMPONENT_SPARE_CONTRACT = :ComponentSpareContract ";
   }
   use attributes = ConditionCode, PartOwnership, Owner, Qty, DrawingNo, DrawingPos, MchPart, Note;
   attribute SpareId Text {
      label = "Part No";
   }
   attribute PartDescription Text {
      fetch = "Maintenance_Spare_API.Get_Description(spare_contract, spare_id)";
      label = "Part Description";
      maxlength = 2000;
   }
   attribute SpareContract Text {
      label = "Site";
   }
   attribute PartOwnership Enumeration(PartOwnership) {
      fetch = "PART_OWNERSHIP_DB";
      label = "Ownership";
   }
   @DynamicComponentDependency ORDER
   attribute OwnerName Text {
      fetch = "Cust_Ord_Customer_API.Get_Name(owner)";
      label = "Owner Name";
      maxlength = 2000;
   }
   @DynamicComponentDependency INVENT
   attribute InventoryPart Enumeration(InventoryFlag) {
      fetch = "Maintenance_Spare_API.Get_Inventory_Flag(spare_contract, spare_id)";
      label = "Inventory Part";
   }
   @DynamicComponentDependency INVENT
   attribute QuantityOnHand Number {
      fetch = "Inventory_Part_In_Stock_API.Get_Inventory_Qty_Onhand(spare_contract, spare_id, null)";
      label = "Quantity On Hand";
   }
   attribute Uom Text {
      fetch = "Maintenance_Spare_API.Get_Unit_Meas(spare_contract, spare_id)";
      label = "UoM";
      maxlength = 2000;
   }
   @DynamicComponentDependency INVENT
   reference InventoryPartRef(SpareContract, SpareId) to InventoryPart(Contract, PartNo);
   @DynamicComponentDependency INVENT
   reference SpareContractRef(SpareContract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference ConditionCodeRef(ConditionCode) to ConditionCode(ConditionCode) {
      label = "Condition Code";
   }
   @DynamicComponentDependency INVENT
   reference OwnerRef(Owner) to CustomerInfoCustcategoryPub(CustomerId) {
      label = "Owner";
   }
   reference OwnerPerfRef(Owner) to CustomerInfo(CustomerId);
   @DynamicComponentDependency PURCH
   reference PurchaseSpareIdRef(SpareContract, SpareId) to PurchasePart(Contract, PartNo) {
      label = "Part No";
   }
}

@Override
entity ConditionCode {
   attribute ConditionCodeType Enumeration(ConditionCodeType) {
      label = "Default Condition Code";
   }
}

@Override
@DynamicComponentDependency PURCH
entity PurchasePart {
   attribute InventoryFlag Enumeration(InventoryFlag) {
      fetch = "inventory_flag";
      implementationtype = "VARCHAR2(20)";
   }
}

------------------------------- ENUMERATIONS --------------------------------
@Override
@DynamicComponentDependency INVENT
enumeration InventoryFlag {
   enumerationtype = Standard;
   exec = "Inventory_Flag_API";
   value = "Inventory Part" {
      identifier = "InventoryPart";
      label = "Inventory Part";
   }
   value = "Non Inventory Part" {
      identifier = "NonInventoryPart";
      label = "Non Inventory Part";
   }
}

@Override
enumeration PartOwnership {
   enumerationtype = Standard;
   exec = "Part_Ownership_API";
   value = "Company Owned" {
      identifier = "CompanyOwned";
      label = "Company Owned";
   }
   value = "Customer Owned" {
      identifier = "CustomerOwned";
      label = "Customer Owned";
   }
   value = "Company Rental Asset" {
      identifier = "CompanyRentalAsset";
      label = "Company Rental Asset";
   }
}

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------



