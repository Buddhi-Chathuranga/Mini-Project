--------------------------------------------------------------------------------------
-- Date       Sign   History
-- ---------- ------ ---------------------------------------------------------------
-- 2018-05-16 KrRaLK SAUXXW4-1277, Converted from frmPartyLiast using MTG Version: 1.19
--------------------------------------------------------------------------------------
projection PartyListHandling;
component EQUIP;
layer Core;
description "Manage Equipment Basic Data - Party List";
category Users;

include fragment UserAllowedSiteLovSelector;
include fragment CustomerInfoCustcategoryPubSelector;
include fragment PersonInfoLovSelector;
include fragment EquipmentObjectParty4Selector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset PartyListSet for PartyList;


------------------------------ ENTITY DETAILS -------------------------------
@Override
entity PartyList {
   crud = Create, Read, Update, Delete;
   from = "party_list";
   exec = "PARTY_LIST_API";
   keys = ListId {
      where = "LIST_ID = :ListId";
   }
   supportwarnings = [true];
   attribute ListId Text {
      fetch = "LIST_ID";
      label = "Party List ID";
      maxlength = 100;
      required = [true];
      editable = [ETag = null];
   }
   attribute ListDescription Text {
      fetch = "LIST_DESCRIPTION";
      label = "Description";
      maxlength = 100;
      required = [true];
   }
   attribute Contract Text {
      fetch = "CONTRACT";
      label = "Site";
      maxlength = 5;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute Global Boolean("TRUE", "FALSE") {
      fetch = "GLOBAL";
      label = "Use on all Sites";
      required = [true];
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
      // where = "<Define static Where statement for LOV, typically defined within a PM_DataItemLovUserWhere message>";
   }
   array PartyListItemsArray(ListId) to PartyListItem(ListId);
}
@Override
entity PartyListItem {
   crud = Create, Read, Update, Delete;
   from = "party_list_item";
   exec = "PARTY_LIST_ITEM_API";
   keys = ListId, PartyType, PartyId {
      where = "LIST_ID = :ListId and PARTY_TYPE_DB = :PartyType and PARTY_ID = :PartyId";
   }
   attribute ListId Text {
      fetch = "LIST_ID";
      label = "List ID";
      maxlength = 20;
      required = [true];
      // searchable = false;
      editable = [ETag = null];
   }
   attribute PartyType Enumeration(ObjectPartyType) {
      fetch = "PARTY_TYPE_DB";
      label = "Party Type";
      required = [true];
      editable = [ETag = null];
   }
   attribute PartyId Text {
      fetch = "PARTY_ID";
      label = "Party ID";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute Name Text {
      fetch = "Equipment_Object_Party_API.Get_Name(PARTY_ID, PARTY_TYPE)";
      label = "Party Name";
      maxlength = 100;
      editable = [false];
   }
   attribute ValidFrom Date {
      fetch = "VALID_FROM";
      label = "Valid From";
      required = [true];
   }
   attribute ValidTo Date {
      fetch = "VALID_TO";
      label = "Valid To";
      required = [true];
   }
   attribute PartyType2 Text {
      fetch = "OBJECT_PARTY_TYPE_API.Encode(PARTY_TYPE)";
      label = "Party Type";
      maxlength = 20;
      editable = [ETag = null];
   }
   reference PartyIdPersonInfoRef(PartyId) to PersonInfoLov(PersonId) {
      label = "Party Identity";
   }
   reference PartyIdCustInfoRef(PartyId) to CustomerInfoCustcategoryPub(CustomerId) {
      label = "Party Identity";
   }
   reference PartyIdSupInfoRef(PartyId) to SupplierInfo(SupplierId) {
      label = "Party Identity";
   }
   reference PartyIdManufInfoRef(PartyId) to ManufacturerInfo(ManufacturerId) {
      label = "Party Identity";
   }
   reference PartyIdOwnerInfoRef(PartyId) to OwnerInfo(OwnerId) {
      label = "Party Identity";
   }
   reference PartyIdEquipObjectRef(PartyId) to EquipmentObjectParty4(PartyId) {
      label = "Party Identity";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------
