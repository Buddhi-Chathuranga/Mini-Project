-----------------------------------------------------------------------------

--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  200106  LASSLK  SAXTEND-1244, Implement LOV Filtering
--  210625  SHAGLK  AM21R2-1493,  Modified GetDestMchCode function to filter DestMchCodeRef
--  210720  SHAGLK  AM21R2-1493,  Added method ValidateObjToolEquipConnection and removed GetDestMchCode
--  210721  SHAGLK  AM21R2-1493,  Removed ValidateObjToolEquipConnection
-----------------------------------------------------------------------------
fragment MoveSerialObjectDialog;
component EQUIP;
layer Core;
description "Move Serial Object dialog...";


include fragment OrgCodeAllowedSiteLov1Selector;

----------------------------- CLIENT FRAGMENTS ------------------------------

dialog DlgMoveIndividual for StructDlgMoveIndividual {
   label = "Move Serial Object - ${MchCode} - ${MchName}";

   input(MchCode, MchName, Contract, EquipmentObjectSeq, SupMchCode, SupContract, Company, SupMchName);
   group GbMove_Serial_Object_Details_Group;
   group GbMove_Serial_Destination_Details_Group;
   group GbMove_Serial_To_New_Structure_Group {
      visible = [IsNewParent];
   }
   group GbMove_Serial_Pm_Info_Group {
      visible = [ToContract != null];
   }
   group GbMove_Serial_NotesGroup;

   commandgroup ButtonCommandGroup {
      command Ok {
         enabled = [Signature != null and MchCode != null];
         execute {
            call Move(DfComment, Contract, MchCode, EquipmentObjectSeq, SupMchCode, SupContract, ToCompany, ToContract, ToSupMchCode, ToSupContract, ToEquipmentObjectSeq, Signature, IsNewPmRev, WoSite, OrgCode)into InfoMessageNo {
               when FAIL {
                  error("${error.Message}");
               }
            }
         }
      }
      command Cancel;
   }
}
---------------------------------- GROUPS -----------------------------------
group GbMove_Serial_ObjectGroup for StructDlgMoveIndividual {
   label = "Move Serial Object - ${MchCode} - ${MchName}";
   field SupContract {
      editable = [false];
      size = Large;
   }

   field SupMchCode {
      editable = [false];
      size = Large;
   }
   field SupMchName {
      editable = [false];
      size = Large;
   }
   lov ToContractRef with ReferenceUserAllowedSiteLovSelector {
      search = Contract, ContractDesc;
      size = Large;
      validate command {
         execute {

            call GetCompnay(Contract) into Company;
         }
      }

   }

   field Company {
      visible = [false];
   }
   field MchCode {
      visible = [false];
   }
   field MchName {
      visible = [false];
   }
}

group GbMove_Serial_Object_Details_Group for StructDlgMoveIndividual {
   label = "Serial Object";
   field Company {
      editable = [false];
      size = Medium;

   }
   field Contract {
      label = "Site";
      editable = [false];
      size = Large;

   }
   field SupContract {
      editable = [false];
      size = Medium;
   }
   field SupMchCode {
      editable = [false];
      size = Medium;
   }
   field SupMchName {
      editable = [false];
      size = Medium;
   }
   field MchCode {
      visible = [false];
   }
   field MchName {
      visible = [false];
   }
}

group GbMove_Serial_Destination_Details_Group for StructDlgMoveIndividual {
   label = "New Site";
   @DynamicComponentDependency WO
   lov ToCompanyRef with ReferenceUserAllowedCompanyLovSelector {
      search = Company;
   }

   lov ToContractRef with ReferenceUserAllowedCompanySiteLovSelector {
      label = "Site";
      size = Large;
      search = Contract, ContractDesc;
      validate command {
         execute {
            set ToSupContract = ToContract;
            set WoSite = ToContract;
         }
      }
   }
   field IsNewParent {
      label = "Change Belongs to Object";
      validate command {
         execute {
            if [not IsNewParent] {
               set ToSupContract = null;
               set ToSupMchCode = null;
               set ToEquipmentObjectSeq = null;
            }
         }
      }
   }
}

group GbMove_Serial_To_New_Structure_Group for StructDlgMoveIndividual {
   label = "New Belongs to Object";

   lov ToSupContractRef with ReferenceUserAllowedSiteLovSelector {
      label = "Object Site";
      search = Contract, ContractDesc;
      size = Large;
   }
   lov ToSupMchCodeRef with ReferenceEquipmentAllObjectLov1Selector {
      label = "Object ID";
      search = MchCode, MchName;
      size = Large;
   }
   field DestSupMchName {
      editable = [false];
      size = Large;
   }
}

group GbMove_Serial_Pm_Info_Group for StructDlgMoveIndividual {
   label = "New PM Revision Information";

   field IsNewPmRev {
      label = "Create New PM Revision";
      size = FullWidth;
      validate command {
         execute {
            if [not IsNewPmRev] {
               set WoSite = null;
               set OrgCode = null;
            }
         }
      }
   }
   lov WoSiteRef with ReferenceUserAllowedSiteLovSelector {
      visible = [IsNewPmRev];
      required = [IsNewPmRev];
      size = Small;
      search = Contract, ContractDesc;
      validate command {
         execute {
            set OrgCode = null;
         }
      }
   }
   lov OrgCodeRef with ReferenceOrgCodeAllowedSiteLov1Selector {
      visible = [IsNewPmRev];
      description = OrgCodeRef.Description;
      size = Medium;
      search = OrgCode, Description;
      required = [IsNewPmRev];
   }
}

group GbMove_Serial_NotesGroup for StructDlgMoveIndividual {
   label = "Notes";

   lov SignatureRef with ReferenceEmployeeLovSelector {
      search = EmployeeId, Name;
      size = Small;
      contactwidget {
         enabled = [true];
         source = Person;
      }

      validate command
         {
         execute
            {
            call GetMaxEmployeeIdForMoveSerial(Company, Signature)into SignatureId;

         }
      }
   }
   field SignatureId {
      visible = [false];
   }
   field DfComment;
}

--------------------------- PROJECTION FRAGMENTS ----------------------------

   ---------------------------------- ACTIONS ----------------------------------
action Move Number {
   initialcheck implementation;
   parameter  Comment               Text;
   parameter  Contract              Text;
   parameter  MchCode               Text;
   parameter  EquipmentObjectSeq    Number;
   parameter  SupMchCode            Text;
   parameter  SupContract           Text;
   parameter  ToCompany             Text;
   parameter  ToContract            Text;
   parameter  ToSupMchCode          Text;
   parameter  ToSupContract         Text;
   parameter  ToEquipmentObjectSeq  Number;
   parameter  Signature             Text;
   parameter  IsNewPmRev            Boolean;
   parameter  WoSite                Text;
   parameter  OrgCode               Text;

   ludependencies = EquipmentSerial;
   ludependencies = EquipmentObject;
}


  --------------------------------- FUNCTIONS ---------------------------------

function GetSupMchName Text {
   parameter SupContract Text;
   parameter SupMchCode  Text;
}

function GetMaxEmployeeIdForMoveSerial Text {
   parameter Company Text;
   parameter Signature Text;
}

function GetCompnay Text {
   parameter Contract Text;
}


  -------------------------------- STRUCTURES ---------------------------------
structure StructDlgMoveIndividual {
   attribute SupMchCode Text {
      label = "Belongs to Object";
      maxlength = 100;
      // searchable = false;
      format = uppercase;
   }
   attribute InfoMessageNo Number;

   attribute SupMchName Text {
      label = "Description";
      maxlength = 200;
      // searchable = false;
   }
   attribute SupContract Text {
      label = "Belongs to Site";
      maxlength = 5;
      // searchable = false;
      format = uppercase;
   }
   attribute ToContract Text {
      label = "To Site";
      maxlength = 5;
      // searchable = false;
      format = uppercase;
   }
   attribute ToSupContract Text {
      label = "To Site";
      maxlength = 5;
      // searchable = false;
      format = uppercase;
   }
   attribute ToSupMchCode Text {
      label = "To Object ID";
      maxlength = 100;
      format = uppercase;
   }
   attribute DestSupMchName Text {
      label = "Description";
      maxlength = 200;
      // searchable = false;
   }
   attribute Signature Text {
      label = "Signature";
      maxlength = 20;
      required = [true];
      format = uppercase;
   }
   attribute SignatureId Text {
      maxlength = 11;
      required = [true];
      format = uppercase;
   }
   attribute DfComment Text {
      label = "Comment";
      maxlength = 1900;
      // searchable = false;
   }
   attribute MchCode Text {
      maxlength = 100;
      // searchable = false;
      format = uppercase;
   }
   attribute MchName Text {
      maxlength = 2000;
      // searchable = false;
   }
   attribute Contract Text {
      maxlength = 5;
      // searchable = false;
      format = uppercase;
   }
   attribute Company Text {
      maxlength = 20;
      // searchable = false;
      format = uppercase;
   }
   attribute ToCompany Text {
      maxlength = 20;
      // searchable = false;
      format = uppercase;
   }
   attribute WoSite Text {
      label = "WO Site";
      maxlength = 5;
      format = uppercase;
   }
   attribute OrgCode Text {
      label = "Maint Org";
   }
   attribute IsNewParent Boolean {
      required = [true];
   }
   attribute IsNewPmRev Boolean {
      required = [true];
   }
   attribute EquipmentObjectSeq Number;
   attribute ToEquipmentObjectSeq Number;

   reference ToContractRef(ToCompany, ToContract) to UserAllowedCompanySiteLov(Company, Contract) {
      label = "To Site";
   }
   reference ToSupContractRef(ToSupContract) to UserAllowedSiteLov(Contract) {
      label = "To Site";

   }
   reference ToSupMchCodeRef(ToSupContract, ToSupMchCode) to EquipmentAllObjectLov1(Contract, MchCode) {
      label = "To Object ID";
      copy MchName to DestSupMchName;
      copy EquipmentObjectSeq to ToEquipmentObjectSeq;
   }
   reference SignatureRef(Company, Signature) to EmployeeLov(Company, PersonId) {
      label = "Signature";

   }
   @DynamicComponentDependency WO
   reference ToCompanyRef(ToCompany) to UserAllowedCompanyLov(Company) {
      label = "Company";
   }
   reference WoSiteRef(WoSite) to UserAllowedSiteLov(Contract) {
      label = "WO Site";

   }
   reference OrgCodeRef(WoSite, OrgCode) to OrgCodeAllowedSiteLov1(Contract, OrgCode) {
      label = "Maint Org";
      copy Contract to WoSiteRef;
   }

}

@DynamicComponentDependency WO
query UserAllowedCompanyLov {
   from = "user_allowed_company_lov";
   lu = JtTaskAccounting;
   keys = Company;
   ludependencies = JtTaskAccounting;
   attribute Company Text {
      format = uppercase;
      lovcolumn = [true];
   }
}

query UserAllowedCompanySiteLov {
   from = "Site_Company_Lov1";
   lu = Site;
   keys = Company, Contract;
   attribute Company Text {
      format = uppercase;
      lovcolumn = [true];
   }
   attribute Contract Text {
      format = uppercase;
      lovcolumn = [true];
   }
   attribute Description Text {
      lovcolumn = [true];
   }
}

@Override
query OrgCodeAllowedSiteLov1 {

   attribute Description Text {
      label = "Description";
      lovcolumn = [true];
   }
}
