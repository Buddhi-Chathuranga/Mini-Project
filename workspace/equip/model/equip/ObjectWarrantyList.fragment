-----------------------------------------------------------------------------
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  200106  LASSLK  SAXTEND-1244, Implement LOV Filtering
--  200630  DEEKLK  AMXTEND-439, Removed overridden EquipmentObject entity
--  220111  KrRaLK  AM21R2-2950, Equipment object is given a sequence number as the primary key (while keeping the old Object ID
--                  and Site as a unique constraint), so inlined the business logic to handle the new design of the EquipmentObject.
-----------------------------------------------------------------------------
fragment ObjectWarrantyList;
component EQUIP;
layer Core;
description "Put some useful description here ...";

include fragment WorkOrderSymptCodeLovSelector;
include fragment EquipmentObjectUivSelector;
include fragment SupplierWarrantyAssistant;
include fragment CustomerWarrantyAssistant;

----------------------------- CLIENT FRAGMENTS ------------------------------

--------------------------------- COMMANDS ----------------------------------
//command SupplierWarrantyViewCommand for ObjectSupplierWarranty {
//   label = "View Supplier Warranty";
//   enabled = [SupplierWarranty];
//   execute {
//      error("Command 'SupplierWarrantyViewCommand' not implemented!");
//   }
//}
command SupplierWarrantyCreateEditCommand for ObjectSupplierWarranty {
   label = "Supplier Warranty";
   enabled = [true];
   execute {
      assistant SupplierWarrantyAssistant(null, SerialNo, WarrantyId, true) into(WarrantyId) {
         when CANCEL {
            exit CANCEL;
         }
         when OK {
            exit OK;
         }
      }
   }
}
//command CustomerWarrantyViewCommand for ObjectCustWarranty {
//   label = "View Customer Warranty";
//   enabled = [CustomerWarranty];
//   execute {
//      error("Command 'CustomerWarrantyViewCommand' not implemented!")
//   }
//}
command CustomerWarrantyCreateEditCommand for ObjectCustWarranty {
   label = "Customer Warranty";
   enabled = [true];
   execute {
      assistant CustomerWarrantyAssistant(null, SerialNo, WarrantyId) into(WarrantyId) {
         when CANCEL {
            exit CANCEL;
         }
         when OK {
            exit OK;
         }
      }
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector EquipmentObjectSelector for EquipmentObject {
   label = "${MchCode} - ${MchName}";
   static MchCode;
   static MchName;
}

@Override
@DynamicComponentDependency PURCH
selector ReferenceSupplierSelector for Supplier {
   label = "";
   static VendorNo {
      contactwidget {
         enabled = [true];
         source = Supplier;
      }
   }
   static VendorName;
   static CurrencyCode {
      visible = [false];
   }
   static PurchaseCode {
      visible = [false];
   }
   static PoChangeManagement {
      visible = [false];
   }
}

---------------------------------- GROUPS -----------------------------------
group ObjectConnGroup for EquipmentObject {
   label = "";
   field MchCode;
   field MchName;
   field Contract;
}

----------------------------------- LISTS -----------------------------------
list SupplierWarrantyList for ObjectSupplierWarranty {

   label = "Supplier Warranty";

   field SupplierWarranty {
      size = Small;
   }
   @DynamicComponentDependency PURCH
   lov VendorNoRef with ReferenceSupplierSelector {
      search = VendorNo, VendorName;
      contactwidget {
         enabled = [true];
         source = Supplier;
      }

      description = VendorNoRef.VendorName;
      size = Large;
   }

   field Note {
      multiline = true;
      size = Large;
   }
   lov WarrantyActionRef with ReferenceWarrantyActionSelector  using WarrantyActionSelect {
      search = WarrantyAction, Description;
      description = WarrantyActionRef.Description;
      size = Medium;
   }
   field ValidFrom;
   field ValidUntil;

   lov ErrSymptomRef with ReferenceWorkOrderSymptCodeLovSelector {
      search = ErrSymptom, Description;
      description = ErrSymptomRef.Description;
      size = Medium;
   }
   field WarrantySymptomStatus {
      size = Small;
   }
   field SourceId {
      label = "Source ID";
      size = Medium;
   }
   field WarrantySource {
      size = Medium;
   }
   field Updated;

//   commandgroup CommandGroupCmdGroup {
//      label = "Command Group";
//      command SupplierWarrantyViewCommand;
//   }
   commandgroup CommandGroup2CmdGroup {

      command SupplierWarrantyCreateEditCommand;
   }
}
list CustomerWarrantyList for ObjectCustWarranty {
   label = "Customer Warranty";
   field CustomerWarranty {
      size = Small;
   }
   field Note {
      multiline = true;
      size = Large;
   }
   lov WarrantyActionRef with ReferenceWarrantyActionSelector using WarrantyActionSelect {
      search = ErrSymptom, Description;
      description = WarrantyActionRef.Description;
      size = Large;
   }
   field ValidFrom;
   field ValidUntil;

   lov ErrSymptomRef with ReferenceWorkOrderSymptCodeLovSelector {
      search = ErrSymptom, Description;
      description = ErrSymptomRef.Description;
      size = Medium;
   }
   field WarrantySymptomStatus {
      size = Small;
   }
   field SourceId {
      label = "Source ID";
      size = Medium;
   }
   field WarrantySource {
      size = Medium;
   }
   field Updated;

//   commandgroup CommandGroupCmdGroup {
//      label = "Command Group";
//      command CustomerWarrantyViewCommand;
//   }
   commandgroup CommandGroup2CmdGroup {

      command CustomerWarrantyCreateEditCommand;
   }
}

--------------------------- PROJECTION FRAGMENTS ----------------------------

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity ObjectSupplierWarranty {
   crud = Create, Read, Update, Delete;
   attribute Contract Text {
      label = "Site";
   }
   attribute RowNo Number {
      label = "Row No";
      maxlength = 0;
   }
   attribute VendorNo Text {
      label = "Supplier";
   }
   @DynamicComponentDependency PURCH
   attribute SupplierName Text {
      fetch = "SUPPLIER_API.Get_Vendor_Name(VENDOR_NO)";
      label = "Supplier Name";
      maxlength = 2000;
      editable = [false];
   }
   attribute ValidUntil Date {
      label = "Valid To Date";
   }
   attribute ErrSymptom Text {
      label = "Symptom";
   }
   attribute WarrantySymptomStatus Enumeration(WarrantySymptomStatus) {
      label = "Status";
   }
   attribute Updated Date {
      editable = [ETag = null];
   }
   attribute WarrantyId Number {
      label = "Supplier Warranty ID";
      editable = [ETag != null];
   }
   attribute Updated2 Date {
      label = "Supplier Warranty ID";
      editable = [ETag != null];
      fetch = "Maintenance_Site_Utility_API.Get_Site_Date(CONTRACT)";
      label = "Updated";
      editable = [false];
   }
   attribute MchCode Text;
   attribute ValidForCustomer Enumeration(GenYesNo);

   attribute SiteDate Date {
      fetch = "Maintenance_Site_Utility_API.Get_Site_Date(CONTRACT)";
   }

   attribute SupplierWarranty Boolean("TRUE", "FALSE") {
      fetch = "Object_Supplier_Warranty_API.Supplier_Warranty_Is_Check(EQUIPMENT_OBJECT_SEQ, VALID_UNTIL, WARRANTY_ID)";
      editable = [false];
   }
   attribute SerialNo Text;
   reference WorkOrderSymptCodeRef(ErrSymptom) to WorkOrderSymptCode(ErrSymptom);
   reference MchCodeRef(Contract, MchCode) to EquipmentObjectUiv(Contract, MchCode) {
      label = "Object ID";
      copy EquipmentObjectSeq to EquipmentObjectSeq;
   }
   @DynamicComponentDependency PURCH
   reference VendorNoRef(VendorNo) to Supplier(VendorNo) {
      label = "Supplier";
   }
   reference WarrantyActionRef(WarrantyAction) to WarrantyAction(WarrantyAction) {
      label = "Warranty Action";
   }
   reference ErrSymptomRef(ErrSymptom) to WorkOrderSymptCodeLov(ErrSymptom) {
      label = "Symptom";
   }
}
@Override
entity ObjectCustWarranty {
   crud = Create, Read, Update, Delete;
   attribute Contract Text {
      label = "Site";
   }
   attribute MchCode Text;
   attribute RowNo Number {
      maxlength = 0;
   }
   attribute EquipmentObjectSeq Number;
   attribute ValidUntil Date {
      label = "Valid To Date";
   }
   attribute ErrSymptom Text {
      label = "Symptom";
   }
   attribute WarrantySymptomStatus Enumeration(WarrantySymptomStatus) {
      label = "Status";
   }
   attribute Updated Date {
      editable = [ETag = null];
   }
   attribute WarrantyId Number {
      label = "Customer Warranty ID";
      editable = [ETag != null];
   }
   attribute Updated2 Date {
      fetch = "Maintenance_Site_Utility_API.Get_Site_Date(Equipment_Object_API.Get_Contract(equipment_object_seq))";
      label = "Updated";
      editable = [false];
   }
   attribute CustomerWarranty Boolean("TRUE", "FALSE") {
      fetch = "Object_Cust_Warranty_API.Customer_Warranty_Is_Check(equipment_object_seq, Valid_Until, Warranty_Id)";
      editable = [false];
   }
   attribute SerialNo Text;
   reference WorkOrderSymptCodeRef(ErrSymptom) to WorkOrderSymptCode(ErrSymptom);
   reference MchCodeRef(EquipmentObjectSeq) to EquipmentObjectUiv(EquipmentObjectSeq) {
      label = "Object ID";
   }
   reference WarrantyActionRef(WarrantyAction) to WarrantyAction(WarrantyAction) {
      label = "Warranty Action";
   }
   reference ErrSymptomRef(ErrSymptom) to WorkOrderSymptCodeLov(ErrSymptom) {
      label = "Symptom";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------
function WarrantyActionSelect List < Entity(WarrantyAction) > {
   where = "Objstate != 'Blocked'";
}

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------