-----------------------------------------------------------------------------
-- Date        Sign      History
-- ----------  ------   -----------------------------------------------------
-- 2019-07-17  SHEPLK   SAUXXW4-19526, Moved in to this fragment so to include in equipment object navigator.
-- 2020-06-30  DEEKLK   AMZEAX-140, Removed overriden EquipmentObject and added it to EquipObjCostPerYearHandling.projection.
-----------------------------------------------------------------------------
fragment EquipObjCostPerYearList;
component EQUIP;
layer Core;
description "To graphically create, modify and view information related to object structure";

----------------------------- CLIENT FRAGMENTS ------------------------------


--------------------------------- COMMANDS ----------------------------------

command ObjectInformationCommand for EquipmentObject {
   label = "Object Information";
   icon = "popup";
   style = IconOnly;
   enabled = [true];

   execute {
      if[ObjLevel != null] {
         //functional
         navigate "page/FunctionalObject/Form?$filter=MchCode eq $[MchCode] and Contract eq $[Contract]";
      }
      else {
         //serial
         navigate "page/SerialObject/Form?$filter=MchCode eq $[MchCode] and Contract eq $[Contract]";
      }
   }
}


--------------------------------- SELECTORS ---------------------------------

@Override
selector EquipmentObjectSelector for EquipmentObject {
   label = "${MchCode} - ${MchName} - ${Contract}";
   static MchCode;
   static MchName;
   static Contract;
}


---------------------------------- GROUPS -----------------------------------

group CostDetailsGroup for EquipmentObject {
   label = "";

   field MchCode {
      size = Small;
   }
   field MchName;
   field Contract {
      size = Small;
   }
   field ObjLevel {
      size = Small;
      editable = [false];
   }

   badge OperationalStatus {
      style = TextOnly;
      size = Small;

      emphasis StatePlanned = [OperationalStatusDb = "PLANNED_FOR_OP"];
      emphasis StateConfirmed = [OperationalStatusDb = "IN_OPERATION"];
      emphasis StateCancelled = [OperationalStatusDb = "SCRAPPED"];
      emphasis StateObsolete = [OperationalStatusDb = "NOT_APPLICABLE"];
      //emphasis StateInProgress = [OperationalStatus = "PartiallyInOperation"];
      emphasis StateStopped = [OperationalStatusDb = "OUT_OF_OPERATION"];
   }
}


group PurchInfoGroup for EquipmentObject {
   label = "Purchase Information";

   field PurchDate {
      size = Small;
      editable = [PurchDate = null];
   }
   field PurchPrice {
      size = Small;
      label = "Acquisition Cost";
      editable = [true];
   }
}


----------------------------------- LISTS -----------------------------------

list RowDataList for RowDataRowsQuery {
   label = "";
   orderby = YearTotal, TxnYear;
   multiselect = [false];

   field TxnYear {
      label = "Year";
      size = Small;
   }

   field Material {
      format = ifscurrency;
   }

   field Personnel {
      format = ifscurrency;
   }

   field ToolEquip {
      label = "Tool/Equipment";
      format = ifscurrency;
   }

   field Expenses {
      format = ifscurrency;
   }

   field External {
      format = ifscurrency;
   }

   field Total {
      label = "Total Cost/Year";
      format = ifscurrency;
   }
}


----------------------------------- CARDS -----------------------------------


---------------------------------- DIALOGS ----------------------------------


---------------------------------- CHARTS -----------------------------------

stackedchart CostPerYearStackedChart for CostDetailsSummary {
   label = "Cost/Year";
   orderby = TxnYear asc;
   height = medium;

   x {
      label = "Year";
      value TxnYear;
   }

   y {
      label = "Cost";

      value Material {
         emphasis Complementary2 = [true];
      }

      value Personnel {
         emphasis Complementary4 = [true];
      }

      value ToolEquip {
         emphasis Complementary7 = [true];

      }

      value Expenses {
         emphasis Complementary6 = [true];
      }

      value External {
         emphasis Complementary3 = [true];
      }
      min = 0;
   }
}


linechart CostPerYearLineChart for CostDetailsSummary {
   label = "Cost/Year";
   orderby = TxnYear asc;

   x {
      label = "Year";
      value TxnYear;
   }

   y {
      label = "Cost";

      value Material {
         emphasis Complementary2 = [true];
      }

      value Personnel {
         emphasis Complementary4 = [true];
      }

      value ToolEquip {
         emphasis Complementary7 = [true];

      }

      value Expenses {
         emphasis Complementary6 = [true];
      }

      value External {
         emphasis Complementary3 = [true];
      }
   }
}


piechart CostPerYearPieChart for CostTypeQuery {
   label = "Cost/Year";
   argument CostType;
   value ItemCost;

   emphasis Complementary2 = [CostTypeDb = "M"];
   emphasis Complementary4 = [CostTypeDb = "P"];
   emphasis Complementary7 = [CostTypeDb = "T"];
   emphasis Complementary6 = [CostTypeDb = "X"];
   emphasis Complementary3 = [CostTypeDb = "E"];
}


---------------------------------- SHEETS -----------------------------------


------------------------------ STATE INDICATOR ------------------------------


----------------------------------- TREES -----------------------------------


---------------------------------- PLUGINS ----------------------------------


------------------------------- IMAGE VIEWERS -------------------------------

--------------------------- PROJECTION FRAGMENTS ----------------------------

------------------------------ ENTITY DETAILS -------------------------------

------------------------------- ENUMERATIONS --------------------------------


---------------------------------- QUERIES ----------------------------------

query RowDataRowsQuery {
   from = "equip_cost_type_summery";
   lu = EquipmentStructureCost;
   keys = Contract, MchCode, TxnYear, YearTotal;

   attribute Contract Text;
   attribute MchCode Text;
   attribute TxnYear Text;

   attribute YearTotal Integer;
   attribute Material Number;
   attribute Personnel Number;
   attribute ToolEquip Number;
   attribute Expenses Number;
   attribute External Number;
   attribute Total Number;

   array CostDetailsArray(Contract, MchCode) to CostDetailsSummary(Contract, MchCode) {
      where = "(:parent.TxnYear = :child.TxnYear OR :parent.YearTotal = 1)";
   }

   array CostTypeArray(Contract, MchCode, TxnYear) to CostTypeQuery(Contract, MchCode, TxnYear);
}


query CostTypeQuery {
   from = "Equip_Cost_Year_Summery";
   lu = EquipmentStructureCost;
   keys = Contract, MchCode, TxnYear, CostTypeDb, CostType;
   where = "item_cost IS NOT NULL AND cost_type_db != 'COST_TOTAL'";

   attribute Contract Text;
   attribute MchCode Text;
   attribute TxnYear Text;
   attribute CostTypeDb Text;
   attribute CostType Text;
   attribute ItemCost Number;
}


---------------------------------- ACTIONS ----------------------------------


--------------------------------- FUNCTIONS ---------------------------------


-------------------------------- STRUCTURES ---------------------------------


--------------------------------- VIRTUALS ----------------------------------


--------------------------------- SUMMARIES ---------------------------------

summary CostDetailsSummary {
   from = "equip_cost_type_summery";
   where = "year_total = 0";
   keys = Contract, MchCode, TxnYear, YearTotal {
      where = "contract = :Contract AND mch_code = :MchCode AND txn_year = :TxnYear";
   }

   attribute Material Number {
      fetch = "SUM(NVL(material, 0))";
   }

   attribute Personnel Number {
      fetch = "SUM(NVL(personnel, 0))";
   }

   attribute ToolEquip Number {
      fetch = "SUM(NVL(tool_equip, 0))";
   }

   attribute Expenses Number {
      fetch = "SUM(NVL(expenses, 0))";
   }

   attribute External Number {
      fetch = "SUM(NVL(external, 0))";
   }

   attribute Contract Text;
   attribute MchCode Text;
   attribute TxnYear Text;
   attribute YearTotal Integer;
}


-------------------------------- SINGLETONS ---------------------------------