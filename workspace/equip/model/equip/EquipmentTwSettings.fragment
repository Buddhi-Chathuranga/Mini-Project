--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2020-01-08  LASSLK  SAXTEND-1244, Implement LOV Filtering.
-- 2021-10-25  RUSSLK  AM21R2-2534, Modified the EquipmentTwSettings entity.
-- 2022-01-11  KrRaLK  AM21R2-2950, Equipment object is given a sequence number as the primary key (while keeping the old Object ID
--                  and Site as a unique constraint), so inlined the business logic to handle the new design of the EquipmentObject.
--------------------------------------------------------------------------------------


fragment EquipmentTwSettings;
component EQUIP;
layer Core;
description "Put some useful description here ...";

include fragment EquipmentAllObjectPerfQuery;

----------------------------- CLIENT FRAGMENTS ------------------------------

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------

--------------------------------- SELECTORS ---------------------------------

@Override
selector EquipmentTwSettingsSelector for EquipmentTwSettings {
   label = "${TreeName}";
   static TreeName;
   static TreeViewId {
      visible = [false];

   }
   static Contract {
      visible = [false];

   }
   static MchCode {
      visible = [false];

   }
   static Site {
      visible = [false];

   }
   static DefaultStruct {
      visible = [false];

   }
   static GroupingCriteria {
      visible = [false];

   }
   static LocationId {
      visible = [false];

   }
   static MchType {
      visible = [false];

   }

   static Criticality {
      visible = [false];

   }

   static ItemClass {
      visible = [false];

   }
   static GroupId {
      visible = [false];

   }
   static CategoryId {
      visible = [false];

   }
   static ManufacturerNo {
      visible = [false];

   }

   static DispPlannedForOp {
      visible = [false];

   }
   static DispInOperation {
      visible = [false];

   }
   static DispOutOfOperation {
      visible = [false];

   }
   static DispScrapped {
      visible = [false];

   }
   static SessionUser {
      visible = [false];

   }
   static Owner {
      visible = [false];

   }
}

---------------------------------- GROUPS -----------------------------------

group EquipmentTwTreeSettingsGroup for EquipmentTwSettings {
   label = "Settings";
   field SessionUser {
      visible = [false];
   }
   field Owner {
      visible = [false];
   }
   radiogroup SettingsType {
      showlabel = false;

      size = Large;
      validate command {
         execute {
            if[SettingsType = "DisplayAllObjects"] {
               set MchCodeRef = null;
               set MchCode = null;
               set Contract = null;
            }
         }
      }
   }
   lov MchCodeRef with ReferenceEquipmentAllObjectLov1Selector {
      search = MchCode, MchName;
      size = Large;
      required = [SettingsType = "DisplaySpecificObject"];
      editable = [SettingsType = "DisplaySpecificObject"];
      description = MchCodePerfRef.MchName;
      validate command {
         execute {
            set Contract = MchCodePerfRef.Contract;
         }
      }
      visible = [SettingsType = "DisplaySpecificObject"];
   }
}

group EquipmentTwGrouping for EquipmentTwSettings {
   label = "Grouping Criteria";
   field GroupingCriteria {
      size = Medium;

   }
   lov SiteRef with ReferenceUserAllowedSiteLovSelector {
      search = Contract, ContractDesc;
      editable = [GroupingCriteria = "Site"];
      visible = [GroupingCriteria = "Site"];
      size = Large;
   }
   lov MchTypeRef with ReferenceEquipmentObjTypeSelector {
      search = MchType, Description;
      editable = [GroupingCriteria = "ObjectType"];
      visible = [GroupingCriteria = "ObjectType"];
      size = Large;
   }
   lov LocationIdRef with ReferenceLocationSelector {
      search = LocationId, Name;
      editable = [GroupingCriteria = "Location"];
      visible = [GroupingCriteria = "Location"];
      size = Large;

   }
   lov CriticalityRef with ReferenceEquipmentCriticalitySelector {
      search = Criticality, Description;
      editable = [GroupingCriteria = "ObjectCriticality"];
      visible = [GroupingCriteria = "ObjectCriticality"];
      size = Large;

   }
   lov ItemClassRef with ReferenceItemClassSelector {
      search = ItemClassId, ItemClassDesc;
      editable = [GroupingCriteria = "ItemClass"];
      visible = [GroupingCriteria = "ItemClass"];
      size = Large;

   }
   lov GroupIdRef with ReferenceEquipmentObjGroupSelector {
      search = GroupId, Description;
      editable = [GroupingCriteria = "GroupId"];
      visible = [GroupingCriteria = "GroupId"];
      size = Large;

   }

   lov CategoryIdRef with ReferenceEquipmentObjCategorySelector {
      search = CategoryId, Description;
      editable = [GroupingCriteria = "Category"];
      visible = [GroupingCriteria = "Category"];
      size = Large;

   }
   lov ManufacturerNoRef with ReferenceManufacturerInfoSelector {
      search = ManufacturerId, Name;
      editable = [GroupingCriteria = "Manufacturer"];
      visible = [GroupingCriteria = "Manufacturer"];
      size = Large;

   }
   field HideEmptyGrup {
      size = Medium;
      required = [true];
   }
   field HideObjsWithoutGrup {
      size = Medium;
      required = [true];
   }

}

group EquipmentTwOpStateGroup for EquipmentTwSettings {
   label = "Operational Status Filter";
   field DispPlannedForOp {
      size = Small;
      required = [true];
   }
   field DispInOperation {
      size = Small;
      required = [true];
   }
   field DispOutOfOperation {
      size = Small;
      required = [true];

   }
   field DispScrapped {
      size = Small;
      required = [true];
   }
}

group EquipmentTwDesignStateGroup for EquipmentTwSettings {
   label = "Design Status Filter";
   field DispUnderDesign {
      size = Small;
      required = [true];
   }
   field DispReDesign {
      size = Small;
      required = [true];
   }
   field DispCompleted {
      size = Small;
      required = [true];

   }
   field DispPlannedForScrap {
      size = Small;
      required = [true];
   }
}

group EquipmentTwPresentationGroup for EquipmentTwSettings {
   label = "More Information Settings";
   field DispWoTaskNode {
      size = Small;
      required = [true];
   }
   field DispPmPlanNode {
      size = Small;
      required = [true];
   }
   field DispScNode {
      size = Small;
      required = [true];
   }
   field DispConnObjsNode {
      size = Small;
      required = [true];
   }
}

----------------------------------- LISTS -----------------------------------

--------------------------- PROJECTION FRAGMENTS ----------------------------

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset EquipmentTwSettingsSet for EquipmentTwSettings {
   where = "site IS NULL OR ((SELECT 1 from user_allowed_site user_site where UPPER(user_site.userid) = UPPER(FND_SESSION_API.Get_Fnd_User)  AND user_site.contract = site) IS NOT NULL)";

}

------------------------------ ENTITY DETAILS -------------------------------

@Override
entity EquipmentTwSettings {
   crud = Create, Read, Update, Delete;
   supportwarnings = [true];
   attribute TreeViewId Number {
      editable = [false];
   }
   attribute TreeName Text {
      fetch = "Boexp_Tw_Settings_API.Get_Tree_View_Name(TREE_VIEW_ID)";
      editable = [false];
   }
   attribute DispInOperation Boolean("1", "0");
   attribute DispScrapped Boolean("1", "0");
   attribute DispOutOfOperation Boolean("1", "0");
   attribute DispPlannedForOp Boolean("1", "0");
   attribute DispConflictFilter Boolean("1", "0");
   attribute OmitMoreInformation Boolean("1", "0");
   attribute DispUnderDesign Boolean("1", "0");
   attribute DispReDesign Boolean("1", "0");
   attribute DispCompleted Boolean("1", "0");
   attribute DispPlannedForScrap Boolean("1", "0");
   attribute DispWoTaskNode Boolean("1", "0");
   attribute DispPmPlanNode Boolean("1", "0");
   attribute DispScNode Boolean("1", "0");
   attribute DispConnObjsNode Boolean("1", "0");
   attribute HideEmptyGrup Boolean("1", "0");
   attribute HideObjsWithoutGrup Boolean("1", "0");
   attribute SettingsType Enumeration(EquipmentSetType.Settings) {
      fetch = "SETTINGS_TYPE_DB";
   }
   attribute Contract Text;
   attribute MchCode Text;
   attribute Site Text;
   attribute DefaultStruct Text {
      fetch = "'F'";
      editable = [false];
   }
   attribute MchType Text;
   attribute Criticality Text;
   attribute ItemClass Text;
   attribute GroupId Text;
   attribute CategoryId Text;
   attribute ManufacturerNo Text;
   attribute LocationId Text;
   attribute GroupingCriteria Enumeration(EquipmentObjNavGroup) {
      fetch = "GROUPING_CRITERIA_DB";
      label = "Select Grouping Criteria";

   }
   attribute SessionUser Text {
      fetch = "UPPER(Fnd_Session_API.Get_Fnd_User)";
      editable = [false];
   }
   attribute Owner Text {
      fetch = "UPPER(Boexp_Tw_Settings_API.Get_Owner(TREE_VIEW_ID))";
      editable = [false];
   }
   reference SiteRef(Site) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference MchCodeRef(Contract, MchCode) to EquipmentObject(Contract, MchCode) {
      label = "Object ID";
      copy EquipmentObjectSeq to EquipmentObjectSeq;
   }
   reference MchCodePerfRef(Contract, MchCode) to EquipmentAllObjectPerf(Contract, MchCode);
   reference MchTypeRef(MchType) to EquipmentObjType(MchType) {
      label = "Object Type";
   }
   reference CriticalityRef(Criticality) to EquipmentCriticality(Criticality) {
      label = "Object Criticality";
   }
   reference ItemClassRef(ItemClass) to ItemClass(ItemClassId) {
      label = "Item Class";
   }
   reference GroupIdRef(GroupId) to EquipmentObjGroup(GroupId) {
      label = "Group ID";
   }
   reference CategoryIdRef(CategoryId) to EquipmentObjCategory(CategoryId) {
      label = "Category";
   }
   reference ManufacturerNoRef(ManufacturerNo) to ManufacturerInfo(ManufacturerId) {
      label = "Manufacturer";
   }
   reference LocationIdRef(LocationId) to Location(LocationId) {
      label = "Location ID";
   }
   //array EquipmentObjectArray(Contract, MchCode) to EquipmentObject(Contract, MchCode);
}

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------