--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2020-11-02  CLEKLK  AM2020R1-6831, Added disp_scrapped for filterations
-- 2018-09-13  KrRaLK  SAUXXW4-9706, Created Tree control for Equipment Object Navigator.
-- 2018-10-17  SHEPLK  SAUXXW4-1592, Added NewFunctionalObjectDialog fragment for dlgNewFunctionalObject.
-- 2018-10-23  SHEPLK  SAUXXW4-10600, Added EquipmentSummary fragment for equipment objcet common detail page.
-- 2018-10-24  ISHHLK  SAUXXW4-1247, Added NewSerialObjectDialog fragment for dlgNewSerialObject.
-- 2018-10-25  SHEPLK  SAUXXW4-1591, Added MoveToInventoryDialog fragment for dlgMoveToInventory.
-- 2018-01-29  SSILLK  SAUXXW4-12597,Tree Navigator - Remaining Issues
-- 2021-03-01  SHAGLK  AM2020R1-7087, Modified GetParentEquipObjects
-- 2021-05-04  LASSLK  AM21R2-1339, Modified the function GetNavigationUrl
-- 2021-05-20  RUSSLK  AM2020R1-7787, Split GetAllEquipmentObjectFiltered() to 7 different functions to improve performance.
-- 2021-09-14  SIPELK  SM21R2-2585 - Fixed "DependencyMissing" static code ananlysis issues
-- 2021-10-25  RUSSLK  AM21R2-2534,  Modified GetEquipmentObjectFiltered(),GetSiteFiltered(),Split GetParentEquipObjWithoutLoc(),GetParentEquipObjWithoutObjtype(),GetParentEquipObjWithoutCriticality(),
--                                   GetParentEquipObjWithoutItemClass(),GetParentEquipObjWithoutGroupId(),GetParentEquipObjWithoutCategory(),GetParentEquipObjWithoutManufacturer(),GetParentEquipObjects()
--                                   to 7 different functions.
--------------------------------------------------------------------------------------
projection EquipmentObjectNavigatorHandling;
component EQUIP;
layer Core;
description "Manage Equipmnet Object Navigator for Object Structures.";
category Users;
include fragment MaintenanceObjectSelector;
include fragment EquipmentObjectList;
include fragment EquipmentAllObjectLovSelector;
include fragment FunctionalObjectTab;
include fragment SerialObjectTab;
@DynamicComponentDependency PCMSCI
include fragment ServiceLinesList;
@DynamicComponentDependency PM
include fragment PmForObjectStucturePmActionMaintenancePlan;
include fragment ObjectWarrantyList;
include fragment EquipObjCostPerYearList;
@DynamicComponentDependency METINV
include fragment MeteringInvoicingList;

include fragment BoexpTwSettings;
include fragment EquipmentTwSettings;
@DynamicComponentDependency WO
include fragment WorkTask;
include fragment MediaLibraryAttachment;
include fragment EquipmentFunctionalLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------

--entityset EquipmentObjectListSet for EquipmentObjectList;
entityset CompanySiteSet for CompanySite;
entityset LocationSet for Location;
entityset EquipmentObjTypeSet for EquipmentObjType;
entityset EquipmentCriticalitySet for EquipmentCriticality;
entityset ItemClassSet for ItemClass;
entityset EquipmentObjGroupSet for EquipmentObjGroup;
entityset EquipmentObjCategorySet for EquipmentObjCategory;
entityset ManufacturerInfoSet for ManufacturerInfo;
@DynamicComponentDependency PM
entityset PmActionSet for PmAction;
@DynamicComponentDependency PM
entityset PmActionUtilitySet for PmActionPlanUtility;
@DynamicComponentDependency PCMSCI
entityset PscContrProductScopeEquipSet for PscContrProductScopeEquip;
@DynamicComponentDependency PM
entityset PmActionEquipSet for PmActionEquip;
@DynamicComponentDependency WO
entityset ActiveSeparateEquipSet for ActiveSeparateEquip;

------------------------------ ENTITY DETAILS -------------------------------
@Override
@DynamicComponentDependency PM
entity PmAction {
   crud = Read;
   from = "pm_action";
   keys = PmNo, PmRevision;
}


@Override
@DynamicComponentDependency PCMSCI
entity PscContrProductScope {
   crud = Read;
   from = "PSC_CONTR_PRODUCT_SCOPE";
   exec = "PSC_CONTR_PRODUCT_SCOPE_API";
   keys = ContractId, LineNo, ScopeSeq;
}

@Override
@DynamicComponentDependency WO
entity ActiveSeparateEquip using ActiveSeparate {
   crud = Read;
   from = "active_separate_overview";
   exec = "Active_Separate_API";
   keys = WoNo {
      where = "wo_no = :WoNo";
   }
   attribute MchCode Text {
      label = "Object ID";
   }
   attribute MchCodeContract Text {
      label = "Site";
   }
   attribute MchName Text {
      label = "Description";
      fetch = "Equipment_Object_API.Get_Mch_Name(MCH_CODE_CONTRACT, MCH_CODE)";
   }
   attribute ObjLevel Text {
      label = "Object Level";
      fetch = "Equipment_Object_API.Get_Obj_Level(MCH_CODE_CONTRACT, MCH_CODE)";
   }
   attribute OperationalStatus Text {
      label = "Operational Status";
      fetch = "Equipment_Object_API.Get_Operational_Status(MCH_CODE_CONTRACT, MCH_CODE)";
   }
   attribute OperationalStatusDb Text {
      label = "Operational Status";
      fetch = "Equipment_Object_API.Get_Operational_Status_Db(MCH_CODE_CONTRACT, MCH_CODE)";
   }
   attribute PartNo Text {
      label = "Part No";
      fetch = "Equipment_Object_API.Get_Part_No(MCH_CODE_CONTRACT, MCH_CODE)";
   }
   attribute SerialNo Text {
      label = "Serial No";
      fetch = "Equipment_Object_API.Get_Serial_No(MCH_CODE_CONTRACT, MCH_CODE)";
   }
   attribute Type Text {
      label = "Type Designation";
      fetch = "Equipment_Object_API.Get_Type(MCH_CODE_CONTRACT, MCH_CODE)";
   }
   attribute MchType Text {
      label = "Object Type";
      fetch = "Equipment_Object_API.Get_Mch_Type(MCH_CODE_CONTRACT, MCH_CODE)";
   }
   attribute CategoryId Text {
      label = "Category";
      fetch = "Equipment_Object_API.Get_Category_Id(MCH_CODE_CONTRACT, MCH_CODE)";
   }
}

@Override
@DynamicComponentDependency PM
entity PmActionEquip using PmAction {
   crud = Read;
   from = "Pm_Action_Uiv";
   exec = "Pm_Action_API";
   keys = PmNo, PmRevision;

   attribute MchCode Text {
      label = "Object ID";
   }
   attribute MchCodeContract Text {
      label = "Site";
   }
   attribute MchName Text {
      label = "Description";
      fetch = "Equipment_Object_API.Get_Mch_Name(MCH_CODE_CONTRACT, MCH_CODE)";
   }
   attribute ObjLevel Text {
      label = "Object Level";
      fetch = "Equipment_Object_API.Get_Obj_Level(MCH_CODE_CONTRACT, MCH_CODE)";
   }
   attribute OperationalStatus Text {
      label = "Operational Status";
      fetch = "Equipment_Object_API.Get_Operational_Status(MCH_CODE_CONTRACT, MCH_CODE)";
   }
   attribute OperationalStatusDb Text {
      label = "Operational Status";
      fetch = "Equipment_Object_API.Get_Operational_Status_Db(MCH_CODE_CONTRACT, MCH_CODE)";
   }
   attribute PartNo Text {
      label = "Part No";
      fetch = "Equipment_Object_API.Get_Part_No(MCH_CODE_CONTRACT, MCH_CODE)";
   }
   attribute SerialNo Text {
      label = "Serial No";
      fetch = "Equipment_Object_API.Get_Serial_No(MCH_CODE_CONTRACT, MCH_CODE)";
   }
   attribute Type Text {
      label = "Type Designation";
      fetch = "Equipment_Object_API.Get_Type(MCH_CODE_CONTRACT, MCH_CODE)";
   }
   attribute MchType Text {
      label = "Object Type";
      fetch = "Equipment_Object_API.Get_Mch_Type(MCH_CODE_CONTRACT, MCH_CODE)";
   }
   attribute CategoryId Text {
      label = "Category";
      fetch = "Equipment_Object_API.Get_Category_Id(MCH_CODE_CONTRACT, MCH_CODE)";
   }
}

@Override
@DynamicComponentDependency PCMSCI
entity PscContrProductScopeEquip using PscContrProductScope {
   crud = Read;
   from = "Psc_Contr_Product_Scope_Uiv";
   exec = "PSC_CONTR_PRODUCT_SCOPE_API";
   keys = ContractId, LineNo, ScopeSeq;
   attribute EquipmentObjectSeq Number;
   attribute MchCode Text {
      label = "Object ID";
   }
   attribute MchContract Text {
      label = "Site";
   }
   attribute MchName Text {
      label = "Description";
      fetch = "Equipment_Object_API.Get_Mch_Name(MCH_CONTRACT, MCH_CODE)";
   }
   attribute ObjLevel Text {
      label = "Object Level";
      fetch = "Equipment_Object_API.Get_Obj_Level(MCH_CONTRACT, MCH_CODE)";
   }
   attribute OperationalStatus Text {
      label = "Operational Status";
      fetch = "Equipment_Object_API.Get_Operational_Status(MCH_CONTRACT, MCH_CODE)";
   }
   attribute OperationalStatusDb Text {
      label = "Operational Status";
      fetch = "Equipment_Object_API.Get_Operational_Status_Db(MCH_CONTRACT, MCH_CODE)";
   }
   attribute PartNo Text {
      label = "Part No";
      fetch = "Equipment_Object_API.Get_Part_No(MCH_CONTRACT, MCH_CODE)";
   }
   attribute SerialNo Text {
      label = "Serial No";
      fetch = "Equipment_Object_API.Get_Serial_No(MCH_CONTRACT, MCH_CODE)";
   }
   attribute Type Text {
      label = "Type Designation";
      fetch = "Equipment_Object_API.Get_Type(MCH_CONTRACT, MCH_CODE)";
   }
   attribute MchType Text {
      label = "Object Type";
      fetch = "Equipment_Object_API.Get_Mch_Type(MCH_CONTRACT, MCH_CODE)";
   }
   attribute CategoryId Text {
      label = "Category";
      fetch = "Equipment_Object_API.Get_Category_Id(MCH_CONTRACT, MCH_CODE)";
   }
}

@Override
entity EquipmentObjType {
   crud = Read;
   attribute MchType Text {
      label = "Object Type";
      editable = [false];
   }
   attribute Description Text {
      label = "Description";
      editable = [false];
   }
}

@Override
entity EquipmentObjectMeas {
   crud = Read;
   attribute MchCode Text {
      label = "Object ID";
      editable = [false];
   }
   attribute Contract Text {
      label = "Site";
      editable = [false];
   }
}

@Override
entity EquipmentCriticality {
   crud = Read;
   attribute Criticality  Text {
      label = "Object Criticality";
      editable = [false];
   }
   attribute Description Text {
      label = "Description";
      editable = [false];
   }
}

@Override
entity ItemClass {
   crud = Read;
   attribute ItemClassId  Text {
      label = "Item Class";
      editable = [false];
   }
   attribute ItemClassDesc Text {
      label = "Description";
      editable = [false];
   }
}

@Override
entity EquipmentObjGroup {
   crud = Read;
   attribute GroupId  Text {
      label = "Group ID";
      editable = [false];
   }
   attribute Description Text {
      label = "Description";
      editable = [false];
   }
}

@Override
entity EquipmentObjCategory {
   crud = Read;
   attribute CategoryId  Text {
      label = "Category ID";
      editable = [false];
   }
   attribute Description Text {
      label = "Description";
      editable = [false];
   }
}

@Override
entity ManufacturerInfo {
   crud = Read;
   attribute ManufacturerId  Text {
      label = "Manufacturer";
      editable = [false];
   }
   attribute Name Text {
      label = "Name";
      editable = [false];
   }
}

@Override
entity Location {
   crud = Read;
   attribute LocationId Text {
      label = "Location ID";
      editable = [false];
   }
   attribute Name Text {
      label = "Name";
      editable = [false];
   }
}

@Override
entity CompanySite {
   crud = Read;
   attribute Contract Text {
      label = "Site";
      editable = [false];
   }
   attribute Company Text {
      label = "Company";
      editable = [false];
   }
   attribute Description Text {
      label = "Description";
      editable = [false];
   }
}

@Override
entity TypeDesignation {
   ludependencies = EquipmentFunctional;
}

@Override
entity TechnicalObjectReference {
   ludependencies = EquipmentFunctional;
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

function GetDefaultValuesForTreeFilter Structure(TreeFilterStructure);

function GetDefaultValuesForPageFilter Structure(NavPageFilterStructure);

-- Fetch specific Object mentioned in the settings
function GetEquipmentObjectFiltered List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = ObjectCountsPmEntity;
   ludependencies = ObjectCountsWoEntity;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   where = "EXISTS
             (SELECT tw_serrings.mch_code, tw_serrings.contract
                      FROM equipment_tw_settings tw_serrings
                      WHERE tw_serrings.tree_view_id = :TreeViewId
                       AND equipment_object_uiv.equipment_object_seq = tw_serrings.equipment_object_seq
                       AND tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                       AND (equipment_object_uiv.operational_status_db IN
                           (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                             DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                             DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                             DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                           (tw_serrings.disp_planned_for_op = 0 AND
                           tw_serrings.disp_in_operation = 0 AND
                           tw_serrings.disp_out_of_operation = 0 AND
                           tw_serrings.disp_scrapped = 0))
                       AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                           DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                           DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                           DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))) ";
}

-- Fetch unique sites to create grouping nodes for sites
function GetSiteFiltered List<Entity(CompanySite)> {
   basedon CompanySiteSet;
   ludependencies = CompanySite;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   where = "(contract IN
                (SELECT DISTINCT (eq_object_site.contract) contract
                    FROM equipment_object_uiv  eq_object_site,
                         equipment_tw_settings tw_serrings
                    WHERE tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                     AND tw_serrings.grouping_criteria_db = 'SITE'
                     AND tw_serrings.site IS NULL
                     AND tw_serrings.tree_view_id = :TreeViewId
                    AND eq_object_site.functional_object_seq IS NULL
                     AND (eq_object_site.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))))
             OR (contract IN
                (SELECT tw_serrings.site contract
                 FROM equipment_tw_settings tw_serrings,
                 equipment_object_uiv eq_object_site
                 WHERE tw_serrings.tree_view_id = :TreeViewId
                     AND tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                     AND tw_serrings.grouping_criteria_db = 'SITE'
                     AND tw_serrings.site IS NOT NULL
                     AND eq_object_site.functional_object_seq IS NULL
                     AND (eq_object_site.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
                     AND (tw_serrings.hide_empty_grup = 0 OR
                         (tw_serrings.hide_empty_grup = 1 AND
                         (EXISTS (SELECT 1
                                     FROM equipment_object_uiv obj_site
                                     WHERE obj_site.contract = tw_serrings.site)))))) ";
}

-- Fetch unique site under object
function GetUniqueSiteUnderObject List<Entity(CompanySite)> {
   basedon CompanySiteSet;
   ludependencies = CompanySite;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter EquipmentObjectSeq   Number;
   where = "contract IN
             (SELECT DISTINCT (eq_object.contract) contract
                FROM equipment_object_uiv  eq_object,
                     equipment_tw_settings tw_serrings
                WHERE tw_serrings.tree_view_id = :TreeViewId
                 AND tw_serrings.equipment_object_seq = :EquipmentObjectSeq
                 AND tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                 AND tw_serrings.grouping_criteria_db = 'SITE'
                 AND (((:StructureInTree = 'F' OR :StructureInTree IS NULL) AND eq_object.functional_object_seq = :EquipmentObjectSeq )
                      OR (:StructureInTree = 'L'  AND eq_object.location_object_seq = :EquipmentObjectSeq )
                      OR (:StructureInTree = 'R'  AND eq_object.from_object_seq  = :EquipmentObjectSeq )
                      OR (:StructureInTree = 'T'  AND eq_object.to_object_seq = :EquipmentObjectSeq )
                      OR (:StructureInTree = 'P'  AND eq_object.process_object_seq = :EquipmentObjectSeq )
                      OR (:StructureInTree = 'S'  AND eq_object.pipe_object_seq = :EquipmentObjectSeq )
                      OR (:StructureInTree = 'E'  AND eq_object.circuit_object_seq = :EquipmentObjectSeq ))
                 AND eq_object.contract = NVL(tw_serrings.site, eq_object.contract)
                 AND (eq_object.operational_status_db IN
                     (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                       DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                       DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                       DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                     (tw_serrings.disp_planned_for_op = 0 AND
                     tw_serrings.disp_in_operation = 0 AND
                     tw_serrings.disp_out_of_operation = 0 AND
                     tw_serrings.disp_scrapped = 0))) ";
}

-- Fetch unique locations to create grouping nodes for locations
function GetLocationFiltered List<Entity(Location)> {
   basedon LocationSet;
   ludependencies = Location;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   where = "(location_id IN
                (SELECT loc.location_id
                    FROM location loc,
                         equipment_tw_settings tw_serrings
                    WHERE tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                      AND tw_serrings.grouping_criteria_db = 'LOCATION'
                      AND tw_serrings.location_id IS NULL
                      AND tw_serrings.tree_view_id = :TreeViewId
                      AND (tw_serrings.hide_empty_grup = 0 OR
                         (tw_serrings.hide_empty_grup = 1 AND
                         (EXISTS
                          (SELECT 1
                               FROM equipment_object_uiv obj_loc
                              WHERE obj_loc.location_id = loc.location_id))))))
             OR (location_id IN
                (SELECT tw_serrings.location_id
                    FROM equipment_tw_settings tw_serrings
                   WHERE tw_serrings.tree_view_id = :TreeViewId
                     AND tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                     AND tw_serrings.grouping_criteria_db = 'LOCATION'
                     AND tw_serrings.location_id IS NOT NULL
                     AND (tw_serrings.hide_empty_grup = 0 OR
                         (tw_serrings.hide_empty_grup = 1 AND
                         (EXISTS
                          (SELECT 1
                               FROM equipment_object_uiv obj_loc
                              WHERE obj_loc.location_id = tw_serrings.location_id)))))) ";
}

-- Fetch equipment object without location
function GetFParentEquipObjWithoutLoc List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = ObjectCountsPmEntity;
   ludependencies = ObjectCountsWoEntity;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'LOCATION'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.location_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                    DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                    DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                    DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                    (tw_serrings.disp_planned_for_op = 0 AND
                    tw_serrings.disp_in_operation = 0 AND
                    tw_serrings.disp_out_of_operation = 0 AND
                    tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                     AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'F') = 'TRUE'
                AND ((equipment_object_uiv.functional_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.mch_code IS NOT NULL
                       AND tw_serrings.contract IS NOT NULL
                      AND ((equipment_object_uiv.functional_object_seq = tw_serrings.equipment_object_seq))))) ";
}
-- Fetch equipment object without location
function GetLParentEquipObjWithoutLoc List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = ObjectCountsPmEntity;
   ludependencies = ObjectCountsWoEntity;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'LOCATION'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.location_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                    DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                    DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                    DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                    (tw_serrings.disp_planned_for_op = 0 AND
                    tw_serrings.disp_in_operation = 0 AND
                    tw_serrings.disp_out_of_operation = 0 AND
                    tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                     AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'L') = 'TRUE'
                AND ((equipment_object_uiv.functional_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.mch_code IS NOT NULL
                       AND tw_serrings.contract IS NOT NULL
                      AND ((equipment_object_uiv.functional_object_seq = tw_serrings.equipment_object_seq))))) ";
}
-- Fetch equipment object without location
function GetRParentEquipObjWithoutLoc List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = ObjectCountsPmEntity;
   ludependencies = ObjectCountsWoEntity;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'LOCATION'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.location_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                    DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                    DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                    DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                    (tw_serrings.disp_planned_for_op = 0 AND
                    tw_serrings.disp_in_operation = 0 AND
                    tw_serrings.disp_out_of_operation = 0 AND
                    tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                     AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'R') = 'TRUE'
                AND ((equipment_object_uiv.from_object_seq  IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.mch_code IS NOT NULL
                       AND tw_serrings.contract IS NOT NULL
                      AND ((equipment_object_uiv.from_object_seq  = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without location
function GetTParentEquipObjWithoutLoc List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = ObjectCountsPmEntity;
   ludependencies = ObjectCountsWoEntity;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'LOCATION'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.location_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                    DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                    DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                    DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                    (tw_serrings.disp_planned_for_op = 0 AND
                    tw_serrings.disp_in_operation = 0 AND
                    tw_serrings.disp_out_of_operation = 0 AND
                    tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                     AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'T') = 'TRUE'
                AND ((equipment_object_uiv.to_object_seq IS NULL AND equipment_object_uiv.to_contract IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.mch_code IS NOT NULL
                       AND tw_serrings.contract IS NOT NULL
                      AND ((equipment_object_uiv.to_object_seq = tw_serrings.equipment_object_seq))))) ";
}
-- Fetch equipment object without location
function GetPParentEquipObjWithoutLoc List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = ObjectCountsPmEntity;
   ludependencies = ObjectCountsWoEntity;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'LOCATION'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.location_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                    DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                    DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                    DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                    (tw_serrings.disp_planned_for_op = 0 AND
                    tw_serrings.disp_in_operation = 0 AND
                    tw_serrings.disp_out_of_operation = 0 AND
                    tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                     AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'P') = 'TRUE'
                AND ((equipment_object_uiv.process_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.mch_code IS NOT NULL
                       AND tw_serrings.contract IS NOT NULL
                      AND ((equipment_object_uiv.process_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without location
function GetSParentEquipObjWithoutLoc List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = ObjectCountsPmEntity;
   ludependencies = ObjectCountsWoEntity;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                FROM equipment_tw_settings tw_serrings
                WHERE tw_serrings.grouping_criteria_db = 'LOCATION'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.location_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                    DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                    DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                    DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                    (tw_serrings.disp_planned_for_op = 0 AND
                    tw_serrings.disp_in_operation = 0 AND
                    tw_serrings.disp_out_of_operation = 0 AND
                    tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                     AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'S') = 'TRUE'
                AND ((equipment_object_uiv.pipe_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.mch_code IS NOT NULL
                       AND tw_serrings.contract IS NOT NULL
                      AND ((equipment_object_uiv.pipe_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without location
function GetEParentEquipObjWithoutLoc List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = ObjectCountsPmEntity;
   ludependencies = ObjectCountsWoEntity;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'LOCATION'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.location_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                    DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                    DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                    DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                    (tw_serrings.disp_planned_for_op = 0 AND
                    tw_serrings.disp_in_operation = 0 AND
                    tw_serrings.disp_out_of_operation = 0 AND
                    tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                     AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'E') = 'TRUE'
                AND ((equipment_object_uiv.circuit_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.mch_code IS NOT NULL
                       AND tw_serrings.contract IS NOT NULL
                      AND ((equipment_object_uiv.circuit_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch parent equipment objects
function GetFParentEquipObjects List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
               AND tw_serrings.grouping_criteria_db = 'DEFAULT'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND equipment_object_uiv.functional_object_seq IS NULL
               AND EXISTS(SELECT 1
                          FROM EQUIPMENT_OBJECT
                          WHERE functional_object_seq = equipment_object_uiv.equipment_object_seq)
               AND (equipment_object_uiv.operational_status_db IN
                     (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                           (tw_serrings.disp_planned_for_op = 0 AND
                            tw_serrings.disp_in_operation = 0 AND
                            tw_serrings.disp_out_of_operation = 0 AND
                            tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                     (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                     DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                     DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                     DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'F') = 'TRUE'
               AND ((equipment_object_uiv.functional_object_seq  IS NULL))) ";
}

-- Fetch parent equipment objects
function GetLParentEquipObjects List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
               AND tw_serrings.grouping_criteria_db = 'DEFAULT'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND equipment_object_uiv.location_object_seq IS NULL
               AND EXISTS(SELECT 1
                          FROM EQUIPMENT_OBJECT
                          WHERE location_object_seq = equipment_object_uiv.equipment_object_seq)
               AND (equipment_object_uiv.operational_status_db IN
                     (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                           (tw_serrings.disp_planned_for_op = 0 AND
                            tw_serrings.disp_in_operation = 0 AND
                            tw_serrings.disp_out_of_operation = 0 AND
                            tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                     (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                     DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                     DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                     DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'L') = 'TRUE'
               AND ((equipment_object_uiv.location_object_seq IS NULL))) ";
}

-- Fetch parent equipment objects
function GetRParentEquipObjects List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
               AND tw_serrings.grouping_criteria_db = 'DEFAULT'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND equipment_object_uiv.from_object_seq IS NULL
               AND EXISTS(SELECT 1
                          FROM EQUIPMENT_OBJECT
                          WHERE from_object_seq = equipment_object_uiv.equipment_object_seq)
               AND (equipment_object_uiv.operational_status_db IN
                     (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                           (tw_serrings.disp_planned_for_op = 0 AND
                            tw_serrings.disp_in_operation = 0 AND
                            tw_serrings.disp_out_of_operation = 0 AND
                            tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                     (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                     DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                     DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                     DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'R') = 'TRUE'
               AND ((equipment_object_uiv.from_object_seq IS NULL))) ";
}

-- Fetch parent equipment objects
function GetTParentEquipObjects List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
               AND tw_serrings.grouping_criteria_db = 'DEFAULT'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND equipment_object_uiv.to_object_seq IS NULL
               AND EXISTS(SELECT 1
                          FROM EQUIPMENT_OBJECT
                          WHERE to_object_seq = equipment_object_uiv.equipment_object_seq)
               AND (equipment_object_uiv.operational_status_db IN
                     (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                           (tw_serrings.disp_planned_for_op = 0 AND
                            tw_serrings.disp_in_operation = 0 AND
                            tw_serrings.disp_out_of_operation = 0 AND
                            tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                     (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                     DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                     DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                     DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'T') = 'TRUE'
               AND ((equipment_object_uiv.to_object_seq IS NULL))) ";
}

-- Fetch parent equipment objects
function GetPParentEquipObjects List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
               AND tw_serrings.grouping_criteria_db = 'DEFAULT'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND equipment_object_uiv.process_object_seq IS NULL
               AND EXISTS(SELECT 1
                          FROM EQUIPMENT_OBJECT
                          WHERE process_object_seq = equipment_object_uiv.equipment_object_seq)
               AND (equipment_object_uiv.operational_status_db IN
                     (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                           (tw_serrings.disp_planned_for_op = 0 AND
                            tw_serrings.disp_in_operation = 0 AND
                            tw_serrings.disp_out_of_operation = 0 AND
                            tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                     (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                     DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                     DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                     DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'P') = 'TRUE'
               AND ((equipment_object_uiv.process_object_seq IS NULL))) ";
}

-- Fetch parent equipment objects
function GetSParentEquipObjects List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
               AND tw_serrings.grouping_criteria_db = 'DEFAULT'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND equipment_object_uiv.pipe_object_seq IS NULL
               AND EXISTS(SELECT 1
                          FROM EQUIPMENT_OBJECT
                          WHERE pipe_object_seq = equipment_object_uiv.equipment_object_seq)
               AND (equipment_object_uiv.operational_status_db IN
                     (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                           (tw_serrings.disp_planned_for_op = 0 AND
                            tw_serrings.disp_in_operation = 0 AND
                            tw_serrings.disp_out_of_operation = 0 AND
                            tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                     (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                     DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                     DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                     DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'S') = 'TRUE'
                AND ((equipment_object_uiv.pipe_object_seq IS NULL))) ";
}

-- Fetch parent equipment objects
function GetEParentEquipObjects List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
               AND tw_serrings.grouping_criteria_db = 'DEFAULT'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND equipment_object_uiv.circuit_object_seq IS NULL
               AND EXISTS(SELECT 1
                          FROM EQUIPMENT_OBJECT
                          WHERE circuit_object_seq = equipment_object_uiv.equipment_object_seq)
               AND (equipment_object_uiv.operational_status_db IN
                     (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                           (tw_serrings.disp_planned_for_op = 0 AND
                            tw_serrings.disp_in_operation = 0 AND
                            tw_serrings.disp_out_of_operation = 0 AND
                            tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                     (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                     DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                     DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                     DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'E') = 'TRUE'
               AND ((equipment_object_uiv.circuit_object_seq IS NULL))) ";
}
-- Fetch equipment object without object type
function GetFParentEquipObjWithoutObjtype List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'OBJECT_TYPE'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.mch_type IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                    AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'F') = 'TRUE'
                AND ((equipment_object_uiv.functional_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.functional_object_seq = tw_serrings.equipment_object_seq))))) ";
}
-- Fetch equipment object without object type
function GetLParentEquipObjWithoutObjtype List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'OBJECT_TYPE'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.mch_type IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                    AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'L') = 'TRUE'
                AND ((equipment_object_uiv.location_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.location_object_seq = tw_serrings.equipment_object_seq))))) ";
}
-- Fetch equipment object without object type
function GetRParentEquipObjWithoutObjtype List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'OBJECT_TYPE'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.mch_type IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                    AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'R') = 'TRUE'
                AND ((equipment_object_uiv.from_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.from_object_seq = tw_serrings.equipment_object_seq))))) ";
}
-- Fetch equipment object without object type
function GetTParentEquipObjWithoutObjtype List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'OBJECT_TYPE'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.mch_type IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                    AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'T') = 'TRUE'
                AND ((equipment_object_uiv.to_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.to_object_seq = tw_serrings.equipment_object_seq))))) ";
}
-- Fetch equipment object without object type
function GetPParentEquipObjWithoutObjtype List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'OBJECT_TYPE'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.mch_type IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                    AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'P') = 'TRUE'
                AND ((equipment_object_uiv.process_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL IS NOT NULL
                      AND ((equipment_object_uiv.process_object_seq = tw_serrings.equipment_object_seq))))) ";
}
-- Fetch equipment object without object type
function GetSParentEquipObjWithoutObjtype List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'OBJECT_TYPE'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.mch_type IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                    AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'S') = 'TRUE'
                AND ((equipment_object_uiv.pipe_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                       AND ((equipment_object_uiv.pipe_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without object type
function GetEParentEquipObjWithoutObjtype List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'OBJECT_TYPE'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.mch_type IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                    AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'E') = 'TRUE'
                AND ((equipment_object_uiv.circuit_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.circuit_object_seq = tw_serrings.equipment_object_seq))))) ";
}
-- Fetch equipment object without criticality
function GetFParentEquipObjWithoutCriticality List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'OBJECT_CRITICALITY'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.criticality IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
                   AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'F') = 'TRUE'
                AND ((equipment_object_uiv.functional_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.functional_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without criticality
function GetLParentEquipObjWithoutCriticality List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'OBJECT_CRITICALITY'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.criticality IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'L') = 'TRUE'
                AND ((equipment_object_uiv.location_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.location_object_seq = tw_serrings.equipment_object_seq))))) ";
}
-- Fetch equipment object without criticality
function GetRParentEquipObjWithoutCriticality List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'OBJECT_CRITICALITY'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.criticality IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'R') = 'TRUE'
                AND ((equipment_object_uiv.from_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.from_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without criticality
function GetTParentEquipObjWithoutCriticality List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'OBJECT_CRITICALITY'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.criticality IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'T') = 'TRUE'
                AND ((equipment_object_uiv.to_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.to_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without criticality
function GetPParentEquipObjWithoutCriticality List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'OBJECT_CRITICALITY'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.criticality IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'P') = 'TRUE'
                AND ((equipment_object_uiv.process_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.process_object_seq = tw_serrings.equipment_object_seq))))) ";
}
-- Fetch equipment object without criticality
function GetSParentEquipObjWithoutCriticality List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'OBJECT_CRITICALITY'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.criticality IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'S') = 'TRUE'
                AND ((equipment_object_uiv.pipe_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.pipe_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without criticality
function GetEParentEquipObjWithoutCriticality List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'OBJECT_CRITICALITY'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.criticality IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'E') = 'TRUE'
                AND ((equipment_object_uiv.circuit_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.circuit_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Item Class
function GetFParentEquipObjWithoutItemClass List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'ITEM_CLASS'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.item_class_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'F') = 'TRUE'
                AND ((equipment_object_uiv.functional_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.functional_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Item Class
function GetLParentEquipObjWithoutItemClass List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'ITEM_CLASS'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.item_class_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'L') = 'TRUE'
                AND ((equipment_object_uiv.location_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.location_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Item Class
function GetRParentEquipObjWithoutItemClass List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'ITEM_CLASS'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.item_class_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'R') = 'TRUE'
                AND ((equipment_object_uiv.from_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.from_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Item Class
function GetTParentEquipObjWithoutItemClass List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'ITEM_CLASS'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.item_class_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'T') = 'TRUE'
                AND ((equipment_object_uiv.to_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.to_object_seq =  tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Item Class
function GetPParentEquipObjWithoutItemClass List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'ITEM_CLASS'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.item_class_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'P') = 'TRUE'
                AND ((equipment_object_uiv.process_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.process_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Item Class
function GetSParentEquipObjWithoutItemClass List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'ITEM_CLASS'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.item_class_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'S') = 'TRUE'
                AND ((equipment_object_uiv.pipe_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.pipe_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Item Class
function GetEParentEquipObjWithoutItemClass List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'ITEM_CLASS'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.item_class_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'E') = 'TRUE'
                AND ((equipment_object_uiv.circuit_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.circuit_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Group Id
function GetFParentEquipObjWithoutGroupId List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'GROUP_ID'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.group_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
                AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'F') = 'TRUE'
                AND ((equipment_object_uiv.functional_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.functional_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Group Id
function GetLParentEquipObjWithoutGroupId List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'GROUP_ID'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.group_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
                AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'L') = 'TRUE'
                AND ((equipment_object_uiv.location_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.location_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Group Id
function GetRParentEquipObjWithoutGroupId List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'GROUP_ID'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.group_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
                AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'R') = 'TRUE'
                AND ((equipment_object_uiv.from_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.from_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Group Id
function GetTParentEquipObjWithoutGroupId List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'GROUP_ID'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.group_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
                AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'T') = 'TRUE'
                AND ((equipment_object_uiv.to_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.to_object_seq =  tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Group Id
function GetPParentEquipObjWithoutGroupId List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'GROUP_ID'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.group_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
                AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'P') = 'TRUE'
                AND ((equipment_object_uiv.process_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.process_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Group Id
function GetSParentEquipObjWithoutGroupId List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'GROUP_ID'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.group_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
                AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'S') = 'TRUE'
                AND ((equipment_object_uiv.pipe_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.pipe_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Group Id
function GetEParentEquipObjWithoutGroupId List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'GROUP_ID'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.group_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
                AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'E') = 'TRUE'
                AND ((equipment_object_uiv.circuit_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.circuit_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Category
function GetFParentEquipObjWithoutCategory List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'CATEGORY'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.category_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'F') = 'TRUE'
                AND (( equipment_object_uiv.functional_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.functional_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Category
function GetLParentEquipObjWithoutCategory List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'CATEGORY'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.category_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'L') = 'TRUE'
                AND ((equipment_object_uiv.location_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.location_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Category
function GetRParentEquipObjWithoutCategory List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'CATEGORY'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.category_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'R') = 'TRUE'
                AND ((equipment_object_uiv.from_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.from_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Category
function GetTParentEquipObjWithoutCategory List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'CATEGORY'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.category_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'T') = 'TRUE'
                AND ((equipment_object_uiv.to_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.to_object_seq =  tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Category
function GetPParentEquipObjWithoutCategory List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'CATEGORY'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.category_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'P') = 'TRUE'
                AND ((equipment_object_uiv.process_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.process_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Category
function GetSParentEquipObjWithoutCategory List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'CATEGORY'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.category_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'S') = 'TRUE'
                AND ((equipment_object_uiv.pipe_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.pipe_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Category
function GetEParentEquipObjWithoutCategory List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'CATEGORY'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.category_id IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'E') = 'TRUE'
                AND ((equipment_object_uiv.circuit_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.circuit_object_seq = tw_serrings.equipment_object_seq))))) ";
}
-- Fetch equipment object without Manufacturer
function GetFParentEquipObjWithoutManufacturer List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'MANUFACTURER'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.manufacturer_no IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'F') = 'TRUE'
                AND ((equipment_object_uiv.functional_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.functional_object_seq = tw_serrings.equipment_object_seq))))) ";
}
-- Fetch equipment object without Manufacturer
function GetLParentEquipObjWithoutManufacturer List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'MANUFACTURER'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.manufacturer_no IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'L') = 'TRUE'
                AND ((equipment_object_uiv.location_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.location_object_seq = tw_serrings.equipment_object_seq))))) ";
}
-- Fetch equipment object without Manufacturer
function GetRParentEquipObjWithoutManufacturer List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'MANUFACTURER'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.manufacturer_no IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'R') = 'TRUE'
                AND ((equipment_object_uiv.from_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.from_object_seq = tw_serrings.equipment_object_seq))))) ";
}

-- Fetch equipment object without Manufacturer
function GetTParentEquipObjWithoutManufacturer List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'MANUFACTURER'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.manufacturer_no IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'T') = 'TRUE'
                AND ((equipment_object_uiv.to_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.to_object_seq =  tw_serrings.equipment_object_seq))))) ";
}
-- Fetch equipment object without Manufacturer
function GetPParentEquipObjWithoutManufacturer List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'MANUFACTURER'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.manufacturer_no IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                  AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'P') = 'TRUE'
                  AND ((equipment_object_uiv.process_object_seq IS NULL)))
                  OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                       AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                       AND ((equipment_object_uiv.process_object_seq = tw_serrings.equipment_object_seq))))) ";
}
-- Fetch equipment object without Manufacturer
function GetSParentEquipObjWithoutManufacturer List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              ( SELECT 1
                 FROM equipment_tw_settings tw_serrings
                 WHERE tw_serrings.grouping_criteria_db = 'MANUFACTURER'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.manufacturer_no IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                  AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'S') = 'TRUE'
                  AND ((equipment_object_uiv.pipe_object_seq IS NULL)))
                  OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                       AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                       AND ((equipment_object_uiv.pipe_object_seq = tw_serrings.equipment_object_seq))))) ";
}
-- Fetch equipment object without Manufacturer
function GetEParentEquipObjWithoutManufacturer List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter Level Text;
   where = "EXISTS
              (SELECT 1
               FROM equipment_tw_settings tw_serrings
               WHERE tw_serrings.grouping_criteria_db = 'MANUFACTURER'
               AND tw_serrings.tree_view_id = :TreeViewId
               AND tw_serrings.hide_objs_without_grup = 0
               AND equipment_object_uiv.manufacturer_no IS NULL
               AND (equipment_object_uiv.operational_status_db IN
                   (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                     DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                     DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                     DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                   (tw_serrings.disp_planned_for_op = 0 AND
                   tw_serrings.disp_in_operation = 0 AND
                   tw_serrings.disp_out_of_operation = 0 AND
                   tw_serrings.disp_scrapped = 0))
               AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))
               AND ((tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                  AND :Level = 'T'
                AND Equipment_Object_API.Has_Structure_Type(equipment_object_uiv.equipment_object_seq, 'E') = 'TRUE'
                AND ((equipment_object_uiv.circuit_object_seq IS NULL)))
                 OR (tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND :Level = 'C'
                       AND tw_serrings.equipment_object_seq IS NOT NULL
                      AND ((equipment_object_uiv.circuit_object_seq = tw_serrings.equipment_object_seq))))) ";
}

function GetUniqueLocationUnderObject List<Entity(Location)> {
   basedon LocationSet;
   ludependencies = Location;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter EquipmentObjectSeq Number;
   where = "location_id IN
             (SELECT DISTINCT (eq_object.location_id) location_id
                FROM equipment_object_uiv  eq_object,
                     equipment_tw_settings tw_serrings
               WHERE tw_serrings.tree_view_id = :TreeViewId
                 AND tw_serrings.equipment_object_seq = :EquipmentObjectSeq
                 AND eq_object.location_id IS NOT NULL
                 AND eq_object.location_id = NVL(tw_serrings.location_id, eq_object.location_id)
                 AND tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                 AND tw_serrings.grouping_criteria_db = 'LOCATION'
                 AND (((:StructureInTree = 'F' OR :StructureInTree IS NULL) AND eq_object.functional_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'L'  AND eq_object.location_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'R'  AND eq_object.from_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'T'  AND eq_object.to_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'P'  AND eq_object.process_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'S'  AND eq_object.pipe_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'E'  AND eq_object.pipe_object_seq = :EquipmentObjectSeq))
                 AND (eq_object.operational_status_db IN
                     (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                       DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                       DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                       DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                     (tw_serrings.disp_planned_for_op = 0 AND
                     tw_serrings.disp_in_operation = 0 AND
                     tw_serrings.disp_out_of_operation = 0 AND
                     tw_serrings.disp_scrapped = 0))) ";
}

-- Fetch unique object types to create grouping nodes for object types
function GetObjTypeFiltered List<Entity(EquipmentObjType)> {
   basedon EquipmentObjTypeSet;
   ludependencies = EquipmentObjType;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   where = "(mch_type IN
                      (SELECT tw_serrings.mch_type
                          FROM equipment_tw_settings tw_serrings
                         WHERE tw_serrings.tree_view_id = :TreeViewId
                           AND tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                           AND tw_serrings.grouping_criteria_db = 'OBJECT_TYPE'
                           AND tw_serrings.mch_type IS NOT NULL
                           AND (tw_serrings.hide_empty_grup = 0 OR
                               (tw_serrings.hide_empty_grup = 1 AND
                               (EXISTS
                                (SELECT 1
                                     FROM equipment_object_uiv obj_type
                                    WHERE obj_type.mch_type = tw_serrings.mch_type))))))
                   OR (mch_type IN
                      (SELECT obj_type.mch_type
                          FROM equipment_obj_type    obj_type,
                               equipment_tw_settings tw_serrings
                         WHERE tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                           AND tw_serrings.grouping_criteria_db = 'OBJECT_TYPE'
                           AND tw_serrings.mch_type IS NULL
                           AND tw_serrings.tree_view_id = :TreeViewId
                           AND (tw_serrings.hide_empty_grup = 0 OR
                               (tw_serrings.hide_empty_grup = 1 AND
                               (EXISTS
                                (SELECT 1
                                     FROM equipment_object_uiv obj_mch_type
                                    WHERE obj_mch_type.mch_type = obj_type.mch_type)))))) ";
}

-- Fetch unique object types to create grouping nodes for criticality
function GetCriticalityFiltered List<Entity(EquipmentCriticality)> {
   basedon EquipmentCriticalitySet;
   ludependencies = EquipmentCriticality;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   where = "(criticality IN
                      (SELECT tw_serrings.criticality
                          FROM equipment_tw_settings tw_serrings
                         WHERE tw_serrings.tree_view_id = :TreeViewId
                           AND tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                           AND tw_serrings.grouping_criteria_db = 'OBJECT_CRITICALITY'
                           AND tw_serrings.criticality IS NOT NULL
                           AND (tw_serrings.hide_empty_grup = 0 OR
                               (tw_serrings.hide_empty_grup = 1 AND
                               (EXISTS
                                (SELECT 1
                                     FROM equipment_object_uiv obj_type
                                    WHERE obj_type.criticality = tw_serrings.criticality))))))
                   OR (criticality IN
                      (SELECT obj_criticality.criticality
                          FROM equipment_criticality    obj_criticality,
                               equipment_tw_settings tw_serrings
                         WHERE tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                           AND tw_serrings.grouping_criteria_db = 'OBJECT_CRITICALITY'
                           AND tw_serrings.criticality IS NULL
                           AND tw_serrings.tree_view_id = :TreeViewId
                           AND (tw_serrings.hide_empty_grup = 0 OR
                               (tw_serrings.hide_empty_grup = 1 AND
                               (EXISTS
                                (SELECT 1
                                     FROM equipment_object_uiv obj_cri
                                    WHERE obj_cri.criticality = obj_criticality.criticality)))))) ";
}

-- Fetch unique object types to create grouping nodes for Item Class
function GetItemClassFiltered List<Entity(ItemClass)> {
   basedon ItemClassSet;
   ludependencies = ItemClass;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   where = "(item_class_id IN
                      (SELECT tw_serrings.item_class
                          FROM equipment_tw_settings tw_serrings
                          WHERE tw_serrings.tree_view_id = :TreeViewId
                          AND tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                          AND tw_serrings.grouping_criteria_db = 'ITEM_CLASS'
                          AND tw_serrings.item_class IS NOT NULL
                          AND (tw_serrings.hide_empty_grup = 0 OR
                               (tw_serrings.hide_empty_grup = 1 AND
                               (EXISTS
                                (SELECT 1
                                     FROM equipment_object_uiv obj_type
                                    WHERE obj_type.item_class_id = tw_serrings.item_class))))))
                   OR (item_class_id IN
                      (SELECT obj_item_class.item_class_id
                          FROM item_class obj_item_class,
                               equipment_tw_settings tw_serrings
                         WHERE tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                           AND tw_serrings.grouping_criteria_db = 'ITEM_CLASS'
                           AND tw_serrings.item_class IS NULL
                           AND tw_serrings.tree_view_id = :TreeViewId
                           AND (tw_serrings.hide_empty_grup = 0 OR
                               (tw_serrings.hide_empty_grup = 1 AND
                               (EXISTS
                                (SELECT 1
                                     FROM equipment_object_uiv obj_class
                                     WHERE obj_class.item_class_id = obj_item_class.item_class_id)))))) ";
}

-- Fetch unique object types to create grouping nodes for GroupId
function GetGroupIdFiltered List<Entity(EquipmentObjGroup)> {
   basedon EquipmentObjGroupSet;
   ludependencies = EquipmentObjGroup;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   where = "(group_id IN
                      (SELECT tw_serrings.group_id
                          FROM equipment_tw_settings tw_serrings
                         WHERE tw_serrings.tree_view_id = :TreeViewId
                           AND tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                           AND tw_serrings.grouping_criteria_db = 'GROUP_ID'
                           AND tw_serrings.group_id IS NOT NULL
                           AND (tw_serrings.hide_empty_grup = 0 OR
                               (tw_serrings.hide_empty_grup = 1 AND
                               (EXISTS
                                (SELECT 1
                                     FROM equipment_object_uiv obj_type
                                    WHERE obj_type.group_id = tw_serrings.group_id))))))
                   OR (group_id IN
                      (SELECT obj_group_id.group_id
                          FROM equipment_obj_group obj_group_id,
                               equipment_tw_settings tw_serrings
                         WHERE tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                           AND tw_serrings.grouping_criteria_db = 'GROUP_ID'
                           AND tw_serrings.group_id IS NULL
                           AND tw_serrings.tree_view_id = :TreeViewId
                           AND (tw_serrings.hide_empty_grup = 0 OR
                               (tw_serrings.hide_empty_grup = 1 AND
                               (EXISTS
                                (SELECT 1
                                     FROM equipment_object_uiv obj_class
                                    WHERE obj_class.group_id = obj_group_id.group_id)))))) ";
}

-- Fetch unique object types to create grouping nodes for Category
function GetCategoryFiltered List<Entity(EquipmentObjCategory)> {
   basedon EquipmentObjCategorySet;
   ludependencies = EquipmentObjCategory;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   where = "(category_id IN
                      (SELECT tw_serrings.item_class
                          FROM equipment_tw_settings tw_serrings
                         WHERE tw_serrings.tree_view_id = :TreeViewId
                           AND tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                           AND tw_serrings.grouping_criteria_db = 'CATEGORY'
                           AND tw_serrings.category_id IS NOT NULL
                           AND (tw_serrings.hide_empty_grup = 0 OR
                               (tw_serrings.hide_empty_grup = 1 AND
                               (EXISTS
                                (SELECT 1
                                     FROM equipment_object_uiv obj_type
                                    WHERE obj_type.category_id = tw_serrings.category_id))))))
                   OR (category_id IN
                      (SELECT obj_category.category_id
                          FROM equipment_obj_category obj_category,
                               equipment_tw_settings tw_serrings
                         WHERE tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                           AND tw_serrings.grouping_criteria_db = 'CATEGORY'
                           AND tw_serrings.category_id IS NULL
                           AND tw_serrings.tree_view_id = :TreeViewId
                           AND (tw_serrings.hide_empty_grup = 0 OR
                               (tw_serrings.hide_empty_grup = 1 AND
                               (EXISTS
                                (SELECT 1
                                     FROM equipment_object_uiv obj_category_id
                                    WHERE obj_category_id.category_id = obj_category.category_id)))))) ";
}

-- Fetch unique object types to create grouping nodes for Manufacturer
function GetManufacturerFiltered List<Entity(ManufacturerInfo)> {
   basedon ManufacturerInfoSet;
   ludependencies = ManufacturerInfo;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   where = "(manufacturer_id  IN
                      (SELECT tw_serrings.manufacturer_no
                          FROM equipment_tw_settings tw_serrings
                         WHERE tw_serrings.tree_view_id = :TreeViewId
                           AND tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                           AND tw_serrings.grouping_criteria_db = 'MANUFACTURER'
                           AND tw_serrings.manufacturer_no IS NOT NULL
                           AND (tw_serrings.hide_empty_grup = 0 OR
                               (tw_serrings.hide_empty_grup = 1 AND
                               (EXISTS
                                (SELECT 1
                                     FROM equipment_object_uiv obj_manufacturer
                                    WHERE obj_manufacturer.manufacturer_no = tw_serrings.manufacturer_no))))))
                   OR (manufacturer_id IN
                      (SELECT obj_manufacturer_id.manufacturer_id
                          FROM manufacturer_info obj_manufacturer_id,
                               equipment_tw_settings tw_serrings
                         WHERE tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'
                           AND tw_serrings.grouping_criteria_db = 'MANUFACTURER'
                           AND tw_serrings.manufacturer_no IS NULL
                           AND tw_serrings.tree_view_id = :TreeViewId
                           AND (tw_serrings.hide_empty_grup = 0 OR
                               (tw_serrings.hide_empty_grup = 1 AND
                               (EXISTS
                                (SELECT 1
                                     FROM equipment_object_uiv obj_manufacturer
                                    WHERE obj_manufacturer.manufacturer_no = obj_manufacturer_id.manufacturer_id)))))) ";
}

function GetUniqueObjTypeUnderObject List<Entity(EquipmentObjType)> {
   basedon EquipmentObjTypeSet;
   ludependencies = EquipmentObjType;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter EquipmentObjectSeq Number;
   where = "mch_type IN
             (SELECT DISTINCT (eq_object.mch_type) mch_type
                FROM equipment_object_uiv  eq_object,
                     equipment_tw_settings tw_serrings
               WHERE tw_serrings.tree_view_id = :TreeViewId
                 AND tw_serrings.equipment_object_seq = :EquipmentObjectSeq
                 AND eq_object.mch_type IS NOT NULL
                 AND eq_object.mch_type = NVL(tw_serrings.mch_type, eq_object.mch_type)
                 AND tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                 AND tw_serrings.grouping_criteria_db = 'OBJECT_TYPE'
                 AND (((:StructureInTree = 'F' OR :StructureInTree IS NULL) AND eq_object.functional_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'L'  AND eq_object.location_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'R'  AND eq_object.from_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'T'  AND eq_object.to_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'P'  AND eq_object.process_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'S'  AND eq_object.pipe_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'E'  AND eq_object.pipe_object_seq = :EquipmentObjectSeq))
                 AND (eq_object.operational_status_db IN
                     (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                       DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                       DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                       DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                     (tw_serrings.disp_planned_for_op = 0 AND
                     tw_serrings.disp_in_operation = 0 AND
                     tw_serrings.disp_out_of_operation = 0 AND
                     tw_serrings.disp_scrapped = 0))) ";
}

function GetUniqueCriticalityUnderObject List<Entity(EquipmentCriticality)> {
   basedon EquipmentCriticalitySet;
   ludependencies = EquipmentCriticality;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter EquipmentObjectSeq Number;
   where = "criticality IN
             (SELECT DISTINCT (eq_object.criticality) criticality
                FROM equipment_object_uiv  eq_object,
                     equipment_tw_settings tw_serrings
               WHERE tw_serrings.tree_view_id = :TreeViewId
                 AND tw_serrings.equipment_object_seq = :EquipmentObjectSeq
                 AND eq_object.criticality IS NOT NULL
                 AND eq_object.criticality = NVL(tw_serrings.criticality, eq_object.criticality)
                 AND tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                 AND tw_serrings.grouping_criteria_db = 'OBJECT_CRITICALITY'
                 AND (((:StructureInTree = 'F' OR :StructureInTree IS NULL) AND eq_object.functional_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'L'  AND eq_object.location_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'R'  AND eq_object.from_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'T'  AND eq_object.to_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'P'  AND eq_object.process_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'S'  AND eq_object.pipe_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'E'  AND eq_object.pipe_object_seq = :EquipmentObjectSeq))
                 AND (eq_object.operational_status_db IN
                     (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                       DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                       DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                       DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                     (tw_serrings.disp_planned_for_op = 0 AND
                     tw_serrings.disp_in_operation = 0 AND
                     tw_serrings.disp_out_of_operation = 0 AND
                     tw_serrings.disp_scrapped = 0))) ";
}

function GetUniqueItemClassUnderObject List<Entity(ItemClass)> {
   basedon ItemClassSet;
   ludependencies = ItemClass;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter EquipmentObjectSeq Number;
   where = "item_class_id IN
             (SELECT DISTINCT (eq_object.item_class_id) item_class_id
                FROM equipment_object_uiv  eq_object,
                     equipment_tw_settings tw_serrings
               WHERE tw_serrings.tree_view_id = :TreeViewId
                 AND tw_serrings.equipment_object_seq = :EquipmentObjectSeq
                 AND eq_object.item_class_id IS NOT NULL
                 AND eq_object.item_class_id = NVL(tw_serrings.item_class, eq_object.item_class_id)
                 AND tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                 AND tw_serrings.grouping_criteria_db = 'ITEM_CLASS'
                 AND (((:StructureInTree = 'F' OR :StructureInTree IS NULL) AND eq_object.functional_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'L'  AND eq_object.location_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'R'  AND eq_object.from_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'T'  AND eq_object.to_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'P'  AND eq_object.process_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'S'  AND eq_object.pipe_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'E'  AND eq_object.pipe_object_seq = :EquipmentObjectSeq))
                 AND (eq_object.operational_status_db IN
                     (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                       DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                       DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                       DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                     (tw_serrings.disp_planned_for_op = 0 AND
                     tw_serrings.disp_in_operation = 0 AND
                     tw_serrings.disp_out_of_operation = 0 AND
                     tw_serrings.disp_scrapped = 0))) ";
}

function GetUniqueGroupIdUnderObject List<Entity(EquipmentObjGroup)> {
   basedon EquipmentObjGroupSet;
   ludependencies = EquipmentObjGroup;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter EquipmentObjectSeq Number;
   where = "group_id IN
             (SELECT DISTINCT (eq_object.group_id) group_id
                FROM equipment_object_uiv  eq_object,
                     equipment_tw_settings tw_serrings
               WHERE tw_serrings.tree_view_id = :TreeViewId
                 AND tw_serrings.equipment_object_seq = :EquipmentObjectSeq
                 AND eq_object.group_id IS NOT NULL
                 AND eq_object.group_id = NVL(tw_serrings.group_id, eq_object.group_id)
                 AND tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                 AND tw_serrings.grouping_criteria_db = 'GROUP_ID'
                 AND (((:StructureInTree = 'F' OR :StructureInTree IS NULL) AND eq_object.functional_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'L'  AND eq_object.location_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'R'  AND eq_object.from_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'T'  AND eq_object.to_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'P'  AND eq_object.process_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'S'  AND eq_object.pipe_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'E'  AND eq_object.pipe_object_seq = :EquipmentObjectSeq))
                 AND (eq_object.operational_status_db IN
                     (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                       DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                       DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                       DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                     (tw_serrings.disp_planned_for_op = 0 AND
                     tw_serrings.disp_in_operation = 0 AND
                     tw_serrings.disp_out_of_operation = 0 AND
                     tw_serrings.disp_scrapped = 0))) ";
}


function GetUniqueCategoryUnderObject List<Entity(EquipmentObjCategory)> {
   basedon EquipmentObjCategorySet;
   ludependencies = EquipmentObjCategory;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter EquipmentObjectSeq Number;
   where = "category_id IN
             (SELECT DISTINCT (eq_object.category_id) category_id
                FROM equipment_object_uiv  eq_object,
                     equipment_tw_settings tw_serrings
               WHERE tw_serrings.tree_view_id = :TreeViewId
                 AND tw_serrings.equipment_object_seq = :EquipmentObjectSeq
                 AND eq_object.category_id IS NOT NULL
                 AND eq_object.category_id = NVL(tw_serrings.category_id, eq_object.category_id)
                 AND tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                 AND tw_serrings.grouping_criteria_db = 'CATEGORY'
                 AND (((:StructureInTree = 'F' OR :StructureInTree IS NULL) AND eq_object.functional_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'L'  AND eq_object.location_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'R'  AND eq_object.from_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'T'  AND eq_object.to_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'P'  AND eq_object.process_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'S'  AND eq_object.pipe_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'E'  AND eq_object.pipe_object_seq = :EquipmentObjectSeq))
                 AND (eq_object.operational_status_db IN
                     (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                       DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                       DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                       DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                     (tw_serrings.disp_planned_for_op = 0 AND
                     tw_serrings.disp_in_operation = 0 AND
                     tw_serrings.disp_out_of_operation = 0 AND
                     tw_serrings.disp_scrapped = 0))) ";
}

function GetUniqueManufacturerUnderObject List<Entity(ManufacturerInfo)> {
   basedon ManufacturerInfoSet;
   ludependencies = ManufacturerInfo;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter EquipmentObjectSeq Number;
   where = "manufacturer_id IN
             (SELECT DISTINCT (eq_object.manufacturer_no) manufacturer_no
                FROM equipment_object_uiv  eq_object,
                     equipment_tw_settings tw_serrings
               WHERE tw_serrings.tree_view_id = :TreeViewId
                 AND tw_serrings.equipment_object_seq = :EquipmentObjectSeq
                 AND eq_object.manufacturer_no IS NOT NULL
                 AND eq_object.manufacturer_no = NVL(tw_serrings.manufacturer_no, eq_object.manufacturer_no)
                 AND tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                 AND tw_serrings.grouping_criteria_db = 'MANUFACTURER'
                 AND (((:StructureInTree = 'F' OR :StructureInTree IS NULL) AND eq_object.functional_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'L'  AND eq_object.location_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'R'  AND eq_object.from_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'T'  AND eq_object.to_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'P'  AND eq_object.process_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'S'  AND eq_object.pipe_object_seq = :EquipmentObjectSeq)
                      OR (:StructureInTree = 'E'  AND eq_object.pipe_object_seq = :EquipmentObjectSeq))
                 AND (eq_object.operational_status_db IN
                     (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                       DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                       DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                       DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                     (tw_serrings.disp_planned_for_op = 0 AND
                     tw_serrings.disp_in_operation = 0 AND
                     tw_serrings.disp_out_of_operation = 0 AND
                     tw_serrings.disp_scrapped = 0))) ";
}
-- Fetch child equipment objects under a location
function GetChildEquipObjUnderLoc List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter LocationId Text;
   where = "EXISTS
             (SELECT 1
                      FROM equipment_tw_settings tw_serrings
                     WHERE tw_serrings.tree_view_id = :TreeViewId
                       AND equipment_object_uiv.location_id = :LocationId
                       AND tw_serrings.grouping_criteria_db = 'LOCATION'
                       AND (((:StructureInTree = 'F' OR :StructureInTree IS NULL) AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.functional_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                          (:StructureInTree = 'L' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.location_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'R' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.from_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'T' AND ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.to_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'P' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.process_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'S' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.pipe_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'E' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.circuit_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS' ))))
                       AND (equipment_object_uiv.operational_status_db IN
                           (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                             DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                             DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                             DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                           (tw_serrings.disp_planned_for_op = 0 AND
                           tw_serrings.disp_in_operation = 0 AND
                           tw_serrings.disp_out_of_operation = 0 AND
                           tw_serrings.disp_scrapped = 0))) ";
}

-- Fetch child equipment objects under a site
function GetChildEquipObjUnderSite List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter Contract Text;
   where = "EXISTS
             (SELECT 1
                      FROM equipment_tw_settings tw_serrings
                     WHERE tw_serrings.tree_view_id = :TreeViewId
                       AND tw_serrings.grouping_criteria_db = 'SITE'
                       AND equipment_object_uiv.contract = :Contract
                       AND (((:StructureInTree = 'F' OR :StructureInTree IS NULL) AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.functional_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'L' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.location_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS' ))) OR
                           (:StructureInTree = 'R' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.from_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'T' AND ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.to_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'P' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.process_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'S' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.pipe_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'E' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.circuit_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))))
                       AND (equipment_object_uiv.operational_status_db IN
                           (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                             DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                             DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                             DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                           (tw_serrings.disp_planned_for_op = 0 AND
                           tw_serrings.disp_in_operation = 0 AND
                           tw_serrings.disp_out_of_operation = 0 AND
                           tw_serrings.disp_scrapped = 0))) ";
}

-- Fetch child equipment objects with particular object type
function GetChildEquipObjForObjType List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter MchType Text;
   where = "EXISTS
             (SELECT 1
                      FROM equipment_tw_settings tw_serrings
                     WHERE tw_serrings.tree_view_id = :TreeViewId
                       AND equipment_object_uiv.mch_type = :MchType
                       AND tw_serrings.grouping_criteria_db = 'OBJECT_TYPE'
                       AND (((:StructureInTree = 'F' OR :StructureInTree IS NULL) AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.functional_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'L' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.location_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'R' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.from_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'T' AND ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.to_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'P' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.process_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'S' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.pipe_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'E' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.circuit_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))))
                       AND (equipment_object_uiv.operational_status_db IN
                           (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                             DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                             DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                             DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                           (tw_serrings.disp_planned_for_op = 0 AND
                           tw_serrings.disp_in_operation = 0 AND
                           tw_serrings.disp_out_of_operation = 0 AND
                           tw_serrings.disp_scrapped = 0))) ";
}

-- Fetch child equipment objects with particular criticality
function GetChildEquipObjForCriticality List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter Criticality Text;
   where = "EXISTS
             (SELECT 1
                      FROM equipment_tw_settings tw_serrings
                     WHERE tw_serrings.tree_view_id = :TreeViewId
                       AND equipment_object_uiv.criticality = :Criticality
                       AND tw_serrings.grouping_criteria_db = 'OBJECT_CRITICALITY'
                       AND (((:StructureInTree = 'F' OR :StructureInTree IS NULL) AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.functional_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS' ))) OR
                           (:StructureInTree = 'L' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.location_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'R' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.from_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'T' AND ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.to_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'P' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.process_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'S' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.pipe_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'E' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.circuit_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))))
                       AND (equipment_object_uiv.operational_status_db IN
                           (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                             DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                             DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                             DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                           (tw_serrings.disp_planned_for_op = 0 AND
                           tw_serrings.disp_in_operation = 0 AND
                           tw_serrings.disp_out_of_operation = 0 AND
                           tw_serrings.disp_scrapped = 0))) ";
}

-- Fetch child equipment objects with particular Item Class
function GetChildEquipObjForItemClass List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter ItemClass Text;
   where = "EXISTS
             (SELECT 1
                      FROM equipment_tw_settings tw_serrings
                      WHERE tw_serrings.tree_view_id = :TreeViewId
                      AND equipment_object_uiv.item_class_id = :ItemClass
                      AND tw_serrings.grouping_criteria_db = 'ITEM_CLASS'
                      AND (((:StructureInTree = 'F' OR :StructureInTree IS NULL) AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.functional_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS' ))) OR
                           (:StructureInTree = 'L' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.location_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'R' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.from_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'T' AND ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.to_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'P' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.process_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'S' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.pipe_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'E' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.circuit_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))))
                       AND (equipment_object_uiv.operational_status_db IN
                           (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                             DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                             DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                             DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                           (tw_serrings.disp_planned_for_op = 0 AND
                           tw_serrings.disp_in_operation = 0 AND
                           tw_serrings.disp_out_of_operation = 0 AND
                           tw_serrings.disp_scrapped = 0))) ";
}

-- Fetch child equipment objects with particular Item Class
function GetChildEquipObjForGroupId List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter GroupId Text;
   where = "EXISTS
             (SELECT 1
                      FROM equipment_tw_settings tw_serrings
                      WHERE tw_serrings.tree_view_id = :TreeViewId
                       AND equipment_object_uiv.group_id = :GroupId
                       AND tw_serrings.grouping_criteria_db = 'GROUP_ID'
                       AND (((:StructureInTree = 'F' OR :StructureInTree IS NULL) AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.functional_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'L' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.location_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'R' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.from_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'T' AND ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.to_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'P' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.process_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'S' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.pipe_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'E' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.circuit_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))))
                       AND (equipment_object_uiv.operational_status_db IN
                           (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                             DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                             DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                             DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                           (tw_serrings.disp_planned_for_op = 0 AND
                           tw_serrings.disp_in_operation = 0 AND
                           tw_serrings.disp_out_of_operation = 0 AND
                           tw_serrings.disp_scrapped = 0))) ";
}

-- Fetch child equipment objects with particular Category
function GetChildEquipObjForCategory List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter Category Text;
   where = "EXISTS
             (SELECT 1
                       FROM equipment_tw_settings tw_serrings
                       WHERE tw_serrings.tree_view_id = :TreeViewId
                       AND equipment_object_uiv.category_id = :Category
                       AND tw_serrings.grouping_criteria_db = 'ITEM_CLASS'
                       AND (((:StructureInTree = 'F' OR :StructureInTree IS NULL) AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.functional_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'L' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.location_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'R' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.from_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'T' AND ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.to_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'P' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.process_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'S' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.pipe_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'E' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.circuit_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))))
                       AND (equipment_object_uiv.operational_status_db IN
                           (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                             DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                             DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                             DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                           (tw_serrings.disp_planned_for_op = 0 AND
                           tw_serrings.disp_in_operation = 0 AND
                           tw_serrings.disp_out_of_operation = 0 AND
                           tw_serrings.disp_scrapped = 0))) ";
}

-- Fetch child equipment objects with particular Manufacturer
function GetChildEquipObjForManufacturer List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter Manufacturer Text;
   where = "EXISTS
             (SELECT 1
                       FROM equipment_tw_settings tw_serrings
                       WHERE tw_serrings.tree_view_id = :TreeViewId
                       AND equipment_object_uiv.manufacturer_no = :Manufacturer
                       AND tw_serrings.grouping_criteria_db = 'MANUFACTURER'
                       AND (((:StructureInTree = 'F' OR :StructureInTree IS NULL) AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.functional_object_seq  = tw_serrings.equipment_object_seq) OR
                          (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS' ))) OR
                           (:StructureInTree = 'L' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.location_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'R' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.from_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'T' AND ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.to_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'P' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.process_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'S' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.pipe_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))) OR
                           (:StructureInTree = 'E' AND
                           ((tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT' AND equipment_object_uiv.circuit_object_seq  = tw_serrings.equipment_object_seq) OR
                           (tw_serrings.settings_type_db = 'DISPLAYALLOBJECTS'))))
                       AND (equipment_object_uiv.operational_status_db IN
                           (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                             DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                             DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                             DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                           (tw_serrings.disp_planned_for_op = 0 AND
                           tw_serrings.disp_in_operation = 0 AND
                           tw_serrings.disp_out_of_operation = 0 AND
                           tw_serrings.disp_scrapped = 0))) ";
}

function GetChildEquipmentObjectFiltered List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter EquipmentObjectSeq Number;
   where = "EXISTS
             (SELECT 1
                      FROM equipment_tw_settings tw_serrings
                     WHERE tw_serrings.tree_view_id = :TreeViewId
                       AND (((:StructureInTree = 'F' OR :StructureInTree IS NULL) AND equipment_object_uiv.functional_object_seq = :EquipmentObjectSeq)
                            OR (:StructureInTree = 'L' AND equipment_object_uiv.location_object_seq = :EquipmentObjectSeq)
                            OR (:StructureInTree = 'R' AND equipment_object_uiv.from_object_seq = :EquipmentObjectSeq)
                            OR (:StructureInTree = 'T' AND equipment_object_uiv.to_object_seq = :EquipmentObjectSeq)
                            OR (:StructureInTree = 'P' AND equipment_object_uiv.process_object_seq = :EquipmentObjectSeq)
                            OR (:StructureInTree = 'S' AND equipment_object_uiv.pipe_object_seq = :EquipmentObjectSeq)
                            OR (:StructureInTree = 'E' AND equipment_object_uiv.circuit_object_seq = :EquipmentObjectSeq))
                       AND (equipment_object_uiv.operational_status_db IN
                           (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                             DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                             DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                             DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                           (tw_serrings.disp_planned_for_op = 0 AND
                           tw_serrings.disp_in_operation = 0 AND
                           tw_serrings.disp_out_of_operation = 0 AND
                           tw_serrings.disp_scrapped = 0)
                       AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))))";
}

function GetDefaultObjectsFiltered List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = ObjectCountsPmEntity;
   ludependencies = ObjectCountsWoEntity;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter EquipmentObjectSeq Number;
   where = "EXISTS
             (SELECT tw_serrings.mch_code, tw_serrings.contract
                     FROM equipment_tw_settings tw_serrings
                     WHERE tw_serrings.tree_view_id = :TreeViewId
                     AND tw_serrings.equipment_object_seq = :EquipmentObjectSeq
                     AND tw_serrings.settings_type_db = 'DISPLAYSPECIFICOBJECT'
                     AND tw_serrings.grouping_criteria_db = 'DEFAULT'
                     AND (((:StructureInTree = 'F' OR :StructureInTree IS NULL) AND equipment_object_uiv.functional_object_seq = :EquipmentObjectSeq)
                            OR (:StructureInTree = 'L' AND equipment_object_uiv.location_object_seq = :EquipmentObjectSeq)
                            OR (:StructureInTree = 'R' AND equipment_object_uiv.from_object_seq = :EquipmentObjectSeq)
                            OR (:StructureInTree = 'T' AND equipment_object_uiv.to_object_seq = :EquipmentObjectSeq)
                            OR (:StructureInTree = 'P' AND equipment_object_uiv.process_object_seq = :EquipmentObjectSeq)
                            OR (:StructureInTree = 'S' AND equipment_object_uiv.pipe_object_seq = :EquipmentObjectSeq)
                            OR (:StructureInTree = 'E' AND equipment_object_uiv.circuit_object_seq = :EquipmentObjectSeq))
                     AND (equipment_object_uiv.operational_status_db IN
                           (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                             DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                             DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                             DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                           (tw_serrings.disp_planned_for_op = 0 AND
                           tw_serrings.disp_in_operation = 0 AND
                           tw_serrings.disp_out_of_operation = 0 AND
                           tw_serrings.disp_scrapped = 0))
                     AND (equipment_object_uiv.design_status_db IN
                           (DECODE(tw_serrings.disp_under_design, 1, 'UnderDesign', ''),
                             DECODE(tw_serrings.disp_re_design, 1, 'ReDesign', ''),
                             DECODE(tw_serrings.disp_completed, 1, 'Completed', ''),
                             DECODE(tw_serrings.disp_planned_for_scrap, 1, 'PlannedForScrap', '')) OR
                           (tw_serrings.disp_under_design = 0 AND
                           tw_serrings.disp_re_design = 0 AND
                           tw_serrings.disp_completed = 0 AND
                           tw_serrings.disp_planned_for_scrap = 0))) ";
}

function GetAllFEquipmentObjectFiltered List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter EquipmentObjectSeq Number;
   where = "((equipment_object_uiv.equipment_object_seq) IN
             (SELECT eq_object.equipment_object_seq equipment_object_seq
                   FROM (SELECT *
                           FROM equipment_object_uiv
                          START WITH functional_object_seq = :EquipmentObjectSeq
                         CONNECT BY PRIOR equipment_object_seq = functional_object_seq) eq_object,
                        equipment_tw_settings tw_serrings
                  WHERE tw_serrings.tree_view_id = :TreeViewId
                    AND (eq_object.operational_status_db IN
                        (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                          DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                          DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                          DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                        (tw_serrings.disp_planned_for_op = 0 AND
                        tw_serrings.disp_in_operation = 0 AND
                        tw_serrings.disp_out_of_operation = 0 AND
                        tw_serrings.disp_scrapped = 0))))";
}

function GetAllREquipmentObjectFiltered List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter EquipmentObjectSeq Number;
   where = "((equipment_object_uiv.equipment_object_seq) IN
               (SELECT from_eq_object.equipment_object_seq equipment_object_seq
                   FROM (SELECT *
                           FROM equipment_object_uiv
                          START WITH from_object_seq = :EquipmentObjectSeq
                         CONNECT BY PRIOR equipment_object_seq = from_object_seq) from_eq_object,
                        equipment_tw_settings tw_serrings
                  WHERE tw_serrings.tree_view_id = :TreeViewId
                    AND (from_eq_object.operational_status_db IN
                        (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                          DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                          DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                          DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                        (tw_serrings.disp_planned_for_op = 0 AND
                        tw_serrings.disp_in_operation = 0 AND
                        tw_serrings.disp_out_of_operation = 0 AND
                        tw_serrings.disp_scrapped = 0))))";
}
function GetAllTEquipmentObjectFiltered List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter EquipmentObjectSeq Number;
   where = "((equipment_object_uiv.equipment_object_seq) IN
                     (SELECT to_eq_object.equipment_object_seq equipment_object_seq
                   FROM (SELECT *
                           FROM equipment_object_uiv
                          START WITH to_object_seq = :EquipmentObjectSeq
                         CONNECT BY PRIOR equipment_object_seq = to_object_seq) to_eq_object,
                        equipment_tw_settings tw_serrings
                  WHERE tw_serrings.tree_view_id = :TreeViewId
                    AND (to_eq_object.operational_status_db IN
                        (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                          DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                          DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                          DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                        (tw_serrings.disp_planned_for_op = 0 AND
                        tw_serrings.disp_in_operation = 0 AND
                        tw_serrings.disp_out_of_operation = 0 AND
                        tw_serrings.disp_scrapped = 0))))";
}
function GetAllPEquipmentObjectFiltered List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter EquipmentObjectSeq Number;
   where = "((equipment_object_uiv.equipment_object_seq) IN
                     (SELECT process_eq_object.equipment_object_seq equipment_object_seq
                   FROM (SELECT *
                           FROM equipment_object_uiv
                          START WITH process_object_seq = :EquipmentObjectSeq
                         CONNECT BY PRIOR equipment_object_seq = process_object_seq) process_eq_object,
                        equipment_tw_settings tw_serrings
                  WHERE tw_serrings.tree_view_id = :TreeViewId
                    AND (process_eq_object.operational_status_db IN
                        (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                          DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                          DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                          DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                        (tw_serrings.disp_planned_for_op = 0 AND
                        tw_serrings.disp_in_operation = 0 AND
                        tw_serrings.disp_out_of_operation = 0 AND
                        tw_serrings.disp_scrapped = 0))))";
}
function GetAllSEquipmentObjectFiltered List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter EquipmentObjectSeq Number;
   where = "((equipment_object_uiv.equipment_object_seq) IN
                     (SELECT pipe_eq_object.equipment_object_seq equipment_object_seq
                   FROM (SELECT *
                           FROM equipment_object_uiv
                          START WITH equipment_object_seq = :EquipmentObjectSeq
                         CONNECT BY PRIOR equipment_object_seq = pipe_object_seq) pipe_eq_object,
                        equipment_tw_settings tw_serrings
                  WHERE tw_serrings.tree_view_id = :TreeViewId
                    AND (pipe_eq_object.operational_status_db IN
                        (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                          DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                          DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                          DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                        (tw_serrings.disp_planned_for_op = 0 AND
                        tw_serrings.disp_in_operation = 0 AND
                        tw_serrings.disp_out_of_operation = 0 AND
                        tw_serrings.disp_scrapped = 0))))";
}
function GetAllEEquipmentObjectFiltered List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter EquipmentObjectSeq Number;
   where = "((equipment_object_uiv.equipment_object_seq) IN
                     (SELECT circuit_eq_object.equipment_object_seq equipment_object_seq
                   FROM (SELECT *
                           FROM equipment_object_uiv
                          START WITH circuit_object_seq = :EquipmentObjectSeq
                         CONNECT BY PRIOR equipment_object_seq = circuit_object_seq) circuit_eq_object,
                        equipment_tw_settings tw_serrings
                  WHERE tw_serrings.tree_view_id = :TreeViewId
                    AND (circuit_eq_object.operational_status_db IN
                        (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                          DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                          DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                          DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                        (tw_serrings.disp_planned_for_op = 0 AND
                        tw_serrings.disp_in_operation = 0 AND
                        tw_serrings.disp_out_of_operation = 0 AND
                        tw_serrings.disp_scrapped = 0))))";
}
function GetAllLEquipmentObjectFiltered List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter EquipmentObjectSeq Number;
   where = "((equipment_object_uiv.equipment_object_seq) IN
                     (SELECT loc_eq_object.equipment_object_seq equipment_object_seq
                   FROM (SELECT *
                           FROM equipment_object_uiv
                          START WITH location_object_seq = :EquipmentObjectSeq
                         CONNECT BY PRIOR equipment_object_seq = location_object_seq) loc_eq_object,
                        equipment_tw_settings tw_serrings
                  WHERE tw_serrings.tree_view_id = :TreeViewId
                    AND (loc_eq_object.operational_status_db IN
                        (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                          DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                          DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                          DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                        (tw_serrings.disp_planned_for_op = 0 AND
                        tw_serrings.disp_in_operation = 0 AND
                        tw_serrings.disp_out_of_operation = 0 AND
                        tw_serrings.disp_scrapped = 0))))";
}

@DynamicComponentDependency WO
function GetWorkOrderInfoFiltered List<Entity(ActiveSeparateEquip)> {
   basedon ActiveSeparateEquipSet;
   ludependencies = ActiveSeparateEquip;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter EquipmentObjectSeq Number;
   where = "EXISTS
          (SELECT 1
                   FROM equipment_tw_settings tw_serrings
                  WHERE tw_serrings.tree_view_id = :TreeViewId
                    AND tw_serrings.disp_wo_task_node = 1
                    AND active_separate_overview.equipment_object_seq = :EquipmentObjectSeq)
          AND ROWNUM = 1 ";
}

@DynamicComponentDependency PM
function GetPmInfoGroupFiltered List<Entity(PmAction)> {
   basedon PmActionSet;
   ludependencies = PmAction;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter EquipmentObjectSeq Number;
   where = "EXISTS
       (SELECT 1
                FROM equipment_tw_settings tw_serrings
               WHERE tw_serrings.tree_view_id = :TreeViewId
                 AND tw_serrings.disp_pm_plan_node = 1
                 AND pm_action.equipment_object_seq = :EquipmentObjectSeq)
          AND ROWNUM = 1 ";
}

@DynamicComponentDependency PCMSCI
function GetServiceInfoGroupFiltered List<Entity(PscContrProductScopeEquip)> {
   basedon PscContrProductScopeEquipSet;
   ludependencies = PscContrProductScopeEquip;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter EquipmentObjectSeq Number;
   where = "EXISTS
       (SELECT 1
                FROM equipment_tw_settings tw_serrings
               WHERE tw_serrings.tree_view_id = :TreeViewId
                 AND tw_serrings.disp_sc_node = 1
                 AND Psc_Contr_Product_Scope_Uiv.connection_type_db IN ('EQUIPMENT', 'CATEGORY', 'PART')
                 AND Psc_Contr_Product_Scope_Uiv.equipment_object_seq = :EquipmentObjectSeq)
          AND ROWNUM = 1 ";
}

function GetConnectedObjectGroupFiltered List<Entity(EquipmentObjectList)> {
   basedon EquipmentObjectListSet;
   ludependencies = EquipmentObjectList;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter TreeViewId Number;
   parameter EquipmentObjectSeq Number;
   where = "EXISTS
       (SELECT 1
                FROM equipment_tw_settings tw_serrings, equipment_object_conn obj_conn
               WHERE tw_serrings.tree_view_id = :TreeViewId
                 AND tw_serrings.disp_conn_objs_node = 1
                 AND equipment_object_uiv.equipment_object_seq = :EquipmentObjectSeq
                 AND obj_conn.equipment_object_seq = equipment_object_uiv.equipment_object_seq)
          AND ROWNUM = 1 ";
}


function GetMeasurementsFiltered List<Entity(EquipmentObjectMeas)> {
   basedon EquipmentObjectMeasSet;
   ludependencies = EquipmentObjectList;
   ludependencies = EquipmentObjectMeas;
   ludependencies = BoexpTwSettings;
   ludependencies = EquipmentTwSettings;
   parameter EquipmentObjectSeq Number;
   parameter FilterBy Text;
}

function GetPmSummary List<Entity(ObjectCountsPmEntity)> {
   basedon ObjectCountsPmEntitySet;
   ludependencies = EquipmentObjectList;
   ludependencies = ObjectCountsPmEntity;
   parameter EquipmentObjectSeq Number;
   parameter StructureInTree Text;
   where = "EQUIPMENT_OBJECT_SEQ = :EquipmentObjectSeq AND (TREE_STRUCTURE = :StructureInTree OR TREE_STRUCTURE = 'AllType') ";
}

function GetWoSummary List<Entity(ObjectCountsWoEntity)> {
   basedon ObjectCountsWoEntitySet;
   ludependencies = EquipmentObjectList;
   ludependencies = ObjectCountsWoEntity;
   parameter EquipmentObjectSeq Number;
   parameter StructureInTree Text;
   where = "EQUIPMENT_OBJECT_SEQ = :EquipmentObjectSeq AND CONNECTED_LU != '2EquipmentObject' AND (TREE_STRUCTURE = :StructureInTree OR TREE_STRUCTURE = 'AllType') ";
}


function  GetObjectImage Stream {
   parameter EquipmentObjectSeq Number;
}

function HasMchTypeTecSpec Text {
   parameter MchType Text;
}
function GetTypeDesignationsOfEquip List<Entity(TypeDesignation)> {
   parameter MchType Text;
   where = "mch_type LIKE nvl(:MchType,mch_type) ";
}


function GetCompValue Text {
   parameter Contract Text;
}

@DynamicComponentDependency WO
function GetActiveWorkTasksFiltered List<Entity(JtTask)> {
   basedon JtTaskSet;
   ludependencies = JtTask;
   parameter EquipmentObjectSeq Number;
   where = "ACTUAL_OBJECT_SEQ = :EquipmentObjectSeq
         AND OBJSTATE NOT IN ('FINISHED', 'CANCELLED')";
}

@DynamicComponentDependency WO
function GetAllActiveWorkTasksFiltered List<Entity(JtTask)> {
   basedon JtTaskSet;
   ludependencies = JtTask;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter EquipmentObjectSeq Number;
   where = "objstate NOT IN('FINISHED', 'CANCELLED')
               AND ((jt_task_light_uiv.actual_object_seq) IN
               (SELECT eq_object.equipment_object_seq equipment_object_seq
                  FROM (SELECT *
                          FROM equipment_object_uiv
                         START WITH equipment_object_seq = :EquipmentObjectSeq
                        CONNECT BY PRIOR equipment_object_seq = functional_object_seq) eq_object,
                       equipment_tw_settings tw_serrings
                 WHERE tw_serrings.tree_view_id = :TreeViewId
                   AND (:StructureInTree = 'F' OR :StructureInTree IS NULL)
                   AND (eq_object.operational_status_db IN
                       (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                         DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                         DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                         DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                       (tw_serrings.disp_planned_for_op = 0 AND
                       tw_serrings.disp_in_operation = 0 AND
                       tw_serrings.disp_out_of_operation = 0 AND
                       tw_serrings.disp_scrapped = 0)))
                  OR
                  (jt_task_light_uiv.actual_object_seq) IN
                   (SELECT from_eq_object.equipment_object_seq equipment_object_seq
                  FROM (SELECT *
                          FROM equipment_object_uiv
                         START WITH equipment_object_seq = :EquipmentObjectSeq
                        CONNECT BY PRIOR equipment_object_seq = from_object_seq) from_eq_object,
                       equipment_tw_settings tw_serrings
                 WHERE tw_serrings.tree_view_id = :TreeViewId
                   AND :StructureInTree = 'R'
                   AND (from_eq_object.operational_status_db IN
                       (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                         DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                         DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                         DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                       (tw_serrings.disp_planned_for_op = 0 AND
                       tw_serrings.disp_in_operation = 0 AND
                       tw_serrings.disp_out_of_operation = 0 AND
                       tw_serrings.disp_scrapped = 0)))
                  OR
                  (jt_task_light_uiv.actual_object_seq) IN
                    (SELECT to_eq_object.equipment_object_seq equipment_object_seq
                  FROM (SELECT *
                          FROM equipment_object_uiv
                         START WITH equipment_object_seq = :EquipmentObjectSeq
                        CONNECT BY PRIOR equipment_object_seq = to_object_seq) to_eq_object,
                       equipment_tw_settings tw_serrings
                 WHERE tw_serrings.tree_view_id = :TreeViewId
                   AND :StructureInTree = 'T'
                   AND (to_eq_object.operational_status_db IN
                       (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                         DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                         DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                         DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                       (tw_serrings.disp_planned_for_op = 0 AND
                       tw_serrings.disp_in_operation = 0 AND
                       tw_serrings.disp_out_of_operation = 0 AND
                       tw_serrings.disp_scrapped = 0)))
                     OR
                     (jt_task_light_uiv.actual_object_seq) IN
                    (SELECT process_eq_object.equipment_object_seq equipment_object_seq
                  FROM (SELECT *
                          FROM equipment_object_uiv
                         START WITH equipment_object_seq = :EquipmentObjectSeq
                        CONNECT BY PRIOR equipment_object_seq = process_object_seq) process_eq_object,
                       equipment_tw_settings tw_serrings
                 WHERE tw_serrings.tree_view_id = :TreeViewId
                   AND :StructureInTree = 'P'
                   AND (process_eq_object.operational_status_db IN
                       (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                         DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                         DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                         DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                       (tw_serrings.disp_planned_for_op = 0 AND
                       tw_serrings.disp_in_operation = 0 AND
                       tw_serrings.disp_out_of_operation = 0 AND
                       tw_serrings.disp_scrapped = 0)))
                  OR
                  (jt_task_light_uiv.actual_object_seq) IN
                    (SELECT pipe_eq_object.equipment_object_seq equipment_object_seq
                  FROM (SELECT *
                          FROM equipment_object_uiv
                         START WITH equipment_object_seq = :EquipmentObjectSeq
                        CONNECT BY PRIOR equipment_object_seq = pipe_object_seq) pipe_eq_object,
                       equipment_tw_settings tw_serrings
                 WHERE tw_serrings.tree_view_id = :TreeViewId
                   AND :StructureInTree = 'S'
                   AND (pipe_eq_object.operational_status_db IN
                       (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                         DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                         DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                         DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                       (tw_serrings.disp_planned_for_op = 0 AND
                       tw_serrings.disp_in_operation = 0 AND
                       tw_serrings.disp_out_of_operation = 0 AND
                       tw_serrings.disp_scrapped = 0)))
                  OR
                  (jt_task_light_uiv.actual_object_seq) IN
                    (SELECT circuit_eq_object.equipment_object_seq equipment_object_seq
                  FROM (SELECT *
                          FROM equipment_object_uiv
                         START WITH equipment_object_seq = :EquipmentObjectSeq
                        CONNECT BY PRIOR equipment_object_seq = circuit_object_seq) circuit_eq_object,
                       equipment_tw_settings tw_serrings
                 WHERE tw_serrings.tree_view_id = :TreeViewId
                   AND :StructureInTree = 'E'
                   AND (circuit_eq_object.operational_status_db IN
                       (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                         DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                         DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                         DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                       (tw_serrings.disp_planned_for_op = 0 AND
                       tw_serrings.disp_in_operation = 0 AND
                       tw_serrings.disp_out_of_operation = 0 AND
                       tw_serrings.disp_scrapped = 0)))
                  OR
                  (jt_task_light_uiv.actual_object_seq) IN
                    (SELECT loc_eq_object.equipment_object_seq equipment_object_seq
                  FROM (SELECT *
                          FROM equipment_object_uiv
                         START WITH equipment_object_seq = :EquipmentObjectSeq
                        CONNECT BY PRIOR equipment_object_seq = location_object_seq) loc_eq_object,
                       equipment_tw_settings tw_serrings
                 WHERE tw_serrings.tree_view_id = :TreeViewId
                   AND :StructureInTree = 'L'
                   AND (loc_eq_object.operational_status_db IN
                       (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                         DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                         DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                         DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                       (tw_serrings.disp_planned_for_op = 0 AND
                       tw_serrings.disp_in_operation = 0 AND
                       tw_serrings.disp_out_of_operation = 0 AND
                       tw_serrings.disp_scrapped = 0)))) ";
}

@DynamicComponentDependency PCMSCI
function GetServiceLinesFiltered List<Entity(PscContrProduct)> {
   basedon ServiceLinesSet;
   ludependencies = PscContrProduct;
   parameter EquipmentObjectSeq Number;
   where = "psc_contr_product_uiv.connection_type_db IN ('EQUIPMENT', 'CATEGORY', 'PART')
         AND (EXISTS (SELECT 1
                        FROM psc_srv_line_objects obj_lines
                       WHERE obj_lines.contract_id = psc_contr_product_uiv.contract_id
                         AND obj_lines.line_no = psc_contr_product_uiv.line_no
                         AND obj_lines.equipment_object_seq = :EquipmentObjectSeq)) ";
}

@DynamicComponentDependency PCMSCI
function GetAllServiceLinesFiltered List<Entity(PscContrProduct)> {
   basedon ServiceLinesSet;
   ludependencies = PscContrProduct;
   parameter TreeViewId Number;
   parameter StructureInTree Text;
   parameter EquipmentObjectSeq Number;
   where = "psc_contr_product_uiv.connection_type_db IN ('EQUIPMENT', 'CATEGORY', 'PART')
           AND (EXISTS (SELECT 1
                        FROM psc_srv_line_objects obj_lines
                       WHERE obj_lines.contract_id = psc_contr_product_uiv.contract_id
                         AND obj_lines.line_no = psc_contr_product_uiv.line_no
                     AND ( ((obj_lines.equipment_object_seq) IN
                     (SELECT eq_object.equipment_object_seq equipment_object_seq
            FROM (SELECT *
                    FROM equipment_object_uiv
                   START WITH equipment_object_seq = :EquipmentObjectSeq
                  CONNECT BY PRIOR equipment_object_seq = functional_object_seq) eq_object,
                 equipment_tw_settings tw_serrings
           WHERE tw_serrings.tree_view_id = :TreeViewId
             AND (:StructureInTree = 'F' OR :StructureInTree IS NULL)
             AND (eq_object.operational_status_db IN
                 (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                   DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                   DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                   DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                 (tw_serrings.disp_planned_for_op = 0 AND
                 tw_serrings.disp_in_operation = 0 AND
                 tw_serrings.disp_out_of_operation = 0 AND
                 tw_serrings.disp_scrapped = 0))))
            OR
            ((obj_lines.equipment_object_seq) IN
             (SELECT from_eq_object.equipment_object_seq equipment_object_seq
            FROM (SELECT *
                    FROM equipment_object_uiv
                   START WITH equipment_object_seq = :EquipmentObjectSeq
                  CONNECT BY PRIOR equipment_object_seq = from_object_seq) from_eq_object,
                 equipment_tw_settings tw_serrings
           WHERE tw_serrings.tree_view_id = :TreeViewId
             AND :StructureInTree = 'R'
             AND (from_eq_object.operational_status_db IN
                 (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                   DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                   DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                   DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                 (tw_serrings.disp_planned_for_op = 0 AND
                 tw_serrings.disp_in_operation = 0 AND
                 tw_serrings.disp_out_of_operation = 0 AND
                 tw_serrings.disp_scrapped = 0))))
               OR
               ((obj_lines.equipment_object_seq) IN
              (SELECT to_eq_object.equipment_object_seq equipment_object_seq
            FROM (SELECT *
                    FROM equipment_object_uiv
                   START WITH equipment_object_seq = :EquipmentObjectSeq
                  CONNECT BY PRIOR equipment_object_seq = to_object_seq) to_eq_object,
                 equipment_tw_settings tw_serrings
           WHERE tw_serrings.tree_view_id = :TreeViewId
             AND :StructureInTree = 'T'
             AND (to_eq_object.operational_status_db IN
                 (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                   DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                   DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                   DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                 (tw_serrings.disp_planned_for_op = 0 AND
                 tw_serrings.disp_in_operation = 0 AND
                 tw_serrings.disp_out_of_operation = 0 AND
                 tw_serrings.disp_scrapped = 0))))
               OR
               ((obj_lines.equipment_object_seq) IN
              (SELECT process_eq_object.equipment_object_seq equipment_object_seq
            FROM (SELECT *
                    FROM equipment_object_uiv
                   START WITH equipment_object_seq = :EquipmentObjectSeq
                  CONNECT BY PRIOR equipment_object_seq = process_object_seq) process_eq_object,
                 equipment_tw_settings tw_serrings
           WHERE tw_serrings.tree_view_id = :TreeViewId
             AND :StructureInTree = 'P'
             AND (process_eq_object.operational_status_db IN
                 (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                   DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                   DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                   DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                 (tw_serrings.disp_planned_for_op = 0 AND
                 tw_serrings.disp_in_operation = 0 AND
                 tw_serrings.disp_out_of_operation = 0 AND
                 tw_serrings.disp_scrapped = 0))))
            OR
            ((obj_lines.equipment_object_seq) IN
              (SELECT pipe_eq_object.equipment_object_seq equipment_object_seq
            FROM (SELECT *
                    FROM equipment_object_uiv
                   START WITH equipment_object_seq = :EquipmentObjectSeq
                  CONNECT BY PRIOR equipment_object_seq = pipe_object_seq) pipe_eq_object,
                 equipment_tw_settings tw_serrings
           WHERE tw_serrings.tree_view_id = :TreeViewId
             AND :StructureInTree = 'S'
             AND (pipe_eq_object.operational_status_db IN
                 (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                   DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                   DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                   DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                 (tw_serrings.disp_planned_for_op = 0 AND
                 tw_serrings.disp_in_operation = 0 AND
                 tw_serrings.disp_out_of_operation = 0 AND
                 tw_serrings.disp_scrapped = 0))))
            OR
            ((obj_lines.equipment_object_seq) IN
              (SELECT circuit_eq_object.equipment_object_seq equipment_object_seq
            FROM (SELECT *
                    FROM equipment_object_uiv
                   START WITH equipment_object_seq = :EquipmentObjectSeq
                  CONNECT BY PRIOR equipment_object_seq = circuit_object_seq) circuit_eq_object,
                 equipment_tw_settings tw_serrings
           WHERE tw_serrings.tree_view_id = :TreeViewId
             AND :StructureInTree = 'E'
             AND (circuit_eq_object.operational_status_db IN
                 (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                   DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                   DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                   DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                 (tw_serrings.disp_planned_for_op = 0 AND
                 tw_serrings.disp_in_operation = 0 AND
                 tw_serrings.disp_out_of_operation = 0 AND
                 tw_serrings.disp_scrapped = 0))))
            OR
            ((obj_lines.equipment_object_seq) IN
              (SELECT loc_eq_object.equipment_object_seq equipment_object_seq
            FROM (SELECT *
                    FROM equipment_object_uiv
                   START WITH equipment_object_seq = :EquipmentObjectSeq
                  CONNECT BY PRIOR equipment_object_seq = location_object_seq) loc_eq_object,
                 equipment_tw_settings tw_serrings
           WHERE tw_serrings.tree_view_id = :TreeViewId
             AND :StructureInTree = 'L'
             AND (loc_eq_object.operational_status_db IN
                 (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                   DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                   DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                   DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                 (tw_serrings.disp_planned_for_op = 0 AND
                 tw_serrings.disp_in_operation = 0 AND
                 tw_serrings.disp_out_of_operation = 0 AND
                 tw_serrings.disp_scrapped = 0))))))) ";
}

@DynamicComponentDependency PM
function GetPmActionsStructureFiltered List<Entity(PmAction)> {
   basedon PmActionSet;
   ludependencies = PmAction;
   parameter TreeViewId Number;
   parameter EquipmentObjectSeq Number;
   parameter StructureInTree Text;
   where = "pm_action.objstate IN ('Active', 'Preliminary')
           AND (((pm_action.equipment_object_seq) IN
           (SELECT eq_object.equipment_object_seq equipment_object_seq
            FROM (SELECT *
                    FROM equipment_object_uiv
                   START WITH equipment_object_seq = :EquipmentObjectSeq
                  CONNECT BY PRIOR equipment_object_seq = functional_object_seq) eq_object,
                 equipment_tw_settings tw_serrings
           WHERE tw_serrings.tree_view_id = :TreeViewId
             AND (:StructureInTree = 'F' OR :StructureInTree IS NULL)
             AND (eq_object.operational_status_db IN
                 (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                   DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                   DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                   DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                 (tw_serrings.disp_planned_for_op = 0 AND
                 tw_serrings.disp_in_operation = 0 AND
                 tw_serrings.disp_out_of_operation = 0 AND
                 tw_serrings.disp_scrapped = 0))))
             OR
            ((pm_action.equipment_object_seq) IN
            (SELECT from_eq_object.equipment_object_seq equipment_object_seq
            FROM (SELECT *
                    FROM equipment_object_uiv
                   START WITH equipment_object_seq = :EquipmentObjectSeq
                  CONNECT BY PRIOR equipment_object_seq = from_object_seq) from_eq_object,
                 equipment_tw_settings tw_serrings
           WHERE tw_serrings.tree_view_id = :TreeViewId
             AND :StructureInTree = 'R'
             AND (from_eq_object.operational_status_db IN
                 (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                   DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                   DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                   DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                 (tw_serrings.disp_planned_for_op = 0 AND
                 tw_serrings.disp_in_operation = 0 AND
                 tw_serrings.disp_out_of_operation = 0 AND
                 tw_serrings.disp_scrapped = 0))))
              OR
            ((pm_action.equipment_object_seq) IN
            (SELECT to_eq_object.equipment_object_seq equipment_object_seq
            FROM (SELECT *
                    FROM equipment_object_uiv
                   START WITH equipment_object_seq = :EquipmentObjectSeq
                  CONNECT BY PRIOR equipment_object_seq = to_object_seq) to_eq_object,
                 equipment_tw_settings tw_serrings
           WHERE tw_serrings.tree_view_id = :TreeViewId
             AND :StructureInTree = 'T'
             AND (to_eq_object.operational_status_db IN
                 (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                   DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                   DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                   DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                 (tw_serrings.disp_planned_for_op = 0 AND
                 tw_serrings.disp_in_operation = 0 AND
                 tw_serrings.disp_out_of_operation = 0 AND
                 tw_serrings.disp_scrapped = 0))))
              OR
            ((pm_action.equipment_object_seq) IN
            (SELECT process_eq_object.equipment_object_seq equipment_object_seq
            FROM (SELECT *
                    FROM equipment_object_uiv
                   START WITH equipment_object_seq = :EquipmentObjectSeq
                  CONNECT BY PRIOR equipment_object_seq = process_object_seq) process_eq_object,
                 equipment_tw_settings tw_serrings
           WHERE tw_serrings.tree_view_id = :TreeViewId
             AND :StructureInTree = 'P'
             AND (process_eq_object.operational_status_db IN
                 (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                   DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                   DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                   DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                 (tw_serrings.disp_planned_for_op = 0 AND
                 tw_serrings.disp_in_operation = 0 AND
                 tw_serrings.disp_out_of_operation = 0 AND
                 tw_serrings.disp_scrapped = 0))))
              OR
            ((pm_action.equipment_object_seq) IN
            (SELECT pipe_eq_object.equipment_object_seq equipment_object_seq
            FROM (SELECT *
                    FROM equipment_object_uiv
                   START WITH equipment_object_seq = :EquipmentObjectSeq
                  CONNECT BY PRIOR equipment_object_seq = pipe_object_seq) pipe_eq_object,
                 equipment_tw_settings tw_serrings
           WHERE tw_serrings.tree_view_id = :TreeViewId
             AND :StructureInTree = 'S'
             AND (pipe_eq_object.operational_status_db IN
                 (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                   DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                   DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                   DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                 (tw_serrings.disp_planned_for_op = 0 AND
                 tw_serrings.disp_in_operation = 0 AND
                 tw_serrings.disp_out_of_operation = 0 AND
                 tw_serrings.disp_scrapped = 0))))
              OR
            ((pm_action.equipment_object_seq) IN
            (SELECT circuit_eq_object.equipment_object_seq equipment_object_seq
            FROM (SELECT *
                    FROM equipment_object_uiv
                   START WITH equipment_object_seq = :EquipmentObjectSeq
                  CONNECT BY PRIOR equipment_object_seq = circuit_object_seq) circuit_eq_object,
                 equipment_tw_settings tw_serrings
           WHERE tw_serrings.tree_view_id = :TreeViewId
             AND :StructureInTree = 'E'
             AND (circuit_eq_object.operational_status_db IN
                 (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                   DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                   DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                   DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                 (tw_serrings.disp_planned_for_op = 0 AND
                 tw_serrings.disp_in_operation = 0 AND
                 tw_serrings.disp_out_of_operation = 0 AND
                 tw_serrings.disp_scrapped = 0))))
              OR
            ((pm_action.equipment_object_seq) IN
            (SELECT loc_eq_object.equipment_object_seq equipment_object_seq
            FROM (SELECT *
                    FROM equipment_object_uiv
                   START WITH equipment_object_seq = :EquipmentObjectSeq
                  CONNECT BY PRIOR equipment_object_seq = location_object_seq) loc_eq_object,
                 equipment_tw_settings tw_serrings
           WHERE tw_serrings.tree_view_id = :TreeViewId
             AND :StructureInTree = 'L'
             AND (loc_eq_object.operational_status_db IN
                 (DECODE(tw_serrings.disp_planned_for_op, 1, 'PLANNED_FOR_OP', ''),
                   DECODE(tw_serrings.disp_in_operation, 1, 'IN_OPERATION', ''),
                   DECODE(tw_serrings.disp_out_of_operation, 1, 'OUT_OF_OPERATION', ''),
                   DECODE(tw_serrings.disp_scrapped, 1, 'SCRAPPED', '')) OR
                 (tw_serrings.disp_planned_for_op = 0 AND
                 tw_serrings.disp_in_operation = 0 AND
                 tw_serrings.disp_out_of_operation = 0 AND
                 tw_serrings.disp_scrapped = 0))))) ";
}

@DynamicComponentDependency PM
function GetPmActionsFiltered List<Entity(PmAction)> {
   basedon PmActionSet;
   ludependencies = PmAction;
   parameter EquipmentObjectSeq Number;
   where = "pm_action.objstate IN ('Active', 'Preliminary')
         AND pm_action.equipment_object_seq = :EquipmentObjectSeq ";
}

@DynamicComponentDependency PM
function GetMaintPlanFiltered List<Entity(PmActionPlanUtility)> {
   basedon PmActionUtilitySet;
   ludependencies = PmActionPlanUtility;
   parameter EquipmentObjectSeq Number;
   where = "equipment_object_seq = :EquipmentObjectSeq ";
}

function GetNavigationUrl LongText {
   parameter EquipmentObjectSeq Number;
   parameter NavigatingForm Text;
   parameter TypeOfObj Text;
   parameter StructureInTree Text;
}

@DynamicComponentDependency WO
function GetHistoricalWorkTasksFiltered List<Entity(JtTask)> {
   basedon JtTaskSet;
   ludependencies = JtTask;
   parameter EquipmentObjectSeq Number;
   where = "ACTUAL_OBJECT_SEQ = :EquipmentObjectSeq
         AND OBJSTATE IN ('FINISHED', 'CANCELLED')";
}

function GetDefaultContract Text;

-------------------------------- STRUCTURES ---------------------------------
structure TreeFilterStructure {
   attribute StructureInTree Text {
      required = [true];
   }
   attribute MchCodeList Text;
   attribute MchCodeContractList Text;
   attribute EquipmentObjectSeqList Text;
}

structure NavPageFilterStructure {
   attribute TreeViewId Number;
   attribute EquipmentObjectSeq Number;
   attribute MchCode Text;
   attribute Contract Text;
   attribute ChildContract Text;
   attribute LocationId Text;
   attribute MchType Text;
   attribute Criticality Text;
   attribute ItemClassId Text;
   attribute GroupId Text;
   attribute CategoryId Text;
   attribute ManufacturerId Text;
   attribute StructureInTree Text;
}

structure SiteStructure {
   attribute Contract Text;
   attribute  Description Text;
}

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------

