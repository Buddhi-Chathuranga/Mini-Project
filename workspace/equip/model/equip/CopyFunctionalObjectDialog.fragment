-----------------------------------------------------------------------------
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  180819  SHEPLK  SAUXXW4-1580 dlgCopyFunctionalObject - Copy Functional Object generated from MTG 1.23
--  200103  LASSLK  SAXTEND-1244 Implement LOV Filtering
--  201020  LASSLK  AM2020R1-6659,Modified dlgCopyFunctionalObject and StructDlgCopyFunctional
-----------------------------------------------------------------------------
fragment CopyFunctionalObjectDialog;
component EQUIP;
layer Core;
description "Copy Functional Object";

----------------------------- CLIENT FRAGMENTS ------------------------------

---------------------------------- DIALOGS ----------------------------------
dialog DlgCopyFunctionalObj for StructDlgCopyFunctional {
   label = "Copy Functional Object - ${MchCode} - ${MchName}";
   input(DestinationContract, MchCode, MchName, SupContract, SupMchCode, SupMchName, ProgramId);
   output(DestinationContract, DestinationObject, DestinationObjectName, SupContract, SupMchCode, SupMchName, Spare, Requirement, Parameter, TestPnt, Document, PmPlan, Party);
   group CopyFunctionalNewObject;
   group CopyFunctionalCopyOptions;
   markdowntext {
      visible = [ProgramId != null and PmPlan = true];
      text = "The Equipment Object you are copying has a PM Program on it. Selecting the Copy PMs switch will copy all the PM actions. If you apply a PM Program back, it will result in duplicate PM records.";
   }
   commandgroup ButtonCommandGroup {

      command Ok {
         enabled = [DestinationContract != null and DestinationObject != null];
         execute {
            call CopyFunctionalObject(DestinationContract, DestinationObject, DestinationObjectName, DestinationContract, MchCode, SupContract, SupMchCode, Spare, Requirement, Parameter, TestPnt, Document, PmPlan, Party);
            info("The Functional object is now copied.");
            navigate "page/FunctionalObject/Form?$filter=MchCode eq $[DestinationObject] and Contract eq $[DestinationContract]";
         }

      }
      command Cancel;
   }
}

---------------------------------- GROUPS -----------------------------------
group CopyFunctionalNewObject for StructDlgCopyFunctional {
   label = "New Object";
   lov DestinationContractRef with ReferenceUserAllowedSiteLovSelector {
      search = Contract, ContractDesc;
      label = "New Site";
      format = uppercase;
      size = Medium;
      required = [true];
   }
   field DestinationObject {
      label = "New Object ID";
      format = uppercase;
      size = Medium;
      required = [true];
   }
   field DestinationObjectName {
      label = "New Object Description";
      size = Medium;
      required = [true];
   }
   lov SupContractDlgRef with ReferenceUserAllowedSiteLovSelector {
      search = Contract, ContractDesc;
      size = Medium;
      format = uppercase;
   }
   lov SupMchCodeDlgRef with ReferenceEquipmentFunctionalObjectUivSelector {
      search = MchCode, MchName;
      size = Medium;
      format = uppercase;
      description = SupMchCodeDlgPerfRef.MchName;
   }
}
group CopyFunctionalCopyOptions for StructDlgCopyFunctional {
   label = "Copy Options";
   field ObjectSpare {
      label = "Spare Parts";
      size = Small;
      required = [true];
      validate command {
         execute {
            if [ObjectSpare = true] {
               set Spare = 1;
            }
            else {
               set Spare = 0;
            }
         }
      }
   }
   field ObjectParameter {
      label = "Parameters";
      size = Small;
      required = [true];
      validate command {
         execute {
            if [ObjectParameter = true] {
               set ObjectTestPnt = true;
               set Parameter = 1;
               set TestPnt = 1;
            }
            else {
               set Parameter = 0;
            }
         }
      }
   }
   field ObjectDocument {
      label = "Documents";
      size = Small;
      required = [true];
      validate command {
         execute {
            if [ObjectDocument = true] {
               set Document = 1;
            }
            else {
               set Document = 0;
            }
         }
      }
   }
   field ObjectParty {
      label = "Parties";
      size = Small;
      required = [true];
      validate command {
         execute {
            if [ObjectParty = true] {
               set Party = 1;
            }
            else {
               set Party = 0;
            }
         }
      }
   }
   field ObjectAttr {
      label = "Requirements";
      size = Small;
      required = [true];
      validate command {
         execute {
            if [ObjectAttr = true] {
               set Requirement = 1;
            }
            else {
               set Requirement = 0;
            }
         }
      }
   }
   field ObjectTestPnt {
      label = "Test Points";
      size = Small;
      required = [true];
      validate command {
         execute {
            if [ObjectTestPnt = false] {
               set ObjectParameter = false;
               set ObjectPmPlan = false;
               set PmPlan = 0;
               set TestPnt = 0;
               set Parameter = 0;
            }
            else {
               set TestPnt = 1;
            }
         }
      }
   }
   field ObjectPmPlan {
      label = "PM";
      size = Small;
      required = [true];
      validate command {
         execute {
            if [ObjectPmPlan = true] {
               set ObjectTestPnt = true;
               set ObjectParameter = true;
               set PmPlan = 1;
               set Parameter = 1;
               set TestPnt = 1;
            }
            else {
               set PmPlan = 0;
            }
         }
      }
   }
}


--------------------------- PROJECTION FRAGMENTS ----------------------------

-------------------------------- STRUCTURES ---------------------------------
structure StructDlgCopyFunctional {
   attribute DestinationContract Text;
   attribute DestinationObject Text;
   attribute DestinationObjectName Text;
   attribute MchCode Text;
   attribute MchName Text;
   attribute Contract Text;
   attribute SupContract Text;
   attribute SupMchCode Text;
   attribute ProgramId Text;
   attribute SupMchName Text {
      editable = [false];
   }
   attribute ObjectSpare Boolean("TRUE", "FALSE") {
      required = [true];
   }
   attribute ObjectAttr Boolean("TRUE", "FALSE") {
      required = [true];
   }
   attribute ObjectParameter Boolean("TRUE", "FALSE") {
      required = [true];
   }
   attribute ObjectTestPnt Boolean("TRUE", "FALSE") {
      required = [true];
   }
   attribute ObjectDocument Boolean("TRUE", "FALSE") {
      required = [true];
   }
   attribute ObjectPmPlan Boolean("TRUE", "FALSE") {
      required = [true];
   }
   attribute ObjectParty Boolean("TRUE", "FALSE") {
      required = [true];
   }
   attribute Spare  Number {
      default = "0";
   }
   attribute Requirement Number {
      default = "0";
   }
   attribute Parameter Number {
      default = "0";
   }
   attribute TestPnt Number {
      default = "0";
   }
   attribute Document Number {
      default = "0";
   }
   attribute PmPlan Number {
      default = "0";
   }
   attribute Party Number {
      default = "0";
   }
   reference DestinationContractRef(DestinationContract) to UserAllowedSiteLov(Contract) {
      label = "New Site";
   }
   reference SupContractDlgRef(SupContract) to UserAllowedSiteLov(Contract) {
      label = "Belongs To Site";
   }
   reference SupMchCodeDlgRef(SupContract, SupMchCode) to EquipmentFunctional(Contract, MchCode) {
      label = "Belongs To Object ID";
   }
   reference SupMchCodeDlgPerfRef(SupContract, SupMchCode) to EquipmentFunctionalLov(Contract, MchCode);
}

---------------------------------- ACTIONS ----------------------------------
action CopyFunctionalObject {
   initialcheck implementation;
   ludependencies = EquipmentFunctional;
   parameter DestinationContract Text;
   parameter DestinationObject Text;
   parameter DestinationObjectName Text;
   parameter Contract Text;
   parameter MchCode Text;
   parameter DestBelongsToContract Text;
   parameter DestBelongsToObject Text;
   parameter ObjectSpare Number;
   parameter ObjectAttr Number;
   parameter ObjectParameter Number;
   parameter ObjectTestPnt Number;
   parameter ObjectDocument Number;
   parameter ObjectPmPlan Number;
   parameter ObjectParty Number;
}
