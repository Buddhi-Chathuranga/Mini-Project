client MaintenanceHistoryForObject;
component EQUIP;
layer Core;
projection MaintenanceHistoryForObjectHandling;
description "Put some useful description here ...";

--------------------------------- FRAGMENTS ---------------------------------
include fragment UserAllowedSiteLovSelector;
include fragment OrgCodeAllowedSiteLov1Selector;
include fragment OrgCodeAllowedSiteLovSelector;
include fragment MaintenanceObjectLovSelector;
@DynamicComponentDependency PCMSCI
include fragment PscContrProductLovSelector;
@DynamicComponentDependency PCMSCI
include fragment PscSrvManitObjectsLovSelector;
@DynamicComponentDependency LINAST
include fragment LinastLinearAssetLovSelector;
include fragment ResourceEquipmentLovSelector;
include fragment WorkOrderSymptCodeLovSelector;
include fragment CauseLov2Selector;
@DynamicComponentDependency WO
include fragment JtTaskCostCodeManualSelector;
include fragment WorkOrderTypeCodeLovSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------

-------------------------------- MAIN PAGES ---------------------------------
page MaintenanceHistoryPage using EquipmentSerialSet {
   label = "Maintenance History for Object";

   crudactions {
      new {
         enabled = [false];
      }
      edit {
         enabled = [false];
      }
      delete {
         enabled = [false];
      }
      duplicate {
         enabled = [false];
      }
   }

   selector EquipmentSerialSelector;
   group ObjectDetailsGroup;

   tabs {
      tab {
         label = "Work Tasks";
         @DynamicComponentDependency WO
         list WorkTaskHistList using GetHistoricalWorkTasksFiltered(LuName, Objkey) {
            label = "Historical Work Tasks";
         }
      }
      tab {
         label = "Work task Steps";
         @DynamicComponentDependency WO
         list WorkTaskStepsHistList using GetHistoricalWorkTaskStepsFiltered(LuName, Objkey);
      }
   }

   attachments {
      enabled = [false];
   }

}


--------------------------------- COMMANDS ----------------------------------


--------------------------------- SELECTORS ---------------------------------
@Override
selector EquipmentSerialSelector for EquipmentSerial {
   label = "${MchCode} - ${MchName} - ${Contract}";
   static EquipmentObjectSeq {
      visible = [false];
      searchable = false;
   }
   static MchCode;
   static Contract;
   static MchName;
}
---------------------------------- GROUPS -----------------------------------
group ObjectDetailsGroup for EquipmentSerial {
   label = "";

   field MchCode;
   field MchName {
      editable = [false];
   }
   field Contract;
   field PartNo;
   field SerialNo;
}


----------------------------------- LISTS -----------------------------------
@DynamicComponentDependency WO
list WorkTaskHistList for JtTask {
   crudactions {
      new {
         enabled = [false];
      }
      edit {
         enabled = [false];
      }
   }


   field WoNo;
   field TaskSeq {
      size = Small;
   }

   field OrderNo {
      size = Small;
   }

   field Description {
      size = Large;
      multiline = true;
   }
   field LongDescription {
      size = Medium;
      multiline = true;
      maxlength = 4000;
   }

   lov SiteRef with ReferenceUserAllowedSiteLovSelector {
      columnvisible = [false];
      size = Small;
      search = Contract, ContractDesc;
      description = SiteRef.ContractDesc;
   }

   badge Objstate {
      size = Small;
      label = "Status";
      style = TextOnly;

      emphasis Progress1 = [Objstate = "NEW"];
      emphasis Progress3 = [Objstate = "UNDERPREPARATION"];
      emphasis Progress4 = [Objstate = "PREPARED"];
      emphasis Progress6 = [Objstate = "RELEASED"];
      emphasis Progress8 = [Objstate = "WORKSTARTED"];
      emphasis Progress10 = [Objstate = "WORKDONE"];
      emphasis Progress11 = [Objstate = "REPORTED"];
      emphasis StateClosed = [Objstate = "FINISHED"];
      emphasis StateCancelled = [Objstate = "CANCELLED"];
   }
   lov OrganizationSiteRef with ReferenceUserAllowedSiteLovSelector {
      search = Contract, ContractDesc;
      size = Medium;
      label = "Maint Org Site";
      description = OrganizationSiteRef.ContractDesc;
   }
   lov OrganizationIdRef with ReferenceOrgCodeAllowedSiteLov1Selector {
      size = Medium;
      search = OrgCode, Description;
      label = "Maint Org";
      description = OrganizationIdRef.Description;
   }

   lov MaintTeamRef with ReferenceMaintTeamSelector {
      label = "Team";
      size = Medium;
      search = TeamId, Description;
      description = MaintTeamRef.Description;
   }

   lov PriorityIdRef with ReferenceMaintenancePrioritySelector {
      label = "Priority";
      size = Medium;
      search = PriorityId, Description;
      description = PriorityIdRef.Description;
   }
   field ReportedConnectionType;
   lov ReportedObjectSiteRef with ReferenceUserAllowedSiteLovSelector {
      columnvisible = [false];
      search = Contract, ContractDesc;
      description = ReportedObjectSiteRef.ContractDesc;
   }
   lov ReportedObjectIdRef with MaintenanceObjectLovSelector {
      description = ReportedObjectIdRef.MchName;
      search = MchCode, MchName;
      description = ReportedObjectDescription;
   }
   field ActualConnectionType;

   lov ActualObjectSiteRef with ReferenceUserAllowedSiteLovSelector {
      columnvisible = [false];
      size = Medium;
      search = Contract, ContractDesc;
      description = ActualObjectSiteRef.ContractDesc;
   }

   lov ActualObjectIdRef with ReferenceMaintenanceObjectLovSelector {
      search = MchCode, MchName;
      description = ActualObjectDescription;
      descriptionlabel = "Actual Object Description";
   }
   lov WorkTypeIdRef with ReferenceWorkTypeSelector {
      search = WorkTypeId, Description;
      label = "Work Type";
      size = Medium;
      description = WorkTypeIdRef.Description;
   }

   lov WorkStageIdRef with ReferenceWorkStageSelector {
      label = "Work Stage";
      size = Medium;
      description = WorkStageIdRef.Description;
      search = WorkStageId, Description;
   }

   lov VendorNoRef with ReferenceSupplierInfoSelector {
      search = SupplierId, Name;
      size = Medium;
      description = VendorNoRef.Name;
      contactwidget {
         enabled = [true];
         source = Supplier;
      }
   }

   lov ContractorOwnerRef with ReferencePersonInfoSelector using PersonInfoFunction(VendorNo, Site) {
      search = PersonId, Name;
      size = Medium;
      contactwidget {
         enabled = [true];
         source = Supplier;
      }
   }

   field Dependencies {
      size = Medium;
   }

   lov CostCodeRef with ReferenceJtTaskCostCodeManualSelector {
      size = Medium;
      search = CostCode, Description;
      description = CostCodeRef.Description;
   }
   field EarliestStart {
      size = Medium;
   }

   field LatestFinish {
      size = Medium;
   }

   field Duration {
      size = Medium;
   }

   field LatestStart {
      size = Medium;
   }

   field PlannedStart {
      size = Medium;
   }

   field PlannedFinish {
      size = Medium;
   }

   field ActualStart {
      size = Medium;
   }

   field ActualFinish {
      size = Medium;
   }

   field FixedStart {
      size = Medium;
   }
//   field SlaOrderLineNoRef.SlaLatestStart {
//      size = Medium;
//      label = "SLA Latest Start";
//   }
//   field SlaOrderLineNoRef.SlaLatestFinish {
//      size = Medium;
//      label = "SLA Latest Finish";
//   }

   @DynamicComponentDependency SVCSCH
   field MinVisitDuration {
      size = Medium;
   }
//   field SlaOrderLineNoRef.RespondedDate {
//      size = Medium;
//   }
//   field SlaOrderLineNoRef.ResolvedDate {
//      size = Medium;
//   }

   field AllowMultipleVisits {
      columnvisible = [false];
      size = Medium;
   }

   field ExcludeFromScheduling {
      columnvisible = [false];
      size = Medium;
   }
   @DynamicComponentDependency SVCSCH
   field AppointmentMode {
      columnvisible = [false];
   }
   @DynamicComponentDependency SVCSCH
   field AppointmentStart {
      columnvisible = [false];
   }
   @DynamicComponentDependency SVCSCH
   field AppointmentCompletion {
      columnvisible = [false];

   }
   field SourceConnectionLuName {
      columnvisible = [false];
      size = Medium;
   }

   field SourceObjectSite {
      columnvisible = [false];
      size = Medium;
   }

   field SourceObjectId {
      size = Large;
   }

   field SourceObjectDescription {
      size = Small;
   }

   field SourceRef1 {
      size = Medium;
   }

   field SourceRef2 {
      size = Medium;
   }

   field SourceRef3 {
      size = Medium;
   }

   field SourceRef4 {
      size = Medium;
   }

   field PmGroupId {
      size = Medium;
   }

   field PmGroupingRuleId {
      size = Medium;
   }

   field InspectionNote {
      size = Medium;
      multiline = true;
   }

   field GenerateNote {
      size = Medium;
   }

   attachments {
      enabled = [false];
   }

}

@DynamicComponentDependency WO
list WorkTaskStepsHistList for JtTaskStep {
   crudactions {
      new {
         enabled = [false];
      }
      edit {
         enabled = [false];
      }

   }

   field TaskSeqRef.WoNo;
   field TaskSeq;
   field TaskStepSeq {
      size = Small;
   }
   field OrderNo {
      size = Small;
   }
   field Remark {
      size = Small;
   }
   field Description {
      size = Large;
   }
   field Objstate {

      label = "Status";
   }
   field CreatedBy {
      contactwidget {
         enabled = [true];
         source = Person;
      }
   }
   field CreatedDate;
   field SourceConnectionLuName {
      columnvisible = [false];
      size = Small;
   }
   field SourceObjectSite {
      columnvisible = [false];
      size = Small;
   }
   field SourceObjectId {
      size = Small;
   }
   field SourceObjectDescription {
      size = Small;
   }
   field SourceRef2 {
      columnvisible = [false];
      size = Small;
   }
   field SourceRef3 {
      columnvisible = [false];
      size = Small;
   }
   field SourceRef4 {
      columnvisible = [false];
      size = Small;
   }
   field SourceRef1 {
      columnvisible = [false];
      size = Small;
   }
   field NoteId {
      columnvisible = [false];
   }
   field CancelCause;
   field CancelTaskCauseRef.CancelTaskCauseDesc {
      size = Small;
      label = "Cancel Cause Description";
   }
   field InspectionNote {
      size = Small;
   }
   field GenerateNote {
      size = Small;
   }

   field JobDescription {
      size = Small;
   }

   field TestPointID {
      size = Small;
   }
   field TaskSeqRef.Objstate;

}


---------------------------------- DIALOGS ----------------------------------


-------------------------------- SINGLETONS ---------------------------------


---------------------------------- CHARTS -----------------------------------


--------------------------------- CALENDERS ---------------------------------


---------------------------------- SHEETS -----------------------------------


----------------------------- STATE INDICATORS ------------------------------


----------------------------------- TREES -----------------------------------


---------------------------------- PLUGINS ----------------------------------


------------------------------- IMAGE VIEWERS -------------------------------
