-----------------------------------------------------------------------------
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  181010  ISHHLK  tbwConsistInclude - Consists of/Included in, MTG Version: 1.30, Enterprise Explorer Source: tbwConsistInclude
--  200102  LASSLK   SAXTEND-1244, Implement LOV Filtering
-----------------------------------------------------------------------------

client ConsistsOfIncludedIn;
component EQUIP;
layer Core;
projection ConsistsOfIncludedInHandling;

include fragment EquipmentAllObjectUivSelector;
include fragment UserAllowedSiteLovSelector;
@DynamicComponentDependency PURCH
include fragment PurchasePartLovSelector;
include fragment EquipmentAllObjectPerfQuery;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry ServConsistsofIncludedinNavEntry parent EquipNavigator.ServEquipmentSparePartList at index 3 {
      label = "Consists of/Included in";
      page List;
   }
   entry MaintConsistsofIncludedinNavEntry parent EquipNavigator.MaintEquipmentSparePartList at index 3 {
      label = "Consists of/Included in";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page List using EquipmentObjectSpareSet {
   label = "Consists of/Included in";
   list ConsistIncludeList;
}

--------------------------------- COMMANDS ----------------------------------
command DetachedSparePartListCommand for EquipmentObjectSpare {
   label = "Detached Spare Part List";
   enabled = [HasSpareStructure = "Yes"];
   execute {
      navigate "page/DetachedSparePartList/Form?$filter=SpareId eq $[SpareId] and SpareContract eq $[SpareContract]";
   }
}

@DynamicComponentDependency INVENT
command CurrentQuantityonHandCommand for EquipmentObjectSpare {
   label = "Current Quantity on Hand";
   mode = SelectedRecords;
   enabled = [SpareId != null and SpareContract != null and InventoryPart = "InventoryPart"];
   bulkexecute {
      bulknavigate "page/InventoryPartCurrentlyOnHand/Form?$filter=PartNo eq $[SpareId] and Contract eq $[SpareContract]";
   }
}

@DynamicComponentDependency INVENT
command InventoryPartAvailabilityPlaCommand for EquipmentObjectSpare {
   label = "Inventory Part Availability Planning";
   mode = SelectedRecords;
   enabled = [SpareId != null and SpareContract != null and InventoryPart = "InventoryPart"];
   bulkexecute {
      bulknavigate "page/InventoryPartAvailabilityPlanning/Form?$filter=PartNo eq $[SpareId] and Contract eq $[SpareContract]";
   }
}

@DynamicComponentDependency INVENT
command InventoryPartCommand for EquipmentObjectSpare {
   label = "Inventory Part";
   mode = SelectedRecords;
   enabled = [SpareId != null and SpareContract != null and InventoryPart = "InventoryPart"];
   bulkexecute {
      bulknavigate "page/InventoryPart/Form?$filter=PartNo eq $[SpareId] and Contract eq $[SpareContract]";
   }
}

@DynamicComponentDependency PURCH
command SupplierperPartCommand for EquipmentObjectSpare {
   label = "Supplier per Part";
   mode = SelectedRecords;
   enabled = [SpareId != null and SpareContract != null];
   bulkexecute {
      bulknavigate "page/SupplierForPurchasePart/Form?$filter=PartNo eq $[SpareId] and Contract eq $[SpareContract]";
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
@DynamicComponentDependency PURCH
selector ReferencePurchasePartLovSelector for PurchasePartLov {
   static PartNo;
   static Contract;
   static PartDescriptionInUse;
}

---------------------------------- GROUPS -----------------------------------

----------------------------------- LISTS -----------------------------------

list ConsistIncludeList for EquipmentObjectSpare {
   lov MchCodeRef with ReferenceEquipmentAllObjectUivSelector {
      search = MchCode, MchName;
      size = Large;
      description = MchCodePerfRef.MchName;
   }

   lov ContractRef with ReferenceUserAllowedSiteLovSelector {
      search = Contract, ContractDesc;
      size = Small;
   }
   @DynamicComponentDependency PURCH
   lov SpareIdRef with ReferencePurchasePartLovSelector using PurchasePartSelect(SpareContract) {
      search = PartNo, PartDescriptionInUse;
      size = Medium;
      validate command {
         execute {
            call GetDescription(SpareContract, SpareId) into PartDescription;
            //call GetInventoryFlag(SpareContract, SpareId) into InventoryPart;
            call GetUnitMeas(SpareContract, SpareId) into Uom;
         }
      }
   }
   field PartDescription {
      size = Large;
      editable = [false];
   }
   lov SpareContractRef with ReferenceUserAllowedSiteLovSelector {
      search = Contract, ContractDesc;
      size = Small;
   }
   field HasSpareStructure {
      size = Small;
   }
   @DynamicComponentDependency INVENT
   field InventoryPart {
      size = Medium;
   }
   @DynamicComponentDependency INVENT
   field InventoryPartRef.DimQuality {
      size = Medium;
      label = "Dimension/Quality";
   }
   @DynamicComponentDependency INVENT
   field InventoryPartRef.TypeDesignation {
      size = Small;
      label = "Type Designation";
   }
   @DynamicComponentDependency INVENT
   field QuantityOnHand {
      size = Small;
   }
   field Uom {
      size = Small;
      editable = [false];
   }
   field Qty {
      size = Medium;
   }
   field MchPart {
      size = Small;
   }
   field DrawingNo {
      size = Small;
   }
   field DrawingPos {
      size = Small;
   }

   commandgroup CommandGroupCmdGroup {
      command DetachedSparePartListCommand;
   }
   commandgroup CommandGroup1CmdGroup {
      @DynamicComponentDependency INVENT
      command CurrentQuantityonHandCommand;
      @DynamicComponentDependency INVENT
      command InventoryPartAvailabilityPlaCommand;
      @DynamicComponentDependency INVENT
      command InventoryPartCommand;
      @DynamicComponentDependency PURCH
      command SupplierperPartCommand;
   }
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

--------------------------------- CHECKLIST ---------------------------------


