fragment EquipmentObjectDowntime;
component EQUIP;
layer Core;
description "Equipment Object Downtime";

--------------------------------- FRAGMENTS ---------------------------------


----------------------------- CLIENT FRAGMENTS ------------------------------
-------------------------------- MAIN PAGES ---------------------------------
page EquipObjDowntimePage using EquipObjDowntimeListSet {
   label = "Equipment Object Downtime";
   searchcontext DowntimeSearchContext {
      defaults = GetPageSearchContextDefaults();
   }
   list EquipObjDowntimeList {

      filter = [((Downtime > DowntimeSearchContext.Downtime and Downtime < DowntimeSearchContext.Uptime)
      or(Uptime > DowntimeSearchContext.Downtime and Uptime < DowntimeSearchContext.Uptime))];
   }
   list EquipObjDowntimeTaskList(EquipObjDowntimeTaskArray) bind EquipObjDowntimeList {
      display = Nested;
   }
}


----------------------------------- LISTS -----------------------------------
list EquipObjDowntimeList for EquipObjectDowntime {
   multiselect = [false];
   field EquipmentObjectSeq {
      columnvisible = [false];
      searchable = true;
   }
   field DowntimeSeq {
      columnvisible = [false];
      searchable = false;
   }
   lov EquipmentObjectSeqRef with ReferenceEquipmentObjectSelector {
      search = MchCode, Contract, MchName;
      columnvisible = [false];
   }

   field EquipmentObjectSeqRef.Contract {
      searchable = false;
   }
   field EquipmentObjectSeqRef.MchCode {
      searchable = false;
   }
   field EquipmentObjectSeqRef.MchName {
      searchable = false;
   }
   field Downtime {
      searchable = false;
   }
   field Uptime {
      searchable = false;
   }
   field Duration;
   @DynamicComponentDependency WO
   lov TaskSeqRef with ReferenceJtTaskSelector {
      search = TaskSeq;
      description = TaskSeqRef.Description;

   }
   field CreatedBy {
      contactwidget {
         enabled = [true];
         source = Person;
      }
   }
   field CreatedDate;
}
list EquipObjDowntimeTaskList for EquipObjDowntimeTask {
   label = "WORK TASKS CONNECTED TO DOWNTIME";

   @DynamicComponentDependency WO
   lov TaskSeqRef with ReferenceJtTaskSelector {
      search = TaskSeq;
      description = TaskSeqRef.Description;

   }
   field CreatedBy {
      label = "Reported By";
      contactwidget {
         enabled = [true];
         source = Person;
      }
   }
   field CreatedDate {
      label = "Reported Date";
   }
}

   ------------------------------ SEARCH CONTEXTS ------------------------------
searchcontext DowntimeSearchContext for PageDowntimeSearchContextStructure {
   label = "Downtime Filter";
//   field EquipmentObjectSeq;
//   lov EquipmentObjRef with ReferenceEquipmentObjectSelector {
//      search = EquipmentObjectSeq;
////      search = MchCode, Contract, MchName;
//   }

   field Downtime {
      visible = [true];
   }

   field Uptime {
      visible = [true];
   }

}


--------------------------- PROJECTION FRAGMENTS ----------------------------

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset EquipObjDowntimeListSet for EquipObjectDowntime;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity EquipObjectDowntime using EquipObjDowntime {

   crud = Read;
   from = "Obj_Downtime_Reported_Task";
   exec = "Equip_Obj_Downtime_API";

   keys = EquipmentObjectSeq, DowntimeSeq {
      where = "equipment_object_seq = :EquipmentObjectSeq AND downtime_seq = :DowntimeSeq";
   }
   attribute Downtime Timestamp;
   attribute Uptime Timestamp;
   attribute Duration Number;
   attribute TaskSeq Number;
   attribute CreatedBy Text {
      label = "Reported By";
   }
   attribute CreatedDate Timestamp {
      label = "Reported Date";
   }

   reference EquipmentObjectSeqRef(EquipmentObjectSeq) to EquipmentObject(EquipmentObjectSeq) {
      label = "Equipment Object";
   }
   @DynamicComponentDependency WO
   reference TaskSeqRef(TaskSeq) to JtTask(TaskSeq) {
      label = "Task";
   }
   array EquipObjDowntimeTaskArray(EquipmentObjectSeq, DowntimeSeq) to EquipObjDowntimeTask(EquipmentObjectSeq, DowntimeSeq);


}
@Override
entity EquipObjDowntimeTask {
   crud = Read;

   @DynamicComponentDependency WO
   reference TaskSeqRef(TaskSeq) to JtTask(TaskSeq) {
      label = "Task";
   }
}

--------------------------------- STRUCTURE ---------------------------------
structure PageDowntimeSearchContextStructure {
   attribute EquipmentObjectSeq  Number {
      required = [false];
   }
   attribute Downtime Timestamp {
      label = "Downtime";
   }
   attribute Uptime Timestamp {
      label = "Uptime";
   }
   reference EquipmentObjRef(EquipmentObjectSeq) to EquipmentObject(EquipmentObjectSeq) {
      label = "Equipment Object";
   }

}

--------------------------------- FUNCTION ----------------------------------
function GetPageSearchContextDefaults  Structure(PageDowntimeSearchContextStructure);

