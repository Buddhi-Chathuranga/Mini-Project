-----------------------------------------------------------------------------
--
--  Logical unit: EquipmentObject
--
--  Date    Sign  History
--  ------  ----  -----------------------------------------------------------
--  960507  NILA  Created.
--  960522  NILA  Completed method Report_Detail.
--  960626  JOSC  Replaced hard coded tablespace name with parameters.
--  961015  CAJO  Modified according to version 5.2. Added references to 
--                OBJOVER.QRP, an overview report layout.
--  961021  CAJO  Changed report definitions for Equipment Object Structure.
--  970114  NILA  Corrected terminations of view column comments.
--  970116  JOSC  Changed separator between layout definition files.
--  970124  CAJO  Minor changes for bug fixing.
--  970206  CAJO  Added status texts in view comments.
--  970215  CAJO  Changed REF on Supplier to view SUPPLIER.
--  970602  JOSC  Removed set feedback on and set verify on at EOF.
--  970917  CAJO  Added Report_SYS.Refresh_ due to conversion to Foundation1 2.0.
--                Changed mch_serial_no to serial_no.
--  971103  CAJO  Changed select from equipment_object to equipment_all_object in Report_Detail. 
--                Changed to use INFO_SERVICES_RPT instead of separate report tables.
--  980112  CAJO  Changed to use the Equip specific report table EQUIPMENT_RPT.
--                Added contract.
--  980113  CAJO  Changed select from equipment_all_object to maintenance_object in Report_Detail.
--  980424  CAJO  Changed ref on site to USER_ALLOWED_SITE_LOV.
--  980528  CAJO  Added ref on type, cost center and category.
--  980604  CAJO  Corrected ref on cost center by adding default company.
--  980618  CAJO  Added archive note used in report archives.
--  980618  CAJO  Added archive note used in report archives in both reports.
--  981125  MIBO  Changed Party_Type_Manufacturer_API to Manufacturer_Info_API and 
--                Party_Type_Supplier_API to Supplier_Info_API.
--  000208  STEBSE  Changed reference on view comment for contract from "Site" to "User_allowed_site_lov".
--                  Also made sure user can only select allowed sites in appropriate cursors.
--  020124  CHATLK Made the reports available in Letter format as well.
--  020125  NILA  Changed company variable declaration to 20 characters.
--  020304  ANCE  Call Id 76427 Added condition 'WHERE  contract LIKE contract_' to both cursors in PROCEDURE Report_Structure.
--  020603  Kamtlk Extended Serial no String(20) to String(50) in view MAINTENANCE_OBJECT_DET_REP.
--  020604  PEKR  Changed current_position to latest_transaction.
--  020611  Chamlk Extended the length of the mch_code from String (40) to String (100)
--  030206  INROLK Changed PROCEDURE Report_Structure to fetch structure only when Object ID is given.
--------------------------------------Merged of Take OFF---------------------------------------
--  030916  NEKOLK Merged of Take OFF -Bug Id 39135 (Changed the where clause of cursor sub_objects to START WITH (mch_code_ LIKE sup_mch_code).)
------------------------------------- Edge - SP1 Merge ----------------------------------------
--  040121  UDSULK Bug 42219, Modified report procedure to insert xml data statements to support new xsl report layout.
--  040325  ChAmlk Merge with SP1.
--  040712  SHAFLK Bug 40279, Changed the QFLAG to xAxxx for MCH_CODE, in both views. 
--  040730  ThWilk Merged Bug 40279. 
--  040603  SHAFLK Bug 44975, Added required view changes. 
--  040811  NIJALK Merged bug 44975
--  040824  DIAMLK Bug ID:117228 - Removing qrp layouts.
--  050525  DiAmlk Modified the method Report_Detail.(Relate to spec AMEC113 - Cost Follow Up) 
--  060218  RANFLK Add the code accoding to generated xml.
------------------------------------- Sparx Project Begin --------------------------------------
--  060719  AMDILK MEPR704: Persian Calendar - Modified the method Report_Detail()
--  060720  AMDILK MEPR704: Persian Calendar - Modified the method Report_Detail(),modified the two variables(warr_from_, warr_to_) assignments. 
--  070726  LoPrlk Call ID: 144705, In the view MAINTENANCE_OBJECT_DET_REP comments for columns WARR_FROM and WARR_TO were altered.
--  070726         Method Report_Detail was changed.
--  090602  LIAMLK Bug 82609, Added missing undefine statements.
--  110422  SaFalk EASTONE-16467, Replaced xsl with rdl.
--  110516  SaFalk EASTONE-18543, Modified cursor all_objects.
--  110603  MADGLK Bug 96937, Modifeid MAINTENANCE_OBJECT_DET_REP and EQUIPMENT_OBJECT_STRUCT_REP and Report_Detail() and Report_Structure().
--  110708  LIAMLK Bug 97644, Modified mch_name in cursors sub_objects, all_objects, all_sites.
-----------------------------Project Black Pearl------------------------------------------------------
--  130508  MAWILK BLACK-66, Removed method calls to EQUIPMENT_ALL_OBJECT_API. 
--  130521  MADGLK BLACK-65, Replaced MaintenanceObject with EquipmentObject.
--  150320  HARPLK RUBY-165, Added ITEM_CLASS_ID,ITEM_CLASS_ID_DESCR.
--  150327  HARPLK RUBY-311, Re-structure the file. separate Equipment Object inofrmation report and equipment object struture.
--  181004  LoPrlk Bug: 144535, Altered the report method to fetch the Company Name and Logo.
------------------------------------------------------------------------------------------------

define MODULE   = EQUIP
define LU       = EquipmentObject
define PKG      = MAINTENANCE_OBJECT_RPI

define TABLE    = EQUIPMENT_RPT
define VIEW_RPV  = EQUIPMENT_RPV

define REP1VIEW = MAINTENANCE_OBJECT_DET_REP

-- Definition of columns in EQUIPMENT_RPT

define contract                = S1
define mch_code                = S2
define mch_name                = S3
define sup_contract            = S4
define sup_mch_code            = S5
define group_id                = S6
define mch_loc                 = S7
define mch_pos                 = S8
define mch_doc                 = S9
define manufacturer_no         = S10
define manufacturer_name       = S11
define vendor_no               = S12
define vendor_name             = S13
define serial_no               = S14
define part_no                 = S15
define part_rev                = S16
define type                    = S17
define purch_price             = N1
define purch_date              = D1
define warr_exp                = D2
define mch_type                = S18
define cost_center             = S19
define object_no               = S20
define note                    = S21 
define category_id             = S22
define main_pos                = S23
define production_date         = D3
define obj_level               = S24
define has_structure           = S25
define has_connection          = S26
define has_warranty            = S27
define latest_transaction      = S28
define info                    = S29
define data                    = S30
define company                 = S31
DEFINE ITEM_CLASS_ID           = S32
DEFINE ITEM_CLASS_ID_DESCR     = S33
--------------------------------------------

set feedback off
set verify off

PROMPT Creating reports for LU EquipmentObject

-----------------------------------------------------------------------------
-- PACKAGE SPECIFICATION: MAINTENANCE_OBJECT_RPI
-----------------------------------------------------------------------------

PROMPT Creating &PKG specification

CREATE OR REPLACE PACKAGE &PKG IS

lu_name_ CONSTANT VARCHAR2(25) := '&LU';
module_  CONSTANT VARCHAR2(6)  := '&MODULE';

PROCEDURE Report_Detail (
   report_attr_    IN VARCHAR2,
   parameter_attr_ IN VARCHAR2 );

PROCEDURE Get_Company (
   company_  OUT VARCHAR2 );


END &PKG;
/
SHOW ERROR

-----------------------------------------------------------------------------
-- VIEWS
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
-- Report:     Equipment Object Information
-- Type:       PLSQL1.2
-- Objects:    TABLE  = INFO_SERVICES_RPT
--             VIEW   = EQUIPMENT_OBJECT_DET_REP
--             METHOD = MAINTENANCE_OBJECT_RPI.Report_Detail
-----------------------------------------------------------------------------

PROMPT Creating report view &REP1VIEW

CREATE OR REPLACE VIEW &REP1VIEW
AS
SELECT RESULT_KEY                       RESULT_KEY,
       ROW_NO                           ROW_NO,
       substr(&CONTRACT,1,5)            CONTRACT,
       substr(&MCH_CODE,1,100)           MCH_CODE,
       substr(&MCH_NAME,1,200)           MCH_NAME,
       substr(&SUP_CONTRACT,1,5)        SUP_CONTRACT,
       substr(&SUP_MCH_CODE,1,100)       SUP_MCH_CODE,
       substr(&GROUP_ID,1,10)           GROUP_ID,
       substr(&MCH_LOC,1,10)            MCH_LOC,
       substr(&MCH_POS,1,15)            MCH_POS,
       substr(&MCH_DOC,1,20)            MCH_DOC,
       substr(&MANUFACTURER_NO,1,20)    MANUFACTURER_NO,
       substr(&MANUFACTURER_NAME,1,100) MANUFACTURER_NAME,
       substr(&VENDOR_NO,1,20)          VENDOR_NO,
       substr(&VENDOR_NAME,1,100)       VENDOR_NAME,
       substr(&SERIAL_NO,1,50)          SERIAL_NO,      --kamtlk
       substr(&PART_NO,1,25)            PART_NO,
       substr(&PART_REV,1,5)            PART_REV,
       substr(&TYPE,1,30)               TYPE,
       &PURCH_PRICE                     PURCH_PRICE,
       &PURCH_DATE                      PURCH_DATE,
       &WARR_EXP                        WARR_EXP,
       substr(&MCH_TYPE,1,5)            MCH_TYPE,
       substr(&COMPANY,1,20)            COMPANY,
       substr(&COST_CENTER,1,10)        COST_CENTER,
       substr(&OBJECT_NO,1,10)          OBJECT_NO,
       &NOTE                            NOTE,
       substr(&CATEGORY_ID,1,10)        CATEGORY_ID,
       substr(&MAIN_POS,1,20)           MAIN_POS,
       &PRODUCTION_DATE                 PRODUCTION_DATE,
       substr(&OBJ_LEVEL,1,20)          OBJ_LEVEL,
       substr(&HAS_STRUCTURE,1,10)      HAS_STRUCTURE,
       substr(&HAS_CONNECTION,1,10)     HAS_CONNECTION,
       substr(&HAS_WARRANTY,1,10)       HAS_WARRANTY,
       substr(&LATEST_TRANSACTION,1,200) LATEST_TRANSACTION,
       &INFO                            INFO,
       &DATA                            DATA,
       NULL                             WARR_FROM,
       NULL                             WARR_TO,
       Equipment_Serial_API.Get_Item_Class_Id(&CONTRACT,&MCH_CODE)   ITEM_CLASS_ID,
       Item_Class_API.Get_Item_Class_Desc(&ITEM_CLASS_ID)   ITEM_CLASS_ID_DESCR
FROM   &VIEW_RPV
WITH   read only;

COMMENT ON TABLE &REP1VIEW IS
   'MODULE=&MODULE^LU=&LU^';
    
COMMENT ON COLUMN &REP1VIEW..RESULT_KEY IS
   'FLAGS=M----^';
COMMENT ON COLUMN &REP1VIEW..ROW_NO IS
   'FLAGS=M----^';
COMMENT ON COLUMN &REP1VIEW..CONTRACT IS
   'FLAGS=A----^PROMPT=Site^TITLE=Site^QUERY=Site:^DATATYPE=STRING(5)/UPPERCASE^ITEM_NAME=iContract^QFLAGS=MCSBL^QVALUE=%^REF=USER_ALLOWED_SITE_LOV^STATUS=Enter the site for the current object to show information on^';
COMMENT ON COLUMN &REP1VIEW..MCH_CODE IS
   'FLAGS=A----^PROMPT=Object ID^TITLE=Object ID^QUERY=Object ID:^DATATYPE=STRING(100)/UPPERCASE^ITEM_NAME=iMchCode^QFLAGS=MASBL^QVALUE=%^REF=MAINTENANCE_OBJECT(CONTRACT)^STATUS=Enter the object ID for the current object to show information on^';
COMMENT ON COLUMN &REP1VIEW..MCH_NAME IS
   'FLAGS=A----^PROMPT=Description^TITLE=Description^QUERY=Description:^DATATYPE=STRING(200)^ITEM_NAME=iMchName^QFLAGS=MCSBL^QVALUE=%^STATUS=Enter the object description for the current object to show information on^';
COMMENT ON COLUMN &REP1VIEW..SUP_CONTRACT IS
   'FLAGS=A----^PROMPT=Belongs to Site^TITLE=Belongs to Site^DATATYPE=STRING(5)/UPPERCASE^ITEM_NAME=iSupContract^';
COMMENT ON COLUMN &REP1VIEW..SUP_MCH_CODE IS
   'FLAGS=A----^PROMPT=Belongs to^TITLE=Belongs to^DATATYPE=STRING(100)/UPPERCASE^ITEM_NAME=iSupMchCode^';
COMMENT ON COLUMN &REP1VIEW..GROUP_ID IS
   'FLAGS=A----^PROMPT=Group ID^TITLE=Group ID^QUERY=Group ID:^DATATYPE=STRING(10)^ITEM_NAME=iGroupId^QFLAGS=MCSBL^QVALUE=%^REF=EQUIPMENT_OBJ_GROUP^STATUS=Enter the group ID for the current object to show information on^';
COMMENT ON COLUMN &REP1VIEW..MCH_LOC IS
   'FLAGS=A----^PROMPT=Room^TITLE=Room^QUERY=Room:^DATATYPE=STRING(10)^ITEM_NAME=iMchLoc^QFLAGS=MCSBL^QVALUE=%^STATUS=Enter the room for the current object to show information on^';
COMMENT ON COLUMN &REP1VIEW..MCH_POS IS
   'FLAGS=A----^PROMPT=Position^TITLE=Position^DATATYPE=STRING(15)^ITEM_NAME=iMchPos^';
COMMENT ON COLUMN &REP1VIEW..MCH_DOC IS
   'FLAGS=A----^PROMPT=Documentation^TITLE=Documentation^DATATYPE=STRING(20)^ITEM_NAME=iMchDoc^';
COMMENT ON COLUMN &REP1VIEW..MANUFACTURER_NO IS
   'FLAGS=A----^PROMPT=Manufacturer No^TITLE=Manufacturer^DATATYPE=STRING(20)^ITEM_NAME=iManufacturerNo^';
COMMENT ON COLUMN &REP1VIEW..MANUFACTURER_NAME IS
   'FLAGS=A----^PROMPT=Manufacturer Name^TITLE=Manufacturer Name^DATATYPE=STRING(100)^ITEM_NAME=iManufacturerName^';
COMMENT ON COLUMN &REP1VIEW..VENDOR_NO IS
   'FLAGS=A----^PROMPT=Supplier No^TITLE=Supplier^QUERY=Supplier No:^DATATYPE=STRING(20)^ITEM_NAME=iVendorNo^QFLAGS=MCSBL^QVALUE=%^REF=SUPPLIER^STATUS=Enter the supplier for the current object to show information on^';
COMMENT ON COLUMN &REP1VIEW..VENDOR_NAME IS
   'FLAGS=A----^PROMPT=Supplier Name^TITLE=Supplier Name^DATATYPE=STRING(100)^ITEM_NAME=iVendorName^';
COMMENT ON COLUMN &REP1VIEW..SERIAL_NO IS
   'FLAGS=A----^PROMPT=Serial No^TITLE=Serial No^DATATYPE=STRING(50)^ITEM_NAME=iSerialNo^';
COMMENT ON COLUMN &REP1VIEW..PART_NO IS
   'FLAGS=A----^PROMPT=Part No^TITLE=Part No^DATATYPE=STRING(25)^ITEM_NAME=iPartNo^';
COMMENT ON COLUMN &REP1VIEW..PART_REV IS
   'FLAGS=A----^PROMPT=Serial Revision^TITLE=Serial Revision^DATATYPE=STRING(5)^ITEM_NAME=iPartRev^';
COMMENT ON COLUMN &REP1VIEW..TYPE IS
   'FLAGS=A----^PROMPT=Type Designation^TITLE=Type Designation^ITEM_NAME=iType^QUERY=Type Designation:^REF=TypeDesignation^QFLAGS=MCSBL^QVALUE=%^DATATYPE=STRING(30)^STATUS=Enter the type designation for the current object to show information on^';
COMMENT ON COLUMN &REP1VIEW..PURCH_PRICE IS
   'FLAGS=A----^PROMPT=Purchase Price^TITLE=Purchase Price^DATATYPE=NUMBER^ITEM_NAME=iPurchPrice^';
COMMENT ON COLUMN &REP1VIEW..PURCH_DATE IS
   'FLAGS=A----^PROMPT=Purchase Date^TITLE=Purchase Date^DATATYPE=DATE/DATE^ITEM_NAME=iPurchDate^';
COMMENT ON COLUMN &REP1VIEW..WARR_EXP IS
   'FLAGS=A----^PROMPT=Warranty Expires^TITLE=Warranty Expires^DATATYPE=DATE/DATE^ITEM_NAME=iWarrExp^';
COMMENT ON COLUMN &REP1VIEW..MCH_TYPE IS
   'FLAGS=A----^PROMPT=Object Type^TITLE=Object Type^QUERY=Object Type:^DATATYPE=STRING(5)^ITEM_NAME=iMchType^QFLAGS=MCSBL^QVALUE=%^REF=EQUIPMENT_OBJ_TYPE^STATUS=Enter the object type for the current object to show information on^';
COMMENT ON COLUMN &REP1VIEW..COMPANY IS
   'FLAGS=A----^PROMPT=Company^TITLE=Company^DATATYPE=STRING(20)^ITEM_NAME=iCompany^QUERY=Company:^QFLAGS=M----^
   ^QVALUE=:Maintenance_Object_RPI.Get_Company^';
COMMENT ON COLUMN &REP1VIEW..COST_CENTER IS
   'FLAGS=A----^PROMPT=Cost Center^TITLE=Cost Center^QUERY=Cost Center:^DATATYPE=STRING(10)^ITEM_NAME=iCostCenter^REF=AccountingCodepartB(COMPANY)^QFLAGS=MCSBL^QVALUE=%^STATUS=Enter the cost center for the current object to show information on^';
COMMENT ON COLUMN &REP1VIEW..OBJECT_NO IS
   'FLAGS=A----^PROMPT=Financial Object No^TITLE=Financial Object No^DATATYPE=STRING(10)^ITEM_NAME=iObjectNo^';
COMMENT ON COLUMN &REP1VIEW..NOTE IS
   'FLAGS=A----^PROMPT=Notes^TITLE=Notes^DATATYPE=STRING(2000)^ITEM_NAME=iNote^';
COMMENT ON COLUMN &REP1VIEW..CATEGORY_ID IS
   'FLAGS=A----^PROMPT=Category ID^TITLE=Category^QUERY=Category ID:^ITEM_NAME=iCategoryId^QFLAGS=MCSBL^QVALUE=%^REF=EquipmentObjCategory^DATATYPE=STRING(10)^REF=CATEGORY^STATUS=Enter the object category for the current object to show information on^';
COMMENT ON COLUMN &REP1VIEW..MAIN_POS IS
   'FLAGS=A----^PROMPT=Main Position^TITLE=Main Position^DATATYPE=STRING(20)^ITEM_NAME=iMainPos^';
COMMENT ON COLUMN &REP1VIEW..PRODUCTION_DATE IS
   'FLAGS=A----^PROMPT=Production Date^TITLE=Production Date^DATATYPE=DATE/DATE^ITEM_NAME=iProductionDate^';
COMMENT ON COLUMN &REP1VIEW..OBJ_LEVEL IS
   'FLAGS=A----^PROMPT=Object Level^TITLE=Object Level^DATATYPE=STRING(20)^ITEM_NAME=iObjLevel^';
COMMENT ON COLUMN &REP1VIEW..HAS_STRUCTURE IS
   'FLAGS=A----^PROMPT=Has Structure^TITLE=Has Structure^DATATYPE=STRING(10)^ITEM_NAME=iHasStructure^';
COMMENT ON COLUMN &REP1VIEW..HAS_CONNECTION IS
   'FLAGS=A----^PROMPT=Has Connection^TITLE=Has Connection^DATATYPE=STRING(10)^ITEM_NAME=iHasConnection^';
COMMENT ON COLUMN &REP1VIEW..HAS_WARRANTY IS
   'FLAGS=A----^PROMPT=Has Warranty^TITLE=Has Warranty^DATATYPE=STRING(10)^ITEM_NAME=iHasWarranty^';
COMMENT ON COLUMN &REP1VIEW..LATEST_TRANSACTION IS
   'FLAGS=A----^PROMPT=Latest Transaction^TITLE=Latest Transaction^DATATYPE=STRING(200)^ITEM_NAME=iCurrentPosition^';
COMMENT ON COLUMN &REP1VIEW..INFO IS
   'FLAGS=A----^PROMPT=Info^TITLE=Info^DATATYPE=STRING(2000)^ITEM_NAME=iInfo^';
COMMENT ON COLUMN &REP1VIEW..DATA IS
   'FLAGS=A----^PROMPT=Data^TITLE=Data^DATATYPE=STRING(2000)^ITEM_NAME=iData^';
COMMENT ON COLUMN &REP1VIEW..WARR_FROM IS
   'FLAGS=A----^DATATYPE=DATE/DATE^QFLAGS=-CS--^STATUS=Enter the start date of the interval of warranty expiration for the current object to show information on^';
COMMENT ON COLUMN &REP1VIEW..WARR_TO IS
   'FLAGS=A----^DATATYPE=DATE/DATE^QFLAGS=-CS--^STATUS=Enter the last date of the interval of warranty expiration for the current object to show information on^';
COMMENT ON COLUMN &REP1VIEW..item_class_id 
   IS 'FLAGS=A----^DATATYPE=STRING(10)^TITLE=Item Class ^ITEM_NAME=iItemClassId^';
COMMENT ON COLUMN &REP1VIEW..item_class_id_descr 
   IS 'FLAGS=A----^DATATYPE=STRING(2000)^TITLE=Item Class Id Descr^ITEM_NAME=iItemClassIdDescr^';

-----------------------------------------------------------------------------

BEGIN
   Report_Sys.Define_Report_('&REP1VIEW', '&MODULE', '&LU', 'Equipment Object Information', '&TABLE', 'MAINTENANCE_OBJECT_RPI.Report_Detail', 30,'','','','PLSQL1.2','TRUE','Maintenance','Equipment Administration');
   Report_SYS.Refresh_('&REP1VIEW');
END; 
/
   
-----------------------------------------------------------------------------
-- REPORT TEXTS
-----------------------------------------------------------------------------

BEGIN
   Report_SYS.Define_Report_Text_('&REP1VIEW', 'txObjectHeader', 'Object Overview');
END;
/
COMMIT
/

--  -----------------------------------------------------------------------------
-- PACKAGE IMPLEMENTATION
-----------------------------------------------------------------------------

PROMPT Creating &PKG implementation

CREATE OR REPLACE PACKAGE BODY &PKG IS

----------------------------------------------------------------------
-- Purpose: Procedure used to prepare a detailed report for an object.
--          This procedure is also used to prepare an overview report.
----------------------------------------------------------------------

PROCEDURE Report_Detail (
   report_attr_    IN VARCHAR2,
   parameter_attr_ IN VARCHAR2 )
IS
   contract_             VARCHAR2(100);
   mch_code_             VARCHAR2(100);
   mch_name_             VARCHAR2(200);
   group_id_             VARCHAR2(100);
   mch_loc_              VARCHAR2(100);
   type_                 VARCHAR2(100);
   vendor_no_            VARCHAR2(100);
   mch_type_             VARCHAR2(100);
   cost_center_          VARCHAR2(100);
   category_id_          VARCHAR2(100);
   --amount_               NUMBER;
   warr_from_            DATE;
   warr_to_              DATE;

   result_key_           NUMBER;
   row_count_            NUMBER := 0;
   manufacturer_name_    VARCHAR2(100);
   vendor_name_          VARCHAR2(100);
   archive_notes_        VARCHAR2(200);
   item_class_id_descr_  VARCHAR2(2000);
   item_class_id_        VARCHAR2(10);
   logotype_             VARCHAR2(100);
   company_name_         VARCHAR2(100);
   company_              VARCHAR2(20);
   
   -- ////////////////////////////////////////////////////////////////////
   do_xml_  BOOLEAN := Report_SYS.Should_Generate_Xml('&REP1VIEW');
   do_rs_   BOOLEAN := Report_SYS.Should_Generate_Result_Set('&REP1VIEW');
   xml_     CLOB;
   package_name_ VARCHAR2(100) := 'MAINTENANCE_OBJECT_DET_REP';
   -- ////////////////////////////////////////////////////////////////////


   -- Cursor used to retrieve all object matching the specified
   -- parameter values.

   CURSOR objects IS
      SELECT contract,
             mch_code,
             mch_name,
             sup_contract,
             sup_mch_code,
             group_id,
             mch_loc,
             mch_pos,
             mch_doc,
             manufacturer_no,
             vendor_no,
             serial_no,
             part_no,
             part_rev,
             type,
             purch_price,
             purch_date,
             warr_exp,
             mch_type,
             cost_center,
             object_no,
             note,
             category_id,
             equipment_main_position   main_pos,
             production_date,
             obj_level,
             Equipment_Object_API.Has_Structure__(contract, mch_code)         has_structure,
             Equipment_Object_Conn_API.Has_Connection(contract, mch_code)     has_connection,
             Equipment_Object_API.Has_Warranty__(contract, mch_code)          has_warranty,
             latest_transaction,
             info,
             data,
             company             
      FROM   maintenance_object
      WHERE
         contract IN ( select contract from user_allowed_site_lov ) AND
         (contract LIKE contract_) AND
         (mch_code LIKE mch_code_) AND
         (mch_name LIKE mch_name_) AND
         (NVL(mch_type, '%') LIKE mch_type_) AND
         (NVL(group_id, '%') LIKE group_id_) AND
         (NVL(type, '%') LIKE type_) AND
         (NVL(vendor_no, '%') LIKE vendor_no_) AND
         (NVL(cost_center, '%') LIKE cost_center_) AND
         (NVL(category_id, '%') LIKE category_id_) AND  
         (NVL(mch_loc, '%') LIKE mch_loc_);

BEGIN
   General_SYS.Init_Method(lu_name_, '&PKG', 'Report_Detail');

   result_key_  := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Item_Value('RESULT_KEY', report_attr_));

   contract_    := NVL(Client_SYS.Get_Item_Value('CONTRACT', parameter_attr_), '%');
   mch_code_    := NVL(Client_SYS.Get_Item_Value('MCH_CODE', parameter_attr_), '%');
   mch_name_    := NVL(Client_SYS.Get_Item_Value('MCH_NAME', parameter_attr_), '%');
   group_id_    := NVL(Client_SYS.Get_Item_Value('GROUP_ID', parameter_attr_), '%');
   type_        := NVL(Client_SYS.Get_Item_Value('TYPE', parameter_attr_), '%');
   mch_loc_     := NVL(Client_SYS.Get_Item_Value('MCH_LOC', parameter_attr_), '%');
   vendor_no_   := NVL(Client_SYS.Get_Item_Value('VENDOR_NO', parameter_attr_), '%');
   mch_type_    := NVL(Client_SYS.Get_Item_Value('MCH_TYPE', parameter_attr_), '%');
   cost_center_ := NVL(Client_SYS.Get_Item_Value('COST_CENTER', parameter_attr_), '%');
   category_id_ := NVL(Client_SYS.Get_Item_Value('CATEGORY_ID', parameter_attr_), '%');
   --amount_      := NVL(TO_NUMBER(Client_SYS.Get_Item_Value('AMOUNT', parameter_attr_)), 0); --DiAmlk
   warr_from_   := NVL(TO_DATE(Client_SYS.Get_Item_Value('WARR_FROM', parameter_attr_),'YYYY-MM-DD'),TO_DATE('1900-01-01','YYYY-MM-DD','NLS_CALENDAR=GREGORIAN'));
   warr_to_     := NVL(TO_DATE(Client_SYS.Get_Item_Value('WARR_TO', parameter_attr_),'YYYY-MM-DD'),TO_DATE('4000-01-01','YYYY-MM-DD','NLS_CALENDAR=GREGORIAN'));

   -- Set report notes displayed in the InfoServices archive 
   archive_notes_ := Language_SYS.Translate_Constant(lu_name_, 'SITE: Site') || ': ';
   archive_notes_ := archive_notes_ || contract_ || ', ';
   archive_notes_ := archive_notes_ || Language_SYS.Translate_Constant(lu_name_, 'OBJECTID: Object ID') || ': ';
   archive_notes_ := archive_notes_ || mch_code_;
   Archive_API.Set_Notes(archive_notes_);

   -- ////////////////////////////////////////////////////////////////////////
   IF (do_xml_) THEN
   Xml_Record_Writer_SYS.Create_Report_Header(xml_,'&REP1VIEW',package_name_);
   END IF;
   IF (do_xml_) THEN
   Xml_Record_Writer_SYS.Start_Element(xml_, 'EQUIP_OBJS');
   END IF;

   -- ////////////////////////////////////////////////////////////////////////
   
   FOR object IN objects LOOP
      manufacturer_name_ := Manufacturer_Info_API.Get_Name( object.manufacturer_no );
      vendor_name_       := Supplier_Info_API.Get_Name( object.vendor_no );      
      item_class_id_     := Equipment_Object_API.Get_Item_Class_Id(object.contract,object.mch_code);
      item_class_id_descr_ := Item_Class_API.Get_Item_Class_Desc(item_class_id_);

      -- /////////////////////////////////////////////////////////////////////
      IF (do_xml_) THEN
            Xml_Record_Writer_SYS.Start_Element(xml_, 'EQUIP_OBJ');
            Xml_Record_Writer_SYS.Add_Element(xml_,'CATEGORY_ID', object.category_id);
            Xml_Record_Writer_SYS.Add_Element(xml_,'COMPANY', object.company);
            Xml_Record_Writer_SYS.Add_Element(xml_,'CONTRACT', object.contract);
            Xml_Record_Writer_SYS.Add_Element(xml_,'COST_CENTER', object.cost_center);
            Xml_Record_Writer_SYS.Add_Element(xml_,'DATA', object.data);
            Xml_Record_Writer_SYS.Add_Element(xml_,'GROUP_ID', object.group_id);
            Xml_Record_Writer_SYS.Add_Element(xml_,'HAS_CONNECTION', object.has_connection);
            Xml_Record_Writer_SYS.Add_Element(xml_,'HAS_STRUCTURE', object.has_structure);
            Xml_Record_Writer_SYS.Add_Element(xml_,'HAS_WARRANTY', object.has_warranty);
            Xml_Record_Writer_SYS.Add_Element(xml_,'INFO', object.info);
            Xml_Record_Writer_SYS.Add_Element(xml_,'LATEST_TRANSACTION', object.latest_transaction);
            Xml_Record_Writer_SYS.Add_Element(xml_,'MAIN_POS', object.main_pos);
            Xml_Record_Writer_SYS.Add_Element(xml_,'MANUFACTURER_NAME', manufacturer_name_);
            Xml_Record_Writer_SYS.Add_Element(xml_,'MANUFACTURER_NO', object.manufacturer_no);
            Xml_Record_Writer_SYS.Add_Element(xml_,'MCH_CODE', object.mch_code);
            Xml_Record_Writer_SYS.Add_Element(xml_,'MCH_DOC', object.mch_doc);
            Xml_Record_Writer_SYS.Add_Element(xml_,'MCH_LOC', object.mch_loc);
            Xml_Record_Writer_SYS.Add_Element(xml_,'MCH_NAME', object.mch_name);
            Xml_Record_Writer_SYS.Add_Element(xml_,'MCH_POS', object.mch_pos);
            Xml_Record_Writer_SYS.Add_Element(xml_,'MCH_TYPE', object.mch_type);
            Xml_Record_Writer_SYS.Add_Element(xml_,'NOTE', object.note);
            Xml_Record_Writer_SYS.Add_Element(xml_,'OBJ_LEVEL', object.obj_level);
            Xml_Record_Writer_SYS.Add_Element(xml_,'OBJECT_NO', object.object_no);
            Xml_Record_Writer_SYS.Add_Element(xml_,'PART_NO', object.part_no);
            Xml_Record_Writer_SYS.Add_Element(xml_,'PART_REV', object.part_rev);
            Xml_Record_Writer_SYS.Add_Element(xml_,'PRODUCTION_DATE', object.production_date);
            Xml_Record_Writer_SYS.Add_Element(xml_,'PURCH_DATE', object.purch_date);
            Xml_Record_Writer_SYS.Add_Element(xml_,'PURCH_PRICE', object.purch_price);
            Xml_Record_Writer_SYS.Add_Element(xml_,'SERIAL_NO', object.serial_no);
            Xml_Record_Writer_SYS.Add_Element(xml_,'SUP_CONTRACT', object.sup_contract);
            Xml_Record_Writer_SYS.Add_Element(xml_,'SUP_MCH_CODE', object.sup_mch_code);
            Xml_Record_Writer_SYS.Add_Element(xml_,'TYPE', object.type);
            Xml_Record_Writer_SYS.Add_Element(xml_,'VENDOR_NAME', vendor_name_);
            Xml_Record_Writer_SYS.Add_Element(xml_,'VENDOR_NO', object.vendor_no);
            Xml_Record_Writer_SYS.Add_Element(xml_,'WARR_EXP', object.warr_exp);
            Xml_Record_Writer_SYS.Add_Element(xml_,'WARR_FROM', warr_from_);
            Xml_Record_Writer_SYS.Add_Element(xml_,'WARR_TO', warr_to_);
            Xml_Record_Writer_SYS.Add_Element(xml_,'ITEM_CLASS_ID', item_class_id_);
            Xml_Record_Writer_SYS.Add_Element(xml_,'ITEM_CLASS_ID_DESCR', item_class_id_descr_);
      END IF;
      -- ////////////////////////////////////////////////////////////////////////

      -- ////////////////////////////////////////////////////////////////////////
      IF (do_rs_) THEN
      -- ///////////////////////////////////////////////////////////////////////
      INSERT INTO &TABLE (RESULT_KEY, ROW_NO, PARENT_ROW_NO,
         &CONTRACT,
         &MCH_CODE,
         &MCH_NAME,
         &SUP_CONTRACT,
         &SUP_MCH_CODE,
         &GROUP_ID,
         &MCH_LOC,
         &MCH_POS,
         &MCH_DOC,
         &MANUFACTURER_NO,
         &MANUFACTURER_NAME,
         &VENDOR_NO,
         &VENDOR_NAME,
         &SERIAL_NO,
         &PART_NO,
         &PART_REV,
         &TYPE,
         &PURCH_PRICE,
         &PURCH_DATE,
         &WARR_EXP,
         &MCH_TYPE,
         &COST_CENTER,
         &OBJECT_NO,
         &NOTE,
         &CATEGORY_ID,
         &MAIN_POS,
         &PRODUCTION_DATE,
         &OBJ_LEVEL,
         &HAS_STRUCTURE,
         &HAS_CONNECTION,
         &HAS_WARRANTY,
         &LATEST_TRANSACTION,
         &INFO,
         &DATA,
         &COMPANY,
         &ITEM_CLASS_ID,
         &ITEM_CLASS_ID_DESCR)
      VALUES (result_key_, row_count_, 0,
         object.contract, 
         object.mch_code, 
         object.mch_name,
         object.sup_contract,
         object.sup_mch_code,
         object.group_id,
         object.mch_loc,
         object.mch_pos,
         object.mch_doc,
         object.manufacturer_no,
         manufacturer_name_,
         object.vendor_no,
         vendor_name_,
         object.serial_no,
         object.part_no,
         object.part_rev,
         object.type,
         object.purch_price,
         object.purch_date,
         object.warr_exp,
         object.mch_type,
         object.cost_center,
         object.object_no,
         object.note,
         object.category_id,
         object.main_pos,
         object.production_date,
         object.obj_level,
         object.has_structure,
         object.has_connection,
         object.has_warranty,
         object.latest_transaction,
         object.info,
         object.data,
         object.company,
         item_class_id_,
         item_class_id_descr_ );
      -- //////////////////////////////////////////////////////////////////
      END IF;

      IF (do_xml_) THEN
            Xml_Record_Writer_SYS.End_Element(xml_, 'EQUIP_OBJ');
      END IF;
      -- /////////////////////////////////////////////////////////////////


      row_count_ := row_count_ + 1;           
   END LOOP;

   -- ////////////////////////////////////////////////////////////////////
   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.End_Element(xml_, 'EQUIP_OBJS');
      Xml_Record_Writer_SYS.End_Element(xml_,'&REP1VIEW');
   END IF;
   
   IF contract_ != '%' THEN
      company_      := Site_API.Get_Company(contract_);
      company_name_ := Company_API.Get_Name(company_);
      logotype_     := Company_API.Get_Logotype(company_);
      
      IF (logotype_ IS NOT NULL) THEN
         Archive_Variable_API.Set_Object(result_key_, 'rhSysLogo', logotype_);
         Archive_Variable_API.Set_Variable(result_key_, 'companyName', company_name_);
      END IF;
   END IF;
   
   IF (do_xml_) THEN
      Report_SYS.Finish_Xml_Report('&REP1VIEW',result_key_,xml_);
   END IF;
   -- ////////////////////////////////////////////////////////////////////

END Report_Detail;



PROCEDURE Get_Company (
   company_  OUT VARCHAR2 )
IS
BEGIN
   General_SYS.Init_Method(lu_name_, '&PKG', 'Get_Company');
   company_ := Site_API.Get_Company(User_Default_API.Get_Contract);
END;


END &PKG;
/
SHOW ERROR

-----------------------------------------------------------------------------
-- END
-----------------------------------------------------------------------------

--UNDEFINE AMOUNT

----------------------------------------------------------
-- <UNDEFINE_SECTION>
----------------------------------------------------------
-- This section is reserved for undefine statements
-- nothing should be manually written below because
-- that would be overwritten everytime the IFS / Undefine
-- tool is run.  
-- Also do NOT make any changes to the above tag because
-- this will result in duplicated code
----------------------------------------------------------
UNDEFINE MODULE
UNDEFINE LU
UNDEFINE PKG
UNDEFINE TABLE
UNDEFINE VIEW_RPV
UNDEFINE REP1VIEW
UNDEFINE REP2VIEW
UNDEFINE CONTRACT
UNDEFINE MCH_CODE
UNDEFINE MCH_NAME
UNDEFINE SUP_CONTRACT
UNDEFINE SUP_MCH_CODE
UNDEFINE GROUP_ID
UNDEFINE MCH_LOC
UNDEFINE MCH_POS
UNDEFINE MCH_DOC
UNDEFINE MANUFACTURER_NO
UNDEFINE MANUFACTURER_NAME
UNDEFINE VENDOR_NO
UNDEFINE VENDOR_NAME
UNDEFINE SERIAL_NO
UNDEFINE PART_NO
UNDEFINE PART_REV
UNDEFINE TYPE
UNDEFINE PURCH_PRICE
UNDEFINE PURCH_DATE
UNDEFINE WARR_EXP
UNDEFINE MCH_TYPE
UNDEFINE COST_CENTER
UNDEFINE OBJECT_NO
UNDEFINE NOTE
UNDEFINE CATEGORY_ID
UNDEFINE MAIN_POS
UNDEFINE PRODUCTION_DATE
UNDEFINE OBJ_LEVEL
UNDEFINE HAS_STRUCTURE
UNDEFINE HAS_CONNECTION
UNDEFINE HAS_WARRANTY
UNDEFINE LATEST_TRANSACTION
UNDEFINE INFO
UNDEFINE DATA
UNDEFINE COMPANY
UNDEFINE ITEM_CLASS_ID
UNDEFINE ITEM_CLASS_ID_DESCR
