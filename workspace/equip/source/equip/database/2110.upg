---------------------------------------------------------------------------------------------
--  Module : EQUIP
--
--  Purpose: Upgrade database objects for IFS/Equipment
--           from version 8.0.0 to 21.1.0
--
--  File   : 2110.upg
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  ------------------------------------------------------------------------
--  191202   amnalk  Created the first version for IBS upgrade.
--  200330   tajalk  AM2020R1-107 Merged CDB files in to UPG
--  201120   lasslk  AM2020R1-6948 Modified file name to reflect new version name IFS Cloud 21.1.0.
--  ------   ------  ------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SET SERVEROUTPUT ON
EXEC Database_SYS.Log_Detail_Time_Stamp('EQUIP','2110.upg','Timestamp_1');
PROMPT START upgrading WITH 2110.upg

---------------------------------------------------------------------------------------------
------------------------------ Instructions for upg files -----------------------------------
---------------------------------------------------------------------------------------------
--
--  Main section should contain all upgrade operations.
--  Next section should contain removal of obsolete objects (any removal of data inside upg is prohibited!).
--  Removal of backup tables and obsolete columns should be added to <component>Cl.sql script!
--
--  If possible, everything regarding one table should be placed in one section.
--  If this is not possible, a proper comment about the reason should be added.
--
--  Each section should be started with a "-----" line and a empty line.
--  This section should then start with a line like: "-- ***** Example_Tab Start *****"
--  and end with a line like:                       "-- ***** Example_Tab End *****"
--
--  Don't forget UPPER/lower case !
--
--  Every part inside the section should start with a "PROMPT" line explaining what is done by the block.
--
--  If the PL/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.
--
--  Remember ordinary coding standard rules !
--
--  Don't drop any Table/Column !
--
--  Don't forget performance when updating large table !
--
--  No unnecessary blank lines or comments !
--
--  If possible, use pure SQL commands
--
--  If possible, try to group several updates together in one statement.
--
--  Timestamps will be added automatically at the end of the project.
--
--  For more information refer to the "Upgrade Script Standards" and the "Performance" technical documents.
--
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES -----------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
--------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ------------------
---------------------------------------------------------------------------------------------

-- ***** EQUIPMENT_OBJECT_MEAS_TAB Start *****
EXEC Database_SYS.Log_Detail_Time_Stamp('EQUIP','2110.upg','Timestamp_2');
PROMPT create index EQUIPMENT_OBJECT_MEAS_IX2 ON EQUIPMENT_OBJECT_MEAS_TAB  
DECLARE
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'TEST_PNT_SEQ');
   Database_SYS.Set_Table_Column(columns_, 'PARAMETER_CODE');
   Database_SYS.Create_Index('EQUIPMENT_OBJECT_MEAS_TAB', 'EQUIPMENT_OBJECT_MEAS_IX2', columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/
EXEC Database_SYS.Log_Detail_Time_Stamp('EQUIP','2110.upg','Timestamp_3');
PROMPT Updating measured values in Equipment_Object_Meas_Tab 
DECLARE
BEGIN
   UPDATE EQUIPMENT_OBJECT_MEAS_TAB
      SET recorded_value = measured_value
   WHERE measurement_type = 'RecordedReading'
      AND recorded_value IS NULL;
END;
/

EXEC Database_SYS.Log_Detail_Time_Stamp('EQUIP','2110.upg','Timestamp_4');
PROMPT Alter column TEST_POINT_ID IN EQUIPMENT_OBJECT_MEAS_TAB
DECLARE
   column_ Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('TEST_POINT_ID', 'VARCHAR2(30)');
   Database_SYS.Alter_Table_Column('EQUIPMENT_OBJECT_MEAS_TAB', 'M', column_); 
END;
/
-- ***** EQUIPMENT_OBJECT_MEAS_TAB End *****

-- ***** EQUIPMENT_PK Start *****
EXEC Database_SYS.Log_Detail_Time_Stamp('EQUIP','2110.upg','Timestamp_5');
PROMPT Moving indexes to correct table space...
BEGIN
   Database_SYS.Move_Object(object_name_ => 'EQUIPMENT_PK',
                            tablespace_  => '&IFSAPP_INDEX');
END;
/
-- ***** EQUIPMENT_PK End *****

-- ***** EQUIPMENT_CRITICALITY_PK Start *****
EXEC Database_SYS.Log_Detail_Time_Stamp('EQUIP','2110.upg','Timestamp_6');
PROMPT Moving indexes to correct table space...
BEGIN
   Database_SYS.Move_Object(object_name_ => 'EQUIPMENT_CRITICALITY_PK',
                            tablespace_  => '&IFSAPP_INDEX');
END;
/
-- ***** EQUIPMENT_CRITICALITY_PK End *****

-- ***** EQUIPMENT_TW_SETTINGS_TAB Start *****
EXEC Database_SYS.Log_Detail_Time_Stamp('EQUIP','2110.upg','Timestamp_7');
PROMPT Adding columns GROUPING_CRITERIA, MCH_TYPE and LOCATION_ID to EQUIPMENT_TW_SETTINGS_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'EQUIPMENT_TW_SETTINGS_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'GROUPING_CRITERIA', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'MCH_TYPE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'LOCATION_ID', 'VARCHAR2(30)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'DISP_WO_TASK_NODE', 'NUMBER(1)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'DISP_PM_PLAN_NODE', 'NUMBER(1)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'DISP_SC_NODE', 'NUMBER(1)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'DISP_CONN_OBJS_NODE', 'NUMBER(1)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'HIDE_EMPTY_GRUP', 'NUMBER(1)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'HIDE_OBJS_WITHOUT_GRUP', 'NUMBER(1)', 'Y');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);	
END;
/
DECLARE
   table_name_ VARCHAR2(30) := 'EQUIPMENT_TW_SETTINGS_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   UPDATE EQUIPMENT_TW_SETTINGS_TAB
   SET GROUPING_CRITERIA = 'DEFAULT'
   WHERE GROUPING_CRITERIA IS NULL;

   UPDATE EQUIPMENT_TW_SETTINGS_TAB
   SET GROUPING_CRITERIA = 'SITE'
   WHERE GROUPING_CRITERIA = 'DEFAULT'
   AND SITE IS NOT NULL;

   UPDATE EQUIPMENT_TW_SETTINGS_TAB
   SET DISP_WO_TASK_NODE      = 0,
       DISP_PM_PLAN_NODE      = 0,
       DISP_SC_NODE           = 0,
       DISP_CONN_OBJS_NODE    = 0,
       HIDE_EMPTY_GRUP        = 0,
       HIDE_OBJS_WITHOUT_GRUP = 0
   WHERE DISP_WO_TASK_NODE IS NULL
   AND DISP_PM_PLAN_NODE IS NULL
   AND DISP_SC_NODE IS NULL
   AND DISP_CONN_OBJS_NODE IS NULL
   AND HIDE_EMPTY_GRUP IS NULL
   AND HIDE_OBJS_WITHOUT_GRUP IS NULL;

   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'GROUPING_CRITERIA', 'VARCHAR2(20)', 'N');   
   Database_SYS.Set_Table_Column(columns_, 'DISP_WO_TASK_NODE', 'NUMBER(1)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'DISP_PM_PLAN_NODE', 'NUMBER(1)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'DISP_SC_NODE', 'NUMBER(1)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'DISP_CONN_OBJS_NODE', 'NUMBER(1)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'HIDE_EMPTY_GRUP', 'NUMBER(1)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'HIDE_OBJS_WITHOUT_GRUP', 'NUMBER(1)', 'N');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE);  
END;
/
EXEC Database_SYS.Log_Detail_Time_Stamp('EQUIP','2110.upg','Timestamp_8');
PROMPT Adding columns CRITICALITY, ITEM_CLASS, GROUP_ID, CATEGORY_ID AND MANUFACTURER_NO to EQUIPMENT_TW_SETTINGS_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'EQUIPMENT_TW_SETTINGS_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'CRITICALITY', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ITEM_CLASS', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'GROUP_ID', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CATEGORY_ID', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'MANUFACTURER_NO', 'VARCHAR2(20)', 'Y');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/
-- ***** EQUIPMENT_TW_SETTINGS_TAB End *****

-- ***** EQUIPMENT_OBJECT_TEST_PNT_TAB Start *****
EXEC Database_SYS.Log_Detail_Time_Stamp('EQUIP','2110.upg','Timestamp_9');
PROMPT Alter column TEST_POINT_ID IN EQUIPMENT_OBJECT_TEST_PNT_TAB
DECLARE
   column_ Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('TEST_POINT_ID', 'VARCHAR2(30)');
   Database_SYS.Alter_Table_Column('EQUIPMENT_OBJECT_TEST_PNT_TAB', 'M', column_); 
END;
/
-- ***** EQUIPMENT_OBJECT_TEST_PNT_TAB End *****

-- ***** EQUIPMENT_OBJECT_PARAM_TAB Start *****
EXEC Database_SYS.Log_Detail_Time_Stamp('EQUIP','2110.upg','Timestamp_10');
PROMPT Alter column TEST_POINT_ID IN EQUIPMENT_OBJECT_PARAM_TAB
DECLARE
   column_ Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('TEST_POINT_ID', 'VARCHAR2(30)');
   Database_SYS.Alter_Table_Column('EQUIPMENT_OBJECT_PARAM_TAB', 'M', column_); 
END;
/
-- ***** EQUIPMENT_OBJECT_PARAM_TAB End *****

---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES/COLUMNS -----------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------

-- ***** EQUIP_OBJECT_LOCATION_LOV2 Start *****
EXEC Database_SYS.Log_Detail_Time_Stamp('EQUIP','2110.upg','Timestamp_11');
PROMPT Drop obsolete view EQUIP_OBJECT_LOCATION_LOV2
DECLARE
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF Database_SYS.View_Exist('EQUIP_OBJECT_LOCATION_LOV2') THEN
      Database_SYS.Remove_View('EQUIP_OBJECT_LOCATION_LOV2', TRUE);
   END IF;  
END;
/
-- ***** EQUIP_OBJECT_LOCATION_LOV2 End *****

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE INDEXES/SEQUENCES ------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

EXEC Database_SYS.Log_Detail_Time_Stamp('EQUIP','2110.upg','Timestamp_12');
PROMPT Upgrade statements IN FILE 2110.upg ends here.
EXEC Database_SYS.Log_Detail_Time_Stamp('EQUIP','2110.upg','Done');
SET SERVEROUTPUT OFF

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
