-----------------------------------------------------------------------------
--
--  Logical unit: EquipmentObject
--  Component:    EQUIP
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  181120  DISKLK  SAUXXW4-3326, Modified Maint_Object2_Lov, added equipment_main_position_db.
--  140926  SHAFLK  PRSA-3704, Replaced user allowed site checks with an annotation.
--  150125  japelk  PRSA-6819, changed the column EQUIPMENT_ALL_OBJECT_CC_LOV .
--  150408  NEKOLK  Bug 121966, Added sup_mch_code,sup_contract in to EQUIPMENT_ALL_OBJECT_CC_LOV.
--  150424  VISRLK  Bug 122179, Modified column comments of mch_type and category_id
--  150630  CLEKLK  Bug 123214, Modified Equipment_All_Object_Uiv view
--  151029  NRATLK  RPT-79, Added PM Program fields into the Equipment_Object_Uiv view.
--  160103  KrRaLK  STRSA-1635, Added Maintenance_Object_Addr_Lov
--  160127  ILSOLK  STRSA-1793, Added Customer_Object_Addr_Lov and changed Maintenance_Object_Addr_Lov.
--  160129  ILSOLK  STRSA-1793, Moved Customer_Object_Addr_Lov to EquipmentObjectParty.
--	 160331  AKDELK  STRSA-3341, Modified Maintenance_Object_Addr_Lov
--  160614  DIHELK  STRLOC-76, Added new address fields to Maintenance_Object_Addr_Lov.
--  160711  KANILK  STRSA-8750, Merged Bug 130229, Added several NULL fields to the view Maintenance_Object_Lov 
--                  to fix the error occurs when 'Saved searches' for not compatible Connection Type selected. 
--  161017  SEROLK  STRSA-10072, Added field process_class_id to view Equipment_Object_Uiv & added views Equip_Functional_Rcm_Lov, rcm_analysis_con_objs
--  161107  JAROLK  STRSA-14609, Modified Maintenance_Object_Addr_Lov View.
--  161108  JAROLK  STRSA-14490, Modified Maintenance_Object_Addr_Lov View.
--  180213  DMALLK  STRSA-16756, EQUIPMENT_OBJECT_PUB was added to skip the user allowed filter.
--  180524  RUMELK  SAUXXW4-3401, Added equipment_main_position_db to Maintenance_Object_Lov.
--  180606  chanlk  SAUXXW4-4861, Added equipment_main_position_db Maintenance_Object
--  180816  ARUFLK  Bug 143533, Added loc_party_type into Maintenance_Object_Addr_Lov.
--  180918  SSILLK  SAUXXW4-1303, added db cloumn to Equipment_All_Object_Uiv
--  181106  SSILLK  Bug 144994, Added Obj_Level.Flags = 'A-IUL'  Obj_Level.Prompt = 'Object Level' column to  Maintenance_Object_Addr_Lov
--  190129  DHWELK  Bug 145044, Changed the view MAINTENANCE_OBJECT_ADDR_LOV. Replaced UNION with UNION ALL.
--  190606  LoPrlk  SAUXXW4-10590, In column comments for Equipment_All_Object.Operational_Status, removed the Ref attribute and added Enumeration attribute.
--  190611  LoPrlk  SAUXXW4-10590, Operational_Status.Enumeration was set to SerialOperationalStatus.
--  190829  TAJALK  SAUXXW4-20919, Changed the message constant.
--  200311  SHAFLK  Bug 152760(SAZM-5389)Added view Equipment_All_Lov.
--  200619  HRATLK  AMZWOP-754, Modified the Object_Counts & Object_Counts_View2 views.
--  200915  CLEKLK  AM2020R1-5967, Modified Maintenance_Object_Addr_Lov to increase Contact and PhoneNo lengths.
--  210505  DEEKLK  AM21R2-1412, Modified view Equipment_Object.
--  210507  RUANLK  AM21R2-1293, Modified the Object_Counts_View2 views.
--  211008  puvelk  AM21R2-2420, RLS implimented.
--  211025  RUSSLK  AM21R2-2534, Modified Equipment_Object_Uiv
--  211101  NEKOLK  AM21R2-2960 : EQUIP redesign PARTCA changes : alternate_id obsolete work 
--  220112  GENALK  AM21R2-3216, Added Cluster ID to Equipment_Object_Uiv.
-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

@Override
COLUMN Operational_Status IS
   Enumeration        = 'SerialOperationalStatus';

COLUMN Latest_Transaction IS
   Flags      = 'A---L'
   Datatype   = 'STRING(200)'
   Prompt     = 'Latest Transaction';

COLUMN Connection_Type IS
   Flags      = 'AMI--'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Connection Type';

COLUMN Connection_Type_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(10)'
   Prompt     = 'Connection Type';

COLUMN Ownership IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(200)'
   Enumeration= 'Ownership'
   Prompt     = 'Ownership'
   Ref        = 'Ownership';

COLUMN Ownership_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Ownership';

COLUMN Insert_Srv IS
   Flags      = 'A-IU-'
   Datatype   = 'NUMBER'
   Prompt     = 'Include on Service Contract Line';

COLUMN Mch_Code_Contract IS
   Flags      = 'AMI-L'
   Datatype   = 'STRING(5)/UPPERCASE'
   Prompt     = 'Object Site'
   Ref        = 'Site';

COLUMN Object_Party_Type IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Party Type';

COLUMN Identity IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)/UPPERCASE'
   Prompt     = 'Party Identity';

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------


-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

@Override
VIEW Equipment_Object IS
   Operational_Status.Enumeration = 'SerialOperationalStatus'
   Operational_Status.Flags = 'A---L';

VIEW Equipment_Object_Pub AS
SELECT
       equipment_object_seq           equipment_object_seq,
       contract                       contract,
       mch_code                       mch_code,
       mch_name                       mch_name,
       mch_loc                        mch_loc,
       mch_pos                        mch_pos,
       mch_doc                        mch_doc,
       purch_price                    purch_price,
       purch_date                     purch_date,
       warr_exp                       warr_exp,
       note                           note,
       info                           info,
       data                           data,
       Site_API.Get_Company(Contract) company,
       production_date                production_date,
       Translate_Boolean_API.Decode(Equipment_Object_API.Has_Structure__(contract, mch_code)) has_structure,
       Translate_Boolean_API.Decode(Equipment_Object_Conn_API.Has_Connection(contract, mch_code)) has_connection,
       mch_code||chr(31)              mch_code_key_value,
       type||chr(31)                  type_key_value,
       Equipment_Main_Position_API.Decode(main_pos) equipment_main_position,
       main_pos                       equipment_main_position_db,
       group_id                       group_id,
       mch_type                       mch_type,
       cost_center                    cost_center,
       object_no                      object_no,
       category_id                    category_id,
       Equipment_Object_API.Get_Mch_Code(functional_object_seq)   sup_mch_code,
       obj_level                      obj_level,
       manufacturer_no                manufacturer_no,
       vendor_no                      vendor_no,
       mch_serial_no                  serial_no,
       type                           type,
       Equipment_Object_API.Get_Contract(functional_object_seq)   sup_contract,
       part_no                        part_no,
       owner                          owner,
       is_category_object             is_category_object,
       is_geographic_object           is_geographic_object,
       nvl(Serial_Operational_Status_API.Decode(operational_status), Part_Serial_Catalog_API.Get_Operational_Status(part_no, mch_serial_no)) operational_status,
       nvl(operational_status, Serial_Operational_Status_API.Encode(Part_Serial_Catalog_API.Get_Operational_Status(part_no, mch_serial_no))) operational_status_db,
       manufactured_date              manufactured_date,
       Equipment_Object_API.Get_Mch_Code(location_object_seq)     location_mch_code,
       Equipment_Object_API.Get_Contract(location_object_seq)     location_contract,
       Equipment_Object_API.Get_Mch_Code(from_object_seq)         from_mch_code,
       Equipment_Object_API.Get_Contract(from_object_seq)         from_contract,
       Equipment_Object_API.Get_Mch_Code(to_object_seq)           to_mch_code,
       Equipment_Object_API.Get_Contract(to_object_seq)           to_contract,
       Equipment_Object_API.Get_Mch_Code(process_object_seq)      process_mch_code,
       Equipment_Object_API.Get_Contract(process_object_seq)      process_contract,
       Equipment_Object_API.Get_Mch_Code(pipe_object_seq)         pipe_mch_code,
       Equipment_Object_API.Get_Contract(pipe_object_seq)         pipe_contract,
       Equipment_Object_API.Get_Mch_Code(circuit_object_seq)      circuit_mch_code,
       Equipment_Object_API.Get_Contract(circuit_object_seq)      circuit_contract,
       criticality                    criticality,
       part_rev                       part_rev,
       item_class_id                  item_class_id,
       location_id                    location_id,
       applied_pm_program_id          applied_pm_program_id,
       applied_pm_program_rev         applied_pm_program_rev,
       applied_date                   applied_date,
       pm_prog_application_status     pm_prog_application_status,
       not_applicable_reason          not_applicable_reason,
       not_applicable_set_user        not_applicable_set_user,
       not_applicable_set_date        not_applicable_set_date,
       Safe_Access_Code_API.Decode(safe_access_code) safe_access_code,
       safe_access_code               safe_access_code_db,
       process_class_id               process_class_id,
       functional_object_seq          functional_object_seq,
       location_object_seq            location_object_seq,
       from_object_seq                from_object_seq,
       to_object_seq                  to_object_seq,
       process_object_seq             process_object_seq,
       pipe_object_seq                pipe_object_seq,
       circuit_object_seq             circuit_object_seq,
       rowkey                         objkey,
       rowtype                        objtype,
       to_char(rowversion)            objversion,
       rowid                          objid
FROM   equipment_object_tab;

@SecurityCheck Site.UserAuthorized(a.contract)
VIEW Maintenance_Object_Lov IS
   Prompt = 'Equipment All Object'
   Mch_Name.Flags = 'AMIUL'
   Mch_Loc.Flags = 'A-IU-'
   Production_Date.Prompt = 'Production Date'
   Serial_No.Prompt = 'Serial No'
   Manufacturer_No.Ref = 'ManufacturerInfo'
   Vendor_No.Prompt = 'Supplier'
   Vendor_No.Ref = 'SupplierInfo'
   Equipment_Main_Position.Flags = 'AMIUL'
   Equipment_Main_Position.Datatype = 'STRING(20)'
   Equipment_Main_Position.Prompt = 'Equipment Main Position'
   Equipment_Main_Position_Db.Flags = 'A----'
   Equipment_Main_Position_Db.Datatype = 'STRING(15)'
   Type.Flags = 'A-IU-'
   Type.Prompt = 'Type Designation'
   Mch_Type.Flags = 'A-IUL'
   Obj_Level.Flags = 'A-IUL'
   Group_Id.Flags = 'A-IU-'
   Cost_Center.Ref = 'CodeB(COMPANY)'
   Object_No.Flags = 'A-IU-'
   Object_No.Prompt = 'Object No'
   Object_No.Ref = 'CodeE(COMPANY)'
   Category_Id.Flags = 'A-IUL'
   Category_Id.Prompt = 'Category'
   Sup_Contract.Flags = 'A-IU-'
   Sup_Mch_Code.Flags = 'A-IU-'
   Sup_Mch_Code.Prompt = 'Superior Object ID'
   Criticality.Ref = 'EquipmentCriticality'
   Is_Category_Object.Flags = 'A---L'
   Is_Category_Object.Datatype = 'STRING(5)/UPPERCASE'
   Operational_Status.Flags = 'A---L'
   Operational_Status_Db.Flags = 'A----'
   Operational_Status_Db.Datatype = 'STRING(200)'
   item_class_id.Prompt = 'Item Class ID'
SELECT  a.equipment_object_seq          equipment_object_seq,
        a.contract                      contract,
        a.mch_code                      mch_code,
        a.mch_name                      mch_name,
        a.mch_loc                       mch_loc,
        a.mch_pos                       mch_pos,
        a.mch_doc                       mch_doc,
        a.purch_price                   purch_price,
        a.purch_date                    purch_date,
        a.warr_exp                      warr_exp,
        a.note                          note,
        a.info                          info,
        a.data                          data,
        a.production_date               production_date,
        Site_API.Get_Company(contract)  company,
        mch_code||chr(31)               mch_code_key_value,
        type||chr(31)                   type_key_value,
        mch_serial_no                   serial_no,
        a.manufacturer_no               manufacturer_no,
        a.vendor_no                     vendor_no,
        a.part_rev                      part_rev,
        Equipment_Main_Position_API.Decode(main_pos) equipment_main_position,
        main_pos                        equipment_main_position_db,
        a.type                          type,
        a.mch_type                      mch_type,
        a.obj_level                     obj_level,
        a.group_id                      group_id,
        a.part_no                       part_no,
        a.cost_center                   cost_center,
        a.object_no                     object_no,
        a.category_id                   category_id,
        Equipment_Object_API.Get_Contract(a.functional_object_seq)       sup_contract,
        Equipment_Object_API.Get_Mch_Code(a.functional_object_seq)       sup_mch_code,
        a.criticality                   criticality,
        a.is_category_object            is_category_object,
        Part_Serial_Catalog_API.Get_Latest_Transaction(a.part_no,a.mch_serial_no)              latest_transaction,
        a.rowid                                  objid,
        TO_CHAR(a.rowversion)  objversion,
        nvl(Serial_Operational_Status_API.Decode(a.operational_status),b.operational_status)   operational_status,
        nvl(a.operational_status, b.operational_status_db)                                     operational_status_db,
        decode(a.is_category_object, 'TRUE', 'CATEGORY', 'EQUIPMENT')                          connection_type,
        NULL                            linear_asset_name,
        NULL                            state,
        NULL                            item_class_id,
        NULL                            linear_asset_type,
	     NULL                            length,
        NULL                            linear_asset_revision_no,
        NULL                            revision_status,
        NULL                            description,
	     NULL                            unit_code_length,
        NULL                            Site,      
        NULL                            internal_maint_responsible,
        NULL                            internal_acc_owner,
        NULL                            external_acc_owner,
        NULL                            resource_parent_id,	
        NULL                            lot_batch_no,
        NULL                            external_maint_responsible,
        NULL                            tool_equipment_id,	
        NULL                            operator,
        rowkey                          objkey
FROM   equipment_object_tab a, part_serial_catalog b
WHERE  a.part_no = b.part_no(+)
AND    a.mch_serial_no = b.serial_no(+);

@SecurityCheck Site.UserAuthorized(a.contract)
VIEW Maint_Object2_Lov IS
   Prompt = 'Equipment All Object'
   Connection_Type.Flags = 'PMI--'
   Mch_Name.Flags = 'AMIUL'
   Equipment_Main_Position.Flags = 'AMIUL'
   Equipment_Main_Position.Datatype = 'STRING(20)'
   Equipment_Main_Position.Prompt = 'Equipment Main Position'
   Obj_Level.Flags = 'A-IUL'
   Operational_Status.Flags = 'A---L'
   Operational_Status_Db.Flags = 'A----'
   Operational_Status_Db.Datatype = 'STRING(200)'
SELECT  CASE a.is_category_object
           WHEN 'TRUE'  THEN EQUIPMENT_OBJECT_API.Decode_Maint_Conn('CATEGORY')
           WHEN 'FALSE' THEN EQUIPMENT_OBJECT_API.Decode_Maint_Conn('EQUIPMENT')
           ELSE              EQUIPMENT_OBJECT_API.Decode_Maint_Conn('EQUIPMENT')
        END                                                                   connection_type,
        CASE a.is_category_object
           WHEN 'TRUE'  THEN 'CATEGORY'
           WHEN 'FALSE' THEN 'EQUIPMENT'
           ELSE              'EQUIPMENT'
        END                                                                   connection_type_db,
        a.equipment_object_seq                                                equipment_object_seq,
        a.contract                                                            contract,
        a.mch_code                                                            mch_code,
        a.mch_name                                                            mch_name,
        Equipment_Main_Position_API.Decode(main_pos)                          equipment_main_position,
        main_pos                                                              equipment_main_position_db,
        a.obj_level                                                           obj_level,
        b.latest_transaction                                                  latest_transaction,
        a.rowid                                                               objid,
        TO_CHAR(a.rowversion)                               objversion,
        nvl(Serial_Operational_Status_API.Decode(a.operational_status), substr(Part_Serial_Catalog_API.Get_Operational_Status(a.part_no, a.mch_serial_no), 1, 200)) operational_status,
        nvl(a.operational_status, Part_Serial_Catalog_API.Get_Operational_Status_db(a.part_no, a.mch_serial_no)) operational_status_db,
        rowkey                                                               objkey
FROM   equipment_object_tab a, part_serial_catalog b
WHERE  a.part_no = b.part_no(+)
AND    a.mch_serial_no = b.serial_no(+);
 
@SecurityCheck Site.UserAuthorized(contract)
VIEW Equipment_Object_Uiv IS
   Prompt = 'Equipment Object'
   Mch_Name.Flags = 'AMIUL'
   Manufacturer_No.Ref = 'ManufacturerInfo'
   Serial_No.Column = 'Mch_Serial_No'
   Company.Flags = 'A-I--'
   Company.Column = 'Site_API.Get_Company(CONTRACT)/NOCHECK'
   Vendor_No.Ref = 'SupplierInfo'
   Cost_Center.Ref = 'CodeB(COMPANY)'
   Object_No.Flags = 'A-IU-'
   Object_No.Ref = 'CodeE(COMPANY)'
   Equipment_Main_Position.Datatype = 'STRING(20)'
   Has_Structure.Datatype = 'STRING(10)'
   Has_Structure.Enumeration = 'TranslateBoolean'
   Has_Structure.Ref = 'TranslateBoolean'
   has_structure_db.Flags = 'A----'
   has_structure_db.Datatype = 'STRING(5)'
   Has_Connection.Datatype = 'STRING(10)'
   Has_Connection.Enumeration = 'TranslateBoolean'
   Has_Connection.Ref = 'TranslateBoolean'
   has_connection_db.Flags = 'A----'
   has_connection_db.Datatype = 'STRING(5)'
   Operational_Status.Flags = 'AMIUL'
   Location_Mch_Code.Prompt = 'Locational Parent'
SELECT equipment_object_seq           equipment_object_seq,
       contract                       contract,
       mch_code                       mch_code,
       mch_name                       mch_name,
       mch_loc                        mch_loc,
       mch_pos                        mch_pos,
       mch_doc                        mch_doc,
       purch_price                    purch_price,
       purch_date                     purch_date,
       warr_exp                       warr_exp,
       note                           note,
       info                           info,
       data                           data,
       Site_API.Get_Company(CONTRACT) company,
       production_date                production_date,
       Translate_Boolean_API.Decode(Equipment_Object_API.Has_Structure__(contract, mch_code))
                                      has_structure,
Equipment_Object_API.Has_Structure__(contract,mch_code) has_structure_db,
       Translate_Boolean_API.Decode(Equipment_Object_Conn_API.Has_Connection(contract, mch_code))
                                      has_connection,
Equipment_Object_Conn_API.Has_Connection(contract,mch_code) has_connection_db,
       mch_code||chr(31)              mch_code_key_value,
       type||chr(31)                  type_key_value,
       Equipment_Main_Position_API.Decode(main_pos)
                                      equipment_main_position,
       group_id                       group_id,
       mch_type                       mch_type,
       cost_center                    cost_center,
       object_no                      object_no,
       category_id                    category_id,
       Equipment_Object_API.Get_Mch_Code(functional_object_seq)      sup_mch_code,
       obj_level                      obj_level,
       manufacturer_no                manufacturer_no,
       vendor_no                      vendor_no,
       mch_serial_no                  serial_no,
       type                           type,
       Equipment_Object_API.Get_Contract(functional_object_seq)      sup_contract,
       part_no                        part_no,
       owner                          owner,
       is_category_object             is_category_object,
       is_geographic_object           is_geographic_object,
       nvl(Serial_Operational_Status_API.Decode(operational_status), Part_Serial_Catalog_API.Get_Operational_Status(part_no, mch_serial_no))
                                      operational_status,
       nvl(operational_status, Serial_Operational_Status_API.Encode(Part_Serial_Catalog_API.Get_Operational_Status(part_no, mch_serial_no))) operational_status_db,
       manufactured_date              manufactured_date,
       Equipment_Object_API.Get_Mch_Code(location_object_seq)        location_mch_code,
       Equipment_Object_API.Get_Contract(location_object_seq)        location_contract,
       Equipment_Object_API.Get_Mch_Code(from_object_seq)            from_mch_code,
       Equipment_Object_API.Get_Contract(from_object_seq)            from_contract,
       Equipment_Object_API.Get_Mch_Code(to_object_seq)              to_mch_code,
       Equipment_Object_API.Get_Contract(to_object_seq)              to_contract,
       Equipment_Object_API.Get_Mch_Code(process_object_seq)         process_mch_code,
       Equipment_Object_API.Get_Contract(process_object_seq)         process_contract,
       Equipment_Object_API.Get_Mch_Code(pipe_object_seq)            pipe_mch_code,
       Equipment_Object_API.Get_Contract(pipe_object_seq)            pipe_contract,
       Equipment_Object_API.Get_Mch_Code(circuit_object_seq)         circuit_mch_code,
       Equipment_Object_API.Get_Contract(circuit_object_seq)         circuit_contract,
       item_class_id                  item_class_id,
       process_class_id               process_class_id,
       functional_object_seq          functional_object_seq,
       location_object_seq            location_object_seq,
       from_object_seq                from_object_seq,
       to_object_seq                  to_object_seq,
       process_object_seq             process_object_seq,
       pipe_object_seq                pipe_object_seq,
       circuit_object_seq             circuit_object_seq,
       criticality                    criticality,
       part_rev                       part_rev,
       applied_pm_program_id          applied_pm_program_id,
       applied_pm_program_rev         applied_pm_program_rev,
       applied_date                   applied_date,        
       pm_prog_application_status     pm_prog_application_status,  
       not_applicable_reason          not_applicable_reason,
       not_applicable_set_user        not_applicable_set_user,
       not_applicable_set_date        not_applicable_set_date,
       location_id                    location_id,
       Safe_Access_Code_API.Decode(safe_access_code) safe_access_code,
       safe_access_code               safe_access_code_db,
       cluster_id                     cluster_id,
       rowid                         objid,
       TO_CHAR(rowversion)                    objversion,
       rowkey                        objkey,
       main_pos                      equipment_main_position_db,
       rowtype                       objtype,
       Equipment_Object_API.Get_Design_Status_Db(contract,mch_code)
                                     design_status_db
FROM   equipment_object_tab;

@SecurityCheck Site.UserAuthorized(a.contract)
VIEW Equipment_All_Object IS
   Prompt = 'Equipment All Object'
   Contract.Flags = 'PMI--'
   Contract.Ref = 'Site'
   Mch_Code.Flags = 'K-I-L'
   Mch_Name.Flags = 'AMIUL'
   Mch_Loc.Flags = 'A-IU-'
   Note.Prompt = 'Note Text'
   Production_Date.Prompt = 'Production Date'
   Has_Structure.Enumeration = 'TranslateBoolean'
   Has_Structure.Ref = 'TranslateBoolean'
   has_structure_db.Flags = 'A----'
   has_structure_db.Datatype = 'STRING(5)'
   Has_Connection.Enumeration = 'TranslateBoolean'
   Has_Connection.Ref = 'TranslateBoolean'
   has_connection_db.Flags = 'A----'
   has_connection_db.Datatype = 'STRING(5)'
   Mch_Code_Key_Value.Datatype = 'STRING(160)/UPPERCASE'
   Serial_No.Prompt = 'Serial No'
   Manufacturer_No.Ref = 'ManufacturerInfo'
   Vendor_No.Prompt = 'Supplier'
   Vendor_No.Ref = 'SupplierInfo'
   Equipment_Main_Position.Flags = 'A-IUL'
   Equipment_Main_Position.Prompt = 'Equipment Main Position'
   Equipment_Main_Position.Ref = 'EquipmentMainPosition'
   Type.Flags = 'A-IU-'
   Type.Prompt = 'Type Designation'
   Type.Ref = 'TypeDesignation'
   Mch_Type.Flags = 'A-IU-'
   Mch_Type.Ref = 'EquipmentObjType'
   Obj_Level.Flags = 'A-I-L'
   Obj_Level.Ref = 'EquipmentObjectLevel'
   Group_Id.Flags = 'A-IU-'
   Group_Id.Ref = 'EquipmentObjGroup'
   Part_No.Flags = 'A-I--'
   Object_No.Flags = 'A-IU-'
   Object_No.Prompt = 'Financial Object'
   Object_No.Ref = 'CodeE(company)'
   Category_Id.Flags = 'A-IU-'
   Category_Id.Prompt = 'Category'
   Category_Id.Ref = 'EquipmentObjCategory'
   Sup_Mch_Code.Flags = 'A-IU-'
   Sup_Mch_Code.Prompt = 'Superior Object ID'
   Sup_Mch_Code.Ref = 'EquipmentObject(sup_contract)'
   Sup_Contract.Flags = 'A-IU-'
   Sup_Contract.Prompt = 'Sup Contract'
   Sup_Contract.Ref = 'Site'
   Is_Category_Object.Flags = 'A----'
   Is_Category_Object.Datatype = 'STRING(20)'
   Is_Geographic_Object.Flags = 'A----'
   Is_Geographic_Object.Datatype = 'STRING(5)'
   Location_Id.Ref = 'Location'
   Criticality.Ref = 'EquipmentCriticality'
   Operational_Status.Flags = 'AMIUL'
   Operational_Status.Enumeration = 'SerialOperationalStatus'
   Operational_Status_Db.Flags = 'A----'
   Owner.Flags = 'A-I--'
   Owner.Datatype = 'STRING(20)'
   Location_Mch_Code.Ref = 'EquipmentObject(location_contract)'
   Location_Contract.Ref = 'Site'
   From_Mch_Code.Ref = 'EquipmentObject(from_contract)'
   From_Contract.Ref = 'Site'
   To_Mch_Code.Ref = 'EquipmentObject(to_contract)'
   To_Contract.Ref = 'Site'
   Process_Mch_Code.Ref = 'EquipmentObject(process_contract)'
   Process_Contract.Ref = 'Site'
   Pipe_Mch_Code.Ref = 'EquipmentObject(pipe_contract)'
   Pipe_Contract.Ref = 'Site'
   Circuit_Mch_Code.Ref = 'EquipmentObject(circuit_contract)'
   Circuit_Contract.Ref = 'Site'
SELECT a.equipment_object_seq                   equipment_object_seq,
       a.contract                               contract,
       a.mch_code                               mch_code,
       a.mch_name                               mch_name,
       a.mch_loc                                mch_loc,
       a.mch_pos                                mch_pos,
       a.mch_doc                                mch_doc,
       nvl(b.acquisition_cost,a.purch_price)    purch_price,
       nvl(b.purchased_date ,a.purch_date)      purch_date,
       nvl(a.warr_exp, b.warranty_expires)      warr_exp,
       decode(obj_level, NULL, b.note_text, a.note)
                                                note,
       a.info                                   info,
       a.data                                   data,
       nvl(b.installation_date,a.production_date)
                                                production_date,
       Site_API.Get_Company(contract)           company,
       Translate_Boolean_API.Decode(Equipment_Object_API.Has_Structure__(contract,mch_code))
                                                has_structure,
       Equipment_Object_API.Has_Structure__(contract,mch_code) has_structure_db,                                         
       Translate_Boolean_API.Decode(Equipment_Object_Conn_API.Has_Connection(contract,mch_code))
                                                has_connection,
       Equipment_Object_Conn_API.Has_Connection(contract,mch_code) has_connection_db,                                         
       Client_SYS.Get_Key_Reference('EquipmentObject', 'EQUIPMENT_OBJECT_SEQ', equipment_object_seq)
                                                mch_code_key_value,
       type||chr(31)                            type_key_value,
       mch_serial_no                            serial_no,
       nvl(a.manufacturer_no,b.manufacturer_no) manufacturer_no,
       nvl(a.vendor_no, b.supplier_no)          vendor_no,
       nvl(a.part_rev, b.serial_revision)       part_rev,
       substr(Equipment_Main_Position_API.Decode(main_pos),1,20)
                                                equipment_main_position,
       main_pos                                 equipment_main_position_db,                                     
       a.type                                   type,
       a.mch_type                               mch_type,
       a.obj_level                              obj_level,
       a.group_id                               group_id,
       a.part_no                                part_no,
       a.cost_center                            cost_center,
       a.object_no                              object_no,
       a.category_id                            category_id,
       Equipment_Object_API.Get_Mch_Code(a.functional_object_seq)       sup_mch_code,
       Equipment_Object_API.Get_Contract(a.functional_object_seq)       sup_contract,
       a.rowid                                  objid,
       a.is_category_object                     is_category_object,
       a.is_geographic_object                   is_geographic_object,
       a.location_id                            location_id,
       a.criticality                            criticality,
       nvl(b.manufactured_date,a.manufactured_date)
                                                manufactured_date,
       nvl(Serial_Operational_Status_API.Decode(a.operational_status), substr(Part_Serial_Catalog_API.Get_Operational_Status(a.part_no, a.mch_serial_no), 1, 200))
                                                operational_status,
       nvl(a.operational_status, Serial_Operational_Status_API.Encode(Part_Serial_Catalog_API.Get_Operational_Status(a.part_no, a.mch_serial_no)))
                                                operational_status_db,
       b.owning_customer_no                     owner,
       b.part_ownership_db                      ownership_db,
       Ownership_API.Decode(a.ownership)        ownership,
       null                                     insert_srv,
       Equipment_Object_API.Get_Mch_Code(a.location_object_seq)            location_mch_code,
       Equipment_Object_API.Get_Contract(a.location_object_seq)            location_contract,
       Equipment_Object_API.Get_Mch_Code(a.from_object_seq)                from_mch_code,
       Equipment_Object_API.Get_Contract(a.from_object_seq)                from_contract,
       Equipment_Object_API.Get_Mch_Code(a.to_object_seq)                  to_mch_code,
       Equipment_Object_API.Get_Contract(a.to_object_seq)                  to_contract,
       Equipment_Object_API.Get_Mch_Code(a.process_object_seq)             process_mch_code,
       Equipment_Object_API.Get_Contract(a.process_object_seq)             process_contract,
       Equipment_Object_API.Get_Mch_Code(a.pipe_object_seq)                pipe_mch_code,
       Equipment_Object_API.Get_Contract(a.pipe_object_seq)                pipe_contract,
       Equipment_Object_API.Get_Mch_Code(a.circuit_object_seq)             circuit_mch_code,
       Equipment_Object_API.Get_Contract(a.circuit_object_seq)             circuit_contract,
       a.functional_object_seq         functional_object_seq,
       a.location_object_seq           location_object_seq,
       a.from_object_seq               from_object_seq,
       a.to_object_seq                 to_object_seq,
       a.process_object_seq            process_object_seq,
       a.pipe_object_seq               pipe_object_seq,
       a.circuit_object_seq            circuit_object_seq,
       TO_CHAR(a.rowversion)  objversion,
       a.rowtype                       objtype,
       rowkey                          objkey
FROM   equipment_object_tab a, part_serial_catalog b
WHERE  a.part_no=b.part_no(+)
AND    a.mch_serial_no = b.serial_no(+)
AND    nvl(b.objstate,'InFacility') IN ('InFacility', 'InRepairWorkshop', 'Contained','InInventory');

@SecurityCheck Site.UserAuthorized(a.contract)
VIEW Equipment_All_Object_Note IS
   Prompt = 'Equipment All Object'
   Contract.Flags = 'PMI--'
   Mch_Code.Flags = 'K-I-L'
   Note.Prompt = 'note text'
   Serial_No.Prompt = 'Serial No'
   Part_No.Flags = 'A-I--'
SELECT a.equipment_object_seq          equipment_object_seq,
       a.contract                      contract,
       a.mch_code                      mch_code,
       decode(obj_level, NULL, b.note_text, a.note)
                                     note,
       mch_serial_no                   serial_no,
       a.part_no                       part_no,
       a.rowid                         objid,
       TO_CHAR(a.rowversion) objversion,
       nvl(Serial_Operational_Status_API.Decode(a.operational_status), Part_Serial_Catalog_API.Get_Operational_Status(a.part_no, a.mch_serial_no)) state
FROM   equipment_object_tab a, part_serial_catalog b
WHERE a.part_no=b.part_no(+)
AND   a.mch_serial_no = b.serial_no(+);

@SecurityCheck Site.UserAuthorized(a.contract)
VIEW Equipment_All_Object_Uiv IS
   Prompt = 'Equipment All Object'
   Mch_Code.Flags = 'K-I-L'
   Mch_Name.Flags = 'AMIUL'
   Mch_Loc.Flags = 'A-IU-'
   Note.Prompt = 'note text'
   Production_Date.Prompt = 'Production Date'
   Has_Structure.Datatype = 'STRING(10)'
   Has_Structure.Enumeration = 'TranslateBoolean'
   Has_Structure.Ref = 'TranslateBoolean'
   has_structure_db.Flags = 'A----'
   has_structure_db.Datatype = 'STRING(5)'
   Has_Connection.Datatype = 'STRING(10)'
   Has_Connection.Enumeration = 'TranslateBoolean'
   Has_Connection.Ref = 'TranslateBoolean'
   has_connection_db.Flags = 'A----'
   has_connection_db.Datatype = 'STRING(5)'
   Mch_Code_Key_Value.Datatype = 'STRING(160)/UPPERCASE'
   Serial_No.Prompt = 'Serial No'
   Manufacturer_No.Ref = 'ManufacturerInfo'
   Vendor_No.Prompt = 'Supplier'
   Vendor_No.Ref = 'SupplierInfo'
   Equipment_Main_Position.Flags = 'A-IUL'
   Equipment_Main_Position.Datatype = 'STRING(20)'
   Equipment_Main_Position.Prompt = 'Equipment Main Position'
   Type.Flags = 'A-IU-'
   Type.Prompt = 'Type Designation'
   Mch_Type.Flags = 'A-IU-'
   Obj_Level.Flags = 'A-I-L'
   Group_Id.Flags = 'A-IU-'
   Part_No.Flags = 'A-I--'
   Cost_Center.Ref = 'CodeB(COMPANY)'
   Object_No.Flags = 'A-IU-'
   Object_No.Prompt = 'Financial Object'
   Object_No.Ref = 'CodeE(COMPANY)'
   Category_Id.Flags = 'A-IU-'
   Category_Id.Prompt = 'Category'
   Sup_Mch_Code.Flags = 'A-IU-'
   Sup_Mch_Code.Prompt = 'Superior Object ID'
   Sup_Contract.Flags = 'A-IU-'
   Sup_Contract.Prompt = 'Sup Contract'
   Criticality.Ref = 'EquipmentCriticality'
   Operational_Status.Flags = 'AMIUL'
   Operational_Status_Db.Flags = 'A----'
   Owner.Flags = 'A-I--'
   Owner.Datatype = 'STRING(20)'
   Ownership.Ref = 'Ownership'
SELECT a.equipment_object_seq                   equipment_object_seq,
       a.contract                               contract,
       a.mch_code                               mch_code,
       a.mch_name                               mch_name,
       a.mch_loc                                mch_loc,
       a.mch_pos                                mch_pos,
       a.mch_doc                                mch_doc,
       nvl(b.acquisition_cost,a.purch_price)    purch_price,
       nvl(b.purchased_date ,a.purch_date)      purch_date,
       nvl(a.warr_exp, b.warranty_expires)      warr_exp,
       decode(obj_level, NULL, b.note_text, a.note)
                                                note,
       a.info                                   info,
       a.data                                   data,
       nvl(b.installation_date,a.production_date)
                                                production_date,
       Site_API.Get_Company(contract)           company,
       Translate_Boolean_API.Decode(Equipment_Object_API.Has_Structure__(contract,mch_code))
                                                has_structure,
       Equipment_Object_API.Has_Structure__(contract,mch_code) has_structure_db,
       Translate_Boolean_API.Decode(Equipment_Object_Conn_API.Has_Connection(contract,mch_code))
                                                has_connection,
       Equipment_Object_Conn_API.Has_Connection(contract,mch_code) has_connection_db,
       Client_SYS.Get_Key_Reference('EquipmentObject', 'EQUIPMENT_OBJECT_SEQ', equipment_object_seq)
                                                mch_code_key_value,
       type||chr(31)                            type_key_value,
       mch_serial_no                            serial_no,
       nvl(a.manufacturer_no,b.manufacturer_no) manufacturer_no,
       nvl(a.vendor_no, b.supplier_no)          vendor_no,
       nvl(a.part_rev, b.serial_revision)       part_rev,
       substr(Equipment_Main_Position_API.Decode(main_pos),1,20)
                                                equipment_main_position,
       a.type                                   type,
       a.mch_type                               mch_type,
       a.obj_level                              obj_level,
       a.group_id                               group_id,
       a.part_no                                part_no,
       a.cost_center                            cost_center,
       a.object_no                              object_no,
       a.category_id                            category_id,
       Equipment_Object_API.Get_Mch_Code(a.functional_object_seq)        sup_mch_code,
       Equipment_Object_API.Get_Contract(a.functional_object_seq)        sup_contract,
       a.rowid                                  objid,
       a.is_category_object                     is_category_object,
       a.criticality                            criticality,
       nvl(b.manufactured_date,a.manufactured_date)
                                                manufactured_date,
       nvl(Serial_Operational_Status_API.Decode(a.operational_status), substr(b.operational_status, 1, 200))
                                                operational_status,
       nvl(a.operational_status, Serial_Operational_Status_API.Encode(b.operational_status))
                                                operational_status_db,
       b.owning_customer_no                     owner,
       b.part_ownership_db                      ownership_db,
       Ownership_API.Decode(a.ownership)        ownership,
       null                                     insert_srv,
       Equipment_Object_API.Get_Mch_Code(a.location_object_seq)            location_mch_code,
       Equipment_Object_API.Get_Contract(a.location_object_seq)            location_contract,
       Equipment_Object_API.Get_Mch_Code(a.from_object_seq)                from_mch_code,
       Equipment_Object_API.Get_Contract(a.from_object_seq)                from_contract,
       Equipment_Object_API.Get_Mch_Code(a.to_object_seq)                  to_mch_code,
       Equipment_Object_API.Get_Contract(a.to_object_seq)                  to_contract,
       Equipment_Object_API.Get_Mch_Code(a.process_object_seq)             process_mch_code,
       Equipment_Object_API.Get_Contract(a.process_object_seq)             process_contract,
       Equipment_Object_API.Get_Mch_Code(a.pipe_object_seq)                pipe_mch_code,
       Equipment_Object_API.Get_Contract(a.pipe_object_seq)                pipe_contract,
       Equipment_Object_API.Get_Mch_Code(a.circuit_object_seq)             circuit_mch_code,
       Equipment_Object_API.Get_Contract(a.circuit_object_seq)             circuit_contract,
       a.functional_object_seq         functional_object_seq,
       a.location_object_seq           location_object_seq,
       a.from_object_seq               from_object_seq,
       a.to_object_seq                 to_object_seq,
       a.process_object_seq            process_object_seq,
       a.pipe_object_seq               pipe_object_seq,
       a.circuit_object_seq            circuit_object_seq,
       TO_CHAR(a.rowversion)  objversion,
       a.rowtype                       objtype,
       rowkey                          objkey,
       main_pos                      equipment_main_position_db
FROM   equipment_object_tab a, part_serial_catalog b
WHERE  a.part_no=b.part_no(+)
AND    a.mch_serial_no = b.serial_no(+)
AND    nvl(a.operational_status, b.operational_status_db) != 'SCRAPPED'
AND    nvl(b.objstate,'InFacility') IN ('InFacility', 'InRepairWorkshop', 'Contained','InInventory');

@DbViewRowLevelSecurity CustomImplemented
VIEW Equipment_All_Object_Lov IS
   Prompt = 'Equipment All Object'
   Contract.Flags = 'P---L'
   Mch_Code.Flags = 'K---L'
   Mch_Name.Flags = 'A---L'
   Obj_Level.Flags = 'A---L'
   Operational_Status.Flags = 'A---L'
   Operational_Status_Db.Flags = 'A---L'
SELECT equipment_object_seq           equipment_object_seq,
       contract                       contract,
       mch_code                       mch_code,
       mch_name                       mch_name,
       obj_level                      obj_level,
       operational_status             operational_status,
       operational_status_db          operational_status_db,
       objid                          objid,
       objversion                     objversion,
       objkey                        objkey
FROM   EQUIPMENT_ALL_OBJECT_UIV a;

@DbViewRowLevelSecurity CustomImplemented
VIEW Equipment_All_Object_Cc_Lov IS
   Prompt = 'Equipment All Object'
   Contract.Flags = 'P---L'
   Mch_Code.Flags = 'K---L'
   Mch_Name.Flags = 'A---L'
   Obj_Level.Flags = 'A---L'
   Mch_Type.Flags = 'A---L'
   Category_Id.Flags = 'A---L'
   Category_Id.Prompt = 'Category'
   sup_mch_code.Flags = 'A---L'   
   sup_contract.Flags = 'A---L'
   Operational_Status.Flags = 'A---L'
SELECT equipment_object_seq           equipment_object_seq,
       mch_code                       mch_code,
       contract                       contract,
       mch_name                       mch_name,
       obj_level                      obj_level,
       mch_type                       mch_type,
       category_id                    category_id,
       Equipment_Object_API.Get_Mch_Code(functional_object_seq)      sup_mch_code,
       Equipment_Object_API.Get_Contract(functional_object_seq)      sup_contract,
       operational_status             operational_status,
       operational_status_db          operational_status_db,
       objkey                        objkey
FROM   EQUIPMENT_ALL_OBJECT_UIV a;

@DbViewRowLevelSecurity CustomImplemented
VIEW Equipment_All_Object_Lov1 IS
   Prompt = 'Equipment All Object'
   Contract.Flags = 'P---L'
   Mch_Code.Flags = 'K---L'
   Mch_Name.Flags = 'A---L'
   Equipment_Main_Position.Flags = 'A---L'
   Equipment_Main_Position.Datatype = 'STRING(20)'
   Equipment_Main_Position.Prompt = 'Equipment Main Position'
   Obj_Level.Flags = 'A---L'
   Operational_Status.Flags = 'A---L'
   Operational_Status_Db.Flags = 'A----'
SELECT equipment_object_seq           equipment_object_seq,
       contract                       contract,
       mch_code                       mch_code,
       mch_name                       mch_name,
       equipment_main_position        equipment_main_position,
       obj_level                      obj_level,
       operational_status             operational_status,
       operational_status_db          operational_status_db,
       equipment_main_position_db     equipment_main_position_db,
       objid                          objid,
       objversion                     objversion,
       objkey                        objkey
FROM   EQUIPMENT_ALL_OBJECT_UIV a;

@SecurityCheck Site.UserAuthorized(a.contract)
VIEW Maintenance_Object IS
   Prompt = 'Equipment All Object'
   Contract.Ref = 'Site'
   Mch_Code.Flags = 'K-I-L'
   Mch_Name.Flags = 'AMIUL'
   Mch_Loc.Flags = 'A-IU-'
   Production_Date.Prompt = 'Production Date'
   Has_Structure.Enumeration = 'TranslateBoolean'
   Has_Structure.Ref = 'TranslateBoolean'
   Has_Connection.Enumeration = 'TranslateBoolean'
   Has_Connection.Ref = 'TranslateBoolean'
   Serial_No.Prompt = 'Serial No'
   Manufacturer_No.Ref = 'ManufacturerInfo'
   Vendor_No.Prompt = 'Supplier'
   Vendor_No.Ref = 'SupplierInfo'
   Equipment_Main_Position.Flags = 'AMIUL'
   Equipment_Main_Position.Prompt = 'Equipment Main Position'
   Equipment_Main_Position.Ref = 'EquipmentMainPosition'
   Type.Flags = 'A-IU-'
   Type.Prompt = 'Type Designation'
   Type.Ref = 'TypeDesignation'
   Mch_Type.Flags = 'A-IU-'
   Mch_Type.Ref = 'EquipmentObjType'
   Obj_Level.Flags = 'A-IUL'
   Obj_Level.Ref = 'EquipmentObjectLevel'
   Group_Id.Flags = 'A-IU-'
   Group_Id.Ref = 'EquipmentObjGroup'
   Object_No.Flags = 'A-IU-'
   Object_No.Prompt = 'Object No'
   Category_Id.Flags = 'A-IU-'
   Category_Id.Prompt = 'Category ID'
   Category_Id.Ref = 'EquipmentObjCategory'
   Sup_Mch_Code.Flags = 'A-IU-'
   Sup_Mch_Code.Prompt = 'Superior Object ID'
   Sup_Mch_Code.Ref = 'EquipmentObject(sup_contract)'
   Sup_Contract.Flags = 'A-IU-'
   Sup_Contract.Ref = 'Site'
   Criticality.Ref = 'EquipmentCriticality'
   Is_Category_Object.Flags = 'A---L'
   Is_Category_Object.Datatype = 'STRING(5)/UPPERCASE'
   Operational_Status.Flags = 'A-IUL'
   Operational_Status_Db.Flags = 'A----'
   Location_Mch_Code.Ref = 'EquipmentObject(location_contract)'
   Location_Contract.Ref = 'Site'
   From_Mch_Code.Ref = 'EquipmentObject(from_contract)'
   From_Contract.Ref = 'Site'
   To_Mch_Code.Ref = 'EquipmentObject(to_contract)'
   To_Contract.Ref = 'Site'
   Process_Mch_Code.Ref = 'EquipmentObject(process_contract)'
   Process_Contract.Ref = 'Site'
   Pipe_Mch_Code.Ref = 'EquipmentObject(pipe_contract)'
   Pipe_Contract.Ref = 'Site'
   Circuit_Mch_Code.Ref = 'EquipmentObject(circuit_contract)'
   Circuit_Contract.Ref = 'Site'
   has_structure_db.Flags = 'A----'
   has_structure_db.Prompt = 'Has Structure'
   has_structure_db.DataType = 'STRING(5)'
   has_connection_db.Flags = 'A----'
   has_connection_db.Prompt = 'Has Connection'
   has_connection_db.DataType = 'STRING(5)'
SELECT  a.equipment_object_seq          equipment_object_seq,
        a.contract                      contract,
        a.mch_code                      mch_code,
        a.mch_name                      mch_name,
        a.mch_loc                       mch_loc,
        a.mch_pos                       mch_pos,
        a.mch_doc                       mch_doc,
        a.purch_price                   purch_price,
        a.purch_date                    purch_date,
        nvl(a.warr_exp, b.warranty_expires) warr_exp,
        nvl(a.note, b.note_text)        note,
        a.info                          info,
        a.data                          data,
        a.production_date               production_date,
        Site_API.Get_Company(contract)  company,
        Translate_Boolean_API.Decode(Equipment_Object_API.Has_Structure__(contract, mch_code)) has_structure,
        Translate_Boolean_API.Decode(Equipment_Object_Conn_API.Has_Connection(contract, mch_code)) has_connection,
        Equipment_Object_API.Has_Structure__(contract, mch_code) has_structure_db,
        Equipment_Object_Conn_API.Has_Connection(contract, mch_code) has_connection_db,
        mch_code||chr(31)               mch_code_key_value,
        type||chr(31)                   type_key_value,
        mch_serial_no                   serial_no,
        nvl(a.manufacturer_no, b.manufacturer_no) manufacturer_no,
        nvl(a.vendor_no, b.supplier_no) vendor_no,
        nvl(a.part_rev, b.serial_revision) part_rev,
        Equipment_Main_Position_API.Decode(main_pos) equipment_main_position,
        main_pos                        equipment_main_position_db,
        a.type                          type,
        a.mch_type                      mch_type,
        a.obj_level                     obj_level,
        a.group_id                      group_id,
        a.part_no                       part_no,
        a.cost_center                   cost_center,
        a.object_no                     object_no,
        a.category_id                   category_id,
        Equipment_Object_API.Get_Contract(a.functional_object_seq)          sup_contract,
        Equipment_Object_API.Get_Mch_Code(a.functional_object_seq)          sup_mch_code,
        a.criticality                   criticality,
        a.is_category_object            is_category_object,
        b.latest_transaction            latest_transaction,
        Equipment_Object_API.Get_Mch_Code(a.location_object_seq)            location_mch_code,
        Equipment_Object_API.Get_Contract(a.location_object_seq)            location_contract,
        Equipment_Object_API.Get_Mch_Code(a.from_object_seq)                from_mch_code,
        Equipment_Object_API.Get_Contract(a.from_object_seq)                from_contract,
        Equipment_Object_API.Get_Mch_Code(a.to_object_seq)                  to_mch_code,
        Equipment_Object_API.Get_Contract(a.to_object_seq)                  to_contract,
        Equipment_Object_API.Get_Mch_Code(a.process_object_seq)             process_mch_code,
        Equipment_Object_API.Get_Contract(a.process_object_seq)             process_contract,
        Equipment_Object_API.Get_Mch_Code(a.pipe_object_seq)                pipe_mch_code,
        Equipment_Object_API.Get_Contract(a.pipe_object_seq)                pipe_contract,
        Equipment_Object_API.Get_Mch_Code(a.circuit_object_seq)             circuit_mch_code,
        Equipment_Object_API.Get_Contract(a.circuit_object_seq)             circuit_contract,
        a.functional_object_seq         functional_object_seq,
        a.location_object_seq              location_object_seq,
        a.from_object_seq                  from_object_seq,
        a.to_object_seq                    to_object_seq,
        a.process_object_seq               process_object_seq,
        a.pipe_object_seq                  pipe_object_seq,
        a.circuit_object_seq               circuit_object_seq,
        Equipment_Object_Level_API.Get_Create_Pm(a.obj_level)               create_pm,
        a.rowid                         objid,
        TO_CHAR(a.rowversion) objversion,
        nvl(Serial_Operational_Status_API.Decode(a.operational_status), b.operational_status) operational_status,
        nvl(a.operational_status, b.operational_status_db) operational_status_db,
        rowkey                   objkey,
        a.rowtype                  objtype
FROM   equipment_object_tab a, part_serial_catalog b
WHERE  a.part_no = b.part_no(+)
AND    a.mch_serial_no = b.serial_no(+);

@DbViewRowLevelSecurity CustomImplemented
VIEW Maint_Object_Lov IS
   Prompt = 'Equipment All Objects'
   Mch_Code.Flags = 'K-I-L'
   Mch_Name.Flags = 'AMIUL'
   Obj_Level.Flags = 'A-IUL'
   Operational_Status.Flags = 'A-IUL'
   Operational_Status_Db.Flags = 'A----'
SELECT   equipment_object_seq         equipment_object_seq,
         contract                     contract,
         mch_code                     mch_code,
         mch_name                     mch_name,
         obj_level                    obj_level,         
         NULL                         latest_transaction,
         Serial_Operational_Status_API.Decode(operational_status)        operational_status,
         operational_status           operational_status_db
FROM  Equipment_Object_Tab
WHERE contract IN (SELECT contract FROM User_Allowed_Site_Lov)
AND   obj_level IS NOT NULL
UNION ALL
SELECT  equ_tab.equipment_object_seq equipment_object_seq,
        equ_tab.contract           contract,
         equ_tab.mch_code                 mch_code,
         b.description                  mch_name,
         NULL                           obj_level,
         a.latest_transaction           latest_transaction,
         Serial_Operational_Status_API.Decode(a.operational_status)        operational_status,
         a.operational_status           operational_status_db
FROM  Part_Serial_Catalog_Tab a, Part_Catalog_Tab b, Equipment_Object_Tab equ_tab
WHERE a.part_no = b.part_no
AND a.part_no = equ_tab.part_no
AND a.serial_no = equ_tab.mch_serial_no
AND   equ_tab.contract IN (SELECT contract FROM User_Allowed_Site_Lov);

@SecurityCheck Site.UserAuthorized(a.contract)
VIEW Maintenance_Object_Lov1 IS
   Prompt = 'Equipment All Object'
   Mch_Code.Flags = 'K-I-L'
   Mch_Name.Flags = 'AMIUL'
   Equipment_Main_Position.Flags = 'AMIUL'
   Equipment_Main_Position.Datatype = 'STRING(20)'
   Equipment_Main_Position.Prompt = 'Equipment Main Position'
   Obj_Level.Flags = 'A-IUL'
   Is_Category_Object.Flags = 'A---L'
   Is_Category_Object.Datatype = 'STRING(5)/UPPERCASE'
   Operational_Status.Flags = 'A-IUL'
SELECT  a.equipment_object_seq         equipment_object_seq,
        a.contract                                                   mch_code_contract,
        a.mch_code                                                   mch_code,
        a.mch_name                                                   mch_name,
        Equipment_Main_Position_API.Decode(main_pos)                 equipment_main_position,
        a.obj_level                                                  obj_level,
        a.is_category_object                                         is_category_object,
        b.latest_transaction                                         latest_transaction,
        nvl(Serial_Operational_Status_API.Decode(a.operational_status), Part_Serial_Catalog_API.Get_Operational_Status(a.part_no, a.mch_serial_no)) operational_status,
        a.rowid                                                      objid,
        TO_CHAR(a.rowversion)                      objversion,
        rowkey                                                      objkey
FROM   equipment_object_tab a, part_serial_catalog b
WHERE  a.part_no = b.part_no(+)
AND    a.mch_serial_no = b.serial_no(+);

@SecurityCheck Site.UserAuthorized(a.contract)
VIEW Maintenance_Object_Lov2 IS
   Prompt = 'Equipment All Object'
   Contract.Prompt = 'Site'
   Mch_Code.Flags = 'K-I-L'
   Mch_Name.Flags = 'AMIUL'
   Obj_Level.Flags = 'A-IUL'
   Equipment_Main_Position.Flags = 'A-IUL'
   Equipment_Main_Position.Datatype = 'STRING(20)'
   Equipment_Main_Position.Prompt = 'Equipment Main Position'
SELECT  a.equipment_object_seq         equipment_object_seq,
        a.contract                      contract,
        a.mch_code                      mch_code,
        a.mch_name                      mch_name,
        a.obj_level                     obj_level,
        Equipment_Main_Position_API.Decode(main_pos) equipment_main_position,
        b.latest_transaction            latest_transaction,
        c.party_type                    object_party_type,
        c.identity                      identity,
        a.rowkey                        objkey
FROM   equipment_object_tab a, part_serial_catalog b, equipment_object_party_tab c
WHERE  a.part_no = b.part_no(+)
AND    a.mch_serial_no = b.serial_no(+)
AND    a.equipment_object_seq = c.equipment_object_seq
AND    c.party_type = 'CONTRACTOR'
AND    c.identity = Fnd_User_API.Get_Property(Fnd_Session_API.Get_Fnd_User, 'CONTRACTOR_ID');

@SecurityCheck Site.UserAuthorized(a.contract)
VIEW Maintenance_Object_Lov3 IS
   Prompt = 'Equipment All Object'
   Mch_Code.Flags = 'K-I-L'
   Contract.Flags = 'A-I-L'
   Mch_Name.Flags = 'AMIUL'
   Mch_Loc.Flags = 'A-IU-'
   Production_Date.Prompt = 'Production Date'
   Has_Structure.Enumeration = 'TranslateBoolean'
   Has_Structure.Ref = 'TranslateBoolean'
   Has_Connection.Enumeration = 'TranslateBoolean'
   Has_Connection.Ref = 'TranslateBoolean'
   Serial_No.Prompt = 'Serial No'
   Manufacturer_No.Ref = 'ManufacturerInfo'
   Vendor_No.Prompt = 'Supplier'
   Vendor_No.Ref = 'SupplierInfo'
   Equipment_Main_Position.Flags = 'AMIUL'
   Equipment_Main_Position.Prompt = 'Equipment Main Position'
   Type.Flags = 'A-IU-'
   Type.Prompt = 'Type Designation'
   Mch_Type.Flags = 'A-IU-'
   Obj_Level.Flags = 'A-IUL'
   Group_Id.Flags = 'A-IU-'
   Object_No.Flags = 'A-IU-'
   Object_No.Prompt = 'Object No'
   Category_Id.Flags = 'A-IU-'
   Category_Id.Prompt = 'Category ID'
   Sup_Mch_Code.Flags = 'A-IU-'
   Sup_Mch_Code.Prompt = 'Superior Object ID'
   Sup_Contract.Flags = 'A-IU-'
   Criticality.Ref = 'EquipmentCriticality'
   Is_Category_Object.Flags = 'A---L'
   Is_Category_Object.Datatype = 'STRING(5)/UPPERCASE'
   Operational_Status.Flags = 'A-IUL'
   Operational_Status_Db.Flags = 'A----'
SELECT  a.equipment_object_seq          equipment_object_seq,
        a.mch_code                      mch_code,
        a.contract                      contract,
        a.mch_name                      mch_name,
        a.mch_loc                       mch_loc,
        a.mch_pos                       mch_pos,
        a.mch_doc                       mch_doc,
        a.purch_price                   purch_price,
        a.purch_date                    purch_date,
        nvl(a.warr_exp, b.warranty_expires) warr_exp,
        nvl(a.note, b.note_text)        note,
        a.info                          info,
        a.data                          data,
        a.production_date               production_date,
        Site_API.Get_Company(contract)  company,
        Translate_Boolean_API.Decode(Equipment_Object_API.Has_Structure__(contract, mch_code)) has_structure,
        Translate_Boolean_API.Decode(Equipment_Object_Conn_API.Has_Connection(contract, mch_code)) has_connection,
        mch_code||chr(31)               mch_code_key_value,
        type||chr(31)                   type_key_value,
        mch_serial_no                   serial_no,
        nvl(a.manufacturer_no, b.manufacturer_no) manufacturer_no,
        nvl(a.vendor_no, b.supplier_no) vendor_no,
        nvl(a.part_rev, b.serial_revision) part_rev,
        Equipment_Main_Position_API.Decode(main_pos) equipment_main_position,
        a.type                          type,
        a.mch_type                      mch_type,
        a.obj_level                     obj_level,
        a.group_id                      group_id,
        a.part_no                       part_no,
        a.cost_center                   cost_center,
        a.object_no                     object_no,
        a.category_id                   category_id,
        Equipment_Object_API.Get_Contract(a.functional_object_seq)       sup_contract,
        Equipment_Object_API.Get_Mch_Code(a.functional_object_seq)       sup_mch_code,
        a.criticality                   criticality,
        a.is_category_object            is_category_object,
        b.latest_transaction            latest_transaction,
        a.rowid                         objid,
        TO_CHAR(a.rowversion) objversion,
        nvl(Serial_Operational_Status_API.Decode(a.operational_status), Part_Serial_Catalog_API.Get_Operational_Status(a.part_no, a.mch_serial_no)) operational_status,
        nvl(a.operational_status, Part_Serial_Catalog_API.Get_Operational_Status_db(a.part_no, a.mch_serial_no)) operational_status_db,
        rowkey                   objkey
FROM   equipment_object_tab a, part_serial_catalog b
WHERE  a.part_no = b.part_no(+)
AND    a.mch_serial_no = b.serial_no(+);
 
 
@SecurityCheck Site.UserAuthorized(eqo.contract)
 VIEW Maintenance_Object_Addr_Lov IS
   Prompt = 'Maintenance Object Address'
   Mch_Code.Flags = 'K-I-L'
   sup_mch_code.Flags = 'A---L'
   sup_contract.Flags = 'A---L'
   location_id.Flags = 'A---L'
   location_description.Flags = 'A---L'
   location_description.Prompt = 'Description'
   location_description.DataType = 'STRING(200)'
   loc_party_type.Prompt = 'Location Party Type'
   loc_party_type.Flags = 'A---L'
   loc_party_type.DataType = 'STRING(200)'
   identity.Flags = 'A---L'
   primary_address.Flags = 'A---L'
   primary_address.DataType = 'STRING(5)'
   Address_Id.Flags = 'A---L'
   Address_Id.DataType = 'STRING(50)'
   Address1.Flags = 'A-I-L'
   Address1.DataType = 'STRING(35)'
   Address2.Flags = 'A---L'
   Address2.DataType = 'STRING(35)'
   Zip_Code.Flags = 'A---L'
   Zip_Code.DataType = 'STRING(35)'
   City.Flags = 'A---L'
   City.DataType = 'STRING(35)'
   State.Flags = 'A---L'
   State.DataType = 'STRING(35)'
   county.Flags = 'A---L'
   county.DataType = 'STRING(35)'
   Country.Flags = 'A---L'
   Country.Datatype = 'STRING(1000)/UPPERCASE'
   Country_Code.Flags = 'A---L'
   Country_Code.DataType = 'STRING(2)'
   Country_Code.Prompt = 'Country Code'
   Address3.Flags = 'A---L'
   Address3.DataType = 'STRING(100)'
   Address4.Flags = 'A---L'
   Address4.DataType = 'STRING(100)'
   Address5.Flags = 'A---L'
   Address5.DataType = 'STRING(100)'
   Address6.Flags = 'A---L'
   Address6.DataType = 'STRING(100)'
   valid_from.Flags   = 'A---L'
   valid_from.Datatype = 'DATE/DATE'
   valid_to.Flags   = 'A---L'
   valid_to.Datatype = 'DATE/DATE'
   Contact.Flags  = 'A---L'
   Contact.DataType = 'STRING(100)'
   Phone_no.Flags = 'A---L'
   Phone_no.DataType = 'STRING(200)'
   E_mail.Flags   = 'A---L'
   E_mail.Prompt  = 'E-mail'
   E_mail.DataType = 'STRING(100)'
   operational_status.Flags   = 'A---L'
   operational_status_db.Flags   = 'A----'   
   Address_Info_Id.Flags = 'A---L'
   Address_Info_Id.Prompt = 'Address Info ID'
   Address_Info_Id.DataType = 'NUMBER'
   Obj_Level.Flags = 'A-IUL'
   Obj_Level.Prompt = 'Object Level'
SELECT eqo.equipment_object_seq         equipment_object_seq,
      eqo.mch_code                      mch_code,
      eqo.mch_name                      mch_name,
      eqo.contract                      mch_code_contract,
      eqo.contract                      contract,
      eqo.obj_level                     obj_level,
      Equipment_Object_API.Get_Mch_Code(eqo.functional_object_seq)      sup_mch_code,
      Equipment_Object_API.Get_Contract(eqo.functional_object_seq)      sup_contract,
      p.latest_transaction              latest_transaction,
      Serial_Operational_Status_API.Decode(NVL(eqo.operational_status, p.operational_status))            operational_status,
      NVL(eqo.operational_status, p.operational_status)                                                  operational_status_db,
      eqo.location_id                   location_id,
      Location_API.Get_Name(eqo.location_id) location_description,      
      NULL                              party_type,
      NULL                              loc_party_type,
      NULL                              identity,
      NULL                              address_id,
      NULL                              primary_address,
      NULL                              address1,
      NULL                              address2,
      NULL                              zip_code,
      NULL                              city,
      NULL                              state,
      NULL                              county,
      NULL                              country,
      NULL                              country_code,
      NULL                              address3,
      NULL                              address4,
      NULL                              address5,
      NULL                              address6,
      to_date(NULL)                     valid_from,
      to_date(NULL)                     valid_to,
      NULL                              contact,
      NULL                              phone_no,
      NULL                              e_mail,
      DECODE(eqo.is_category_object, 'TRUE', 'CATEGORY', 'EQUIPMENT') connection_type,
      eqo.category_id                   category_id,
      eqo.mch_serial_no                 serial_no,
      eqo.part_no                       part_no,
      eqo.mch_type                      mch_type,
      to_number(NULL)                   address_info_id,
      'FALSE'                           has_visit_add,
      eqo.rowid                         objid,
      to_char(eqo.rowversion)           objversion,
      eqo.rowkey                        objkey
FROM  equipment_object_tab eqo, part_serial_catalog_pub p
WHERE (eqo.location_id IS NULL OR 1 NOT IN (SELECT 1 FROM Location_Party_Address_Tab a 
                                             WHERE a.location_id = eqo.location_id
                                               AND a.visit_address = 'TRUE'))
AND   eqo.part_no             = p.part_no(+)
AND   eqo.mch_serial_no       = p.serial_no(+)
UNION ALL
SELECT
      eqo.equipment_object_seq          equipment_object_seq,
      eqo.mch_code                      mch_code,
      eqo.mch_name                      mch_name,
      eqo.contract                      mch_code_contract,
      eqo.contract                      contract,
      eqo.obj_level                     obj_level,
      Equipment_Object_API.Get_Mch_Code(eqo.functional_object_seq)      sup_mch_code,
      Equipment_Object_API.Get_Contract(eqo.functional_object_seq)      sup_contract,
      p.latest_transaction              latest_transaction,
      Serial_Operational_Status_API.Decode(NVL(eqo.operational_status, p.operational_status))            operational_status,
      NVL(eqo.operational_status, p.operational_status)                                                  operational_status_db,
      eqo.location_id                   location_id,
      Location_API.Get_Name(eqo.location_id) location_description,      
      lpa.party_type                    party_type,
      Location_Party_Type_API.Decode(lpa.party_type) loc_party_type,
      lpa.identity                      identity,
      lpa.address_id                    address_id,
      lpa.primary_address               primary_address,
      lpa.address1                      address1,
      lpa.address2                      address2,
      lpa.zip_code                      zip_code,
      lpa.city                          city,
      lpa.state                         state,
      lpa.county                        county,
      Iso_Country_API.Decode(lpa.country_code) country,
      lpa.country_code                  country_code,
      lpa.address3                      address3,
      lpa.address4                      address4,
      lpa.address5                      address5,
      lpa.address6                      address6,
      lpa.valid_from                    valid_from,
      lpa.valid_to                      valid_to,
      lpa.contact                       contact,
      lpa.phone_no                      phone_no,
      lpa.e_mail                        e_mail,
      DECODE(eqo.is_category_object, 'TRUE', 'CATEGORY', 'EQUIPMENT') connection_type,
      eqo.category_id                   category_id,
      eqo.mch_serial_no                 serial_no,
      eqo.part_no                       part_no,
      eqo.mch_type                      mch_type,
      lpa.address_info_id               address_info_id,
      'TRUE'                            has_visit_add,
      eqo.rowid                         objid,
      to_char(eqo.rowversion)           objversion,
      eqo.rowkey                        objkey
FROM  equipment_object_tab eqo, Location_Party_Address_Tab lpa, part_serial_catalog_pub p
WHERE eqo.location_id         = lpa.location_id
AND   lpa.visit_address       = 'TRUE'
AND   lpa.location_specific_address = 'TRUE' 
AND   eqo.part_no             = p.part_no(+)
AND   eqo.mch_serial_no       = p.serial_no(+)
UNION ALL
SELECT
      eqo.equipment_object_seq          equipment_object_seq,
      eqo.mch_code                      mch_code,
      eqo.mch_name                      mch_name,
      eqo.contract                      mch_code_contract,
      eqo.contract                      contract,
      eqo.obj_level                     obj_level,
      Equipment_Object_API.Get_Mch_Code(eqo.functional_object_seq)      sup_mch_code,
      Equipment_Object_API.Get_Contract(eqo.functional_object_seq)      sup_contract,
      p.latest_transaction              latest_transaction,
      Serial_Operational_Status_API.Decode(NVL(eqo.operational_status, p.operational_status))            operational_status,
      NVL(eqo.operational_status, p.operational_status)                                                  operational_status_db,
      eqo.location_id                   location_id,
      Location_API.Get_Name(eqo.location_id) location_description,      
      lpa.party_type                    party_type,
      Location_Party_Type_API.Decode(lpa.party_type) loc_party_type,
      lpa.identity                      identity,
      lpa.address_id                    address_id,
      lpa.primary_address               primary_address,
      c.address1                        address1,
      c.address2                        address2,
      c.zip_code                        zip_code,
      c.city                            city,
      c.state                           state,
      c.county                          county,
      Iso_Country_API.Decode(c.country) country,
      c.country                         country_code,
      c.address3                        address3,
      c.address4                        address4,
      c.address5                        address5,
      c.address6                        address6,
      c.valid_from                      valid_from,
      c.valid_to                        valid_to,
      lpa.contact                       contact,
      lpa.phone_no                      phone_no,
      lpa.e_mail                        e_mail,
      DECODE(eqo.is_category_object, 'TRUE', 'CATEGORY', 'EQUIPMENT') connection_type,
      eqo.category_id                   category_id,
      eqo.mch_serial_no                 serial_no,
      eqo.part_no                       part_no,
      eqo.mch_type                      mch_type,
      lpa.address_info_id               address_info_id,
      Location_Party_Address_API.Has_Visit_Add_For_Location(eqo.location_id, lpa.address_info_id)   has_visit_add,
      eqo.rowid                         objid,
      to_char(eqo.rowversion)           objversion,
      eqo.rowkey                        objkey
FROM  equipment_object_tab eqo, Location_Party_Address_Tab lpa, part_serial_catalog_pub p, Customer_Info_Address c
WHERE eqo.location_id         = lpa.location_id
AND   lpa.visit_address       = 'TRUE'
AND   lpa.location_specific_address = 'FALSE' 
AND   eqo.part_no             = p.part_no(+)
AND   eqo.mch_serial_no       = p.serial_no(+)
AND   lpa.identity            = c.customer_id
AND   lpa.address_id          = c.address_id;


VIEW Country_Code_Lov IS
   Prompt = 'Country Codes'
SELECT country_code                 country_code,
       description                  description,
       Objkey                       objkey
FROM   Iso_Country;      



VIEW Equip_Functional_Rcm_Lov IS
   Prompt = 'Equipment Functional RCM'
   item_class_id.Flags = 'A---L'
   item_class_id.Prompt = 'Item Class ID'
   item_class_desc.Flags = 'A---L'
   item_class_desc.Prompt = 'Item Class Description'
   item_class_desc.DataType = 'STRING'
   Process_Class_id.Flags = 'A---L'
   Process_Class_id.Prompt = 'Process Class ID'
   SELECT   item_class_id                    item_class_id,
            Item_Class_API.Get_Item_Class_Desc(item_class_id)      item_class_desc,
            Process_Class_id                 process_class_id
   FROM     equipment_object_tab
   WHERE    item_class_id IS NOT NULL
   GROUP by Process_Class_id,item_class_id
   UNION 
   SELECT   item_class_id                    item_class_id,
            Item_Class_API.Get_Item_Class_Desc(item_class_id)      item_class_desc,
            Process_Class_id                 process_class_id
   FROM     Resource_Tool_Equip_Join
   WHERE    item_class_id IS NOT NULL
   GROUP by Process_Class_id,item_class_id
$IF Component_Linast_SYS.INSTALLED $THEN
   UNION 
   SELECT   item_class_id                    item_class_id,
            Item_Class_API.Get_Item_Class_Desc(item_class_id)      item_class_desc,
            Process_Class_id                 process_class_id
   FROM     LINAST_LINEAR_ASSET_Tab
   WHERE    item_class_id IS NOT NULL
   GROUP by Process_Class_id,item_class_id
$END
;


VIEW Rcm_Analysis_Con_Objs IS
   Prompt = 'Rcm Analysis Connected Objects'
   Process_Class_id.Flags = 'PMI--'
   item_class_id.Flags = 'PMI--'
   object_id.Flags = 'A----'
   object_id.Datatype   = 'STRING(100)'
   equipment_object_seq.Flags = 'A----'
   equipment_object_seq.Datatype = 'NUMBER'
   object_name.Falgs = 'A----'
   object_name.Datatype   = 'STRING(200)'
   contract.Flags = 'A----'
   contract.Datatype   = 'STRING(5)'
   connection_type.Falgs = 'A----'
   connection_type.Datatype   = 'STRING(50)'
   connection_type_db.Flags = 'A----'
   connection_type_db.Datatype = 'STRING(10)'   
   linear_asset_seq.Flags = 'A----'
   linear_asset_seq.Datatype = 'NUMBER'
   linear_asset_rev_no.Flags = 'A----'
   linear_asset_rev_no.Datatype = 'NUMBER'
   resource_seq.Flags = 'A----'
   resource_seq.Datatype = 'NUMBER'
   SELECT   
            process_class_id                           process_class_id,
            item_class_id                              item_class_id,
            equipment_object_seq                       equipment_object_seq,
            mch_code                                   object_id,
            mch_name                                   object_name,
            contract                                   contract,
            EQUIPMENT_OBJECT_API.Decode_Maint_Conn('EQUIPMENT')  Connection_Type,
            'EQUIPMENT'                                Connection_Type_db,
            NULL                                       resource_seq,
            NULL                                       linear_asset_seq,
            NULL                                       linear_asset_rev_no,
            EQUIPMENT_OBJECT_API.Decode_Maint_Conn('EQUIPMENT')||rowid  objid,
            TO_CHAR(rowversion)     objversion
   FROM     equipment_object_tab
   WHERE    item_class_id IS NOT NULL
            AND process_class_id IS NOT NULL
            AND  EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE site = contract)
   UNION
   SELECT   
            process_class_id                           process_class_id,
            item_class_id                              item_class_id,
            NULL                                       equipment_object_seq,
            resource_id                                object_id,
            description                                object_name,
            NULL                                       contract,
            EQUIPMENT_OBJECT_API.Decode_Maint_Conn('TOOLEQ')   connection_type,
           'TOOLEQ'                                     Connection_Type_db, 
            resource_seq                                resource_seq,
            NULL                                        linear_asset_seq,
            NULL                                        linear_asset_rev_no,
            EQUIPMENT_OBJECT_API.Decode_Maint_Conn('TOOLEQ')||rowid      objid,
            objversion                                objversion
   FROM     Resource_Tool_Equip_Join
   WHERE    item_class_id IS NOT NULL
            AND process_class_id IS NOT NULL
$IF Component_Linast_SYS.INSTALLED $THEN          
   UNION
   SELECT   
            la.process_class_id                          process_class_id,
            la.item_class_id                             item_class_id,
            NULL                                         equipment_object_seq,
            la.linear_asset_name                         object_id,
            la.description                               object_name,
            la.site                                      contract,
            EQUIPMENT_OBJECT_API.Decode_Maint_Conn('LINAST')  Connection_Type,
            'LINAST'                                    Connection_Type_db,
            NULL                                         resource_seq,
            linear_asset_sq                              linear_asset_seq,
            linear_asset_revision_no                     linear_asset_rev_no,
            EQUIPMENT_OBJECT_API.Decode_Maint_Conn('LINAST')||la.rowid   objid,
            TO_CHAR(la.rowversion)     objversion
   FROM     LINAST_LINEAR_ASSET_Tab la
   WHERE    la.item_class_id IS NOT NULL
            AND la.process_class_id IS NOT NULL 
            AND  EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE site = la.site)
$END
;

-- View Object_Counts and Object_Counts_View2 were created for the sumery page to use in equipment object navigator in aurena.
VIEW Object_Counts IS
   Prompt = 'Object Counts'
   obj_count.Flags = 'A---L'
   obj_count.Prompt = 'Object Count'
   obj_count.Datatype = 'STRING(10)'
   one_obj_count.Prompt = 'Count'
   one_obj_count.Datatype = 'NUMBER'
   all_count.Prompt = 'All Count'
   all_count.Datatype = 'NUMBER'
   mch_code.Flags = 'K---L'
   mch_code.Prompt = 'Object'
   contract.Flags = 'K---L'
   contract.Prompt = 'Site'
   display_text.Flags = 'A---L'
   display_text.Prompt = 'Display Text'
   connected_lu.Flags = 'K----'
   tree_structure.Flags = 'K----'
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '1EquipmentObject'          connected_lu,
            'F'                            tree_structure,
            to_number(Equipment_Object_API.Get_Obj_Count(equipment_object_seq, 'F'))   one_obj_count,
            0                                                                   all_count,
            Equipment_Object_API.Get_Obj_Count(equipment_object_seq, 'F')              obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'OBJCETCOUNT: Objects')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'ObjectCount'||ROWID        objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM     equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '1EquipmentObject'          connected_lu,
            'L'                            tree_structure,
            to_number(Equipment_Object_API.Get_Obj_Count(equipment_object_seq, 'L'))   one_obj_count,
            0                                                                   all_count,
            Equipment_Object_API.Get_Obj_Count(equipment_object_seq, 'L')              obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'OBJCETCOUNT: Objects')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'ObjectCount'||ROWID        objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM     equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '1EquipmentObject'          connected_lu,
            'R'                            tree_structure,
            to_number(Equipment_Object_API.Get_Obj_Count(equipment_object_seq, 'R'))   one_obj_count,
            0                                                                   all_count,
            Equipment_Object_API.Get_Obj_Count(equipment_object_seq, 'R')              obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'OBJCETCOUNT: Objects')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'ObjectCount'||ROWID        objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM     equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '1EquipmentObject'          connected_lu,
            'T'                            tree_structure,
            to_number(Equipment_Object_API.Get_Obj_Count(equipment_object_seq, 'T'))   one_obj_count,
            0                                                                   all_count,
            Equipment_Object_API.Get_Obj_Count(equipment_object_seq, 'T')              obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'OBJCETCOUNT: Objects')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'ObjectCount'||ROWID        objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM     equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '1EquipmentObject'          connected_lu,
            'P'                            tree_structure,
            to_number(Equipment_Object_API.Get_Obj_Count(equipment_object_seq, 'P'))   one_obj_count,
            0                                                                   all_count,
            Equipment_Object_API.Get_Obj_Count(equipment_object_seq, 'P')              obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'OBJCETCOUNT: Objects')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'ObjectCount'||ROWID        objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM     equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '1EquipmentObject'          connected_lu,
            'S'                            tree_structure,
            to_number(Equipment_Object_API.Get_Obj_Count(equipment_object_seq, 'S'))   one_obj_count,
            0                                                                   all_count,
            Equipment_Object_API.Get_Obj_Count(equipment_object_seq, 'S')              obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'OBJCETCOUNT: Objects')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'ObjectCount'||ROWID        objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM     equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '1EquipmentObject'          connected_lu,
            'E'                            tree_structure, 
            to_number(Equipment_Object_API.Get_Obj_Count(equipment_object_seq, 'E'))   one_obj_count,
            0                                                                       all_count,
            Equipment_Object_API.Get_Obj_Count(equipment_object_seq, 'E')              obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'OBJCETCOUNT: Objects')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'ObjectCount'||ROWID        objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM     equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '2EquipmentObject'          connected_lu,
            'F'                            tree_structure, 
            to_number(Equipment_Object_API.Get_All_Obj_Count(equipment_object_seq, 'F'))   one_obj_count,
            0                                                                       all_count,
            Equipment_Object_API.Get_All_Obj_Count(equipment_object_seq, 'F')              obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'ALLOBJCETCOUNT: All Objects')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'ObjectCount'||ROWID        objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM     equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '2EquipmentObject'          connected_lu,
            'L'                            tree_structure, 
            to_number(Equipment_Object_API.Get_All_Obj_Count(equipment_object_seq, 'L'))   one_obj_count,
            0                                                                       all_count,
            Equipment_Object_API.Get_All_Obj_Count(equipment_object_seq, 'L')              obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'ALLOBJCETCOUNT: All Objects')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'ObjectCount'||ROWID        objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM     equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '2EquipmentObject'          connected_lu,
            'R'                            tree_structure, 
            to_number(Equipment_Object_API.Get_All_Obj_Count(equipment_object_seq, 'R'))   one_obj_count,
            0                                                                       all_count,
            Equipment_Object_API.Get_All_Obj_Count(equipment_object_seq, 'R')              obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'ALLOBJCETCOUNT: All Objects')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'ObjectCount'||ROWID        objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM     equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '2EquipmentObject'          connected_lu,
            'T'                            tree_structure, 
            to_number(Equipment_Object_API.Get_All_Obj_Count(equipment_object_seq, 'T'))   one_obj_count,
            0                                                                       all_count,
            Equipment_Object_API.Get_All_Obj_Count(equipment_object_seq, 'T')              obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'ALLOBJCETCOUNT: All Objects')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'ObjectCount'||ROWID        objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM     equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '2EquipmentObject'          connected_lu,
            'P'                            tree_structure, 
            to_number(Equipment_Object_API.Get_All_Obj_Count(equipment_object_seq, 'P'))   one_obj_count,
            0                                                                       all_count,
            Equipment_Object_API.Get_All_Obj_Count(equipment_object_seq, 'P')              obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'ALLOBJCETCOUNT: All Objects')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'ObjectCount'||ROWID        objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM     equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '2EquipmentObject'          connected_lu,
            'S'                            tree_structure, 
            to_number(Equipment_Object_API.Get_All_Obj_Count(equipment_object_seq, 'S'))   one_obj_count,
            0                                                                       all_count,
            Equipment_Object_API.Get_All_Obj_Count(equipment_object_seq, 'S')              obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'ALLOBJCETCOUNT: All Objects')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'ObjectCount'||ROWID        objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM     equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '2EquipmentObject'          connected_lu,
            'E'                            tree_structure, 
            to_number(Equipment_Object_API.Get_All_Obj_Count(equipment_object_seq, 'E'))   one_obj_count,
            0                                                                       all_count,
            Equipment_Object_API.Get_All_Obj_Count(equipment_object_seq, 'E')              obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'ALLOBJCETCOUNT: All Objects')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'ObjectCount'||ROWID        objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM     equipment_object_tab
$IF Component_Pm_SYS.INSTALLED $THEN  
UNION 
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '2PmAction'                 connected_lu,
            'F'                            tree_structure,
            to_number(Pm_Action_Util_API.Get_Pm_Count(equipment_object_seq))       one_obj_count,
            to_number(Pm_Action_Util_API.Get_All_Pm_Count(equipment_object_seq, 'F'))   all_count,
            Pm_Action_Util_API.Get_Pm_Count(equipment_object_seq)||' ('||Pm_Action_Util_API.Get_All_Pm_Count(equipment_object_seq, 'F')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'PMCOUNT: PM Action')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'PmCount'||ROWID            objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION 
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '2PmAction'                 connected_lu,
            'L'                            tree_structure,
            to_number(Pm_Action_Util_API.Get_Pm_Count(equipment_object_seq))       one_obj_count,
            to_number(Pm_Action_Util_API.Get_All_Pm_Count(equipment_object_seq, 'L'))   all_count,
            Pm_Action_Util_API.Get_Pm_Count(equipment_object_seq)||' ('||Pm_Action_Util_API.Get_All_Pm_Count(equipment_object_seq, 'L')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'PMCOUNT: PM Action')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'PmCount'||ROWID            objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION 
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '2PmAction'                 connected_lu,
            'R'                            tree_structure,
            to_number(Pm_Action_Util_API.Get_Pm_Count(equipment_object_seq))       one_obj_count,
            to_number(Pm_Action_Util_API.Get_All_Pm_Count(equipment_object_seq, 'R'))   all_count,
            Pm_Action_Util_API.Get_Pm_Count(equipment_object_seq)||' ('||Pm_Action_Util_API.Get_All_Pm_Count(equipment_object_seq, 'R')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'PMCOUNT: PM Action')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'PmCount'||ROWID            objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION 
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '2PmAction'                 connected_lu,
            'T'                            tree_structure,
            to_number(Pm_Action_Util_API.Get_Pm_Count(equipment_object_seq))       one_obj_count,
            to_number(Pm_Action_Util_API.Get_All_Pm_Count(equipment_object_seq, 'T'))   all_count,
            Pm_Action_Util_API.Get_Pm_Count(equipment_object_seq)||' ('||Pm_Action_Util_API.Get_All_Pm_Count(equipment_object_seq, 'T')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'PMCOUNT: PM Action')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'PmCount'||ROWID            objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION 
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '2PmAction'                 connected_lu,
            'P'                            tree_structure,
            to_number(Pm_Action_Util_API.Get_Pm_Count(equipment_object_seq))       one_obj_count,
            to_number(Pm_Action_Util_API.Get_All_Pm_Count(equipment_object_seq, 'P'))   all_count,
            Pm_Action_Util_API.Get_Pm_Count(equipment_object_seq)||' ('||Pm_Action_Util_API.Get_All_Pm_Count(equipment_object_seq, 'P')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'PMCOUNT: PM Action')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'PmCount'||ROWID            objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION 
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '2PmAction'                 connected_lu,
            'S'                            tree_structure,
            to_number(Pm_Action_Util_API.Get_Pm_Count(equipment_object_seq))       one_obj_count,
            to_number(Pm_Action_Util_API.Get_All_Pm_Count(equipment_object_seq, 'S'))   all_count,
            Pm_Action_Util_API.Get_Pm_Count(equipment_object_seq)||' ('||Pm_Action_Util_API.Get_All_Pm_Count(equipment_object_seq, 'S')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'PMCOUNT: PM Action')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'PmCount'||ROWID            objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION 
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '2PmAction'                 connected_lu,
            'E'                            tree_structure,
            to_number(Pm_Action_Util_API.Get_Pm_Count(equipment_object_seq))       one_obj_count,
            to_number(Pm_Action_Util_API.Get_All_Pm_Count(equipment_object_seq, 'E'))   all_count,
            Pm_Action_Util_API.Get_Pm_Count(equipment_object_seq)||' ('||Pm_Action_Util_API.Get_All_Pm_Count(equipment_object_seq, 'E')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'PMCOUNT: PM Action')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'PmCount'||ROWID            objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION 
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '3PmAction'                 connected_lu,
            'AllType'                   tree_structure,
            to_number(Pm_Action_Util_API.Get_Cal_Plan_Count(equipment_object_seq))  one_obj_count,
            0                                                                     all_count,
            Pm_Action_Util_API.Get_Cal_Plan_Count(equipment_object_seq)             obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'MAINTPLAN: Maintenance Plan')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'MaintPlanCount'||ROWID     objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
$END
$IF Component_PCMSCI_SYS.INSTALLED $THEN 
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '92WorkOrder'               connected_lu,
            'F'                         tree_structure,
            to_number(psc_contr_product_scope_api.get_count_for_object(contract, equipment_object_seq))             one_obj_count,
            to_number(psc_contr_product_scope_api.get_count_for_object_structure(equipment_object_seq, 'F'))   all_count,
            psc_contr_product_scope_api.get_count_for_object(contract, equipment_object_seq)||' ('||psc_contr_product_scope_api.get_count_for_object_structure(equipment_object_seq, 'F')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'SERLINECOUNT: Service Lines')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'SerLineCount'||ROWID       objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '92WorkOrder'               connected_lu,
            'L'                         tree_structure,
            to_number(psc_contr_product_scope_api.get_count_for_object(contract, equipment_object_seq))             one_obj_count,
            to_number(psc_contr_product_scope_api.get_count_for_object_structure(equipment_object_seq, 'L'))   all_count,
            psc_contr_product_scope_api.get_count_for_object(contract, equipment_object_seq)||' ('||psc_contr_product_scope_api.get_count_for_object_structure(equipment_object_seq, 'L')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'SERLINECOUNT: Service Lines')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'SerLineCount'||ROWID       objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '92WorkOrder'               connected_lu,
            'R'                         tree_structure,
            to_number(psc_contr_product_scope_api.get_count_for_object(contract, equipment_object_seq))             one_obj_count,
            to_number(psc_contr_product_scope_api.get_count_for_object_structure(equipment_object_seq, 'R'))   all_count,
            psc_contr_product_scope_api.get_count_for_object(contract, equipment_object_seq)||' ('||psc_contr_product_scope_api.get_count_for_object_structure(equipment_object_seq, 'R')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'SERLINECOUNT: Service Lines')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'SerLineCount'||ROWID       objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '92WorkOrder'               connected_lu,
            'T'                         tree_structure,
            to_number(psc_contr_product_scope_api.get_count_for_object(contract, equipment_object_seq))             one_obj_count,
            to_number(psc_contr_product_scope_api.get_count_for_object_structure(equipment_object_seq, 'T'))   all_count,
            psc_contr_product_scope_api.get_count_for_object(contract, equipment_object_seq)||' ('||psc_contr_product_scope_api.get_count_for_object_structure(equipment_object_seq, 'T')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'SERLINECOUNT: Service Lines')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'SerLineCount'||ROWID       objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '92WorkOrder'               connected_lu,
            'P'                         tree_structure,
            to_number(psc_contr_product_scope_api.get_count_for_object(contract, equipment_object_seq))             one_obj_count,
            to_number(psc_contr_product_scope_api.get_count_for_object_structure(equipment_object_seq, 'P'))   all_count,
            psc_contr_product_scope_api.get_count_for_object(contract, equipment_object_seq)||' ('||psc_contr_product_scope_api.get_count_for_object_structure(equipment_object_seq, 'P')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'SERLINECOUNT: Service Lines')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'SerLineCount'||ROWID       objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '92WorkOrder'               connected_lu,
            'S'                         tree_structure,
            to_number(psc_contr_product_scope_api.get_count_for_object(contract, equipment_object_seq))             one_obj_count,
            to_number(psc_contr_product_scope_api.get_count_for_object_structure(equipment_object_seq, 'S'))   all_count,
            psc_contr_product_scope_api.get_count_for_object(contract, equipment_object_seq)||' ('||psc_contr_product_scope_api.get_count_for_object_structure(equipment_object_seq, 'S')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'SERLINECOUNT: Service Lines')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'SerLineCount'||ROWID       objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '92WorkOrder'               connected_lu,
            'E'                         tree_structure,
            to_number(psc_contr_product_scope_api.get_count_for_object(contract, equipment_object_seq))             one_obj_count,
            to_number(psc_contr_product_scope_api.get_count_for_object_structure(equipment_object_seq, 'E'))   all_count,
            psc_contr_product_scope_api.get_count_for_object(contract, equipment_object_seq)||' ('||psc_contr_product_scope_api.get_count_for_object_structure(equipment_object_seq, 'E')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'SERLINECOUNT: Service Lines')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'SerLineCount'||ROWID       objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
$END;

VIEW Object_Counts_View2 IS
   Prompt = 'Object Counts For WO'
   obj_count.Flags = 'A---L'
   obj_count.Prompt = 'Object Count'
   obj_count.Datatype = 'STRING(10)'
   one_obj_count.Prompt = 'Count'
   one_obj_count.Datatype = 'NUMBER'
   all_count.Prompt = 'All Count'
   all_count.Datatype = 'NUMBER'
   mch_code.Flags = 'K---L'
   mch_code.Prompt = 'Object'
   contract.Flags = 'K---L'
   contract.Prompt = 'Site'
   display_text.Flags = 'A---L'
   display_text.Prompt = 'Display Text'
   connected_lu.Flags = 'K----'
   tree_structure.Flags = 'K----'
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '2EquipmentObject'          connected_lu, 
            'AllType'                   tree_structure,
            to_number(Equipment_Object_API.Get_All_Obj_Count(equipment_object_seq))   one_obj_count,
            0                                                                       all_count,
            Equipment_Object_API.Get_All_Obj_Count(equipment_object_seq)              obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'ALLOBJCETCOUNT: All Objects')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'ObjectCount'||ROWID        objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM     equipment_object_tab
$IF Component_Wo_SYS.INSTALLED $THEN 
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '5WorkOrder'                connected_lu,
            'F'                         tree_structure,
            to_number(Active_Separate_Api.Get_Wo_count_For_Object(equipment_object_seq))             one_obj_count,
            to_number(Active_Separate_Api.Get_Wo_count_For_Obj_Structure(equipment_object_seq, 'F'))      all_count,
            Active_Separate_Api.Get_Wo_count_For_Object(equipment_object_seq)||' ('||Active_Separate_Api.Get_Wo_count_For_Obj_Structure(equipment_object_seq, 'F')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'WOCOUNT: Active Work Orders')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'WoCount'||ROWID            objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '5WorkOrder'                connected_lu,
            'L'                         tree_structure,
            to_number(Active_Separate_Api.Get_Wo_count_For_Object(equipment_object_seq))             one_obj_count,
            to_number(Active_Separate_Api.Get_Wo_count_For_Obj_Structure(equipment_object_seq, 'L'))      all_count,
            Active_Separate_Api.Get_Wo_count_For_Object(equipment_object_seq)||' ('||Active_Separate_Api.Get_Wo_count_For_Obj_Structure(equipment_object_seq, 'L')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'WOCOUNT: Active Work Orders')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'WoCount'||ROWID            objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '5WorkOrder'                connected_lu,
            'R'                         tree_structure,
            to_number(Active_Separate_Api.Get_Wo_count_For_Object(equipment_object_seq))             one_obj_count,
            to_number(Active_Separate_Api.Get_Wo_count_For_Obj_Structure(equipment_object_seq, 'R'))      all_count,
            Active_Separate_Api.Get_Wo_count_For_Object(equipment_object_seq)||' ('||Active_Separate_Api.Get_Wo_count_For_Obj_Structure(equipment_object_seq, 'R')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'WOCOUNT: Active Work Orders')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'WoCount'||ROWID            objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '5WorkOrder'                connected_lu,
            'T'                         tree_structure,
            to_number(Active_Separate_Api.Get_Wo_count_For_Object(equipment_object_seq))              one_obj_count,
            to_number(Active_Separate_Api.Get_Wo_count_For_Obj_Structure(equipment_object_seq, 'T'))      all_count,
            Active_Separate_Api.Get_Wo_count_For_Object(equipment_object_seq)||' ('||Active_Separate_Api.Get_Wo_count_For_Obj_Structure(equipment_object_seq, 'T')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'WOCOUNT: Active Work Orders')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'WoCount'||ROWID            objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '5WorkOrder'                connected_lu,
            'P'                         tree_structure,
            to_number(Active_Separate_Api.Get_Wo_count_For_Object(equipment_object_seq))              one_obj_count,
            to_number(Active_Separate_Api.Get_Wo_count_For_Obj_Structure(equipment_object_seq, 'P'))      all_count,
            Active_Separate_Api.Get_Wo_count_For_Object(equipment_object_seq)||' ('||Active_Separate_Api.Get_Wo_count_For_Obj_Structure(equipment_object_seq, 'P')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'WOCOUNT: Active Work Orders')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'WoCount'||ROWID            objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '5WorkOrder'                connected_lu,
            'S'                         tree_structure,
            to_number(Active_Separate_Api.Get_Wo_count_For_Object(equipment_object_seq))             one_obj_count,
            to_number(Active_Separate_Api.Get_Wo_count_For_Obj_Structure(equipment_object_seq, 'S'))      all_count,
            Active_Separate_Api.Get_Wo_count_For_Object(equipment_object_seq)||' ('||Active_Separate_Api.Get_Wo_count_For_Obj_Structure(equipment_object_seq, 'S')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'WOCOUNT: Active Work Orders')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'WoCount'||ROWID            objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '5WorkOrder'                connected_lu,
            'E'                         tree_structure,
            to_number(Active_Separate_Api.Get_Wo_count_For_Object(equipment_object_seq))             one_obj_count,
            to_number(Active_Separate_Api.Get_Wo_count_For_Obj_Structure(equipment_object_seq, 'E'))      all_count,
            Active_Separate_Api.Get_Wo_count_For_Object(equipment_object_seq)||' ('||Active_Separate_Api.Get_Wo_count_For_Obj_Structure(equipment_object_seq, 'E')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'WOCOUNT: Active Work Orders')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'WoCount'||ROWID            objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '6WorkOrder'                connected_lu,
            'AllType'                   tree_structure,
            to_number(Historical_Work_Order_API.Get_Hist_Wo_Count(equipment_object_seq))             one_obj_count,
            0                                                                  all_count,
            Historical_Work_Order_API.Get_Hist_Wo_Count(equipment_object_seq)    obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'ALLWOCOUNT: Historical Work Orders')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'AllHistWoCount'||ROWID     objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION 
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '8JtTask'                   connected_lu,
            'F'                         tree_structure,
            to_number(Jt_Task_Utility_API.Get_task_count_For_Object(equipment_object_seq))          one_obj_count,
            to_number(Jt_Task_Utility_API.Get_task_count_For_Obj_Struct(equipment_object_seq, 'F'))      all_count,
            Jt_Task_Utility_API.Get_task_count_For_Object(equipment_object_seq)||' ('||Jt_Task_Utility_API.Get_task_count_For_Obj_Struct(equipment_object_seq, 'F')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'TASKCOUNT: Active Work Tasks')  display_text,
            rowtype                      objtype,
            rowkey                       objkey,
            'TaskCount'||ROWID           objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '8JtTask'                   connected_lu,
            'L'                         tree_structure,
            to_number(Jt_Task_Utility_API.Get_task_count_For_Object(equipment_object_seq))          one_obj_count,
            to_number(Jt_Task_Utility_API.Get_task_count_For_Obj_Struct(equipment_object_seq, 'L'))      all_count,
            Jt_Task_Utility_API.Get_task_count_For_Object(equipment_object_seq)||' ('||Jt_Task_Utility_API.Get_task_count_For_Obj_Struct(equipment_object_seq, 'L')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'TASKCOUNT: Active Work Tasks')  display_text,
            rowtype                      objtype,
            rowkey                       objkey,
            'TaskCount'||ROWID           objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '8JtTask'                   connected_lu,
            'R'                         tree_structure,
            to_number(Jt_Task_Utility_API.Get_task_count_For_Object(equipment_object_seq))          one_obj_count,
            to_number(Jt_Task_Utility_API.Get_task_count_For_Obj_Struct(equipment_object_seq, 'R'))      all_count,
            Jt_Task_Utility_API.Get_task_count_For_Object(equipment_object_seq)||' ('||Jt_Task_Utility_API.Get_task_count_For_Obj_Struct(equipment_object_seq, 'R')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'TASKCOUNT: Active Work Tasks')  display_text,
            rowtype                      objtype,
            rowkey                       objkey,
            'TaskCount'||ROWID           objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '8JtTask'                   connected_lu,
            'T'                         tree_structure,
            to_number(Jt_Task_Utility_API.Get_task_count_For_Object(equipment_object_seq))          one_obj_count,
            to_number(Jt_Task_Utility_API.Get_task_count_For_Obj_Struct(equipment_object_seq, 'T'))      all_count,
            Jt_Task_Utility_API.Get_task_count_For_Object(equipment_object_seq)||' ('||Jt_Task_Utility_API.Get_task_count_For_Obj_Struct(equipment_object_seq, 'T')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'TASKCOUNT: Active Work Tasks')  display_text,
            rowtype                      objtype,
            rowkey                       objkey,
            'TaskCount'||ROWID           objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '8JtTask'                   connected_lu,
            'P'                         tree_structure,
            to_number(Jt_Task_Utility_API.Get_task_count_For_Object(equipment_object_seq))          one_obj_count,
            to_number(Jt_Task_Utility_API.Get_task_count_For_Obj_Struct(equipment_object_seq, 'P'))      all_count,
            Jt_Task_Utility_API.Get_task_count_For_Object(equipment_object_seq)||' ('||Jt_Task_Utility_API.Get_task_count_For_Obj_Struct(equipment_object_seq, 'P')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'TASKCOUNT: Active Work Tasks')  display_text,
            rowtype                      objtype,
            rowkey                       objkey,
            'TaskCount'||ROWID           objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '8JtTask'                   connected_lu,
            'S'                         tree_structure,
            to_number(Jt_Task_Utility_API.Get_task_count_For_Object(equipment_object_seq))          one_obj_count,
            to_number(Jt_Task_Utility_API.Get_task_count_For_Obj_Struct(equipment_object_seq, 'S'))      all_count,
            Jt_Task_Utility_API.Get_task_count_For_Object(equipment_object_seq)||' ('||Jt_Task_Utility_API.Get_task_count_For_Obj_Struct(equipment_object_seq, 'S')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'TASKCOUNT: Active Work Tasks')  display_text,
            rowtype                      objtype,
            rowkey                       objkey,
            'TaskCount'||ROWID           objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '8JtTask'                   connected_lu,
            'E'                         tree_structure,
            to_number(Jt_Task_Utility_API.Get_task_count_For_Object(equipment_object_seq))          one_obj_count,
            to_number(Jt_Task_Utility_API.Get_task_count_For_Obj_Struct(equipment_object_seq, 'E'))      all_count,
            Jt_Task_Utility_API.Get_task_count_For_Object(equipment_object_seq)||' ('||Jt_Task_Utility_API.Get_task_count_For_Obj_Struct(equipment_object_seq, 'E')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'TASKCOUNT: Active Work Tasks')  display_text,
            rowtype                      objtype,
            rowkey                       objkey,
            'TaskCount'||ROWID           objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION 
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '90JtTask'                  connected_lu,
            'AllType'                   tree_structure,
            to_number(Jt_Task_Utility_API.Get_Hist_Task_Count(equipment_object_seq))       one_obj_count,
            0                                                                all_count,
            Jt_Task_Utility_API.Get_Hist_Task_Count(equipment_object_seq)      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'HISTTASKCOUNT: Historical Work Tasks')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'AllHistTaskCount'||ROWID   objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION 
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '93JtTaskStep'              connected_lu,
            'F'                         tree_structure,
            to_number(Jt_Task_Step_API.Get_task_step_count_For_Object(equipment_object_seq))       one_obj_count,
            to_number(Jt_Task_Step_API.Get_tsk_step_cnt_For_Obj_Struc(equipment_object_seq, 'F'))      all_count,
            Jt_Task_Step_API.Get_task_step_count_For_Object(equipment_object_seq)||' ('||Jt_Task_Step_API.Get_tsk_step_cnt_For_Obj_Struc(equipment_object_seq, 'F')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'TASKSTEPCOUNT: Active Work Task Steps')  display_text,
            rowtype                      objtype,
            rowkey                       objkey,
            'TaskStepCount'||ROWID       objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '93JtTaskStep'              connected_lu,
            'L'                         tree_structure,
            to_number(Jt_Task_Step_API.Get_task_step_count_For_Object(equipment_object_seq))          one_obj_count,
            to_number(Jt_Task_Step_API.Get_tsk_step_cnt_For_Obj_Struc(equipment_object_seq, 'L'))      all_count,
            Jt_Task_Step_API.Get_task_step_count_For_Object(equipment_object_seq)||' ('||Jt_Task_Step_API.Get_tsk_step_cnt_For_Obj_Struc(equipment_object_seq, 'L')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'TASKSTEPCOUNT: Active Work Task Steps')  display_text,
            rowtype                      objtype,
            rowkey                       objkey,
            'TaskStepCount'||ROWID       objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '93JtTaskStep'              connected_lu,
            'R'                         tree_structure,
            to_number(Jt_Task_Step_API.Get_task_step_count_For_Object(equipment_object_seq))          one_obj_count,
            to_number(Jt_Task_Step_API.Get_tsk_step_cnt_For_Obj_Struc(equipment_object_seq, 'R'))      all_count,
            Jt_Task_Step_API.Get_task_step_count_For_Object(equipment_object_seq)||' ('||Jt_Task_Step_API.Get_tsk_step_cnt_For_Obj_Struc(equipment_object_seq, 'R')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'TASKSTEPCOUNT: Active Work Task Steps')  display_text,
            rowtype                      objtype,
            rowkey                       objkey,
            'TaskStepCount'||ROWID       objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '93JtTaskStep'              connected_lu,
            'T'                         tree_structure,
            to_number(Jt_Task_Step_API.Get_task_step_count_For_Object(equipment_object_seq))          one_obj_count,
            to_number(Jt_Task_Step_API.Get_tsk_step_cnt_For_Obj_Struc(equipment_object_seq, 'T'))      all_count,
            Jt_Task_Step_API.Get_task_step_count_For_Object(equipment_object_seq)||' ('||Jt_Task_Step_API.Get_tsk_step_cnt_For_Obj_Struc(equipment_object_seq, 'T')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'TASKSTEPCOUNT: Active Work Task Steps')  display_text,
            rowtype                      objtype,
            rowkey                       objkey,
            'TaskStepCount'||ROWID       objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '93JtTaskStep'              connected_lu,
            'P'                         tree_structure,
            to_number(Jt_Task_Step_API.Get_task_step_count_For_Object(equipment_object_seq))          one_obj_count,
            to_number(Jt_Task_Step_API.Get_tsk_step_cnt_For_Obj_Struc(equipment_object_seq, 'P'))      all_count,
            Jt_Task_Step_API.Get_task_step_count_For_Object(equipment_object_seq)||' ('||Jt_Task_Step_API.Get_tsk_step_cnt_For_Obj_Struc(equipment_object_seq, 'P')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'TASKSTEPCOUNT: Active Work Task Steps')  display_text,
            rowtype                      objtype,
            rowkey                       objkey,
            'TaskStepCount'||ROWID       objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '93JtTaskStep'              connected_lu,
            'S'                         tree_structure,
            to_number(Jt_Task_Step_API.Get_task_step_count_For_Object(equipment_object_seq))          one_obj_count,
            to_number(Jt_Task_Step_API.Get_tsk_step_cnt_For_Obj_Struc(equipment_object_seq, 'S'))      all_count,
            Jt_Task_Step_API.Get_task_step_count_For_Object(equipment_object_seq)||' ('||Jt_Task_Step_API.Get_tsk_step_cnt_For_Obj_Struc(equipment_object_seq, 'S')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'TASKSTEPCOUNT: Active Work Task Steps')  display_text,
            rowtype                      objtype,
            rowkey                       objkey,
            'TaskStepCount'||ROWID       objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '93JtTaskStep'              connected_lu,
            'E'                         tree_structure,
            to_number(Jt_Task_Step_API.Get_task_step_count_For_Object(equipment_object_seq))          one_obj_count,
            to_number(Jt_Task_Step_API.Get_tsk_step_cnt_For_Obj_Struc(equipment_object_seq, 'E'))      all_count,
            Jt_Task_Step_API.Get_task_step_count_For_Object(equipment_object_seq)||' ('||Jt_Task_Step_API.Get_tsk_step_cnt_For_Obj_Struc(equipment_object_seq, 'E')||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'TASKSTEPCOUNT: Active Work Task Steps')  display_text,
            rowtype                      objtype,
            rowkey                       objkey,
            'TaskStepCount'||ROWID       objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION 
   SELECT   equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            '94JtTaskStep'              connected_lu,
            'AllType'                   tree_structure,
            to_number(Jt_Task_Step_API.Get_Hist_Task_Step_Count(equipment_object_seq))       one_obj_count,
            0                                                                all_count,
            Jt_Task_Step_API.Get_Hist_Task_Step_Count(equipment_object_seq)      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'HISTTASKSTEPCOUNT: Historical Work Task Steps')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'AllHistTaskStepCount'||ROWID   objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
$END;

@SecurityCheck Site.UserAuthorized(contract)
VIEW Equipment_All_Lov IS
   Prompt = 'Equipment Functional'
   contract.Flags = 'P---L'
   mch_code.Flags = 'K---L'
   mch_name.Flags = 'A---L'
   obj_level.Flags = 'A---L'
   sup_mch_code.Flags = 'A----'
SELECT contract                       contract,
       mch_code                       mch_code,
       mch_name                       mch_name,
       obj_level                      obj_level,
       Equipment_Object_API.Get_Mch_Code(functional_object_seq)   sup_mch_code,
       rowid                         objid,
       TO_CHAR(rowversion) objversion,
       rowkey                        objkey
FROM   equipment_object_tab;

--Full access view, introduced for performance
VIEW Equip_All_Perf_Full_Access IS
   Prompt = 'Equipment Object'
SELECT equipment_object_seq   equipment_object_seq,
       contract               contract,
       mch_code               mch_code,
       mch_name               mch_name,
       obj_level              obj_level,
       Equipment_Object_API.Get_Mch_Code(functional_object_seq)   sup_mch_code,
       rowid                  objid,
       TO_CHAR(rowversion)    objversion,
       rowkey                 objkey
FROM   equipment_object_tab;

-- View Service_Object_Counts and Service_Object_WOrk_Task_Counts were created for the sumery page to use in Service Object 360 in IFS Cloud.
VIEW Service_Object_Counts IS
   Prompt = 'Service_Object_Counts'
   obj_count.Flags = 'A---L'
   obj_count.Prompt = 'Service_Object_Counts'
   obj_count.Datatype = 'STRING(10)'
   one_obj_count.Prompt = 'Count'
   one_obj_count.Datatype = 'NUMBER'
   all_count.Prompt = 'All Count'
   all_count.Datatype = 'NUMBER'
   mch_code.Flags = 'K---L'
   mch_code.Prompt = 'Object'
   contract.Flags = 'K---L'
   contract.Prompt = 'Site'
   display_text.Flags = 'A---L'
   display_text.Prompt = 'Display Text'
   connected_lu.Flags = 'K----'
    SELECT  equipment_object_seq        equipment_object_seq, 
            contract                    contract,
            mch_code                    mch_code,
            'ScContract'                connected_lu,         
            Equipment_Object_API.Get_Sc_Count_Service_Object(equipment_object_seq) one_obj_count,
            Equipment_Object_API.Get_Sc_Count_Object_Str(equipment_object_seq) all_count,
            Equipment_Object_API.Get_Sc_Count_Service_Object(equipment_object_seq)||' ('||Equipment_Object_API.Get_Sc_Count_Object_Str(equipment_object_seq)||')'      obj_count,     
            Language_SYS.Translate_Constant('EquipmentObject', 'CONTRACTCOUNT: Contracts')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'SerLineCount'||ROWID       objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq   equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            'ServiceProgram'          connected_lu,
            Equipment_Object_API.Get_Recp_Count_Service_Object(equipment_object_seq) one_obj_count,
            Equipment_Object_API.Get_Recp_Count_Object_Str(equipment_object_seq) all_count,
            Equipment_Object_API.Get_Recp_Count_Service_Object(equipment_object_seq)||' ('||Equipment_Object_API.Get_Recp_Count_Object_Str(equipment_object_seq)||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'RECSRVPGMCOUNT: Recurring Programs')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'RecurringServiceProgram'||ROWID        objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM     equipment_object_tab;

VIEW Service_Object_Work_Counts IS
   Prompt = 'Service_Object_Work_Counts'
   obj_count.Flags = 'A---L'
   obj_count.Prompt = 'Service_Object_Work_Counts'
   obj_count.Datatype = 'STRING(10)'
   one_obj_count.Prompt = 'Count'
   one_obj_count.Datatype = 'NUMBER'
   all_count.Prompt = 'All Count'
   all_count.Datatype = 'NUMBER'
   mch_code.Flags = 'K---L'
   mch_code.Prompt = 'Object'
   contract.Flags = 'K---L'
   contract.Prompt = 'Site'
   display_text.Flags = 'A---L'
   display_text.Prompt = 'Display Text'
   connected_lu.Flags = 'K----'
    SELECT  equipment_object_seq        equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            'ActiveSrvRequest'          connected_lu,         
            Equipment_Object_API.Get_Active_Req_Count(equipment_object_seq) one_obj_count,
            Equipment_Object_API.Get_Active_Req_Count_Str(equipment_object_seq) all_count,
            Equipment_Object_API.Get_Active_Req_Count(equipment_object_seq)||' ('||Equipment_Object_API.Get_Active_Req_Count_Str(equipment_object_seq)||')'      obj_count,     
            Language_SYS.Translate_Constant('EquipmentObject', 'ACTREQCOUNT: Active Requests')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'SrvRequest'||ROWID       objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq   equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            'ActiveWorkTask'          connected_lu,
            Equipment_Object_API.Get_Active_Task_Count(equipment_object_seq) one_obj_count,
            Equipment_Object_API.Get_Active_Task_Count_Str(equipment_object_seq) all_count,
            Equipment_Object_API.Get_Active_Task_Count(equipment_object_seq)||' ('||Equipment_Object_API.Get_Active_Task_Count_Str(equipment_object_seq)||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'ACTWTASKCOUNT: Active Work Tasks')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'WorkTask'||ROWID        objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM     equipment_object_tab
UNION
    SELECT  equipment_object_seq   equipment_object_seq,
            contract                   contract,
            mch_code                    mch_code,
            'FSrvRequest'                connected_lu,         
            Equipment_Object_API.Get_Finished_Req_Count(equipment_object_seq) one_obj_count,
            Equipment_Object_API.Get_Finished_Req_Count_Str(equipment_object_seq) all_count,
            Equipment_Object_API.Get_Finished_Req_Count(equipment_object_seq)||' ('||Equipment_Object_API.Get_Finished_Req_Count_Str(equipment_object_seq)||')'      obj_count,     
            Language_SYS.Translate_Constant('EquipmentObject', 'FINREQCOUNT: Finished Requests')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'FSrvRequest'||ROWID       objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM  equipment_object_tab
UNION
   SELECT   equipment_object_seq   equipment_object_seq,
            contract                    contract,
            mch_code                    mch_code,
            'FWorkTask'          connected_lu,
            Equipment_Object_API.Get_Finished_Task_Count(equipment_object_seq) one_obj_count,
            Equipment_Object_API.Get_Finished_Task_Count_Str(equipment_object_seq) all_count,
            Equipment_Object_API.Get_Finished_Task_Count(equipment_object_seq)||' ('||Equipment_Object_API.Get_Finished_Task_Count_Str(equipment_object_seq)||')'      obj_count,
            Language_SYS.Translate_Constant('EquipmentObject', 'FINWTASKCOUNT: Finished Work Tasks')  display_text,
            rowtype                     objtype,
            rowkey                      objkey,
            'FWorkTask'||ROWID        objid,
            ltrim(lpad(to_char(rowversion),2000)) objversion
   FROM     equipment_object_tab;
