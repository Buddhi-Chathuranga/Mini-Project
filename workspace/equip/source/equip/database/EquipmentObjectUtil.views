-----------------------------------------------------------------------------
--
--  Logical unit: EquipmentObjectUtil
--  Component:    EQUIP
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  131122  Nekolk  PBSA-1833:Hooks: Refactored and split code.
--------------App9---------------------------------------------------------------
--  140804  SADELK  PRSA-1690: Added EQUIP_PROJ_LATE_PO , EQUIPMENT_ACTIVITY_LATE_WO , ACTIVITY_SUMMARY_WO and ACTIVITY_BUDGET_OVERRUN_WO
--  140916  SADELK  PRSA-1689: Added PROJECT_SUMMARY_WO
--  150422  VISRLK  Bug 122187, Added Dynamic Component Dependency to WO
--  150423  SHAFLK  Bug 122187, Added Dynamic Component Dependency to PURCH
--  150908  INMALK  AFT-3122, Changed how the Object ID for Linear Assets is used
--  180511  KrRaLK  Bug 141487, Modified EQUIP_OBJECT_LOCATION_LOV.
--  180823  CLEKLK  SAUXXW4-1625, Added PARTS_FOR_EQUIPMENT.
--  200221  ILSOLK  SAXTEND-1916, Added EQUIPMENT_OBJECT_SYMPTOMS_LOV to get unique symtom for objects.
--  201201  ACHJLK  IP2020R1-259, Added Ind_Equip_Obj_Dimension_Lobby View which is used in Industries EAM SERVICE functional lobbies. 
--  210628  ACHJLK  IP2020R1-665, Removed Ind_Equip_Obj_Dimension_Lobby View which is used in Industries EAM SERVICE functional lobbies. 
--  210813  DEEKLK  AM21R2-2463, Modified EQUIP_OBJECT_LOCATION_LOV.
--  211008  puvelk  AM21R2-2420, RLS implimented.
--  220111  KrRaLK  AM21R2-2950, Equipment object is given a sequence number as the primary key (while keeping the old Object ID 
--                  and Site as a unique constraint), so inlined the views to handle the new design of the EquipmentObject.
-------------------------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------


-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

@DbViewRowLevelSecurity CustomImplemented
VIEW Asset_Risk_Assessment IS
   Prompt = 'Asset Risk Assessment'
   Risk_Assessment_No.Flags = 'PMI--'
   Risk_Assessment_No.Datatype = 'NUMBER'
   Risk_Assessment_No.Prompt = 'Risk Assessment No'   
   Lu_Name.Flags = 'KMI--'
   Lu_Name.Datatype = 'STRING(30)'
   Lu_Name.Prompt = 'Lu Name'   
   Key_Ref.Flags = 'KMI--'
   Key_Ref.Datatype = 'STRING(500)'
   Key_Ref = 'Key Ref'   
   Name.Flags = 'A----'
   Name.Datatype = 'STRING(50)'
   Name.Prompt = 'Name'   
   Description.Flags = 'A----'
   Description.Datatype = 'STRING(300)'
   Description.Prompt = 'Description'   
   Plan_Date.Flags = 'A----'
   Plan_Date.Datatype = 'DATE/DATE'
   Plan_Date.Prompt = 'Planned Date'   
   Actual_Date.Flags = 'A----'
   Actual_Date.Datatype = 'DATE/DATE'
   Actual_Date.Prompt = 'Actual Date'   
   Org_Code.Flags = 'A----'
   Org_Code.Datatype = 'STRING(10)'
   Org_Code = 'Org Code'   
   Company_id.Flags = 'A----'
   Company_id.Datatype = 'STRING(20)'
   Company_id.Prompt = 'Company Id'   
   Site_Manager.Flags = 'A----'
   Site_Manager.Datatype = 'STRING(20)'
   Site_Manager.Prompt = 'Site Manager'   
   Risk_Potential.Flags = 'A----'
   Risk_Potential.Datatype = 'NUMBER'
   Risk_Potential.Prompt = 'Risk Potential'   
   State.Flags = 'A----'
   State.Datatype = 'STRING(30)'
   State.Prompt = 'State'   
   Object_Id.Flags = 'A----'
   Object_Id.Datatype = 'STRING(50)'
   Object_Id.Prompt = 'Object Id'   
   Contract.Flags = 'A----'
   Contract.Datatype = 'STRING(5)'
   Contract.Prompt = 'Contract'
   SELECT
   $IF Component_Osha_SYS.INSTALLED $THEN      
         risk_assessment_no        risk_assessment_no,
         lu_name                   lu_name,
         key_ref                   key_ref,
         name                      name,
         description               description,
         plan_date                 plan_date,
         actual_date               actual_date,
         org_code                  org_code,
         company_id                company_id,
         site_manager              site_manager,
         risk_potential            risk_potential,
         state                     state,
         Client_SYS.Get_Key_Reference_Value(key_ref, 'MCH_CODE')  object_id,
         Client_SYS.Get_Key_Reference_Value(key_ref, 'CONTRACT')  contract
      FROM   Risk_Object_Connection
      WHERE  lu_name = 'EquipmentObject' 
      AND Client_SYS.Get_Key_Reference_Value(key_ref, 'CONTRACT') IN (SELECT contract FROM USER_ALLOWED_SITE
                                                                      WHERE userid = (SELECT fnd_user FROM FND_SESSION))  
         $IF Component_Linast_SYS.INSTALLED $THEN                           
            UNION
            SELECT
               io.risk_assessment_no        risk_assessment_no,
               lu_name                      lu_name,
               key_ref                      key_ref,
               io.name                      name,
               io.description               description,
               io.plan_date                 plan_date,
               io.actual_date               actual_date,
               io.org_code                  org_code,
               io.company_id                company_id,
               io.site_manager              site_manager,
               io.risk_potential            risk_potential,
               io.state                     state,
               SUBSTR(li.linear_asset_name || ':' || to_char(li.linear_asset_revision_no), 1, 100)         object_id,
               li.site                      contract
            FROM   Risk_Object_Connection io, LINAST_LINEAR_ASSET_tab li
            WHERE io.lu_name = 'LinastLinearAsset'
            AND Client_SYS.Get_Key_Reference_Value(io.key_ref, 'LINEAR_ASSET_REVISION_NO') =  li.linear_asset_revision_no
            AND Client_SYS.Get_Key_Reference_Value(io.key_ref, 'LINEAR_ASSET_SQ') = li.linear_asset_sq    
            AND li.site IN (SELECT contract FROM USER_ALLOWED_SITE
                             WHERE userid = (SELECT fnd_user FROM FND_SESSION))
         $END
   $ELSE
         TO_NUMBER(NULL)            risk_assessment_no,
         TO_CHAR(NULL)              lu_name,
         TO_CHAR(NULL)              key_ref,
         TO_CHAR(NULL)              name,
         TO_CHAR(NULL)              description,
         TO_DATE(NULL)              plan_date,
         TO_DATE(NULL)              actual_date,
         TO_CHAR(NULL)              org_code,
         TO_CHAR(NULL)              company_id,
         TO_CHAR(NULL)              site_manager,
         TO_NUMBER(NULL)            risk_potential,
         TO_CHAR(NULL)              state,
         TO_CHAR(NULL)              object_id,
         TO_CHAR(NULL)              contract
     FROM dual 
     WHERE 1=2 
   $END;
                           
                            
@DbViewRowLevelSecurity CustomImplemented
VIEW Equipment_Incident IS
   Prompt = 'Asset Incidents'
   Incident_Reference_No.Flags = 'PMI--'
   Incident_Reference_No.Datatype = 'STRING(20)'
   Incident_Reference_No.Prompt = 'Incident Reference No'   
   Lu_Name.Flags = 'KMI--'
   Lu_Name.Datatype = 'STRING(30)'
   Lu_Name.Prompt = 'Lu Name'   
   Key_Ref.Flags = 'KMI--'
   Key_Ref.Datatype = 'STRING(500)'
   Key_Ref = 'Key Ref'   
   Incident_Reference_Name.Flags = 'A----'
   Incident_Reference_Name.Datatype = 'STRING(200)'
   Incident_Reference_Name.Prompt = 'Incident Reference Name'   
   Incident_Date.Flags = 'A----'
   Incident_Date.Datatype = 'DATE/DATE'
   Incident_Date.Prompt = 'Incident Date'     
   Severity_Level.Flags = 'A----'
   Severity_Level.Datatype = 'STRING(20)'
   Severity_Level = 'Severity Level'   
   Incident_Class.Flags = 'A----'
   Incident_Class.Datatype = 'STRING(30)'
   Incident_Class.Prompt = 'Incident Class'  
   Object_Id.Flags = 'A----'
   Object_Id.Datatype = 'STRING(50)'
   Object_Id.Prompt = 'Object Id'   
   Contract.Flags = 'A----'
   Contract.Datatype = 'STRING(555)'
   Contract.Prompt = 'Contract'
   
   SELECT
   $IF Component_Osha_SYS.INSTALLED $THEN      
         incident_reference_no               incident_reference_no,
         lu_name                             lu_name,
         key_ref                             key_ref,
         incident_reference_name             incident_reference_name,
         incident_date                       incident_date,
         to_char(incident_date, 'YYYY-MM') incident_month,
         severity_level                      severity_level,
         incident_class                      incident_class,
         Client_SYS.Get_Key_Reference_Value(key_ref, 'MCH_CODE')  object_id,
         Client_SYS.Get_Key_Reference_Value(key_ref, 'CONTRACT')  contract
     FROM Incident_Object_Connection
     WHERE state != 'Rejected'
     AND lu_name = 'EquipmentObject'  
     AND Client_SYS.Get_Key_Reference_Value(key_ref, 'CONTRACT') IN (SELECT contract FROM USER_ALLOWED_SITE
                                                                     WHERE userid = (SELECT fnd_user FROM FND_SESSION)) 
        $IF Component_Linast_SYS.INSTALLED $THEN 
           UNION
           SELECT incident_reference_no                                                              incident_reference_no,
               lu_name                                                                               lu_name,
               key_ref                                                                               key_ref,
               incident_reference_name                                                               incident_reference_name,
               incident_date                                                                         incident_date,
               to_char(incident_date, 'YYYY-MM')                                                     incident_month,
               severity_level                                                                        severity_level,
               incident_class                                                                        incident_class,
               SUBSTR(li.linear_asset_name || ':' || to_char(li.linear_asset_revision_no), 1, 100)   object_id,
               li.site                                                                               contract
          FROM   Incident_Object_Connection io, LINAST_LINEAR_ASSET_tab li
          WHERE io.state != 'Rejected'
          AND Client_SYS.Get_Key_Reference_Value(io.key_ref, 'LINEAR_ASSET_REVISION_NO') =  li.linear_asset_revision_no
          AND Client_SYS.Get_Key_Reference_Value(io.key_ref, 'LINEAR_ASSET_SQ') = li.linear_asset_sq  
          AND io.lu_name = 'LinastLinearAsset'
          AND li.site IN (SELECT contract FROM USER_ALLOWED_SITE
                          WHERE userid = (SELECT fnd_user FROM FND_SESSION))
          ORDER BY incident_date DESC 
       $END
  $ELSE
         TO_CHAR(NULL)                incident_reference_no,
         TO_CHAR(NULL)                lu_name,
         TO_CHAR(NULL)                key_ref,
         TO_CHAR(NULL)                incident_reference_name,
         TO_DATE(NULL)                incident_date,
         TO_CHAR(NULL)                incident_month,
         TO_CHAR(NULL)                severity_level,
         TO_CHAR(NULL)                incident_class,
         TO_CHAR(NULL)                object_id,
         TO_CHAR(NULL)                contract
     FROM dual 
     WHERE 1=2 
   $END;

VIEW EQUIPMENT_ACTIVITY_LATE_WO IS
   Prompt = 'Equipment Activity Late Wo'
   ACTIVITY_SEQ.Flags = 'K----'
   ACTIVITY_SEQ.Datatype = 'NUMBER(10)'
   ACTIVITY_SEQ.Prompt = 'Activity Sequence'  
   ACTIVITY_SEQ.Ref = 'Activity/NOCHECK'   
   PROJECT_NO.Flags = 'AM---'
   PROJECT_NO.Datatype = 'STRING(10)/UPPERCASE'
   PROJECT_NO.Prompt = 'Project No'   
   WO_NO.Flags = 'A----'
   WO_NO.Datatype = 'NUMBER(8)'
   WO_NO.Prompt = 'WO Number'   
   WO_NO.Ref = 'ActiveSeparate/NOCHECK'   
   ACTIVITY_NO.Flags = 'A----'
   ACTIVITY_NO.Datatype = 'STRING(10)/UPPERCASE'
   ACTIVITY_NO.Prompt = 'Activity ID'   
   MCH_CODE_CONTRACT.Flags = 'A----'
   MCH_CODE_CONTRACT.Datatype = 'STRING(5)/UPPERCASE'
   MCH_CODE_CONTRACT.Prompt = 'Site' 
   MCH_CODE.Flags = 'A----'
   MCH_CODE.Datatype = 'STRING(100)/UPPERCASE'
   MCH_CODE.Prompt = 'Object' 
   CONNECTION_TYPE_DB.Flags = 'A----'
   CONNECTION_TYPE_DB.Datatype = 'STRING(20)/UPPERCASE'
   CONNECTION_TYPE_DB.Prompt = 'connection type'
   SELECT 
   $IF Component_Proj_SYS.INSTALLED AND Component_Wo_SYS.INSTALLED $THEN  
      a.activity_seq                   activity_seq,
      a.project_id                     project_no,
      c.wo_no                          wo_no,
      a.activity_no                    activity_no,
      c.mch_code_contract              mch_code_contract,
      c.mch_code                       mch_code,
      a.objversion                     objversion,
      c.connection_type_db             connection_type_db,
      a.objstate                       objstate
     FROM   activity_pub a, active_separate c 
     WHERE c.activity_seq = a.activity_seq
     AND ((c.objstate  = 'RELEASED' OR c.objstate  = 'STARTED' OR c.objstate  = 'WORKDONE' OR c.objstate  = 'REPORTED' OR c.objstate  = 'PREPARED')
     AND ((a.early_finish < nvl(c.real_f_date, c.plan_f_date))
     OR (c.real_f_date IS NULL
     AND c.plan_f_date IS NULL))and c.connection_type_db IN ('EQUIPMENT', 'LINAST'))
   $ELSE
      TO_NUMBER(NULL)           activity_seq,
      TO_CHAR(NULL)             project_no,
      TO_NUMBER(NULL)           wo_no,
      TO_CHAR(NULL)             activity_no,
      TO_CHAR(NULL)             mch_code_contract,
      TO_CHAR(NULL)             mch_code,
      TO_DATE(NULL)             objversion,
      TO_CHAR(NULL)             connection_type_db,
      TO_CHAR(NULL)             objstate
     FROM dual 
     WHERE 1=2 
   $END;
        
        
VIEW EQUIP_PROJ_LATE_PO IS
   Prompt = 'Project Activity Late PO'
   PROJECT_ID.Flags = 'AM---'
   PROJECT_ID.Datatype = 'STRING(10)/UPPERCASE'
   PROJECT_ID.Prompt = 'Project No'   
   ORDER_NO.Flags = 'A----'
   ORDER_NO.Datatype = 'STRING(12)'
   ORDER_NO.Prompt = 'Purchase Order No'   
   PO_LINE_NO.Flags = 'KMI-L'
   PO_LINE_NO.Datatype = 'STRING(4)'
   PO_LINE_NO.Prompt = 'Line No'   
   MCH_CODE_CONTRACT.Flags = 'A----'
   MCH_CODE_CONTRACT.Datatype = 'STRING(5)/UPPERCASE'
   MCH_CODE_CONTRACT.Prompt = 'Site'   
   MCH_CODE.Flags = 'A----'
   MCH_CODE.Datatype = 'STRING(100)/UPPERCASE'
   MCH_CODE.Prompt = 'Object'     
   DEMAND_CODE.Flags = 'A-IU-'
   DEMAND_CODE.Datatype = 'STRING(3)/UPPERCASE'
   DEMAND_CODE = 'Demand Code'   
   EARLY_FINISH.Flags = 'AM---'
   EARLY_FINISH.Datatype = 'DATE/DATE'
   EARLY_FINISH.Prompt = 'Early Finish' 
   CONNECTION_TYPE_DB.Flags = 'A----'
   CONNECTION_TYPE_DB.Datatype = 'STRING(20)/UPPERCASE'
   CONNECTION_TYPE_DB.Prompt = 'connection type'
   SELECT 
   $IF Component_Proj_SYS.INSTALLED AND Component_Wo_SYS.INSTALLED AND Component_Purch_SYS.INSTALLED $THEN
      a.project_id                     project_id,
      c.order_no                       order_no ,
      c.line_no                        po_line_no,
      d.mch_code_contract              mch_code_contract,
      d.mch_code                       mch_code,
      c.demand_code_db                 demand_code,
      TO_CHAR(a.early_finish,'YYYY-MM-DD')              early_finish,
      TO_CHAR(c.planned_receipt_date,'YYYY-MM-DD')      planned_reciept_date,
      d.connection_type_db             connection_type_db
      FROM  activity_pub a, purchase_order_line_pub c, active_separate d
      WHERE c.activity_seq = a.activity_seq
      AND (NVL(Activity_API.Get_Demand_Date (a.project_id,a.activity_seq,c.demand_code_db,'PUR',c.order_no,c.line_no,c.release_no,NULL),
      a.early_finish) < c.planned_receipt_date)
      AND demand_code_db = 'WO' 
      AND d.wo_no = c.demand_order_no 
      AND d.connection_type_db IN ('EQUIPMENT', 'LINAST')
   $ELSE
      TO_CHAR(NULL)             project_id,
      TO_CHAR(NULL)             order_no ,
      TO_CHAR(NULL)             po_line_no,
      TO_CHAR(NULL)             mch_code_contract,
      TO_CHAR(NULL)             mch_code,
      TO_CHAR(NULL)             demand_code,
      TO_CHAR(NULL)             early_finish,
      TO_CHAR(NULL)             planned_reciept_date,
      TO_CHAR(NULL)             connection_type_db
     FROM dual 
     WHERE 1=2 
   $END;

@DbViewRowLevelSecurity CustomImplemented
VIEW  PROJECT_SUMMARY_WO IS
   Prompt = 'Project Summary of Assets Connected to Asset Manager'
   project_id.Flags = 'AMI-L'
   project_id.Datatype = 'STRING(10)/UPPERCASE'
   project_id.Prompt = 'Project ID'  
   name.Flags = 'AMIUL'
   name.Datatype = 'STRING(35)'
   name.Prompt = 'Name' 
   spi.Flags = 'A----'
   spi.Datatype = 'NUMBER(10)'
   spi.Prompt = 'SPI' 
   cpi.Flags = 'A----'
   cpi.Datatype = 'NUMBER(10)'
   cpi.Prompt = 'CPI' 
   mch_code.Flags = 'A----'
   mch_code.Datatype = 'STRING(100)/UPPERCASE'
   mch_code.Prompt = 'Object'    
   mch_code_contract.Flags = 'A----'
   mch_code_contract.Datatype = 'STRING(5)/UPPERCASE'
   mch_code_contract.Prompt = 'Site'  
   connection_type_db.Flags = 'A----'
   connection_type_db.Datatype = 'STRING(20)/UPPERCASE'
   connection_type_db.Prompt = 'connection type'
   SELECT 
   $IF Component_Proj_SYS.INSTALLED AND Component_Wo_SYS.INSTALLED $THEN
         p.project_id           project_id,
         p.name                 name,
         p.spi                  spi,
         p.cpi                  cpi,
         wo.wo_no               wo_no,
         wo.mch_code            mch_code,
         wo.mch_code_contract   mch_code_contract,
         wo.connection_type_db  connection_type_db
     FROM PROJECT_SUMMARY p, activity_pub ap, work_order_uiv wo
     WHERE  p.project_id = ap.project_id 
     AND  ap.activity_seq = wo.activity_seq
     AND wo.connection_type_db IN ('EQUIPMENT', 'LINAST')
     AND p.state  IN ('Approved', 'Started', 'Completed')
   $ELSE
         TO_CHAR(NULL)        project_id,
         TO_CHAR(NULL)        name,
         TO_NUMBER(NULL)      spi,
         TO_NUMBER(NULL)      cpi,
         TO_NUMBER(NULL)      wo_no,
         TO_CHAR(NULL)        mch_code,
         TO_CHAR(NULL)        mch_code_contract,
         TO_CHAR(NULL)        connection_type_db
     FROM dual 
     WHERE 1=2 
   $END;

@DbViewRowLevelSecurity CustomImplemented
VIEW  EQUIPMENT_OBJECT_SYMPTOMS IS
   Prompt = 'Symptoms for objects'
      
   err_symptom_desc.Datatype = 'STRING(100)'
   err_symptom_desc.Prompt = 'Description'
   
   SELECT   t.mch_code              mch_code,
      t.contract                    contract,
      s.item_class_id               item_class_id,
      s.function_id                 function_id,
      s.err_type                    err_type,
      s.err_symptom                 err_symptom,
      Work_Order_Sympt_Code_API.Get_Description(err_symptom) err_symptom_desc
   FROM EQUIPMENT_OBJECT t ,SYMPTOM_TAB s
   WHERE t.item_class_id = s.item_class_id
      AND t.item_class_id IS NOT NULL;

@DbViewRowLevelSecurity CustomImplemented
VIEW EQUIPMENT_OBJECT_SYMPTOMS_LOV IS
   Prompt = 'Unique Symptoms for objects'
   err_symptom_desc.Datatype = 'STRING(100)'
   err_symptom_desc.Prompt = 'Description'
   SELECT DISTINCT(err_symptom)    err_symptom,
         err_symptom_desc          err_symptom_desc,
         mch_code                  mch_code,
         contract                  contract,
         item_class_id             item_class_id  
   FROM EQUIPMENT_OBJECT_SYMPTOMS;
      
VIEW EQUIP_OBJECT_LOCATION_LOV IS
   Prompt = 'Equipment Object Location'
   location_id.Flags = 'K---L'
   location_id.Datatype = 'STRING(30)'
   location_id.Prompt = 'Location ID'
   name.Flags = 'A---L'
   name.Datatype = 'STRING(64)'
   name.Prompt = 'Name'
   address1.Flags = 'A---L'
   address1.Datatype = 'STRING(35)'
   address1.Prompt = 'Address1'
   address2.Flags = 'A---L'
   address2.Datatype = 'STRING(35)'
   address2.Prompt = 'Address2'
   zip_code.Flags = 'A---L'
   zip_code.Datatype = 'STRING(35)'
   zip_code.Prompt = 'Zip Code'
   city.Flags = 'A---L'
   city.Datatype = 'STRING(35)'
   city.Prompt = 'City'
   county.Flags = 'A---L'
   county.Datatype = 'STRING(35)'
   county.Prompt = 'County'
   country_code.Flags = 'A---L'
   country_code.Datatype = 'STRING(2)'
   country_code.Prompt = 'Country Code'
   customer_id.Flags = 'A---L'
   customer_id.Datatype = 'STRING(20)'
   customer_id.Prompt = 'Customer ID'
   customer_name.Flags = 'A---L'
   customer_name.Datatype = 'STRING(100)'
   customer_name.Prompt = 'Customer Name'
   party_type.Prompt = 'Party Type'
   party_type.Flags = 'A---L'
   party_type.Datatype = 'STRING(200)'
   visit_address.Prompt = 'Visit Address'
   visit_address.Flags = 'A---L'
   visit_address.Datatype = 'BOOLEAN("TRUE","FALSE")'
   delivery_address.Prompt = 'Delivery Address'
   delivery_address.Flags = 'A---L'
   delivery_address.Datatype = 'BOOLEAN("TRUE","FALSE")'
   primary_address.Prompt = 'Primary Address'
   primary_address.Flags = 'A---L'
   primary_address.Datatype = 'BOOLEAN("TRUE","FALSE")'
   position_address.Prompt = 'Position Address'
   position_address.Flags = 'A---L'
   position_address.Datatype = 'STRING(5)'
SELECT loc.location_id          location_id,
       loc.name                 name,
       loc_address.address1     address1,
       loc_address.address2     address2,
       loc_address.zip_code     zip_code,
       loc_address.city         city,
       loc_address.state        state,
       loc_address.county       county,
       loc_address.country_code country_code,
       DECODE(loc_address.party_type,
              'CUSTOMER',
              loc_address.identity,
              NULL)             customer_id,
       DECODE(loc_address.party_type,
              'CUSTOMER',
              Customer_Info_API.Get_Name(loc_address.identity),
              NULL)             customer_name,
       Location_Party_Type_API.Decode(loc_address.party_type) party_type,
       visit_address            visit_address,
       delivery_address         delivery_address,
       primary_address          primary_address,
       position_address         position_address,
       NVL(loc_address.rowid, loc.rowid)   objid,
       to_char(lpad(to_char(loc.rowversion, 'YYYYMMDDHH24MISS'), 2000)) objversion,
       loc.rowkey               objkey
  FROM location_tab loc
  LEFT JOIN location_party_address_tab loc_address
    ON loc.location_id = loc_address.location_id;

@DbViewRowLevelSecurity CustomImplemented
VIEW PARTS_FOR_EQUIPMENT IS
Prompt     = 'Parts For Equipment'   
SELECT 
$IF Component_Purch_SYS.INSTALLED $THEN
   part_no        part_no,
   contract       contract,
   description    description,
   MAINTENANCE_SPARE_API.Get_Description(contract,part_no)  maint_description,
   to_char(rowversion,'YYYYMMDDHH24MISS') objversion,
   rowid                          objid
   FROM purchase_part_tab
   WHERE EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE site = contract)
$ELSIF Component_Invent_SYS.INSTALLED $THEN
   part_no    part_no,
   contract   contract,
   description description, 
   MAINTENANCE_SPARE_API.Get_Description(contract,part_no)  maint_description,
   to_char(rowversion,'YYYYMMDDHH24MISS') objversion,
   rowid                          objid
   FROM  inventory_part_tab i
   WHERE EXISTS (SELECT 1 FROM user_allowed_site_pub WHERE site = contract)
$ELSE
   TO_CHAR(NULL) part_no,
   TO_CHAR(NULL) contract,
   TO_CHAR(NULL) description,
   TO_CHAR(NULL)  maint_description,
   TO_CHAR(NULL) objversion,
   TO_CHAR(NULL)                          objid
     FROM dual 
     WHERE 1=2 
$END;





