-----------------------------------------------------------------------------
--
--  Logical unit: EquipmentSerial
--  Component:    EQUIP
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  140926  SHAFLK  PRSA-3704, Replaced user allowed site checks with an annotation.
--  151029  NRATLK  RPT-79, Added PM Program fields into the Equipment_Serial_Uiv  and Equipment_Serial_History views.
--  151203	AKDELK  STRSA-873, Modified Equipment_Serial_Uiv
--  151221  SeRoLK  RCM-23, Added the field process_class_id to view Equipment_Serial_Uiv.
--  170523  chanlk  STRSA-25288, Added location id TO base VIEW.
--  171221  BHKALK  STRSA-33676, Merged Bug 139370: Added Part_serial_history_tab.rowkey as objkey to EQUIPMENT_SERIAL_HISTORY view. 
--  180911  SHEPLK  SAUXXW4-1632, Modified Equipment_Serial_History view.
--  181130  RUMELK  SAUXXW4-3233, Added has_structure_db, has_connection_db, equipment_main_position_db to Equipment_Serial_Uiv
--  211008  puvelk  AM21R2-2420, RLS implimented.
--  211101  NEKOLK  AM21R2-2960 : EQUIP redesign PARTCA changes : alternate_id obsolete work .
--  060122  DmAlLK  AM21R2-3233, Added cluster_id to Equipment_Serial_Uiv.
-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

@Override
COLUMN Mch_Name IS
   Flags      = 'A---L';

COLUMN Has_Structure IS
   Flags      = 'A----'
   Datatype   = 'STRING(200)'
   Enumeration= 'TranslateBoolean'
   Prompt     = 'Has Structure';

COLUMN Has_Connection IS
   Flags      = 'A----'
   Datatype   = 'STRING(200)'
   Enumeration= 'TranslateBoolean'
   Prompt     = 'Has Connection';

@Override
COLUMN Type IS
   Prompt     = 'Type Designation';

@Override
COLUMN Group_Id IS
   Flags      = 'A-IU-'
   Ref        = 'EquipmentObjGroup';

@Override
COLUMN Cost_Center IS
   Flags      = 'A-IUL'
   Ref        = 'CodeB(company)/NOCHECK';

@Override
COLUMN Object_No IS
   Prompt     = 'Object No'
   Ref        = 'CodeE(company)/NOCHECK';

@Override
COLUMN Category_Id IS
   Prompt     = 'Category'
   Ref        = 'EquipmentObjCategory';

@Override
COLUMN Sup_Mch_Code IS
   Flags      = 'A-I-L'
   Prompt     = 'Belongs to Object ID';

@Override
COLUMN Equipment_Main_Position IS
   Prompt     = 'Equipment Main Position';

COLUMN Obj_Level IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(30)'
   Prompt     = 'Object Level';

@Override
COLUMN Sup_Contract IS
   Flags      = 'A-I-L'
   Prompt     = 'Belongs to Site';

@Override
COLUMN Criticality IS
   Ref        = 'EquipmentCriticality';

@Override
COLUMN Operational_Condition IS
   Flags      = 'AMIUL';

@Override
COLUMN Operational_Status IS
   Flags      = 'AMIUL'
   Datatype   = 'STRING(200)';

@Override
COLUMN Ownership IS
   Flags      = 'A-IU-';

@Override
COLUMN Lu_Name IS
   Flags      = 'A-IU-';

@Override
COLUMN Location_Mch_Code IS
   Flags      = 'A----'
   Ref        = 'EquipmentObject(location_contract)';

@Override
COLUMN Location_Contract IS
   Flags      = 'A----'
   Ref        = 'Site';

@Override
COLUMN From_Mch_Code IS
   Flags      = 'A----'
   Ref        = 'EquipmentObject(from_contract)';

@Override
COLUMN From_Contract IS
   Flags      = 'A----'
   Ref        = 'Site';

@Override
COLUMN To_Mch_Code IS
   Flags      = 'A----'
   Ref        = 'EquipmentObject(to_contract)';

@Override
COLUMN To_Contract IS
   Flags      = 'A----'
   Ref        = 'Site';

@Override
COLUMN Process_Mch_Code IS
   Flags      = 'A----'
   Ref        = 'EquipmentObject(process_contract)';

@Override
COLUMN Process_Contract IS
   Flags      = 'A----'
   Ref        = 'Site';

@Override
COLUMN Pipe_Mch_Code IS
   Flags      = 'A----'
   Ref        = 'EquipmentObject(pipe_contract)';

@Override
COLUMN Pipe_Contract IS
   Flags      = 'A----'
   Ref        = 'Site';

@Override
COLUMN Circuit_Mch_Code IS
   Flags      = 'A----'
   Ref        = 'EquipmentObject(circuit_contract)';

@Override
COLUMN Circuit_Contract IS
   Flags      = 'A----'
   Ref        = 'Site';

@Override
COLUMN Key_Ref IS
   Flags      = 'A-IU-';

@Override
COLUMN Item_Class_Id IS
   Ref        = 'ItemClass';
   
COLUMN Sequence_No IS
   Flags      = 'KMI-L'
   Datatype   = 'NUMBER'
   Prompt     = 'Sequence No';

COLUMN Transaction_Date IS
   Flags      = 'AMI-L'
   Datatype   = 'DATE/DATE'
   Prompt     = 'Transaction Date';

COLUMN Transaction_Description IS
   Flags      = 'AMI--'
   Datatype   = 'STRING(2000)'
   Prompt     = 'Transaction Description';

COLUMN Superior_Part_No IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(25)'
   Prompt     = 'Superior Part No';

COLUMN Superior_Serial_No IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(50)'
   Prompt     = 'Superior Serial No';

COLUMN Order_Type IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(200)'
   Prompt     = 'Order Type'
   Ref        = 'OrderType';

COLUMN Order_No IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(12)'
   Prompt     = 'Order No';

COLUMN Line_No IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(4)'
   Prompt     = 'Line No';

COLUMN Release_No IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(30)'
   Prompt     = 'Release No';

COLUMN Line_Item_No IS
   Flags      = 'A-IU-'
   Datatype   = 'NUMBER'
   Prompt     = 'Line Item No';

COLUMN Current_Position IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(253)'
   Prompt     = 'Current Position';

COLUMN Locked_For_Update IS
   Flags      = 'A-IUL'
   Datatype   = 'STRING(200)'
   Prompt     = 'Locked For Update'
   Ref        = 'SerialPartLocked';

COLUMN History_Purpose IS
   Flags      = 'AMIUL'
   Datatype   = 'STRING(200)'
   Prompt     = 'History Purpose'
   Ref        = 'SerialHistoryPurpose';

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------


-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

@Overtake Base
@SecurityCheck Site.UserAuthorized(a.contract)
VIEW Equipment_Serial IS
   Prompt = 'Equipment Serial'
   Table = 'EQUIPMENT_OBJECT_TAB'
   Objversion = 'ltrim(lpad(to_char(rowversion),2000))'
   Refbase = 'VIEW'
SELECT a.equipment_object_seq         equipment_object_seq,
       a.contract                     contract,
       a.mch_code                     mch_code,
       a.mch_name                     mch_name,
       a.part_no                      part_no,
       a.mch_loc                      mch_loc,
       a.mch_pos                      mch_pos,
       a.mch_doc                      mch_doc,
       b.acquisition_cost             purch_price,
       nvl(b.purchased_date ,a.purch_date)
                                      purch_date,
       nvl(a.warr_exp, b.warranty_expires) warr_exp,
       b.note_text                    note,
       a.info                         info,
       a.data                         data,
       b.installation_date            production_date,
       Site_API.Get_Company(a.contract) company,
       Translate_Boolean_API.Decode(Equipment_Object_API.Has_Structure__(a.contract, a.mch_code)) has_structure,
       Translate_Boolean_API.Decode(Equipment_Object_Conn_API.Has_Connection(a.contract, a.mch_code)) has_connection,
       Client_SYS.Get_Key_Reference('EquipmentObject', 'EQUIPMENT_OBJECT_SEQ', equipment_object_seq) mch_code_key_value,
       Client_SYS.Get_Key_Reference('TypeDesignation', 'TYPE', type) type_key_value,
       mch_serial_no                  serial_no,
       b.manufacturer_no              manufacturer_no,
       b.supplier_no                  vendor_no,
       b.serial_revision              part_rev,
       Equipment_Main_Position_API.Decode(a.main_pos) equipment_main_position,
       a.type                         type,
       a.mch_type                     mch_type,
       a.obj_level                    obj_level,
       a.group_id                     group_id,
       a.cost_center                  cost_center,
       a.object_no                    object_no,
       a.category_id                  category_id,
       Equipment_Object_API.Get_Mch_Code(a.functional_object_seq)    sup_mch_code,
       'EquipmentObject'              lu_name,
       Client_SYS.Get_Key_Reference('EquipmentObject', 'EQUIPMENT_OBJECT_SEQ', equipment_object_seq) key_ref,
       Equipment_Object_API.Get_Contract(a.functional_object_seq)    sup_contract,
       a.criticality                  criticality,
       b.latest_transaction           latest_transaction,
       b.state                        serial_state,
       b.operational_condition        operational_condition,
       b.operational_status           operational_status,
       b.operational_status_db        operational_status_db,
       b.manufactured_date            manufactured_date,
       nvl(b.owning_customer_no,b.owning_vendor_no)           owner,
       b.part_ownership_db            ownership_db,
       Ownership_API.Decode(b.part_ownership_db) ownership,
       Equipment_Object_API.Get_Mch_Code(a.location_object_seq)            location_mch_code,
       Equipment_Object_API.Get_Contract(a.location_object_seq)            location_contract,
       Equipment_Object_API.Get_Mch_Code(a.from_object_seq)                from_mch_code,
       Equipment_Object_API.Get_Contract(a.from_object_seq)                from_contract,
       Equipment_Object_API.Get_Mch_Code(a.to_object_seq)                  to_mch_code,
       Equipment_Object_API.Get_Contract(a.to_object_seq)                  to_contract,
       Equipment_Object_API.Get_Mch_Code(a.process_object_seq)             process_mch_code,
       Equipment_Object_API.Get_Contract(a.process_object_seq)             process_contract,
       Equipment_Object_API.Get_Mch_Code(a.pipe_object_seq)                pipe_mch_code,
       Equipment_Object_API.Get_Contract(a.pipe_object_seq)                pipe_contract,
       Equipment_Object_API.Get_Mch_Code(a.circuit_object_seq)             circuit_mch_code,
       Equipment_Object_API.Get_Contract(a.circuit_object_seq)             circuit_contract,    
       a.location_id                   location_id,
       a.item_class_id                 item_class_id,
       Safe_Access_Code_API.Decode(a.safe_access_code) 
                                       safe_access_code,
       a.safe_access_code              safe_access_code_db,
       a.process_class_id              process_class_id,
       a.not_applicable_set_date       not_applicable_set_date,
       a.not_applicable_set_user       not_applicable_set_user,
       a.not_applicable_reason         not_applicable_reason ,
       a.pm_prog_application_status    pm_prog_application_status,
       a.applied_date                  applied_date,
       a.applied_pm_program_rev        applied_pm_program_rev,
       a.applied_pm_program_id         applied_pm_program_id,
       a.is_geographic_object          is_geographic_object,
       a.is_category_object            is_category_object,
       a.main_pos                      equipment_main_position_db,
       a.rowid                         objid,
       TO_CHAR(a.rowversion) objversion,
       rowkey                        objkey
FROM   equipment_object_tab a, part_serial_catalog b
WHERE  a.part_no = b.part_no
AND    a.mch_serial_no = b.serial_no
AND    a.obj_level IS NULL;

@SecurityCheck Site.UserAuthorized(a.contract)
VIEW Equipment_Serial_Lov IS
   Prompt = 'Equipment Serial'
   Contract.Flags = 'P---L'
   Mch_Code.Flags = 'K---L'
   Operational_Condition.Flags = 'A---L'
SELECT equipment_object_seq           equipment_object_seq,
       contract                       contract,
       mch_code                       mch_code,
       mch_name                       mch_name,
       operational_condition          operational_condition,
       objid                          objid,
       objversion                     objversion,
       Objkey                         objkey
FROM   EQUIPMENT_SERIAL a;

@SecurityCheck Site.UserAuthorized(a.contract)
VIEW Equipment_Serial_History IS
   Prompt = 'Equipment Serial'
   Part_No.Flags = 'PMI--'
   Serial_No.Flags = 'PMI--'
   Serial_No.Datatype = 'STRING(50)'
   Serial_No.Ref = 'PartSerialCatalog(PART_NO)'
   Contract.Flags = 'AMI-L'
   Mch_Code.Flags = 'AMI-L'
   Operational_Condition.Flags = 'A-IUL'
   Operational_Status.Flags = 'A-IUL'
SELECT DISTINCT
       b.part_no                        part_no,
       b.serial_no                      serial_no,
       b.sequence_no                    sequence_no,
       a.equipment_object_seq           equipment_object_seq,
       a.contract                       contract,
       a.mch_code                       mch_code,
       b.transaction_date               transaction_date,
       b.transaction_description        transaction_description,
       b.superior_part_no               superior_part_no,
       b.superior_serial_no             superior_serial_no,
       Order_Type_API.Decode(b.order_type)  order_type,
       b.order_no                       order_no,
       b.line_no                        line_no,
       b.release_no                     release_no,
       b.line_item_no                   line_item_no,
       b.operational_condition          operational_condition_db,
       b.locked_for_update              locked_for_update_db,
       b.history_purpose                history_purpose_db,
       PART_SERIAL_CATALOG_API.Finite_State_Decode__(b.current_position)   current_position,
       Serial_Operational_Cond_API.Decode(b.operational_condition)   operational_condition,
       Serial_Operational_Status_API.Decode(b.operational_status)    operational_status,
       Serial_Part_Locked_API.Decode(b.locked_for_update)            locked_for_update,
       Serial_History_Purpose_API.Decode(b.history_purpose)          history_purpose,
       a.applied_pm_program_id           applied_pm_program_id,
       a.applied_pm_program_rev          applied_pm_program_rev,
       a.applied_date                    applied_date,
       b.operational_status              operational_status_db,
       a.pm_prog_application_status     pm_prog_application_status,
       a.not_applicable_reason          not_applicable_reason,
       a.not_applicable_set_user        not_applicable_set_user,
       a.not_applicable_set_date        not_applicable_set_date,
       b.user_created                   user_created,
       b.rowid                          objid,
       TO_CHAR(b.rowversion) objversion,
       b.rowkey                         objkey,
       a.rowtype                        objtype
FROM   part_serial_history_tab b, equipment_object_tab a 
WHERE  b.serial_no = a.mch_serial_no
AND    b.part_no = a.part_no;

@SecurityCheck Site.UserAuthorized(a.contract)
VIEW Equipment_Serial_Uiv IS
   Prompt = 'Equipment Serial'
   Part_No.Ref = 'PartCatalog'
   Has_Structure.Datatype = 'STRING(10)'
   has_structure_db.Flags = 'A----'
   has_structure_db.Datatype = 'STRING(5)'
   Has_Connection.Datatype = 'STRING(10)'
   has_connection_db.Flags = 'A----'
   has_connection_db.Datatype = 'STRING(5)'
   Mch_Code_Key_Value.Prompt = 'Mch Code Key Value'
   Type_Key_Value.Prompt = 'Type Key Value'
   Cost_Center.Ref = 'CodeB(Company)'
   Object_No.Ref = 'CodeE(Company)'
   Equipment_Main_Position.Datatype = 'STRING(20)'
   Lu_Name.Prompt = 'Lu name'
   Key_Ref.Prompt = 'Key ref'
   Process_Class_Id.Ref = 'ProcessClass'
SELECT equipment_object_seq               equipment_object_seq,
       functional_object_seq              functional_object_seq,
       contract                           contract,
       mch_code                           mch_code,
       a.mch_name                         mch_name,
       a.part_no                          part_no,
       a.mch_loc                          mch_loc,
       a.mch_pos                          mch_pos,
       a.mch_doc                          mch_doc,
       b.acquisition_cost                 purch_price,
       nvl(b.purchased_date,a.purch_date) purch_date,
       nvl(a.warr_exp,b.warranty_expires) warr_exp,
       b.note_text                        note,
       a.info                             info,
       a.data                             data,
       b.installation_date                production_date,
       Site_API.Get_Company(a.contract)   company,
       Translate_Boolean_API.Decode(Equipment_Object_API.Has_Structure__(a.contract, a.mch_code))
                                          has_structure,
       Equipment_Object_API.Has_Structure__(a.contract, a.mch_code)      has_structure_db,
       Translate_Boolean_API.Decode(Equipment_Object_Conn_API.Has_Connection(a.contract, a.mch_code))
                                          has_connection,
       Equipment_Object_Conn_API.Has_Connection(a.contract, a.mch_code)          has_connection_db,
       Client_SYS.Get_Key_Reference('EquipmentObject', 'EQUIPMENT_OBJECT_SEQ', equipment_object_seq)
                                          mch_code_key_value,
       Client_SYS.Get_Key_Reference('TypeDesignation', 'TYPE', type)
                                          type_key_value,
       mch_serial_no                      serial_no,
       b.manufacturer_no                  manufacturer_no,
       b.supplier_no                      vendor_no,
       b.serial_revision                  part_rev,
       Equipment_Main_Position_API.Decode(a.main_pos)
                                          equipment_main_position,
       a.main_pos                         equipment_main_position_db,
       a.type                             type,
       a.mch_type                         mch_type,
       a.obj_level                        obj_level,
       a.group_id                         group_id,
       a.cost_center                      cost_center,
       a.object_no                        object_no,
       a.category_id                      category_id,
       Equipment_Object_API.Get_Mch_Code(functional_object_seq)  sup_mch_code,
       'EquipmentObject'                  lu_name,
       Client_SYS.Get_Key_Reference('EquipmentObject', 'EQUIPMENT_OBJECT_SEQ', equipment_object_seq)
                                          key_ref,
       Equipment_Object_API.Get_Contract(functional_object_seq)  sup_contract,
       a.criticality                      criticality,
       CASE
         WHEN a.functional_object_seq IS NOT NULL 
              THEN equipment_serial_api.Get_Obj_Transaction(a.functional_object_seq)
         ELSE
         b.latest_transaction
       End 
                                          latest_transaction,
       b.state                            serial_state,
       b.objstate                         serial_state_db,
       b.operational_condition            operational_condition,
       b.operational_status               operational_status,
       b.operational_status_db            operational_status_db,
       b.manufactured_date                manufactured_date,
       nvl(b.owning_customer_no,b.owning_vendor_no)
                                          owner,
       b.part_ownership_db                ownership_db,
       Ownership_API.Decode(b.part_ownership_db)
                                          ownership,
       Equipment_Object_API.Get_Mch_Code(a.location_object_seq)            location_mch_code,
       Equipment_Object_API.Get_Contract(a.location_object_seq)            location_contract,
       Equipment_Object_API.Get_Mch_Code(a.from_object_seq)                from_mch_code,
       Equipment_Object_API.Get_Contract(a.from_object_seq)                from_contract,
       Equipment_Object_API.Get_Mch_Code(a.to_object_seq)                  to_mch_code,
       Equipment_Object_API.Get_Contract(a.to_object_seq)                  to_contract,
       Equipment_Object_API.Get_Mch_Code(a.process_object_seq)             process_mch_code,
       Equipment_Object_API.Get_Contract(a.process_object_seq)             process_contract,
       Equipment_Object_API.Get_Mch_Code(a.pipe_object_seq)                pipe_mch_code,
       Equipment_Object_API.Get_Contract(a.pipe_object_seq)                pipe_contract,
       Equipment_Object_API.Get_Mch_Code(a.circuit_object_seq)             circuit_mch_code,
       Equipment_Object_API.Get_Contract(a.circuit_object_seq)             circuit_contract,    
       a.location_id                   location_id,
       a.item_class_id                 item_class_id,       
       a.applied_pm_program_id           applied_pm_program_id,
       a.applied_pm_program_rev          applied_pm_program_rev,
       a.applied_date                    applied_date,
       a.pm_prog_application_status     pm_prog_application_status,    
       a.not_applicable_reason          not_applicable_reason,
       a.not_applicable_set_user        not_applicable_set_user,
       a.not_applicable_set_date        not_applicable_set_date,
       b.operational_condition_db       operational_condition_db,
       Safe_Access_Code_API.Decode(a.safe_access_code) 
                                          safe_access_code,
       a.safe_access_code               safe_access_code_db,
       process_class_id               process_class_id,
       a.cluster_id                    cluster_id,
       a.rowid                            objid,
       TO_CHAR(a.rowversion)
                                          objversion,
       rowkey                                objkey,
       rowtype                               objtype
FROM   equipment_object_tab a, part_serial_catalog b
WHERE  a.part_no = b.part_no
AND    a.mch_serial_no = b.serial_no
AND    a.obj_level IS NULL;

VIEW WORK_TASK_HIST_UIV IS
   source_object_site.Flags = 'A----'
   source_object_site.DataType = 'STRING(5)/UPPERCASE'
   source_object_site.Prompt = 'Source Object Site'
   source_object_id.Flags = 'A----'
   source_object_id.Prompt = 'Source Object ID'
   source_object_id.DataType = 'STRING(200)/UPPERCASE'
   source_object_description.Flags = 'A----'
   source_object_description.DataType = 'STRING(200)'
   source_object_description.Prompt = 'Source Object Description'
   actual_object_site.Flags = 'A----'
   actual_object_site.DataType = 'STRING(5)/UPPERCASE'
   actual_object_site.Prompt = 'Actual Object Site'
   actual_object_id.Flags = 'A----'
   actual_object_id.Prompt = 'Actual Object ID'
   actual_object_id.DataType = 'STRING(200)/UPPERCASE'
   actual_object_description.Flags = 'A----'
   actual_object_description.DataType = 'STRING(200)'
   actual_object_description.Prompt = 'Actual Object Description'
   reported_object_site.Flags = 'A----'
   reported_object_site.DataType = 'STRING(5)/UPPERCASE'
   reported_object_site.Prompt = 'Reported Object Site'
   reported_object_id.Flags = 'A----'
   reported_object_id.Prompt = 'Reported Object ID'
   reported_object_id.DataType = 'STRING(200)/UPPERCASE'
   reported_object_description.Flags = 'A----'
   reported_object_description.DataType = 'STRING(200)'
   reported_object_description.Prompt = 'Reported Object Description'
   cust_warr_type.Prompt = 'Customer Warranty Type'
   sup_warr_type.Prompt = 'Supplier Warranty Type'
   need_sign_off.Flags = 'A----'
   need_sign_off.Datatype = 'STRING(5)'
   performed_sign_off.Flags = 'A----'
   performed_sign_off.Datatype = 'STRING(5)'
   active_work_assignments.Flags = 'A----'
   active_work_assignments.Datatype = 'STRING(5)'
   critical_work.Flags = 'A----'
   critical_work.Datatype = 'STRING(5)'
   progress.Flags = 'A----'
   progress.DataType = 'NUMBER'
   pm_group_id.Prompt = 'PM Group ID'
   pm_group_id.Ref = 'PmRoundDefinition'
   item_class_source.Prompt = 'Item Class Source'
   item_class_source.Flags = 'A----'
   item_class_source.Datatype = 'STRING(200)'
SELECT
$IF Component_WO_SYS.INSTALLED $THEN
       a.task_seq                       task_seq,
       a.order_no                       order_no,
       a.wo_no                          wo_no,
       a.site                           site,
       Site_API.Get_Company(a.site)     company,
       a.organization_site              organization_site,
       a.organization_id                organization_id,
       a.priority_id                    priority_id,
       a.work_type_id                   work_type_id,
       a.description                    description,
       a.long_description               long_description,
       a.created_by                     created_by,
       a.created_date                   created_date,
       a.prepared_by                    prepared_by,
       a.reported_by                    reported_by,
       a.reported_date                  reported_date,
       a.mpb_latest_update              mpb_latest_update,
       a.planned_start                  planned_start,
       a.planned_finish                 planned_finish,
       a.duration                       duration,
       a.actual_start                   actual_start,
       a.actual_finish                  actual_finish,
       a.earliest_start                 earliest_start,
       a.latest_start                   latest_start,
       a.latest_finish                  latest_finish,
       a.fixed_start                    fixed_start,
       a.line_no                        line_no,
       Jt_Task_Utility_API.Get_Sla_Order_For_Task(a.task_seq) sla_order_no,
       Jt_Task_Utility_API.Get_Order_Line_For_Task(a.task_seq) sla_order_line_no,
       a.exclude_from_scheduling       exclude_from_scheduling_db,
       a.remark                         remark,
       a.internal_remark                internal_remark,
       a.action_taken                   action_taken,
       a.cancel_cause                   cancel_cause,
       a.source_connection_lu_name      source_connection_lu_name_db,
       a.source_connection_rowkey       source_connection_rowkey,
       Jt_Object_Conn_Utility_API.Get_Object_Site(a.source_connection_lu_name, a.source_connection_rowkey) source_object_site,
       Jt_Object_Conn_Utility_API.Get_Object_Id(a.source_connection_lu_name, a.source_connection_rowkey) source_object_id,
       Jt_Object_Conn_Utility_API.Get_Object_Description(a.source_connection_lu_name, a.source_connection_rowkey) source_object_description,
       a.reported_connection_type       reported_connection_type_db,
       a.reported_obj_conn_lu_name      reported_obj_conn_lu_name_db,
       a.reported_obj_conn_rowkey       reported_obj_conn_rowkey,
       Jt_Object_Conn_Utility_API.Get_Object_Site(a.reported_obj_conn_lu_name, a.reported_obj_conn_rowkey) reported_object_site,
       Jt_Object_Conn_Utility_API.Get_Object_Id(a.reported_obj_conn_lu_name, a.reported_obj_conn_rowkey) reported_object_id,
       Jt_Object_Conn_Utility_API.Get_Object_Description(a.reported_obj_conn_lu_name, a.reported_obj_conn_rowkey) reported_object_description,
       a.actual_connection_type         actual_connection_type_db,
       a.actual_obj_conn_lu_name        actual_obj_conn_lu_name_db,
       a.actual_obj_conn_rowkey         actual_obj_conn_rowkey,
       Jt_Object_Conn_Utility_API.Get_Equipment_Object_Seq(a.actual_obj_conn_lu_name, a.actual_obj_conn_rowkey) actual_object_seq,
       Jt_Object_Conn_Utility_API.Get_Object_Site(a.actual_obj_conn_lu_name, a.actual_obj_conn_rowkey) actual_object_site,
       Jt_Object_Conn_Utility_API.Get_Object_Id(a.actual_obj_conn_lu_name, a.actual_obj_conn_rowkey) actual_object_id,
       Jt_Object_Conn_Utility_API.Get_Object_Description(a.actual_obj_conn_lu_name, a.actual_obj_conn_rowkey) actual_object_description,
       a.operational_status_id          operational_status_id,
       a.test_point_seq                 test_point_seq,
       a.error_cause_long               error_cause_long,
       a.error_type                     error_type,
       a.error_class                    error_class,
       a.error_discover_code            error_discover_code,
       a.error_symptom                  error_symptom,
       a.item_class_id                  item_class_id,
       Sfm_Util_API.Get_Ic_Source_Dyn_Ref(a.item_class_id,a.actual_obj_conn_lu_name,a.actual_obj_conn_rowkey, Jt_Task_Linear_Asset_API.Get_Linast_Segment_Sq(a.task_seq, 'ACTUAL_CONNECTION'), Jt_Task_Linear_Asset_API.Get_Linast_Segment_Rev_No(a.task_seq, 'ACTUAL_CONNECTION'))  item_class_source,  -- displayed in the client
       a.error_cause                    error_cause,
       a.item_class_function            item_class_function,
       a.failing_component              failing_component,
       a.performed_action_id            performed_action_id,
       a.performed_work                 performed_work,
       a.customer_no                    customer_no,
       a.vendor_no                      vendor_no,
       a.contract_id                    contract_id,
       a.work_stage_id                  work_stage_id,
       a.contact                        contact,
       a.contact_phone_no               contact_phone_no,
       a.e_mail                         e_mail,
       a.cust_order_type                cust_order_type,
       a.currency_code                  currency_code,
       a.delivery_address               delivery_address,
       a.cust_order_no                  cust_order_no,
       b.auth_required                  auth_required_db,
       b.has_srv_quo                    has_srv_quo_db,
       a.authorize_code                 authorize_code,
       a.reference_no                   reference_no,
       a.cust_warr_type                 cust_warr_type,
       a.cust_warranty                  cust_warranty,
       a.obj_cust_warranty              obj_cust_warranty,
       a.sup_warr_type                  sup_warr_type,
       a.sup_warranty                   sup_warranty,
       a.obj_sup_warranty               obj_sup_warranty,
       a.contractor_owner               contractor_owner, 
       a.job_id                         job_id,
       a.maint_team_site                maint_team_site,
       a.team_id                        team_id,
       Jt_Task_Utility_API.Needs_Sign_Off(a.task_seq, NULL)        need_sign_off,
       Jt_Task_Utility_API.Sign_Off_Performed(a.task_seq, NULL)    performed_sign_off, 
       Jt_Execution_Instance_API.Has_Active_Execution_Instances(a.task_seq) active_work_assignments,
       a.pre_accounting_id              pre_accounting_id,
       a.note_id                        note_id,
       Jt_Task_API.Is_Critical_Task(a.site,a.work_type_id, a.priority_id,NVL(a.actual_obj_conn_lu_name,a.reported_obj_conn_lu_name), NVL(a.actual_obj_conn_rowkey,a.reported_obj_conn_rowkey)) critical_work,  -- displayed in the client
       a.master_task_seq                master_task_seq,
       a.duplicate_type                 duplicate_type_db,
       b.progress                       progress,
       b.on_hold                        on_hold_db,
       a.cost_code                      cost_code,
       a.source_ref1                    source_ref1,
       a.source_ref2                    source_ref2,
       a.source_ref3                    source_ref3,
       a.source_ref4                    source_ref4,
       a.quotation_no                   quotation_no,
       a.quotation_rev                  quotation_rev,
       a.quo_task_seq                   quo_task_seq,
       a.srv_request_scope_id           srv_request_scope_id,
       $IF Component_REQMGT_SYS.INSTALLED $THEN
       Srv_Request_Scope_API.Get_Req_Id(srv_request_scope_id)     srv_req_id,
       $ELSE
          NULL srv_req_id,
       $END   
       a.mobile_task_id                 mobile_task_id,
       a.inspection_note                inspection_note,
       a.generate_note                  generate_note,
       a.pm_group_id                    pm_group_id,
       a.changed_date                   changed_date,
       NVL(a.allow_multiple_visits, 'FALSE')          allow_multiple_visits_db,
       a.min_visit_duration             min_visit_duration,
       a.rowid                          objid,
       a.rowstate                       objstate,
       Jt_Task_API.Finite_State_Events__(a.rowstate) objevents,
       Jt_Task_API.Finite_State_Decode__(a.rowstate) state,
       a.rowkey                         objkey,
       ltrim(lpad(to_char(a.rowversion),2000)) objversion
FROM   jt_task_tab a, jt_task_cached_data_tab b
WHERE  a.task_seq = b.task_seq(+)
AND    (a.duplicate_type = 'MASTER' OR a.duplicate_type IS NULL)
$ELSE
       TO_NUMBER(NULL)           task_seq,
       TO_NUMBER(NULL)           wo_no,
       TO_NUMBER(NULL)           order_no,
       TO_CHAR(NULL)             site,
       TO_CHAR(NULL)             company,
       TO_CHAR(NULL)             organization_site,
       TO_CHAR(NULL)             organization_id,
       TO_CHAR(NULL)             priority_id,
       TO_CHAR(NULL)             work_type_id,
       TO_CHAR(NULL)             description,
       TO_CHAR(NULL)             long_description,
       TO_CHAR(NULL)             created_by,
       TO_CHAR(NULL)             created_date,
       TO_CHAR(NULL)             prepared_by,
       TO_CHAR(NULL)             reported_by,
       TO_TIMESTAMP(NULL)        reported_date,
       TO_TIMESTAMP(NULL)        mpb_latest_update,
       TO_TIMESTAMP(NULL)        planned_start,
       TO_TIMESTAMP(NULL)        planned_finish,
       TO_NUMBER(NULL)           duration,
       TO_TIMESTAMP(NULL)        actual_start,
       TO_TIMESTAMP(NULL)        actual_finish,
       TO_TIMESTAMP(NULL)        earliest_start,
       TO_TIMESTAMP(NULL)        latest_start,
       TO_TIMESTAMP(NULL)        latest_finish,
       TO_TIMESTAMP(NULL)        fixed_start,
       TO_NUMBER(NULL)           line_no,
       TO_NUMBER(NULL)           sla_order_no,
       TO_NUMBER(NULL)           sla_order_line_no,
       TO_CHAR(NULL)             exclude_from_scheduling_db,
       TO_CHAR(NULL)             remark,
       TO_CHAR(NULL)             internal_remark,
       TO_CHAR(NULL)             action_taken,
       TO_CHAR(NULL)             cancel_cause,
       TO_CHAR(NULL)             source_connection_lu_name_db,
       TO_CHAR(NULL)             source_connection_rowkey,
       TO_CHAR(NULL)             source_object_site,
       TO_CHAR(NULL)             source_object_id,
       TO_CHAR(NULL)             source_object_description,
       TO_CHAR(NULL)             reported_connection_type_db,
       TO_CHAR(NULL)             reported_obj_conn_lu_name_db,
       TO_CHAR(NULL)             reported_obj_conn_rowkey,
       TO_CHAR(NULL)             reported_object_site,
       TO_CHAR(NULL)             reported_object_id,
       TO_CHAR(NULL)             reported_object_description,
       TO_CHAR(NULL)             actual_connection_type_db,
       TO_CHAR(NULL)             actual_obj_conn_lu_name_db,
       TO_CHAR(NULL)             actual_obj_conn_rowkey,
       TO_NUMBER(NULL)           actual_object_seq,
       TO_CHAR(NULL)             actual_object_site,
       TO_CHAR(NULL)             actual_object_id,
       TO_CHAR(NULL)             actual_object_description,
       TO_CHAR(NULL)             operational_status_id,
       TO_NUMBER(NULL)           test_point_seq,
       TO_CHAR(NULL)             error_cause_long,
       TO_CHAR(NULL)             error_type,
       TO_CHAR(NULL)             error_class,
       TO_CHAR(NULL)             error_discover_code,
       TO_CHAR(NULL)             error_symptom,
       TO_CHAR(NULL)             item_class_id,
       TO_CHAR(NULL)             item_class_source,  
       TO_CHAR(NULL)             error_cause,
       TO_CHAR(NULL)             item_class_function,
       TO_CHAR(NULL)             failing_component,
       TO_CHAR(NULL)             performed_action_id,
       TO_CHAR(NULL)             performed_work,
       TO_CHAR(NULL)             customer_no,
       TO_CHAR(NULL)             vendor_no,
       TO_CHAR(NULL)             contract_id,
       TO_CHAR(NULL)             work_stage_id,
       TO_CHAR(NULL)             contact,
       TO_CHAR(NULL)             contact_phone_no,
       TO_CHAR(NULL)             e_mail,
       TO_CHAR(NULL)             cust_order_type,
       TO_CHAR(NULL)             currency_code,
       TO_CHAR(NULL)             delivery_address,
       TO_CHAR(NULL)             cust_order_no,
       TO_CHAR(NULL)             auth_required_db,
       TO_CHAR(NULL)             has_srv_quo_db,
       TO_CHAR(NULL)             authorize_code,
       TO_CHAR(NULL)             reference_no,
       TO_CHAR(NULL)             cust_warr_type,
       TO_CHAR(NULL)             cust_warranty,
       TO_CHAR(NULL)             obj_cust_warranty,
       TO_CHAR(NULL)             sup_warr_type,
       TO_CHAR(NULL)             sup_warranty,
       TO_CHAR(NULL)             obj_sup_warranty,
       TO_CHAR(NULL)             contractor_owner, 
       TO_CHAR(NULL)             job_id,
       TO_CHAR(NULL)             maint_team_site,
       TO_CHAR(NULL)             team_id,
       TO_CHAR(NULL)             need_sign_off,
       TO_CHAR(NULL)             performed_sign_off, 
       TO_CHAR(NULL)             active_work_assignments,
       TO_CHAR(NULL)             pre_accounting_id,
       TO_CHAR(NULL)             note_id,
       TO_CHAR(NULL)             critical_work,  
       TO_NUMBER(NULL)           master_task_seq,
       TO_CHAR(NULL)             duplicate_type_db,
       TO_NUMBER(NULL)           progress,
       TO_CHAR(NULL)             on_hold_db,
       TO_CHAR(NULL)             cost_code,
       TO_CHAR(NULL)             source_ref1,
       TO_CHAR(NULL)             source_ref2,
       TO_CHAR(NULL)             source_ref3,
       TO_CHAR(NULL)             source_ref4,
       TO_CHAR(NULL)             quotation_no,
       TO_NUMBER(NULL)           quotation_rev,
       TO_NUMBER(NULL)           quo_task_seq,
       TO_NUMBER(NULL)           srv_request_scope_id,
       TO_CHAR(NULL)             srv_req_id,
       TO_CHAR(NULL)             mobile_task_id,
       TO_CHAR(NULL)             inspection_note,
       TO_CHAR(NULL)             generate_note,
       TO_CHAR(NULL)             pm_group_id,
       TO_TIMESTAMP(NULL)        changed_date,
       TO_CHAR(NULL)             allow_multiple_visits_db,
       TO_NUMBER(NULL)           min_visit_duration,
       TO_CHAR(NULL)             objid,
       TO_CHAR(NULL)             objstate,
       TO_CHAR(NULL)             objevents,
       TO_CHAR(NULL)             state,
       TO_CHAR(NULL)             objkey,
       TO_NUMBER(NULL)           objversion
FROM dual
WHERE 1=2
$END;

VIEW WORK_TASK_STEP_HIST_UIV IS
   object_seq.Flags = 'A----'
   object_seq.Prompt = 'Object Seq'
   object_seq.DataType = 'NUMBER'
   object_site.Flags = 'A----'
   object_site.DataType = 'STRING(5)/UPPERCASE'
   object_site.Prompt = 'Object Site'
   object_id.Flags = 'A----'
   object_id.Prompt = 'Object ID'
   object_id.DataType = 'STRING(200)/UPPERCASE'
   object_description.Flags = 'A----'
   object_description.DataType = 'STRING(200)'
   object_description.Prompt = 'Object Description'
   source_object_site.Flags = 'A----'
   source_object_site.DataType = 'STRING(5)/UPPERCASE'
   source_object_site.Prompt = 'Source Object Site'
   source_object_id.Flags = 'A----'
   source_object_id.Prompt = 'Source Object ID'
   source_object_id.DataType = 'STRING(200)/UPPERCASE'
   source_object_description.Flags = 'A----'
   source_object_description.DataType = 'STRING(200)'
   source_object_description.Prompt = 'Source Object Description'
SELECT
$IF Component_WO_SYS.INSTALLED $THEN
       task_seq                       task_seq,
       task_step_seq                  task_step_seq,
       order_no                       order_no,
       created_by                     created_by,
       created_date                   created_date,
       description                    description,
       note_id                        note_id,
       remark                         remark,
       cancel_cause                   cancel_cause,
       Maint_Connection_Type_API.Decode(object_connection_type) object_connection_type,
       object_connection_type         object_connection_type_db,
       Jt_Connected_Object_API.Decode(object_connection_lu_name) object_connection_lu_name,
       object_connection_lu_name      object_connection_lu_name_db,
       object_connection_rowkey       object_connection_rowkey,
       Jt_Connected_Object_API.Decode(source_connection_lu_name) source_connection_lu_name,
       source_connection_lu_name      source_connection_lu_name_db,
       source_connection_rowkey       source_connection_rowkey,
       Jt_Object_Conn_Utility_API.Get_Object_Site(source_connection_lu_name, source_connection_rowkey) source_object_site,
       Jt_Object_Conn_Utility_API.Get_Object_Id(source_connection_lu_name, source_connection_rowkey) source_object_id,
       Jt_Object_Conn_Utility_API.Get_Object_Description(source_connection_lu_name, source_connection_rowkey) source_object_description,
       rowstate                       objstate,
       Jt_Task_Step_API.Finite_State_Events__(rowstate)                     objevents,
       Jt_Task_Step_API.Finite_State_Decode__(rowstate)                         state,
       rowkey                         objkey,
       Jt_Object_Conn_Utility_API.Get_Equipment_Object_Seq(object_connection_lu_name, object_connection_rowkey) object_seq,
       Jt_Object_Conn_Utility_API.Get_Object_Site(object_connection_lu_name, object_connection_rowkey) object_site,
       Jt_Object_Conn_Utility_API.Get_Object_Id(object_connection_lu_name, object_connection_rowkey) object_id,
       Jt_Object_Conn_Utility_API.Get_Object_Description(object_connection_lu_name, object_connection_rowkey) object_description,
       source_ref1                    source_ref1,
       source_ref2                    source_ref2,
       source_ref3                    source_ref3,
       source_ref4                    source_ref4,
       inspection_note                inspection_note,
       generate_note                  generate_note,
       ltrim(lpad(to_char(rowversion),2000))                    objversion,
       changed_date                   changed_date,
       rowid                          objid
FROM   jt_task_step_tab
$ELSE
       TO_NUMBER(NULL)           task_seq,
       TO_NUMBER(NULL)           task_step_seq,
       TO_NUMBER(NULL)           order_no,
       TO_CHAR(NULL)             created_by,
       TO_TIMESTAMP(NULL)        created_date,
       TO_CHAR(NULL)             description,
       TO_NUMBER(NULL)           note_id,
       TO_CHAR(NULL)             remark,
       TO_CHAR(NULL)             cancel_cause,
       TO_CHAR(NULL)             object_connection_type,
       TO_CHAR(NULL)             object_connection_type_db,
       TO_CHAR(NULL)             object_connection_lu_name,
       TO_CHAR(NULL)             object_connection_lu_name_db,
       TO_CHAR(NULL)             object_connection_rowkey,
       TO_CHAR(NULL)             source_connection_lu_name,
       TO_CHAR(NULL)             source_connection_lu_name_db,
       TO_CHAR(NULL)             source_connection_rowkey,
       TO_CHAR(NULL)             source_object_site,
       TO_CHAR(NULL)             source_object_id,
       TO_CHAR(NULL)             source_object_description,
       TO_CHAR(NULL)             objstate,
       TO_CHAR(NULL)             objevents,
       TO_CHAR(NULL)             state,
       TO_CHAR(NULL)             objkey,
       TO_NUMBER(NULL)           object_seq,
       TO_CHAR(NULL)             object_site,
       TO_CHAR(NULL)             object_id,
       TO_CHAR(NULL)             object_description,
       TO_CHAR(NULL)             source_ref1,
       TO_CHAR(NULL)             source_ref2,
       TO_CHAR(NULL)             source_ref3,
       TO_CHAR(NULL)             source_ref4,
       TO_CHAR(NULL)             inspection_note,
       TO_CHAR(NULL)             generate_note,
       TO_NUMBER(NULL)           objversion,
       TO_TIMESTAMP(NULL)        changed_date,
       TO_CHAR(NULL)             objid
FROM dual
WHERE 1=2
$END;