-----------------------------------------------------------------------------
--
--  Logical unit: ObjectStructureHandling
--  Component:    EQUIP
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  181018  CLEKLK  SAUXXW4-1248, Added Get_Search_String___
--  210105  DEEKLK  AM2020R1-7134, moved Get_Mch_Name___() to fragment MoveFunctionalObjectDialog.
-----------------------------------------------------------------------------

layer Core;

PROCEDURE Set_In_Operation___ (
	key_ IN Equipment_Object_Key )   
IS
BEGIN
   Equipment_Object_API.Set_In_Operation(key_.contract, key_.mch_code);
END Set_In_Operation___;

PROCEDURE Set_Out_Of_Operation___ (
	key_ IN Equipment_Object_Key )   
IS
BEGIN
   Equipment_Object_API.Set_Out_Of_Operation(key_.contract, key_.mch_code);
END Set_Out_Of_Operation___;

PROCEDURE Set_Scrapped___ (
	key_ IN Equipment_Object_Key )   
IS
BEGIN
   Equipment_Object_API.Set_Scrapped(key_.contract, key_.mch_code);
END Set_Scrapped___;

PROCEDURE Set_In_Operation___ (
   key_ IN Child_Equipment_Object_Key ) 
IS
   
BEGIN
   Equipment_Object_API.Set_In_Operation(key_.contract, key_.mch_code);
END Set_In_Operation___;

PROCEDURE Set_Out_Of_Operation___ (
	key_ IN Child_Equipment_Object_Key )   
IS
BEGIN
   Equipment_Object_API.Set_Out_Of_Operation(key_.contract, key_.mch_code);
END Set_Out_Of_Operation___;

PROCEDURE Set_Scrapped___ (
	key_ IN Child_Equipment_Object_Key )   
IS
BEGIN
   Equipment_Object_API.Set_Scrapped(key_.contract, key_.mch_code);
END Set_Scrapped___;


FUNCTION Get_Object_Description___(
   part_no_ IN VARCHAR2 )  RETURN VARCHAR2
IS
   
BEGIN
  RETURN Part_Catalog_API.Get_Description(part_no_);
END Get_Object_Description___;

FUNCTION Get_Company_Id___(
   contract_ IN VARCHAR2 )  RETURN VARCHAR2
IS
   
BEGIN
   RETURN Site_API.Get_Company(contract_);
END Get_Company_Id___;

FUNCTION Get_Search_String___(
   key_list_ IN VARCHAR2 ) RETURN VARCHAR2
IS   
   dummy_number_       NUMBER;
   string_tab_         Utility_SYS.STRING_TABLE;
   mch_code_           VARCHAR2(100);
   contract_           VARCHAR2(25);
   search_string_      VARCHAR2(32000);
BEGIN
   Utility_SYS.Tokenize(key_list_, ';', string_tab_, dummy_number_);
   
   IF (string_tab_.COUNT > 0) THEN
      FOR i_ IN string_tab_.FIRST..string_tab_.LAST LOOP
         contract_ := Client_SYS.Get_Key_Reference_Value(string_tab_(i_), 'CONTRACT_CONSIST') ;
         mch_code_  := Client_SYS.Get_Key_Reference_Value(string_tab_(i_), 'MCH_CODE_CONSIST') ;
         
         IF (search_string_ IS NOT NULL) THEN
            search_string_ := search_string_ || ' or ';
         END IF;
         search_string_ :=  search_string_ ||'MchCode eq '  || CHR(39) || mch_code_ || CHR(39) ||' and Contract eq ' || CHR(39) || contract_ || CHR(39);   
      END LOOP;
   END IF;
   RETURN search_string_;
END Get_Search_String___;

FUNCTION Get_Cost_Center_View___(
   contract_ IN VARCHAR2 )  RETURN VARCHAR2
IS
   
BEGIN
   RETURN Equipment_Object_Api.Get_Code_Part(contract_, 'CostCenter');
END Get_Cost_Center_View___;

FUNCTION Get_Parent_Data___(
   sup_contract_ IN VARCHAR2,
   sup_mch_code_ IN VARCHAR2 )  RETURN Get_Parent_Detail_Return_Rec
IS
   rec_ Get_Parent_Detail_Return_Rec;
BEGIN
   rec_.group_id := Equipment_Object_API.Get_Group_Id(sup_contract_,sup_mch_code_);
   rec_.cost_center := Equipment_Object_API.Get_Cost_Center(sup_contract_,sup_mch_code_);
   rec_.mch_loc := Equipment_Object_API.Get_Mch_Loc(sup_contract_,sup_mch_code_);
   rec_.mch_pos := Equipment_Object_API.Get_Mch_Pos(sup_contract_,sup_mch_code_);
   RETURN rec_;
END Get_Parent_Data___;

FUNCTION Get_Mch_Type___(
   type_ IN VARCHAR2 ) RETURN VARCHAR2
IS
   
BEGIN
  RETURN  TYPE_DESIGNATION_API.Get_Mch_Type( type_);
END Get_Mch_Type___;


FUNCTION Get_Is_Serial_Tr___(
   part_no_ IN VARCHAR2 )  RETURN VARCHAR2
IS
   
BEGIN
     RETURN PART_CATALOG_API.Get_Rcpt_Issue_Serial_Track_Db(part_no_);
END Get_Is_Serial_Tr___;

FUNCTION Get_Connected_Obj_String___ (
   mch_code_ IN VARCHAR2,
   contract_ IN VARCHAR2) RETURN VARCHAR2
IS 
   number_of_connections_        NUMBER;
   contract_consist_             VARCHAR2(2000);
   mch_code_consist_             VARCHAR2(2000);
   search_string_                VARCHAR2(32000);
BEGIN 
   Equipment_Object_Conn_API.Count_Connections(number_of_connections_,contract_consist_, mch_code_consist_, contract_, mch_code_);
   IF (mch_code_consist_ IS NOT NULL AND mch_code_consist_ IS NOT NULL) THEN
      search_string_ :=  'MchCode eq '  || CHR(39) || mch_code_consist_ || CHR(39) ||' and Contract eq ' || CHR(39) || contract_consist_ || CHR(39);   
   END IF;
   RETURN search_string_;
END Get_Connected_Obj_String___;
     
FUNCTION Get_Default_Pipe_Value___(
   object_level_ IN VARCHAR2) RETURN Object_Structure_Next_Level_Struct_Rec
IS
   rec_ Object_Structure_Next_Level_Struct_Rec;
BEGIN
	rec_.page_type := 'PipeSystemForm';
    IF object_level_ IS NULL THEN
       rec_.object_level_validation := 'FALSE';
       RETURN rec_;
   END IF ;
       rec_.object_level_validation :='TRUE' ;
   RETURN rec_;
END Get_Default_Pipe_Value___;


FUNCTION Get_Default_Location_Value___(
   object_level_ IN VARCHAR2) RETURN Object_Structure_Next_Level_Struct_Rec
IS
    rec_ Object_Structure_Next_Level_Struct_Rec;
BEGIN
	rec_.page_type := 'LocationForm';
    IF object_level_ IS NULL THEN
       rec_.object_level_validation := 'FALSE';
       RETURN rec_;
   END IF ;
       rec_.object_level_validation :='TRUE' ;
   RETURN rec_;
END Get_Default_Location_Value___;


FUNCTION Get_Default_Function_Value___(
   object_level_ IN VARCHAR2) RETURN Object_Structure_Next_Level_Struct_Rec
IS
    rec_ Object_Structure_Next_Level_Struct_Rec;
BEGIN
	rec_.page_type := 'FunctionForm';
    IF object_level_ IS NULL THEN
       rec_.object_level_validation := 'TRUE';
       RETURN rec_;
   END IF ;
       rec_.object_level_validation :='TRUE' ;
   RETURN rec_;
END Get_Default_Function_Value___;


FUNCTION Get_Default_From_Value___(
   object_level_ IN VARCHAR2) RETURN Object_Structure_Next_Level_Struct_Rec
IS
    rec_ Object_Structure_Next_Level_Struct_Rec;
BEGIN
		rec_.page_type := 'FromForm';
      IF object_level_ IS NULL THEN
       rec_.object_level_validation := 'FALSE';
       RETURN rec_;
   END IF ;
       rec_.object_level_validation :='TRUE' ;
   RETURN rec_;
END Get_Default_From_Value___;


FUNCTION Get_Default_To_Value___(
   object_level_ IN VARCHAR2) RETURN Object_Structure_Next_Level_Struct_Rec
IS
    rec_ Object_Structure_Next_Level_Struct_Rec;
BEGIN
		rec_.page_type := 'ToForm';
      IF object_level_ IS NULL THEN
       rec_.object_level_validation := 'FALSE';
       RETURN rec_;
   END IF ;
       rec_.object_level_validation :='TRUE' ;
   RETURN rec_;
END Get_Default_To_Value___;


FUNCTION Get_Default_Process_Value___ (
   object_level_ IN VARCHAR2) RETURN Object_Structure_Next_Level_Struct_Rec
IS
    rec_ Object_Structure_Next_Level_Struct_Rec;
BEGIN
		rec_.page_type := 'ProcessForm';
   IF object_level_ IS NULL THEN
       rec_.object_level_validation := 'FALSE';
       RETURN rec_;
   END IF ;
       rec_.object_level_validation :='TRUE' ;
   RETURN rec_;
END Get_Default_Process_Value___;


FUNCTION Get_Default_Electrical_Value___(
   object_level_ IN VARCHAR2) RETURN Object_Structure_Next_Level_Struct_Rec
IS
    rec_ Object_Structure_Next_Level_Struct_Rec;
BEGIN
		rec_.page_type := 'ElectricalForm';
      IF object_level_ IS NULL THEN
       rec_.object_level_validation := 'FALSE';
       RETURN rec_;
   END IF ;
       rec_.object_level_validation :='TRUE' ;
   RETURN rec_;
END Get_Default_Electrical_Value___;


