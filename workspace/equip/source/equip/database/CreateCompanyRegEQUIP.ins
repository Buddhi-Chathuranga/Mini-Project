-----------------------------------------------------------------------------
--
--  Filename      : CreateCompanyRegEquip.ins
--
--  Module        : EQUIP
--
--  Purpose       : Registers Create Company data for EQUIP
--                  
--  Localization  : NOT Needed!
--
--
--  Date     Sign    History
--  ------   ----    -----------------------------------------------------------
--  110404   NRATLK  Created.
--  110812   NuKuLK Changed module version to 7.0.0
--  120824   MAWILK Changed parent to MSCOM.
--  130806   HERALK Scalability Changes - removed call to Module_Translate_Attr_Util_API
--  140425   DipeLK PBFI-6817 Rearranged the file against new app9 structure 
--  140812   Shdilk Changed version to 7.1.0
--  180925   KrRaLK Changed version to 8.0.0
--  200923   supwlk FISPRING20-7470, Changed version to 20.1.0
--  201123   supwlk FISPRING20-8336, Changed version to 21.1.0
-----------------------------------------------------------------------------

SET SERVEROUTPUT ON

DEFINE MODULE = 'EQUIP'


--
-- This section defines the component as a Create Company component
-- Arguments:
-- No1:  Component. Identity of the component in upper case
-- No2:  Version. The components version
-- No3:  Parent Component. Identity of the parent component in upper case
-- No4:  Active. (String TRUE/FALSE). TRUE means that the component will be called during create company process.
PROMPT Inserting default data to Crecomp_Component_Tab
BEGIN
   Enterp_Comp_Connect_V170_API.Reg_Add_Component('&MODULE', '22.1.0', 'MSCOM','TRUE');
END;
/


--
-- This section defines Create Company detail data for the Component and its Logical Units stored in
-- crecomp_component_lu_tab.
-- At the same time (when calling Xxx_API.Create_Company_Reg__) it defines the table, owned by the LU, 
-- that should be used when removing a company (stored in Remove_Company_Tab and Remove_Company_Detail_Tab).
--
-- Arguments for Xxx_API.Create_Company_Reg__:
-- No1:  Execution Order (IN/OUT NUMBER) 
-- No2:  Create and Export. (String TRUE/FALSE Default TRUE).
--       This parameter is used to define if the template should 
--       be created when creating a template and exported when exporting the template. 
-- No3:  Active. (String TRUE/FALSE Default TRUE). If the LU should be active (used) when creating a company
-- No4:  Account Related Lu. (String TRUE/FALSE Default FALSE). An account related LU is a LU that stores and handles data 
--       related to the accounting code string
-- No5:  Standard table (TRUE when released from RD Default TRUE)
--
--
-- Note: In the end Create Company detail data for Posting Control Logical Units which are handled in a special way are defined. 
--
-- Arguments for Posting_Ctrl_Crecomp_API.Comp_Reg_Xxx_Gen__ (where Xxx is the different Posting Ctrl levels):
-- No1:  Execution Order (IN/OUT NUMBER)
-- No2:  Component. Identity of the component in upper case
-- No3:  Logical Unit. The identity of the logical unit
-- No4:  Package. The identity of database package for the logical unit.
-- No5:  Create and Export. (String TRUE/FALSE Default TRUE).
--       This parameter is used to define if the template should 
--       be created when creating a template and exported when exporting the template. 
-- No6:  Active. (String TRUE/FALSE Default TRUE). If the LU should be active (used) when creating a company
PROMPT Inserting default meta data to Create Company Tables
DECLARE
   execution_order_ NUMBER := 1; 
BEGIN
   -- Posting Ctrl section, special handling see note above 
   Posting_Ctrl_Crecomp_API.Comp_Reg_Master_Gen__(execution_order_, '&MODULE', 'EquipPostingCtrl', 'EQUIP_POSTING_CTRL_API');   
   Posting_Ctrl_Crecomp_API.Comp_Reg_Detail_Gen__(execution_order_, '&MODULE', 'EquipPostingCtrlDetail', 'EQUIP_POSTING_CTRL_DETAIL_API');
   Posting_Ctrl_Crecomp_API.Comp_Reg_Comb_Detail_Gen__(execution_order_, '&MODULE', 'EquipPostingCtrlCombDet', 'EQUIP_POST_CTRL_COMB_DET_API');
   Posting_Ctrl_Crecomp_API.Comp_Reg_Detail_Spec_Gen__(execution_order_, '&MODULE', 'EquipPostingCtrlDetSpec', 'EQUIP_POST_CTRL_DET_SPEC_API');
   Posting_Ctrl_Crecomp_API.Comp_Reg_Comb_Det_Spec_Gen__(execution_order_, '&MODULE', 'EquipPostingCtrlCDetSpec', 'EQUIP_POST_CTRL_CDET_SPEC_API');
END;
/ 
COMMIT;


-- This section defines PROG translations for Navigator Entries related to Create Company,
-- i.e. the navigator entry representing the basic data Lu.
-- The translation handling is performed separately.
-- Arguments:
-- No1:  Component
-- No2:  Lu
-- No3:  Attribute, in this case NavigatorEntry
-- No4:  Text to be translated

PROMPT Inserting PROG text related to Navigator Entries for Create Company LU:s
BEGIN   
-- Navigator Entries   
   Basic_Data_Translation_API.Insert_Prog_Translation('EQUIP','EquipPostingCtrl', 'NavigatorEntry', 'Accounting Rules - Rules - Posting Control' );
   Basic_Data_Translation_API.Insert_Prog_Translation('EQUIP','EquipPostingCtrlDetail', 'NavigatorEntry', 'Accounting Rules - Rules - Posting Control - Details' );
   Basic_Data_Translation_API.Insert_Prog_Translation('EQUIP','EquipPostingCtrlCombDet', 'NavigatorEntry', 'Accounting Rules - Rules - Posting Control - Details');
   Basic_Data_Translation_API.Insert_Prog_Translation('EQUIP','EquipPostingCtrlDetSpec', 'NavigatorEntry', 'Accounting Rules - Rules - Posting Control - Details - Details Specification');
   Basic_Data_Translation_API.Insert_Prog_Translation('EQUIP','EquipPostingCtrlCDetSpec', 'NavigatorEntry', 'Accounting Rules - Rules - Posting Control - Details - Details Specification');   
END;
/
COMMIT;

--
-- This section defines so called client mapping, i.e. a definition of the anonymous columns that
-- are linked to a specific Component and Logical Unit. The definition is used in runtime to
-- "redesign" the Create Company Template detail window, only showing columns used by the LU with 
-- the proper column label for each column.
-- The mapping_id is an unique identity for a Component and Lu, previously defined
-- when adding data for Create Company Detail data (crecomp_component_lu_tab).
-- The mapping_id is constructed in the following way: CCD_ || UPPER(LU)
--
-- Arguments for Xxx_API.Create_Client_Mapping__:
-- No1:  Client Window. Defaults to "frmCreateCompanyTemDetail" (which should always be used)
--
-- Note: In the end Client Mapping data for Posting Control Logical Units which are handled in a special way are defined.
--
-- Arguments for Posting_Ctrl_Crecomp_API.Client_Map_Xxx_Gen__ (where Xxx is the different Posting Ctrl levels):
-- No1:  Component. Identity of the component in upper case
-- No2:  Logical Unit. The identity of the logical unit
PROMPT Define Client Mapping for &MODULE
DECLARE
BEGIN
   -- Posting Ctrl section, special handling see note above 
   Posting_Ctrl_Crecomp_API.Client_Map_Master_Gen__('&MODULE','EquipPostingCtrl');
   Posting_Ctrl_Crecomp_API.Client_Map_Detail_Gen__('&MODULE','EquipPostingCtrlDetail');
   Posting_Ctrl_Crecomp_API.Client_Map_Detail_Spec_Gen__('&MODULE','EquipPostingCtrlDetSpec');   
   Posting_Ctrl_Crecomp_API.Client_Map_Comb_Detail_Gen__('&MODULE','EquipPostingCtrlCombDet');
   Posting_Ctrl_Crecomp_API.Client_Map_Comb_Det_Spec_Gen__('&MODULE','EquipPostingCtrlCDetSpec');
END;
/
COMMIT;
