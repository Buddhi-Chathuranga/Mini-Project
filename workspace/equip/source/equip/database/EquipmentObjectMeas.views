-----------------------------------------------------------------------------
--
--  Logical unit: EquipmentObjectMeas
--  Component:    EQUIP
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  131128  ChAmlk Hooks: Created
--  200514  CLEKLK   Bug 152496, Changed Test_Point_Id length.
--  211008  puvelk  AM21R2-2420, RLS implimented.
--  220111  KrRaLK  AM21R2-2950, Equipment object is given a sequence number as the primary key (while keeping the old Object ID 
--                  and Site as a unique constraint), so inlined the views to handle the new design of the EquipmentObject.
-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------
COLUMN Values_Seq IS
   Flags      = 'KMI--'
   Datatype   = 'NUMBER(10)'
   Prompt     = 'Values Seq';

COLUMN Test_Pnt_Seq IS
   Flags     = 'K---L'
   Datatype  = 'NUMBER'
   Prompt    =  'Testpoint Sequence';
   
COLUMN Contract IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(5)/UPPERCASE'
   Prompt     = 'Object Site';

COLUMN Mch_Code IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(100)/UPPERCASE'
   Prompt     = 'Object ID';
   
COLUMN Test_Point_Id IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(30)/UPPERCASE'
   Prompt     = 'Testpoint ID';
   
COLUMN Parameter_Code IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(5)/UPPERCASE'
   Prompt     = 'Parameter ID';
   
COLUMN Test_Sequence_Id IS
   Flags      = 'AMIU-'
   Datatype   = 'STRING(6)/UPPERCASE'
   Prompt     = 'Test Sequence ID';
   
COLUMN Measured_Value IS
   Flags      = 'A----'
   Datatype   = 'NUMBER(12)'
   Prompt     = 'Accumulated Value';

COLUMN Reg_Date IS
   Flags      = 'AMIU-'
   Datatype   = 'DATE/DATE'
   Prompt     = 'Reg Date';
   
COLUMN Remark IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(80)'
   Prompt     = 'Remark';

COLUMN Measurement_Type IS
   Flags      = 'AMI-L'
   Datatype   = 'STRING(200)'
   Enumeration = 'MeasurementType'
   Prompt     = 'Measurement_Type';
   
COLUMN Measurement_Type_Db IS
   Flags      = 'A----'
   Datatype   = 'STRING(20)'
   Prompt     = 'Measurement Type';
   
COLUMN Measurement_Note IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(2000)'
   Prompt     = 'Measurement Note';
   
COLUMN Recorded_Value IS
   Flags      = 'AMI--'
   Datatype   = 'NUMBER(12)'
   Prompt     = 'Recorded Value';
   
COLUMN Meter_Id IS
   Flags      = 'A-IU-'
   Datatype   = 'STRING(30)'
   Prompt     = 'Meter Id';
 
COLUMN New_Recorded_Value IS
   Flags      = 'AMI--'
   Datatype   = 'NUMBER(12)'
   Prompt     = 'New Reading Value';
   
COLUMN New_Reg_Date IS
   Flags      = 'A--U-'
   Datatype   = 'DATE/DATE'
   Prompt     = 'New Reading Date/Time';   

   
-------------------- PUBLIC VIEW DEFINITIONS --------------------------------


-------------------- PRIVATE VIEW DEFINITIONS -------------------------------
VIEW EQUIP_OBJECT_MEAS_GROUP IS
   Prompt = 'Equipment Object Meas'
SELECT values_seq                     values_seq,
       test_pnt_seq                   test_pnt_seq,
       equipment_object_seq           equipment_object_seq,
       Equipment_Object_API.Get_Contract(equipment_object_seq) contract,       
       Equipment_Object_API.Get_Mch_Code(equipment_object_seq) mch_code,
       test_point_id                  test_point_id,
       parameter_code                 parameter_code,
       test_sequence_id               test_sequence_id,
       measured_value                 measured_value,
       reg_date                       reg_date,
       remark                         remark,
       Measurement_Type_API.Decode(measurement_type) measurement_type,
       measurement_type               measurement_type_db,
       measurement_note               measurement_note,
       recorded_value                 recorded_value,
       meter_id                       meter_id,
       resource_seq                   resource_seq,
       NULL                           new_recorded_value,
       NULL                           new_reg_date,       
       rowkey                         objkey,
       to_char(rowversion)            objversion,
       rowid                          objid
FROM ( SELECT values_seq,
       test_pnt_seq,
       equipment_object_seq,
       Equipment_Object_API.Get_Contract(equipment_object_seq) contract,       
       Equipment_Object_API.Get_Mch_Code(equipment_object_seq) mch_code,                  
       test_point_id,               
       parameter_code,         
       test_sequence_id,         
       measured_value,          
       reg_date,                     
       remark,                       
       measurement_type,
       measurement_note, 
       recorded_value,       
       meter_id,
       resource_seq,
       rowkey,
       rowversion,
       rowid,          
       RANK() OVER (PARTITION BY equipment_object_seq, parameter_code, test_point_id  ORDER BY reg_date DESC, values_seq DESC) AS rnk 
       FROM EQUIPMENT_OBJECT_MEAS_TAB )                
WHERE rnk = 1
AND (1 = User_Allowed_Site_API.Is_Authorized(Equipment_Object_API.Get_Contract(equipment_object_seq)) or Equipment_Object_API.Get_Contract(equipment_object_seq) IS NULL)
UNION
(SELECT NULL,
       test_pnt_seq                      test_pnt_seq,
       equipment_object_seq              equipment_object_seq,
       Equipment_Object_API.Get_Contract(equipment_object_seq)  contract,       
       Equipment_Object_API.Get_Mch_Code(equipment_object_seq)  mch_code,
       test_point_id                     test_point_id,
       parameter_code                    parameter_code,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,       
       NULL,
       resource_seq                      resource_seq,
       NULL,
       NULL,      
       NULL,
       NULL,
       NULL
FROM   equipment_object_param_tab
WHERE  (1 = User_Allowed_Site_API.Is_Authorized(Equipment_Object_API.Get_Contract(equipment_object_seq)) OR Equipment_Object_API.Get_Contract(equipment_object_seq) IS NULL)
AND    last_value IS NULL
AND    reg_date IS NULL
MINUS
SELECT NULL,
       test_pnt_seq                   test_pnt_seq,
       equipment_object_seq           equipment_object_seq,
       Equipment_Object_API.Get_Contract(equipment_object_seq) contract,       
       Equipment_Object_API.Get_Mch_Code(equipment_object_seq) mch_code,      
       test_point_id                  test_point_id,
       parameter_code                 parameter_code,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL,       
       NULL,
       resource_seq                 resource_seq,
       NULL,
       NULL,
       NULL,
       NULL,
       NULL
FROM   EQUIPMENT_OBJECT_MEAS_TAB
WHERE  (1 = User_Allowed_Site_API.Is_Authorized(Equipment_Object_API.Get_Contract(equipment_object_seq)) OR Equipment_Object_API.Get_Contract(equipment_object_seq) IS NULL));

@DbViewRowLevelSecurity CustomImplemented
VIEW EQUIPMENT_OBJECT_MEAS_VALID IS
SELECT values_seq                     values_seq,
       test_pnt_seq                   test_pnt_seq,
       equipment_object_seq           equipment_object_seq,
       contract contract,
       mch_code mch_code,
       test_point_id                  test_point_id,
       parameter_code                 parameter_code,
       test_sequence_id               test_sequence_id,
       measured_value                 measured_value,
       reg_date                       reg_date,
       remark                         remark,
       Measurement_Type_API.Decode(measurement_type) measurement_type,
       measurement_type               measurement_type_db,
       measurement_note               measurement_note,
       recorded_value                 recorded_value,
       meter_id                       meter_id,
       resource_seq                   resource_seq,
       rowkey                         objkey,
       to_char(rowversion)            objversion,
       rowid                          objid
FROM   equipment_object_meas_tab t
WHERE  measurement_type IN ('RecordedReading', 'MeterChangeBefore')
AND EXISTS (SELECT 1 
            FROM user_allowed_site_pub
            WHERE site IN (SELECT p.contract
            FROM equipment_object_tab p
            WHERE p.equipment_object_seq = t.equipment_object_seq));
