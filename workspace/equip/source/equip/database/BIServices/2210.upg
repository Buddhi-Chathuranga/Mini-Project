---------------------------------------------------------------------------------------------
--  Module : EQUIP
--
--  Purpose: Upgrade database objects for IFS/Equipment
--           from version 21.2.0 to 22.1.0
--
--  File   : 2210.upg
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  ------------------------------------------------------------------------
--  210917   BDT     Created (by Build and Deployment Team).
--  ------   ------  ------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SET SERVEROUTPUT ON
PROMPT START upgrading WITH 2210.upg

---------------------------------------------------------------------------------------------
------------------------------ Instructions for upg files -----------------------------------
---------------------------------------------------------------------------------------------
--
--  Main section should contain all upgrade operations.
--  Next section should contain removal of obsolete objects (any removal of data inside upg is prohibited!).
--  Removal of backup tables and obsolete columns should be added to <component>Cl.sql script!
--
--  If possible, everything regarding one table should be placed in one section.
--  If this is not possible, a proper comment about the reason should be added.
--
--  Each section should be started with a "-----" line and a empty line.
--  This section should then start with a line like: "-- ***** Example_Tab Start *****"
--  and end with a line like:                       "-- ***** Example_Tab End *****"
--
--  Don't forget UPPER/lower case !
--
--  Every part inside the section should start with a "PROMPT" line explaining what is done by the block.
--
--  If the PL/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.
--
--  Remember ordinary coding standard rules !
--
--  Don't drop any Table/Column !
--
--  Don't forget performance when updating large table !
--
--  No unnecessary blank lines or comments !
--
--  If possible, use pure SQL commands
--
--  If possible, try to group several updates together in one statement.
--
--  Timestamps will be added automatically at the end of the project.
--
--  For more information refer to the "Upgrade Script Standards" and the "Performance" technical documents.
--
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES -----------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
--------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ------------------
---------------------------------------------------------------------------------------------

-- ***** EQUIP_OBJ_DOWNTIME_DIM &MV - Start *****

exec Database_SYS.Log_Detail_Time_Stamp('EQUIP','2210.upg','Timestamp_1');
DEFINE MV         = EQUIP_OBJ_DOWNTIME_MV
DEFINE TAB1       = EQUIP_OBJ_DOWNTIME_TAB
DEFINE TAB2       = EQUIPMENT_OBJECT_TAB

PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT TO_CHAR(equipment_object_seq)||''^''||TO_CHAR(downtime_seq) id,
              equipment_object_seq                                        equipment_object_seq,
              downtime_seq                                                code,
              uptime                                                      uptime,
              downtime                                                    downtime
       FROM   &TAB1 
       UNION ALL
       SELECT TO_CHAR(equipment_object_seq)||''^''||''#''                 id,
              equipment_object_seq                                        equipment_object_seq,
              NULL                                                        code,
              NULL                                                        uptime,
              NULL                                                        downtime
       FROM   &TAB2
       UNION ALL
       SELECT ''#''||''^''||''#''                                         id,
              NULL                                                        equipment_object_seq,
              NULL                                                        code,
              NULL                                                        uptime,
              NULL                                                        downtime
       FROM BI_DUAL_TAB
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN

   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
-- ***** EQUIP_OBJ_DOWNTIME_DIM &MV - End *****


-- ***** EQUIP_OBJ_DOWNTIME FACT Mvt Start *****

exec Database_SYS.Log_Detail_Time_Stamp('EQUIP','2210.upg','Timestamp_2');
DEFINE MVT    = EQUIP_OBJ_DOWNTIME_MVT
DEFINE MODULE = EQUIP
DEFINE LU     = FctEquipObjDowntime

---------------------------------------------------------------------
-- Create &MVT
---------------------------------------------------------------------
PROMPT Create snapshot table &MVT
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MVT';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);

   Database_SYS.Set_Table_Column(columns_, 'ID', 'VARCHAR2(81)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'EQUIPMENT_OBJECT_SEQ', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'DOWNTIME_SEQ', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'DOWNTIME_COUNT', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'DOWNTIME_DURATION', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'UPTIME', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'DOWNTIME', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TASK_SEQ', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'MCH_CODE', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'DIM_EQUIP_OBJ_DOWNTIME_ID', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'DIM_SITE_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'DIM_EQUIPMENT_OBJECT_ID', 'VARCHAR2(120)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'DIM_TASK_SEQ', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_,'MVT_CREATED_DT', 'DATE', 'N');

   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

---------------------------------------------------------------------
-- Create constraint and indexes
---------------------------------------------------------------------

PROMPT Create constraint and index(s) on Materialized View &MVT
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MVT';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN

   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'EQUIPMENT_OBJECT_SEQ');
   Database_SYS.Set_Table_Column (columns_ , 'DOWNTIME_SEQ');
   Database_Sys.Create_Constraint( table_name_,
                                   constraint_name_,
                                   columns_,
                                   'P',
                                   '&IFSAPP_INDEX',
                                   NULL,
                                   TRUE,
                                   TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_MVX';
   Database_SYS.Set_Table_Column (columns_, 'MVT_CREATED_DT');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MVT

-- ***** EQUIP_OBJ_DOWNTIME FACT Mvt End *****


-- ***** EQUIP_OBJ_DOWNTIME FACT Cmv START *****

exec Database_SYS.Log_Detail_Time_Stamp('EQUIP','2210.upg','Timestamp_3');
DEFINE MV_NAME       = 'EQUIP_OBJ_DOWNTIME_CMV'
DEFINE SOURCE_TABLE  = 'EQUIP_OBJ_DOWNTIME_TAB'
PROMPT Creating VIEW &MV_NAME
DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('&MV_NAME',TRUE);
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_NAME
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT MAX(ROWVERSION) MAX_ROWVERSION
       FROM &SOURCE_TABLE';
   EXECUTE IMMEDIATE stmt_;

   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('&MV_NAME');
END;
/
UNDEFINE MV_NAME
UNDEFINE SOURCE_TABLE

DEFINE MV_NAME       = 'EQUIP_OBJ_DOWNTIME_TASK_CMV'
DEFINE SOURCE_TABLE  = 'EQUIP_OBJ_DOWNTIME_TASK_TAB'
PROMPT Creating VIEW &MV_NAME
DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('&MV_NAME',TRUE);
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_NAME
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT MAX(ROWVERSION) MAX_ROWVERSION
       FROM &SOURCE_TABLE';
   EXECUTE IMMEDIATE stmt_;

   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('&MV_NAME');
END;
/
UNDEFINE MV_NAME
UNDEFINE SOURCE_TABLE

DEFINE MV_NAME       = 'EQUIPMENT_OBJECT_CMV'
DEFINE SOURCE_TABLE  = 'EQUIPMENT_OBJECT_TAB'
PROMPT Creating VIEW &MV_NAME
DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('&MV_NAME',TRUE);
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_NAME
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT MAX(ROWVERSION) MAX_ROWVERSION
       FROM &SOURCE_TABLE';
   EXECUTE IMMEDIATE stmt_;

   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('&MV_NAME');
END;
/
UNDEFINE MV_NAME
UNDEFINE SOURCE_TABLE

-- ***** EQUIP_OBJ_DOWNTIME FACT Cmv End *****

---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES/COLUMNS -----------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE INDEXES/SEQUENCES ------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

PROMPT Upgrade statements IN FILE 2210.upg ends here.

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
