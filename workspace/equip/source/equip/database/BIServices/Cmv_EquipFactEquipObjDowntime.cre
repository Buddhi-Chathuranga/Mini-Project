-----------------------------------------------------------------------------
--  Module : EQUIP
--
--  File   : Cmv_EQUIPFactEquipObjDowntime.cre
--
-------------------------------------------------------------------
--  Date    Sign   History
--  ------  ----   ------------------------------------------------
-------------------------------------------------------------------

-----------------------------------------------------------------------------
------------------- MATERIALIZED VIEWS TO CHECK ROWVERSION ------------------
-----------------------------------------------------------------------------

DEFINE MV_NAME       = 'EQUIP_OBJ_DOWNTIME_CMV'
DEFINE SOURCE_TABLE  = 'EQUIP_OBJ_DOWNTIME_TAB'
PROMPT Creating VIEW &MV_NAME
DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('&MV_NAME',TRUE);
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_NAME
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT MAX(ROWVERSION) MAX_ROWVERSION
       FROM &SOURCE_TABLE';
   EXECUTE IMMEDIATE stmt_;

   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('&MV_NAME');
END;
/
UNDEFINE MV_NAME
UNDEFINE SOURCE_TABLE

DEFINE MV_NAME       = 'EQUIP_OBJ_DOWNTIME_TASK_CMV'
DEFINE SOURCE_TABLE  = 'EQUIP_OBJ_DOWNTIME_TASK_TAB'
PROMPT Creating VIEW &MV_NAME
DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('&MV_NAME',TRUE);
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_NAME
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT MAX(ROWVERSION) MAX_ROWVERSION
       FROM &SOURCE_TABLE';
   EXECUTE IMMEDIATE stmt_;

   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('&MV_NAME');
END;
/
UNDEFINE MV_NAME
UNDEFINE SOURCE_TABLE

DEFINE MV_NAME       = 'EQUIPMENT_OBJECT_CMV'
DEFINE SOURCE_TABLE  = 'EQUIPMENT_OBJECT_TAB'
PROMPT Creating VIEW &MV_NAME
DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('&MV_NAME',TRUE);
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_NAME
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT MAX(ROWVERSION) MAX_ROWVERSION
       FROM &SOURCE_TABLE';
   EXECUTE IMMEDIATE stmt_;

   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('&MV_NAME');
END;
/
UNDEFINE MV_NAME
UNDEFINE SOURCE_TABLE

-- This section can be used during development in order to test that MVs
-- of referenced dynamic source tables are working properly
--=============== DEVELOPMENT SECTION START ============================
--
-- 1. The current CRE file, creating MVs, has to be executed with success
--
-- 2. Next, find out if dynamic components are available/installed
--
-- 3. Execute the following to create the Materialized View that is based
--    on a dynamically referenced table;
--
--       BEGIN Biserv_Installation_API.Bi_Post_Installation_Object; END;
--
--
-- 4. For dynamic components that exists in the database, check that the
--    Materialized View has been successfully created in the database and
--    that the definition is correct:
--
--       SELECT query FROM user_mviews WHERE mview_name='&MV_NAME'
--
--    If a dynamic component is not available, related MVs should not be
--    available in user_mviews
--
-- 5. As an extended test: make sure that all source tables contribute to
--    find new/updated records of the current entity, i.e. that the
--    incremental load works properly with all source tables in play
--
--================ DEVELOPMENT SECTION END =============================
