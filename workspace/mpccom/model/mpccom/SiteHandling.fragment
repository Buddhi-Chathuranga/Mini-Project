-----------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ------------------------------------------------------
-- 2019-10-18  SWiclk  SCXTEND-441, Modified SitesPerUserCommand() to bulknavigate, modified SetasDefaultSiteCommand() in order to
-- 2019-10-18          enable when there is atlest 1 record that is not defualt site.
-- 2019-08-07  SWiclk  SCUXXW4-23425, Added UsersPerSiteList, a list of users assigned to the Site.
-- 2019-07-30  CKumlk  SCUXXW4-22296, Overrided WorkTimeCalendar entity.
-- 2019-02-01  DaZase  SCUXXW4-7830, Converted from frmSite using MTG Version: 1.34
-----------------------------------------------------------------------------
fragment SiteHandling;
component MPCCOM;
layer Core;
description "Use this tab to enter the basic data for all the sites to be used in the system. Any changes to the parameters will affect the entire site";
include fragment CompanyAddressLovPubSelector;

----------------------------- CLIENT FRAGMENTS ------------------------------

----------------------------- NAVIGATOR ENTRIES -----------------------------

-------------------------------- MAIN PAGES ---------------------------------

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command SitesPerUserCommand for UserAllowedSite {
   label = "Sites per User";
   mode = SelectedRecords;
   bulkexecute {
      bulknavigate "page/SitesPerUser/Form?$filter=Userid eq $[Userid]";
   }

}

command SetasDefaultSiteCommand for UserAllowedSite {
   label = "Set as Default Site";
   mode = SelectedRecords;

   enabled = [count(*, UserSiteType != "DefaultSite") > 0];
   execute {
      call SetDefaultSite();
   }
}

--------------------------------- SELECTORS ---------------------------------
@Overtake
selector UserFinanceSelector for UserFinance {
   label = "${Description}";
   static Userid;
   static Description;
}
---------------------------------- GROUPS -----------------------------------
group SiteGroup for Site {
   label = "";

   field DistCalendarIdRef;
   field DistCalendarIdRef.Objstate {
      label = "Distribution Calendar Status";
   }
   field ManufCalendarIdRef;
   field ManufCalendarIdRef.Objstate {
      label = "Manufacturing Calendar Status";
   }
   field Offset;
   lov DeliveryAddressRef with ReferenceCompanyAddressLovPubSelector;
   //preview = CompanyAddressLovPubCard;

}

----------------------------------- LISTS -----------------------------------

@Override
list WorkTimeCalendarLovList for WorkTimeCalendar {
   label = "";
   badge Objstate {
      style = TextOnly;
      emphasis Progress2 = [Objstate = "NotGenerated"];
      emphasis Progress6 = [Objstate = "ChangesPending"];
      emphasis Progress11 = [Objstate = "Generated"];
   }

}

list UsersPerSiteList for UserAllowedSite {
   label = "Users";
   crudactions {
      delete {
         enabled = [not UserSiteTypeDb];
      }
      edit {
         enabled = [false];
      }
   }

   lov UseridRef with UserFinanceSelector using GetUsers(parent.Company) {
      description = UseridRef.Description;
      contactwidget {
         enabled = [true];
         source = User;
      }
   }
   field UserSiteTypeDb {
      editable = [not UserSiteTypeDb];
   }
   command SetasDefaultSiteCommand;
   command SitesPerUserCommand;

}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

-------------------------------- SINGLETONS ---------------------------------
singleton SiteSingleton for Site {
   crudactions {
   }
}

--------------------------- PROJECTION FRAGMENTS ----------------------------

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset SiteSet for Site;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity Site {
   keys = Contract, Company {
      where = "CONTRACT = :Contract and COMPANY = :Company";
   }

   use attributes = Offset, DistCalendarId, DeliveryAddress, ManufCalendarId;
   attribute Offset Number {
      label = "Time Zone Offset (hours)";
      maxlength = 32767;
   }
   attribute DeliveryAddress Text {
      label = "Delivery Address";
   }

// MTG generated extra references that we don't need here.
//   reference WorkTimeCalendarRef(DistCalendarId) to WorkTimeCalendar(CalendarId);
//   reference WorkTimeCalendar2Ref(ManufCalendarId) to WorkTimeCalendar(CalendarId);
   reference DistCalendarIdRef(DistCalendarId) to WorkTimeCalendar(CalendarId) {
      label = "Distribution Calendar";
   }
   reference DeliveryAddressRef(Company, DeliveryAddress) to CompanyAddressLovPub(Company, DeliveryAddress) {
      label = "Delivery Address";
   }
   reference ManufCalendarIdRef(ManufCalendarId) to WorkTimeCalendar(CalendarId) {
      label = "Manufacturing Calendar";
   }
   reference ContractRef(Contract) to CompanySite(Contract);

   array Users(Contract) to UserAllowedSite(Contract);
}

@Override
entity WorkTimeCalendar {
   attribute Objstate Enumeration(WorkTimeCalendarState) {
      label = "Status";
   }
}

@Override
entity UserAllowedSite {
   crud = Create, Read, Delete, Update;
   attribute UserSiteTypeDb Boolean("DEFAULT SITE", "NOT DEFAULT SITE") {
      fetch = "USER_SITE_TYPE_DB";
      label = "Default Site";
      required = [true];
   }
   attribute UserSiteType Enumeration(UserSiteType) {
      required = [false];
   }
   attribute Company Text {
      fetch = "NULL";
      required = [false];
   }
   attribute Userid Text;

   reference UseridRef(Company, Userid) to UserFinance(Company, Userid) {
      label = "User";
   }
   attribute Contract Text;

   action SetDefaultSite {
      ludependencies = UserAllowedSite;
   }
}


------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------
function GetUsers List < Entity(UserFinance) > {
   parameter Company Text;
   where = "COMPANY = :Company";

}

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------
