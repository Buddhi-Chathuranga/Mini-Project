-----------------------------------------------------------------------------
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-- 2019-04-10  SaGelk  SCUXXW4-7705, Converted dlgStartDate using MTG Version: 1.34
-- 2019-04-10  SaGelk  SCUXXW4-8035, Converted tbwSupWarrantyCondition using MTG Version: 1.34
-----------------------------------------------------------------------------
fragment SupplierWarrantyConditionList;
component MPCCOM;
layer Core;
description "Use this fragment to view or update a supplier warranty that is connected to the selected serial.";

----------------------------- CLIENT FRAGMENTS ------------------------------

----------------------------- NAVIGATOR ENTRIES -----------------------------

-------------------------------- MAIN PAGES ---------------------------------

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command CalculateDatesCommand  for SupplierWarrantyCondition {
   label = "Calculate Dates";
   enabled = [WarrantyConditionRef.TimeUnit != null];
   execute {
      call GetDefaultDate(PartNo, SerialNo) into StartDate;

      dialog CalculateDatesDialog(PartNo, SerialNo, WarrantyId, WarrantyTypeId, ConditionId, StartDate) {
         when OK {
            exit OK;
         }
         when CANCEL {
            exit CANCEL;
         }

      }
   }
}

command Ok for CalculateDateStructure {
   enabled = [StartDate != null];
   execute {
      call CalculateDates(PartNo, SerialNo, WarrantyId, WarrantyTypeId, ConditionId, StartDate);
   }
}
command Cancel for CalculateDateStructure {
   enabled = [true];
   execute {
      exit CANCEL;
   }
}

--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------
group CaluclateDateGroup for CalculateDateStructure {
   field StartDate;
}

----------------------------------- LISTS -----------------------------------

list SupplierWarrantyConditionList for SupplierWarrantyCondition {
   editmode = SingleCellEdit;

   field WarrantyTypeIdRef {
      size = Small;
   }
   field SupWarrantyTypeRef.WarrantyDescription {
      size = Small;
      label = "Warranty Type Description";
   }
   lov ConditionIdRef with ReferenceWarrantyConditionSelector {
      description = ConditionIdRef.ConditionDescription;
   }
   field ValidFrom;
   field ValidTo;

   field MinValue;
   field MaxValue;
   field WarrantyConditionRef.TimeUnit {
      size = Small;
      label = "Time Unit";
   }
   field OtherUMRef {
      size = Small;
   }
   // fieldranking WarrantyTypeIdRef, SupWarrantyTypeRef.WarrantyDescription, ConditionIdRef, ConditionDescription, MinValue, MaxValue, WarrantyConditionRef.TimeUnit, OtherUMRef;

   commandgroup CommandGroupCmdGroup {
      command CalculateDatesCommand;
   }
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------
dialog CalculateDatesDialog for CalculateDateStructure {
   label = "Calculate Date";
   input(PartNo, SerialNo, WarrantyId, WarrantyTypeId, ConditionId, StartDate);

   group CaluclateDateGroup;
   command Ok;
   command Cancel;
}

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

--------------------------------- CHECKLIST ---------------------------------


--------------------------- PROJECTION FRAGMENTS ----------------------------

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset SupplierWarrantyConditionSet for SupplierWarrantyCondition;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity SupplierWarrantyCondition using SupWarrantyCondition {
   ludependencies = SupWarrantyCondition;

   crud = Read, Update, Delete;
   from = "sup_warranty_condition";
   exec = "SUP_WARRANTY_CONDITION_API";
   keys = ConditionId, WarrantyId {
      where = "CONDITION_ID = :ConditionId and WARRANTY_ID = :WarrantyId";
   }
   use attributes = WarrantyTypeId, MinValue, MaxValue, ValidTo, ValidFrom;
   attribute WarrantyTypeId Text {
      fetch = "warranty_type_id";
      label = "Warranty Type ID";
      maxlength = 20;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute ConditionId Number {
      fetch = "condition_id";
      label = "Condition ID";
      required = [true];
      editable = [ETag = null];
   }
   attribute ConditionDescription Text {
      fetch = "Warranty_Condition_API.Get_Condition_Description(condition_id)";
      label = "Condition Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute MinValue Number {
      fetch = "min_value";
      label = "Min Value";
   }
   attribute MaxValue Number {
      fetch = "max_value";
      label = "Max Value";
   }
   attribute WarrantyId Number {
      fetch = "warranty_id";
      label = "Warranty ID";
      required = [true];
      editable = [ETag = null];
   }
   //   Not in Entity
   attribute OtherUM Text {
      fetch = "Warranty_Condition_API.Get_Unit_Code(condition_id)";
      label = "Other UoM";
      editable = [false];
   }
   attribute PartNo Text {
      fetch = "NULL";
      editable = [false];
   }
   attribute SerialNo Text {
      fetch = "NULL";
      editable = [false];
   }
   attribute ValidTo Date {
      fetch = "NULL";
      editable = [false];
   }
   attribute ValidFrom Date {
      fetch = "NULL";
      editable = [false];
   }

   reference SupWarrantyTypeRef(WarrantyId, WarrantyTypeId) to SupWarrantyType(WarrantyId, WarrantyTypeId);
   reference WarrantyConditionRef(ConditionId) to WarrantyCondition(ConditionId);
   reference WarrantyTypeIdRef(WarrantyId, WarrantyTypeId) to SupWarrantyType(WarrantyId, WarrantyTypeId) {
      label = "Warranty Type ID";
   }
   reference ConditionIdRef(ConditionId) to WarrantyCondition(ConditionId) {
      label = "Condition ID";
   }
   reference OtherUMRef(OtherUM) to IsoUnit(UnitCode) {
      label = "Other U/M";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------
action CalculateDates {
   initialcheck implementation;
   ludependencies = SupWarrantyCondition;

   parameter PartNo Text;
   parameter SerialNo Text;
   parameter WarrantyId Number;
   parameter WarrantyTypeId Text;
   parameter ConditionId Number;
   parameter StartDate Date;
}

--------------------------------- FUNCTIONS ---------------------------------
function PopulateList List < Entity(SupplierWarrantyCondition) >  {
   basedon SupplierWarrantyConditionSet;
   parameter PartNo Text;
   parameter SerialNo Text;
   parameter WarrantyId Number;

   alterattribute ValidTo {
      fetch = "Serial_Warranty_Dates_API.Get_Valid_To(:PartNo, :SerialNo, :WarrantyId, warranty_type_id, condition_id)";
   }
   alterattribute ValidFrom {
      fetch = "Serial_Warranty_Dates_API.Get_Valid_From(:PartNo, :SerialNo, :WarrantyId, warranty_type_id, condition_id)";
   }
   alterattribute PartNo {
      fetch = ":PartNo";
   }
   alterattribute SerialNo {
      fetch = ":SerialNo";
   }
   where = "warranty_id = :WarrantyId";
}

function GetDefaultDate Date {
   parameter PartNo Text;
   parameter SerialNo Text;
}

-------------------------------- STRUCTURES ---------------------------------
structure CalculateDateStructure {
   attribute ValidFrom Date;
   attribute PartNo Text;
   attribute SerialNo Text;
   attribute WarrantyId Number;
   attribute WarrantyTypeId Text;
   attribute ConditionId Number;
   attribute StartDate Date {
      label = "Valid From";

   }
}

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------
