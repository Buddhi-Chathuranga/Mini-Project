-------------------------------------------------------------------------------------------------
-- Date Sign History
-- ---------- ------ ----------------------------------------------------------------------------
-- 2020-11-09 RasDlk SCZ-11538, RelMtrlPlanning field was changed to a lookup field.
-- 2020-07-08 ErFelk Bug 152094(SCZ-10712), Added attribute RelMtrlPlanning.
-- 2019-03-11 ShPrlk SCUXXW4-17214, Added dynamic dependency annotation.
-- 2018-03-29 HaPulk SCUXXW4-7855, Converted from frmSiteToSiteReserveSetup using MTG Version: 1.15
--------------------------------------------------------------------------------------------------

projection SiteToSiteReservationAndAvailabilitySetupHandling;
component MPCCOM;
layer Core;
description "Use this API to enter reservation and availability connections between supply sites and demand sites for
             use in supply chain reservations and inventory part availability visibility.";
category Users;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset SiteUivs for SiteUiv;

// In future, We will be able to move this *_UIV into *.fragment file
query SiteUiv {
   from = "site_uiv";
   lu = Site;

   keys = Contract {
      where = "Contract = :Contract";
   }
   attribute Contract Text {
      fetch = "CONTRACT";
      label = "Supply Site";


   }
   attribute Description Text {
      fetch = "DESCRIPTION";
      label = "Description";

   }

   array DetailSiteToSiteReserveSetup(Contract) to SiteToSiteReserveSetup(SupplySite);
}
------------------------------ ENTITY DETAILS -------------------------------

@Override
entity SiteToSiteReserveSetup {
   crud = Create, Read, Update, Delete;
   from = "site_to_site_reserve_setup";
   exec = "SITE_TO_SITE_RESERVE_SETUP_API";
   keys = SupplySite, DemandSite {
      where = "SUPPLY_SITE = :SupplySite and DEMAND_SITE = :DemandSite";
   }
   attribute SupplySite Text {
      fetch = "SUPPLY_SITE";
      label = "Supply Site";
      maxlength = 5;
      required = [true];

      editable = [ETag = null];
      format = uppercase;
   }
   attribute DemandSite Text {
      fetch = "DEMAND_SITE";
      label = "Demand Site";
      maxlength = 5;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute DemandSiteDescription Text {
      fetch = "SITE_API.Get_Description(DEMAND_SITE)";
      label = "Demand Site Description";
      maxlength = 2000;

      editable = [false];
   }
   @DynamicComponentDependency ORDER
   attribute InternalCustomer Text {
      fetch = "Cust_Ord_Customer_API.Get_Customer_No_From_Contract(DEMAND_SITE)";
      label = "Internal Customer";
      maxlength = 20;

      editable = [false];
      format = uppercase;
   }

   attribute SupplySiteAvailAllowed Boolean("TRUE", "FALSE") {
      fetch = "supply_site_avail_allowed_db";
      label = "Supply Site Availability Visible";
      required = [true];
      implementationtype = "VARCHAR2(20)";
   }

   attribute SupplySiteReserveType Enumeration(SupplySiteReserveType) {
      fetch = "SUPPLY_SITE_RESERVE_TYPE_DB";
      label = "Supply Site Reservation Type";
      required = [true];
   }

   attribute RelMtrlPlanning Enumeration(RelMtrlPlanning) {
      fetch = "REL_MTRL_PLANNING_DB";
      label = "Release for Mtrl Planning";
      required = [true];
   }

   reference SupplySiteRef(SupplySite) to SiteUiv(Contract) {
      label = "Supply Site";
   }
   reference DemandSiteRef(DemandSite) to Site(Contract)
      {
      label = "Demand Site";
   }
}

@Override
enumeration SupplySiteReserveType {
   enumerationtype = Standard;
   exec = "Supply_Site_Reserve_Type_API";
   value = "NOTALLOWED" {
      identifier = "NotAllowed";
      label = "Not Allowed";
   }
   value = "MANUAL" {
      identifier = "Manual";
      label = "Manual";
   }
   value = "INSTANT" {
      identifier = "Instant";
      label = "Instant";
   }
}

--------------------------------- FUNCTIONS ---------------------------------
function GetSitesExcludingSupplySite List<Entity(Site)> {
   parameter SupplySite Text;

   where = "Contract <> :SupplySite";
}


