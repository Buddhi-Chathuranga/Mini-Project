-----------------------------------------------------------------------------
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-- 200109   MuShlk  MFSPRING20-650, Created.
-----------------------------------------------------------------------------

client PhraseConnectionRules;
component MPCCOM;
layer Core;

projection PhraseConnectionRulesHandling;
include fragment UserAllowedSiteLovSelector;
@DynamicComponentDependency INVENT
include fragment LovCommodityGroup2Selector;
--------------------------------- FRAGMENTS ---------------------------------

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   @DynamicComponentDependency PURCH
   entry PhraseConnectionRulesNavEntry parent Documents.DocumentTextAdministration at index 900 {
      label = "Procurement Clause Connection Rules";
      page List;
   }
}
-------------------------------- MAIN PAGES ---------------------------------
page List using PhraseConnectionRuleSet {
   label = "Procurement Clause Connection Rules";
   list PhraseConnectionRulesList;
}

--------------------------------- COMMANDS ----------------------------------
command ContractClauseWhereUsed for PhraseConnectionRule {
   label = "Procurement Clause - Where Used";
   mode = SelectedRecords;
   bulkexecute {
      bulknavigate "page/PhraseConnectionsWhereUsed/List?$filter=ConnectionRuleId eq $[ConnectionRuleId]";
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector PartCatalogSelector for PartCatalog {
   label = "${Description}";
   static PartNo;
   static Description;
   static UnitCode;
}

@DynamicComponentDependency PURCH
selector ReferenceSupplierSelectorCustom for SupplierInfoGeneral {
   static SupplierId;
   static Name;
}

@DynamicComponentDependency PROJ
selector ReferenceProjectSelectorCustom for Project {
   label = "Project";
   static ProjectId;
   static Description;
}
@DynamicComponentDependency PROJ
selector ReferenceSubProjectSelectorCustom for SubProjectLov {
   label = "Sub Project";
   field SubProjectId;
}

@DynamicComponentDependency PROJ
selector ReferenceActivitySelectorCustom for ActivityLov {
   label = "Activity";
   static ActivityNo;
}
---------------------------------- GROUPS -----------------------------------


----------------------------------- LISTS -----------------------------------
list PhraseConnectionRulesList for PhraseConnectionRule {
   orderby = ConnectionRuleId desc;

   field ConnectionRuleId {
      label = "Connection Rule ID";
   }
   lov PhraseIdRef with ReferenceMpccomPhraseSelector using GetPhrasesOfContractClauseType {
      label = "Phrase";
      size = Large;
      description = PhraseIdRef.Description;
   }
   lov ContractRef with ReferenceUserAllowedSiteLovSelector {
      description = ContractRef.ContractDesc;
      search = Contract, ContractDesc;
   }
   lov PartNoRef with PartCatalogSelector {
      label = "Part";
      search = PartNo, Description;
      description = PartNoRef.Description;
   }
   @DynamicComponentDependency INVENT
   lov SecondCommodityRef with ReferenceLovCommodityGroup2Selector {
      description = SecondCommodityRef.Description;
      search = CommodityCode, Description;
   }
   @DynamicComponentDependency PURCH
   lov VendorNoRef with ReferenceSupplierSelectorCustom {
      description = VendorNoRef.Name;
      search = SupplierId, Name;
   }
   @DynamicComponentDependency PROJ
   lov ProjectIdRef with ReferenceProjectSelectorCustom {
      description = ProjectIdRef.Description;
      search = ProjectId, Description;
   }
   @DynamicComponentDependency PROJ
   lov SubProjectIdRef with ReferenceSubProjectSelectorCustom;

   @DynamicComponentDependency PROJ
   lov ActivityNoRef with ReferenceActivitySelectorCustom;

   field NoteText {
      label = "Notes";
      size = Large;
   }
   badge Objstate {
      size = Small;
      style = TextOnly;
      label = "Validity";
      emphasis ValidityActive = [Objstate = "Active"];
      emphasis ValidityHidden = [Objstate = "Hidden"];
      emphasis ValidityBlocked = [Objstate = "Blocked"];
   }

   commandgroup ClauseTypesCmdGroup {
      command SetActive {
         label = "Set Active";
         mode = SelectedRecords;
      }
      command SetHidden {
         label = "Hide";
         mode = SelectedRecords;
      }
      command SetBlocked {
         label = "Block";
         mode = SelectedRecords;
      }
   }

   command ContractClauseWhereUsed;

}

----------------------------- STATE INDICATORS ------------------------------
