--------------------------------------------------------------------------------------
-- Date        Sign     History
-- ----------  ------   --------------------------------------------------------------
-- 2021-12-28  Asawlk   SC21R2-6957, Added DynamicComponentDependency annotation to DocumentAddressRef.
-- 2021-10-01  JaThlk   Bug 161014 (SC21R2-3038), Removed unnecessary BranchRef reference to avoid record duplication.
-- 2021-02-12  DiJwlk   SC2020R1-11551, Removed prefetch to optimize performance.
-- 2018-06-07  fandse   SCUXXW4-7985, Converted from tbwOverviewSites using MTG Version: 1.20
-- 2018-06-14  fandse   SCUXXW4-12255, Fixed labels
--------------------------------------------------------------------------------------

projection SitesHandling;
component MPCCOM;
layer Core;
description "Use this API to view, search, or group the basic data for all the sites defined on all the tabs in the Site window.";
category Users;
@DynamicComponentDependency ORDER
include fragment CustOrdCust1Selector;
@DynamicComponentDependency INVENT
include fragment CountryRegionAllLovSelector;
@DynamicComponentDependency INVENT
include fragment CountryOfRegionLovSelector;
include fragment WorkTimeCalendarLovSelector;
include fragment CompanyAddressLovPubSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset SiteSet for Site;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity Site {
   crud = Read, Update;
   keys = Contract {
      where = "CONTRACT = :Contract";
   }
   attribute DeliveryAddress Text {
      label = "Delivery Address";
      editable = [ETag = null];
   }
   @DynamicComponentDependency DISCOM
   attribute DocumentAddress Text {
      fetch = "SITE_DISCOM_INFO_API.Get_Document_Address_Id(CONTRACT, 'FALSE')";
      label = "Document Address";
      maxlength = 2000;
      editable = [ETag = null];
      format = uppercase;
   }
   attribute DistCalendarId Text {
      editable = [ETag = null];
   }
   attribute ManufCalendarId Text {
      editable = [ETag = null];
   }
   attribute Offset Number {
      label = "Time Zone Offset";
   }
   @DynamicComponentDependency INVENT
   attribute LastPeriodicWADate Date {
      fetch = "SITE_INVENT_INFO_API.Get_Last_Actual_Cost_Calc(CONTRACT)";
      label = "Last Periodic WA Date";
      editable = [ETag = null];
   }
   @DynamicComponentDependency DISCOM
   attribute CustomerOrderReportsConditionCodeDisplay Boolean("TRUE", "FALSE") {
      fetch = "SITE_DISCOM_INFO_API.Get_Disp_Cond_Cust_Order_Db(CONTRACT)";
      label = "Print Condition Code on Customer Order Reports";
      required = [true];
      editable = [ETag = null];
   }
   @DynamicComponentDependency DISCOM
   attribute PurchaseOrderReportsConditionCodeDisplay Boolean("TRUE", "FALSE") {
      fetch = "SITE_DISCOM_INFO_API.Get_Disp_Cond_Purch_Order_Db(CONTRACT)";
      label = "Print Condition Code on Purchase Order Reports";
      required = [true];
      editable = [ETag = null];
   }
   @DynamicComponentDependency MFGSTD
   attribute DefaultSOReceiptinBackground Boolean("TRUE", "FALSE") {
      fetch = "SITE_MFGSTD_INFO_API.Get_So_Receipt_Background_Db(CONTRACT)";
      label = "Receipt SO in Background";
      required = [true];
      editable = [ETag = null];
   }
   @DynamicComponentDependency ORDER
   attribute InternalCustomer Text {
      fetch = "Cust_Ord_Customer_API.Get_Customer_No_From_Contract(CONTRACT)";
      label = "Internal Customer";
      maxlength = 2000;
      editable = [false];
   }
   @DynamicComponentDependency PURCH
   attribute InternalSupplier Text {
      fetch = "Supplier_API.Get_Vendor_No_From_Contract(CONTRACT)";
      label = "Internal Supplier";
      maxlength = 2000;
      editable = [false];
   }
   @DynamicComponentDependency INVENT
   attribute CountryCode Text {
      fetch = "Site_Invent_Info_API.Get_Country_Code(CONTRACT)";
   }
   @DynamicComponentDependency INVENT
   attribute RegionCode Text {
      fetch = "Site_Invent_Info_API.Get_Region_Code(CONTRACT)";
   }
   @DynamicComponentDependency DISCOM
   attribute Branch Text {
      fetch = "Site_Discom_Info_API.Get_Branch(CONTRACT)";
   }

   reference CompanySiteRef(Contract) to CompanySite(Contract) {
      label = "Site";
   }
   @DynamicComponentDependency MSCOM
   reference SiteMscomInfoRef(Contract) to SiteMscomInfo(Contract);
   @DynamicComponentDependency INVENT
   reference SiteInventInfoRef(Contract) to SiteInventInfo(Contract);
   @DynamicComponentDependency DISCOM
   reference SiteDiscomInfoRef(Contract) to SiteDiscomInfo(Contract);
   @DynamicComponentDependency MFGSTD
   reference SiteMfgstdInfoRef(Contract) to SiteMfgstdInfo(Contract);
   reference CompanyRef(Company) to CompanyFinance(Company) {
      label = "Company";
   }
   reference DeliveryAddressRef(Company, DeliveryAddress) to CompanyAddressLovPub(Company, DeliveryAddress) {
      label = "Delivery Address";
   }
   @DynamicComponentDependency DISCOM
   reference DocumentAddressRef(Company, DocumentAddress) to CompanyAddressLovPub(Company, DeliveryAddress) {
      label = "Document Address";
   }
   reference DistCalendarIdRef(DistCalendarId) to WorkTimeCalendarLov(CalendarId) {
      label = "Distribution Calendar";
   }
   reference ManufCalendarIdRef(ManufCalendarId) to WorkTimeCalendarLov(CalendarId) {
      label = "Manufacturing Calendar";
   }
   @DynamicComponentDependency INVENT
   reference CountryCodeRef(CountryCode) to CountryOfRegionLov(CountryCode) {
      label = "Country";
   }
   @DynamicComponentDependency INVENT
   reference RegionCodeRef(RegionCode) to CountryRegionAllLov(RegionCode) {
      label = "Region";
   }
   @DynamicComponentDependency ORDER
   reference InternalCustomerRef(InternalCustomer) to CustOrdCust1(CustomerNo) {
      label = "Internal Customer";
   }
   @DynamicComponentDependency PURCH
   reference InternalSupplierRef(InternalSupplier) to Supplier(VendorNo) {
      label = "Internal Supplier";
   }
}
