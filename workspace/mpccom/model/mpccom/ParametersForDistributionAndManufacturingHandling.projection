-----------------------------------------------------------------------------
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-- 180329   KoDelk  SCUXXW4-7825,  Created.
-----------------------------------------------------------------------------
projection ParametersForDistributionAndManufacturingHandling;
component MPCCOM;
layer Core;
description "Handle System Parameters for Distribution and Manufacturing";
category Users;

-------------------------------- ENTITY SETS --------------------------------
entityset MpccomSystemParameters for MpccomSystemParameter;

--------------------------------- ENTITIES ----------------------------------
@Override
entity MpccomSystemParameter {
   crud = Update;

   where = "parameter_code = 'AUTO_AVAILABILITY_CHECK'";
   attribute ParameterValue1 Enumeration(GenYesNoAllowed);

   attribute CreateStatusValue Boolean("Y", "N") {
      required = [true];
      fetch = "DECODE(Mpccom_System_Parameter_API.Get_Parameter_Value1('SO_CREATE_STATUS'), 'Y', 'TRUE', 'FALSE')";
   }

   attribute ShortageHandlingValue Boolean("Y", "N") {
      required = [true];
      fetch = "DECODE(Mpccom_System_Parameter_API.Get_Parameter_Value1('SHORTAGE_HANDLING'), 'Y', 'TRUE', 'FALSE')";
   }
   attribute TransactionProjectTransferValue Boolean("Y", "N") {
      required = [true];
      fetch = "DECODE(Mpccom_System_Parameter_API.Get_Parameter_Value1('TRANSACTIONS_PROJECT_TRANSFERS'), 'Y', 'TRUE', 'FALSE')";
   }
   @DynamicComponentDependency RENTAL
   attribute RentalEventSyncSiteValue Enumeration(RentalEventSynchroSite) {
      fetch = "Mpccom_System_Parameter_API.Get_Parameter_Value1('RENTAL_EVENT_SYNCHRO_SITE')";
   }
   @DynamicComponentDependency RENTAL
   attribute RentalEventSyncCompanyValue Enumeration(RentalEventSynchroComp) {
      fetch = "Mpccom_System_Parameter_API.Get_Parameter_Value1('RENTAL_EVENT_SYNCHRO_COMPANY')";
   }

   attribute PrintControlValue Text {
      fetch = "Mpccom_System_Parameter_API.Get_Parameter_Value1('PRINT_CONTROL_CODE')";
   }

   attribute DefaultPlanDataValue Number {
      fetch = "Mpccom_System_Parameter_API.Get_Parameter_Value1('DEFAULT_PLAN_DATA_PERIODS')";
   }

   attribute LeadtimeReceptsValue Number {
      fetch = "Mpccom_System_Parameter_API.Get_Parameter_Value1('LEADTIME_RECEIPTS')";
   }

   attribute LeadtimeFactor1Value Number {
      fetch = "Mpccom_System_Parameter_API.Get_Parameter_Value1('LEADTIME_FACTOR1')";
   }

   attribute LeadtimeFactor2Value Number {
      fetch = "Mpccom_System_Parameter_API.Get_Parameter_Value1('LEADTIME_FACTOR2')";
   }

   attribute Parameter1Label Text {
      fetch = "SUBSTR(NVL(Basic_Data_Translation_API.Get_Basic_Data_Translation('MPCCOM', 'MpccomSystemParameter', 'AUTO_AVAILABILITY_CHECK'), description), 1, 50)";
   }

   attribute CreateStatusLabel Text {
      fetch = "SUBSTR(NVL(Basic_Data_Translation_API.Get_Basic_Data_Translation('MPCCOM', 'MpccomSystemParameter', 'SO_CREATE_STATUS'), description), 1, 50)";
   }

   attribute ShortageHandlingLabel Text {
      fetch = "SUBSTR(NVL(Basic_Data_Translation_API.Get_Basic_Data_Translation('MPCCOM', 'MpccomSystemParameter', 'SHORTAGE_HANDLING'), description), 1, 50)";
   }

   attribute TransactionProjectTransferLabel Text {
      fetch = "SUBSTR(NVL(Basic_Data_Translation_API.Get_Basic_Data_Translation('MPCCOM', 'MpccomSystemParameter', 'TRANSACTIONS_PROJECT_TRANSFERS'), description), 1, 50)";
   }

   attribute RentalEventSyncSiteLabel Text {
      fetch = "SUBSTR(NVL(Basic_Data_Translation_API.Get_Basic_Data_Translation('MPCCOM', 'MpccomSystemParameter', 'RENTAL_EVENT_SYNCHRO_SITE'), description), 1, 50)";
   }

   attribute RentalEventSyncCompanyLabel Text {
      fetch = "SUBSTR(NVL(Basic_Data_Translation_API.Get_Basic_Data_Translation('MPCCOM', 'MpccomSystemParameter', 'RENTAL_EVENT_SYNCHRO_COMPANY'), description), 1, 50)";
   }

   attribute PrintControlLabel Text {
      fetch = "SUBSTR(NVL(Basic_Data_Translation_API.Get_Basic_Data_Translation('MPCCOM', 'MpccomSystemParameter', 'PRINT_CONTROL_CODE'), description), 1, 50)";
   }

   attribute DefaultPlanDataLabel Text {
      fetch = "SUBSTR(NVL(Basic_Data_Translation_API.Get_Basic_Data_Translation('MPCCOM', 'MpccomSystemParameter', 'DEFAULT_PLAN_DATA_PERIODS'), description), 1, 50)";
   }

   attribute LeadtimeReceptsLabel Text {
      fetch = "SUBSTR(NVL(Basic_Data_Translation_API.Get_Basic_Data_Translation('MPCCOM', 'MpccomSystemParameter', 'LEADTIME_RECEIPTS'), description), 1, 50)";
   }

   attribute LeadtimeFactor1Label Text {
      fetch = "SUBSTR(NVL(Basic_Data_Translation_API.Get_Basic_Data_Translation('MPCCOM', 'MpccomSystemParameter', 'LEADTIME_FACTOR1'), description), 1, 50)";
   }

   attribute LeadtimeFactor2Label Text {
      fetch = "SUBSTR(NVL(Basic_Data_Translation_API.Get_Basic_Data_Translation('MPCCOM', 'MpccomSystemParameter', 'LEADTIME_FACTOR2'), description), 1, 50)";
   }

   reference CustOrdPrintControlRef(PrintControlValue) to CustOrdPrintControlLov(PrintControlCode);
}


---------------------------------- QUERIES ----------------------------------
query CustOrdPrintControlLov {
   from = "CUST_ORD_PRINT_CONTROL";
   lu = CustOrdPrintControl;
   keys = PrintControlCode;
   attribute PrintControlCode Text;
   attribute Description Text;
}



