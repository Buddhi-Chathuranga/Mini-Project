-----------------------------------------------------------------------------
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-- 180329   Lufelk  SCUXXW4-8000,  Created.
-----------------------------------------------------------------------------
projection BusinessEventsAnalysis;
component MPCCOM;
layer Core;
description "BusinessEventsAnalysis";
category Users;
----------------------------- MAIN ENTRY POINTS -----------------------------
entityset MpccomSystemEvents for MpccomSystemEvent;


------------------------------ ENTITY DETAILS -------------------------------

@Override
entity MpccomSystemEvent {
   crud = Read;
   from = "MPCCOM_SYSTEM_EVENT_ALL";
   attribute Description Text {
      label = "System Event Description";
      maxlength = 100;
   }
   attribute Direction Text {
      label = "Transaction Direction";
      maxlength = 1;
   }
   attribute InventoryStatDirection Enumeration(InventoryStatDirection) {
      fetch = "INVENTORY_STAT_DIRECTION_DB";
      label = "Inv Statistics Direction";
   }
   attribute IntrastatDirection Enumeration(IntrastatDirection) {
      fetch = "INTRASTAT_DIRECTION_DB";
      label = "Intrastat Direction";
   }
   attribute TransitQtyDirection Enumeration(StockQuantityDirection) {
      fetch = "TRANSIT_QTY_DIRECTION_DB";
      label = "Transit Qty Direction";
   }
   attribute TransactionSource Enumeration(MpccomTransactionSource) {
      fetch = "TRANSACTION_SOURCE_DB";
      label = "Posting/Transaction Source";
   }
   attribute OrderType Enumeration(OrderType) {
      fetch = "ORDER_TYPE_DB";
      label = "Order Type";
   }
   attribute SourceApplication Enumeration(SourceApplication) {
      fetch = "SOURCE_APPLICATION_DB";
      label = "Created by Object/Function";
   }
   attribute ConsignmentStock Enumeration(ConsignmentStockTrans) {
      fetch = "CONSIGNMENT_STOCK_DB";
      label = "Consignment Stock";
   }
   attribute CompanyOwnedAllowedDb Boolean("TRUE", "FALSE") {
      fetch = "COMPANY_OWNED_ALLOWED_DB";
      label = "Company Owned Stock Allowed";
   }
   attribute CompanyRentAssetAllowedDb Boolean("TRUE", "FALSE") {
      fetch = "COMPANY_RENT_ASSET_ALLOWED_DB";
      label = "Company Rental Asset Stock Allowed";
   }
   attribute CustomerOwnedStockDb Boolean("CUSTOMER OWNED STOCK ALLOWED", "CUSTOMER OWNED STOCK NOT ALLOWED") {
      fetch = "CUSTOMER_OWNED_STOCK_DB";
      label = "Customer Owned Stock Allowed";
   }
   attribute SupplierLoanedStockDb Boolean("SUPPLIER LOANED STOCK ALLOWED", "SUPPLIER LOANED STOCK NOT ALLOWED") {
      fetch = "SUPPLIER_LOANED_STOCK_DB";
      label = "Supplier Loaned Stock Allowed";
   }
   attribute SupplierRentedAllowedDb Boolean("TRUE", "FALSE") {
      fetch = "SUPPLIER_RENTED_ALLOWED_DB";
      label = "Supplier Rented Stock Allowed";
   }
   attribute CorrespondingTransaction Text {
      fetch = "CORRESPONDING_TRANSACTION";
      label = "Corresponding Transaction";
      maxlength = 10;
      format = uppercase;
   }
   attribute PartTracing Enumeration(PartTracing) {
      fetch = "PART_TRACING_DB";
      label = "Part Tracing";
   }
   attribute ActualCostReceipt Enumeration(ActualCostReceipt) {
      fetch = "ACTUAL_COST_RECEIPT_DB";
      label = "Periodic WA Receipt";
   }
   attribute CostSource Enumeration(TransactionCostSource) {
      fetch = "COST_SOURCE_DB";
      label = "Unit Cost Source";
   }
   attribute TransBasedRevalGroup Enumeration(TransBasedRevalGroup) {
      fetch = "TRANS_BASED_REVAL_GROUP_DB";
      label = "Transaction Based Revaluation Group";
   }
   attribute Notc Text {
      fetch = "NOTC";
      label = "NOTC";
      maxlength = 2;
   }
   attribute NOTCDescription Text {
      fetch = "NOTC_API.Get_Description(NOTC)";
      label = "NOTC Description";
      maxlength = 2000;
   }
   attribute AuthorizeId Text {
      fetch = "AUTHORIZE_ID";
      label = "Authorize ID";
      maxlength = 5;
   }
   attribute OnlineFlagDb Boolean("Y", "N") {
      fetch = "ONLINE_FLAG_DB";
      label = "Codestring Validation Online";
   }
   attribute MaterialAdditionFlagDb Boolean("Y", "N") {
      fetch = "MATERIAL_ADDITION_FLAG_DB";
      label = "Material Overhead";
   }
   attribute Oh1BurdenFlagDb Boolean("Y", "N") {
      fetch = "OH1_BURDEN_FLAG_DB";
      label = "Machine Overhead 1";
   }
   attribute Oh2BurdenFlagDb Boolean("Y", "N") {
      fetch = "OH2_BURDEN_FLAG_DB";
      label = "Machine Overhead 2";
   }
   attribute MsAdditionFlagDb Boolean("Y", "N") {
      fetch = "MS_ADDITION_FLAG_DB";
      label = "Administration Overhead";
   }
   attribute DeliveryOverheadFlagDb Boolean("Y", "N") {
      fetch = "DELIVERY_OVERHEAD_FLAG_DB";
      label = "Delivery Overhead";
   }
   attribute LaborOverheadFlagDb Boolean("Y", "N") {
      fetch = "LABOR_OVERHEAD_FLAG_DB";
      label = "Labor Overhead";
   }
   attribute GeneralOverheadFlagDb Boolean("Y", "N") {
      fetch = "GENERAL_OVERHEAD_FLAG_DB";
      label = "General Overhead";
   }
   attribute SalesOverheadFlagDb Boolean("TRUE", "FALSE") {
      fetch = "SALES_OVERHEAD_FLAG_DB";
      label = "Sales Overhead";
   }
   attribute ConsignmentEvent Enumeration(ConsignmentStockEvent) {
      fetch = "CONSIGNMENT_EVENT_DB";
      label = "Consignment Event";
   }
   attribute ReceiptIssueTrackingDb Boolean("TRUE", "FALSE") {
      fetch = "RECEIPT_ISSUE_TRACKING_DB";
      label = "At Receipt and Issue";
   }
   reference MpccomSystemEventRef(CorrespondingTransaction) to MpccomSystemEvent(SystemEventId);
   reference NotcRef(Notc) to Notc(Notc) {
      label = "NOTC";
   }
}