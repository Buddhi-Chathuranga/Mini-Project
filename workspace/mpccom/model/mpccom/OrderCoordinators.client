-------------------------------------------------------------------------------------------------
--  Date        Sign    History
--  ----------  ------  -------------------------------------------------------------------------
--  2019-07-12  RaVdlk  SCUXXW4-20847, Set Data Validity Colours.
--  2018-11-20  MalLlk  SCUXXW4-7722, Converted dlgUpdateDefaultCoordinator using MTG Version: 1.33
--  2018-04-25  Ergrno  SCUXXW4-7900, Created.
-------------------------------------------------------------------------------------------------

client OrderCoordinators;
component MPCCOM;
layer Core;
projection OrderCoordinatorHandling;

include fragment OrderCoordinatorLovSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry OrderCoordinatorNavEntry parent MpccomNavigator.ApplicationBaseSetupGeneralData at index 700 {
      label = "Coordinators";
      page List home OrderCoordinator;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page List using OrderCoordinators {
   label = "Coordinators";
   startupmode = search;
   list OrderCoordinatorsList;
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command OkCommand for UpdateDefaultCoordinatorStructure {
   label = "OK";
   enabled = [AuthorizeCode != null];

   execute {
      if [ExistingAuthorizeCode = AuthorizeCode] {
         confirm("A different Coordinator ID should be entered.");
         set AuthorizerModified = "FALSE";
         exit;
      }
      call ModifyDefaultCoordinator(ExistingAuthorizeCode, AuthorizeCode);
      set AuthorizerModified = "TRUE";
      exit OK;
   }
}

@Override
command SetBlocked for OrderCoordinator {
   variable AuthorizerModifiedVar {
      type = Text;
   }
   variable DefaultCoordinatorExistVar {
      type = Text;
   }

   execute {
      if [Objstate = "Active"] {
         call DefaultCoordinatorExist(AuthorizeCode) into DefaultCoordinatorExistVar;
         if [DefaultCoordinatorExistVar = "TRUE"] {
            dialog UpdateDefaultCoordinatorDialog(AuthorizeCode) into(AuthorizerModifiedVar) {
               when OK {
                  if [AuthorizerModifiedVar = "TRUE"] {
                     call SetBlocked();
                     refresh;
                     exit OK;
                  }
                  else {
                     exit CANCEL;
                  }
               }
               when CANCEL {
                  exit CANCEL;
               }
            }
         }
         else {
            call SetBlocked();
            refresh;
         }
      }
   }
}
--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------
group UpdateDefaultCoordinatorGroup for UpdateDefaultCoordinatorStructure {
   label = "Select Default Coordinator";
   lov AuthorizeCodeRef with ReferenceOrderCoordinatorLovSelector {
      description = AuthorizeCodeRef.Name;
      size = Large;
   }
}

----------------------------------- LISTS -----------------------------------
list OrderCoordinatorsList for OrderCoordinator {
   field AuthorizeCodeRef {
      validate command {
         execute {
            call GetName(AuthorizeCode) into Name;
            call GetPhone(AuthorizeCode) into Phone;
         }
      }
      contactwidget {
         enabled = [true];
         source = Person;
      }
   }
   field Name;
   field Phone;
   field AuthorizeGroupRef;
   badge Objstate {
      label = "Validity";
      style = TextOnly;
      emphasis ValidityActive = [Objstate = "Active"];
      emphasis ValidityHidden = [Objstate = "Hidden"];
      emphasis ValidityBlocked = [Objstate = "Blocked"];
   }
   commandgroup ChangeValidity {
      label = "Change Validity";
      command SetActive {
         label = "Set Active";
      }
      command SetHidden {
         label = "Hide";
      }
      command SetBlocked {
         label = "Block";
      }
   }
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------
dialog UpdateDefaultCoordinatorDialog for UpdateDefaultCoordinatorStructure {
   label = "Update Default Coordinator";
   input(ExistingAuthorizeCode);
   output(AuthorizerModified);

   group UpdateDefaultCoordinatorGroup;
   markdowntext {
      text = "Note: The value entered here will be used to update the default coordinator ID for all users, whose current default value is the same as the one you have selected to be blocked for use.";
   }

   commandgroup ButtonCmdGroup {
      label = "Buttons";
      command OkCommand;
      command Cancel;
   }
}

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------
