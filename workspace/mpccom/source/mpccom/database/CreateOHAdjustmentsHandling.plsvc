-----------------------------------------------------------------------------
--
--  Logical unit: CreateOHAdjustmentsHandling
--  Component:    MPCCOM
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  200925  Dinklk  MF2020R1-7324, Modified Start_Create_Adjustments___ to call Per_Oh_Adjustment_History_API.New__
--  200925          only if parent and child has same create_oh_adjustment_based_on option.
--  200910  Dinklk  MF2020R1-7147, Modified Start_Create_Adjustments___ logic to check create_oh_adjustment_based_on.
--  180524  KoDelk  SCUXXW4-21488, Added missing functionality.
-----------------------------------------------------------------------------

layer Core;

FUNCTION Get_Default_Values___ RETURN Default_Values_Struct_Rec
IS
   return_ Default_Values_Struct_Rec;
BEGIN
   return_.company := User_Finance_API.Get_Default_Company_Func();
   return_.dating_of_postings := Per_Oh_Adjustment_Dating_API.DB_CURRENT_DATE;
   
   RETURN return_;
   
END Get_Default_Values___;

PROCEDURE Start_Create_Adjustments___ (
	key_ IN Create_Oh_Adjustments_Virtual_Key)
IS
   parent_           Create_Oh_Adjustments_Virtual_Rec;
   attr_             VARCHAR2(32000);
   info_             VARCHAR2(32000);
   objid_            VARCHAR2(32000);
   objversion_       VARCHAR2(32000);
   run_id_           NUMBER;
BEGIN
   parent_  := Get_Record___(key_);
   run_id_  := Per_Oh_Adjustment_History_API.Get_Next_Run_Id__();
   
   User_Finance_API.Is_User_Authorized(parent_.company) ;
   
   FOR rec_ IN Get_Detail_Adjustments___(key_) LOOP
      IF parent_.create_oh_adjustment_based_on = rec_.create_oh_adjustment_based_on THEN
         Client_SYS.Add_To_Attr('COMPANY',               parent_.company,              attr_);
         Client_SYS.Add_To_Attr('ADJUSTMENT_RUN_ID',     run_id_,                      attr_);
         Client_SYS.Add_To_Attr('ACCOUNTING_YEAR',       parent_.accounting_year,      attr_);
         Client_SYS.Add_To_Attr('DATING_OF_POSTINGS',    Per_Oh_Adjustment_Dating_API.Decode(parent_.dating_of_postings),         attr_);
         IF parent_.create_oh_adjustment_based_on = 'CostSource' THEN
            Client_SYS.Add_To_Attr('OH_TYPE',            Per_Oh_Adjustment_Oh_Type_API.Decode(rec_.oh_type_based_on_cost_source), attr_);
            Client_SYS.Add_To_Attr('COST_SOURCE_ID',     rec_.cost_source_id,          attr_);
         ELSE
            Client_SYS.Add_To_Attr('OH_TYPE',            Per_Oh_Adjustment_Oh_Type_API.Decode(rec_.oh_type_based_on_posting_grp), attr_);
            Client_SYS.Add_To_Attr('POSTING_GROUP_ID',   rec_.posting_group_id,        attr_);
         END IF;
         Client_SYS.Add_To_Attr('ADJUSTMENT_PERCENTAGE', rec_.adjustment_percentage,   attr_);
         Client_SYS.Add_To_Attr('ADJUSTMENT_REASON',     rec_.adjustment_reason_id,    attr_);
         Client_SYS.Add_To_Attr('NOTE',                  rec_.note,                    attr_);

         Per_Oh_Adjustment_History_API.New__(info_, objid_, objversion_, attr_, 'DO');
      END IF;
   END LOOP;
   
   Per_Oh_Adjustment_Mpccom_API.Start_Create_Adjustments__(run_id_);
   
END Start_Create_Adjustments___;


FUNCTION Validate_Oh_Types___ (
	key_ IN Create_Oh_Adjustments_Virtual_Key) RETURN Adjustment_Warning_Struct_Rec
IS
   return_val_ Adjustment_Warning_Struct_Rec;
   parent_     Create_Oh_Adjustments_Virtual_Rec;
BEGIN
   parent_  := Get_Record___(key_);
   return_val_.validate_ok := TRUE;
   
   FOR rec_ IN Get_Detail_Adjustments___(key_) LOOP
      IF rec_.adjustment_percentage = -1 THEN
         return_val_.validate_ok                  := FALSE;
         return_val_.oh_type_based_on_cost_source := rec_.oh_type_based_on_cost_source;
         return_val_.oh_type_based_on_posting_grp := rec_.oh_type_based_on_posting_grp;
         return_val_.company                      := parent_.company;
         
         RETURN return_val_;
      END IF;
   END LOOP;
   
   RETURN return_val_;
END Validate_Oh_Types___;
