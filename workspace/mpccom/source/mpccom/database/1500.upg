----------------------------------------------------------------------------------------------
--  Module : MPCCOM
--
--  Purpose: Upgrade of MPCCOM database objects from release 14.1.0 to 15.0.0.
--
--  File   : 1500.upg
--
--  IFS/Design Template Version 2.3
--
--  Date    Sign    History
--  ------  ------  --------------------------------------------------------------------------------------------------------------------
--  200511  ChFolk  Bug 153808(SCZ-10008) Modified pre-posting and project pre-posting flags of M10 Debit, M18 Credit and M277 both Debit and Credit postings in APINVOICE.
--  180228  KiSalk  STRSC-8854, Made new records in ACC_EVENT_POSTING_TYPE_TAB to be created with booking of string code M263 as 40 and M291 and M292 as 39.
--  180206  SWiclk  STRSC-16832, Modified column length of PARAMETER_VALUE1 from 1000 to 2000 in order to support SCANDIT_APP_KEY.
--  180130  ChFolk  STRSC-14899, Replaced wrong booking number with correct value on accounting events ARRCHG, ARRCHG-DIR, RENTIN+, RENTIN-, RENTIN-NI+, and RENTIN-NI-.
--  171220  DiKuLk  Bug 138969, Added new column INTRASTAT_TAX_NUMBER to COMPANY_DISTRIBUTION_INFO_TAB.
--  171205  SWiclk  STRSC-14791, Modified length of column PARAMETER_VALUE1 from 80 to 1000 of table MPCCOM_SYSTEM_PARAMETER_TAB.
--  171011  ErFelk  Bug 137410, German country notc descriptions was changed from this bug. Therefore removed the German entries from 
--  171011          the country_notc_tab and insert the country notc with the new descriptions through CountryNotc.ins.
--  171010  TiRalk  STRSC-12295, Modified length of column DESCRIPTION from 100 to 200 of table MPCCOM_SYSTEM_EVENT_TAB.
--  170908  UdGnlk  Bug 136645, Define posting types for business events 'PURTRAN'.
--  170822  KiSalk  Bug 136124, Added new posting types M291, M292 to the ACC_EVENT_POSTING_TYPE_TAB.
--  170728  MaRalk  STRSC-10691, Added DEFAULT_SHIPMENT_FREIGHT_PAYER to ORDER_DELIVERY_TERM_TAB.
--  170712  PrYaLK  Bug 136463, Merged 170711_STRSC-10717_Mpccom.cdb into this upg.
--  170505  ShPrlk  Bug 134687, Added trailing period symbol for prompts ending with '-' to display prompt properly.
--  170421  Cpeilk  STRSC-6843, Registered M265 as debit and M266 as credit posting against accounting event APINVOICE.
--  170406  DAYJLK  STRSC-6740, Registered M198 as a credit posting against accounting event APINVOICE.
--  170327  tratlk  STRPJ-20758, Enable project pre posting for M278 in PD-SHIP.
--  170323  HaPulk  STRSC-5719, Revert back to Move_Index (MPCCOM_ACCOUNTING_IX1) since Move is better than Drop/Create.
--  170308  DAYJLK  STRSC-4985, Registered posting types M189 and M187 against accounting event APINVOICE.
--  170220  tratlk  STRPJ-19941, Added posting types M1, M278 for PD-SHIP business event
--  170214  ChFolk  STRSC-6111, Added new posting types M287, M288, M289, M290 against accounting event APINVOICE.
--  170213  HaPulk  STRSC-5719, Drop Index MPCCOM_ACCOUNTING_IX1 if it's in wrong TableSpace and recreate.
--  170208  DAYJLK  STRSC-4960, Registered posting types M277, M10 and M18 against accounting event APINVOICE.
--  170130  DAYJLK  STRSC-5580, Modified booking numbers on posting types M273, M274, M275, and M276 for APINVOICE posting events.
--  170126  LaThlk  STRSC-4334, Add new column ALLOW_LAPSES_IN_NUMBERS in to the ORDER_COORDINATOR_GROUP_TAB in order to decide whether to reset the numbers
--  170126          when an error occurred.
--  170119  Cpeilk  STRSC-5027, Added new posting types FSMARRIVAL, FSMPRDIFF+, FSMPRDIFF- and APINVOICE. Also added
--  170119          INTERN-IN, INTERN-OUT, EXTERN-IN and EXTERN-OUT business events and corresponding postings controls to handle FSM transactions.
--  170106  SudJlk  STRSC-5316, Set keep_default_ where value was missing for rowstate introduced for data validity.
--  161216  DAYJLK  STRSC-4944, Added posting types M273, M274, M275, and M276 as APINVOICE posting events.
--  161004  Nilalk  STRSC-3625, Added new posting types RETINTPODS, RETSHIPDIR, RETDIFSREC,RETDIFSSCP, RETDIFS-NI and RETDIR-SCP to the ACC_EVENT_POSTING_TYPE_TAB.
--  160826  BudKlk  STRSC-3758, Added new posting types  RETPODIRSH, RETPODIRNI, RETPODSINT, RETDSDELOH, RETARCHGDS to the ACC_EVENT_POSTING_TYPE_TAB.
--  160706  SudJlk  STRSC-1959, Added validity(rowstate) to ORDER_COORDINATOR_TAB and obsolete column BLOCKED_FOR_USE.
--  160630  ChFolk  STRSC-1960, Added validity(rowstate) to ORDER_CANCEL_REASON_TAB and obsolete column BLOCKED_FOR_USE.
--  160630  NiAslk  STRSC-1958, Added validity (rowstate) to ORDER_DELIVERY_TERM_TAB and update ROWSTATE from existing column BLOCKED_FOR_USE and made it to nullable.
--  160615  HaPulk  STRSC-2657, Moved MPCCOM_ACCOUNTING_IX1 Index into Correct Tablespace
--  160505  ChFolk  STRSC-2217, Added validity(rowstate) to MPCCOM_SHIP_VIA_TAB.
--  160419  JanWse  STRSC-1785, Added validity (rowstate) to SCRAPPING_CAUSE_TAB
--  160407  MaEelk  STRSC-1916, Corrected installation errors.
--  160330  DipeLK  STRLOC-274,Adding posting types for accounting events INVOICE-D, INVOICE-C
--  160229  KhVese  STRSC-1404, Merged 160224_LIM-4892_Mpccom.cdb into this upg.
--  151119  MaEelk  STRSC-402, Merged UPDATE1 CDB's to STRIKE
--  151016  PrYaLK  STRSC-46, Inserting Country Code of Slovenia to the language code table.
--  150909  RoJalk  AFT-3386, Modify pre_accounting_flag to include prepostings for posting
--  150909          types M221, M222 and M223 for CRO-EX-DEL, CRO-EX-SCR and CRO-EX-ARR.
--  150825  AyAmlk  Bug 114937, Added new column TRANS_REVAL_EVENT_ID to table MPCCOM_ACCOUNTING_TAB.
--  150821  NaSalk  RED-211, Modified project_accounting_flag to exclude the project prepostings for posting types M218 and M225.
--  150821  ErFelk  Bug 117650, Inserting posting types for posting events BALINVOIC+ and BALINVOIC-.
--  150720  ErFelk  Bug 123659, Enabled credit and debit posting types values for WOREPREC business event and credit posting type for WOREPISS business event by
--  150720          inserting related values to the ACC_EVENT_POSTING_TYPE_TAB. This was written to rectify the merge issue of the initial bug 114599.
--  150623  LEPESE  LIM-3099, added posting types for HANDLUNIT-, HANDLUNIT+, CO-HANDLU-, CO-HANDLU+.
--  150601  PKurLK  Added posting types M213, M214, M215, M216 against event APINVOICE.
--  150521  BhKaLK  RED-279, Registered accounting event posting types for WORENT+ and WORENT- business events.
--  150513  ErSrLK  MONO-207, Renamed business event SOCLOSE to SOCLOSE+. And registered
--  150513          accounting event posting types for SOCLOSE- business event as well.
--  150428  ErSrLK  MONO-206, Created. Registered accounting event posting types for SOCLOSE business event.
--  150331  SBalLK  Case 121394, Creating index for MPCCOM_ACCOUNTING_TAB table with all code parts to increase the performance.
-----------------------------------------------------------------------------------------------

SET SERVEROUTPUT ON
exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_1');
PROMPT Start upgrading with 1500.upg

------------------------------------------------------------------------------------------
---------------------------- Instructions for upg files ----------------------------------
------------------------------------------------------------------------------------------

-- If possible, everything regarding one table should be placed in one section.
-- If this is not possible, a proper comment about the reason should be added.

-- Each section should be started with a "-----" line and a empty line.
-- This section should then start with a line like: "-- ***** Example_Tab Start *****"
-- and end with a line like:                       "-- ***** Example_Tab End *****"
-- Don't forget UPPER/lower case !

-- Every part inside the section should start with a "PROMPT" line explaining what is done by the block.

-- If the Pl/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.

-- Remember ordinary coding standard rules !

-- Don't drop any Table/Column !

-- Don't forget performance when updating large table !

-- No unnecessary blank lines or comments !

-- If possible, use pure SQL commands
-- If possible, try to group several updates together in one statement.

-- For more information refer the "Upgrade Script Standards document and the Performance Guide.

-- Timestamps will be added automatically at the end of the project.


---------------------------------------------------------------------------------------------
--------------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ----------------------
---------------------------------------------------------------------------------------------

-- ***** MPCCOM_ACCOUNTING_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_2');
PROMPT Adding column TRANS_REVAL_EVENT_ID to table MPCCOM_ACCOUNTING_TAB.
DECLARE
   column_ Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('TRANS_REVAL_EVENT_ID', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column('MPCCOM_ACCOUNTING_TAB', 'A', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_3');
PROMPT Creating index for MPCCOM_ACCOUNTING_TAB table with all code parts to increase the performance.
DECLARE
  columns_          Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'STATUS_CODE');
   Database_SYS.Set_Table_Column (columns_, 'ACCOUNT_NO');
   Database_SYS.Set_Table_Column (columns_, 'CODENO_B');
   Database_SYS.Set_Table_Column (columns_, 'CODENO_C');
   Database_SYS.Set_Table_Column (columns_, 'CODENO_D');
   Database_SYS.Set_Table_Column (columns_, 'CODENO_E');
   Database_SYS.Set_Table_Column (columns_, 'CODENO_F');
   Database_SYS.Set_Table_Column (columns_, 'CODENO_G');
   Database_SYS.Set_Table_Column (columns_, 'CODENO_H');
   Database_SYS.Set_Table_Column (columns_, 'CODENO_I');
   Database_SYS.Set_Table_Column (columns_, 'CODENO_J');
   Database_SYS.Set_Table_Column (columns_, 'ACTIVITY_SEQ');
   Database_Sys.Create_Index( 'MPCCOM_ACCOUNTING_TAB',
                              'MPCCOM_ACCOUNTING_IX1',
                              columns_,
                              'N',
                              '&IFSAPP_INDEX',
                              show_info_ => TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_4');
PROMPT Move INDEX MPCCOM_ACCOUNTING_IX1 into Correct Tablespaces
BEGIN
   -- This cannot be combined with Database_Sys.Create_Index as long as existing columns/uniqueness are same
   IF Database_SYS.Get_Tablespace_Name ('MPCCOM_ACCOUNTING_IX1') <> ('&IFSAPP_INDEX') THEN
      Database_SYS.Move_Object('MPCCOM_ACCOUNTING_IX1', '&IFSAPP_INDEX', TRUE);
   END IF;
END;
/
-- ***** MPCCOM_ACCOUNTING_TAB End *****


-- ***** COMPANY_DISTRIBUTION_INFO_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_5');
PROMPT Adding COLUMNS to COMPANY_DISTRIBUTION_INFO_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'COMPANY_DISTRIBUTION_INFO_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('DATA_CAPTURE_MENU_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_6');
PROMPT Adding column INTRASTAT_TAX_NUMBER to table COMPANY_DISTRIBUTION_INFO_TAB.
DECLARE
   column_ Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('INTRASTAT_TAX_NUMBER', 'VARCHAR2(50)', 'Y');
   Database_SYS.Alter_Table_Column('COMPANY_DISTRIBUTION_INFO_TAB', 'A', column_, TRUE);
END;
/
-- ***** COMPANY_DISTRIBUTION_INFO_TAB End *****


-- ***** SITE_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_7');
PROMPT Adding COLUMNS to SITE_TAB.

DECLARE
   table_name_ VARCHAR2(30) := 'SITE_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('DATA_CAPTURE_MENU_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/
-- ***** SITE_TAB End *****


------------------------------------------------------------------------------------------

-- ***** ACC_EVENT_POSTING_TYPE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_8');
PROMPT inserting posting types for accounting events HANDLUNIT-, HANDLUNIT+, CO-HANDLU-, CO-HANDLU+ into ACC_EVENT_POSTING_TYPE_TAB...
PROMPT Inserting Credit and Debit posting type for WOREPREC and Credit posting type for WOREPISS business events.
PROMPT Inserting posting types for posting events BALINVOIC+ and BALINVOIC-.
PROMPT Inserting Credit and Debit posting type for SOCLOSE business event.
PROMPT Inserting Credit and Debit posting type for WORENT business event.
PROMPT Inserting posting types for PD-SHIP business event.
PROMPT Inserting posting types for business event PURTRAN.
DECLARE
BEGIN
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('HANDLUNIT-','M3','D',1,'N','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('HANDLUNIT-','M1','C',1,'N','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('HANDLUNIT+','M1','D',1,'N','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('HANDLUNIT+','M3','C',1,'N','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('CO-HANDLU-','M3','D',1,'N','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('CO-HANDLU-','M60','C',1,'N','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('CO-HANDLU+','M60','D',1,'N','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('CO-HANDLU+','M3','C',1,'N','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('WOREPISS','M1','C',1,'N','SITUATIONAL PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('WOREPREC','M1','D',1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES('WOREPREC','M208','C',1,'Y','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES('BALINVOIC+','M19','D',1,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES('BALINVOIC+','M10','C',1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES('BALINVOIC-','M10','D',1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES('BALINVOIC-','M20','C',1,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES('SOCLOSE+','M40','D',1,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES('SOCLOSE+','M59','C',1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES('SOCLOSE-','M59','D',1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES('SOCLOSE-','M40','C',1,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('WORENT+','M261','D',1,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('WORENT+','M262','C',1,'N','SITUATIONAL PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('WORENT-','M261','C',1,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('WORENT-','M262','D',1,'N','SITUATIONAL PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M213','D',19,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M214','C',20,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M215','D',21,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M216','C',22,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M273','D',26,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
         WHEN dup_val_on_index THEN
            NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M274','C',27,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
         WHEN dup_val_on_index THEN
            NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M275','D',28,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
         WHEN dup_val_on_index THEN
            NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M276','C',29,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
         WHEN dup_val_on_index THEN
            NULL;
   END;

   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M277','D',30,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
         WHEN dup_val_on_index THEN
            NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M277','C',31,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
         WHEN dup_val_on_index THEN
            NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M10','D',32,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
         WHEN dup_val_on_index THEN
            NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M18','C',33,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
         WHEN dup_val_on_index THEN
            NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M287','D',34,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M288','C',35,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M289','D',36,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M290','C',37,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M189','D',38,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
         WHEN dup_val_on_index THEN
            NULL;
   END;

   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M187','C',39,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
         WHEN dup_val_on_index THEN
            NULL;
   END;

   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M198','C',40,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
         WHEN dup_val_on_index THEN
            NULL;
   END;

   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETPODIRSH','M14','D',1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETPODIRSH','M25','C',1,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETDSDELOH','M152','D',1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETDSDELOH','M25','C',1,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETARCHGDS','M196','D',1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETARCHGDS','M25','C',1,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETPODSINT','M14','D',1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETPODSINT','M3','C',1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETPODIRNI','M95','D',1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETPODIRNI','M26','C',1,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETINTPODS','M4','D',1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETINTPODS','M25','C', 1,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETSHIPDIR','M1','D', 1, 'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETSHIPDIR','M4','C', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETDIFSREC','M1','D', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETDIFSREC','M4','C', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETDIFSSCP','M6','D', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETDIFSSCP','M4','C', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETDIFS-NI','M79','D', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETDIFS-NI','M95','C', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETDIR-SCP','M6','D', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('RETDIR-SCP','M4','C', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('FSMARRIVAL','M264','D', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('FSMARRIVAL','M265','C', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('FSMPRDIFF+','M267','D', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('FSMPRDIFF+','M265','C', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('FSMPRDIFF-','M265','D', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('FSMPRDIFF-','M268','C', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M266','D', 23,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M267','D', 24,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M268','C', 25,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M265','D', 41,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('APINVOICE','M266','C', 42,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('INTERN-IN','M264','D', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('INTERN-IN','M269','C', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('INTERN-OUT','M270','D', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('INTERN-OUT','M264','C', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('EXTERN-IN','M264','D', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('EXTERN-IN','M271','C', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('EXTERN-OUT','M272','D', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('EXTERN-OUT','M264','C', 1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('PD-SHIP','M278','D',1,'Y','INCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('PD-SHIP','M1','C',1,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE, STR_CODE, DEBIT_CREDIT, BOOKING, PRE_ACCOUNTING_FLAG, PROJECT_ACCOUNTING_FLAG, ROWVERSION)
      VALUES ('PURTRAN', 'M4', 'D', 1, 'N', 'EXCLUDE PROJECT PRE POSTING', SYSDATE);
   EXCEPTION
         WHEN dup_val_on_index THEN
            NULL;   
   END;

   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE, STR_CODE, DEBIT_CREDIT, BOOKING, PRE_ACCOUNTING_FLAG, PROJECT_ACCOUNTING_FLAG, ROWVERSION)
      VALUES ('PURTRAN', 'M1', 'C', 1, 'N', 'SITUATIONAL PROJECT PRE POSTING', SYSDATE);
   EXCEPTION
         WHEN dup_val_on_index THEN
            NULL;   
   END; 
   
   COMMIT;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_9');
PROMPT Adding posting types for accounting events INVOICE-D, INVOICE-C
DECLARE
BEGIN
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('INVOICE-D','M263','D',40,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES ('INVOICE-C','M263','C',40,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);

   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;

   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES('INVOICE-D','M291','C',39,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;

   BEGIN
      INSERT INTO ACC_EVENT_POSTING_TYPE_TAB(EVENT_CODE,STR_CODE,DEBIT_CREDIT,BOOKING,PRE_ACCOUNTING_FLAG,PROJECT_ACCOUNTING_FLAG,ROWVERSION)
      VALUES('INVOICE-C','M292','C',39,'N','EXCLUDE PROJECT PRE POSTING',SYSDATE);
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;
   END;
   COMMIT;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_10');
PROMPT Modify project_accounting_flag to exclude the project prepostings for posting types M218 and M225.
UPDATE acc_event_posting_type_tab
SET project_accounting_flag = 'EXCLUDE PROJECT PRE POSTING'
WHERE str_code IN ('M218', 'M225');

COMMIT;

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_11');
PROMPT Modify pre_accounting_flag to include prepostings for posting types M221, M222 and M223 for CRO-EX-DEL, CRO-EX-SCR and CRO-EX-ARR.
UPDATE acc_event_posting_type_tab
SET    pre_accounting_flag = 'Y'
WHERE  event_code          = 'CRO-EX-DEL'
  AND  str_code            = 'M221'
  AND  debit_credit        = 'D'
  AND  booking             = 1;

UPDATE acc_event_posting_type_tab
SET    pre_accounting_flag = 'Y'
WHERE  event_code          = 'CRO-EX-SCR'
AND    str_code            = 'M222'
AND    debit_credit        = 'D'
AND    booking             = 1;

UPDATE acc_event_posting_type_tab
SET    pre_accounting_flag = 'Y'
WHERE  event_code          = 'CRO-EX-ARR'
AND    str_code            = 'M223'
AND    debit_credit        = 'C'
AND    booking             = 1;

COMMIT;

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_12');
PROMPT Replace erroneous booking numbers with correct values on accounting events ARRCHG, ARRCHG-DIR, RENTIN+, RENTIN-, RENTIN-NI+, and RENTIN-NI-.
BEGIN
   BEGIN
      UPDATE ACC_EVENT_POSTING_TYPE_TAB
      SET booking             = 1
      WHERE event_code        = 'ARRCHG'
      AND    str_code         = 'M189'
      AND    debit_credit     = 'C'
      AND    booking          = 2;     
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;   
   END;   
      
   BEGIN
      UPDATE ACC_EVENT_POSTING_TYPE_TAB
      SET booking             = 1
      WHERE event_code        = 'ARRCHG-DIR'
      AND    str_code         = 'M189'
      AND    debit_credit     = 'C'
      AND    booking          = 2;     
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;   
   END;
   BEGIN
      UPDATE ACC_EVENT_POSTING_TYPE_TAB
      SET booking             = 1
      WHERE event_code        = 'RENTIN+'
      AND    str_code         = 'M218'
      AND    debit_credit     = 'C'
      AND    booking          = 2;     
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;   
   END;
   BEGIN
      UPDATE ACC_EVENT_POSTING_TYPE_TAB
      SET booking             = 1
      WHERE event_code        = 'RENTIN-'
      AND    str_code         = 'M218'
      AND    debit_credit     = 'D'
      AND    booking          = 2;     
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;   
   END;
   BEGIN
      UPDATE ACC_EVENT_POSTING_TYPE_TAB
      SET booking             = 1
      WHERE event_code        = 'RENTIN-NI+'
      AND    str_code         = 'M225'
      AND    debit_credit     = 'C'
      AND    booking          = 2;     
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;   
   END;
   BEGIN
      UPDATE ACC_EVENT_POSTING_TYPE_TAB
      SET booking             = 1
      WHERE event_code        = 'RENTIN-NI-'
      AND    str_code         = 'M225'
      AND    debit_credit     = 'D'
      AND    booking          = 2;     
   EXCEPTION
      WHEN dup_val_on_index THEN
         NULL;   
   END;
   COMMIT;
END;
/
  
-- ***** ACC_EVENT_POSTING_TYPE_TAB End *****

------------------------------------------------------------------------------------------

-- ***** LANGUAGE_CODE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_13');
PROMPT Inserting Country Code FOR Slovenia.
BEGIN
   BEGIN
      INSERT INTO language_code_tab ( lang_code,
                                      description,
                                      lang_code_rfc3066,
                                      nls_language,
                                      nls_territory,
                                      status,
                                      installed,
                                      enabled_for_login,
                                      dictionary_update,
                                      rowversion )
                             VALUES ( 'sl',
                                      'Slovenian',
                                      'sl-SI',
                                      'SLOVENIAN',
                                      'SLOVENIA',
                                      'P',
                                      'FALSE',
                                      'TRUE',
                                      SYSDATE,
                                      SYSDATE );
   EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
         NULL;
   END;
   COMMIT;
END;
/
-- ***** LANGUAGE_CODE_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** SCRAPPING_CAUSE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_14');
PROMPT ADD ROWSTATE to SCRAPPING_CAUSE_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'SCRAPPING_CAUSE_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('ROWSTATE',  'VARCHAR2(20)',  'N', '''Active''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/

-- ***** SCRAPPING_CAUSE_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** MPCCOM_SHIP_VIA_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_15');
PROMPT ADD ROWSTATE to MPCCOM_SHIP_VIA_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'MPCCOM_SHIP_VIA_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('ROWSTATE',  'VARCHAR2(20)',  'N', '''Active''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/

-- ***** MPCCOM_SHIP_VIA_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** ORDER_CANCEL_REASON_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_16');
PROMPT Adding ROWSTATE to ORDER_CANCEL_REASON_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'ORDER_CANCEL_REASON_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('ROWSTATE',  'VARCHAR2(20)',  'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_17');
PROMPT Inserting old data to ROWSTATE FROM BLOCKED_FOR_USE.
DECLARE
   stmt_        VARCHAR2(2000);
   table_name_  VARCHAR2(30) := 'ORDER_CANCEL_REASON_TAB';
BEGIN
   IF (Database_SYS.Column_Exist(table_name_, 'BLOCKED_FOR_USE')) THEN
      stmt_ := 'UPDATE order_cancel_reason_tab
                SET    rowstate = CASE
                                    WHEN (blocked_for_use = ''TRUE'') THEN
                                       ''Blocked''
                                    ELSE
                                       ''Active''
                                    END
                WHERE  rowstate IS NULL';
      EXECUTE IMMEDIATE stmt_;
      COMMIT;
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_18');
PROMPT Update ROWSTATE to NOT NULL and BLOCKED_FOR_USE to NULL
DECLARE
   table_name_ VARCHAR2(30) := 'ORDER_CANCEL_REASON_TAB';
   column_ Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('ROWSTATE', 'VARCHAR2(20)', 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('BLOCKED_FOR_USE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
END;
/

-- ***** ORDER_CANCEL_REASON_TAB End *****

------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------

-- ***** ORDER_DELIVERY_TERM_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_19');
PROMPT Adding columns ROWSTATE, DEFAULT_SHIPMENT_FREIGHT_PAYER to ORDER_DELIVERY_TERM_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'ORDER_DELIVERY_TERM_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('ROWSTATE',  'VARCHAR2(20)',  'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('DEFAULT_SHIPMENT_FREIGHT_PAYER', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE); 
END;
/

DECLARE
   stmt_        VARCHAR2(2000);
   table_name_  VARCHAR2(30) := 'ORDER_DELIVERY_TERM_TAB';
BEGIN
   IF (Database_SYS.Column_Exist(table_name_, 'BLOCKED_FOR_USE')) THEN
      stmt_ := 'UPDATE order_delivery_term_tab
                SET    rowstate = CASE
                                    WHEN (blocked_for_use = ''TRUE'') THEN
                                       ''Blocked''
                                    ELSE
                                       ''Active''
                                    END
                WHERE  rowstate IS NULL';
      EXECUTE IMMEDIATE stmt_;
      COMMIT;
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_20');
PROMPT Update ROWSTATE to NOT NULL and BLOCKED_FOR_USE to NULL
DECLARE
   table_name_ VARCHAR2(30) := 'ORDER_DELIVERY_TERM_TAB';
   column_ Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('ROWSTATE', 'VARCHAR2(20)', 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('BLOCKED_FOR_USE', 'VARCHAR2(5)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
END;
/
-- ***** ORDER_DELIVERY_TERM_TAB End *****

--------------------------------------------------------------------------------------------
-- ***** ORDER_COORDINATOR_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_21');
PROMPT Adding ROWSTATE to ORDER_COORDINATOR_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'ORDER_COORDINATOR_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('ROWSTATE',  'VARCHAR2(20)',  'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_22');
PROMPT Inserting old data to ROWSTATE FROM BLOCKED_FOR_USE.
DECLARE
   stmt_        VARCHAR2(2000);
   table_name_  VARCHAR2(30) := 'ORDER_COORDINATOR_TAB';
BEGIN
   IF (Database_SYS.Column_Exist(table_name_, 'BLOCKED_FOR_USE')) THEN
      stmt_ := 'UPDATE order_coordinator_tab
                SET    rowstate = CASE
                                    WHEN (blocked_for_use = ''TRUE'') THEN
                                       ''Blocked''
                                    ELSE
                                       ''Active''
                                    END
                WHERE  rowstate IS NULL';
      EXECUTE IMMEDIATE stmt_;
      COMMIT;
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_23');
PROMPT Update ROWSTATE to NOT NULL and BLOCKED_FOR_USE to NULL
DECLARE
   table_name_ VARCHAR2(30) := 'ORDER_COORDINATOR_TAB';
   column_ Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('ROWSTATE', 'VARCHAR2(20)', 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('BLOCKED_FOR_USE', 'VARCHAR2(5)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
END;
/

-- ***** ORDER_COORDINATOR_TAB End *****

--------------------------------------------------------------------------------------------
-- ***** ORDER_COORDINATOR_GROUP_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_24');
PROMPT Adding column ALLOW_LAPSES_IN_NUMBERS to ORDER_COORDINATOR_GROUP_TAB

DECLARE
    column_   Database_SYS.ColRec;
BEGIN
    Database_SYS.Reset_Column(column_);
    column_ := Database_SYS.Set_Column_Values(column_name_   => 'ALLOW_LAPSES_IN_NUMBERS',
                                              data_type_     => 'VARCHAR2(5)',
                                              nullable_      => 'N',
                                              default_value_ => '''FALSE''',
                                              keep_default_  => 'N');

    Database_SYS.Alter_Table_Column('ORDER_COORDINATOR_GROUP_TAB', 'A', column_, TRUE);
END;
/

-- ***** ORDER_COORDINATOR_GROUP_TAB End *****

--------------------------------------------------------------------------------------------
-- ***** COUNTRY_NOTC_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_25');
PROMPT Removing country_notc 11,12,13,14,15,24,31,32,33,34,40,50,60,70,80,90 for Estonia(EE) and all country_notc for Finland(FI) from COUNTRY_NOTC_TAB

BEGIN
   DELETE
       FROM country_notc_tab
      WHERE country_code = 'EE'
        AND country_notc IN ('11', '12', '13', '14', '15', '24', '31', '32', '33', '34', '40', '50', '60', '70', '80', '90');
   COMMIT;

   DELETE
       FROM country_notc_tab
      WHERE country_code = 'FI';
   COMMIT;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_26');
PROMPT Removing country_notc for Germany(DE) from COUNTRY_NOTC_TAB
DELETE
   FROM country_notc_tab
   WHERE country_code = 'DE';
COMMIT;

-- ***** COUNTRY_NOTC_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** MPCCOM_SYSTEM_EVENT_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_27');
PROMPT Altering the length of column DESCRIPTION from 100 to 200 of table MPCCOM_SYSTEM_EVENT_TAB
DECLARE
   column_       Database_SYS.ColRec;
   table_name_   VARCHAR2(30) := 'MPCCOM_SYSTEM_EVENT_TAB';
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('DESCRIPTION', 'VARCHAR2(200)', 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
END;
/

-- ***** MPCCOM_SYSTEM_EVENT_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** MPCCOM_SYSTEM_PARAMETER_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_28');
PROMPT Altering the length of column PARAMETER_VALUE1 from 80 to 1000 of table MPCCOM_SYSTEM_PARAMETER_TAB.
DECLARE
   column_       Database_SYS.ColRec;
   table_name_   VARCHAR2(30) := 'MPCCOM_SYSTEM_PARAMETER_TAB';
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('PARAMETER_VALUE1', 'VARCHAR2(2000)', 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
END;
/

-- ***** MPCCOM_SYSTEM_PARAMETER_TAB End *****

---------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES  ----------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES/COLUMNS -----------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------

-- ***** Drop obsolete packages Start *****

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_29');
PROMPT Removing obsolete packages
BEGIN
   Database_SYS.Remove_Package('SALES_PART_TAXABLE_API', TRUE);
END;
/

-- ***** Drop obsolete packages End *****

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE SEQUENCES --------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Timestamp_30');
PROMPT Upgrade statements in file 1500.upg end here.

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('MPCCOM','1500.upg','Done');



