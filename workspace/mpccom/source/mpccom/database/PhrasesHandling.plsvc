-----------------------------------------------------------------------------
--
--  Logical unit: PhrasesHandling
--  Component:    MPCCOM
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  200925  SHWTLK  MF2020R1-676, Modified Propagate_Revision() to support Shared Purchase Orders
--  200917  Shwtlk  MF2020R1-677, Added Propagate_Revision() to update the connected phrases in PO with new revisions
--  200623  Ambslk  MF2020R1-5605, Implemented approval processes for revision.
-----------------------------------------------------------------------------

layer Core;

@Override
PROCEDURE CRUD_Create___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Mpccom_Phrase_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT VARCHAR2,
   action_ IN  VARCHAR2 )
IS
   phrase_id_        Mpccom_Phrase_TAB.phrase_id%TYPE;
   revision_attr_    VARCHAR2(32000);
   new_info_         VARCHAR2(32000);
   objid_            VARCHAR2(1000);
   objversion_       VARCHAR2(1000);
BEGIN
   phrase_id_ := CLIENT_SYS.Get_Item_Value('PHRASE_ID',attr_);
   Client_SYS.Add_To_Attr('PHRASE_ID', phrase_id_, revision_attr_);
   Client_SYS.Add_To_Attr('REVISION_NO', 1, revision_attr_);
   Client_SYS.Add_To_Attr('PHASE_IN_DATE', SYSDATE, revision_attr_);
   super(etag_, key_, attr_, info_, action_);
   Mpccom_Phrase_Revision_API.New__(new_info_, objid_, objversion_, revision_attr_,'DO');
END CRUD_Create___;

PROCEDURE Activate___ (
   key_ IN Mpccom_Phrase_Revision_Key)
IS
BEGIN
   $IF Component_Docman_SYS.INSTALLED $THEN
	Mpccom_Phrase_Revision_API.Set_Clause_Active(key_.phrase_id, key_.revision_no, TRUE);
   $ELSE
      NULL;
   $END
END Activate___;

PROCEDURE Obsolete___ (
   key_ IN Mpccom_Phrase_Revision_Key,
   info$_    OUT VARCHAR2)
IS
BEGIN
   $IF Component_Docman_SYS.INSTALLED $THEN
      Client_SYS.Add_Info(lu_name_, 'OBSOLETEREVISION: Revision is obsoleted. No new connections will be created for this revision. Existing connections to active objects will not be affected.');
      info$_ := Client_SYS.Get_All_Info();
      Mpccom_Phrase_Revision_API.Set_Clause_Obsolete(key_.phrase_id, key_.revision_no, TRUE);
   $ELSE
      NULL;
   $END
END Obsolete___;

@Override
PROCEDURE CRUD_Default_Copy___ (
   rec_ IN OUT Mpccom_Phrase_Revision_Rec )
IS
BEGIN
   super(rec_);
   rec_.revision_no := Mpccom_Phrase_Revision_API.Get_Next_Revision_No(rec_.phrase_id);
END CRUD_Default_Copy___;


FUNCTION Propagate_Revision___ (
   key_                    IN Mpccom_Phrase_Revision_Key,
   phase_in_date_          IN DATE,
   phase_out_date_         IN DATE,
   release_status_check_   IN BOOLEAN,
   confirmed_status_check_ IN BOOLEAN,
   shared_status_check_    IN BOOLEAN) RETURN BOOLEAN
IS
   revision_updated_        BOOLEAN := FALSE;
   
BEGIN
   $IF Component_Purch_SYS.INSTALLED $THEN
      Connected_Phrase_Api.Propagate_Revision(key_.phrase_id, key_.revision_no, phase_in_date_, phase_out_date_, release_status_check_, confirmed_status_check_, shared_status_check_, revision_updated_);
   $ELSE
      NULL;
   $END
   
   RETURN revision_updated_;
END Propagate_Revision___;

