-----------------------------------------------------------------------------
--
--  Logical unit: ParametersForDistributionAndManufacturingHandling
--  Component:    MPCCOM
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  180904  KoDelk  SCUXXW4-7875, Created
-----------------------------------------------------------------------------

layer Core;

@Override
PROCEDURE CRUD_Update___ (
   etag_ IN OUT VARCHAR2,
   key_  IN OUT Mpccom_System_Parameter_Key,
   attr_ IN OUT VARCHAR2,
   info_    OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   ptr_ NUMBER;
   attr_new_ VARCHAR2(32000);
   name_ VARCHAR2(32000);
   value_ VARCHAR2(32000);
   objid_               VARCHAR2(2000);
   objversion_          VARCHAR2(2000);
   param_found_ BOOLEAN := FALSE;
BEGIN
   ptr_ := NULL;   
   WHILE (Client_SYS.Get_Next_From_Attr(attr_, ptr_, name_, value_)) LOOP      
      param_found_ := TRUE;
      CASE name_
      WHEN ('PARAMETER_VALUE1_DB') THEN
         key_.parameter_code := 'AUTO_AVAILABILITY_CHECK';
         value_ := Gen_Yes_No_Allowed_API.Decode(value_);
      WHEN ('CREATE_STATUS_VALUE') THEN
         key_.parameter_code := 'SO_CREATE_STATUS';
         value_ := Gen_Yes_No_API.Decode(value_);
      WHEN ('SHORTAGE_HANDLING_VALUE') THEN
         key_.parameter_code := 'SHORTAGE_HANDLING';
         value_ := Gen_Yes_No_API.Decode(value_);
      WHEN ('TRANSACTION_PROJECT_TRANSFER_VALUE') THEN
         key_.parameter_code := 'TRANSACTIONS_PROJECT_TRANSFERS';
         value_ := Gen_Yes_No_API.Decode(value_);
      WHEN ('RENTAL_EVENT_SYNC_SITE_VALUE_DB') THEN
         key_.parameter_code := 'RENTAL_EVENT_SYNCHRO_SITE';
         $IF (Component_Rental_SYS.INSTALLED) $THEN
            value_ := Rental_Event_Synchro_Site_API.Decode(value_);
         $END
      WHEN ('RENTAL_EVENT_SYNC_COMPANY_VALUE_DB') THEN
         key_.parameter_code := 'RENTAL_EVENT_SYNCHRO_COMPANY';
         $IF (Component_Rental_SYS.INSTALLED) $THEN
            value_ := Rental_Event_Synchro_Comp_API.Decode(value_);
         $END
      WHEN ('PRINT_CONTROL_VALUE') THEN
         key_.parameter_code := 'PRINT_CONTROL_CODE';
      WHEN ('DEFAULT_PLAN_DATA_VALUE') THEN
         key_.parameter_code := 'DEFAULT_PLAN_DATA_PERIODS';
      WHEN ('LEADTIME_RECEPTS_VALUE') THEN
         key_.parameter_code := 'LEADTIME_RECEIPTS';
      WHEN ('LEADTIME_FACTOR1_VALUE') THEN
         key_.parameter_code := 'LEADTIME_FACTOR1';
      WHEN ('LEADTIME_FACTOR2_VALUE') THEN
         key_.parameter_code := 'LEADTIME_FACTOR2';
      ELSE
         param_found_ := FALSE;
      END CASE;

      IF param_found_ THEN
         Get_Objid_Objversion___(objid_, objversion_, key_);
         etag_ := Get_Etag___(objid_, objversion_);
         Client_SYS.Clear_Attr(attr_new_);
         Client_SYS.Add_To_Attr('PARAMETER_VALUE1', value_, attr_new_);   
         super(etag_, key_, attr_new_, info_, action_);         
      END IF;
   END LOOP;
   
   key_.parameter_code := 'AUTO_AVAILABILITY_CHECK';
END CRUD_Update___;


