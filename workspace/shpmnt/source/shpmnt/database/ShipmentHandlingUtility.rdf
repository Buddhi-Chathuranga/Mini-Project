-----------------------------------------------------------------------------
--
--  Logical unit: ShipmentHandlingUtility
--
--  File:         ShipmentConsignmentNote.rdf
--  Version:    Foundation1 2.2
--
--  Date    Sign   History
--  ------  ------ -----------------------------------------------------------
--  200122  MeAblk SCSPRING20-273, Added sender_type, sender_id, sender_description, receiver_type, receiver_id, receiver_description into report xml.
--  171122  MaRalk STRSC-14046, Introduced new block HAND_UNIT_TYPE_DOC_TEXT under SHIP_CONSIGNMENT_PARCEL. 
--  171122         Modified method Print_Consignment_Note accordingly. Corrected the issue where parent_row_no is 
--  171122         incorrectly set for the SHIP_CONSIGNMENT_PARCEL record.
--  170922  MaRalk STRSC-11999, Renamed freight_payer as shipment_freight_payer.
--  170914  MaRalk STRSC-12005, Modified method Print_Consignment_Note to reflect column renaming 
--  170914         Shipment_Tab - Payer_Reference as Freight_Payer_Note. Renamed report attribute FreightPayerAddress as FreigthPayerNote.
--  170904  MaRalk STRSC-11318, Modified method Print_Consignment_Note to include freight payer id in the header level.
--  170127  Chfose LIM-10117, Use new view SHPMNT_HANDL_UNIT_WITH_HISTORY to include Handling Unit History when Shipment is delivered.
--  161207  MeAblk Bug 133120, Modified report method to correctly identify the top level handling units.
--  160616  reanpl STRLOC-481, Added handling of new address attributes
--  160531  LaThlk Bug 129042, Added CUSTOMER_NOTES block in order to diplay Customer Notes in the report.
--  160405  MaRalk LIM-6543, Modified method Print_Consignment_Note to reflect the change of the column name 
--  160405         sender_id as sender_addr_id in Shipment_Tab.
--  160323  MaIklk LIM-4552, Changed report table name to SHPMNT_INFO_SERVICES_RPT.
--  160307  MaIklk LIM-4666, Made changes to handle static calls to order.
--  160203  MaRalk LIM-6114, Modified method Print_Consignment_Note to reflect the change of the column name 
--  160203         ship_addr_no as receiver_addr_id in Shipment_Tab.
--  151202  RoJalk LIM-5178, Rename ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO to SOURCE_REF1,
--  151202         SOURCE_REF2, SOURCE_REF3, SOURCE_REF4 in ShipmentLine and ShipmentLineHandlUnit. 
--  151110  MaIklk LIM-4059, Renamed deilver_to_customer_no to receiver_id and renamed address fields to sender_xxx and receiver_xxx of shipment table.
--  150820  ShKolk Bug 119909, Modified report method to restrict users without site access from printing the report.
--  150708  RasDlk Bug 121318, Modified Print_Consignment_Note() to enable translations for Custom Field Enumerations.
--  150206  MaIklk PRSC-5507, Fixed to set the forwarder's language as default.
--  141205  Chfose PRSC-2977, Added Contract and Contract Description to the report.
--  140724  KoDelk Bug 117850, Modified report method to show site document address name as company name. If it's null show name from company header.
--  140702  MaEdlk Bug 117072, Rounded net_weight_, tare_weight_ and volume_ variables in method Print_Consignment_Note.
--  140506  MaEelk Replaced the calls to Handling_Unit_Type_API.Get_Uom_For_Weight with Handling_Unit_API.Get_Uom_For_Weight
--  140502  ChJalk PBSC-4784, Swapped the two IN parameteres in the method call Document_Text_API.Get_Note_Text.
--  130603  MeAblk Modified the view comment of consignment_note_no into STRING instead of NUMBER.
--  130528  MeAblk Added TOT_GROSS_WEIGHT and TOT_VOLUME into the xml.
--  130522  MeAblk Restructured the report generating method in order to retrieve data from the handling units in shipment handling unit structure.
--  120821  RuLiLk Enabled Custom Fields for report 'Shipment Consignment Note'
--  120730  SBalLK Bug 101597, Modified document phrase get method to enhance the code readability and fetch data with location specific.
--  120705  UdGnlk Modified the length of CUSTOMS_STAT_NO from 35 to 15. 
--  120620  SBallk Bug 103080, Modified to print document phrases in line level.
--  110727  PraWlk Bug 97733, Removed consecutive ': ' from archive_notes_ and added it prior to the appending value.
--  110505  NiDalk Bug 95316, Increased size of customer_fax_ and customer_email_ to 200.
--  100715  SudJlk Bug 91672, Modified method Print_Consignment_Note to enable custom company logo display.
--  100603  MoNilk Modified call Application_Country_API to Iso_Country_API in Print_Consignment_Note().
--  100108  Umdolk Refactoring in Communication Methods in Enterprise.
--  091001  MaMalk Modified report method to remove unused code. 
-----------------------------14.0.0------------------------------------------
--  090713  NaWilk Bug 84555, Added column PARENT_ROW_NO into SHIPMENT_HANDLING_UTILITY_REP.
--  090707  SaJjlk Bug 84344, Removed variable sender_name_ and retrieved values for SENDER_NAME from gsi_.shipper_name.
--  090504  SuJalk Bug 82445, Modified the column definition of CONSIGNMENT_NOTE_NO to S39 instead of N12. CONSIGNMENT_NOTE_NO should be varchar2 not number.
--  080918  ThAylk Bug 74915, Replaced gsi_.consignee_reference with consignee_ref_name_ in insert to ORDER_INFO_SERVICES_RPT.    
--  080904  ThAylk Bug 74915, Added code to retrieve the consignee reference name and print it instead of consignee reference if it exists.
--  070629  MaHplk Bug 65372, Added ordering by handling_unit_id to cursor homogenous_handling_units. 
--  070514  WaJalk Bug 64292, Renamed the description of 'No of Pallets' to 'No of Approved EUR-pallets' and fetched it directly from the shipment.
--  070503  NiDalk Bug 64107, Modified methods used to retrieve the volume of handling units.
--  070315  UdGnlk Bug 63938, Removed commodity_group and added type_of goods instead.
--  070222  SaJjlk Modified methods used to retrieve weight and volume information.
--  070214  PrPrlk Modified the method Print_Consignment_Note to handle addresses correctly.
--  061229  NaWilk Bug 61156, Added ordering by handling_unit_id to cursor homogenous_handling_units and NVL to package weight 
--  061229         in homogeneous handling unit tare weight calculation.
--  050208  IsAnlk Added archive_notes in method.    
--  050119  IsAnlk Report Designer, New layout and adjustments. 
--  041217  RaKalk Modified From clause of view SHIPMENT_HANDLING_UTILITY_REP  
--  040129  JoEd  Upgraded use of SiteDeliveryAddress to CompanyAddressDelivInfo.
--  021113  PrInLk Calculation of pallets is modified. Summary is based on only the connected pallets on
--                       shipment level.
--  021028  PrInLk Homogenous pallet handling net weight,volume calculations changed slightly.
--  021017  PrInLk Rewrote the complete method Print_Consignment_Note and removed
--                         unnecessary variables.
--  021014  PrInLk Corrected the spellings of report title.
--  020508  ZiMo  Modified the logic to fetch volumes.  
--  020508  ZiMo  Modified the logic to fetch weights.  
--  020502  MaGu  Added call to General_SYS.Init_Method in method Print_Consignment_Note
--  020422  ZiMo  Small modifications to view comments. 
--  020419  ZiMo  modifications to the address presentation.
--  020419  ZiMo  Small modifications to view comments and the method cursors.
--  020310  ZiMo  Small modification to view column comments.
--  020310  ZiMo  Small modifications to add titles and customer to the report and
--                   Added StreanServe plug in.
--  020304  ZiMo  Created.  
-----------------------------------------------------------------------------

define MODULE             = SHPMNT
define LU                 = ShipmentHandlingUtility
define PKG                = SHIPMENT_HANDLING_UTILITY_RPI

define TABLE              = SHPMNT_INFO_SERVICES_RPT
define VIEW_RPV           = SHPMNT_INFO_SERVICES_RPV
define VIEW               = SHIPMENT_HANDLING_UTILITY_REP
define METHOD             = Print_Consignment_Note

DEFINE DOC_HANDL_UTIL         = "'76'"       

-- Report column definitions
DEFINE SENDER_ADDR_NO         = S1
DEFINE SENDER_ADDR1           = S2
DEFINE SENDER_ADDR2           = S3
DEFINE SENDER_ADDR3           = S4
DEFINE SENDER_ADDR4           = S5
DEFINE SENDER_ADDR5           = S6
DEFINE SENDER_ADDR6           = S7
DEFINE CONSIGNEE_ADDR_NO      = S8
DEFINE CONSIGNEE_ADDR1        = S9
DEFINE CONSIGNEE_ADDR2        = S10
DEFINE CONSIGNEE_ADDR3        = S11
DEFINE CONSIGNEE_ADDR4        = S12
DEFINE CONSIGNEE_ADDR5        = S13
DEFINE CONSIGNEE_ADDR6        = S14
DEFINE FORWARD_AGENT_ID       = S15
DEFINE SENDER_REFERENCE       = S16
DEFINE CONSIGNEE_REFERENCE    = S17  
DEFINE SHIPMENT_FREIGHT_PAYER = S18  
DEFINE FREIGHT_PAYER_NOTE     = S19
DEFINE PRO_NO                 = S20
DEFINE CONTRACT               = S21
DEFINE CONTRACT_DESCRIPTION   = S22
DEFINE AIRWAY_BILL_NO         = S23
DEFINE HANDLING_UNIT_TYPE     = S24 
DEFINE PLACE_OF_DEPARTURE     = S25
DEFINE PLACE_OF_DESTINATION   = S26
-- StreamServe column definitions
DEFINE CUSTOMER_FAX           = S27
DEFINE CUSTOMER_EMAIL         = S28
DEFINE PRINTER_FLAG           = S29
DEFINE FAX_FLAG               = S30
DEFINE EMAIL_FLAG             = S31
DEFINE USER_EMAIL             = S32
DEFINE USER_FILE_DIR          = S33
--
DEFINE SENDER_NAME            = S34
DEFINE CONSIGNEE_NAME         = S35

DEFINE NO_OF_PALLETS          = N1  
DEFINE NO_OF_OBJECTS          = N2 
DEFINE GROSS_WEIGHT           = N3 
DEFINE VOLUME                 = N4 
DEFINE NET_WEIGHT             = N5 
DEFINE TARE                   = N6 
DEFINE TOT_GROSS_WEIGHT       = N7 
DEFINE TOT_VOLUME             = N8 
DEFINE TOT_NET_WEIGHT         = N9 
DEFINE TOT_TARE               = N10
DEFINE SHIPMENT_ID            = N11
DEFINE CONSIGNMENT_NOTE_NO    = S36

DEFINE DATE_PRINTED           = D1
DEFINE DOCUMENT_PHRASE        = S37
DEFINE DOCUMENT_TEXT          = S38
DEFINE CUSTOMER_NOTES         = S39

DEFINE SENDER_ADDR7           = S40
DEFINE SENDER_ADDR8           = S41
DEFINE SENDER_ADDR9           = S42
DEFINE SENDER_ADDR10          = S43
DEFINE CONSIGNEE_ADDR7        = S44
DEFINE CONSIGNEE_ADDR8        = S45
DEFINE CONSIGNEE_ADDR9        = S46
DEFINE CONSIGNEE_ADDR10       = S47

DEFINE SHIPMENT_FREIGHT_PAYER_ID      = S48 
DEFINE HAND_UNIT_TYPE_DOC_TEXT_NOTES  = S49

DEFINE SENDER_TYPE_DB         = S50
DEFINE SENDER_TYPE            = S51
DEFINE SENDER_ID              = S52
DEFINE SENDER_DESCRIPTION     = S53
DEFINE RECEIVER_TYPE_DB       = S54
DEFINE RECEIVER_TYPE          = S55
DEFINE RECEIVER_ID            = S56
DEFINE RECEIVER_DESCRIPTION   = S57

-----------------------------------------------------------------------------
-- PACKAGE SPECIFICATION:
-----------------------------------------------------------------------------

PROMPT Creating &PKG specification

CREATE OR REPLACE PACKAGE &PKG AS

module_  CONSTANT VARCHAR2(6) := '&MODULE';
lu_name_ CONSTANT VARCHAR2(25) := '&LU';

PROCEDURE &METHOD (
   report_attr_    IN VARCHAR2,
   parameter_attr_ IN VARCHAR2 );

END &PKG;
/

SHOW ERROR

-----------------------------------------------------------------------------
-- REPORTS
-----------------------------------------------------------------------------


PROMPT Creating report view &VIEW

CREATE OR REPLACE VIEW &VIEW AS
SELECT RESULT_KEY                               RESULT_KEY,
       ROW_NO                                   ROW_NO,
       PARENT_ROW_NO                            PARENT_ROW_NO,
       &SENDER_ADDR_NO                          SENDER_ADDR_NO,
       &SENDER_TYPE                             SENDER_TYPE, 
       &SENDER_TYPE_DB                          SENDER_TYPE_DB,
       &SENDER_ID                               SENDER_ID,
       &SENDER_DESCRIPTION                      SENDER_DESCRIPTION,
       &SENDER_NAME                             SENDER_NAME,
       &SENDER_ADDR1                            SENDER_ADDR1,
       &SENDER_ADDR2                            SENDER_ADDR2,
       &SENDER_ADDR3                            SENDER_ADDR3,
       &SENDER_ADDR4                            SENDER_ADDR4,
       &SENDER_ADDR5                            SENDER_ADDR5,
       &SENDER_ADDR6                            SENDER_ADDR6,
       &SENDER_ADDR7                            SENDER_ADDR7,
       &SENDER_ADDR8                            SENDER_ADDR8,
       &SENDER_ADDR9                            SENDER_ADDR9,
       &SENDER_ADDR10                           SENDER_ADDR10,
       &RECEIVER_TYPE                           RECEIVER_TYPE,
       &RECEIVER_TYPE_DB                        RECEIVER_TYPE_DB,
       &RECEIVER_ID                             RECEIVER_ID,
       &RECEIVER_DESCRIPTION                    RECEIVER_DESCRIPTION,
       &CONSIGNEE_ADDR_NO                       CONSIGNEE_ADDR_NO,
       &CONSIGNEE_NAME                          CONSIGNEE_NAME,
       &CONSIGNEE_ADDR1                         CONSIGNEE_ADDR1,
       &CONSIGNEE_ADDR2                         CONSIGNEE_ADDR2,
       &CONSIGNEE_ADDR3                         CONSIGNEE_ADDR3,
       &CONSIGNEE_ADDR4                         CONSIGNEE_ADDR4,
       &CONSIGNEE_ADDR5                         CONSIGNEE_ADDR5,
       &CONSIGNEE_ADDR6                         CONSIGNEE_ADDR6,
       &CONSIGNEE_ADDR7                         CONSIGNEE_ADDR7,
       &CONSIGNEE_ADDR8                         CONSIGNEE_ADDR8,
       &CONSIGNEE_ADDR9                         CONSIGNEE_ADDR9,
       &CONSIGNEE_ADDR10                        CONSIGNEE_ADDR10,
       &DATE_PRINTED                            DATE_PRINTED,
       &FORWARD_AGENT_ID                        FORWARD_AGENT_ID,
       &SENDER_REFERENCE                        SENDER_REFERENCE,
       &CONSIGNEE_REFERENCE                     CONSIGNEE_REFERENCE,
       &SHIPMENT_FREIGHT_PAYER                  SHIPMENT_FREIGHT_PAYER,
       &SHIPMENT_FREIGHT_PAYER_ID               SHIPMENT_FREIGHT_PAYER_ID,
       &FREIGHT_PAYER_NOTE                      FREIGHT_PAYER_NOTE,
       &SHIPMENT_ID                             SHIPMENT_ID,
       &PRO_NO                                  PRO_NO,
       &CONTRACT                                CONTRACT,
       &CONTRACT_DESCRIPTION                    CONTRACT_DESCRIPTION,
       &AIRWAY_BILL_NO                          AIRWAY_BILL_NO,
       &CONSIGNMENT_NOTE_NO                     CONSIGNMENT_NOTE_NO,
       &NO_OF_PALLETS                           NO_OF_PALLETS,
       &NO_OF_OBJECTS                           NO_OF_OBJECTS,
       &GROSS_WEIGHT                            GROSS_WEIGHT,
       &VOLUME                                  VOLUME,
       &NET_WEIGHT                              NET_WEIGHT,
       &TARE                                    TARE,
       &TOT_GROSS_WEIGHT                        TOT_GROSS_WEIGHT,
       &TOT_VOLUME                              TOT_VOLUME,
       &TOT_NET_WEIGHT                          TOT_NET_WEIGHT,
       &TOT_TARE                                TOT_TARE,
       &HANDLING_UNIT_TYPE                      HANDLING_UNIT_TYPE,
       &PLACE_OF_DEPARTURE                      PLACE_OF_DEPARTURE,
       &PLACE_OF_DESTINATION                    PLACE_OF_DESTINATION,
       &DOCUMENT_PHRASE                         DOCUMENT_PHRASE,
       &DOCUMENT_TEXT                           DOCUMENT_TEXT,
       &HAND_UNIT_TYPE_DOC_TEXT_NOTES           HAND_UNIT_TYPE_DOC_TEXT_NOTES,
       &CUSTOMER_FAX                            CUSTOMER_FAX, -- Stream serve start
       &CUSTOMER_EMAIL                          CUSTOMER_EMAIL,
       &PRINTER_FLAG                            PRINTER_FLAG,
       &FAX_FLAG                                FAX_FLAG,
       &EMAIL_FLAG                              EMAIL_FLAG,
       &USER_EMAIL                              USER_EMAIL,
       &USER_FILE_DIR                           USER_FILE_DIR,
       &CUSTOMER_NOTES                          CUSTOMER_NOTES -- Stream serve end 
FROM  &VIEW_RPV
WITH  read only;

COMMENT ON TABLE &VIEW IS
   'MODULE=&MODULE^LU=&LU^PROMPT=&LU^';

COMMENT ON COLUMN &VIEW..result_key IS
   'FLAGS=M----^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..row_no IS
   'FLAGS=M----^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..parent_row_no IS
   'FLAGS=M----^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..contract IS
   'FLAGS=A----^DATATYPE=STRING(5)/UPPERCASE^TITLE=Site:^ITEM_NAME=iContract^';
COMMENT ON COLUMN &VIEW..contract_description IS
   'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Site Description:^ITEM_NAME=iContractDescription^';
COMMENT ON COLUMN &VIEW..sender_type IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Sender Type^ITEM_NAME=iSenderType^';
COMMENT ON COLUMN &VIEW..sender_type_db IS
   'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Sender Type Db^ITEM_NAME=iSenderTypeDb^';
COMMENT ON COLUMN &VIEW..sender_id IS
   'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Sender ID^ITEM_NAME=iSenderId^';
COMMENT ON COLUMN &VIEW..sender_description IS
   'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Sender Description^ITEM_NAME=iSenderDescription^';
COMMENT ON COLUMN &VIEW..sender_addr_no IS
   'FLAGS=A----^TITLE=Sender:^ITEM_NAME=iSenderAddrNo^DATATYPE=STRING(2)^';
COMMENT ON COLUMN &VIEW..sender_name IS
   'FLAGS=A----^TITLE=Sender name^ITEM_NAME=iSenderName^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..sender_addr1 IS
   'FLAGS=A----^TITLE=Sender Addr1^ITEM_NAME=iSenderAddr1^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..sender_addr2 IS
   'FLAGS=A----^TITLE=Sender Addr2^ITEM_NAME=iSenderAddr2^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..sender_addr3 IS
   'FLAGS=A----^TITLE=Sender Addr3^ITEM_NAME=iSenderAddr3^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..sender_addr4 IS
   'FLAGS=A----^TITLE=Sender Addr4^ITEM_NAME=iSenderAddr4^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..sender_addr5 IS
   'FLAGS=A----^TITLE=Sender Addr5^ITEM_NAME=iSenderAddr5^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..sender_addr6 IS
   'FLAGS=A----^TITLE=Sender Addr6^ITEM_NAME=iSenderAddr6^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..sender_addr7 IS
   'FLAGS=A----^TITLE=Sender Addr7^ITEM_NAME=iSenderAddr7^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..sender_addr8 IS
   'FLAGS=A----^TITLE=Sender Addr8^ITEM_NAME=iSenderAddr8^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..sender_addr9 IS
   'FLAGS=A----^TITLE=Sender Addr9^ITEM_NAME=iSenderAddr9^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..sender_addr10 IS
   'FLAGS=A----^TITLE=Sender Addr10^ITEM_NAME=iSenderAddr10^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..consignee_addr_no IS
   'FLAGS=A----^TITLE=Consignee:^ITEM_NAME=iConsigneeAddrNo^DATATYPE=STRING(2)^';
COMMENT ON COLUMN &VIEW..consignee_name IS
   'FLAGS=A----^TITLE=Consignee name^ITEM_NAME=iConsigneeName^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..consignee_addr1 IS
   'FLAGS=A----^TITLE=Consignee Addr1^ITEM_NAME=iConsigneeAddr1^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..consignee_addr2 IS
   'FLAGS=A----^TITLE=Consignee Addr2^ITEM_NAME=iConsigneeAddr2^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..consignee_addr3 IS
   'FLAGS=A----^TITLE=Consignee Addr3^ITEM_NAME=iConsigneeAddr3^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..consignee_addr4 IS
   'FLAGS=A----^TITLE=Consignee Addr4^ITEM_NAME=iConsigneeAddr4^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..consignee_addr5 IS
   'FLAGS=A----^TITLE=Consignee Addr5^ITEM_NAME=iConsigneeAddr5^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..consignee_addr6 IS
   'FLAGS=A----^TITLE=Consignee Addr6^ITEM_NAME=iConsigneeAddr6^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..consignee_addr7 IS
   'FLAGS=A----^TITLE=Consignee Addr7^ITEM_NAME=iConsigneeAddr7^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..consignee_addr8 IS
   'FLAGS=A----^TITLE=Consignee Addr8^ITEM_NAME=iConsigneeAddr8^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..consignee_addr9 IS
   'FLAGS=A----^TITLE=Consignee Addr9^ITEM_NAME=iConsigneeAddr9^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..consignee_addr10 IS
   'FLAGS=A----^TITLE=Consignee Addr10^ITEM_NAME=iConsigneeAddr10^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..date_printed IS
   'FLAGS=A----^TITLE=Date Printed:^ITEM_NAME=iDatePrinted^DATATYPE=DATE^';
COMMENT ON COLUMN &VIEW..forward_agent_id IS
   'FLAGS=A----^TITLE=Forward Agent:^ITEM_NAME=iForwardAgentId^DATATYPE=STRING(20)^';
COMMENT ON COLUMN &VIEW..sender_reference IS
   'FLAGS=A----^TITLE=Sender Reference:^ITEM_NAME=iSenderReference^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..consignee_reference IS
   'FLAGS=A----^TITLE=Consignee Reference:^ITEM_NAME=iConsigneeReference^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..shipment_freight_payer IS
   'FLAGS=A----^TITLE=Shipment Freight Payer:^ITEM_NAME=iFreightPayer^DATATYPE=STRING(100)^';
COMMENT ON COLUMN &VIEW..shipment_freight_payer_id IS
   'FLAGS=A----^TITLE=Shipment Freight Payer ID:^ITEM_NAME=iFreightPayerId^DATATYPE=STRING(20)^';
COMMENT ON COLUMN &VIEW..freight_payer_note IS
   'FLAGS=A----^TITLE=Freight Payer Note:^ITEM_NAME=iFreightPayerNote^DATATYPE=STRING(200)^';
COMMENT ON COLUMN &VIEW..shipment_id IS
   'FLAGS=A----^TITLE=Shipment ID:^ITEM_NAME=iShipmentId^DATATYPE=NUMBER^QUERY=Shipment ID:^QFLAGS=MCS--^';
COMMENT ON COLUMN &VIEW..pro_no IS
   'FLAGS=A----^TITLE=Pro No:^ITEM_NAME=iProNo^DATATYPE=STRING(50)^';
COMMENT ON COLUMN &VIEW..airway_bill_no IS
   'FLAGS=A----^TITLE=Airway Bill No:^ITEM_NAME=iAirwayBillNo^DATATYPE=STRING(50)^';
COMMENT ON COLUMN &VIEW..consignment_note_no IS
   'FLAGS=A----^TITLE=Consignment Note No:^ITEM_NAME=iConsignmentNoteNo^DATATYPE=STRING(50)^';
COMMENT ON COLUMN &VIEW..no_of_pallets IS
   'FLAGS=A----^TITLE=No of Approved EUR-pallets:^ITEM_NAME=iNoOfPallets^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..no_of_objects IS
   'FLAGS=A----^TITLE=Quantity^ITEM_NAME=iNoOfObjects^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..gross_weight IS
   'FLAGS=A----^TITLE=Gross Weight^ITEM_NAME=iGrossWeight^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..volume IS
   'FLAGS=A----^TITLE=Volume^ITEM_NAME=iVolume^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..net_weight IS
   'FLAGS=A----^TITLE=Net Weight^ITEM_NAME=iNetWeight^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..tare IS
   'FLAGS=A----^TITLE=Tare Weight^ITEM_NAME=iTare^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..tot_gross_weight IS
   'FLAGS=A----^TITLE=Total Gross Weight^ITEM_NAME=iTotGrossWeight^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..tot_volume IS
   'FLAGS=A----^TITLE=Total Volume^ITEM_NAME=iTotVolume^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..tot_net_weight IS
   'FLAGS=A----^TITLE=Total Net Weight^ITEM_NAME=iTotNetWeight^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..tot_tare IS
   'FLAGS=A----^TITLE=Total Tare^ITEM_NAME=iTotTare^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..handling_unit_type IS
   'FLAGS=A----^TITLE=Handling Unit Type^ITEM_NAME=iHandlingUnitType^DATATYPE=STRING(25)^';
COMMENT ON COLUMN &VIEW..place_of_departure IS
   'FLAGS=A----^TITLE=Place of Departure:^ITEM_NAME=iPlaceOfDeparture^DATATYPE=STRING(35)^';
COMMENT ON COLUMN &VIEW..place_of_destination IS
   'FLAGS=A----^TITLE=Place of Destination:^ITEM_NAME=iPlaceOfDestination^DATATYPE=STRING(35)^';
COMMENT ON COLUMN &VIEW..document_text IS
   'FLAGS=A----^TITLE=Document Texts:^ITEM_NAME=iDocumentText^DATATYPE=STRING(2000)^';
COMMENT ON COLUMN &VIEW..document_phrase
   IS 'FLAGS=A----^DATATYPE=STRING(2000)^TITLE=Document Phrase^ITEM_NAME=iDocumentPhrase^';
COMMENT ON COLUMN &VIEW..hand_unit_type_doc_text_notes IS
   'FLAGS=A----^TITLE=HU Type Doc Text Notes:^ITEM_NAME=iHandUnitTypeDocTextNotes^DATATYPE=STRING(2000)^';
COMMENT ON COLUMN &VIEW..customer_notes
   IS 'FLAGS=A----^DATATYPE=STRING(2000)^TITLE=Customer Notes^ITEM_NAME=iCustomerNotes^';
-- StreamServe, start
COMMENT ON COLUMN &VIEW..CUSTOMER_FAX IS
   'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Customer Fax:^ITEM_NAME=iCustomerFax^';
COMMENT ON COLUMN &VIEW..CUSTOMER_EMAIL IS
   'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Customer Email:^ITEM_NAME=iCustomerEmail^';
COMMENT ON COLUMN &VIEW..PRINTER_FLAG IS
   'FLAGS=A----^DATATYPE=STRING(1)^TITLE=Printer Flag:^QUERY=Printer (Y/N):^QFLAGS=MCS--^QVALUE=Y^ITEM_NAME=iPrinterFlag^';
COMMENT ON COLUMN &VIEW..FAX_FLAG IS
   'FLAGS=A----^DATATYPE=STRING(1)^TITLE=Fax Flag:^QUERY=Fax (Y/N):^QFLAGS=MCS--^QVALUE=N^ITEM_NAME=iFaxFlag^';
COMMENT ON COLUMN &VIEW..EMAIL_FLAG IS
   'FLAGS=A----^DATATYPE=STRING(1)^TITLE=Email Flag:^QUERY=Email (Y/N):^QFLAGS=MCS--^QVALUE=N^ITEM_NAME=iEmailFlag^';
COMMENT ON COLUMN &VIEW..USER_EMAIL IS
   'FLAGS=A----^DATATYPE=STRING(250)^TITLE=User Email:^ITEM_NAME=iUserEmail^';
COMMENT ON COLUMN &VIEW..USER_FILE_DIR IS
   'FLAGS=A----^DATATYPE=STRING(250)^TITLE=User File Dir:^ITEM_NAME=iUserFileDir^';
-- StreamServe, stop      

BEGIN
   Report_SYS.Define_Report_('&VIEW','&MODULE','&LU','Shipment Consignment Note','&TABLE','&PKG..&METHOD',0,NULL,NULL,NULL,'PLSQL1.2','TRUE','Shipment','Delivery Document');
   Report_SYS.Define_Report_Text_('&VIEW', 'TEXT_CONSIGN_TITLE', 'Consignment Note ' );
   Report_SYS.Define_Report_Text_('&VIEW', 'TEXT_CONSIGN_TOT_TITLE', 'Total: ' );
   -- Addition for Custom Fields ------
   Report_Lu_Definition_API.Clear_Custom_Fields_For_Report('&VIEW');
   Report_Lu_Definition_API.Enable_Custom_Fields_for_Lu('&VIEW','Shipment','SHIPMENT_HANDLING_UTILITY_REP');
   Report_SYS.Refresh_('&VIEW');
END;
/

-----------------------------------------------------------------------------
-- PACKAGE IMPLEMENTATION
-----------------------------------------------------------------------------

PROMPT Creating &PKG implementation

CREATE OR REPLACE PACKAGE BODY &PKG AS

PROCEDURE &METHOD (
   report_attr_    IN VARCHAR2,
   parameter_attr_ IN VARCHAR2 )
IS
   result_key_                   NUMBER;
   row_no_                       NUMBER := 1;
   parent_row_no_                NUMBER := 0;
   parent_row_no2_               NUMBER := 0;
   shipment_id_                  NUMBER;
   net_weight_                   NUMBER := 0;
   gross_weight_                 NUMBER := 0;
   tare_weight_                  NUMBER := 0;
   volume_                       NUMBER := 0;
   no_of_objects_                NUMBER := 0;
   no_of_pallets_                NUMBER := 0;
   
   consign_country_desc_         VARCHAR2(2000);
   sender_country_desc_          VARCHAR2(2000);   
   commodity_list_               VARCHAR2(2000);
   cust_stat_no_                 VARCHAR2(15);
   consignee_name_               VARCHAR2(100);
    -- Streamserve, variables   
   customer_fax_                 VARCHAR2(200);
   customer_email_               VARCHAR2(200);
   printer_flag_                 VARCHAR2(1);
   fax_flag_                     VARCHAR2(1);
   email_flag_                   VARCHAR2(1);
   user_email_                   VARCHAR2(250);
   user_file_dir_                VARCHAR2(250);

   sender_addr_                  Address_Presentation_API.Address_Rec_Type;
   consignee_addr_               Address_Presentation_API.Address_Rec_Type;
   gsi_                          SHIPMENT_TAB%ROWTYPE;
   phrase_                       VARCHAR2(2000);
   document_text_                VARCHAR2(2000);
   doc_output_type_list_         VARCHAR2(2000);
   doc_output_type_              VARCHAR2(10);
   start_pos_                    NUMBER;
   end_pos_                      NUMBER;
   text_list_end_                BOOLEAN;
   archive_notes_                VARCHAR2(200);
   customer_note_id_             NUMBER;

   do_xml_                       BOOLEAN := Report_SYS.Should_Generate_Xml('&VIEW');
   do_rs_                        BOOLEAN := Report_SYS.Should_Generate_Result_Set('&VIEW');
   xml_                          CLOB;
   package_name_                 VARCHAR2(100) := 'SHIPMENT_HANDLING_UTILITY_REP';
   company_                      VARCHAR2(20);
   logotype_                     VARCHAR2(100);   
   company_name_                 VARCHAR2(100);
   phrase_on_document_tab_       Phrase_On_Document_API.Phrase_Id_Tab;
   note_text_tab_                Document_Text_API.Note_Text_Table;
   handling_unit_type_id_        VARCHAR2(25); 
   handling_unit_type_note_id_   NUMBER; 
   ship_uom_for_weight_          VARCHAR2(30);
   ship_uom_for_volume_          VARCHAR2(30);
   quantity_                     NUMBER := 0; 
   tot_gross_weight_             NUMBER;
   tot_volume_                   NUMBER;
   contract_                     VARCHAR2(20);
   contract_description_         VARCHAR2(100);
   language_code_                VARCHAR2(2);
   address_                      VARCHAR2(2000);
   
   sender_type_                  VARCHAR2(100);
   sender_description_           VARCHAR2(200);
   receiver_type_                VARCHAR2(100);
   receiver_description_         VARCHAR2(200);

   -- Report cursors
   -- Select shipment info
   CURSOR get_shipment_info IS
      SELECT *
      FROM SHIPMENT_TAB
      WHERE shipment_id = shipment_id_;
   
   -- Select top level handling units
   CURSOR get_top_level_hu_types IS
      SELECT handling_unit_type_id, COUNT(handling_unit_type_id) quantity
      FROM   SHPMNT_HANDL_UNIT_WITH_HISTORY
      WHERE  shipment_id = shipment_id_
      AND    parent_handling_unit_id IS NULL      
      GROUP BY handling_unit_type_id;
   
   CURSOR get_handling_units(handling_unit_type_id_ VARCHAR2) IS
      SELECT handling_unit_id, tare_weight, net_weight, 
             operative_gross_weight, operative_volume
      FROM   SHPMNT_HANDL_UNIT_WITH_HISTORY
      WHERE  shipment_id = shipment_id_
      AND    parent_handling_unit_id IS NULL 
      AND    handling_unit_type_id = handling_unit_type_id_;
   
   package_             VARCHAR2(25);
   bill_addr_no_        VARCHAR2(50);
   receiver_ref_name_   VARCHAR2(100);
BEGIN
   General_SYS.Init_Method(lu_name_, '&PKG', '&METHOD');

   result_key_  := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Item_Value('RESULT_KEY', report_attr_));
   shipment_id_ := Client_SYS.Get_Item_Value('SHIPMENT_ID', parameter_attr_);
   
   -- Set report notes displayed in the InfoServices archive
   archive_notes_ := Language_SYS.Translate_Constant(lu_name_, 'SHIPMENTID: Shipment ID:');
   archive_notes_ := archive_notes_ || ': '|| shipment_id_; 
   Archive_API.Set_Notes(archive_notes_);

   OPEN get_shipment_info;
   FETCH get_shipment_info INTO gsi_;
   CLOSE get_shipment_info;

   User_Allowed_Site_API.Exist(Fnd_Session_API.Get_Fnd_User(), gsi_.contract);

   -- Address Presentation for sender
   sender_country_desc_ := Iso_Country_API.Get_Description(gsi_.sender_country);
   address_       := Address_Presentation_API.Format_Address(gsi_.sender_country,
                                                             gsi_.sender_address1,
                                                             gsi_.sender_address2,
                                                             gsi_.sender_address3,
                                                             gsi_.sender_address4,
                                                             gsi_.sender_address5,
                                                             gsi_.sender_address6,
                                                             gsi_.sender_city,
                                                             gsi_.sender_county,
                                                             gsi_.sender_state,
                                                             gsi_.sender_zip_code,
                                                             sender_country_desc_);
   sender_addr_   := Address_Presentation_API.Format_To_Line(address_);
     

   -- Address Presentation for consignee
   consign_country_desc_ := Iso_Country_API.Get_Description(gsi_.receiver_country);
   address_         := Address_Presentation_API.Format_Address(gsi_.receiver_country,
                                                               gsi_.receiver_address1,
                                                               gsi_.receiver_address2,
                                                               gsi_.receiver_address3,
                                                               gsi_.receiver_address4,
                                                               gsi_.receiver_address5,
                                                               gsi_.receiver_address6,
                                                               gsi_.receiver_city,
                                                               gsi_.receiver_county,
                                                               gsi_.receiver_state,
                                                               gsi_.receiver_zip_code,
                                                               consign_country_desc_);
   consignee_addr_  := Address_Presentation_API.Format_To_Line(address_);   

   consignee_name_       := gsi_.receiver_address_name;

   -- StreamServe,  Get user email address (not in use at this time) and directory when report output to file
   user_email_     := nvl(Fnd_User_Property_API.Get_Value(Fnd_Session_API.Get_Fnd_User,'SMTP_MAIL_ADDRESS'),
                           Fnd_User_Property_API.Get_Value(Fnd_Session_API.Get_App_Owner,'SMTP_MAIL_ADDRESS'));
   user_file_dir_  := nvl(Fnd_User_Property_API.Get_Value(Fnd_Session_API.Get_Fnd_User,'SS_REPORTS_DIR'),
                           Fnd_User_Property_API.Get_Value(Fnd_Session_API.Get_App_Owner,'SS_REPORTS_DIR'));

   -- StreamServe, Get fax, email and distribution flags from customer.       
   customer_fax_   := Comm_Method_API.Get_Value('CUSTOMER', gsi_.receiver_id,
                          Comm_Method_Code_API.Decode('FAX'), 1, gsi_.receiver_addr_id,
                          SYSDATE);
   customer_email_ := Comm_Method_API.Get_Value('CUSTOMER', gsi_.receiver_id,
                          Comm_Method_Code_API.Decode('E_MAIL'), 1, gsi_.receiver_addr_id,
                          SYSDATE);
   -- StreamServe, Report distribution flags on customer not implemented at this time.
   printer_flag_   := 'Y';
   fax_flag_       := 'N';
   email_flag_     := 'N';
   
   no_of_pallets_          := Shipment_API.Get_Qty_Eur_Pallets (shipment_id_);

   bill_addr_no_           := Shipment_Source_Utility_API.Get_Document_Address(gsi_.receiver_id, gsi_.receiver_type);
   receiver_ref_name_      := SUBSTR(NVL(Shipment_Source_Utility_API.Get_Receiver_Contact_Name(gsi_.receiver_id, bill_addr_no_, gsi_.receiver_reference, gsi_.receiver_type), gsi_.receiver_reference), 1, 100);

   contract_               := Shipment_API.Get_Contract(shipment_id_);
   contract_description_   := Site_API.Get_description(contract_);
   ship_uom_for_weight_    := Company_Invent_Info_API.Get_Uom_For_Weight(Site_API.Get_Company( contract_));
   ship_uom_for_volume_    := Company_Invent_Info_API.Get_Uom_For_Volume(Site_API.Get_Company( contract_));
   tot_gross_weight_       := Shipment_API.Get_Operational_Gross_Weight(shipment_id_, ship_uom_for_weight_,'FALSE'); 
   tot_volume_             := Shipment_API.Get_Operational_Volume(shipment_id_, ship_uom_for_volume_); 
   
   sender_type_            := Sender_Receiver_Type_API.Decode(gsi_.sender_type);
   sender_description_     := Shipment_Source_Utility_API.Get_Sender_Name(gsi_.sender_id, gsi_.sender_type);
   receiver_type_          := Sender_Receiver_Type_API.Decode(gsi_.receiver_type);
   receiver_description_   := Shipment_Source_Utility_API.Get_Receiver_Name(gsi_.receiver_id, gsi_.receiver_type);
   
   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.Create_Report_Header(xml_,'&VIEW',package_name_);
   END IF;
   
   -- Use forward agent language if possible
   language_code_       := Iso_Language_API.Encode(Forwarder_Info_API.Get_Default_Language(gsi_.forward_agent_id));
   IF (language_code_ IS NULL) THEN
      language_code_ := Language_SYS.Get_Language;
   END IF;

   -- Set report language
   Archive_API.Set_Language(language_code_);
   
   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_TYPE_DB',       gsi_.sender_type);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_TYPE',          sender_type_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ID',            gsi_.sender_id);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_DESCRIPTION',   sender_description_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'RECEIVER_TYPE_DB',     gsi_.receiver_type);
      Xml_Record_Writer_SYS.Add_Element(xml_,'RECEIVER_TYPE',        receiver_type_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'RECEIVER_ID',          gsi_.receiver_id);
      Xml_Record_Writer_SYS.Add_Element(xml_,'RECEIVER_DESCRIPTION', receiver_description_);      
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_NO', gsi_.sender_addr_id);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_NAME',   gsi_.sender_name);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_1', sender_addr_.address1);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_2', sender_addr_.address2);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_3', sender_addr_.address3);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_4', sender_addr_.address4);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_5', sender_addr_.address5);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_6', sender_addr_.address6);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_7', sender_addr_.address7);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_8', sender_addr_.address8);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_9', sender_addr_.address9);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_10', sender_addr_.address10);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_NO', gsi_.receiver_addr_id);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_NAME', consignee_name_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_1', consignee_addr_.address1);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_2', consignee_addr_.address2);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_3', consignee_addr_.address3);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_4', consignee_addr_.address4);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_5', consignee_addr_.address5);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_6', consignee_addr_.address6);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_7', consignee_addr_.address7);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_8', consignee_addr_.address8);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_9', consignee_addr_.address9);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_10', consignee_addr_.address10);
      Xml_Record_Writer_SYS.Add_Element(xml_,'DATE_PRINTED', SYSDATE);
      Xml_Record_Writer_SYS.Add_Element(xml_,'FORWARD_AGENT_ID', gsi_.forward_agent_id);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_REFERENCE', gsi_.sender_reference);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_REFERENCE', receiver_ref_name_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SHIPMENT_FREIGHT_PAYER', Shipment_Payer_API.decode(gsi_.shipment_freight_payer));
      Xml_Record_Writer_SYS.Add_Element(xml_,'SHIPMENT_FREIGHT_PAYER_ID', gsi_.shipment_freight_payer_id);
      Xml_Record_Writer_SYS.Add_Element(xml_,'FREIGHT_PAYER_NOTE', gsi_.freight_payer_note);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SHIPMENT_ID', gsi_.shipment_id);
      Xml_Record_Writer_SYS.Add_Element(xml_,'PRO_NO', gsi_.pro_no);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONTRACT', contract_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONTRACT_DESCRIPTION', contract_description_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'AIRWAY_BILL_NO', gsi_.airway_bill_no);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNMENT_NOTE_NO', gsi_.consignment_note_id);
      Xml_Record_Writer_SYS.Add_Element(xml_,'PLACE_OF_DEPARTURE', gsi_.place_of_departure);
      Xml_Record_Writer_SYS.Add_Element(xml_,'PLACE_OF_DESTINATION', gsi_.place_of_destination);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CUSTOMER_FAX', customer_fax_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CUSTOMER_EMAIL', customer_email_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'PRINTER_FLAG', printer_flag_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'FAX_FLAG', fax_flag_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'EMAIL_FLAG', email_flag_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'USER_EMAIL', email_flag_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'USER_FILE_DIR', user_file_dir_);
      Xml_Record_Writer_SYS.Add_Custom_Fields(xml_,'Shipment',gsi_.rowkey, '&VIEW', gsi_.language_code);
   END IF;

   IF (do_rs_) THEN
   -- INSERT INTO... (existing insert statement)
      INSERT INTO  &TABLE
        (result_key, row_no, parent_row_no,
         &SENDER_TYPE_DB, &SENDER_TYPE, &SENDER_ID, &SENDER_DESCRIPTION,
   --    Note: Since adrress has to be 5 lines and the line presentaion order may vary in the Address Presentaion names has to be addr1..5.
         &SENDER_ADDR_NO, &SENDER_NAME, &SENDER_ADDR1, &SENDER_ADDR2, &SENDER_ADDR3, &SENDER_ADDR4, &SENDER_ADDR5, &SENDER_ADDR6,
         &SENDER_ADDR7, &SENDER_ADDR8, &SENDER_ADDR9, &SENDER_ADDR10, &RECEIVER_TYPE_DB, &RECEIVER_TYPE,
         &RECEIVER_ID, &RECEIVER_DESCRIPTION, &PLACE_OF_DEPARTURE,
         &CONSIGNEE_ADDR_NO, &CONSIGNEE_NAME, &CONSIGNEE_ADDR1, &CONSIGNEE_ADDR2, &CONSIGNEE_ADDR3, &CONSIGNEE_ADDR4, &CONSIGNEE_ADDR5, &CONSIGNEE_ADDR6, 
         &CONSIGNEE_ADDR7, &CONSIGNEE_ADDR8, &CONSIGNEE_ADDR9, &CONSIGNEE_ADDR10, &PLACE_OF_DESTINATION,
         &DATE_PRINTED,          
         &FORWARD_AGENT_ID, &SENDER_REFERENCE, &CONSIGNEE_REFERENCE, 
         &SHIPMENT_FREIGHT_PAYER, &SHIPMENT_FREIGHT_PAYER_ID, &FREIGHT_PAYER_NOTE,  
         &SHIPMENT_ID, &PRO_NO, &CONTRACT, &CONTRACT_DESCRIPTION, &AIRWAY_BILL_NO, &CONSIGNMENT_NOTE_NO, &NO_OF_PALLETS,
         -- StreamServe, report table columns
         &CUSTOMER_FAX, &CUSTOMER_EMAIL, &PRINTER_FLAG, &FAX_FLAG, &EMAIL_FLAG, &USER_EMAIL, &USER_FILE_DIR, &TOT_GROSS_WEIGHT,  &TOT_VOLUME)          
      VALUES
        (result_key_, row_no_, parent_row_no_, 
         gsi_.sender_type, sender_type_, gsi_.sender_id, sender_description_,
         gsi_.sender_addr_id, gsi_.sender_name , sender_addr_.address1, sender_addr_.address2, sender_addr_.address3, sender_addr_.address4, sender_addr_.address5, sender_addr_.address6, 
         sender_addr_.address7, sender_addr_.address8, sender_addr_.address9, sender_addr_.address10, 
         gsi_.receiver_type, receiver_type_, gsi_.receiver_id, receiver_description_, gsi_.place_of_departure,
         gsi_.receiver_addr_id, consignee_name_, consignee_addr_.address1, consignee_addr_.address2, consignee_addr_.address3, consignee_addr_.address4, consignee_addr_.address5, consignee_addr_.address6, 
         consignee_addr_.address7, consignee_addr_.address8, consignee_addr_.address9, consignee_addr_.address10, gsi_.place_of_destination,
         SYSDATE, 
         gsi_.forward_agent_id, gsi_.sender_reference, receiver_ref_name_,
         Shipment_Payer_API.decode(gsi_.shipment_freight_payer), gsi_.shipment_freight_payer_id, gsi_.freight_payer_note,
         gsi_.shipment_id, gsi_.pro_no, contract_, contract_description_, gsi_.airway_bill_no, gsi_.consignment_note_id, no_of_pallets_,
         -- StreamServe, Insert values in report table columns
         customer_fax_, customer_email_, printer_flag_, fax_flag_, email_flag_, user_email_, user_file_dir_, tot_gross_weight_, tot_volume_);  
   END IF;
   
   parent_row_no_ := row_no_;   
   row_no_        := row_no_ + 1;

   IF gsi_.note_id IS NOT NULL THEN
      doc_output_type_list_ := Output_Type_Document_API.Get_Output_Type_List('76');              
            
      IF (doc_output_type_list_ IS NOT NULL) THEN
         text_list_end_ := FALSE;
         start_pos_     := 1;
         IF (do_xml_) THEN
            Xml_Record_Writer_SYS.Start_Element(xml_, 'SHIP_CONSIGNMENT_DOC_TEXTS');
         END IF;

         WHILE (text_list_end_ = FALSE) LOOP
            -- Get the position of the next ';' in the list.
            end_pos_ := instr(doc_output_type_list_, ';', start_pos_);
            IF (end_pos_ = 0) THEN
               doc_output_type_ := substr(doc_output_type_list_, start_pos_);
            ELSE
               doc_output_type_ := substr(doc_output_type_list_, start_pos_, end_pos_ - start_pos_);
            END IF;
                     
            document_text_ := Document_Text_API.Get_Note_Text(doc_output_type_, gsi_.note_id);
            IF document_text_ IS NOT NULL THEN
               IF (do_xml_) THEN
                  Xml_Record_Writer_SYS.Start_Element(xml_, 'SHIP_CONSIGNMENT_DOC_TEXT');
                  Xml_Record_Writer_SYS.Add_Element(xml_,'DOCUMENT_TEXT', document_text_);
               END IF;
    
               IF (do_rs_) THEN
                  INSERT INTO &TABLE (
                     result_key, row_no, parent_row_no, &DOCUMENT_TEXT)
                  VALUES (
                     result_key_, row_no_, parent_row_no_, document_text_);
                     row_no_ := row_no_ + 1;
               END IF;    
                    
               IF (do_xml_) THEN
                  Xml_Record_Writer_SYS.End_Element(xml_, 'SHIP_CONSIGNMENT_DOC_TEXT');
               END IF;  
            END IF;
            IF (end_pos_ = 0) THEN
               text_list_end_ := TRUE;
            ELSE
               start_pos_ := end_pos_ + 1;
            END IF;
         END LOOP;                  
        
         IF (do_xml_) THEN
            Xml_Record_Writer_SYS.End_Element(xml_, 'SHIP_CONSIGNMENT_DOC_TEXTS');
         END IF;
      END IF;  
   END IF;

   IF gsi_.language_code IS NOT NULL THEN
      IF (do_xml_) THEN
         Xml_Record_Writer_SYS.Start_Element(xml_, 'DOC_PHRASES');
      END IF;
      phrase_on_document_tab_ := Phrase_On_Document_API.Get_Phrase_Id_Tab ( 'SHIPCONS', NULL, gsi_.contract);
      
      IF (phrase_on_document_tab_.COUNT > 0) THEN
         FOR n IN phrase_on_document_tab_.FIRST..phrase_on_document_tab_.LAST LOOP
            phrase_ := Mpccom_Phrase_Text_API.Get_Phrase_Text( phrase_on_document_tab_(n), gsi_.language_code);
            IF (phrase_ IS NOT NULL) THEN
               IF (do_xml_) THEN
                  Xml_Record_Writer_SYS.Start_Element(xml_, 'DOC_PHRASE');
                  Xml_Record_Writer_SYS.Add_Element(xml_, 'DOCUMENT_PHRASE', phrase_ );
                  Xml_Record_Writer_SYS.End_Element(xml_, 'DOC_PHRASE');
               END IF;
               IF (do_rs_) THEN
                  INSERT INTO &TABLE (
                     result_key, row_no, parent_row_no, &DOCUMENT_PHRASE )
                  VALUES (
                     result_key_, row_no_, parent_row_no_, phrase_);
               END IF;
               row_no_ := row_no_ + 1;
            END IF;
         END LOOP;
      END IF;

      IF (do_xml_) THEN
         Xml_Record_Writer_SYS.End_Element(xml_, 'DOC_PHRASES');
      END IF;
   END IF;
   
   -- Retrieve the document text(s) if any
   -- The notes are concatenated into one single string
   customer_note_id_ := Shipment_Source_Utility_API.Get_Receiver_Note_Id(gsi_.receiver_id, gsi_.receiver_type);   
   
   IF (customer_note_id_ IS NOT NULL) THEN
      IF (do_xml_) THEN
         Xml_Record_Writer_SYS.Start_Element(xml_, 'CUSTOMER_DOC_TEXTS');
      END IF;

      note_text_tab_ := Document_Text_API.Get_All_Notes_Tab(customer_note_id_, &DOC_HANDL_UTIL);

      IF (note_text_tab_.COUNT > 0) THEN
         FOR n IN note_text_tab_.FIRST..note_text_tab_.LAST LOOP

            IF (do_xml_) THEN
               Xml_Record_Writer_SYS.Start_Element(xml_, 'CUSTOMER_DOC_TEXT');
               Xml_Record_Writer_SYS.Add_Element(xml_,'CUSTOMER_NOTES', note_text_tab_(n));
               Xml_Record_Writer_SYS.End_Element(xml_, 'CUSTOMER_DOC_TEXT');
            END IF;
            IF (do_rs_) THEN
               INSERT INTO &TABLE (
                  result_key, row_no, parent_row_no, &CUSTOMER_NOTES)
               VALUES (
                  result_key_, row_no_, parent_row_no_, note_text_tab_(n));
               row_no_ := row_no_ + 1;
            END IF;  
         END LOOP;                  
      END IF; 
      IF (do_xml_) THEN
         Xml_Record_Writer_SYS.End_Element(xml_, 'CUSTOMER_DOC_TEXTS');
      END IF; 
   END IF;
   
   row_no_        := row_no_ + 1;

   no_of_objects_ := 1;
   
   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.Start_Element(xml_, 'SHIP_CONSIGNMENT_PARCELS');
   END IF;

   package_ := CHR(2);

   OPEN get_top_level_hu_types;
   LOOP  
      FETCH get_top_level_hu_types INTO handling_unit_type_id_, quantity_;
      FOR handling_unit_ IN  get_handling_units(handling_unit_type_id_) LOOP
         tare_weight_    := ROUND(tare_weight_ + handling_unit_.tare_weight, 4);
         net_weight_     := ROUND(net_weight_ + handling_unit_.net_weight, 4);
         gross_weight_   := ROUND(gross_weight_ + handling_unit_.operative_gross_weight, 4);
         volume_         := ROUND(volume_ + handling_unit_.operative_volume, 6);
      END LOOP;
    
      IF (package_ != handling_unit_type_id_) THEN
         IF (do_xml_) THEN
            Xml_Record_Writer_SYS.Start_Element(xml_, 'SHIP_CONSIGNMENT_PARCEL');
            Xml_Record_Writer_SYS.Add_Element(xml_,'NO_OF_OBJECTS', quantity_);
            Xml_Record_Writer_SYS.Add_Element(xml_,'GROSS_WEIGHT', gross_weight_);
            Xml_Record_Writer_SYS.Add_Element(xml_,'NET_WEIGHT', net_weight_);
            Xml_Record_Writer_SYS.Add_Element(xml_,'VOLUME', volume_);
            Xml_Record_Writer_SYS.Add_Element(xml_,'TARE', tare_weight_);
            Xml_Record_Writer_SYS.Add_Element(xml_,'HANDLING_UNIT_TYPE', Handling_Unit_Type_API.Get_Description(handling_unit_type_id_));
         END IF;
            
         IF (do_rs_) THEN  -- Do Update on the table
               INSERT INTO  &TABLE
                  (result_key, row_no, parent_row_no,        
                   &NO_OF_OBJECTS,  
                   &GROSS_WEIGHT, &VOLUME, &NET_WEIGHT, &TARE,
                   &HANDLING_UNIT_TYPE)
               VALUES
                  (result_key_, row_no_, parent_row_no_, 
                   quantity_,
                   gross_weight_, volume_, net_weight_, tare_weight_,
                   Handling_Unit_Type_API.Get_Description(handling_unit_type_id_));               
         END IF;
         
         parent_row_no2_ := row_no_;   
         row_no_ := row_no_ + 1;  
         
         handling_unit_type_note_id_ := Handling_Unit_Type_API.Get_Note_Id(handling_unit_type_id_);
         note_text_tab_ := Document_Text_API.Get_All_Notes_Tab(handling_unit_type_note_id_, &DOC_HANDL_UTIL);        
         IF (note_text_tab_.COUNT > 0) THEN
            IF (do_xml_) THEN
               Xml_Record_Writer_SYS.Start_Element(xml_, 'HAND_UNIT_TYPE_DOC_TEXTS');
            END IF; 
            
            FOR n IN note_text_tab_.FIRST..note_text_tab_.LAST LOOP
               IF (do_xml_) THEN 
                  Xml_Record_Writer_SYS.Start_Element(xml_, 'HAND_UNIT_TYPE_DOC_TEXT'); 
                  Xml_Record_Writer_SYS.Add_Element(xml_, 'HAND_UNIT_TYPE_DOC_TEXT_NOTES', note_text_tab_(n));                
                  Xml_Record_Writer_SYS.End_Element(xml_, 'HAND_UNIT_TYPE_DOC_TEXT');
               END IF;  

               IF (do_rs_) THEN
                  INSERT INTO &TABLE (
                     result_key, row_no, parent_row_no, &HAND_UNIT_TYPE_DOC_TEXT_NOTES)
                  VALUES (
                     result_key_, row_no_, parent_row_no2_, note_text_tab_(n));
                  row_no_ := row_no_ + 1;
               END IF;                                
            END LOOP;
            
            IF (do_xml_) THEN
               Xml_Record_Writer_SYS.End_Element(xml_, 'HAND_UNIT_TYPE_DOC_TEXTS');
            END IF; 
         END IF; 
               
         IF (do_xml_) THEN
            Xml_Record_Writer_SYS.End_Element(xml_, 'SHIP_CONSIGNMENT_PARCEL');
         END IF;         
      END IF;

      EXIT WHEN get_top_level_hu_types%NOTFOUND;
      tare_weight_    := 0;
      net_weight_     := 0;
      gross_weight_   := 0;
      volume_         := 0;
      package_        := handling_unit_type_id_;
   END LOOP;
   CLOSE get_top_level_hu_types;
   
   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.End_Element(xml_, 'SHIP_CONSIGNMENT_PARCELS');
      Xml_Record_Writer_SYS.Add_Element(xml_,'NO_OF_PALLETS', no_of_pallets_);  
      Xml_Record_Writer_SYS.Add_Element(xml_,'TOT_GROSS_WEIGHT', tot_gross_weight_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'TOT_VOLUME', tot_volume_);
      Xml_Record_Writer_SYS.End_Element(xml_,'&VIEW');
      Report_SYS.Finish_Xml_Report('&VIEW',result_key_,xml_);
   END IF;
      
   Shipment_API.Set_Print_Flags(shipment_id_, 'CONSIGNMENT_PRINTED_DB', 'Y');

   company_      := Site_API.Get_Company(gsi_.contract);
   logotype_     := Company_API.Get_Logotype(company_);  
   company_name_ := NVL(Company_Address_Deliv_Info_API.Get_Address_Name(company_, Site_Discom_Info_API.Get_Document_Address_Id(gsi_.contract, 'TRUE')), Company_API.Get_Name(company_));

   IF (logotype_ IS NOT NULL) THEN
      Archive_Variable_API.Set_Object(result_key_, 'rhSysLogo', logotype_);
      Archive_Variable_API.Set_Variable(result_key_, 'companyName', company_name_);
   END IF;

END &METHOD;

END &PKG;
/

SHOW ERROR



----------------------------------------------------------
-- <UNDEFINE_SECTION>
----------------------------------------------------------
-- This section is reserved for undefine statements
-- nothing should be manually written below because
-- that would be overwritten everytime the IFS / Undefine
-- tool is run.  
-- Also do NOT make any changes to the above tag because
-- this will result in duplicated code
----------------------------------------------------------
UNDEFINE MODULE
UNDEFINE LU
UNDEFINE PKG
UNDEFINE TABLE
UNDEFINE VIEW_RPV
UNDEFINE VIEW
UNDEFINE METHOD
UNDEFINE SENDER_ADDR_NO
UNDEFINE SENDER_ADDR1
UNDEFINE SENDER_ADDR2
UNDEFINE SENDER_ADDR3
UNDEFINE SENDER_ADDR4
UNDEFINE SENDER_ADDR5
UNDEFINE SENDER_ADDR6
UNDEFINE SENDER_ADDR7
UNDEFINE SENDER_ADDR8
UNDEFINE SENDER_ADDR9
UNDEFINE SENDER_ADDR10
UNDEFINE CONSIGNEE_ADDR_NO
UNDEFINE CONSIGNEE_ADDR1
UNDEFINE CONSIGNEE_ADDR2
UNDEFINE CONSIGNEE_ADDR3
UNDEFINE CONSIGNEE_ADDR4
UNDEFINE CONSIGNEE_ADDR5
UNDEFINE CONSIGNEE_ADDR6
UNDEFINE CONSIGNEE_ADDR7
UNDEFINE CONSIGNEE_ADDR8
UNDEFINE CONSIGNEE_ADDR9
UNDEFINE CONSIGNEE_ADDR10
UNDEFINE FORWARD_AGENT_ID
UNDEFINE SENDER_REFERENCE
UNDEFINE CONSIGNEE_REFERENCE
UNDEFINE SHIPMENT_FREIGHT_PAYER
UNDEFINE FREIGHT_PAYER_NOTE
UNDEFINE PRO_NO
UNDEFINE CONTRACT
UNDEFINE CONTRACT_DESCRIPTION
UNDEFINE AIRWAY_BILL_NO
UNDEFINE HANDLING_UNIT_TYPE
UNDEFINE PLACE_OF_DEPARTURE
UNDEFINE PLACE_OF_DESTINATION
UNDEFINE CUSTOMER_FAX
UNDEFINE CUSTOMER_EMAIL
UNDEFINE PRINTER_FLAG
UNDEFINE FAX_FLAG
UNDEFINE EMAIL_FLAG
UNDEFINE USER_EMAIL
UNDEFINE USER_FILE_DIR
UNDEFINE SENDER_NAME
UNDEFINE CONSIGNEE_NAME
UNDEFINE NO_OF_PALLETS
UNDEFINE NO_OF_OBJECTS
UNDEFINE GROSS_WEIGHT
UNDEFINE VOLUME
UNDEFINE NET_WEIGHT
UNDEFINE TARE
UNDEFINE TOT_GROSS_WEIGHT
UNDEFINE TOT_VOLUME
UNDEFINE TOT_NET_WEIGHT
UNDEFINE TOT_TARE
UNDEFINE SHIPMENT_ID
UNDEFINE CONSIGNMENT_NOTE_NO
UNDEFINE DATE_PRINTED
UNDEFINE DOCUMENT_PHRASE
UNDEFINE DOCUMENT_TEXT
UNDEFINE DOC_HANDL_UTIL
UNDEFINE CUSTOMER_NOTES
UNDEFINE SHIPMENT_FREIGHT_PAYER_ID
UNDEFINE HAND_UNIT_TYPE_DOC_TEXT_NOTES
UNDEFINE SENDER_TYPE_DB
UNDEFINE SENDER_TYPE
UNDEFINE SENDER_ID
UNDEFINE SENDER_DESCRIPTION
UNDEFINE RECEIVER_TYPE_DB
UNDEFINE RECEIVER_TYPE
UNDEFINE RECEIVER_ID
UNDEFINE RECEIVER_DESCRIPTION
