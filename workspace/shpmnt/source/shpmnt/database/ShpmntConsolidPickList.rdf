-----------------------------------------------------------------------------
--
--  Logical unit: ShpmntConsolidPickList
--
--  Report:       ShpmntConsolidPickList
--
--  IFS Developer Studio Template Version 1.3
--
--  NOTE: This file is generated and will be overwritten at next model change
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
-------------------- PACKAGE SPECIFICATION ----------------------------------
-----------------------------------------------------------------------------

PROMPT Creating SHPMNT_CONSOLID_PICK_LIST_RPI specification

CREATE OR REPLACE PACKAGE SHPMNT_CONSOLID_PICK_LIST_RPI AS

module_ CONSTANT VARCHAR2(6) := 'SHPMNT';
lu_name_ CONSTANT VARCHAR2(25) := 'ShpmntConsolidPickList';

PROCEDURE Execute_Report (
   report_attr_    IN VARCHAR2,
   parameter_attr_ IN VARCHAR2 );

FUNCTION Test (
   pick_list_no_             IN NUMBER)
   RETURN NUMBER;

PROCEDURE Init;

END SHPMNT_CONSOLID_PICK_LIST_RPI;
/
SHOW ERROR

-----------------------------------------------------------------------------
-------------------- VIEWS FOR REPORT META DATA -----------------------------
-----------------------------------------------------------------------------

PROMPT Creating report table SHPMNT_CONSOLID_PICK_LIST_RPT

DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'SHPMNT_CONSOLID_PICK_LIST_RPT';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'RESULT_KEY', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROW_NO', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'PARENT_ROW_NO', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PICK_LIST_NO', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT_DESC', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_ID', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_DESCRIPTION', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_TYPE', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_TYPE_DB', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SENDER_TYPE', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SENDER_TYPE_DB', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SENDER_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SENDER_DESCRIPTION', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS_NAME', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS1', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS2', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS3', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS4', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS5', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS6', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ZIP_CODE', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_CITY', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_STATE', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_COUNTY', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_COUNTRY', 'VARCHAR2(2)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'DELIVERY_TERMS_DESC', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'DEL_TERMS_LOCATION', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SHIP_VIA_CODE_DESC', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROUTE_DESC', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'FORWARD_AGENT_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PLANNED_SHIP_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'LOCATION_NO', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'WAREHOUSE', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'BAY', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROW_ID', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TIER', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'BIN', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'HANDLING_UNIT_ID', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'STRUCTURE_LEVEL', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'HANDLING_UNIT_TYPE_ID', 'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TYPE_DESCRIPTION', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'HANDLING_UNIT_CATEGORY_ID', 'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SSCC', 'VARCHAR2(18)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ALT_HANDLING_UNIT_LABEL', 'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'COMPOSITION', 'VARCHAR2(200)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'WIDTH', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'HEIGHT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'DEPTH', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'UOM_FOR_LENGTH', 'VARCHAR2(30)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'HAS_HANDLING_UNITS', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'COMPLETE_HANDLING_UNIT', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'NO_HANDLING_UNIT', 'VARCHAR2(5)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PART_NO', 'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PART_DESCRIPTION', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CONFIGURATION_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CONFIG_SPEC_DESC', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'LOT_BATCH_NO', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SERIAL_NO', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'REVISION_NO', 'VARCHAR2(6)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'WAIV_DEV_REJ_NO', 'VARCHAR2(15)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ACTIVITY_SEQ', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF1', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF2', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF3', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF4', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF_TYPE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CONDITION_CODE', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CONDITION_CODE_DESC', 'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'INV_UNIT_MEAS', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'EXPIRATION_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'QTY_RESERVED', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ACTIVITY_NO', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PROJECT_ID', 'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SUB_PROJECT_ID', 'VARCHAR2(10)', 'Y');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_REPORT_DATA', NULL, TRUE);
END;
/

DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'SHPMNT_CONSOLID_PICK_LIST_RPT';
   index_name_ VARCHAR2(30) := 'SHPMNT_CONSOLID_PICK_LIST_RPK';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'RESULT_KEY');
   Database_SYS.Set_Table_Column(columns_, 'ROW_NO');
   Database_SYS.Set_Table_Column(columns_, 'PARENT_ROW_NO');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_REPORT_INDEX', NULL, TRUE, TRUE);
   Database_SYS.Reset_Column_Table(columns_);
END;
/

PROMPT Creating report view SHPMNT_CONSOLID_PICK_LIST_REP

CREATE OR REPLACE VIEW SHPMNT_CONSOLID_PICK_LIST_REP AS
SELECT RESULT_KEY, ROW_NO, PARENT_ROW_NO, ROWVERSION
   ,PICK_LIST_NO,CONTRACT,CONTRACT_DESC,SHIPMENT_ID,RECEIVER_ID,RECEIVER_DESCRIPTION,RECEIVER_TYPE,RECEIVER_TYPE_DB,SENDER_TYPE,SENDER_TYPE_DB,SENDER_ID,SENDER_DESCRIPTION,RECEIVER_ADDRESS_NAME,RECEIVER_ADDRESS1,RECEIVER_ADDRESS2,RECEIVER_ADDRESS3,RECEIVER_ADDRESS4,RECEIVER_ADDRESS5,RECEIVER_ADDRESS6,RECEIVER_ZIP_CODE,RECEIVER_CITY,RECEIVER_STATE,RECEIVER_COUNTY,RECEIVER_COUNTRY,DELIVERY_TERMS_DESC,DEL_TERMS_LOCATION,SHIP_VIA_CODE_DESC,ROUTE_DESC,FORWARD_AGENT_ID,PLANNED_SHIP_DATE,LOCATION_NO,WAREHOUSE,BAY,ROW_ID,TIER,BIN,HANDLING_UNIT_ID,STRUCTURE_LEVEL,HANDLING_UNIT_TYPE_ID,TYPE_DESCRIPTION,HANDLING_UNIT_CATEGORY_ID,SSCC,ALT_HANDLING_UNIT_LABEL,COMPOSITION,WIDTH,HEIGHT,DEPTH,UOM_FOR_LENGTH,HAS_HANDLING_UNITS,COMPLETE_HANDLING_UNIT,NO_HANDLING_UNIT,PART_NO,PART_DESCRIPTION,CONFIGURATION_ID,CONFIG_SPEC_DESC,LOT_BATCH_NO,SERIAL_NO,REVISION_NO,WAIV_DEV_REJ_NO,ACTIVITY_SEQ,SOURCE_REF1,SOURCE_REF2,SOURCE_REF3,SOURCE_REF4,SOURCE_REF_TYPE,CONDITION_CODE,CONDITION_CODE_DESC,INV_UNIT_MEAS,EXPIRATION_DATE,QTY_RESERVED,ACTIVITY_NO,PROJECT_ID,SUB_PROJECT_ID
FROM   SHPMNT_CONSOLID_PICK_LIST_RPT t
WHERE EXISTS (SELECT 1 FROM allowed_report a WHERE a.result_key = t.result_key)
WITH   read only;

COMMENT ON TABLE SHPMNT_CONSOLID_PICK_LIST_REP
   IS 'LU=ShpmntConsolidPickList^PROMPT=Shpmnt Consolid Pick List^MODULE=SHPMNT^TITLETEXT=Consolidated Pick List for Shipment (Non-CO)^';

COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.result_key
   IS 'FLAGS=M----^DATATYPE=NUMBER^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.row_no
   IS 'FLAGS=M----^DATATYPE=NUMBER^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.pick_list_no
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Pick List No^QUERY=Pick List No:^QFLAGS=MW---^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.contract
   IS 'FLAGS=A----^DATATYPE=STRING(5)^TITLE=Site^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.contract_desc
   IS 'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Contract Desc^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.shipment_id
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Shipment ID^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.receiver_id
   IS 'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Receiver ID^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.receiver_description
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Receiver Description^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.receiver_type
   IS 'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Receiver Type^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.receiver_type_db
   IS 'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Receiver Type Db^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.sender_type
   IS 'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Sender Type^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.sender_type_db
   IS 'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Sender Type Db^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.sender_id
   IS 'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Sender ID^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.sender_description
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Sender Description^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.receiver_address_name
   IS 'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Receiver Address Name^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.receiver_address1
   IS 'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Receiver Address1^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.receiver_address2
   IS 'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Receiver Address2^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.receiver_address3
   IS 'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Receiver Address3^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.receiver_address4
   IS 'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Receiver Address4^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.receiver_address5
   IS 'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Receiver Address5^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.receiver_address6
   IS 'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Receiver Address6^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.receiver_zip_code
   IS 'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Receiver Zip Code^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.receiver_city
   IS 'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Receiver City^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.receiver_state
   IS 'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Receiver State^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.receiver_county
   IS 'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Receiver County^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.receiver_country
   IS 'FLAGS=A----^DATATYPE=STRING(2)^TITLE=Receiver Country^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.delivery_terms_desc
   IS 'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Delivery Terms Desc^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.del_terms_location
   IS 'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Del Terms Location^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.ship_via_code_desc
   IS 'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Ship Via Code Desc^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.route_desc
   IS 'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Route Desc^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.forward_agent_id
   IS 'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Forward Agent ID^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.planned_ship_date
   IS 'FLAGS=A----^DATATYPE=DATE/DATETIME^TITLE=Planned Ship Date^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.location_no
   IS 'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Location No^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.warehouse
   IS 'FLAGS=A----^DATATYPE=STRING(4000)^TITLE=Warehouse^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.bay
   IS 'FLAGS=A----^DATATYPE=STRING(4000)^TITLE=Bay^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.row_id
   IS 'FLAGS=A----^DATATYPE=STRING(4000)^TITLE=Row^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.tier
   IS 'FLAGS=A----^DATATYPE=STRING(4000)^TITLE=Tier^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.bin
   IS 'FLAGS=A----^DATATYPE=STRING(4000)^TITLE=Bin^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.handling_unit_id
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Handling Unit ID^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.structure_level
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Structure Level^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.handling_unit_type_id
   IS 'FLAGS=A----^DATATYPE=STRING(25)^TITLE=Handling Unit Type ID^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.type_description
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Type Description^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.handling_unit_category_id
   IS 'FLAGS=A----^DATATYPE=STRING(25)^TITLE=Handling Unit Category ID^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.sscc
   IS 'FLAGS=A----^DATATYPE=STRING(18)^TITLE=SSCC^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.alt_handling_unit_label
   IS 'FLAGS=A----^DATATYPE=STRING(25)^TITLE=Alt Handling Unit Label^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.composition
   IS 'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Composition^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.width
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Width^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.height
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Height^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.depth
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Depth^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.uom_for_length
   IS 'FLAGS=A----^DATATYPE=STRING(30)^TITLE=Uom For Length^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.has_handling_units
   IS 'FLAGS=A----^DATATYPE=STRING(5)^TITLE=Has Handling Units^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.complete_handling_unit
   IS 'FLAGS=A----^DATATYPE=STRING(10)^TITLE=Pick Complete Handling Unit^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.no_handling_unit
   IS 'FLAGS=A----^DATATYPE=STRING(5)^TITLE=No Handling Unit^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.part_no
   IS 'FLAGS=A----^DATATYPE=STRING(25)^TITLE=Part No^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.part_description
   IS 'FLAGS=A----^DATATYPE=STRING(4000)^TITLE=Part Description^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.configuration_id
   IS 'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Configuration ID^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.config_spec_desc
   IS 'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Config Spec Desc^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.lot_batch_no
   IS 'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Lot Batch No^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.serial_no
   IS 'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Serial No^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.revision_no
   IS 'FLAGS=A----^DATATYPE=STRING(6)^TITLE=Revision No^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.waiv_dev_rej_no
   IS 'FLAGS=A----^DATATYPE=STRING(15)^TITLE=Waiv Dev Rej No^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.activity_seq
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Activity Seq^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.source_ref1
   IS 'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Source Ref 1^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.source_ref2
   IS 'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Source Ref 2^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.source_ref3
   IS 'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Source Ref 3^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.source_ref4
   IS 'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Source Ref 4^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.source_ref_type
   IS 'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Source Ref Type^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.condition_code
   IS 'FLAGS=A----^DATATYPE=STRING(4000)^TITLE=Condition Code^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.condition_code_desc
   IS 'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Condition Code Desc^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.inv_unit_meas
   IS 'FLAGS=A----^DATATYPE=STRING(4000)^TITLE=Inventory UoM^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.expiration_date
   IS 'FLAGS=A----^DATATYPE=DATE/DATETIME^TITLE=Expiration Date^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.qty_reserved
   IS 'FLAGS=A----^DATATYPE=NUMBER^TITLE=Qty To Pick^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.activity_no
   IS 'FLAGS=A----^DATATYPE=STRING(10)^TITLE=Activity No^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.project_id
   IS 'FLAGS=A----^DATATYPE=STRING(10)^TITLE=Project ID^';
COMMENT ON COLUMN SHPMNT_CONSOLID_PICK_LIST_REP.sub_project_id
   IS 'FLAGS=A----^DATATYPE=STRING(10)^TITLE=Sub Project ID^';

-----------------------------------------------------------------------------
-------------------- REPORT REGISTRATION ------------------------------------
-----------------------------------------------------------------------------

BEGIN
   Report_SYS.Define_Report_('SHPMNT_CONSOLID_PICK_LIST_REP', 'SHPMNT', 'ShpmntConsolidPickList', 'Consolidated Pick List for Shipment (Non-CO)', 'SHPMNT_CONSOLID_PICK_LIST_RPT', 'SHPMNT_CONSOLID_PICK_LIST_RPI.Execute_Report', 0);
   Report_SYS.Define_Report_Text_('SHPMNT_CONSOLID_PICK_LIST_REP', 'SHIPMENT_PICK_LIST', 'Consolidated Pick List for Shipment');
   Report_SYS.Define_Report_Text_('SHPMNT_CONSOLID_PICK_LIST_REP', 'SHIPMENT_INFO', 'Shipment Information');
   Report_SYS.Define_Report_Text_('SHPMNT_CONSOLID_PICK_LIST_REP', 'QTY_PICKED', 'Qty Picked');
   Report_SYS.Define_Report_Text_('SHPMNT_CONSOLID_PICK_LIST_REP', 'CATCH_QTY_PICKED', 'Catch Qty Picked');
   Report_SYS.Define_Report_Text_('SHPMNT_CONSOLID_PICK_LIST_REP', 'CATCH_UOM', 'Catch UoM');
   Report_SYS.Refresh_('SHPMNT_CONSOLID_PICK_LIST_REP');
   Report_Lu_Definition_API.Clear_Custom_Fields_For_Report('SHPMNT_CONSOLID_PICK_LIST_REP');
   Report_Lu_Definition_API.Enable_Custom_Fields_for_Lu('SHPMNT_CONSOLID_PICK_LIST_REP','Shipment','SHPMNT_CONSOLID_PICK_LIST_REP/PICK_LIST_HEADERS/PICK_LIST_HEADER');
   Report_Lu_Definition_API.Enable_Custom_Fields_for_Lu('SHPMNT_CONSOLID_PICK_LIST_REP','WarehouseBayBin','SHPMNT_CONSOLID_PICK_LIST_REP/PICK_LIST_HEADERS/PICK_LIST_HEADER/LOCATIONS/PICK_LOCATION');
   Report_Lu_Definition_API.Enable_Custom_Fields_for_Lu('SHPMNT_CONSOLID_PICK_LIST_REP','HandlingUnit','SHPMNT_CONSOLID_PICK_LIST_REP/PICK_LIST_HEADERS/PICK_LIST_HEADER/LOCATIONS/PICK_LOCATION/HANDLING_UNITS/HANDLING_UNIT');
   Report_Lu_Definition_API.Enable_Custom_Fields_for_Lu('SHPMNT_CONSOLID_PICK_LIST_REP','InventoryPartReservation','SHPMNT_CONSOLID_PICK_LIST_REP/PICK_LIST_HEADERS/PICK_LIST_HEADER/LOCATIONS/PICK_LOCATION/HANDLING_UNITS/HANDLING_UNIT/PICK_LIST_ITEMS/PICK_LIST_ITEM');
   Report_Lu_Definition_API.Enable_Custom_Fields_for_Lu('SHPMNT_CONSOLID_PICK_LIST_REP','InventoryPartReservation','SHPMNT_CONSOLID_PICK_LIST_REP/PICK_LIST_HEADERS/PICK_LIST_HEADER/LOCATIONS/PICK_LOCATION/NO_HANDLING_UNITS/NO_HANDLING_UNIT/PICK_LIST_ITEMS/PICK_LIST_ITEM');
   Report_Lu_Definition_API.Enable_Custom_Fields_for_Lu('SHPMNT_CONSOLID_PICK_LIST_REP','ShipmentLine','SHPMNT_CONSOLID_PICK_LIST_REP/PICK_LIST_HEADERS/PICK_LIST_HEADER/LOCATIONS/PICK_LOCATION/HANDLING_UNITS/HANDLING_UNIT/PICK_LIST_ITEMS/PICK_LIST_ITEM');
   Report_Lu_Definition_API.Enable_Custom_Fields_for_Lu('SHPMNT_CONSOLID_PICK_LIST_REP','ShipmentLine','SHPMNT_CONSOLID_PICK_LIST_REP/PICK_LIST_HEADERS/PICK_LIST_HEADER/LOCATIONS/PICK_LOCATION/NO_HANDLING_UNITS/NO_HANDLING_UNIT/PICK_LIST_ITEMS/PICK_LIST_ITEM');
END;
/

-----------------------------------------------------------------------------
-------------------- PACKAGE IMPLEMENTATION ---------------------------------
-----------------------------------------------------------------------------

PROMPT Creating SHPMNT_CONSOLID_PICK_LIST_RPI implementation

CREATE OR REPLACE PACKAGE BODY SHPMNT_CONSOLID_PICK_LIST_RPI IS

   TYPE binds$ IS RECORD (
      pick_list_no              NUMBER,
      handling_unit_id          NUMBER,
      location_no               VARCHAR2(32000));

   CURSOR get_pick_list_header (pick_list_no_ NUMBER) IS
      SELECT 
         s.contract                                         contract,
         Site_API.Get_Description(s.contract)               contract_desc,
         s.shipment_id                                      shipment_id,
         s.sender_id                                        sender_id,
         null                                               sender_description,
         s.sender_type                                      sender_type_db,
         Sender_Receiver_Type_API.Decode(s.sender_type)     sender_type,
         s.receiver_id                                      receiver_id,
         s.receiver_type                                    receiver_type_db,
         Sender_Receiver_Type_API.Decode(s.receiver_type)   receiver_type,
         null                                               receiver_description,  
         s.receiver_address_name                            receiver_address_name,
         s.receiver_address1                                receiver_address1,
         s.receiver_address2                                receiver_address2,
         s.receiver_address3                                receiver_address3,
         s.receiver_address4                                receiver_address4,
         s.receiver_address5                                receiver_address5,
         s.receiver_address6                                receiver_address6,
         s.receiver_zip_code                                receiver_zip_code,
         s.receiver_city                                    receiver_city,
         s.receiver_state                                   receiver_state,
         s.receiver_county                                  receiver_county,
         s.receiver_country                                 receiver_country,
         Order_Delivery_Term_API.Get_Description(s.delivery_terms) delivery_terms_desc,
         s.del_terms_location                               del_terms_location,
         Mpccom_Ship_Via_API.Get_Description(s.ship_via_code) ship_via_code_desc,
         Delivery_Route_API.Get_Description(s.route_id) route_desc,
         s.forward_agent_id                                 forward_agent_id,
         s.planned_ship_date                                planned_ship_date,
         s.rowkey                                           rowkey
      FROM  inventory_pick_list_pub ipl, shipment_tab s
      WHERE ipl.pick_list_no = pick_list_no_
      AND   ipl.shipment_id = s.shipment_id;

   CURSOR get_pick_location (pick_list_no_ VARCHAR2) IS
      SELECT                                                                 
        DISTINCT ipr.location_no                                                    location_no,                                                           
         Inventory_Location_API.Get_Warehouse(ipr.contract, ipr.location_no)        warehouse,
         Inventory_Location_API.Get_Bay_No(ipr.contract, ipr.location_no)           bay,
         Inventory_Location_API.Get_Row_No(ipr.contract, ipr.location_no)           row_id,
         Inventory_Location_API.Get_Tier_No(ipr.contract, ipr.location_no)          tier,
         Inventory_Location_API.Get_Bin_No(ipr.contract, ipr.location_no)           bin,
         ipr.handling_unit_id                                                       handling_unit_id,
         NULL                                                                       inv_location_rowkey
      FROM  inventory_part_reservation_pub ipr
      WHERE ipr.pick_list_no    = pick_list_no_
      AND   ipr.fully_picked_db = 'FALSE'
      ORDER BY location_no asc,
      warehouse asc,
      bay asc,
      row_id asc,
      tier asc,
      bin asc,
      handling_unit_id asc;

   CURSOR get_handling_unit (handling_unit_id_ NUMBER, pick_list_no_ VARCHAR2, location_no_ VARCHAR2) IS
      SELECT 
        Handling_Unit_API.Get_Structure_Level(handling_unit_id)               structure_level,
        handling_unit_id                                                      handling_unit_id,
        handling_unit_type_id                                                 handling_unit_type_id,
        Handling_Unit_Type_API.Get_Description(handling_unit_type_id)         type_description,
        Handling_Unit_Type_API.Get_Handling_Unit_Category_Id(handling_unit_type_id) handling_unit_category_id,  
        sscc                                                                  Sscc,
        alt_handling_unit_label_id                                            alt_handling_unit_label,  
        Handling_Unit_API.Get_Composition(handling_unit_id)                   composition,
        width                                                                 width,
        height                                                                height,
        depth                                                                 depth,
        uom_for_length                                                        uom_for_length,
        NULL                                                                  Has_Handling_Units,
        NULL                                                                  Complete_Handling_Unit,
        objkey                                                                rowkey
      FROM handling_unit_pub
      CONNECT BY PRIOR parent_handling_unit_id = handling_unit_id
         START WITH handling_unit_id = handling_unit_id_
         ORDER BY structure_level ASC;

   CURSOR get_no_handling_unit (handling_unit_id_ NUMBER, pick_list_no_ VARCHAR2, location_no_ VARCHAR2) IS
      SELECT DISTINCT 
        NULL                              structure_level,
        handling_unit_id                  handling_unit_id,
        NULL                              handling_unit_type_id,
        NULL                              type_description,
        NULL                              handling_unit_category_id,  
        NULL                              Sscc,
        NULL                              alt_handling_unit_label,  
        NULL                              composition,
        NULL                              width,
        NULL                              height,
        NULL                              depth,
        NULL                              uom_for_length,
        NULL                              No_Handling_Unit       
      FROM  inventory_part_reservation_pub ipr
      WHERE ipr.handling_unit_id = handling_unit_id_
      AND   ipr.pick_list_no = pick_list_no_
      AND   ipr.handling_unit_id = 0;

   CURSOR get_pick_list_item (pick_list_no_ VARCHAR2, handling_unit_id_ NUMBER, location_no_ VARCHAR2) IS
      SELECT 
         ipr.part_no                                                       part_no,
         Inventory_Part_API.Get_Description(ipr.contract, ipr.part_no)     part_description,
         ipr.configuration_id                                              configuration_id,
         NULL                                                              config_spec_desc,   
         ipr.lot_batch_no                                                  lot_batch_no,
         ipr.serial_no                                                     serial_no,  
         ipr.eng_chg_level                                                 revision_no,
         ipr.waiv_dev_rej_no                                               waiv_dev_rej_no,
         ipr.activity_seq                                                  activity_seq,   
         ipr.handling_unit_id                                              handling_unit_id,
         ipr.source_ref1                                                   source_ref1,
         ipr.source_ref2                                                   source_ref2,
         ipr.source_ref3                                                   source_ref3,
         ipr.source_ref4                                                   source_ref4,
         ipr.source_ref_type_db                                            source_ref_type,   
         ipr.shipment_id                                                   shipment_id,
         Condition_Code_Manager_API.Get_Condition_Code(ipr.part_no, ipr.serial_no, ipr.lot_batch_no) condition_code,
         NULL                                                              condition_code_desc,
         Inventory_Part_API.Get_Unit_Meas(ipr.contract, ipr.part_no)       inv_unit_meas,
         Inventory_Part_In_Stock_API.Get_Expiration_Date(ipr.contract, ipr.part_no, ipr.configuration_id, ipr.location_no, ipr.lot_batch_no, ipr.serial_no, ipr.eng_chg_level, ipr.waiv_dev_rej_no, ipr.activity_seq, ipr.handling_unit_id)  expiration_date,
         ipr.qty_reserved                                                  qty_reserved,
         NULL                                                              activity_no,
         NULL                                                              project_id,
         NULL                                                              sub_project_id,
         objkey                                                            inv_part_res_rowkey,
         NULL                                                              shipment_line_rowkey
      FROM  inventory_part_reservation_pub ipr
      WHERE ipr.pick_list_no = pick_list_no_
      AND   ipr.handling_unit_id = handling_unit_id_
      AND   ipr.location_no = location_no_;

-----------------------------------------------------------------------------
-------------------- RESULT SET METHODS -------------------------------------
-----------------------------------------------------------------------------

--@IgnoreWrongParamOrder
PROCEDURE Add_Result_Row___ (
   result_key$_               IN NUMBER,
   binds$_                    IN binds$,
   rec_pick_list_header_      IN get_pick_list_header%ROWTYPE DEFAULT NULL,
   rec_pick_location_         IN get_pick_location%ROWTYPE DEFAULT NULL,
   rec_handling_unit_         IN get_handling_unit%ROWTYPE DEFAULT NULL,
   rec_no_handling_unit_      IN get_no_handling_unit%ROWTYPE DEFAULT NULL,
   rec_pick_list_item_        IN get_pick_list_item%ROWTYPE DEFAULT NULL,
   row_no$_                   IN OUT NUMBER)
IS
BEGIN
   INSERT INTO SHPMNT_CONSOLID_PICK_LIST_RPT (
      result_key,
      pick_list_no,
      contract,
      contract_desc,
      shipment_id,
      receiver_id,
      receiver_description,
      receiver_type,
      receiver_type_db,
      sender_type,
      sender_type_db,
      sender_id,
      sender_description,
      receiver_address_name,
      receiver_address1,
      receiver_address2,
      receiver_address3,
      receiver_address4,
      receiver_address5,
      receiver_address6,
      receiver_zip_code,
      receiver_city,
      receiver_state,
      receiver_county,
      receiver_country,
      delivery_terms_desc,
      del_terms_location,
      ship_via_code_desc,
      route_desc,
      forward_agent_id,
      planned_ship_date,
      location_no,
      warehouse,
      bay,
      row_id,
      tier,
      bin,
      handling_unit_id,
      structure_level,
      handling_unit_type_id,
      type_description,
      handling_unit_category_id,
      sscc,
      alt_handling_unit_label,
      composition,
      width,
      height,
      depth,
      uom_for_length,
      has_handling_units,
      complete_handling_unit,
      no_handling_unit,
      part_no,
      part_description,
      configuration_id,
      config_spec_desc,
      lot_batch_no,
      serial_no,
      revision_no,
      waiv_dev_rej_no,
      activity_seq,
      source_ref1,
      source_ref2,
      source_ref3,
      source_ref4,
      source_ref_type,
      condition_code,
      condition_code_desc,
      inv_unit_meas,
      expiration_date,
      qty_reserved,
      activity_no,
      project_id,
      sub_project_id,
      row_no, parent_row_no)
   VALUES (
      result_key$_,
      nvl(binds$_.pick_list_no,
      binds$_.pick_list_no),
      rec_pick_list_header_.contract,
      rec_pick_list_header_.contract_desc,
      nvl(rec_pick_list_item_.shipment_id,
      rec_pick_list_header_.shipment_id),
      rec_pick_list_header_.receiver_id,
      rec_pick_list_header_.receiver_description,
      rec_pick_list_header_.receiver_type,
      rec_pick_list_header_.receiver_type_db,
      rec_pick_list_header_.sender_type,
      rec_pick_list_header_.sender_type_db,
      rec_pick_list_header_.sender_id,
      rec_pick_list_header_.sender_description,
      rec_pick_list_header_.receiver_address_name,
      rec_pick_list_header_.receiver_address1,
      rec_pick_list_header_.receiver_address2,
      rec_pick_list_header_.receiver_address3,
      rec_pick_list_header_.receiver_address4,
      rec_pick_list_header_.receiver_address5,
      rec_pick_list_header_.receiver_address6,
      rec_pick_list_header_.receiver_zip_code,
      rec_pick_list_header_.receiver_city,
      rec_pick_list_header_.receiver_state,
      rec_pick_list_header_.receiver_county,
      rec_pick_list_header_.receiver_country,
      rec_pick_list_header_.delivery_terms_desc,
      rec_pick_list_header_.del_terms_location,
      rec_pick_list_header_.ship_via_code_desc,
      rec_pick_list_header_.route_desc,
      rec_pick_list_header_.forward_agent_id,
      rec_pick_list_header_.planned_ship_date,
      rec_pick_location_.location_no,
      rec_pick_location_.warehouse,
      rec_pick_location_.bay,
      rec_pick_location_.row_id,
      rec_pick_location_.tier,
      rec_pick_location_.bin,
      nvl(rec_pick_list_item_.handling_unit_id,
      nvl(rec_no_handling_unit_.handling_unit_id,
      nvl(rec_handling_unit_.handling_unit_id,
      rec_pick_location_.handling_unit_id))),
      nvl(rec_no_handling_unit_.structure_level,
      rec_handling_unit_.structure_level),
      nvl(rec_no_handling_unit_.handling_unit_type_id,
      rec_handling_unit_.handling_unit_type_id),
      nvl(rec_no_handling_unit_.type_description,
      rec_handling_unit_.type_description),
      nvl(rec_no_handling_unit_.handling_unit_category_id,
      rec_handling_unit_.handling_unit_category_id),
      nvl(rec_no_handling_unit_.sscc,
      rec_handling_unit_.sscc),
      nvl(rec_no_handling_unit_.alt_handling_unit_label,
      rec_handling_unit_.alt_handling_unit_label),
      nvl(rec_no_handling_unit_.composition,
      rec_handling_unit_.composition),
      nvl(rec_no_handling_unit_.width,
      rec_handling_unit_.width),
      nvl(rec_no_handling_unit_.height,
      rec_handling_unit_.height),
      nvl(rec_no_handling_unit_.depth,
      rec_handling_unit_.depth),
      nvl(rec_no_handling_unit_.uom_for_length,
      rec_handling_unit_.uom_for_length),
      rec_handling_unit_.has_handling_units,
      rec_handling_unit_.complete_handling_unit,
      rec_no_handling_unit_.no_handling_unit,
      rec_pick_list_item_.part_no,
      rec_pick_list_item_.part_description,
      rec_pick_list_item_.configuration_id,
      rec_pick_list_item_.config_spec_desc,
      rec_pick_list_item_.lot_batch_no,
      rec_pick_list_item_.serial_no,
      rec_pick_list_item_.revision_no,
      rec_pick_list_item_.waiv_dev_rej_no,
      rec_pick_list_item_.activity_seq,
      rec_pick_list_item_.source_ref1,
      rec_pick_list_item_.source_ref2,
      rec_pick_list_item_.source_ref3,
      rec_pick_list_item_.source_ref4,
      rec_pick_list_item_.source_ref_type,
      rec_pick_list_item_.condition_code,
      rec_pick_list_item_.condition_code_desc,
      rec_pick_list_item_.inv_unit_meas,
      rec_pick_list_item_.expiration_date,
      rec_pick_list_item_.qty_reserved,
      rec_pick_list_item_.activity_no,
      rec_pick_list_item_.project_id,
      rec_pick_list_item_.sub_project_id,
      row_no$_, 0);
   row_no$_ := row_no$_+1;
END Add_Result_Row___;

-----------------------------------------------------------------------------
-------------------- REPORT EXECUTION ---------------------------------------
-----------------------------------------------------------------------------

PROCEDURE Execute_Report (
   report_attr_    IN VARCHAR2,
   parameter_attr_ IN VARCHAR2 )
IS
   result_key$_              NUMBER;
   row_no$_                  NUMBER := 1;
   binds$_                   binds$;
   xml$_                     CLOB;
   outer_filter_attr$_       VARCHAR2(32000);
   outer_filter_where$_      VARCHAR2(32000);
   inner_filter_attr$_       VARCHAR2(32000);
   inner_filter_where$_      VARCHAR2(32000);
   has_pick_list_header_ BOOLEAN;
   rec_pick_list_header_ get_pick_list_header%ROWTYPE;
   par_pick_list_header_ binds$;
   has_pick_location_ BOOLEAN;
   rec_pick_location_ get_pick_location%ROWTYPE;
   par_pick_location_ binds$;
   has_handling_unit_ BOOLEAN;
   rec_handling_unit_ get_handling_unit%ROWTYPE;
   par_handling_unit_ binds$;
   has_no_handling_unit_ BOOLEAN;
   rec_no_handling_unit_ get_no_handling_unit%ROWTYPE;
   par_no_handling_unit_ binds$;
   has_pick_list_item_ BOOLEAN;
   rec_pick_list_item_ get_pick_list_item%ROWTYPE;
   par_pick_list_item_ binds$;
BEGIN
   General_SYS.Init_Method(lu_name_, 'SHPMNT_CONSOLID_PICK_LIST_RPI', 'Execute_Report');
   result_key$_                 := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Item_Value('RESULT_KEY', report_attr_));
   binds$_.pick_list_no         := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Item_Value('PICK_LIST_NO', parameter_attr_));

   Xml_Record_Writer_SYS.Create_Report_Header(xml$_, 'SHPMNT_CONSOLID_PICK_LIST_REP', 'Consolidated Pick List for Shipment (Non-CO)');
   Xml_Record_Writer_SYS.Add_Element(xml$_, 'PICK_LIST_NO', binds$_.pick_list_no);

   has_pick_list_header_ := FALSE;
   par_pick_list_header_ := binds$_;
   Xml_Record_Writer_SYS.Start_Element(xml$_, 'PICK_LIST_HEADERS');
   OPEN get_pick_list_header(binds$_.pick_list_no);
   LOOP
      FETCH get_pick_list_header INTO rec_pick_list_header_;
      has_pick_list_header_ := get_pick_list_header%FOUND OR get_pick_list_header%ROWCOUNT > 0;
      EXIT WHEN get_pick_list_header%NOTFOUND;
      DECLARE
          archive_notes_      VARCHAR2(200);
      BEGIN
         User_Allowed_Site_API.Exist(Fnd_Session_API.Get_Fnd_User(), rec_pick_list_header_.contract);
      
         -- Set report notes displayed in the report archive
         archive_notes_ := Language_SYS.Translate_Constant(lu_name_, 'SHIPMENTID: Shipment ID');
         archive_notes_ := archive_notes_ || ': '|| rec_pick_list_header_.shipment_id || ', ';
         archive_notes_ := archive_notes_ || Language_SYS.Translate_Constant(lu_name_, 'PICKLISTNO: Pick List No');
         archive_notes_ := archive_notes_ || ': '|| binds$_.pick_list_no; 
         Archive_API.Set_Notes(archive_notes_);  
      
         rec_pick_list_header_.sender_description   := Shipment_Source_Utility_API.Get_Sender_Name(rec_pick_list_header_.sender_id, rec_pick_list_header_.sender_type);
         rec_pick_list_header_.receiver_description := Shipment_Source_Utility_API.Get_Receiver_Name(rec_pick_list_header_.receiver_id, rec_pick_list_header_.receiver_type); 
      END;
      Xml_Record_Writer_SYS.Start_Element(xml$_, 'PICK_LIST_HEADER');
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CONTRACT', rec_pick_list_header_.contract);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'CONTRACT_DESC', rec_pick_list_header_.contract_desc);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'SHIPMENT_ID', rec_pick_list_header_.shipment_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'RECEIVER_ID', rec_pick_list_header_.receiver_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'RECEIVER_DESCRIPTION', rec_pick_list_header_.receiver_description);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'RECEIVER_TYPE', rec_pick_list_header_.receiver_type);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'RECEIVER_TYPE_DB', rec_pick_list_header_.receiver_type_db);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'SENDER_TYPE', rec_pick_list_header_.sender_type);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'SENDER_TYPE_DB', rec_pick_list_header_.sender_type_db);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'SENDER_ID', rec_pick_list_header_.sender_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'SENDER_DESCRIPTION', rec_pick_list_header_.sender_description);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'RECEIVER_ADDRESS_NAME', rec_pick_list_header_.receiver_address_name);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'RECEIVER_ADDRESS1', rec_pick_list_header_.receiver_address1);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'RECEIVER_ADDRESS2', rec_pick_list_header_.receiver_address2);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'RECEIVER_ADDRESS3', rec_pick_list_header_.receiver_address3);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'RECEIVER_ADDRESS4', rec_pick_list_header_.receiver_address4);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'RECEIVER_ADDRESS5', rec_pick_list_header_.receiver_address5);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'RECEIVER_ADDRESS6', rec_pick_list_header_.receiver_address6);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'RECEIVER_ZIP_CODE', rec_pick_list_header_.receiver_zip_code);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'RECEIVER_CITY', rec_pick_list_header_.receiver_city);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'RECEIVER_STATE', rec_pick_list_header_.receiver_state);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'RECEIVER_COUNTY', rec_pick_list_header_.receiver_county);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'RECEIVER_COUNTRY', rec_pick_list_header_.receiver_country);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'DELIVERY_TERMS_DESC', rec_pick_list_header_.delivery_terms_desc);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'DEL_TERMS_LOCATION', rec_pick_list_header_.del_terms_location);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'SHIP_VIA_CODE_DESC', rec_pick_list_header_.ship_via_code_desc);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'ROUTE_DESC', rec_pick_list_header_.route_desc);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'FORWARD_AGENT_ID', rec_pick_list_header_.forward_agent_id);
      Xml_Record_Writer_SYS.Add_Element(xml$_, 'PLANNED_SHIP_DATE', rec_pick_list_header_.planned_ship_date);
      Xml_Record_Writer_SYS.Add_Custom_Fields(xml$_, 'Shipment', rec_pick_list_header_.rowkey, 'SHPMNT_CONSOLID_PICK_LIST_REP');
      has_pick_location_ := FALSE;
      par_pick_location_ := binds$_;
      Xml_Record_Writer_SYS.Start_Element(xml$_, 'LOCATIONS');
      OPEN get_pick_location(binds$_.pick_list_no);
      LOOP
         FETCH get_pick_location INTO rec_pick_location_;
         has_pick_location_ := get_pick_location%FOUND OR get_pick_location%ROWCOUNT > 0;
         EXIT WHEN get_pick_location%NOTFOUND;
         rec_pick_location_.inv_location_rowkey := Warehouse_Bay_Bin_API.Get_Objkey(rec_pick_list_header_.contract, 
                                                                                    rec_pick_location_.warehouse, 
                                                                                    rec_pick_location_.bay, 
                                                                                    rec_pick_location_.tier, 
                                                                                    rec_pick_location_.row_id, 
                                                                                    rec_pick_location_.bin);
         Xml_Record_Writer_SYS.Start_Element(xml$_, 'PICK_LOCATION');
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'LOCATION_NO', rec_pick_location_.location_no);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'WAREHOUSE', rec_pick_location_.warehouse);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'BAY', rec_pick_location_.bay);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'ROW_ID', rec_pick_location_.row_id);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'TIER', rec_pick_location_.tier);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'BIN', rec_pick_location_.bin);
         Xml_Record_Writer_SYS.Add_Element(xml$_, 'HANDLING_UNIT_ID', rec_pick_location_.handling_unit_id);
         Xml_Record_Writer_SYS.Add_Custom_Fields(xml$_, 'WarehouseBayBin', rec_pick_location_.inv_location_rowkey, 'SHPMNT_CONSOLID_PICK_LIST_REP');
         has_handling_unit_ := FALSE;
         par_handling_unit_ := binds$_;
         binds$_.handling_unit_id := rec_pick_location_.handling_unit_id;
         binds$_.location_no := rec_pick_location_.location_no;
         Xml_Record_Writer_SYS.Start_Element(xml$_, 'HANDLING_UNITS');
         OPEN get_handling_unit(rec_pick_location_.handling_unit_id, binds$_.pick_list_no, rec_pick_location_.location_no);
         LOOP
            FETCH get_handling_unit INTO rec_handling_unit_;
            has_handling_unit_ := get_handling_unit%FOUND OR get_handling_unit%ROWCOUNT > 0;
            EXIT WHEN get_handling_unit%NOTFOUND;
            IF (Handl_Unit_Stock_Snapshot_API.Handling_Unit_Exist(binds$_.pick_list_no, Handl_Unit_Snapshot_Type_API.DB_PICK_LIST, rec_handling_unit_.handling_unit_id)) THEN
               rec_handling_unit_.complete_handling_unit := Gen_Yes_No_API.Decode('Y');
            ELSE
               rec_handling_unit_.complete_handling_unit := Gen_Yes_No_API.Decode('N');
            END IF;
            Xml_Record_Writer_SYS.Start_Element(xml$_, 'HANDLING_UNIT');
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'STRUCTURE_LEVEL', rec_handling_unit_.structure_level);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'HANDLING_UNIT_ID', rec_handling_unit_.handling_unit_id);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'HANDLING_UNIT_TYPE_ID', rec_handling_unit_.handling_unit_type_id);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'TYPE_DESCRIPTION', rec_handling_unit_.type_description);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'HANDLING_UNIT_CATEGORY_ID', rec_handling_unit_.handling_unit_category_id);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'SSCC', rec_handling_unit_.sscc);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'ALT_HANDLING_UNIT_LABEL', rec_handling_unit_.alt_handling_unit_label);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'COMPOSITION', rec_handling_unit_.composition);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'WIDTH', rec_handling_unit_.width);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'HEIGHT', rec_handling_unit_.height);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'DEPTH', rec_handling_unit_.depth);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'UOM_FOR_LENGTH', rec_handling_unit_.uom_for_length);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'HAS_HANDLING_UNITS', rec_handling_unit_.has_handling_units);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'COMPLETE_HANDLING_UNIT', rec_handling_unit_.complete_handling_unit);
            Xml_Record_Writer_SYS.Add_Custom_Fields(xml$_, 'HandlingUnit', rec_handling_unit_.rowkey, 'SHPMNT_CONSOLID_PICK_LIST_REP');
            has_pick_list_item_ := FALSE;
            par_pick_list_item_ := binds$_;
            binds$_.handling_unit_id := rec_handling_unit_.handling_unit_id;
            Xml_Record_Writer_SYS.Start_Element(xml$_, 'PICK_LIST_ITEMS');
            OPEN get_pick_list_item(binds$_.pick_list_no, rec_handling_unit_.handling_unit_id, binds$_.location_no);
            LOOP
               FETCH get_pick_list_item INTO rec_pick_list_item_;
               has_pick_list_item_ := get_pick_list_item%FOUND OR get_pick_list_item%ROWCOUNT > 0;
               EXIT WHEN get_pick_list_item%NOTFOUND;
               DECLARE
                   shipment_line_no_   NUMBER;
               BEGIN
                  $IF (Component_Cfgchr_SYS.INSTALLED) $THEN
                     rec_pick_list_item_.config_spec_desc := Configuration_Spec_API.Get_Description(rec_pick_list_item_.part_no, rec_pick_list_item_.configuration_id); 
                  $END
                  rec_pick_list_item_.condition_code_desc := Condition_Code_API.Get_Description(rec_pick_list_item_.condition_code);
                  rec_pick_list_item_.project_id := Shipment_Source_Utility_API.Get_Source_Project_Id__(rec_pick_list_item_.source_ref1, rec_pick_list_item_.source_ref2, rec_pick_list_item_.source_ref3, rec_pick_list_item_.source_ref4, rec_pick_list_item_.source_ref_type);  
                  $IF (Component_Proj_Sys.INSTALLED) $THEN
                     rec_pick_list_item_.activity_no := Activity_API.Get_Activity_No(rec_pick_list_item_.activity_seq); 
                     rec_pick_list_item_.sub_project_id := Activity_api.Get_Sub_Project_Id(rec_pick_list_item_.activity_seq); 
                  $END
                  shipment_line_no_ := Shipment_Line_API.Fetch_Ship_Line_No_By_Source(rec_pick_list_item_.shipment_id, 
                                                                                      rec_pick_list_item_.source_ref1, 
                                                                                      Shipment_Line_API.Get_Converted_Source_Ref(rec_pick_list_item_.source_ref2, rec_pick_list_item_.source_ref_type, 2), 
                                                                                      Shipment_Line_API.Get_Converted_Source_Ref(rec_pick_list_item_.source_ref3, rec_pick_list_item_.source_ref_type, 3), 
                                                                                      Shipment_Line_API.Get_Converted_Source_Ref(rec_pick_list_item_.source_ref4, rec_pick_list_item_.source_ref_type, 4),  
                                                                                      rec_pick_list_item_.source_ref_type);
                  rec_pick_list_item_.shipment_line_rowkey := Shipment_Line_API.Get_Objkey(rec_pick_list_item_.shipment_id, shipment_line_no_);
               END;
               Xml_Record_Writer_SYS.Start_Element(xml$_, 'PICK_LIST_ITEM');
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'PART_NO', rec_pick_list_item_.part_no);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'PART_DESCRIPTION', rec_pick_list_item_.part_description);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'CONFIGURATION_ID', rec_pick_list_item_.configuration_id);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'CONFIG_SPEC_DESC', rec_pick_list_item_.config_spec_desc);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'LOT_BATCH_NO', rec_pick_list_item_.lot_batch_no);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'SERIAL_NO', rec_pick_list_item_.serial_no);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'REVISION_NO', rec_pick_list_item_.revision_no);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'WAIV_DEV_REJ_NO', rec_pick_list_item_.waiv_dev_rej_no);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'ACTIVITY_SEQ', rec_pick_list_item_.activity_seq);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'HANDLING_UNIT_ID', rec_pick_list_item_.handling_unit_id);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'SOURCE_REF1', rec_pick_list_item_.source_ref1);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'SOURCE_REF2', rec_pick_list_item_.source_ref2);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'SOURCE_REF3', rec_pick_list_item_.source_ref3);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'SOURCE_REF4', rec_pick_list_item_.source_ref4);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'SOURCE_REF_TYPE', rec_pick_list_item_.source_ref_type);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'SHIPMENT_ID', rec_pick_list_item_.shipment_id);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'CONDITION_CODE', rec_pick_list_item_.condition_code);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'CONDITION_CODE_DESC', rec_pick_list_item_.condition_code_desc);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'INV_UNIT_MEAS', rec_pick_list_item_.inv_unit_meas);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'EXPIRATION_DATE', rec_pick_list_item_.expiration_date);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'QTY_RESERVED', rec_pick_list_item_.qty_reserved);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'ACTIVITY_NO', rec_pick_list_item_.activity_no);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'PROJECT_ID', rec_pick_list_item_.project_id);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'SUB_PROJECT_ID', rec_pick_list_item_.sub_project_id);
               Xml_Record_Writer_SYS.Add_Custom_Fields(xml$_, 'InventoryPartReservation', rec_pick_list_item_.inv_part_res_rowkey, 'SHPMNT_CONSOLID_PICK_LIST_REP');
               Xml_Record_Writer_SYS.Add_Custom_Fields(xml$_, 'ShipmentLine', rec_pick_list_item_.shipment_line_rowkey, 'SHPMNT_CONSOLID_PICK_LIST_REP');
               Xml_Record_Writer_SYS.End_Element(xml$_, 'PICK_LIST_ITEM');
               Add_Result_Row___(result_key$_,
                                 binds$_ => binds$_,
                                 rec_pick_list_header_ => rec_pick_list_header_,
                                 rec_pick_location_ => rec_pick_location_,
                                 rec_handling_unit_ => rec_handling_unit_,
                                 rec_pick_list_item_ => rec_pick_list_item_,
                                 row_no$_ => row_no$_);
            END LOOP;
            CLOSE get_pick_list_item;
            Xml_Record_Writer_SYS.End_Element(xml$_, 'PICK_LIST_ITEMS');
            binds$_ := par_pick_list_item_;
            IF NOT has_pick_list_item_ THEN
               Add_Result_Row___(result_key$_,
                                 binds$_ => binds$_,
                                 rec_pick_list_header_ => rec_pick_list_header_,
                                 rec_pick_location_ => rec_pick_location_,
                                 rec_handling_unit_ => rec_handling_unit_,
                                 row_no$_ => row_no$_);
            END IF;

            Xml_Record_Writer_SYS.End_Element(xml$_, 'HANDLING_UNIT');
         END LOOP;
         CLOSE get_handling_unit;
         Xml_Record_Writer_SYS.End_Element(xml$_, 'HANDLING_UNITS');
         binds$_ := par_handling_unit_;

         has_no_handling_unit_ := FALSE;
         par_no_handling_unit_ := binds$_;
         binds$_.handling_unit_id := rec_pick_location_.handling_unit_id;
         binds$_.location_no := rec_pick_location_.location_no;
         Xml_Record_Writer_SYS.Start_Element(xml$_, 'NO_HANDLING_UNITS');
         OPEN get_no_handling_unit(rec_pick_location_.handling_unit_id, binds$_.pick_list_no, rec_pick_location_.location_no);
         LOOP
            FETCH get_no_handling_unit INTO rec_no_handling_unit_;
            has_no_handling_unit_ := get_no_handling_unit%FOUND OR get_no_handling_unit%ROWCOUNT > 0;
            EXIT WHEN get_no_handling_unit%NOTFOUND;
            Xml_Record_Writer_SYS.Start_Element(xml$_, 'NO_HANDLING_UNIT');
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'STRUCTURE_LEVEL', rec_no_handling_unit_.structure_level);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'HANDLING_UNIT_ID', rec_no_handling_unit_.handling_unit_id);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'HANDLING_UNIT_TYPE_ID', rec_no_handling_unit_.handling_unit_type_id);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'TYPE_DESCRIPTION', rec_no_handling_unit_.type_description);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'HANDLING_UNIT_CATEGORY_ID', rec_no_handling_unit_.handling_unit_category_id);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'SSCC', rec_no_handling_unit_.sscc);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'ALT_HANDLING_UNIT_LABEL', rec_no_handling_unit_.alt_handling_unit_label);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'COMPOSITION', rec_no_handling_unit_.composition);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'WIDTH', rec_no_handling_unit_.width);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'HEIGHT', rec_no_handling_unit_.height);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'DEPTH', rec_no_handling_unit_.depth);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'UOM_FOR_LENGTH', rec_no_handling_unit_.uom_for_length);
            Xml_Record_Writer_SYS.Add_Element(xml$_, 'NO_HANDLING_UNIT', rec_no_handling_unit_.no_handling_unit);
            has_pick_list_item_ := FALSE;
            par_pick_list_item_ := binds$_;
            binds$_.handling_unit_id := rec_no_handling_unit_.handling_unit_id;
            Xml_Record_Writer_SYS.Start_Element(xml$_, 'PICK_LIST_ITEMS');
            OPEN get_pick_list_item(binds$_.pick_list_no, rec_no_handling_unit_.handling_unit_id, binds$_.location_no);
            LOOP
               FETCH get_pick_list_item INTO rec_pick_list_item_;
               has_pick_list_item_ := get_pick_list_item%FOUND OR get_pick_list_item%ROWCOUNT > 0;
               EXIT WHEN get_pick_list_item%NOTFOUND;
               DECLARE
                   shipment_line_no_   NUMBER;
               BEGIN
                  $IF (Component_Cfgchr_SYS.INSTALLED) $THEN
                     rec_pick_list_item_.config_spec_desc := Configuration_Spec_API.Get_Description(rec_pick_list_item_.part_no, rec_pick_list_item_.configuration_id); 
                  $END
                  rec_pick_list_item_.condition_code_desc := Condition_Code_API.Get_Description(rec_pick_list_item_.condition_code);
                  rec_pick_list_item_.project_id := Shipment_Source_Utility_API.Get_Source_Project_Id__(rec_pick_list_item_.source_ref1, rec_pick_list_item_.source_ref2, rec_pick_list_item_.source_ref3, rec_pick_list_item_.source_ref4, rec_pick_list_item_.source_ref_type);  
                  $IF (Component_Proj_Sys.INSTALLED) $THEN
                     rec_pick_list_item_.activity_no := Activity_API.Get_Activity_No(rec_pick_list_item_.activity_seq); 
                     rec_pick_list_item_.sub_project_id := Activity_api.Get_Sub_Project_Id(rec_pick_list_item_.activity_seq); 
                  $END
                  shipment_line_no_ := Shipment_Line_API.Fetch_Ship_Line_No_By_Source(rec_pick_list_item_.shipment_id, 
                                                                                      rec_pick_list_item_.source_ref1, 
                                                                                      Shipment_Line_API.Get_Converted_Source_Ref(rec_pick_list_item_.source_ref2, rec_pick_list_item_.source_ref_type, 2), 
                                                                                      Shipment_Line_API.Get_Converted_Source_Ref(rec_pick_list_item_.source_ref3, rec_pick_list_item_.source_ref_type, 3), 
                                                                                      Shipment_Line_API.Get_Converted_Source_Ref(rec_pick_list_item_.source_ref4, rec_pick_list_item_.source_ref_type, 4),  
                                                                                      rec_pick_list_item_.source_ref_type);
                  rec_pick_list_item_.shipment_line_rowkey := Shipment_Line_API.Get_Objkey(rec_pick_list_item_.shipment_id, shipment_line_no_);
               END;
               Xml_Record_Writer_SYS.Start_Element(xml$_, 'PICK_LIST_ITEM');
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'PART_NO', rec_pick_list_item_.part_no);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'PART_DESCRIPTION', rec_pick_list_item_.part_description);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'CONFIGURATION_ID', rec_pick_list_item_.configuration_id);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'CONFIG_SPEC_DESC', rec_pick_list_item_.config_spec_desc);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'LOT_BATCH_NO', rec_pick_list_item_.lot_batch_no);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'SERIAL_NO', rec_pick_list_item_.serial_no);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'REVISION_NO', rec_pick_list_item_.revision_no);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'WAIV_DEV_REJ_NO', rec_pick_list_item_.waiv_dev_rej_no);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'ACTIVITY_SEQ', rec_pick_list_item_.activity_seq);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'HANDLING_UNIT_ID', rec_pick_list_item_.handling_unit_id);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'SOURCE_REF1', rec_pick_list_item_.source_ref1);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'SOURCE_REF2', rec_pick_list_item_.source_ref2);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'SOURCE_REF3', rec_pick_list_item_.source_ref3);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'SOURCE_REF4', rec_pick_list_item_.source_ref4);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'SOURCE_REF_TYPE', rec_pick_list_item_.source_ref_type);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'SHIPMENT_ID', rec_pick_list_item_.shipment_id);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'CONDITION_CODE', rec_pick_list_item_.condition_code);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'CONDITION_CODE_DESC', rec_pick_list_item_.condition_code_desc);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'INV_UNIT_MEAS', rec_pick_list_item_.inv_unit_meas);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'EXPIRATION_DATE', rec_pick_list_item_.expiration_date);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'QTY_RESERVED', rec_pick_list_item_.qty_reserved);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'ACTIVITY_NO', rec_pick_list_item_.activity_no);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'PROJECT_ID', rec_pick_list_item_.project_id);
               Xml_Record_Writer_SYS.Add_Element(xml$_, 'SUB_PROJECT_ID', rec_pick_list_item_.sub_project_id);
               Xml_Record_Writer_SYS.Add_Custom_Fields(xml$_, 'InventoryPartReservation', rec_pick_list_item_.inv_part_res_rowkey, 'SHPMNT_CONSOLID_PICK_LIST_REP');
               Xml_Record_Writer_SYS.Add_Custom_Fields(xml$_, 'ShipmentLine', rec_pick_list_item_.shipment_line_rowkey, 'SHPMNT_CONSOLID_PICK_LIST_REP');
               Xml_Record_Writer_SYS.End_Element(xml$_, 'PICK_LIST_ITEM');
               Add_Result_Row___(result_key$_,
                                 binds$_ => binds$_,
                                 rec_pick_list_header_ => rec_pick_list_header_,
                                 rec_pick_location_ => rec_pick_location_,
                                 rec_no_handling_unit_ => rec_no_handling_unit_,
                                 rec_pick_list_item_ => rec_pick_list_item_,
                                 row_no$_ => row_no$_);
            END LOOP;
            CLOSE get_pick_list_item;
            Xml_Record_Writer_SYS.End_Element(xml$_, 'PICK_LIST_ITEMS');
            binds$_ := par_pick_list_item_;
            IF NOT has_pick_list_item_ THEN
               Add_Result_Row___(result_key$_,
                                 binds$_ => binds$_,
                                 rec_pick_list_header_ => rec_pick_list_header_,
                                 rec_pick_location_ => rec_pick_location_,
                                 rec_no_handling_unit_ => rec_no_handling_unit_,
                                 row_no$_ => row_no$_);
            END IF;

            Xml_Record_Writer_SYS.End_Element(xml$_, 'NO_HANDLING_UNIT');
         END LOOP;
         CLOSE get_no_handling_unit;
         Xml_Record_Writer_SYS.End_Element(xml$_, 'NO_HANDLING_UNITS');
         binds$_ := par_no_handling_unit_;
         IF NOT has_handling_unit_ AND NOT has_no_handling_unit_ THEN
            Add_Result_Row___(result_key$_,
                              binds$_ => binds$_,
                              rec_pick_list_header_ => rec_pick_list_header_,
                              rec_pick_location_ => rec_pick_location_,
                              row_no$_ => row_no$_);
         END IF;

         Xml_Record_Writer_SYS.End_Element(xml$_, 'PICK_LOCATION');
      END LOOP;
      CLOSE get_pick_location;
      Xml_Record_Writer_SYS.End_Element(xml$_, 'LOCATIONS');
      binds$_ := par_pick_location_;
      IF NOT has_pick_location_ THEN
         Add_Result_Row___(result_key$_,
                           binds$_ => binds$_,
                           rec_pick_list_header_ => rec_pick_list_header_,
                           row_no$_ => row_no$_);
      END IF;

      Xml_Record_Writer_SYS.End_Element(xml$_, 'PICK_LIST_HEADER');
   END LOOP;
   CLOSE get_pick_list_header;
   Xml_Record_Writer_SYS.End_Element(xml$_, 'PICK_LIST_HEADERS');
   binds$_ := par_pick_list_header_;
   IF NOT has_pick_list_header_ THEN
      Add_Result_Row___(result_key$_,
                        binds$_ => binds$_,
                        row_no$_ => row_no$_);
   END IF;

   Xml_Record_Writer_SYS.End_Element(xml$_, 'SHPMNT_CONSOLID_PICK_LIST_REP');
   Report_SYS.Finish_Xml_Report('SHPMNT_CONSOLID_PICK_LIST_REP', result_key$_, xml$_);
   EXCEPTION
      WHEN OTHERS THEN
         IF get_pick_list_header%ISOPEN THEN
            CLOSE get_pick_list_header;
         END IF;
         IF get_pick_location%ISOPEN THEN
            CLOSE get_pick_location;
         END IF;
         IF get_handling_unit%ISOPEN THEN
            CLOSE get_handling_unit;
         END IF;
         IF get_no_handling_unit%ISOPEN THEN
            CLOSE get_no_handling_unit;
         END IF;
         IF get_pick_list_item%ISOPEN THEN
            CLOSE get_pick_list_item;
         END IF;
         RAISE;
END Execute_Report;

-----------------------------------------------------------------------------
-------------------- FOUNDATION1 METHODS ------------------------------------
-----------------------------------------------------------------------------
-- Test
--   Invokes the report method for testing purposes.
-- Init
--   Dummy procedure that can be called at database startup to ensure that
--   this package is loaded into memory for performance reasons only.
-----------------------------------------------------------------------------

FUNCTION Test (
   pick_list_no_             IN NUMBER)
RETURN NUMBER
IS
   result_key_     NUMBER;
   report_attr_    VARCHAR2(200);
   parameter_attr_ VARCHAR2(32000);
BEGIN
   General_SYS.Init_Method(lu_name_, 'SHPMNT_CONSOLID_PICK_LIST_RPI', 'Test');
   Report_SYS.Get_Result_Key__(result_key_);
   Client_SYS.Add_To_Attr('RESULT_KEY', result_key_, report_attr_);
   IF (pick_list_no_ IS NOT NULL) THEN
      Client_SYS.Add_To_Attr('PICK_LIST_NO', pick_list_no_, parameter_attr_);
   END IF;
   Execute_Report(report_attr_, parameter_attr_);
   RETURN result_key_;
END Test;


PROCEDURE Init
IS
BEGIN
   NULL;
END Init;

END SHPMNT_CONSOLID_PICK_LIST_RPI;
/
SHOW ERROR