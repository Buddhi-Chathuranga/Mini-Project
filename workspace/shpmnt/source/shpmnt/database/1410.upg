-----------------------------------------------------------------------------
--  Module : SHPMNT
--
--  Purpose: Upgrade of SHPMNT database objects from release 14.0.0 to 14.1.0.
--
--  File   : 1410.upg
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  --------------------------------------------------
--  180214   MaRalk  STRSC-17005, Added missing mandatory column is_in_stock to insert stmt of handling_unit_tab.
--  171103   khvese  STRSC-6057, Added missing mandatory column note_id to insert stmt of handling_unit_tab.
--  170209   MaIklk  STRSC-6057, Added missing mandatory columns to insert stmt of handling_unit_tab.
--  161206   MaIklk  LIM-9984, Fixed to set shipment_id always when updating handling_unit_tab from shipment_package_unit_tab.
--  161122   MaIklk  LIM-9178, Moved SHIPMENT_RESERV_HANDL_UNIT_TAB content from order to shpmnt.
--  160721   MaIklk  LIM-8053, Updated the renaming of SHIPMENT_CREATION column in SHIPMENT_TYPE_TAB.
--  160608   MaIklk  LIM-7442, Moved Customer_Order_Deliv_Note_tab related content from ORDER.
--  151216   MaRalk  LIM-4029, Created.
--  151216           Following modifications related to shipment functionality was moved from Order 1410.upg.
--  -----------------------------------------------------------------------------------------------------------
--
--  ***** Moved comments from Order 1410.upg Start *****
--
--  150226   RoJalk  PRSC-6287, Removed the obsolete view SHIPMENT_LINE_PICK_JOIN.
--  150113   JeLise  PRSC-4968, Moved insert of data into handling_unit_tab from 1410.upg in INVENT due to upgrade error.
--  131104   MaMalk  Made rowversion, rowstate and addr_flag mandatory in CUSTOMER_ORDER_DELIV_NOTE_TAB.
--  130816   RoJalk  Renamed REASSIGN_SHIP_RESERVATION_TMP to REASSIGN_SHIP_COMPONENT_TMP.
--  130813   MeAblk  Removed the basic data insertion for the SHIPMENT_TYPE_EVENT_TAB and moved it to ShipmentType.ins.
--  130812   RoJalk  Renamed CUSTOMER_ORDER_RESERVATION_TMP to REASSIGN_SHIP_RESERVATION_TMP.
--  130805   MeAblk  Made obsolete columns SHIPMENT_MEASURE_EDIT, MULTI_LOT_BATCH_PER_PALLET not nullable in the table SHIPMENT_TAB.
--  130802   MaEelk  Changed the codes to execute dynamic statements where the SHIPMENT_HANDLING_UNIT_TAB and SHIPMENT_PACKAGE_UNIT_TAB have been used.
--  130731   MaMalk  Updated technical_object_reference_tab related to LU ShipmentHandlingUtility with Shipment Order Line keys
--  130731   MaEelk  Added SHIPMENT_HANDLING_UNIT_PK, SHIPMENT_HANDLING_UNIT_RK, SHIPMENT_PACKAGE_UNIT_PK and
--  130731           SHIPMENT_PACKAGE_UNIT_RK  to the obsolete constraints setction.
--  130731           Added SHIPMENT_HANDLING_UNIT, HANDDLING_UNIT_PART, HANDLING_UNIT_PACKAGE and
--  130731           SHIPMENT_PACKAGE_UNIT to the obsolete view setction.
--  130731   RoJalk  Added the temporary table CUSTOMER_ORDER_RESERVATION_TMP.
--  130730   MaEelk  Added SHIPMENT_HANDLING_UNIT_API, HANDDLING_UNIT_PART_API, HANDLING_UNIT_PACKAGE_API and
--  130730           SHIPMENT_PACKAGE_UNIT_API to the obsolete package setction.
--  130717   MaMalk  Created an index for PARENT_CONSOL_SHIPMENT_ID in SHIPMENT_TAB to increase the performance in consolidated shipments.
--  130705   MaMalk  Added PRO_FORMA_PRINTED to Shipment_Tab.
--  130611   MAHPLK  Adding column APPROVE_BEFORE_DELIVERY and APPROVED_BY to SHIPMENT_TAB.
--  130610   MAHPLK  Added column APPROVE_BEFORE_DELIVERY TO SHIPMENT_TYPE_TAB.
--  130604   JeLise  Upgrading data from package structure to handling unit structure on shipment.
--  130604   MaMalk  Added TRANSPORT_UNIT_TYPE, VOLUME_CAPACITY and WEIGHT_CAPACITY to SHIPMENT_TAB
--  130604           to use this in Consolidated Shipments. Also added PRO_FORMA_PRINTED to SHIPMENT_TAB.
--  130418   MaMalk  Added  ROUTE_ID, REF_ID, DOCK_CODE, SUB_DOCK_CODE, LOCATION_NO, PLANNED_SHIP_PERIOD and
--  130418           LOAD_SEQUENCE_NO to the Shipment_Tab.
--  130416   MaMalk  Adding new table SHIPMENT_CONSOL_RULE_TAB to define rules for shipment creation.
--  130411   JeeJlk  Add ORIGINATING_CO_LANG_CODE column Customer_Order_Deliv_Note_Tab.
--  130410   MeAblk  Adding new column packing_instruction_id to table SHIPMENT_ORDER_LINE_TAB.
--  130409   MaMalk  Extended the length of DESCRIPTION in SHIPMENT_TYPE_TAB to VARCHAR2(50)
--  130409   MaMalk  Introduced 5 default shipment types instead of 'NS'.
--  130326   JeLise  Adding new column HANDLING_UNIT_TYPE_ID to table SHIPMENT_ORDER_LINE_TAB.
--  130315   MAEELK  Added column MANUAL_GROSS_WEIGHT to the SHIPMENT_TAB.
--  130315   MAEELK  Added column MANUAL_VOLUME to the SHIPMENT_TAB.
--  130211   RoJalk  Adding the column AUTO_CONNECTION_BLOCKED to SHIPMENT_TAB.
--  130207   MeAblk  Adding not null column QTY_PICKED column into SHIPMENT_ORDER_LINE_TAB and do the respective data upgrade.
--  121213   JeLise  Adding new table SHIPMENT_LINE_HANDL_UNIT_TAB.
--  121109   MaMalk  Adding PARENT_CONSOL_SHIPMENT_ID to the Shipment_Tab to support consolidation of shipments,
--  121109           while making CURRENCY_CODE and DELIVER_TO_CUSTOMER_NO not mandatory.
--  121108   MeAblk  Adding the not null column qty_to_ship to SHIPMENT_ORDER_LINE_TAB.
--  121023   MAHPLK  Update rowstate 'Complete' to 'Completed' and 'Canceled' to 'Cancelled' in shipment_tab.
--  120822   MeAblk  Adding SHIPMENT_TYPE, ORDER_NO and SHIPMENT_CATEGORY to SHIPMENT_TAB.
--  120820   SURBLK  Added new column USE_PRICE_INCL_TAX to SHIPMENT_TAB.
--  120711   MeAblk  Insert events meta data for the default shipment types.
--  120706   MAEELK  Added columns SALES_QTY, REVISED_QTY_DUE, QTY_ASSIGNED and QTY_SHIPPED to SHIPMENT_ORDER_LINE_TAB.
--  120704   RoJalk  Added tables SHIPMENT_TYPE_TAB, SHIPMENT_EVENT_TAB, SHIPMENT_TYPE_EVENT_TAB and SHIPMENT_TYPE_OPT_EVENT_TAB.
--  120520   MaMalk  Added SHIPMENT_TYPE, ORDER_NO and SHIPMENT_CATEGORY to SHIPMENT_TAB.
--
--  ***** Moved comments from Order 1410.upg End *****

--  ------   ------  --------------------------------------------------


SET SERVEROUTPUT ON
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_1');
PROMPT Start upgrading with 1410.upg

------------------------------------------------------------------------------------------
---------------------------- Instructions for upg files ----------------------------------
------------------------------------------------------------------------------------------

-- If possible, everything regarding one table should be placed in one section.
-- If this is not possible, a proper comment about the reason should be added.

-- Each section should be started with a "-----" line and a empty line.
-- This section should then start with a line like: "-- ***** Example_Tab Start *****"
-- and end with a line like:                       "-- ***** Example_Tab End *****"
-- Don't forget UPPER/lower case !

-- Every part inside the section should start with a "PROMPT" line explaining what is done by the block.

-- If the Pl/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.

-- Remember ordinary coding standard rules !

-- Don't drop any Table/Column !

-- Don't forget performance when updating large table !

-- No unnecessary blank lines or comments !

-- If possible, use pure SQL commands
-- If possible, try to group several updates together in one statement.

-- For more information refer the "Upgrade Script Standards document and the Performance Guide.

-- Timestamps will be added automatically at the end of the project.

---------------------------------------------------------------------------------------------
--------------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ----------------------
---------------------------------------------------------------------------------------------


-- ***** SHIPMENT_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_2');
PROMPT Adding columns USE_PRICE_INCL_TAX, SHIPMENT_TYPE, ORDER_NO, SHIPMENT_CATEGORY, PARENT_CONSOL_SHIPMENT_ID
PROMPT ROUTE_ID, REF_ID, DOCK_CODE, SUB_DOCK_CODE, LOCATION_NO, PLANNED_SHIP_PERIOD, LOAD_SEQUENCE_NO
PROMPT AUTO_CONNECTION_BLOCKED, MANUAL_GROSS_WEIGHT, MANUAL_VOLUME, TRANSPORT_UNIT_TYPE,
PROMPT VOLUME_CAPACITY, WEIGHT_CAPACITY, PRO_FORMA_PRINTED, APPROVE_BEFORE_DELIVERY,APPROVED_BY to SHIPMENT_TAB
PROMPT and Modifying CURRENCY_CODE and DELIVER_TO_CUSTOMER_NO nullable
DECLARE
   column_    Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('USE_PRICE_INCL_TAX', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('SHIPMENT_TYPE', 'VARCHAR2(3)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('ORDER_NO', 'VARCHAR2(12)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('SHIPMENT_CATEGORY', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('PARENT_CONSOL_SHIPMENT_ID', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('ROUTE_ID', 'VARCHAR2(12)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('REF_ID', 'VARCHAR2(35)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('DOCK_CODE', 'VARCHAR2(35)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('SUB_DOCK_CODE', 'VARCHAR2(35)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('LOCATION_NO', 'VARCHAR2(35)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('PLANNED_SHIP_PERIOD', 'VARCHAR2(10)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('LOAD_SEQUENCE_NO', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('AUTO_CONNECTION_BLOCKED', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('MANUAL_GROSS_WEIGHT', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('MANUAL_VOLUME', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('TRANSPORT_UNIT_TYPE', 'VARCHAR2(25)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('VOLUME_CAPACITY', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('WEIGHT_CAPACITY', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('PRO_FORMA_PRINTED', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('APPROVE_BEFORE_DELIVERY', 'VARCHAR2(5)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('APPROVED_BY', 'VARCHAR2(30)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('CURRENCY_CODE', 'VARCHAR2(3)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'M', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('DELIVER_TO_CUSTOMER_NO', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'M', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_3');
PROMPT Update new columns of SHIPMENT_TAB
UPDATE shipment_tab
SET   use_price_incl_tax = CASE
                              WHEN use_price_incl_tax IS NULL THEN
                                 'FALSE'
                              ELSE
                                 use_price_incl_tax
                              END,
      shipment_category  = CASE
                              WHEN (shipment_category IS NULL) THEN
                                 'NORMAL'
                              ELSE
                                 shipment_category
                              END,
      rowstate           = CASE
                              WHEN (rowstate = 'Complete') THEN
                                 'Completed'
                              WHEN (rowstate = 'Canceled') THEN
                                 'Cancelled'
                              WHEN (rowstate IS NULL) THEN
                                 '<UNDEFINED>'
                              ELSE
                                 rowstate
                              END,
      auto_connection_blocked = CASE
                                   WHEN (auto_connection_blocked IS NULL) THEN
                                      'FALSE'
                                   ELSE
                                      auto_connection_blocked
                                   END,
      pro_forma_printed = CASE
                              WHEN (pro_forma_printed IS NULL) THEN
                                 'N'
                              ELSE
                                 pro_forma_printed
                              END,
      approve_before_delivery = CASE
                                   WHEN (approve_before_delivery IS NULL) THEN
                                      'FALSE'
                                   ELSE
                                      approve_before_delivery
                                   END,
      rowversion              = CASE
                                    WHEN (rowversion IS NULL) THEN
                                       SYSDATE
                                    ELSE
                                       rowversion
                                    END;
COMMIT;


exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_4');
PROMPT Modify columns USE_PRICE_INCL_TAX, SHIPMENT_CATEGORY, AUTO_CONNECTION_BLOCKED, PRO_FORMA_PRINTED, APPROVE_BEFORE_DELIVERY,
PROMPT ROWVERSION, ROWSTATE as mandatory in SHIPMENT_TAB
PROMPT Modifying SHIPMENT_MEASURE_EDIT, MULTI_LOT_BATCH_PER_PALLET into nullable in SHIPMENT_TAB
DECLARE
   column_    Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('USE_PRICE_INCL_TAX', NULL, 'N');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'M', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('SHIPMENT_CATEGORY', 'VARCHAR2(20)', 'N');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'M', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('AUTO_CONNECTION_BLOCKED', 'VARCHAR2(20)', 'N');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'M', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('PRO_FORMA_PRINTED', 'VARCHAR2(20)', 'N');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB','M', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('APPROVE_BEFORE_DELIVERY', 'VARCHAR2(5)', 'N');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'M', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('ROWVERSION', 'DATE', 'N');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'M', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('ROWSTATE', 'VARCHAR2(20)', 'N');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'M', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('SHIPMENT_MEASURE_EDIT', 'VARCHAR2(5)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'M', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('MULTI_LOT_BATCH_PER_PALLET', 'VARCHAR2(5)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'M', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_5');
PROMPT Creating index SHIPMENT_IX1 on SHIPMENT_TAB for PARENT_CONSOL_SHIPMENT_ID
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'SHIPMENT_TAB';
   index_name_ VARCHAR2(30) := 'SHIPMENT_IX1';
BEGIN
   Database_SYS.Set_Table_Column(columns_, 'PARENT_CONSOL_SHIPMENT_ID');
   Database_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX');
END;
/

-- ***** SHIPMENT_TAB End *****

------------------------------------------------------------------------------------------

-- ***** SHIPMENT_TYPE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_6');
PROMPT Creating table SHIPMENT_TYPE_TAB
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(20):= 'SHIPMENT_TYPE_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_TYPE',           'VARCHAR2(3)',  'N');
   Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION',             'VARCHAR2(50)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_CREATION_CO',    'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'PICK_INVENTORY_TYPE',     'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ONLINE_PROCESSING',       'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'APPROVE_BEFORE_DELIVERY', 'VARCHAR2(5)',  'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION',              'DATE',         'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY',                  'VARCHAR2(50)', 'Y', '$DEFAULT_NULL$', NULL);
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_7');
PROMPT Creating Constraints SHIPMENT_TYPE_PK, SHIPMENT_TYPE_RK
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(20):= 'SHIPMENT_TYPE_TAB';
   index_name_ VARCHAR2(20):= 'SHIPMENT_TYPE_PK';
   rkidx_name_ VARCHAR2(20):= 'SHIPMENT_TYPE_RK';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_TYPE');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX');

   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, rkidx_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** SHIPMENT_TYPE_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** SHIPMENT_EVENT_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_8');
PROMPT Creating table SHIPMENT_EVENT_TAB
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(20):= 'SHIPMENT_EVENT_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'EVENT',       'NUMBER',       'N');
   Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(35)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION',  'DATE',         'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY',      'VARCHAR2(50)', 'Y', '$DEFAULT_NULL$', NULL);
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_9');
PROMPT Creating Constraints SHIPMENT_EVENT_PK, SHIPMENT_EVENT_RK
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(20):= 'SHIPMENT_EVENT_TAB';
   index_name_ VARCHAR2(20):= 'SHIPMENT_EVENT_PK';
   rkidx_name_ VARCHAR2(20):= 'SHIPMENT_EVENT_RK';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'EVENT');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX');

   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, rkidx_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** SHIPMENT_EVENT_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** SHIPMENT_TYPE_EVENT_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_10');
PROMPT Creating table SHIPMENT_TYPE_EVENT_TAB
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30):= 'SHIPMENT_TYPE_EVENT_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_TYPE', 'VARCHAR2(3)',  'N');
   Database_SYS.Set_Table_Column(columns_, 'EVENT',         'NUMBER',       'N');
   Database_SYS.Set_Table_Column(columns_, 'STOP_FLAG',     'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION',    'DATE',         'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY',        'VARCHAR2(50)', 'Y', '$DEFAULT_NULL$', NULL);
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_11');
PROMPT Creating Constraints SHIPMENT_TYPE_EVENT_PK, SHIPMENT_TYPE_EVENT_RK
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30):= 'SHIPMENT_TYPE_EVENT_TAB';
   index_name_ VARCHAR2(30):= 'SHIPMENT_TYPE_EVENT_PK';
   rkidx_name_ VARCHAR2(30):= 'SHIPMENT_TYPE_EVENT_RK';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_TYPE');
   Database_SYS.Set_Table_Column(columns_, 'EVENT');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX');

   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, rkidx_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** SHIPMENT_TYPE_EVENT_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** SHIPMENT_TYPE_OPT_EVENT_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_12');
PROMPT Creating table SHIPMENT_TYPE_OPT_EVENT_TAB
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30):= 'SHIPMENT_TYPE_OPT_EVENT_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_TYPE',  'VARCHAR2(3)',  'N');
   Database_SYS.Set_Table_Column(columns_, 'EVENT',          'NUMBER',       'N');
   Database_SYS.Set_Table_Column(columns_, 'OPTIONAL_EVENT', 'VARCHAR2(30)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION',     'DATE',         'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY',         'VARCHAR2(50)', 'Y', '$DEFAULT_NULL$', NULL);
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_13');
PROMPT Creating Constraints SHIPMENT_TYPE_OPT_EVENT_PK, SHIPMENT_TYPE_OPT_EVENT_RK
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30):= 'SHIPMENT_TYPE_OPT_EVENT_TAB';
   index_name_ VARCHAR2(30):= 'SHIPMENT_TYPE_OPT_EVENT_PK';
   rkidx_name_ VARCHAR2(30):= 'SHIPMENT_TYPE_OPT_EVENT_RK';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_TYPE');
   Database_SYS.Set_Table_Column(columns_, 'EVENT');
   Database_SYS.Set_Table_Column(columns_, 'OPTIONAL_EVENT');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX');

   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, rkidx_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** SHIPMENT_TYPE_OPT_EVENT_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** SHIPMENT_ORDER_LINE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_14');
PROMPT Adding columns SALES_QTY, REVISED_QTY_DUE, QTY_ASSIGNED, QTY_TO_SHIP, QTY_PICKED, PACKING_INSTRUCTION_ID,
PROMPT HANDLING_UNIT_TYPE_ID, QTY_SHIPPED to SHIPMENT_ORDER_LINE_TAB
DECLARE
   column_ Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('SALES_QTY', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_ORDER_LINE_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('REVISED_QTY_DUE', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_ORDER_LINE_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('QTY_ASSIGNED', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_ORDER_LINE_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('QTY_SHIPPED', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_ORDER_LINE_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('QTY_TO_SHIP', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_ORDER_LINE_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('QTY_PICKED', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_ORDER_LINE_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('HANDLING_UNIT_TYPE_ID', 'VARCHAR2(25)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_ORDER_LINE_TAB', 'A', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('PACKING_INSTRUCTION_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_ORDER_LINE_TAB', 'A', column_, TRUE);
END;
/


-- ***** SHIPMENT_ORDER_LINE_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** SHIPMENT_LINE_HANDL_UNIT_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_15');
PROMPT Creating table SHIPMENT_LINE_HANDL_UNIT_TAB
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'SHIPMENT_LINE_HANDL_UNIT_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_ID',      'NUMBER',       'N');
   Database_SYS.Set_Table_Column(columns_, 'ORDER_NO',         'VARCHAR2(12)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'LINE_NO',          'VARCHAR2(4)',  'N');
   Database_SYS.Set_Table_Column(columns_, 'REL_NO',           'VARCHAR2(4)',  'N');
   Database_SYS.Set_Table_Column(columns_, 'LINE_ITEM_NO',     'NUMBER',       'N');
   Database_SYS.Set_Table_Column(columns_, 'HANDLING_UNIT_ID', 'NUMBER',       'N');
   Database_SYS.Set_Table_Column(columns_, 'QUANTITY',         'NUMBER',       'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION',       'DATE',         'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY',           'VARCHAR2(50)', 'Y', '$DEFAULT_NULL$');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_16');
PROMPT Creating Constraint for SHIPMENT_LINE_HANDL_UNIT_TAB.
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'SHIPMENT_LINE_HANDL_UNIT_TAB';
   index_name_ VARCHAR2(30) := 'SHIPMENT_LINE_HANDL_UNIT_PK';
   rkidx_name_ VARCHAR2(30) := 'SHIPMENT_LINE_HANDL_UNIT_RK';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_ID');
   Database_SYS.Set_Table_Column(columns_, 'ORDER_NO');
   Database_SYS.Set_Table_Column(columns_, 'LINE_NO');
   Database_SYS.Set_Table_Column(columns_, 'REL_NO');
   Database_SYS.Set_Table_Column(columns_, 'LINE_ITEM_NO');
   Database_SYS.Set_Table_Column(columns_, 'HANDLING_UNIT_ID');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, rkidx_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** SHIPMENT_LINE_HANDL_UNIT_TAB End *****

---------------------------------------------------------------------------------------------
-- ***** HANDLING_UNIT_TAB Start *****

-- Added this section here in SHPMNT to avoid errors when upgrading from earlier versions where not all
-- columns exist in shipment_handling_unit_tab and shipment_package_unit_tab

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_17');
PROMPT Upgrading data from package structure to handling unit structure on shipment.
BEGIN
   IF (Database_SYS.Table_Exist('shipment_handling_unit_tab') AND
       Database_SYS.Table_Exist('shipment_tab') AND
       Database_SYS.Table_Exist('shipment_package_unit_tab')) THEN
      EXECUTE IMMEDIATE
         'BEGIN
             -- Insert all Handling units
             INSERT INTO handling_unit_tab (
                handling_unit_id,
                handling_unit_type_id,
                parent_handling_unit_id,
                shipment_id,
                manual_gross_weight,
                generate_sscc_no,
                print_label,
                mix_of_part_no_blocked,
                mix_of_lot_batch_blocked,
                mix_of_cond_code_blocked,
                manual_volume,
                sscc,
                uom_for_length,
                no_of_handling_unit_labels,
                no_of_content_labels,
                no_of_shipment_labels,
                print_content_label,
                print_shipment_label,
                has_stock_reservation,
                note_id,
                is_in_stock,
                rowversion)
             SELECT sh.handling_unit_id,
                NVL(sh.pallet_type, ''DUMMY UPGRADE''),
                NULL,
                sh.shipment_id,
                DECODE(s.shipment_measure_edit, ''TRUE'', (NVL(sh.net_weight, 0) + sh.handling_unit_weight), NULL),
                ''TRUE'',
                ''TRUE'',
                ''FALSE'',
                DECODE(s.multi_lot_batch_per_pallet, ''TRUE'', ''FALSE'', ''TRUE''),
                ''FALSE'',
                DECODE(s.shipment_measure_edit, ''TRUE'', sh.volume, NULL),
                sh.sscc,
                (SELECT cii.uom_for_length
                 FROM company_invent_info_tab cii , site_tab st
                 WHERE cii.company = st.company
                 AND   st.contract = s.contract),
                1,
                1,
                1,
                ''FALSE'',
                ''FALSE'',
                ''FALSE'',
                note_id.NEXTVAL,
                ''FALSE'',
                sysdate
                FROM shipment_handling_unit_tab sh, shipment_tab s
                WHERE sh.shipment_id = s.shipment_id
                AND   NOT EXISTS (SELECT 1
                                  FROM handling_unit_tab h
                                  WHERE sh.handling_unit_id = h.handling_unit_id);
             COMMIT;
          END;';

      EXECUTE IMMEDIATE
         'DECLARE
            suffix_ VARCHAR2(15) := ''- UPG DUPLICATE'';
          BEGIN
             -- Insert all Package units
             INSERT INTO handling_unit_tab (
                handling_unit_id,
                handling_unit_type_id,
                parent_handling_unit_id,
                shipment_id,
                manual_gross_weight,
                generate_sscc_no,
                print_label,
                mix_of_part_no_blocked,
                mix_of_lot_batch_blocked,
                mix_of_cond_code_blocked,
                manual_volume,
                sscc,
                uom_for_length,
                no_of_handling_unit_labels,
                no_of_content_labels,
                no_of_shipment_labels,
                print_content_label,
                print_shipment_label,
                has_stock_reservation,
                note_id,
                is_in_stock,
                rowversion)
                SELECT sp.package_unit_id,
                   NVL((SELECT hut.handling_unit_type_id
                        FROM handling_unit_type_tab hut
                        WHERE hut.handling_unit_category_id = ''PACKAGE''
                        AND   (hut.handling_unit_type_id = sp.package_type
                        OR     hut.handling_unit_type_id = sp.package_type||suffix_)), ''DUMMY UPGRADE''),
                   sp.handling_unit_id,
                   sp.shipment_id,
                   DECODE(s.shipment_measure_edit, ''TRUE'', (NVL(sp.net_weight, 0) + sp.handling_unit_weight), NULL),
                   ''FALSE'',
                   ''TRUE'',
                   ''FALSE'',
                   DECODE(sp.handling_unit_id, NULL, DECODE(s.multi_lot_batch_per_pallet, ''TRUE'', ''FALSE'', ''TRUE''), ''FALSE''),
                   ''FALSE'',
                   DECODE(s.shipment_measure_edit, ''TRUE'', sp.volume, NULL),
                   sp.sscc,
                   (SELECT cii.uom_for_length
                   FROM company_invent_info_tab cii , site_tab st
                   WHERE cii.company = st.company
                   AND   st.contract = s.contract),
                   1,
                   1,
                   1,
                   ''FALSE'',
                   ''FALSE'',
                   ''FALSE'',
                   note_id.NEXTVAL,
                   ''FALSE'',
                   sysdate
                  FROM shipment_package_unit_tab sp, shipment_tab s
                  WHERE sp.shipment_id = s.shipment_id
                  AND   NOT EXISTS (SELECT 1
                                    FROM handling_unit_tab h
                                    WHERE sp.package_unit_id = h.handling_unit_id);
             COMMIT;
          END;';
   END IF;
END;
/
-- ***** HANDLING_UNIT_TAB End *****

---------------------------------------------------------------------------------------------
--
-- ***** SHIPMENT_CONSOL_RULE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_18');
PROMPT Creating table SHIPMENT_CONSOL_RULE_TAB
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'SHIPMENT_CONSOL_RULE_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_TYPE', 'VARCHAR2(3)',  'N');
   Database_SYS.Set_Table_Column(columns_, 'CONSOL_PARAM',  'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION',    'DATE',         'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY',        'VARCHAR2(50)', 'Y', '$DEFAULT_NULL$');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_19');
PROMPT Creating constraints for SHIPMENT_CONSOL_RULE_TAB
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'SHIPMENT_CONSOL_RULE_TAB';
   index_name_ VARCHAR2(30) := 'SHIPMENT_CONSOL_RULE_PK';
   rkidx_name_ VARCHAR2(30) := 'SHIPMENT_CONSOL_RULE_RK';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_TYPE');
   Database_SYS.Set_Table_Column(columns_, 'CONSOL_PARAM');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, rkidx_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** SHIPMENT_CONSOL_RULE_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** TECHNICAL_OBJECT_REFERENCE_TAB Start *****


exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_20');
PROMPT Updating TECHNICAL_OBJECT_REFERENCE_TAB related to LU ShipmentHandlingUtility with Shipment Order Line keys
UPDATE technical_object_reference_tab
SET    lu_name =  'ShipmentOrderLine'
WHERE  lu_name = 'ShipmentHandlingUtility'
AND    key_ref LIKE '%ORDER_NO%'
AND    key_ref LIKE '%LINE_NO%'
AND    key_ref LIKE '%REL_NO%'
AND    key_ref LIKE '%LINE_ITEM_NO%'
AND    key_ref LIKE '%SHIPMENT_ID%';

COMMIT;

-- ***** TECHNICAL_OBJECT_REFERENCE_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** REASSIGN_SHIP_COMPONENT_TMP Start *****


exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_21');
PROMPT Creating temporary table REASSIGN_SHIP_COMPONENT_TMP
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'REASSIGN_SHIP_COMPONENT_TMP';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'LINE_ITEM_NO ',    'NUMBER',       'N');
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT',         'VARCHAR2(5)',  'Y');
   Database_SYS.Set_Table_Column(columns_, 'PART_NO',          'VARCHAR2(25)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'LOCATION_NO',      'VARCHAR2(35)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'LOT_BATCH_NO',     'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SERIAL_NO',        'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ENG_CHG_LEVEL',    'VARCHAR2(6)',  'Y');
   Database_SYS.Set_Table_Column(columns_, 'WAIV_DEV_REJ_NO',  'VARCHAR2(15)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ACTIVITY_SEQ',     'NUMBER',       'Y');
   Database_SYS.Set_Table_Column(columns_, 'PALLET_ID',        'VARCHAR2(10)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'PICK_LIST_NO',     'VARCHAR2(15)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CONFIGURATION_ID', 'VARCHAR2(50)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'NOT_RESERVED_QTY', 'NUMBER',       'N');
   Database_SYS.Set_Table_Column(columns_, 'RESERVED_QTY',     'NUMBER',       'N');
   Database_SYS.Set_Table_Column(columns_, 'CATCH_QTY',        'NUMBER',       'Y');
   Database_SYS.Create_Temporary_Table(table_name_, columns_, TRUE);
END;
/

-- ***** REASSIGN_SHIP_COMPONENT_TMP End *****

---------------------------------------------------------------------------------------------

-- ***** CUSTOMER_ORDER_DELIV_NOTE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_22');
PROMPT Adding COLUMN ORIGINATING_CO_LANG_CODE to CUSTOMER_ORDER_DELIV_NOTE_TAB

DECLARE
   column_ Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('ORIGINATING_CO_LANG_CODE', 'VARCHAR2(2)', 'Y');
   Database_SYS.Alter_Table_Column('CUSTOMER_ORDER_DELIV_NOTE_TAB', 'A', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_23');
PROMPT Updating columns rowversion, rowstate and addr_flag in CUSTOMER_ORDER_DELIV_NOTE_TAB
UPDATE customer_order_deliv_note_tab codn
SET    rowversion               = CASE
                                     WHEN rowversion IS NULL THEN
                                         SYSDATE
                                     ELSE
                                        rowversion
                                     END,
       rowstate                 = CASE
                                     WHEN rowstate IS NULL THEN
                                         '<UNDEFINED>'
                                     ELSE
                                        rowstate
                                     END,
       addr_flag                 = CASE
                                     WHEN addr_flag IS NULL THEN
                                         CHR(31)
                                     ELSE
                                        addr_flag
                                     END
WHERE (rowversion IS NULL OR rowstate IS NULL OR addr_flag IS NULL);

COMMIT;

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_24');
PROMPT Modifying rowversion, rowstate and addr_flag to mandatory in CUSTOMER_ORDER_DELIV_NOTE_TAB
DECLARE
   column_ Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('ROWVERSION', 'DATE', 'N');
   Database_SYS.Alter_Table_Column('CUSTOMER_ORDER_DELIV_NOTE_TAB', 'M', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('ROWSTATE', 'VARCHAR2(20)', 'N');
   Database_SYS.Alter_Table_Column('CUSTOMER_ORDER_DELIV_NOTE_TAB', 'M', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('ADDR_FLAG', 'VARCHAR2(1)', 'N');
   Database_SYS.Alter_Table_Column('CUSTOMER_ORDER_DELIV_NOTE_TAB', 'M', column_, TRUE);
END;
/

-- ***** CUSTOMER_ORDER_DELIV_NOTE_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** SHIPMENT_RESERV_HANDL_UNIT_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_25');
PROMPT Creating table SHIPMENT_RESERV_HANDL_UNIT_TAB
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'SHIPMENT_RESERV_HANDL_UNIT_TAB';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ORDER_NO',              'VARCHAR2(12)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'LINE_NO',               'VARCHAR2(4)',  'N');
   Database_SYS.Set_Table_Column(columns_, 'REL_NO',                'VARCHAR2(4)',  'N');
   Database_SYS.Set_Table_Column(columns_, 'LINE_ITEM_NO',          'NUMBER',       'N');
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT',              'VARCHAR2(5)',  'N');
   Database_SYS.Set_Table_Column(columns_, 'PART_NO',               'VARCHAR2(25)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'LOCATION_NO',           'VARCHAR2(35)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'LOT_BATCH_NO',          'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'SERIAL_NO',             'VARCHAR2(50)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ENG_CHG_LEVEL',         'VARCHAR2(6)',  'N');
   Database_SYS.Set_Table_Column(columns_, 'WAIV_DEV_REJ_NO',       'VARCHAR2(15)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ACTIVITY_SEQ',          'NUMBER',       'N');
   Database_SYS.Set_Table_Column(columns_, 'PALLET_ID',             'VARCHAR2(10)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'CONFIGURATION_ID',      'VARCHAR2(50)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'PICK_LIST_NO',          'VARCHAR2(15)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_ID',           'NUMBER',       'N');
   Database_SYS.Set_Table_Column(columns_, 'HANDLING_UNIT_ID',      'NUMBER',       'N');
   Database_SYS.Set_Table_Column(columns_, 'QUANTITY',              'NUMBER',       'N');
   Database_SYS.Set_Table_Column(columns_, 'CATCH_QTY_TO_REASSIGN', 'NUMBER',       'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION',            'DATE',         'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY',                'VARCHAR2(50)', 'Y', '$DEFAULT_NULL$');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA',   NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_26');
PROMPT Creating Constraint for SHIPMENT_RESERV_HANDL_UNIT_TAB.
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'SHIPMENT_RESERV_HANDL_UNIT_TAB';
   index_name_ VARCHAR2(30) := 'SHIPMENT_RESERV_HANDL_UNIT_PK';
   rkidx_name_ VARCHAR2(30) := 'SHIPMENT_RESERV_HANDL_UNIT_RK';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ORDER_NO');
   Database_SYS.Set_Table_Column(columns_, 'LINE_NO');
   Database_SYS.Set_Table_Column(columns_, 'REL_NO');
   Database_SYS.Set_Table_Column(columns_, 'LINE_ITEM_NO');
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT');
   Database_SYS.Set_Table_Column(columns_, 'PART_NO');
   Database_SYS.Set_Table_Column(columns_, 'LOCATION_NO');
   Database_SYS.Set_Table_Column(columns_, 'LOT_BATCH_NO');
   Database_SYS.Set_Table_Column(columns_, 'SERIAL_NO');
   Database_SYS.Set_Table_Column(columns_, 'ENG_CHG_LEVEL');
   Database_SYS.Set_Table_Column(columns_, 'WAIV_DEV_REJ_NO');
   Database_SYS.Set_Table_Column(columns_, 'ACTIVITY_SEQ');
   Database_SYS.Set_Table_Column(columns_, 'PALLET_ID');
   Database_SYS.Set_Table_Column(columns_, 'CONFIGURATION_ID');
   Database_SYS.Set_Table_Column(columns_, 'PICK_LIST_NO');
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_ID');
   Database_SYS.Set_Table_Column(columns_, 'HANDLING_UNIT_ID');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, rkidx_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** SHIPMENT_RESERV_HANDL_UNIT_TAB End *****

---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES  ----------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES/COLUMNS -----------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------

-- ***** Drop obsolete packages Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_27');
PROMPT Removing obsolete packages
BEGIN
   Database_SYS.Remove_Package('SHIPMENT_HANDLING_UNIT_API',   TRUE);
   Database_SYS.Remove_Package('SHIPMENT_PACKAGE_UNIT_API',    TRUE);
END;
/

-- ***** Drop obsolete packages End *****

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------

-- ***** Drop obsolete views Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_28');
PROMPT Removing obsolete views
BEGIN
   Database_SYS.Remove_View('SHIPMENT_HANDLING_UTILITY',    TRUE);
   Database_SYS.Remove_View('SHIPMENT_HANDLING_UNIT',       TRUE);
   Database_SYS.Remove_View('SHIPMENT_PACKAGE_UNIT',        TRUE);
   Database_SYS.Remove_View('SHIPMENT_LINE_PICK_JOIN',      TRUE);
END;
/

-- ***** Drop obsolete views End *****


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE SEQUENCES --------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_29');
PROMPT Rename Indexes/CONSTRAINTS
BEGIN
   Database_SYS.Rename_Index('SHIPMENT_ORDER_LINE_1X', 'SHIPMENT_ORDER_LINE_IX1', TRUE);
   Database_SYS.Rename_Index('CUSTOMER_ORDER_DELIV_NOTE_1_IX', 'CUSTOMER_ORDER_DELIV_NOTE_IX1', TRUE);
   Database_SYS.Rename_Index('CUSTOMER_ORDER_DELIV_NOTE_2_IX', 'CUSTOMER_ORDER_DELIV_NOTE_IX2', TRUE);
END;
/
---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Timestamp_30');
PROMPT Upgrade statements in file 1410.upg end here.

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1410.upg','Done');





