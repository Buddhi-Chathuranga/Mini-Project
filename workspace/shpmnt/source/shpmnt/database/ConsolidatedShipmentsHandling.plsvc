-----------------------------------------------------------------------------
--
--  Logical unit: ConsolidatedShipmentsHandling
--  Component:    SHPMNT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  190618  JaBalk  SCUXXW4-15272, Added error messages if negative values entered for Volume Capacity and Weight Capacity.
--  180705  RoJalk  SCUXXW4-4834, Created.
-----------------------------------------------------------------------------

layer Core;
@Override
PROCEDURE CRUD_Update___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Shipment_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT VARCHAR2,
   action_ IN  VARCHAR2 )
IS
   weight_capacity_ NUMBER:=0;
   volume_capacity_ NUMBER:=0;
BEGIN
   weight_capacity_ := Client_SYS.Get_Item_Value_To_Number('WEIGHT_CAPACITY', attr_, lu_name_);
   volume_capacity_ := Client_SYS.Get_Item_Value_To_Number('VOLUME_CAPACITY', attr_, lu_name_);
   IF  (weight_capacity_ < 0) THEN
      Error_SYS.Record_General(lu_name_, 'WEIGHTCAPACITYZERO: Weight Capacity must be greater than 0');  
   ELSIF (volume_capacity_ <0) THEN
      Error_SYS.Record_General(lu_name_, 'VOLUMECAPACITYZERO: Volume Capacity must be greater than 0');  
   END IF;
   super(etag_, key_, attr_, info_, action_);
END CRUD_Update___;

FUNCTION Get_Ship_Via_Information___(
   ship_via_code_    IN VARCHAR2,
   uom_for_weight_   IN VARCHAR2,
   uom_for_volume_   IN VARCHAR2 ) RETURN Ship_Via_Information_Struct_Rec
IS
   ship_via_information_struct_rec_            Ship_Via_Information_Struct_Rec;
   transport_unit_type_information_struct_rec_ Transport_Unit_Type_Information_Struct_Rec;
BEGIN
   ship_via_information_struct_rec_.transport_unit_type := Mpccom_Ship_Via_API.Get_Transport_Unit_Type(ship_via_code_);
   transport_unit_type_information_struct_rec_          := Get_Transport_Unit_Information___(ship_via_information_struct_rec_.transport_unit_type,
                                                                                             uom_for_weight_,
                                                                                             uom_for_volume_ );
   ship_via_information_struct_rec_.weight_capacity      := transport_unit_type_information_struct_rec_.weight_capacity;
   ship_via_information_struct_rec_.volume_capacity      := transport_unit_type_information_struct_rec_.volume_capacity;
   
   RETURN ship_via_information_struct_rec_;
END Get_Ship_Via_Information___;

FUNCTION Get_Route_Connected_Forwarder___(
   route_id_ IN VARCHAR2 ) RETURN VARCHAR2
IS
   forward_agent_id_   VARCHAR2(20);
BEGIN
   forward_agent_id_  := Delivery_Route_API.Get_Forward_Agent_Id(route_id_);
   RETURN forward_agent_id_;
END Get_Route_Connected_Forwarder___;

FUNCTION Get_Transport_Unit_Information___(
   transport_unit_type_ IN VARCHAR2,
   uom_for_weight_      IN VARCHAR2,
   uom_for_volume_      IN VARCHAR2 ) RETURN Transport_Unit_Type_Information_Struct_Rec
IS
   transport_unit_type_information_struct_rec_ Transport_Unit_Type_Information_Struct_Rec;
BEGIN
   transport_unit_type_information_struct_rec_.weight_capacity := Shipment_API.Get_Converted_Weight_Capacity(transport_unit_type_, uom_for_weight_);
   transport_unit_type_information_struct_rec_.volume_capacity := Shipment_API.Get_Converted_Volume_Capacity(transport_unit_type_, uom_for_volume_);
   RETURN transport_unit_type_information_struct_rec_;
END Get_Transport_Unit_Information___;

FUNCTION Get_Consol_Ship_Delnote_Nos___(
   selection_ IN VARCHAR2 )  RETURN VARCHAR2
IS
   selection_in_           VARCHAR2(32000) := CONCAT(selection_, ';');
   current_selection_      VARCHAR2(32000);
   shipment_id_            NUMBER;
   stmt_                   VARCHAR2(8000);
   delnote_no_list_        VARCHAR2(30000);
   delnote_no_count_       NUMBER;
   delnote_no_tab_         utility_sys.STRING_TABLE;
BEGIN
   WHILE (INSTR(selection_in_, ';') > 0) LOOP
      
      current_selection_  := substr(selection_in_, 0, INSTR(selection_in_, ';'));
      shipment_id_        := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Key_Reference_Value(current_selection_, 'SHIPMENT_ID'));
      
      Shipment_API.Get_Consol_Ship_Delnote_Nos(delnote_no_list_, shipment_id_);
      Utility_SYS.Tokenize(delnote_no_list_, Client_SYS.field_separator_, delnote_no_tab_, delnote_no_count_);
      
      FOR i_ IN delnote_no_tab_.FIRST..delnote_no_tab_.LAST LOOP
         stmt_ := CONCAT(stmt_, REPLACE('DelnoteNo eq '':P1'' or ', ':P1', delnote_no_tab_(i_)));
      END LOOP;   
      selection_in_ := substr(selection_in_, INSTR(selection_in_, ';') + 1);
      
   END LOOP;
   
   IF stmt_ IS NOT NULL THEN
      stmt_ := SUBSTR(stmt_, 0, length(stmt_)-4);
   END IF;   
   
   RETURN stmt_;
END Get_Consol_Ship_Delnote_Nos___;

