-----------------------------------------------------------------------------
--  Module : SHPMNT
--
--  Purpose: File for upgrading Order Version 14.1.0-GET, Shipment version 15.0.0-GET to IFS CLOUD
--
--  File   : GET_TO_CLOUD.UPG
--
--  IFS/Design Template Version 2.3
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  220311  ApWilk  SCDEV-8031, Added UPD13 to UPD14 changes to Section 2.3 and added Section 3.4.
--  210910  Niralk  SC21R2-2676, Added Secton 2.3 and 3.3.
--  210511  MaEelk  SC21R2-1147, Added cdb changes (191024_150685_Shpmnt.cdb and 200326_152223_Shpmnt.cdb) from GET10 UPD6 to GET10 UPD11 in the Section 2.2.
--  210511  MaEelk  SC21R2-1136, Renamed 2110_GET.upg to GET_TO_CLOUD.upg.
--  191004  Ashelk  Created. 
--  191025  Kagalk  Added section 1, 2 contents.
--  210217  MaEelk  SC2020R1-12620, Replace the calls to Database_SYS.Create_Or_Replace_Table with Database_SYS.Create_Table.
-----------------------------------------------------------------------------

SET SERVEROUTPUT ON

DEFINE MODULE = 'SHPMNT'
DEFINE GET9VERSION  = 14.1.0-GET
DEFINE GET10VERSION  = 15.0.0-GET

------------------------------------------------------------------------------------------

-- Instructions for upg files:

-- If possible, everything regarding one table should be placed in one section.
-- If this is not possible, a proper comment about the reason should be added.

-- Each section should be started with a "-" line and a empty line.
-- The section should then start with a line like: "-- ***** Example_Tab Start *****"
-- and end with a line like:                       "-- ***** Example_Tab End *****"
-- The "start tag" (in this case "Example_Tab"), should be placed in "List of upgrade sections".
-- Don't forget UPPER/lower case !

-- Every part inside the section should start with a "PROMPT" line.

-- If the Pl block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.
-- If the Pl block not has DML instructions, there should not be a "COMMIT;" line after the block.

-- Remember ordinary coding standard rules !

-- Don't drop any column in an upgrade file !

-- Don't forget performance when updating large tabled !

-- No unnecessary blank lines or comments !

-- If possible, use pure SQL update
-- If possible, try to put several updates together in one statement.

-----------------------------------------------------------------------------------------

-- LIST OF  SECTIONS 

-- SECTION 1 - Handling Upgrade from GET9 to GET10 RTM
--    List of upgrade sections :- 
--            delivery_note_tab
--            shipment_tab
--            deliv_note_number_series_tab
--            shpmnt_info_services_rpt

-- SECTION 2 - Handling Upgrade from GET10 RTM to development base per each version  
-- 2.1 List of upgrade sections List of upgrade sections from GET10 RTM to GET10 UPD6
--            delivery_note_tab
--            delivery_note_hash_info_tab
--            at_response_info_tab
--            shipment_tab
--            shpmnt_info_services_rpt
-- 2.2 List of upgrade sections from GET10 UPD6 to GET10 UPD11
--            delivery_note_tab
--            send_e_deliv_note_header_tab
--            send_e_deliv_note_line_tab
-- 2.3 List of upgrade sections from GET10 UPD11 to GET10 UPD13
-- 2.4 List of upgrade sections From GET10 UPD13 to GET10 UPD14
--            shpmnt_info_services_rpt

-- SECTION 3 - IFS CLOUD related GET DB Changes
-- 3.1 List of upgrade sections 21R1 -  

-- 3.2 List of upgrade sections 21R2 - 
-- 3.3 List of upgrade sections 22R1 - 
-- 3.4 List of upgrade sections 22R2 - 

-----------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------
------------- SECTION1 : Handling Upgrade from GET9 to GET10 RTM Start Here -------------
-----------------------------------------------------------------------------------------
-- Content in GET10 RTM Cdb file is included in this section
-----------------------------------------------------------------------------------------


--*************delivery_note_tab Start*************

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_1');
PROMPT Adding columns to delivery_note_tab  
DECLARE
   table_name_ VARCHAR2(30) := 'DELIVERY_NOTE_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      column_ := Database_SYS.Set_Column_Values('DEL_NOTE_PRINT_DATE', 'DATE','Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_ , TRUE);
      column_ := Database_SYS.Set_Column_Values('DEL_NOTE_VERIFIED', 'VARCHAR2(20)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('PAGE_NUMBERS', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('PREFIX_A', 'VARCHAR2(50)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('PREFIX_B', 'VARCHAR2(50)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('PREFIX_C', 'VARCHAR2(50)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('SERIAL_NUMBER', 'VARCHAR2(50)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('TRANSPORT_DATE', 'DATE', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('LABEL_TEXT', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('QTY_EUR_PALLETS', 'NUMBER', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('DELIVERY_REASON_ID', 'VARCHAR2(20)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('E_TAX_INVOICE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('DEL_NOTE_PRINT_DATE', 'DATE', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;              
END;
/

--*************delivery_note_tab End***************

-----------------------------------------------------------------------------------------

--*************shipment_tab Start*************  

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_2');
PROMPT Adding columns to shipment_tab
DECLARE
   table_name_  VARCHAR2(30) := 'SHIPMENT_TAB';
   column_      Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      -- gelr:co_invoice_before_deliv_confrm begin
      column_ := Database_SYS.Set_Column_Values('DELIV_CONFIRM_AFTER_PRT_INVOIC', 'VARCHAR2(5)', 'N', '''FALSE''', keep_default_ => 'Y');
      Database_SYS.Alter_Table_Column(table_name_ , 'A', column_, TRUE);
      -- gelr:co_invoice_before_deliv_confrm, end
   
      -- gelr:special_consumption_tax, begin
      column_ := Database_SYS.Set_Column_Values('CUST_EXPORT_DECLARATION_NO', 'VARCHAR2(20)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      -- gelr:special_consumption_tax, end
   
      -- gelr:handle_br_fisnote:BR-SHIP, begin
      column_ := Database_SYS.Set_Column_Values('FORWARDER_ADDRESS_ID', 'VARCHAR2(50)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_ , 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('MARK', 'VARCHAR2(20)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_ , 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('VEHICLE_LICENSE_PLATE1', 'VARCHAR2(10)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_ , 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('VEHICLE_LICENSE_PLATE2', 'VARCHAR2(10)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_ , 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('DRIVER', 'VARCHAR2(40)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_ , 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('VEHICLE_COUNTRY', 'VARCHAR2(2)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_ , 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('VEHICLE_STATE', 'VARCHAR2(2)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_ , 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('VEHICLE_MODEL', 'VARCHAR2(15)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_ , 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('STATE_BOARDING', 'VARCHAR2(2)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_ , 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('BOARDING_LOCAL', 'VARCHAR2(60)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_ , 'A', column_, TRUE);
      -- gelr:handle_br_fisnote:BR-SHIP, end
   
      -- gelr:indo_etax_invoice, begin
      column_ := Database_SYS.Set_Column_Values('E_TAX_INVOICE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      -- gelr:indo_etax_invoice, end
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;              
END;
/

--*************shipment_tab End***************

-----------------------------------------------------------------------------------------

--*************deliv_note_number_series_tab Start*************

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_3');
PROMPT adding coulumn generated to deliv_note_number_series_tab
DECLARE
   table_name_ VARCHAR2(30) := 'DELIV_NOTE_NUMBER_SERIES_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      column_ := Database_SYS.Set_Column_Values('GENERATED', 'VARCHAR2(20)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;              
END;
/

--*************deliv_note_number_series_tab End***************

-----------------------------------------------------------------------------------------

--*************shpmnt_info_services_rpt Start*************

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_4');
PROMPT adding columns ext_s1, ext_n1 and ext_d1 to shpmnt_info_services_rpt
DECLARE
   table_name_ VARCHAR2(30) := 'SHPMNT_INFO_SERVICES_RPT';
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      column_ := Database_SYS.Set_Column_Values('EXT_S1', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   
      column_ := Database_SYS.Set_Column_Values('EXT_S2', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   
      column_ := Database_SYS.Set_Column_Values('EXT_N1', 'NUMBER', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   
      column_ := Database_SYS.Set_Column_Values('EXT_D1', 'DATE', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;              
END;
/
 
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_5');
PROMPT recreating report view shpmnt_info_services_rpv
DECLARE
   PROCEDURE Create_RPV_View(
      table_name_ IN VARCHAR2,
      view_name_  IN VARCHAR2,
      lu_         IN VARCHAR2,
      prompt_     IN VARCHAR2,
      module_     IN VARCHAR2)
   IS
      stmt_     VARCHAR2(2000);
      err_text_ VARCHAR2(200);
   BEGIN

      stmt_  := 'CREATE OR REPLACE VIEW ' || view_name_ ||' AS
                        SELECT *
                        FROM   ' || table_name_ || ' t
                        WHERE EXISTS ( SELECT 1
                                       FROM   allowed_report a
                                       WHERE  a.result_key = t.result_key )
                  WITH read only';

      dbms_output.put_line (' Creating View ' || view_name_ );
      EXECUTE IMMEDIATE stmt_;
      dbms_output.put_line (' View Created ');
      stmt_ := 'COMMENT ON TABLE '||view_name_||' IS ''LU='||lu_||'^PROMPT='||prompt_||'^MODULE='||module_||'^''';
      dbms_output.put_line (stmt_);
      EXECUTE IMMEDIATE stmt_;
      dbms_output.put_line (' View Comment Created ');
   EXCEPTION
      WHEN OTHERS THEN
         err_text_ := substr(SQLERRM, 1, 200);
         dbms_output.put_line (' Following Error occured while creating view ' || view_name_);
         dbms_output.put_line (err_text_);
   END;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Create_RPV_View('SHPMNT_INFO_SERVICES_RPT','SHPMNT_INFO_SERVICES_RPV','Shipment','Shipment Info Services','SHPMNT');
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;              
END;
/

--*************shpmnt_info_services_rpt End***************

-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
------------- SECTION1 : Handling Upgrade from GET9 to GET10 RTM Ends Here --------------
-----------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------
------------- SECTION2.1 : Handling Upgrade from GET10 RTM to GET10 UPD6 Starts Here ----
------------- NOTE       : Support cdb files from GET10 RTM until UPD6 ------------------
-----------------------------------------------------------------------------------------

--*************delivery_note_tab Start***********************   

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_6');
PROMPT Adding columns movement_type, transport_doc_number and at_code to table delivery_note_tab
DECLARE
  table_name_ VARCHAR2(30) := 'DELIVERY_NOTE_TAB';
  column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      -- gelr:pt_movement_types, begin
      column_ := Database_SYS.Set_Column_Values('MOVEMENT_TYPE', 'VARCHAR2(30)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('TRANSPORT_DOC_NUMBER', 'VARCHAR2(50)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);  
      column_ := Database_SYS.Set_Column_Values('AT_CODE', 'VARCHAR2(200)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE); 
      -- gelr:pt_movement_types, end
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;            
END;      
/

--*************delivery_note_tab End***************************

-----------------------------------------------------------------------------------------

--*************delivery_note_hash_info_tab Start***************

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_7');
PROMPT Adding table delivery_note_hash_info_tab
DECLARE
   table_name_ VARCHAR2(30) := 'DELIVERY_NOTE_HASH_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'DELNOTE_NO', 'VARCHAR2(15)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'SERIES_ID', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ALT_DELNOTE_NO', 'VARCHAR2(50)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'HASH', 'VARCHAR2(200)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'HASH_CONTROL', 'VARCHAR2(70)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'INPUT_STRING', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'AT_DOC_CODE_ID', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;            
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_8');
PROMPT Create constaints on table delivery_note_hash_info_tab
DECLARE
   index_name_ VARCHAR2(30) := 'DELIVERY_NOTE_HASH_INFO_PK';
   table_name_ VARCHAR2(30) := 'DELIVERY_NOTE_HASH_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'DELNOTE_NO');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;            
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_9');
PROMPT Create new index on delivery_note_hash_info_tab
DECLARE
   index_name_ VARCHAR2(30) := 'DELIVERY_NOTE_HASH_INFO_RK';
   table_name_ VARCHAR2(30) := 'DELIVERY_NOTE_HASH_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;            
END;
/

--*************delivery_note_hash_info_tab End***************

----------------------------------------------------------------------------------------

--*************at_response_info_tab Start*************** 

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_10');
PROMPT Adding table at_response_info_tab
DECLARE
   table_name_ VARCHAR2(30) := 'AT_RESPONSE_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TRANSPORT_DOC_NUMBER', 'VARCHAR2(50)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'CONTRACT', 'VARCHAR2(5)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'DELNOTE_NO', 'VARCHAR2(15)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'AT_CODE', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ERROR_TEXT', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANSPORT_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CREATORS_REFERENCE', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CREATED_BY', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWSTATE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;            
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_11');
PROMPT Create constaints on table at_response_info_tab
DECLARE
   index_name_ VARCHAR2(30) := 'AT_RESPONSE_INFO_PK';
   table_name_ VARCHAR2(30) := 'AT_RESPONSE_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_ID');
      Database_SYS.Set_Table_Column(columns_, 'TRANSPORT_DOC_NUMBER');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;            
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_12');
PROMPT Create new index on at_response_info_tab
DECLARE
   index_name_ VARCHAR2(30) := 'AT_RESPONSE_INFO_RK';
   table_name_ VARCHAR2(30) := 'AT_RESPONSE_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;            
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_13');
PROMPT Updating column creators_reference of at_response_info_tab
DECLARE
   stmt_         VARCHAR2(32000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      IF (Database_SYS.Table_Exist('AT_RESPONSE_INFO_TAB')) THEN
         stmt_ := 'UPDATE AT_RESPONSE_INFO_TAB u
                     SET creators_reference = ''SHIPMENT_DEL_NOTE''
                     WHERE EXISTS (SELECT 1 FROM DELIVERY_NOTE_TAB t WHERE t.delnote_no = u.delnote_no AND t.shipment_id IS NOT NULL)';   
         EXECUTE IMMEDIATE stmt_;   
                 
         stmt_ := 'UPDATE AT_RESPONSE_INFO_TAB u
                     SET creators_reference = ''CUSTOMER_ORDER_DEL_NOTE''
                     WHERE EXISTS (SELECT 1 FROM DELIVERY_NOTE_TAB t WHERE t.delnote_no = u.delnote_no AND t.order_no IS NOT NULL)';
         EXECUTE IMMEDIATE stmt_;
   
         COMMIT;
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;            
END; 
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_14');
PROMPT Adding column manually_updated to at_response_info_tab.
DECLARE
   table_name_ VARCHAR2(30) := 'AT_RESPONSE_INFO_TAB';
   column_     Database_SYS.ColRec;
BEGIN   
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      column_ := Database_SYS.Set_Column_Values('MANUALLY_UPDATED', 'VARCHAR2(20)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;            
END;
/

--*************at_response_info_tab End***************

----------------------------------------------------------------------------------------

--*************shipment_tab Start*************

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_15');
PROMPT Adding column movement_type to table shipment_tab
DECLARE
  table_name_ VARCHAR2(30) := 'SHIPMENT_TAB';
  column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      -- gelr:pt_movement_types, begin
      column_ := Database_SYS.Set_Column_Values('MOVEMENT_TYPE', 'VARCHAR2(30)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);         
      -- gelr:pt_movement_types, end
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;            
END;      
/

--*************shipment_tab End*************

----------------------------------------------------------------------------------------

--*************shpmnt_info_services_rpt Start*************

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_16');
PROMPT adding columns ext_s3, ext_S4 and ext_S4 to shpmnt_info_services_rpt
DECLARE
   table_name_ VARCHAR2(30) := 'SHPMNT_INFO_SERVICES_RPT';
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      column_ := Database_SYS.Set_Column_Values('EXT_S3', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   
      column_ := Database_SYS.Set_Column_Values('EXT_S4', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   
      column_ := Database_SYS.Set_Column_Values('EXT_S5', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      
      column_ := Database_SYS.Set_Column_Values('EXT_S6', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      
      column_ := Database_SYS.Set_Column_Values('EXT_S7', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      
      column_ := Database_SYS.Set_Column_Values('EXT_S8', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      
      column_ := Database_SYS.Set_Column_Values('EXT_S9', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      
      column_ := Database_SYS.Set_Column_Values('EXT_S10', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;            
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_17');
PROMPT recreating report view shpmnt_info_services_rpv
DECLARE
   PROCEDURE Create_RPV_View(
      table_name_ IN VARCHAR2,
      view_name_  IN VARCHAR2,
      lu_         IN VARCHAR2,
      prompt_     IN VARCHAR2,
      module_     IN VARCHAR2)
   IS
      stmt_     VARCHAR2(2000);
      err_text_ VARCHAR2(200);
   BEGIN

      stmt_  := 'CREATE OR REPLACE VIEW ' || view_name_ ||' AS
                        SELECT *
                        FROM   ' || table_name_ || ' t
                        WHERE EXISTS ( SELECT 1
                                       FROM   allowed_report a
                                       WHERE  a.result_key = t.result_key )
                  WITH read only';

      dbms_output.put_line (' Creating View ' || view_name_ );
      EXECUTE IMMEDIATE stmt_;
      dbms_output.put_line (' View Created ');
      stmt_ := 'COMMENT ON TABLE '||view_name_||' IS ''LU='||lu_||'^PROMPT='||prompt_||'^MODULE='||module_||'^''';
      dbms_output.put_line (stmt_);
      EXECUTE IMMEDIATE stmt_;
      dbms_output.put_line (' View Comment Created ');
   EXCEPTION
      WHEN OTHERS THEN
         err_text_ := substr(SQLERRM, 1, 200);
         dbms_output.put_line (' Following Error occured while creating view ' || view_name_);
         dbms_output.put_line (err_text_);
   END;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Create_RPV_View('SHPMNT_INFO_SERVICES_RPT','SHPMNT_INFO_SERVICES_RPV','Shipment','Shipment Info Services','SHPMNT');
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;            
END;
/
--*************shpmnt_info_services_rpt End***************  

----------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_18');
PROMPT creating at_communication_seq
DECLARE
   sequence_name_ VARCHAR2(30) := 'AT_COMMUNICATION_SEQ';
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Create_Sequence(sequence_name_, 'INCREMENT BY 1 START WITH 1', TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;            
END;
/

----------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------------
------------- SECTION2.1 : Handling Upgrade from GET10 RTM to GET10 UPD6 Ends Here ------
-----------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------------
------------- SECTION2.2 : Handling Upgrade from GET10 UPD6 to GET10 UPD11 Starts Here --
------------- NOTE       : Support cdb files from GET10 UPD6 until UPD11                                                         -------
-----------------------------------------------------------------------------------------

--*************DELIVERY_NOTE_TAB Start*************

-- gelr:tr_edispatch_note, begin
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_19');
PROMPT Adding columns DRIVER, VEH_LICENSE_PLATE1, VEH_LICENSE_PLATE2, VEH_LICENSE_PLATE3 and, E_DISPATCH_NOTE_STATE to DELIVERY_NOTE_TAB

DECLARE
   columns_       Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);         
      Database_SYS.Set_Table_Column(columns_, 'DRIVER', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'VEH_LICENSE_PLATE1', 'VARCHAR2(8)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'VEH_LICENSE_PLATE2', 'VARCHAR2(8)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'VEH_LICENSE_PLATE3', 'VARCHAR2(8)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'E_DISPATCH_NOTE_STATE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'UUID', 'VARCHAR2(40)', 'Y');
      Database_SYS.Alter_Table('DELIVERY_NOTE_TAB', columns_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/
-- gelr:tr_edispatch_note, end

--*************DELIVERY_NOTE_TAB End*************

----------------------------------------------------------------------------------------

--*************SEND_E_DELIV_NOTE_HEADER_TAB Start*************

-- gelr:tr_edispatch_note, begin
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_20');
PROMPT Creating SEND_E_DELIV_NOTE_HEADER_TAB TABLE 
DECLARE
   table_name_ VARCHAR2(30) := 'SEND_E_DELIV_NOTE_HEADER_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'MESSAGE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'EXEC_TIME', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DELNOTE_NO', 'VARCHAR2(15)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ORDER_NO', 'VARCHAR2(12)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_ID', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ISSUE_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ACTUAL_DISPATCH_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'RECIPIENT_TYPE', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'RECIPIENT_ID', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'RECIPIENT_ASSOCIATION_NO', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'RECIPIENT_NAME', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'REC_DELIVERY_ADDRESS_ID', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'REC_DELIVERY_ADD_COUNTRY', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'REC_DELIVERY_ADD_CITY_NAME', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'REC_DELIVERY_ADD_STREET', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'REC_DELIVERY_ADD_NUMBER', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'REC_DELIVERY_ADD_COUNTY', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'REC_DELIVERY_ADD_ZIP_CODE', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SENDER_TYPE', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SENDER_ID', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SENDER_ASSOCIATION_NO', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SENDER_NAME', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SND_DELIVERY_ADDRESS_ID', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SND_DELIVERY_ADD_COUNTRY', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SND_DELIVERY_ADD_CITY_NAME', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SND_DELIVERY_ADD_STREET', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SND_DELIVERY_ADD_NUMBER', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SND_DELIVERY_ADD_COUNTY', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SND_DELIVERY_ADD_ZIP_CODE', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SND_DOCUMENT_ADDRESS_ID', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SND_DOCUMENT_ADD_COUNTRY', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SND_DOCUMENT_ADD_CITY_NAME', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SND_DOCUMENT_ADD_STREET', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SND_DOCUMENT_ADD_NUMBER', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SND_DOCUMENT_ADD_COUNTY', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SND_DOCUMENT_ADD_ZIP_CODE', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'VEH_LICENSE_PLATE1', 'VARCHAR2(8)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'VEH_LICENSE_PLATE2', 'VARCHAR2(8)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'VEH_LICENSE_PLATE3', 'VARCHAR2(8)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'FORWARDER_TYPE', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'FORWARDER_ID', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'FORWARDER_ASSOCIATION_NO', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'FORWARDER_NAME', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DRIVER_TYPE', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DRIVER_ID', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DRIVER_ASSOCIATION_NO', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DRIVER_NAME', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DRIVER_FIRST_NAME', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DRIVER_LAST_NAME', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'UUID', 'VARCHAR2(40)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ALT_DELNOTE_NO', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DEL_NOTE_VERIFIED', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_21');
PROMPT Creating SEND_E_DELIV_NOTE_HEADER_PK INDEX
DECLARE
   index_name_ VARCHAR2(30) := 'SEND_E_DELIV_NOTE_HEADER_PK';
   table_name_ VARCHAR2(30) := 'SEND_E_DELIV_NOTE_HEADER_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'MESSAGE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_22');
PROMPT Creating SEND_E_DELIV_NOTE_HEADER_RK INDEX
DECLARE
   index_name_ VARCHAR2(30) := 'SEND_E_DELIV_NOTE_HEADER_RK';
   table_name_ VARCHAR2(30) := 'SEND_E_DELIV_NOTE_HEADER_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/
-- gelr:tr_edispatch_note, end

--*************SEND_E_DELIV_NOTE_HEADER_TAB End*************

----------------------------------------------------------------------------------------

--*************SEND_EDELIVNOTE_MESSAGE_ID_SEQ Start*************

-- gelr:tr_edispatch_note, begin
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_23');
PROMPT Creating SEND_EDELIVNOTE_MESSAGE_ID_SEQ sequence
DECLARE
   sequence_name_ VARCHAR2(30) := 'SEND_EDELIVNOTE_MESSAGE_ID_SEQ';
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Create_Sequence(sequence_name_, 'INCREMENT BY 1 START WITH 1 NOCACHE', TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/
-- gelr:tr_edispatch_note, end

--*************SEND_EDELIVNOTE_MESSAGE_ID_SEQ End*************

----------------------------------------------------------------------------------------

--*************SEND_E_DELIV_NOTE_LINE_TAB Start*************

-- gelr:tr_edispatch_note, begin
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_24');
PROMPT Creating SEND_E_DELIV_NOTE_LINE_TAB TABLE 
DECLARE
   table_name_ VARCHAR2(30) := 'SEND_E_DELIV_NOTE_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'MESSAGE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ITEM_SEQ', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'UNIT_CODE', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'QUANTITY', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ITEM_ID', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ITEM_DESCRIPTION', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_25');
PROMPT Creating SEND_E_DELIV_NOTE_LINE_PK INDEX
DECLARE
   index_name_ VARCHAR2(30) := 'SEND_E_DELIV_NOTE_LINE_PK';
   table_name_ VARCHAR2(30) := 'SEND_E_DELIV_NOTE_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'MESSAGE_ID');
      Database_SYS.Set_Table_Column(columns_, 'ITEM_SEQ');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_26');
PROMPT Creating SEND_E_DELIV_NOTE_LINE_RK INDEX
DECLARE
   index_name_ VARCHAR2(30) := 'SEND_E_DELIV_NOTE_LINE_RK';
   table_name_ VARCHAR2(30) := 'SEND_E_DELIV_NOTE_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;END;
/
-- gelr:tr_edispatch_note, end

-----------------------------------------------------------------------------------------
------------- SECTION2.2 : Handling Upgrade from GET10 UPD6 to GET10 UPD11 Ends Here ----
-----------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------
------------- SECTION2.3 : Handling Upgrade from GET10 UPD11 to GET10 UPD13 Starts Here -
------------- NOTE     : Support cdb files from GET10 UPD11 until UPD13                                                         -------
-----------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------------
------------- SECTION2.3 : Handling Upgrade from GET10 UPD11 to GET10 UPD13 Ends Here ---
-----------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------
------------- SECTION2.4 : Handling Upgrade from GET10 UPD13 to GET10 UPD14 Starts Here -
------------- NOTE     : Support cdb files from GET10 UPD13 until UPD14 -----------------
-----------------------------------------------------------------------------------------

--*************shpmnt_info_services_rpt Start***************

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_27');
PROMPT Adding column EXT_X11 to SHPMNT_INFO_SERVICES_RPT

DECLARE
   column_       Database_SYS.ColRec;
   table_name_   VARCHAR2(30) := 'SHPMNT_INFO_SERVICES_RPT';

   -- Procedure to create RPV Views   
   PROCEDURE Create_RPV_View(table_name_ IN VARCHAR2,
                             view_name_  IN VARCHAR2,
                             lu_         IN VARCHAR2,
                             prompt_     IN VARCHAR2,
                             module_     IN VARCHAR2)
   IS
      stmt_      VARCHAR2(2000);
      err_text_  VARCHAR2(200);
   BEGIN

      stmt_ := 'CREATE OR REPLACE VIEW ' || view_name_ ||' AS
                SELECT *
                FROM ' || table_name_ || ' T
                WHERE EXISTS (SELECT 1
                             FROM ALLOWED_REPORT A
                             WHERE A.RESULT_KEY = T.RESULT_KEY )
                WITH read only';

      EXECUTE IMMEDIATE stmt_;
      stmt_ := 'COMMENT ON TABLE '||view_name_||' IS ''LU='||lu_||'^PROMPT='||prompt_||'^MODULE='||module_||'^''';
      EXECUTE IMMEDIATE stmt_;

   EXCEPTION
      WHEN OTHERS THEN
         err_text_ := substr(SQLERRM, 1, 200);
         dbms_output.put_line (err_text_);
   END;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column(column_);
      -- gelr:atcud_code, bug 160703, begin
      column_ := Database_SYS.Set_Column_Values('EXT_S11', 'VARCHAR2(100)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      -- gelr:atcud_code, bug 160703, end

      Create_RPV_View('SHPMNT_INFO_SERVICES_RPT', 'SHPMNT_INFO_SERVICES_RPV','Shipment','Shipment Info Services','SHPMNT');
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/
--*************shpmnt_info_services_rpt End***************

-----------------------------------------------------------------------------------------
------------- SECTION2.4 : Handling Upgrade from GET10 UPD13 to GET10 UPD14 Ends Here ---
-----------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------
------------- SECTION3.1: Handling 21R1 related GET DB Changes Starts Here --------------
-----------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------------
------------- SECTION3.1: Handling 21R1 related GET DB Changes Ends Here ----------------
-----------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------------
------------- SECTION3.2: Handling 21R1 related GET DB Changes Starts Here --------------
-----------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------------
------------- SECTION3.2: Handling 21R2 related GET DB Changes Ends Here ----------------
-----------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------
------------- SECTION3.3: Handling 22R1 related GET DB Changes Starts Here --------------
-----------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------
------------- SECTION3.3: Handling 22R1 related GET DB Changes Ends Here ----------------
-----------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------
------------- SECTION3.4: Handling 22R2 related GET DB Changes Starts Here --------------
-----------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------
------------- SECTION3.4: Handling 22R2 related GET DB Changes Ends Here ----------------
-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------

SET SERVEROUTPUT OFF

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Timestamp_28');
PROMPT Upgrade statements in file Shpmnt GET_TO_CLOUD.upg end here
-- Nothing is allowed to be placed below here

UNDEFINE MODULE
UNDEFINE GET9VERSION
UNDEFINE GET10VERSION

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','GET_TO_CLOUD.upg','Done');


