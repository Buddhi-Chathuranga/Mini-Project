---------------------------------------------------------------------------------------------
--  Module : SHPMNT
--
--  Purpose: Upgrade database objects for IFS/Shipment
--           from version 15.0.0 to 21.1.0
--
--  File   : 2110.upg
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  ------------------------------------------------------------------------
--  191122   AsHelk  Created
--  ------   ------  ------------------------------------------------------------------------
--  201113  Aabalk   SCZ-12088, Added mandatory VARCHAR2 column KEEP_MANUAL_WEIGHT_VOL to SHIPMENT_TYPE_TAB.
--  201026  AsZelk   SC2020R1-10877, Changed TRANSPORT_DATE data type DATE to TIMESTAMP(6).
--  201016  RasDlk   SC2020R1-10749, Changed the data type of TRANSPORT_DATE in DELIVERY_NOTE_TAB into DATE.
--  200914  AsZelk   SC2020R1-9432, Merged CDB files into UPG.
--  200401  AsZelk   SC2020R1-1914, Merged CDB files into UPG.
--  200227  Wasalk  GESPRING20-3733, Added columns to SHPMNT_INFO_SERVICES_RPT and reset SHPMNT_INFO_SERVICES_RPV.
--  200205  Dihelk  GESPRING20-1791, Delivery note printing implementaion in Delivery note Analysis windows and Shipment.
---------------------------------------------------------------------------------------------

SET SERVEROUTPUT ON
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_1');
PROMPT START upgrading WITH 2110.upg

---------------------------------------------------------------------------------------------
------------------------------ Instructions for upg files -----------------------------------
---------------------------------------------------------------------------------------------
--
--  Main section should contain all upgrade operations.
--  Next section should contain removal of obsolete objects (any removal of data inside upg is prohibited!).
--  Removal of backup tables and obsolete columns should be added to <component>Cl.sql script!
--
--  If possible, everything regarding one table should be placed in one section.
--  If this is not possible, a proper comment about the reason should be added.
--
--  Each section should be started with a "-----" line and a empty line.
--  This section should then start with a line like: "-- ***** Example_Tab Start *****"
--  and end with a line like:                       "-- ***** Example_Tab End *****"
--
--  Don't forget UPPER/lower case !
--
--  Every part inside the section should start with a "PROMPT" line explaining what is done by the block.
--
--  If the PL/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.
--
--  Remember ordinary coding standard rules !
--
--  Don't drop any Table/Column !
--
--  Don't forget performance when updating large table !
--
--  No unnecessary blank lines or comments !
--
--  If possible, use pure SQL commands
--
--  If possible, try to group several updates together in one statement.
--
--  Timestamps will be added automatically at the end of the project.
--
--  For more information refer to the "Upgrade Script Standards" and the "Performance" technical documents.
--
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES -----------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
--------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ------------------
---------------------------------------------------------------------------------------------

-- ***** DELIVERY_NOTE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_2');
PROMPT Adding columns to DELIVERY_NOTE_TAB
DECLARE
   table_name_    VARCHAR2(30) := 'DELIVERY_NOTE_TAB';
   columns_    Database_SYS.ColumnTabType;  
BEGIN   

   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'DEL_NOTE_PRINT_DATE', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'TRANSPORT_DATE', 'TIMESTAMP(6)', 'Y');
   -- gelr: warehouse_journal, begin
   Database_SYS.Set_Table_Column(columns_, 'DELIVERY_REASON_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'QTY_EUR_PALLETS', 'NUMBER', 'Y');
   -- gelr: warehouse_journal, end
   Database_SYS.Alter_Table(table_name_, columns_, TRUE);
END;                                                                       
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_3');
PROMPT Increasing the length OF RECEIVER_ID upto 50 characters IN DELIVERY_NOTE_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'DELIVERY_NOTE_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Column_Exist('DELIVERY_NOTE_TAB', 'RECEIVER_ID')) THEN    
      column_ := Database_SYS.Set_Column_Values('RECEIVER_ID', 'VARCHAR2(50)', 'N');
      Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   END IF;
END;
/
-- ***** DELIVERY_NOTE_TAB End *****

-- ***** SHPMNT_INFO_SERVICES_RPT Begin *****
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_4');
PROMPT Adding columns to SHPMNT_INFO_SERVICES_RPT
DECLARE
   table_name_    VARCHAR2(30) := 'SHPMNT_INFO_SERVICES_RPT';
   columns_    Database_SYS.ColumnTabType;  
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'S124', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S119', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S120', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S121', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S122', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S123', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE);
END;                                                                       
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_5');
PROMPT Increasing THE length OF THE COLUMN S105 IN SHPMNT_INFO_SERVICES_RPT
DECLARE
   column_       Database_SYS.ColRec;
   table_name_   VARCHAR2(30) := 'SHPMNT_INFO_SERVICES_RPT';
BEGIN   
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('S105', 'VARCHAR2(4000)');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
END;                                                                       
/
-- ***** SHPMNT_INFO_SERVICES_RPT End *****
  
-- ***** SHPMNT_INFO_SERVICES_RPV Begin ***** 
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_6');
PROMPT Recreate view SHPMNT_INFO_SERVICES_RPV

BEGIN
      DECLARE
         column_       Database_SYS.ColRec;
         table_name_   VARCHAR2(30) := 'SHPMNT_INFO_SERVICES_RPT';

         -- Procedure to create RPV Views   
         PROCEDURE Create_RPV_View(table_name_ IN VARCHAR2,
                                   view_name_  IN VARCHAR2,
                                   lu_         IN VARCHAR2,
                                   prompt_     IN VARCHAR2,
                                   module_     IN VARCHAR2)
         IS
            stmt_      VARCHAR2(2000);
            err_text_  VARCHAR2(200);
         BEGIN

            stmt_ := 'CREATE OR REPLACE VIEW ' || view_name_ ||' AS
                      SELECT *
                      FROM ' || table_name_ || ' T
                      WHERE EXISTS (SELECT 1
                                   FROM ALLOWED_REPORT A
                                   WHERE A.RESULT_KEY = T.RESULT_KEY )
                      WITH read only';
            
            EXECUTE IMMEDIATE stmt_;
            stmt_ := 'COMMENT ON TABLE '||view_name_||' IS ''LU='||lu_||'^PROMPT='||prompt_||'^MODULE='||module_||'^''';
            EXECUTE IMMEDIATE stmt_;

         EXCEPTION
            WHEN OTHERS THEN
               err_text_ := substr(SQLERRM, 1, 200);
               dbms_output.put_line (err_text_);
         END;
      BEGIN
        Create_RPV_View('SHPMNT_INFO_SERVICES_RPT', 'SHPMNT_INFO_SERVICES_RPV','Shipment','Shipment Info Services','SHPMNT');
      END;      
      COMMIT;
END;
/
-- ***** SHPMNT_INFO_SERVICES_RPV End *****

-- ***** SHIPMENT_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_7');
PROMPT Modify SENDER_ADDRESS2 column length from VARCHAR2(35) to VARCHAR2(100) in SHIPMENT_TAB.
DECLARE 
   column_ Database_SYS.ColRec;
BEGIN 
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('SENDER_ADDRESS2', 'VARCHAR2(100)', 'Y');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'M', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_8');
PROMPT Adding COLUMNS SENDER_TYPE and SENDER_ID into THE TABLE SHIPMENT_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'SHIPMENT_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SENDER_TYPE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SENDER_ID',   'VARCHAR2(50)', 'Y');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_9');
PROMPT Updating THE COLUMNS SENDER_TYPE and SENDER_ID with default values.
BEGIN
   UPDATE shipment_tab
   SET sender_type = 'SITE', sender_id = contract
   WHERE sender_type IS NULL AND sender_id IS NULL;
   COMMIT;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_10');
PROMPT making the columns SENDER_TYPE and SENDER_ID as mandatory IN SHIPMENT_TAB. 
DECLARE
   column_ Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('SENDER_TYPE', 'VARCHAR2(20)', 'N');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'M', column_, TRUE);
   
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('SENDER_ID', 'VARCHAR2(50)', 'N');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'M', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_11');
PROMPT Increasing the length OF RECEIVER_ID upto 50 characters.
DECLARE
   table_name_ VARCHAR2(30) := 'SHIPMENT_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Column_Exist('SHIPMENT_TAB', 'RECEIVER_ID')) THEN    
      column_ := Database_SYS.Set_Column_Values('RECEIVER_ID', 'VARCHAR2(50)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_12');
PROMPT UPDATE receiver_type TO REMOTE_WAREHOUSE IN SHIPMENT_TAB.
BEGIN
   UPDATE shipment_tab
   SET receiver_type = 'REMOTE_WAREHOUSE'
   WHERE receiver_type = 'WAREHOUSE';
   COMMIT;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_13');
PROMPT Modify length to VARCHAR2(100) in column RECEIVER_REFERENCE.
DECLARE 
   column_ Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('RECEIVER_REFERENCE', 'VARCHAR2(100)');
   Database_SYS.Alter_Table_Column('SHIPMENT_TAB', 'M', column_, TRUE);
END;
/
-- ***** SHIPMENT_TAB End *****

-- ***** RECEIVER_FRGHT_PAYER_FWDR_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_14');
PROMPT Increasing the length OF RECEIVER_ID upto 50 characters in RECEIVER_FRGHT_PAYER_FWDR_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'RECEIVER_FRGHT_PAYER_FWDR_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Column_Exist('RECEIVER_FRGHT_PAYER_FWDR_TAB', 'RECEIVER_ID')) THEN    
      column_ := Database_SYS.Set_Column_Values('RECEIVER_ID', 'VARCHAR2(50)', 'N');
      Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   END IF;
END;
/
-- ***** RECEIVER_FRGHT_PAYER_FWDR_TAB End *****

-- ***** SHIPMENT_RESERV_HANDL_UNIT_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_15');
PROMPT creating INDEX SHIPMENT_RESERV_HANDL_UNIT_IX1 ON SHIPMENT_RESERV_HANDL_UNIT_TAB.
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'SHIPMENT_RESERV_HANDL_UNIT_TAB';
   index_name_ VARCHAR2(30) := 'SHIPMENT_RESERV_HANDL_UNIT_IX1';
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column (columns_, 'SHIPMENT_ID');   
   Database_SYS.Set_Table_Column (columns_, 'HANDLING_UNIT_ID');   
   Database_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/
-- ***** SHIPMENT_RESERV_HANDL_UNIT_TAB End *****

-- ***** SHIPMENT_TYPE_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_16');
PROMPT ADD NOT NULL COLUMN SHIPMENT_CREATION_SHIP_ORD TO THE TABLE SHIPMENT_TYPE_TAB.
DECLARE
   column_ Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('SHIPMENT_CREATION_SHIP_ORD', 'VARCHAR2(20)', 'N', '''NO_AUTOMATIC''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column('SHIPMENT_TYPE_TAB', 'A', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_17');
PROMPT Adding mandatory VARCHAR2 column KEEP_MANUAL_WEIGHT_VOL to SHIPMENT_TYPE_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'SHIPMENT_TYPE_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('KEEP_MANUAL_WEIGHT_VOL', 'VARCHAR2(5)', 'N', '''FALSE''', NULL, 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/
-- ***** SHIPMENT_TYPE_TAB End *****

-- ***** SHIPMENT_LINE_HANDL_UNIT_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_18');
PROMPT Adding nullable NUMBER column MANUAL_NET_WEIGHT to SHIPMENT_LINE_HANDL_UNIT_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'SHIPMENT_LINE_HANDL_UNIT_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('MANUAL_NET_WEIGHT', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/
-- ***** SHIPMENT_LINE_HANDL_UNIT_TAB End *****

---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES/COLUMNS -----------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_19');
PROMPT Remove obsolete packages.
BEGIN
   Database_SYS.Remove_Package('TRANSPORT_PACKAGE_LABEL_RPI');   
   Database_SYS.Remove_Package('SHIPMENT_ORDER_LINE_RPI');
END;
/

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_20');
PROMPT Remove obsolete views.
BEGIN
   Database_SYS.Remove_View('TRANSPORT_PACKAGE_LABEL_REP');
   Database_SYS.Remove_View('SHIPMENT_ORDER_LINE_REP');
END;
/

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE INDEXES/SEQUENCES ------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Timestamp_21');
PROMPT Upgrade statements IN FILE 2110.upg ends here.

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','2110.upg','Done');
