-----------------------------------------------------------------------------
--
--  Fragment:     ReturnPartsFromShipmentInventoryAssistant 
--  Component:    SHPMNT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date       Sign     History
--  ------     ------   ---------------------------------------------------------
-- 2022-06-23  Aabalk   SCDEV-9149, Modified CRUD_Upload___ and included demand_code_db in shipmnt_inv_lines cursor to allow location type filters for shipment order with purchase receipt demand code.
-- 2022-06-07  Avwilk   SCDEV-8633, Replaced 'Get_Earliest_Transaction_Id' and 'Get_Location_No' with new method called 'Get_Earliest_Trans_Location_No'.
-- 2022-05-02  Avwilk   SCDEV-8633, Added Get_And_Set_Original_Pick_Location___ and added source_ref_type to CRUD_Upload___.
-- 2022-04-25  Avwilk   SCDEV-8625, Added Get_Source_Ref_Type___.
-- 2022-04-18  Avwilk   SCDEV-8617, Implemented Return_Selected_Parts_From_Shpmnt_Invent___.
-- 2022-03-30  Avwilk   SCDEV-8601, Created with Overriding CRUD_Upload___, added Return_Selected_Parts_From_Shpmnt_Invent___.
-----------------------------------------------------------------------------

layer Core;
@Override
PROCEDURE CRUD_Upload___ (
   objkey_                                    IN VARCHAR2,
   selection_var##                            IN CLOB,
   return_multi_shpmnt_invnt_header_virtual## IN VARCHAR2)
IS
   records_                  json_array_t;
   line_rec_                 Return_Inventory_Parts_Line_Virtual_Rec;
   parent_rec_               Return_Multi_Shpmnt_Invnt_Header_Virtual_Rec;
   parent_key_               Return_Multi_Shpmnt_Invnt_Header_Virtual_Key;
   current_selection_        VARCHAR2(32000);
   
   CURSOR shipmnt_inv_lines(source_ref1_         VARCHAR2, 
                            source_ref2_         VARCHAR2, 
                            source_ref3_         VARCHAR2, 
                            source_ref4_         VARCHAR2, 
                            source_ref_type_db_  VARCHAR2, 
                            shipment_id_         NUMBER, 
                            contract_            VARCHAR2, 
                            configuration_id_    VARCHAR2, 
                            part_no_             VARCHAR2, 
                            location_no_         VARCHAR2, 
                            handling_unit_id_    VARCHAR2, 
                            lot_batch_no_        VARCHAR2, 
                            serial_no_           VARCHAR2, 
                            eng_chg_level_       VARCHAR2, 
                            waiv_dev_rej_no_     VARCHAR2, 
                            pick_list_no_        VARCHAR2, 
                            activity_seq_        NUMBER ) IS
      SELECT source_part_no,source_part_description,part_no,part_description,shipment_id,shipment_line_no,
             contract,sender_id,sender_name,sender_type,receiver_id,receiver_name,receiver_type,demand_code_db,
             location_no,warehouse,bay_no,row_no,tier_no,bin_no,lot_batch_no,serial_no,eng_chg_level,
             waiv_dev_rej_no,configuration_id,activity_seq,handling_unit_id,handling_unit_type_id,
             sscc,alt_handling_unit_label_id,pick_list_no,qty_picked,catch_qty 
      FROM  handle_source_in_ship_inv_ext 
      WHERE source_ref1 = source_ref1_
      AND   source_ref2 = source_ref2_
      AND   (source_ref3 IS NULL OR source_ref3 = source_ref3_)
      AND   (source_ref4 IS NULL OR source_ref4 = source_ref4_)
      AND   source_ref_type_db = source_ref_type_db_
      AND   shipment_id = shipment_id_
      AND   contract = contract_
      AND   configuration_id = configuration_id_
      AND   part_no = part_no_
      AND   location_no = location_no_
      AND   handling_unit_id = handling_unit_id_
      AND   lot_batch_no = lot_batch_no_
      AND   serial_no = serial_no_
      AND   eng_chg_level = eng_chg_level_
      AND   waiv_dev_rej_no = waiv_dev_rej_no_
      AND   pick_list_no = pick_list_no_
      AND   activity_seq = activity_seq_;
   
BEGIN
   super(objkey_,selection_var##,return_multi_shpmnt_invnt_header_virtual##);
   parent_key_.objkey   := objkey_;   
   parent_rec_          := Get_Record___(parent_key_);
   records_ := json_array_t.parse(parent_rec_.selection_var);
   
   FOR i_ IN 0 .. records_.get_size - 1 LOOP 
      line_rec_.parent_objkey := parent_key_.objkey;
      line_rec_.objkey := sys_guid();
      current_selection_ := records_.get_string(i_);
      
      line_rec_.source_ref1        := Client_SYS.Get_Key_Reference_Value(current_selection_, 'SOURCE_REF1');
      line_rec_.source_ref2        := Client_SYS.Get_Key_Reference_Value(current_selection_, 'SOURCE_REF2');
      line_rec_.source_ref3        := Client_SYS.Get_Key_Reference_Value(current_selection_, 'SOURCE_REF3');
      line_rec_.source_ref4        := Client_SYS.Get_Key_Reference_Value(current_selection_, 'SOURCE_REF4');
      line_rec_.source_ref_type_db := Client_SYS.Get_Key_Reference_Value(current_selection_, 'SOURCE_REF_TYPE_DB');
      line_rec_.source_ref_type    := Client_SYS.Get_Key_Reference_Value(current_selection_, 'SOURCE_REF_TYPE_DB');
      line_rec_.shipment_id        := Client_SYS.Get_Key_Reference_Value(current_selection_, 'SHIPMENT_ID');
      line_rec_.contract           := Client_SYS.Get_Key_Reference_Value(current_selection_, 'CONTRACT');
      line_rec_.configuration_id   := Client_SYS.Get_Key_Reference_Value(current_selection_, 'CONFIGURATION_ID');
      line_rec_.part_no            := Client_SYS.Get_Key_Reference_Value(current_selection_, 'PART_NO');
      line_rec_.location_no        := Client_SYS.Get_Key_Reference_Value(current_selection_, 'LOCATION_NO');
      line_rec_.handling_unit_id   := Client_SYS.Get_Key_Reference_Value(current_selection_, 'HANDLING_UNIT_ID');
      line_rec_.lot_batch_no       := Client_SYS.Get_Key_Reference_Value(current_selection_, 'LOT_BATCH_NO');
      line_rec_.serial_no          := Client_SYS.Get_Key_Reference_Value(current_selection_, 'SERIAL_NO');
      line_rec_.eng_chg_level      := Client_SYS.Get_Key_Reference_Value(current_selection_, 'ENG_CHG_LEVEL');
      line_rec_.waiv_dev_rej_no    := Client_SYS.Get_Key_Reference_Value(current_selection_, 'WAIV_DEV_REJ_NO');    
      line_rec_.pick_list_no       := Client_SYS.Get_Key_Reference_Value(current_selection_, 'PICK_LIST_NO');
      line_rec_.activity_seq       := Client_SYS.Get_Key_Reference_Value(current_selection_, 'ACTIVITY_SEQ');
      
      OPEN shipmnt_inv_lines(line_rec_.source_ref1, line_rec_.source_ref2, line_rec_.source_ref3, line_rec_.source_ref4,line_rec_.source_ref_type_db,
                             line_rec_.shipment_id,line_rec_.contract,line_rec_.configuration_id,line_rec_.part_no,line_rec_.location_no,line_rec_.handling_unit_id,line_rec_.lot_batch_no,line_rec_.serial_no,
                             line_rec_.eng_chg_level,line_rec_.waiv_dev_rej_no,line_rec_.pick_list_no,line_rec_.activity_seq);
      FETCH shipmnt_inv_lines INTO line_rec_.source_part_no,line_rec_.source_part_description,line_rec_.part_no,line_rec_.part_description,line_rec_.shipment_id,
                                   line_rec_.shipment_line_no,line_rec_.contract,line_rec_.sender_id,line_rec_.sender_name,line_rec_.sender_type,
                                   line_rec_.receiver_id,line_rec_.receiver_name,line_rec_.receiver_type,line_rec_.demand_code,line_rec_.location_no,line_rec_.warehouse,
                                   line_rec_.bay_no,line_rec_.row_no,line_rec_.tier_no,line_rec_.bin_no,line_rec_.lot_batch_no,line_rec_.serial_no,
                                   line_rec_.eng_chg_level,line_rec_.waiv_dev_rej_no,line_rec_.configuration_id,line_rec_.activity_seq,line_rec_.handling_unit_id,
                                   line_rec_.handling_unit_type_id,line_rec_.sscc,line_rec_.alt_handling_unit_label_id,line_rec_.pick_list_no,line_rec_.qty_picked,line_rec_.catch_qty_to_return;
      CLOSE shipmnt_inv_lines;
      
      line_rec_.return_qty            := line_rec_.qty_picked;
      line_rec_.catch_qty_to_return   := line_rec_.catch_qty_picked;
      line_rec_.catch_qty_onhand      := Inventory_Part_In_Stock_API.Get_Catch_Qty_Onhand(line_rec_.contract,line_rec_.part_no,line_rec_.configuration_id,
                                                                                          line_rec_.location_no,line_rec_.lot_batch_no,line_rec_.serial_no,line_rec_.eng_chg_level,
                                                                                          line_rec_.waiv_dev_rej_no,line_rec_.activity_seq,line_rec_.handling_unit_id);
      CRUD_Create___(line_rec_);
   END LOOP;
END CRUD_Upload___;

PROCEDURE Return_Selected_Parts_From_Shpmnt_Invent___ (
   parent_objkey_  IN  VARCHAR2,
	info$_          OUT VARCHAR2)
IS
   new_line_key_           Return_Inventory_Parts_Line_Virtual_Key;
   new_line_rec_           Return_Inventory_Parts_Line_Virtual_Rec;
   info_message_           VARCHAR2(32000);
  
   CURSOR get_shipment_inventory_line IS 
      SELECT  objkey
      FROM    ${PROJECTION}_RETURN_INVENTORY_PARTS_LINE_VIRTUAL_VRT
      WHERE   parent_objkey = parent_objkey_;
   
BEGIN
   FOR get_shipment_inventory_line_ IN get_shipment_inventory_line LOOP
      new_line_key_.objkey := get_shipment_inventory_line_.objkey;
      new_line_rec_  := Get_Record___(new_line_key_);
      
      IF (new_line_rec_.return_qty > 0) THEN
         Handle_Ship_Invent_Utility_API.Return_From_Ship_Inv__(info_               => info_message_,
                                                               source_ref1_        => new_line_rec_.source_ref1,
                                                               source_ref2_        => new_line_rec_.source_ref2,
                                                               source_ref3_        => new_line_rec_.source_ref3,
                                                               source_ref4_        => new_line_rec_.source_ref4,
                                                               source_ref_type_db_ => new_line_rec_.source_ref_type_db,
                                                               from_contract_      => new_line_rec_.contract,
                                                               part_no_            => new_line_rec_.part_no, 
                                                               from_location_no_   => new_line_rec_.location_no,
                                                               lot_batch_no_       => new_line_rec_.lot_batch_no, 
                                                               serial_no_          => new_line_rec_.serial_no, 
                                                               eng_chg_level_      => new_line_rec_.eng_chg_level, 
                                                               waiv_dev_rej_no_    => new_line_rec_.waiv_dev_rej_no, 
                                                               pick_list_no_       => new_line_rec_.pick_list_no,
                                                               activity_seq_       => new_line_rec_.activity_seq,
                                                               handling_unit_id_   => Client_SYS.Attr_Value_To_Number(new_line_rec_.handling_unit_id), 
                                                               to_contract_        => new_line_rec_.contract,
                                                               to_location_no_     => new_line_rec_.to_location_no,
                                                               qty_returned_       => new_line_rec_.return_qty,
                                                               catch_qty_returned_ => new_line_rec_.catch_qty_to_return,
                                                               shipment_id_        => Client_SYS.Attr_Value_To_Number(new_line_rec_.shipment_id),
                                                               move_comment_       => new_line_rec_.note);
         info$_ := info$_ || info_message_;
      END IF;
   END LOOP;
END Return_Selected_Parts_From_Shpmnt_Invent___;

FUNCTION Get_Selected_Record_Details___ (
   selection_ IN CLOB) RETURN Selected_Record_Details_Structure_Rec
IS
   records_                json_array_t := json_array_t.parse(selection_);
   current_selection_      VARCHAR2(32000);
   rec_                    Selected_Record_Details_Structure_Rec;
BEGIN
   -- fetch the first record only. Because  we have added a client validation for enabling the 'changeLocation' command.According to that
   -- validation, in the selected records we need to only fetch one type of SourceRefType.
   IF records_.get_size > 0 THEN
      current_selection_           := records_.get_string(0);
      rec_.source_ref_type_db      := Client_SYS.Get_Key_Reference_Value(current_selection_, 'SOURCE_REF_TYPE_DB');
      rec_.demand_code             := Client_SYS.Get_Key_Reference_Value(current_selection_, 'DEMAND_CODE');
      rec_.contract                := Client_SYS.Get_Key_Reference_Value(current_selection_, 'SITE');
   END IF;
   RETURN rec_;
END Get_Selected_Record_Details___;

PROCEDURE Get_And_Set_Original_Pick_Location___ (
   selection_ IN  VARCHAR2)
IS
   child_key_                        Return_Inventory_Parts_Line_Virtual_Key;
   new_                              Return_Inventory_Parts_Line_Virtual_Rec;
   old_                              Return_Inventory_Parts_Line_Virtual_Rec;
BEGIN   
   FOR rec_ IN (SELECT regexp_substr(selection_ ,'[^;]+', 1, LEVEL) AS rec_ FROM dual CONNECT BY regexp_substr(selection_, '[^;]+', 1, LEVEL) IS NOT NULL) LOOP
      child_key_.objkey := rec_.rec_;
      old_              := Get_Record___(child_key_);
      new_              := old_;
      
      new_.to_location_no  := Inventory_Transaction_Hist_API.Get_Earliest_Trans_Location_No(old_.source_ref1,
                                                                                            old_.source_ref2,
                                                                                            old_.source_ref3,
                                                                                            old_.source_ref4,
                                                                                            old_.shipment_id,
                                                                                            Logistics_Source_Ref_Type_API.Get_Order_Type_Db(old_.source_ref_type_db),
                                                                                            'PICK-OUT');
      IF (new_.to_location_no IS NOT NULL) THEN  
         CRUD_Update___(old_, new_);
      END IF;
   END LOOP;
END Get_And_Set_Original_Pick_Location___;
