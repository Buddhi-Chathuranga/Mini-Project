-----------------------------------------------------------------------------
--
--  Logical unit: ShipmentHandlingUtility
--
--  File:         ShipmentBillOfLading.rdf
--
--  Date    Sign    History
--  ------  ------  -----------------------------------------------------------
--  200121  MeAblk  SCSPRING20-271, Added sender_type, sender_id, sender_description, receiver_type, receiver_id, receiver_description into report xml.
--  190924  BudKlk  Bug 148995(SCZ-5793), Modified the view SHIPMENT_BILL_OF_LADING_REP to resize the variable consignee_reference.
--  180124  NiLalk  Bug 139922, Modified cursor get_handling_units from not retreiving rows which has parent handling units 
--  171127  MaRalk  STRSC-14047, Introduced new block HAND_UNIT_TYPE_DOC_TEXT under STRUCTURE_NODE. 
--  171127          Modified method Shipment_Report_Bill_Of_Lading accordingly. 
--  170915  MaRalk  STRSC-12000, Modified method Shipment_Report_Bill_Of_Lading to include freight payer information
--  170915          in the header level.
--  170127  Chfose  LIM-10117, Use new view SHPMNT_HANDL_UNIT_WITH_HISTORY to include Handling Unit History when Shipment is delivered.
--  160615  reanpl  STRLOC-481, Added handling of new address attributes
--  160323  MaIklk  LIM-4552, Changed report table name to SHPMNT_INFO_SERVICES_RPT.
--  160307  MaIklk  LIM-4664, Made the changes to handle static calls to order module.
--  160203  MaRalk  LIM-6114, Modified method Shipment_Report_Bill_Of_Lading to reflect the change of the column name 
--  160203          ship_addr_no as receiver_addr_id in Shipment_Tab.
--  151202  RoJalk  LIM-5178, Rename ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO to SOURCE_REF1,
--  151202          SOURCE_REF2, SOURCE_REF3, SOURCE_REF4 in ShipmentLine and ShipmentLineHandlUnit. 
--  151110  MaIklk  LIM-4059, Renamed deilver_to_customer_no to receiver_id and renamed address fields to sender_xxx and receiver_xxx of shipment table.
--  151110  RoJalk  LIM-4610, Rename ShipmentOrderLine LU to ShipmentLine.
--  150820  ShKolk  Bug 119909, Modified report method to restrict users without site access from printing the report.
--  150708  RasDlk  Bug 121318, Modified Shipment_Report_Bill_Of_Lading() to enable translations for Custom Field Enumerations.
--  141205  Chfose  PRSC-2977, Added Contract and Contract Description to the report.
--  140724  KoDelk  Bug 117850, Modified report method to show site document address name as company name. If it's null show name from company header.
--  140702  MaEdlk  Bug 117072, Rounded variable gross_weight_ in method Shipment_Report_Bill_Of_Lading to 4 decimal places.
--  140506  MaEelk  Replaced the calls to Handling_Unit_Type_API.Get_Uom_For_Weight with Handling_Unit_API.Get_Uom_For_Weight
--  140502  ChJalk  PBSC-4784, Swapped the two IN parameteres in the method call Document_Text_API.Get_Note_Text.
--  130521  MeAblk  Restructured the main report view and the method in order to retrieve the data from the handling units in the shipment handling unit structure.
--  120822  Swiclk  Enabled Custom Fields on report.
--  120730  SBalLK  Bug 101597, Modified document phrase get method to enhance the code readability and fetch data with system specific.
--  120705  UdGnlk  Modified the length of CUSTOMS_STAT_NO from 35 to 15. 
--  120620  SBallk  Bug 103080, Modified to print document phrases in line level.
--  120412  AyAmlk  Bug 100608, Changed the length to 5 of delivery_terms_ in Shipment_Report_Bill_Of_Lading().
--  110923  ErFelk  Bug 99061, Modified the view title of package_description field to show Pallet/package_description.  
--  110727  PraWlk  Bug 97733, Removed consecutive ': ' from archive_notes_ and added it prior to the appending value.
--  101025  AmPalk  Bug 93738, Added DEL_TERMS_LOCATION to the ORDER_INFO_SERVICES_RPT.
--  100715  SudJlk  Bug 91672, Modified method Shipment_Report_Bill_Of_Lading to enable custom company logo display.
--  091002  MaMalk  Modified the report method to remove unused code.
--------------------------14.0.0---------------------------------------------
--  090713  NaWilk  Bug 84555, Added column PARENT_ROW_NO into SHIPMENT_BILL_OF_LADING_REP.
--  090526  SaJjlk  Bug 83064, Removed column CONSIGN_DOC_TEXT and added CUSTOMER_DOC_TEXT.
--  080918  ThAylk  Bug 74915, Replaced consignee_reference_ with consignee_ref_name_ ininsert to ORDER_INFO_SERVICES_RPT.
--  080904  ThAylk  Bug 74915, Added code to retrieve the consignee reference name and print it instead of consignee reference if it exists.
--  080610  ChJalk  Bug 74806, Modified the length of consignee_address_name_ from 35 to 100.
--  080130  NaLrlk  Bug 70005, Added DEL_TERMS_LOCATION to the report.
--  071029  MaRalk  Bug 67642, Modified the WHERE clause of the view SHIPMENT_BILL_OF_LADING_REP and 
--  071029          removed unnecessary code for incrementing row_no_.
--  070807  MaMalk  Call 147132, Modified the report method to display the delivery terms from the shipment header.    
--  070629  NiDalk  Bug 65372, Added ordering by handling_unit_id to cursor homogenous_handling_units.
--  070314  MaRalk  Bug 63361, Replaced Customs_Statistics_Number_API.Get_Description with the value of type_of_goods 
--  070314          in order to get the correct value for TYPE_OF_GOODS. Modified cursors simplified_handling_units, 
--  070314          homogenous_handling_units and shipment_packages in order to modify SELECT clause by adding type_of_goods.
--  070314          Modified the method Shipment_Report_Bill_Of_Lading to get the correct value for TYPE_OF_GOODS. 
--  070314          Removed the usages of commodity_group.
--  070220  SaJjlk  Modified methods used to retrieve weight information.
--  070220  PrPrlk  Modified the report to display the single occurence address correctly.
--  070118  ChBalk  Added Order_Delivery_Term_API.Get_Description where delivery_terms_desc fetched from different locations.
--  061229  NaWilk  Bug 61156, Added ordering by handling_unit_id to cursor homogenous_handling_units and NVL to package weight 
--  061229          in homogeneous handling unit tare weight calculation.
--  060516  SaRalk  Enlarge Address - Changed variable definitions.
--  060509  SaRalk  Enlarge Forwarder - Changed variable definitions.
--  060419  KeFelk  Enlarge Customer - Changed variable definitions.
----------------------------- 13.4.0 -----------------------------------------------
--  051220  KeFelk  Corrected the Address Format.
--  050915  KeFelk  Removed unused variables.
--  050218  NuFilk  Added code to set the printed flag for shipment.
--  050201  SaJjlk  Removed the reference to letter format.
--  050131  SaJjlk  Added document text to the report.
--  050121  SaJjlk  Converted to Report Designer format.
--  050118  UsRalk  Renamed CustomerNo attribute on Shipment LU to DeliverToCustomerNo.
--  041217  RaKalk  Modified From clause of view SHIPMENT_BILL_OF_LADING_REP
--  021113  PrInLk  Modified pallet quantity calculation to comply with Shipment Consignment Note.
--  021022  GeKaLk  Created using BillofLading.rdf.
-----------------------------------------------------------------------------

DEFINE MODULE                 = SHPMNT
DEFINE LU                     = ShipmentHandlingUtility
DEFINE PKG                    = SHIPMENT_BILL_OF_LADING_RPI

DEFINE TABLE                  = SHPMNT_INFO_SERVICES_RPT
DEFINE VIEW_RPV               = SHPMNT_INFO_SERVICES_RPV
DEFINE VIEW                   = SHIPMENT_BILL_OF_LADING_REP
DEFINE METHOD                 = Shipment_Report_Bill_Of_Lading

DEFINE CONTRACT               = S1
DEFINE CONTRACT_DESCRIPTION   = S2
DEFINE SHIPMENT_ID            = N1
DEFINE CONSIGNMENT_NOTE       = S3
DEFINE SENDER_NAME            = S4
DEFINE SENDER_ADDR_1          = S5
DEFINE SENDER_ADDR_2          = S6
DEFINE SENDER_ADDR_3          = S7
DEFINE SENDER_ADDR_4          = S8
DEFINE SENDER_ADDR_5          = S9
DEFINE SENDER_ADDR_6          = S10
DEFINE CONSIGNEE_ADDR_1       = S11
DEFINE CONSIGNEE_ADDR_2       = S12
DEFINE CONSIGNEE_ADDR_3       = S13
DEFINE CONSIGNEE_ADDR_4       = S14
DEFINE CONSIGNEE_ADDR_5       = S15
DEFINE CONSIGNEE_ADDR_6       = S16
DEFINE CONSIGNEE_ADDR_7       = S17
DEFINE CONSIGNEE_REF          = S18
DEFINE PLACE_OF_DEST          = S19
DEFINE FORWARD_AGENT          = S20
DEFINE DATE_PRINTED           = D1
DEFINE TOTAL_WEIGHT           = N2
DEFINE DOCUMENT_PHRASE        = S21
DEFINE HANDLING_UNIT_TYPE     = S22
DEFINE HANDLING_UNIT_QTY      = N3
DEFINE WEIGHT                 = N4
DEFINE HANDLING_UNIT_DESC     = S23
DEFINE PRO_NO                 = S24
DEFINE AIRWAY_BILL_NO         = S25
DEFINE CUSTOMER_PO_NO         = S26
DEFINE DELIVERY_TERMS         = S27
DEFINE REMIT_COD_TO           = S28
DEFINE DOCUMENT_TEXT          = S29
DEFINE DEL_TERMS_LOCATION     = S30
DEFINE CUSTOMER_DOC_TEXT      = S31
DEFINE SENDER_ADDR_7          = S32
DEFINE SENDER_ADDR_8          = S33
DEFINE SENDER_ADDR_9          = S34
DEFINE SENDER_ADDR_10         = S35
DEFINE CONSIGNEE_ADDR_8       = S36
DEFINE CONSIGNEE_ADDR_9       = S37
DEFINE CONSIGNEE_ADDR_10      = S38
DEFINE CONSIGNEE_ADDR_11      = S39
DEFINE SHIPMENT_FREIGHT_PAYER = S40
DEFINE SHIPMENT_FREIGHT_PAYER_ID = S41
DEFINE FREIGHT_PAYER_NOTE     = S42
DEFINE HAND_UNIT_TYPE_DOC_TEXT_NOTES  = S43
DEFINE SENDER_TYPE_DB         = S44
DEFINE SENDER_TYPE            = S45
DEFINE SENDER_ID              = S46
DEFINE SENDER_DESCRIPTION     = S47
DEFINE RECEIVER_TYPE_DB       = S48
DEFINE RECEIVER_TYPE          = S49
DEFINE RECEIVER_ID            = S50
DEFINE RECEIVER_DESCRIPTION   = S51
-----------------------------------------------------------------------------
-- PACKAGE SPECIFICATION:
-----------------------------------------------------------------------------

PROMPT Creating &PKG specification

CREATE OR REPLACE PACKAGE &PKG AS

module_  CONSTANT VARCHAR2(6) := '&MODULE';
lu_name_ CONSTANT VARCHAR2(25) := '&LU';


PROCEDURE &METHOD (
   report_attr_    IN VARCHAR2,
   parameter_attr_ IN VARCHAR2 );

END &PKG;
/

SHOW ERROR

-----------------------------------------------------------------------------
-- REPORTS
-----------------------------------------------------------------------------

PROMPT Creating report view &VIEW

CREATE OR REPLACE VIEW &VIEW AS
SELECT H.RESULT_KEY                            RESULT_KEY,
       H.ROW_NO                                ROW_NO,
       H.PARENT_ROW_NO                         PARENT_ROW_NO,
       H.&CONTRACT                             CONTRACT,
       H.&CONTRACT_DESCRIPTION                 CONTRACT_DESCRIPTION,
       H.&SENDER_TYPE                          SENDER_TYPE, 
       H.&SENDER_TYPE_DB                       SENDER_TYPE_DB,
       H.&SENDER_ID                            SENDER_ID,
       H.&SENDER_DESCRIPTION                   SENDER_DESCRIPTION,
       H.&SHIPMENT_ID                          SHIPMENT_ID,
       H.&CONSIGNMENT_NOTE                     CONSIGNMENT_NOTE_ID,
       H.&PRO_NO                               PRO_NO,
       H.&AIRWAY_BILL_NO                       AIRWAY_BILL_NO,
       H.&SENDER_NAME                          SENDER_NAME,
       H.&SENDER_ADDR_1                        SENDER_ADDR_1,
       H.&SENDER_ADDR_2                        SENDER_ADDR_2,
       H.&SENDER_ADDR_3                        SENDER_ADDR_3,
       H.&SENDER_ADDR_4                        SENDER_ADDR_4,
       H.&SENDER_ADDR_5                        SENDER_ADDR_5,
       H.&SENDER_ADDR_6                        SENDER_ADDR_6,
       H.&SENDER_ADDR_7                        SENDER_ADDR_7,
       H.&SENDER_ADDR_8                        SENDER_ADDR_8,
       H.&SENDER_ADDR_9                        SENDER_ADDR_9,
       H.&SENDER_ADDR_10                       SENDER_ADDR_10,
       H.&RECEIVER_TYPE                        RECEIVER_TYPE,
       H.&RECEIVER_TYPE_DB                     RECEIVER_TYPE_DB,
       H.&RECEIVER_ID                          RECEIVER_ID,
       H.&RECEIVER_DESCRIPTION                 RECEIVER_DESCRIPTION,
       H.&CONSIGNEE_ADDR_1                     CONSIGNEE_ADDR_1,
       H.&CONSIGNEE_ADDR_2                     CONSIGNEE_ADDR_2,
       H.&CONSIGNEE_ADDR_3                     CONSIGNEE_ADDR_3,
       H.&CONSIGNEE_ADDR_4                     CONSIGNEE_ADDR_4,
       H.&CONSIGNEE_ADDR_5                     CONSIGNEE_ADDR_5,
       H.&CONSIGNEE_ADDR_6                     CONSIGNEE_ADDR_6,
       H.&CONSIGNEE_ADDR_7                     CONSIGNEE_ADDR_7,
       H.&CONSIGNEE_ADDR_8                     CONSIGNEE_ADDR_8,
       H.&CONSIGNEE_ADDR_9                     CONSIGNEE_ADDR_9,
       H.&CONSIGNEE_ADDR_10                    CONSIGNEE_ADDR_10,
       H.&CONSIGNEE_ADDR_11                    CONSIGNEE_ADDR_11,
       H.&CONSIGNEE_REF                        CONSIGNEE_REFERENCE,
       H.&PLACE_OF_DEST                        PLACE_OF_DESTINATION,
       H.&FORWARD_AGENT                        FORWARD_AGENT,
       H.&DATE_PRINTED                         DATE_PRINTED,
       H.&TOTAL_WEIGHT                         TOTAL_WEIGHT,
       H.&CUSTOMER_PO_NO                       CUSTOMER_PO_NO,
       H.&DELIVERY_TERMS                       DELIVERY_TERMS,
       H.&DEL_TERMS_LOCATION                   DEL_TERMS_LOCATION,
       H.&REMIT_COD_TO                         REMIT_COD_TO,
       H.&DOCUMENT_TEXT                        DOCUMENT_TEXT,
       H.&CUSTOMER_DOC_TEXT                    CUSTOMER_DOC_TEXT,
       D.&DOCUMENT_PHRASE                      DOCUMENT_PHRASE,
       D.&HANDLING_UNIT_TYPE                   HANDLING_UNIT_TYPE,
       D.&HANDLING_UNIT_DESC                   HANDLING_UNIT_DESCRIPTION,
       D.&HANDLING_UNIT_QTY                    HANDLING_UNIT_QTY,
       D.&WEIGHT                               WEIGHT,
       H.&SHIPMENT_FREIGHT_PAYER               SHIPMENT_FREIGHT_PAYER,
       H.&SHIPMENT_FREIGHT_PAYER_ID            SHIPMENT_FREIGHT_PAYER_ID,
       H.&FREIGHT_PAYER_NOTE                   FREIGHT_PAYER_NOTE,
       H.&HAND_UNIT_TYPE_DOC_TEXT_NOTES        HAND_UNIT_TYPE_DOC_TEXT_NOTES
FROM  &VIEW_RPV H, &VIEW_RPV D
WHERE D.RESULT_KEY    = H.RESULT_KEY 
AND   H.PARENT_ROW_NO = D.PARENT_ROW_NO
AND   H.ROW_NO        = D.ROW_NO
WITH  read only;

COMMENT ON TABLE &VIEW IS
   'MODULE=&MODULE^LU=&LU^PROMPT=&LU^';

COMMENT ON COLUMN &VIEW..result_key IS
   'FLAGS=M----^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..row_no IS
   'FLAGS=M----^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..parent_row_no IS
   'FLAGS=M----^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..contract IS
   'FLAGS=A----^DATATYPE=STRING(5)/UPPERCASE^TITLE=Site:^ITEM_NAME=iContract^';
COMMENT ON COLUMN &VIEW..contract_description IS
   'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Site Description:^ITEM_NAME=iContractDescription^';
COMMENT ON COLUMN &VIEW..sender_type IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Sender Type^ITEM_NAME=iSenderType^';
COMMENT ON COLUMN &VIEW..sender_type_db IS
   'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Sender Type Db^ITEM_NAME=iSenderTypeDb^';
COMMENT ON COLUMN &VIEW..sender_id IS
   'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Sender ID^ITEM_NAME=iSenderId^';
COMMENT ON COLUMN &VIEW..sender_description IS
   'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Sender Description^ITEM_NAME=iSenderDescription^';
COMMENT ON COLUMN &VIEW..shipment_id IS
   'FLAGS=A----^DATATYPE=NUMBER^TITLE=BOL No:^ITEM_NAME=iShipmentId^QUERY=Shipment ID^QFLAGS=MCS--^';
COMMENT ON COLUMN &VIEW..consignment_note_id IS
   'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Consignment Note No:^ITEM_NAME=iConsignmentNoteId^';
COMMENT ON COLUMN &VIEW..pro_no IS
   'FLAGS=A----^DATATYPE=STRING(50)^TITLE=PRO No:^ITEM_NAME=iProNo^';
COMMENT ON COLUMN &VIEW..airway_bill_no IS
   'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Airway Bill No:^ITEM_NAME=iAirwayBillNo^';   
COMMENT ON COLUMN &VIEW..sender_name IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Shipper:^ITEM_NAME=iSenderName^';
COMMENT ON COLUMN &VIEW..sender_addr_1 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Sender Addr 1^ITEM_NAME=iSenderAddr1^';
COMMENT ON COLUMN &VIEW..sender_addr_2 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Sender Addr 2^ITEM_NAME=iSenderAddr2^';
COMMENT ON COLUMN &VIEW..sender_addr_3 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Sender Addr 3^ITEM_NAME=iSenderAddr3^';
COMMENT ON COLUMN &VIEW..sender_addr_4 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Sender Addr 4^ITEM_NAME=iSenderAddr4^';
COMMENT ON COLUMN &VIEW..sender_addr_5 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Sender Addr 5^ITEM_NAME=iSenderAddr5^';
COMMENT ON COLUMN &VIEW..sender_addr_6 IS
   'FLAGS=A----^DATATYPE=STRING^TITLE=Sender Addr 6^ITEM_NAME=iSenderAddr6^';
COMMENT ON COLUMN &VIEW..sender_addr_7 IS
   'FLAGS=A----^DATATYPE=STRING^TITLE=Sender Addr 7^ITEM_NAME=iSenderAddr7^';
COMMENT ON COLUMN &VIEW..sender_addr_8 IS
   'FLAGS=A----^DATATYPE=STRING^TITLE=Sender Addr 8^ITEM_NAME=iSenderAddr8^';
COMMENT ON COLUMN &VIEW..sender_addr_9 IS
   'FLAGS=A----^DATATYPE=STRING^TITLE=Sender Addr 9^ITEM_NAME=iSenderAddr9^';
COMMENT ON COLUMN &VIEW..sender_addr_10 IS
   'FLAGS=A----^DATATYPE=STRING^TITLE=Sender Addr 10^ITEM_NAME=iSenderAddr10^';
COMMENT ON COLUMN &VIEW..receiver_type IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Receiver Type^ITEM_NAME=iReceiverType^';
COMMENT ON COLUMN &VIEW..receiver_type_db IS
   'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Receiver Type Db^ITEM_NAME=iReceiverTypeDb^';
COMMENT ON COLUMN &VIEW..receiver_id IS
   'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Receiver ID^ITEM_NAME=iReceiverId^';
COMMENT ON COLUMN &VIEW..receiver_description IS
   'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Receiver Description^ITEM_NAME=iReceiverDescription^';
COMMENT ON COLUMN &VIEW..consignee_addr_1 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Consignee:^ITEM_NAME=iConsigneeAddr1^';
COMMENT ON COLUMN &VIEW..consignee_addr_2 IS
   'FLAGS=A----^DATATYPE=STRING(35)^ITEM_NAME=iConsigneeAddr2^';
COMMENT ON COLUMN &VIEW..consignee_addr_3 IS
   'FLAGS=A----^DATATYPE=STRING(35)^ITEM_NAME=iConsigneeAddr3^';
COMMENT ON COLUMN &VIEW..consignee_addr_4 IS
   'FLAGS=A----^DATATYPE=STRING(35)^ITEM_NAME=iConsigneeAddr4^';
COMMENT ON COLUMN &VIEW..consignee_addr_5 IS
   'FLAGS=A----^DATATYPE=STRING(35)^ITEM_NAME=iConsigneeAddr5^';
COMMENT ON COLUMN &VIEW..consignee_addr_6 IS
   'FLAGS=A----^DATATYPE=STRING(35)^ITEM_NAME=iConsigneeAddr6^';
COMMENT ON COLUMN &VIEW..consignee_addr_7 IS
   'FLAGS=A----^DATATYPE=STRING(35)^ITEM_NAME=iConsigneeAddr7^';
COMMENT ON COLUMN &VIEW..consignee_addr_8 IS
   'FLAGS=A----^DATATYPE=STRING(100)^ITEM_NAME=iConsigneeAddr8^';
COMMENT ON COLUMN &VIEW..consignee_addr_9 IS
   'FLAGS=A----^DATATYPE=STRING(100)^ITEM_NAME=iConsigneeAddr9^';
COMMENT ON COLUMN &VIEW..consignee_addr_10 IS
   'FLAGS=A----^DATATYPE=STRING(100)^ITEM_NAME=iConsigneeAddr10^';
COMMENT ON COLUMN &VIEW..consignee_addr_11 IS
   'FLAGS=A----^DATATYPE=STRING(100)^ITEM_NAME=iConsigneeAddr11^';
COMMENT ON COLUMN &VIEW..consignee_reference IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Consignee Reference:^ITEM_NAME=iConsigneeReference^';
COMMENT ON COLUMN &VIEW..place_of_destination IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Place Of Destination:^ITEM_NAME=iPlaceOfDestination^';
COMMENT ON COLUMN &VIEW..forward_agent IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Carrier:^ITEM_NAME=iForwardAgent^';
COMMENT ON COLUMN &VIEW..date_printed IS
   'FLAGS=A----^DATATYPE=DATE/DATE^TITLE=Date:^ITEM_NAME=iDatePrinted^';
COMMENT ON COLUMN &VIEW..total_weight IS
   'FLAGS=A----^DATATYPE=NUMBER^TITLE=Total:^ITEM_NAME=iTotalWeight^';
COMMENT ON COLUMN &VIEW..customer_po_no IS
   'FLAGS=A----^DATATYPE=STRING(32000)^TITLE=PO#^ITEM_NAME=iCustomerPoNo^';
COMMENT ON COLUMN &VIEW..delivery_terms IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Terms:^ITEM_NAME=iDeliveryTerms^';
COMMENT ON COLUMN &VIEW..del_terms_location IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Delivery Location:^ITEM_NAME=iDelTermsLocation^';
COMMENT ON COLUMN &VIEW..remit_cod_to IS
   'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Remit Cod To^ITEM_NAME=iRemitCodTo^';
COMMENT ON COLUMN &VIEW..document_text IS
   'FLAGS=A----^DATATYPE=STRING(2000)^TITLE=Document Text^ITEM_NAME=iDocumentText^';
COMMENT ON COLUMN &VIEW..customer_doc_text IS
   'FLAGS=A----^DATATYPE=STRING(2000)^TITLE=Customer Document Text^ITEM_NAME=iCustomerDocText^';
COMMENT ON COLUMN &VIEW..document_phrase
   IS 'FLAGS=A----^DATATYPE=STRING(2000)^TITLE=Document Phrase^ITEM_NAME=iDocumentPhrase^';
COMMENT ON COLUMN &VIEW..handling_unit_type IS
   'FLAGS=A----^DATATYPE=STRING(25)/UPPERCASE^REF=HandlingUnitType^TITLE=Handling Unit Type^ITEM_NAME=iHandlingUnitType^';
COMMENT ON COLUMN &VIEW..handling_unit_description IS
   'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Handling Unit Description^ITEM_NAME=iHandlingUnitDescription^';
COMMENT ON COLUMN &VIEW..handling_unit_qty IS
   'FLAGS=A----^DATATYPE=NUMBER^TITLE=Handling Unit Qty^ITEM_NAME=iHandlingUnitQty^';
COMMENT ON COLUMN &VIEW..weight IS
   'FLAGS=A----^DATATYPE=NUMBER^TITLE=Weight^ITEM_NAME=iWeight^';
COMMENT ON COLUMN &VIEW..shipment_freight_payer IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Shipment Freight Payer^ITEM_NAME=iShipmentFreightPayer^';
COMMENT ON COLUMN &VIEW..shipment_freight_payer_id IS
   'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Shipment Freight Payer ID^ITEM_NAME=iShipmentFreightPayerId^';
COMMENT ON COLUMN &VIEW..freight_payer_note IS
   'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Freight Payer Note^ITEM_NAME=iFreightPayerNote^';
COMMENT ON COLUMN &VIEW..hand_unit_type_doc_text_notes IS
   'FLAGS=A----^DATATYPE=STRING(2000)^TITLE=HU Type Doc Text Notes^ITEM_NAME=iHandUnitTypeDocTextNotes^';   
BEGIN

   Report_SYS.Define_Report_ ( '&VIEW', '&MODULE', '&LU', 'Shipment Bill Of Lading', '&TABLE', '&PKG..&METHOD', 0, NULL, NULL, NULL, 'PLSQL1.2' ,'TRUE','Shipment','Delivery Document');
   Report_SYS.Define_Report_Text_('&VIEW', 'BILL_OF_LADING_TITLE', 'STRAIGHT BILL OF LADING');
   Report_SYS.Define_Report_Text_('&VIEW', 'BILL_OF_LADING_TITLE2', 'Original - Not Negotiable');
   Report_SYS.Define_Report_Text_('&VIEW', 'CLASS', 'Class');
   Report_SYS.Define_Report_Text_('&VIEW', 'TOTALS', 'TOTALS');
   Report_SYS.Define_Report_Text_('&VIEW', 'REMIT_COD_TO', 'REMIT C.O.D. TO:');
   Report_SYS.Define_Report_Text_('&VIEW', 'COD_AMOUNT', 'C.O.D. AMOUNT:');
   Report_SYS.Define_Report_Text_('&VIEW', 'COD_FEE', 'C.O.D. FEE:');
   Report_SYS.Define_Report_Text_('&VIEW', 'PREPAID_FEE', 'Prepaid');
   Report_SYS.Define_Report_Text_('&VIEW', 'COLLECT_FEE', 'Collect');
   Report_SYS.Define_Report_Text_('&VIEW', 'TOTAL_CHARGES', 'TOTAL CHARGES');
   Report_SYS.Define_Report_Text_('&VIEW', 'COLLECT_CHECK_BOX_TITLE', 'Freight charges are prepaid unless marked collect');
   Report_SYS.Define_Report_Text_('&VIEW', 'COLLECT_CHECK_BOX', 'Check Box if collect');
   Report_SYS.Define_Report_Text_('&VIEW', 'DECLARED_VALUE1', 'NOTE - Where the rate is dependent on value, shippers are required to state specifically in writing the agreed or declared value of the property.');
   Report_SYS.Define_Report_Text_('&VIEW', 'DECLARED_VALUE2', 'The agreed or declared value of the property is hereby specifically stated by the shipper to be not exceeding.');
   Report_SYS.Define_Report_Text_('&VIEW', 'PER1', 'per');
   Report_SYS.Define_Report_Text_('&VIEW', 'SHIPPER', 'SHIPPER');
   Report_SYS.Define_Report_Text_('&VIEW', 'CARRIER', 'CARRIER');
   Report_SYS.Define_Report_Text_('&VIEW', 'PER2', 'PER');
   Report_SYS.Define_Report_Text_('&VIEW', 'DATE_TITLE', 'DATE');
   Report_SYS.Define_Report_Text_('&VIEW', 'GENERAL_COMMENTS', 'GENERAL COMMENTS');
   Report_SYS.Refresh_('&VIEW');
   -- Addition for Custom Fields ------
   Report_Lu_Definition_API.Clear_Custom_Fields_For_Report('&VIEW');
   Report_Lu_Definition_API.Enable_Custom_Fields_for_Lu('&VIEW','Shipment','SHIPMENT_BILL_OF_LADING_REP');
   ----------------------------------- 
END;
/

COMMIT;

-----------------------------------------------------------------------------
-- PACKAGE IMPLEMENTATION
-----------------------------------------------------------------------------

PROMPT Creating &PKG implementation

CREATE OR REPLACE PACKAGE BODY &PKG AS

PROCEDURE &METHOD (
   report_attr_    IN VARCHAR2,
   parameter_attr_ IN VARCHAR2 )
IS
   result_key_             NUMBER;
   row_no_                 NUMBER := 1;
   parent_row_no_          NUMBER := 0;
   parent_row_no2_         NUMBER := 0;
   
   shipment_id_            &VIEW..SHIPMENT_ID%TYPE;
   contract_               &VIEW..CONTRACT%TYPE;
   contract_description_   VARCHAR2(100);
   date_printed_           &VIEW..DATE_PRINTED%TYPE;
   forward_agent_          &VIEW..FORWARD_AGENT%TYPE;
   
   consignee_address_name_ VARCHAR2(100) := NULL;
   consignee_addr_1_       VARCHAR2(35)  := NULL;
   consignee_addr_2_       VARCHAR2(35)  := NULL;
   consignee_addr_3_       VARCHAR2(100) := NULL;
   consignee_addr_4_       VARCHAR2(100) := NULL;
   consignee_addr_5_       VARCHAR2(100) := NULL;
   consignee_addr_6_       VARCHAR2(100) := NULL;
   consignee_zip_code_     VARCHAR2(35)  := NULL;
   consignee_city_         VARCHAR2(35)  := NULL;
   consignee_state_        VARCHAR2(35)  := NULL;
   consignee_county_       VARCHAR2(35)  := NULL;
   consignee_country_      VARCHAR2(35) := NULL;
   consignee_country_code_ VARCHAR2(2);

   consignment_note_id_    &VIEW..CONSIGNMENT_NOTE_ID%TYPE;
   pro_no_                 &VIEW..PRO_NO%TYPE;
   airway_bill_no_         &VIEW..AIRWAY_BILL_NO%TYPE;
   total_weight_           &VIEW..TOTAL_WEIGHT%TYPE;
   
   sender_addr_1_          VARCHAR2(35) := NULL;
   sender_addr_2_          VARCHAR2(35) := NULL;
   sender_addr_3_          VARCHAR2(100) := NULL;
   sender_addr_4_          VARCHAR2(100) := NULL;
   sender_addr_5_          VARCHAR2(100) := NULL;
   sender_addr_6_          VARCHAR2(100) := NULL;
   sender_zip_code_        VARCHAR2(35) := NULL;
   sender_city_            VARCHAR2(35) := NULL;
   sender_state_           VARCHAR2(35) := NULL;
   sender_county_          VARCHAR2(35) := NULL;
   sender_country_         VARCHAR2(35) := NULL;
   sender_country_code_    VARCHAR2(2);
   
   sender_id_              VARCHAR2(50);
   sender_type_            VARCHAR2(100);
   sender_type_db_         VARCHAR2(20);
   sender_description_     VARCHAR2(200);
   sender_name_            &VIEW..SENDER_NAME%TYPE;
   receiver_reference_     &VIEW..CONSIGNEE_REFERENCE%TYPE;
   place_of_destination_   &VIEW..PLACE_OF_DESTINATION%TYPE;
   phrase_                 &VIEW..DOCUMENT_PHRASE%TYPE;
   remit_cod_to_           &VIEW..REMIT_COD_TO%TYPE;
   consign_note_id_        NUMBER;
   forward_agent_id_       SHIPMENT_TAB.forward_agent_id%TYPE;
   archive_notes_          VARCHAR2(200);
   language_code_          VARCHAR2(4);
   po_no_str_              VARCHAR2(32000);
   delivery_terms_         VARCHAR2(5);
   delivery_terms_desc_    &VIEW..DELIVERY_TERMS%TYPE;
   del_terms_location_     VARCHAR2(100);
   receiver_addr_id_       SHIPMENT_TAB.receiver_addr_id%TYPE;
   receiver_id_            SHIPMENT_TAB.receiver_id%TYPE;
   no_of_objects_          NUMBER := 0;
   no_of_pallets_          NUMBER := 0;
   tare_weight_            NUMBER := 0;
   net_weight_             NUMBER := 0;
   gross_weight_           NUMBER := 0;
   cust_stat_no_           VARCHAR2(15);
   commodity_list_         VARCHAR2(2000);

   do_xml_                 BOOLEAN := Report_SYS.Should_Generate_Xml('&VIEW');
   do_rs_                  BOOLEAN := Report_SYS.Should_Generate_Result_Set('&VIEW');
   xml_                    CLOB;
   package_name_           VARCHAR2(100) := 'SHIPMENT_BILL_OF_LADING_REP';
   
   document_text_          VARCHAR2(2000);
   doc_output_type_list_   VARCHAR2(2000);
   doc_output_type_        VARCHAR2(10);
   start_pos_              NUMBER;
   end_pos_                NUMBER;
   text_list_end_          BOOLEAN;

   sender_addr_            Address_Presentation_API.Address_Rec_Type;
   consignee_addr_         Address_Presentation_API.Address_Rec_Type;
   receiver_note_id_       NUMBER;
   note_text_tab_          Document_Text_API.Note_Text_Table;
   company_                VARCHAR2(20);
   logotype_               VARCHAR2(100);   
   company_name_           VARCHAR2(100);
   shipment_rowkey_        VARCHAR2(50);
   phrase_on_document_tab_ Phrase_On_Document_API.Phrase_Id_Tab;
   ship_uom_for_weight_    VARCHAR2(30);
   receiver_type_db_       SHIPMENT_TAB.receiver_type%TYPE;
   receiver_type_          VARCHAR2(100);
   receiver_description_   VARCHAR2(200);
   address_                VARCHAR2(2000);
   shipment_freight_payer_ Shipment_Tab.shipment_freight_payer%TYPE;  
   shipment_freight_payer_id_ Shipment_Tab.shipment_freight_payer_id%TYPE;
   freight_payer_note_     Shipment_Tab.freight_payer_note%TYPE;
   handling_unit_type_note_id_   NUMBER; 
   
   -- Shipment cursor
   CURSOR get_shipment IS
      SELECT SYSDATE date_printed,
             forward_agent_id,
             delivery_terms,
             del_terms_location,
             contract,
             sender_id,
             sender_type,
             receiver_id,
             receiver_type,
             receiver_addr_id,
             consignment_note_id,
             pro_no,
             airway_bill_no,
             receiver_reference,
             place_of_destination,
             sender_name,
             sender_address1,
             sender_address2,
             sender_address3,
             sender_address4,
             sender_address5,
             sender_address6,
             sender_city,
             sender_state,
             sender_zip_code,
             sender_county,
             sender_country,
             remit_cod_to,
             note_id,
             receiver_address1,
             receiver_address2,
             receiver_address3,
             receiver_address4,
             receiver_address5,
             receiver_address6,
             receiver_city,
             receiver_state,
             receiver_zip_code,
             receiver_county,
             receiver_country,
             receiver_address_name,
             shipment_freight_payer, 
             shipment_freight_payer_id,
             freight_payer_note,
             rowkey
      FROM SHIPMENT_TAB
      WHERE shipment_id = shipment_id_;
   
   -- Select top level handling units
   CURSOR get_top_level_hu_types IS
      SELECT handling_unit_type_id, COUNT(handling_unit_type_id) quantity
      FROM   SHPMNT_HANDL_UNIT_WITH_HISTORY
      WHERE  shipment_id = shipment_id_
        AND  parent_handling_unit_id IS NULL
      GROUP BY handling_unit_type_id;
   
   -- Select underneath handling units of a top level handling unit
   CURSOR get_handling_units(handling_unit_type_id_ VARCHAR2) IS
      SELECT handling_unit_id, operative_gross_weight
      FROM   SHPMNT_HANDL_UNIT_WITH_HISTORY
      WHERE  shipment_id = shipment_id_
      AND    parent_handling_unit_id IS NULL
      AND    handling_unit_type_id = handling_unit_type_id_;
    
   package_                VARCHAR2(25);
   handling_unit_type_id_  VARCHAR2(25);
   quantity_               NUMBER := 0;
   
   bill_addr_no_           VARCHAR2(50);
   receiver_ref_name_      VARCHAR2(100);
BEGIN
   -- Initialize
   General_SYS.Init_Method(lu_name_, '&PKG', '&METHOD');
   result_key_  := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Item_Value('RESULT_KEY',  report_attr_));
   shipment_id_ := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Item_Value('SHIPMENT_ID', parameter_attr_));
   contract_    := Client_SYS.Get_Item_Value('CONTRACT', parameter_attr_);
    
   -- Set report notes displayed in the InfoServices archive
   archive_notes_ := Language_SYS.Translate_Constant(lu_name_, 'SHIPMENTID: Shipment ID');
   archive_notes_ := archive_notes_ || ': '|| shipment_id_; 
   Archive_API.Set_Notes(archive_notes_);

   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.Create_Report_Header(xml_,'&VIEW',package_name_);
   END IF;

   -- fetching consignment
   OPEN get_shipment;
   FETCH get_shipment INTO date_printed_,
                           forward_agent_id_,
                           delivery_terms_,
                           del_terms_location_,
                           contract_,
                           sender_id_,
                           sender_type_db_,
                           receiver_id_,
                           receiver_type_db_,
                           receiver_addr_id_,
                           consignment_note_id_,
                           pro_no_,
                           airway_bill_no_,                       
                           receiver_reference_,
                           place_of_destination_,
                           sender_name_,
                           sender_addr_1_,
                           sender_addr_2_,
                           sender_addr_3_,
                           sender_addr_4_,
                           sender_addr_5_,
                           sender_addr_6_,
                           sender_city_,
                           sender_state_,
                           sender_zip_code_,
                           sender_county_,
                           sender_country_code_,
                           remit_cod_to_,
                           consign_note_id_,
                           consignee_addr_1_,
                           consignee_addr_2_,
                           consignee_addr_3_,
                           consignee_addr_4_,
                           consignee_addr_5_,
                           consignee_addr_6_,
                           consignee_city_,
                           consignee_state_,
                           consignee_zip_code_,
                           consignee_county_,
                           consignee_country_code_,
                           consignee_address_name_,
                           shipment_freight_payer_,
                           shipment_freight_payer_id_,
                           freight_payer_note_,
                           shipment_rowkey_;

   IF (get_shipment%NOTFOUND) THEN
      total_weight_ := NULL;
   END IF;
   CLOSE get_shipment;

   User_Allowed_Site_API.Exist(Fnd_Session_API.Get_Fnd_User(), contract_);

   contract_description_   := Site_API.Get_description(contract_);
   
   ship_uom_for_weight_    := Company_Invent_Info_API.Get_Uom_For_Weight(Site_API.Get_Company(contract_));
   total_weight_           := ROUND(Shipment_API.Get_Operational_Gross_Weight(shipment_id_, ship_uom_for_weight_,'FALSE'), 4); 
   
   forward_agent_          := Forwarder_Info_API.Get_Name(forward_agent_id_);     

   -- Use forward agent language if possible
   language_code_       := Iso_Language_API.Encode(Forwarder_Info_API.Get_Default_Language(forward_agent_id_));
   IF (language_code_ IS NULL) THEN
      language_code_ := Language_SYS.Get_Language;
   END IF;

   -- Set report language
   Archive_API.Set_Language(language_code_);

   delivery_terms_desc_ := Order_delivery_Term_API.Get_Description(delivery_terms_, language_code_);

   sender_country_      := substr(Iso_Country_API.Get_Description(sender_country_code_, Iso_Language_API.Decode(language_code_)),1,35);
   
   address_             := Address_Presentation_API.Format_Address(sender_country_code_,
                                                                   sender_addr_1_,
                                                                   sender_addr_2_,
                                                                   sender_addr_3_,
                                                                   sender_addr_4_,
                                                                   sender_addr_5_,
                                                                   sender_addr_6_,
                                                                   sender_city_,
                                                                   sender_county_,
                                                                   sender_state_,
                                                                   sender_zip_code_,
                                                                   sender_country_);
   sender_addr_         := Address_Presentation_API.Format_To_Line(address_);
   
   
   consignee_country_   := substr(Iso_Country_API.Get_Description(consignee_country_code_, Iso_Language_API.Decode(language_code_)),1,35);
   
    address_            := Address_Presentation_API.Format_Address(consignee_country_code_,
                                                                   consignee_addr_1_,
                                                                   consignee_addr_2_,
                                                                   consignee_addr_3_,
                                                                   consignee_addr_4_,
                                                                   consignee_addr_5_,
                                                                   consignee_addr_6_,
                                                                   consignee_city_,
                                                                   consignee_county_,
                                                                   consignee_state_,
                                                                   consignee_zip_code_,
                                                                   consignee_country_);
   consignee_addr_      := Address_Presentation_API.Format_To_Line(address_);
   
   $IF Component_Order_SYS.INSTALLED $THEN
      po_no_str_        := Shipment_Order_Utility_API.Get_Customer_Po_No(shipment_id_);
   $END   
    
   bill_addr_no_       := Shipment_Source_Utility_API.Get_Document_Address(receiver_id_, receiver_type_db_);
   receiver_ref_name_  := SUBSTR(NVL(Shipment_Source_Utility_API.Get_Receiver_Contact_Name(receiver_id_, bill_addr_no_, receiver_reference_, receiver_type_db_),receiver_reference_), 1, 100);
   
   sender_type_          := Sender_Receiver_Type_API.Decode(sender_type_db_);
   sender_description_   := Shipment_Source_Utility_API.Get_Sender_Name(sender_id_, sender_type_db_);
   receiver_type_        := Sender_Receiver_Type_API.Decode(receiver_type_db_);
   receiver_description_ := Shipment_Source_Utility_API.Get_Receiver_Name(receiver_id_, receiver_type_db_);
   
   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.Add_Element(xml_,'RESULT_KEY', result_key_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'ROW_NO', row_no_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONTRACT', contract_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONTRACT_DESCRIPTION', contract_description_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SHIPMENT_ID', shipment_id_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNMENT_NOTE_ID', consignment_note_id_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'PRO_NO', pro_no_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'AIRWAY_BILL_NO', airway_bill_no_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_TYPE_DB',     sender_type_db_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_TYPE',        sender_type_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ID',          sender_id_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_DESCRIPTION', sender_description_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'RECEIVER_TYPE_DB',   receiver_type_db_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'RECEIVER_TYPE',      receiver_type_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'RECEIVER_ID',        receiver_id_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'RECEIVER_DESCRIPTION', receiver_description_);         
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_NAME', sender_name_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_1', sender_addr_.address1);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_2', sender_addr_.address2);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_3', sender_addr_.address3);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_4', sender_addr_.address4);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_5', sender_addr_.address5);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_6', sender_addr_.address6);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_7', sender_addr_.address7);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_8', sender_addr_.address8);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_9', sender_addr_.address9);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SENDER_ADDR_10', sender_addr_.address10);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_1', consignee_address_name_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_2', consignee_addr_.address1);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_3', consignee_addr_.address2);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_4', consignee_addr_.address3);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_5', consignee_addr_.address4);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_6', consignee_addr_.address5);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_7', consignee_addr_.address6);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_8', consignee_addr_.address7);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_9', consignee_addr_.address8);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_10', consignee_addr_.address9);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_ADDR_11', consignee_addr_.address10);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CONSIGNEE_REFERENCE', receiver_ref_name_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'PLACE_OF_DESTINATION', place_of_destination_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'FORWARD_AGENT', forward_agent_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'DATE_PRINTED', date_printed_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'TOTAL_WEIGHT', total_weight_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'CUSTOMER_PO_NO', po_no_str_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'DELIVERY_TERMS', delivery_terms_desc_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'DEL_TERMS_LOCATION', del_terms_location_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'REMIT_COD_TO', remit_cod_to_);
      Xml_Record_Writer_SYS.Add_Element(xml_,'SHIPMENT_FREIGHT_PAYER', Shipment_Payer_API.decode(shipment_freight_payer_));
      Xml_Record_Writer_SYS.Add_Element(xml_,'SHIPMENT_FREIGHT_PAYER_ID', shipment_freight_payer_id_);  
      Xml_Record_Writer_SYS.Add_Element(xml_,'FREIGHT_PAYER_NOTE', freight_payer_note_);      
      Xml_Record_Writer_SYS.Add_Custom_Fields(xml_,'Shipment', shipment_rowkey_, 'SHIPMENT_BILL_OF_LADING_REP', language_code_);
   END IF;

   IF (do_rs_) THEN
      INSERT INTO &TABLE
         (result_key, row_no, parent_row_no, &CONTRACT, &CONTRACT_DESCRIPTION, &SHIPMENT_ID,
          &CONSIGNMENT_NOTE, &PRO_NO, &AIRWAY_BILL_NO,
          &SENDER_TYPE_DB, &SENDER_TYPE, &SENDER_ID, &SENDER_DESCRIPTION, &SENDER_NAME, &SENDER_ADDR_1,
          &SENDER_ADDR_2, &SENDER_ADDR_3, &SENDER_ADDR_4, &SENDER_ADDR_5, &SENDER_ADDR_6, 
          &SENDER_ADDR_7, &SENDER_ADDR_8, &SENDER_ADDR_9, &SENDER_ADDR_10, &RECEIVER_TYPE_DB, &RECEIVER_TYPE,
          &RECEIVER_ID, &RECEIVER_DESCRIPTION,
          &CONSIGNEE_ADDR_1, &CONSIGNEE_ADDR_2, &CONSIGNEE_ADDR_3, &CONSIGNEE_ADDR_4,
          &CONSIGNEE_ADDR_5, &CONSIGNEE_ADDR_6, &CONSIGNEE_ADDR_7,
          &CONSIGNEE_ADDR_8, &CONSIGNEE_ADDR_9, &CONSIGNEE_ADDR_10, &CONSIGNEE_ADDR_11,          
          &CONSIGNEE_REF, &PLACE_OF_DEST, &FORWARD_AGENT, &DATE_PRINTED, 
          &TOTAL_WEIGHT, &CUSTOMER_PO_NO, &DELIVERY_TERMS, &REMIT_COD_TO, &DEL_TERMS_LOCATION,
          &SHIPMENT_FREIGHT_PAYER, &SHIPMENT_FREIGHT_PAYER_ID, &FREIGHT_PAYER_NOTE)
      VALUES
         (result_key_, row_no_, parent_row_no_, contract_, contract_description_, shipment_id_,
          consignment_note_id_, pro_no_, airway_bill_no_,
          sender_type_db_, sender_type_, sender_id_, sender_description_,
          sender_name_, sender_addr_.address1, 
          sender_addr_.address2, sender_addr_.address3, sender_addr_.address4, 
          sender_addr_.address5, sender_addr_.address6, sender_addr_.address7, sender_addr_.address8, 
          sender_addr_.address9, sender_addr_.address10, 
          receiver_type_db_, receiver_type_, receiver_id_, 
          receiver_description_,consignee_address_name_,
          consignee_addr_.address1, consignee_addr_.address2, consignee_addr_.address3,
          consignee_addr_.address4, consignee_addr_.address5, consignee_addr_.address6, 
          consignee_addr_.address7, consignee_addr_.address8,consignee_addr_.address9, consignee_addr_.address10,
          receiver_ref_name_,
          place_of_destination_, forward_agent_, date_printed_, 
          total_weight_, po_no_str_, delivery_terms_desc_, remit_cod_to_, del_terms_location_,
          Shipment_Payer_API.decode(shipment_freight_payer_), shipment_freight_payer_id_, freight_payer_note_);
   END IF;
   parent_row_no_ := row_no_;   
   row_no_        := row_no_ + 1;   

   IF language_code_ IS NOT NULL THEN
      IF (do_xml_) THEN
         Xml_Record_Writer_SYS.Start_Element(xml_, 'DOC_PHRASES');
      END IF;
      phrase_on_document_tab_ := Phrase_On_Document_API.Get_Phrase_Id_Tab('SHIPBILLAD', NULL, contract_ );
      
      IF (phrase_on_document_tab_.COUNT > 0) THEN
         FOR n IN phrase_on_document_tab_.FIRST..phrase_on_document_tab_.LAST LOOP
            phrase_ := Mpccom_Phrase_Text_API.Get_Phrase_Text( phrase_on_document_tab_(n), language_code_);
            IF (phrase_ IS NOT NULL) THEN
               IF (do_xml_) THEN
                  Xml_Record_Writer_SYS.Start_Element(xml_, 'DOC_PHRASE');
                  Xml_Record_Writer_SYS.Add_Element(xml_, 'DOCUMENT_PHRASE', phrase_ );
                  Xml_Record_Writer_SYS.End_Element(xml_, 'DOC_PHRASE');
               END IF;
               IF (do_rs_) THEN
                  INSERT INTO &TABLE(
                     result_key, row_no, parent_row_no, &DOCUMENT_PHRASE )
                  VALUES(
                     result_key_, row_no_, parent_row_no_, phrase_ );
               END IF;
               row_no_ := row_no_ + 1;
            END IF;
         END LOOP;
      END IF;

      IF (do_xml_) THEN
         Xml_Record_Writer_SYS.End_Element(xml_, 'DOC_PHRASES');
      END IF;
   END IF;

   receiver_note_id_ := Shipment_Source_Utility_API.Get_Receiver_Note_Id(receiver_id_, receiver_type_db_);

   IF (receiver_note_id_ IS NOT NULL) THEN
      IF (do_xml_) THEN
         Xml_Record_Writer_SYS.Start_Element(xml_, 'CUSTOMER_DOC_TEXTS');
      END IF;

      note_text_tab_ := Document_Text_API.Get_All_Notes_Tab(receiver_note_id_, '77');

      IF (note_text_tab_.COUNT > 0) THEN
         FOR n IN note_text_tab_.FIRST..note_text_tab_.LAST LOOP
            IF (do_xml_) THEN
               Xml_Record_Writer_SYS.Start_Element(xml_, 'CUSTOMER_DOC_TEXT');
               Xml_Record_Writer_SYS.Add_Element(xml_,'CUSTOMER_DOC_TEXT', note_text_tab_(n));
               Xml_Record_Writer_SYS.End_Element(xml_, 'CUSTOMER_DOC_TEXT');
            END IF;
            IF (do_rs_) THEN
               INSERT INTO &TABLE (
                   result_key, row_no, parent_row_no, &CUSTOMER_DOC_TEXT)
               VALUES (
                  result_key_, row_no_, parent_row_no_, note_text_tab_(n));
            END IF;  
            row_no_ := row_no_ + 1;
         END LOOP;                  
      END IF; 
      IF (do_xml_) THEN
         Xml_Record_Writer_SYS.End_Element(xml_, 'CUSTOMER_DOC_TEXTS');
      END IF; 
   END IF;

   IF consign_note_id_ IS NOT NULL THEN
      doc_output_type_list_ := Output_Type_Document_API.Get_Output_Type_List('77');              
         
      IF (doc_output_type_list_ IS NOT NULL) THEN
         text_list_end_ := FALSE;
         start_pos_     := 1;

         IF (do_xml_) THEN
            Xml_Record_Writer_SYS.Start_Element(xml_, 'DOCUMENT_TEXTS');
         END IF;

         WHILE (text_list_end_ = FALSE) LOOP
            -- Get the position of the next ';' in the list.
            end_pos_ := instr(doc_output_type_list_, ';', start_pos_);
            IF (end_pos_ = 0) THEN
               doc_output_type_ := substr(doc_output_type_list_, start_pos_);
            ELSE
               doc_output_type_ := substr(doc_output_type_list_, start_pos_, end_pos_ - start_pos_);
            END IF;
                  
            document_text_ := Document_Text_API.Get_Note_Text(doc_output_type_, consign_note_id_);
            IF document_text_ IS NOT NULL THEN
               IF (do_xml_) THEN
                  Xml_Record_Writer_SYS.Start_Element(xml_, 'DOCUMENT_TEXT');
                  Xml_Record_Writer_SYS.Add_Element(xml_,'DOCUMENT_TEXT', document_text_);
                  Xml_Record_Writer_SYS.End_Element(xml_, 'DOCUMENT_TEXT');
               END IF;

               IF (do_rs_) THEN
                  INSERT INTO &TABLE (
                     result_key, row_no, parent_row_no, &DOCUMENT_TEXT)
                  VALUES (
                     result_key_, row_no_, parent_row_no_, document_text_);
                  row_no_ := row_no_ + 1;
               END IF;
            END IF;
            IF (end_pos_ = 0) THEN
               text_list_end_ := TRUE;
            ELSE
               start_pos_ := end_pos_ + 1;
            END IF;
         END LOOP;

         IF (do_xml_) THEN
            Xml_Record_Writer_SYS.End_Element(xml_, 'DOCUMENT_TEXTS');
         END IF;
      END IF;  
   END IF;
    
   no_of_objects_ := 1; 

   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.Start_Element(xml_, 'STRUCTURE_NODES');
   END IF;

   package_ := CHR(2);

   OPEN get_top_level_hu_types;
   LOOP      
      FETCH get_top_level_hu_types INTO handling_unit_type_id_, quantity_;
      FOR handling_unit_ IN  get_handling_units(handling_unit_type_id_) LOOP
         gross_weight_   := ROUND(gross_weight_ + handling_unit_.operative_gross_weight, 4);
      END LOOP;

      IF (package_ != handling_unit_type_id_) THEN
         IF (do_xml_) THEN
            Xml_Record_Writer_SYS.Start_Element(xml_, 'STRUCTURE_NODE');
            Xml_Record_Writer_SYS.Add_Element(xml_, 'HANDLING_UNIT_TYPE', handling_unit_type_id_);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'HANDLING_UNIT_DESCRIPTION', Handling_Unit_Type_API.Get_Description(handling_unit_type_id_));
            Xml_Record_Writer_SYS.Add_Element(xml_, 'HANDLING_UNIT_QTY', quantity_);
            Xml_Record_Writer_SYS.Add_Element(xml_, 'WEIGHT', gross_weight_);            
         END IF;

         IF (do_rs_) THEN
            INSERT INTO &TABLE
               (result_key, row_no, parent_row_no, &HANDLING_UNIT_TYPE, &HANDLING_UNIT_DESC,
                &HANDLING_UNIT_QTY, &WEIGHT)
            VALUES
               (result_key_, row_no_, parent_row_no_, handling_unit_type_id_, Handling_Unit_Type_API.Get_Description(handling_unit_type_id_),
                quantity_, gross_weight_);
         END IF;
         
         parent_row_no2_ := row_no_; 
         row_no_ := row_no_ + 1;
         
         handling_unit_type_note_id_ := Handling_Unit_Type_API.Get_Note_Id(handling_unit_type_id_);
         note_text_tab_ := Document_Text_API.Get_All_Notes_Tab(handling_unit_type_note_id_, '77');
         IF (note_text_tab_.COUNT > 0) THEN
            IF (do_xml_) THEN
               Xml_Record_Writer_SYS.Start_Element(xml_, 'HAND_UNIT_TYPE_DOC_TEXTS');
            END IF; 
            
            FOR n IN note_text_tab_.FIRST..note_text_tab_.LAST LOOP
               IF (do_xml_) THEN 
                  Xml_Record_Writer_SYS.Start_Element(xml_, 'HAND_UNIT_TYPE_DOC_TEXT'); 
                  Xml_Record_Writer_SYS.Add_Element(xml_, 'HAND_UNIT_TYPE_DOC_TEXT_NOTES', note_text_tab_(n));                
                  Xml_Record_Writer_SYS.End_Element(xml_, 'HAND_UNIT_TYPE_DOC_TEXT');
               END IF;  

               IF (do_rs_) THEN
                  INSERT INTO &TABLE (
                     result_key, row_no, parent_row_no, &HAND_UNIT_TYPE_DOC_TEXT_NOTES)
                  VALUES (
                     result_key_, row_no_, parent_row_no2_, note_text_tab_(n));
                  row_no_ := row_no_ + 1;
               END IF;                                
            END LOOP;
            
            IF (do_xml_) THEN
               Xml_Record_Writer_SYS.End_Element(xml_, 'HAND_UNIT_TYPE_DOC_TEXTS');
            END IF; 
         END IF;
         IF (do_xml_) THEN            
            Xml_Record_Writer_SYS.End_Element(xml_, 'STRUCTURE_NODE');
         END IF; 
      END IF;

      EXIT WHEN get_top_level_hu_types%NOTFOUND;
      tare_weight_  := 0;
      net_weight_   := 0;
      gross_weight_ := 0;
      package_      := handling_unit_type_id_;
   END LOOP;
   CLOSE get_top_level_hu_types;

   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.End_Element(xml_, 'STRUCTURE_NODES');
   END IF;

   -- if no detail was found then put a dummy detailrow in so we can get a report with at least a header
   IF (row_no_ = 2) THEN 
      IF (do_xml_) THEN
         Xml_Record_Writer_SYS.Start_Element(xml_, 'STRUCTURE_NODES');
         Xml_Record_Writer_SYS.Start_Element(xml_, 'STRUCTURE_NODE');
         Xml_Record_Writer_SYS.Add_Element(xml_, 'HANDLING_UNIT_TYPE', '');
         Xml_Record_Writer_SYS.Add_Element(xml_, 'HANDLING_UNIT_QTY', '');
         Xml_Record_Writer_SYS.Add_Element(xml_, 'WEIGHT', '');         
         Xml_Record_Writer_SYS.End_Element(xml_, 'STRUCTURE_NODE');
         Xml_Record_Writer_SYS.End_Element(xml_, 'STRUCTURE_NODES');
      END IF;
      
      -- insert a blank dummy parcel
      IF (do_rs_) THEN
         INSERT INTO &TABLE
            (result_key, row_no, parent_row_no, &HANDLING_UNIT_TYPE, &HANDLING_UNIT_QTY, &WEIGHT)
         VALUES
            (result_key_, row_no_, parent_row_no_, NULL, NULL, NULL);
      END IF;
   END IF;

   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.End_Element(xml_,'&VIEW');
      Report_SYS.Finish_Xml_Report('&VIEW',result_key_,xml_);
   END IF;

   Shipment_API.Set_Print_Flags(shipment_id_, 'BILL_OF_LADING_PRINTED_DB', 'Y');

   company_      := Site_API.Get_Company(contract_);
   logotype_     := Company_API.Get_Logotype(company_);  
   company_name_ := NVL(Company_Address_Deliv_Info_API.Get_Address_Name(company_, Site_Discom_Info_API.Get_Document_Address_Id(contract_, 'TRUE')), Company_API.Get_Name(company_));

   IF (logotype_ IS NOT NULL) THEN
      Archive_Variable_API.Set_Object(result_key_, 'rhSysLogo', logotype_);
      Archive_Variable_API.Set_Variable(result_key_, 'companyName', company_name_);
   END IF;
END &METHOD;

END &PKG;
/

SHOW ERROR

----------------------------------------------------------
-- <UNDEFINE_SECTION>
----------------------------------------------------------
-- This section is reserved for undefine statements
-- nothing should be manually written below because
-- that would be overwritten everytime the IFS / Undefine
-- tool is run.  
-- Also do NOT make any changes to the above tag because
-- this will result in duplicated code
----------------------------------------------------------
UNDEFINE MODULE
UNDEFINE LU
UNDEFINE PKG
UNDEFINE TABLE
UNDEFINE VIEW_RPV
UNDEFINE VIEW
UNDEFINE METHOD
UNDEFINE CONTRACT
UNDEFINE CONTRACT_DESCRIPTION
UNDEFINE SHIPMENT_ID
UNDEFINE CONSIGNMENT_NOTE
UNDEFINE SENDER_NAME
UNDEFINE SENDER_ADDR_1
UNDEFINE SENDER_ADDR_2
UNDEFINE SENDER_ADDR_3
UNDEFINE SENDER_ADDR_4
UNDEFINE SENDER_ADDR_5
UNDEFINE SENDER_ADDR_6
UNDEFINE SENDER_ADDR_7
UNDEFINE SENDER_ADDR_8
UNDEFINE SENDER_ADDR_9
UNDEFINE SENDER_ADDR_10
UNDEFINE CONSIGNEE_ADDR_1
UNDEFINE CONSIGNEE_ADDR_2
UNDEFINE CONSIGNEE_ADDR_3
UNDEFINE CONSIGNEE_ADDR_4
UNDEFINE CONSIGNEE_ADDR_5
UNDEFINE CONSIGNEE_ADDR_6
UNDEFINE CONSIGNEE_ADDR_7
UNDEFINE CONSIGNEE_ADDR_8
UNDEFINE CONSIGNEE_ADDR_9
UNDEFINE CONSIGNEE_ADDR_10
UNDEFINE CONSIGNEE_ADDR_11
UNDEFINE CONSIGNEE_REF
UNDEFINE PLACE_OF_DEST
UNDEFINE FORWARD_AGENT
UNDEFINE DATE_PRINTED
UNDEFINE TOTAL_WEIGHT
UNDEFINE DOCUMENT_PHRASE
UNDEFINE HANDLING_UNIT_TYPE
UNDEFINE HANDLING_UNIT_QTY
UNDEFINE WEIGHT
UNDEFINE HANDLING_UNIT_DESC
UNDEFINE PRO_NO
UNDEFINE AIRWAY_BILL_NO
UNDEFINE CUSTOMER_PO_NO
UNDEFINE DELIVERY_TERMS
UNDEFINE REMIT_COD_TO
UNDEFINE DOCUMENT_TEXT
UNDEFINE DEL_TERMS_LOCATION
UNDEFINE CUSTOMER_DOC_TEXT
UNDEFINE SHIPMENT_FREIGHT_PAYER    
UNDEFINE SHIPMENT_FREIGHT_PAYER_ID 
UNDEFINE FREIGHT_PAYER_NOTE 
UNDEFINE HAND_UNIT_TYPE_DOC_TEXT_NOTES
UNDEFINE SENDER_TYPE_DB
UNDEFINE SENDER_TYPE
UNDEFINE SENDER_ID
UNDEFINE SENDER_DESCRIPTION
UNDEFINE RECEIVER_TYPE_DB
UNDEFINE RECEIVER_TYPE
UNDEFINE RECEIVER_ID
UNDEFINE RECEIVER_DESCRIPTION
