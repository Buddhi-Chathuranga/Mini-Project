-----------------------------------------------------------------------------
--
--  Fragment:     ExecuteShipmentEvent
--  Component:    SHPMNT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  210601  RoJalk  SC21R2-1030, Included the call Shipment_Flow_API.Start_Pack_Acc_Pack_Proposal__ in Execute_Event___.
--  190626  JaBalk  SCUXXW4-22679, concatenate the info_ with Get_All_Info in Start_Shipment_Main_Single___.
--  190110  RasDlk  SCUXXW4-12904, Added the LocationNo parameter which is required for the 'Report Picking' process.
--  180822  RoJalk  SCUXXW4-4864, Created.
-----------------------------------------------------------------------------

layer Core;

PROCEDURE Start_Shipment_Main___ (
   full_selection_ IN  VARCHAR2,
   start_event_    IN  NUMBER,
   location_no_    IN  VARCHAR2,
   info$_          OUT VARCHAR2) 
IS
   selection_           VARCHAR2(32000) := CONCAT(full_selection_, ';');
   current_selection_   VARCHAR2(32000);
   attr_                VARCHAR2(32000);
   shipment_id_         NUMBER;
   info_                VARCHAR2(4000); 
BEGIN
   WHILE (INSTR(selection_, ';') > 0) LOOP
      current_selection_ := substr(selection_, 0, INSTR(selection_, ';'));
      shipment_id_       := Client_SYS.Get_Key_Reference_Value(current_selection_, 'SHIPMENT_ID');
      IF (shipment_id_ IS NOT NULL) THEN
         Shipment_Initial_Check___(shipment_id_);
         Add_Row___(attr_, shipment_id_, start_event_, location_no_);  
      END IF;
      selection_         := substr(selection_, INSTR(selection_, ';')+1); 
   END LOOP;
   
   IF (attr_ IS NOT NULL) THEN
      Execute_Event___(info_, attr_, start_event_);
      info$_ := info_;
   END IF;   
END Start_Shipment_Main___;


PROCEDURE Start_Shipment_Main_Single___ (
   shipment_id_    IN  NUMBER,
   start_event_    IN  NUMBER,
   location_no_    IN  VARCHAR2,
   info$_          OUT VARCHAR2) 
IS
   attr_                VARCHAR2(32000);
   info_                VARCHAR2(4000); 
BEGIN
   Add_Row___(attr_, shipment_id_, start_event_, location_no_);
   Execute_Event___(info_, attr_, start_event_); 
   info$_ := info_|| Client_SYS.Get_All_Info;
END Start_Shipment_Main_Single___;


PROCEDURE Execute_Event___ (
   info_          OUT VARCHAR2,
   attr_          IN  VARCHAR2,
   start_event_   IN  NUMBER ) 
IS
BEGIN
   CASE start_event_
      WHEN 10 THEN
         Shipment_Flow_API.Start_Reserve_Shipment__(info_, attr_);
      WHEN 20 THEN
         Shipment_Flow_API.Start_Create_Pick_List__(attr_);
      WHEN 30 THEN
         Shipment_Flow_API.Start_Print_Pick_List__(attr_);
      WHEN 40 THEN
         Shipment_Flow_API.Start_Pick_Report_Shipment__(attr_);
      WHEN 50 THEN
         Shipment_Flow_API.Start_Complete_Shipment__(attr_);
      WHEN 60 THEN
         Shipment_Flow_API.Start_Deliver_Shipment__(attr_);
      WHEN 70 THEN
         Shipment_Flow_API.Start_Close_Shipment__(attr_);
      WHEN 1000 THEN
         Shipment_Flow_API.Start_Reopen_Shipment__(attr_);
      WHEN 1100 THEN
         Shipment_Flow_API.Start_Cancel_Shipment__(attr_);
      WHEN 1200 THEN
         Shipment_Flow_API.Start_Pack_Acc_Packing_Instr__(attr_);
      WHEN 1250 THEN
         Shipment_Flow_API.Start_Pack_Acc_HU_Capacity__(attr_);
      WHEN 1260 THEN
         Shipment_Flow_API.Start_Pack_Acc_Pack_Proposal__(attr_);   
      WHEN 1300 THEN
         Shipment_Flow_API.Start_Send_Dispatch_Advice__(attr_);
      WHEN 1400 THEN
         Shipment_Flow_API.Start_Print_Consignment_Note__(attr_);
      WHEN 1500 THEN
         Shipment_Flow_API.Start_Print_Bill_Of_Lading__(attr_);
      WHEN 1600 THEN
         Shipment_Flow_API.Start_Print_Packing_List__(attr_);
      WHEN 1700 THEN
         Shipment_Flow_API.Start_Print_Shipment_Delnote__(attr_);
      WHEN 1800 THEN
         Shipment_Flow_API.Start_Print_Proforma_Inv__(attr_);
      WHEN 1900 THEN
         Shipment_Flow_API.Start_Print_Address_Label__(attr_);
      ELSE
         NULL;
   END CASE;
END Execute_Event___;

PROCEDURE Add_Row___ (
   attr_          IN OUT VARCHAR2,
   shipment_id_   IN     NUMBER,
   start_event_   IN     NUMBER,
   location_no_   IN     VARCHAR2) 
IS
   shipment_rec_   Shipment_API.Public_Rec;
   media_code_     VARCHAR2(30);
BEGIN
   shipment_rec_ := Shipment_API.Get(shipment_id_);
   
   Client_SYS.Add_To_Attr('START_EVENT', start_event_, attr_);
   Client_SYS.Add_To_Attr('SHIPMENT_ID', shipment_id_, attr_);
   Client_SYS.Add_To_Attr('SHIPMENT_TYPE', shipment_rec_.shipment_type, attr_);
   IF (start_event_ = 40) THEN
      Client_SYS.Add_To_Attr('LOCATION_NO', location_no_, attr_);
   END IF;
   IF (start_event_ = 1300) THEN
      Client_SYS.Add_To_Attr('DELIVERY_NOTE_NO', Delivery_Note_API.Get_Delnote_No_For_Shipment(shipment_id_), attr_);
      
      media_code_ := Shipment_Source_Utility_API.Get_Default_Media_Code(shipment_rec_.receiver_id, 'DESADV', shipment_rec_.receiver_type);
      Client_SYS.Add_To_Attr('MEDIA_CODE', media_code_, attr_);
   END IF;
   Client_SYS.Add_To_Attr('END', '', attr_);
   
END Add_Row___;
