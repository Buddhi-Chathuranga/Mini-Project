-----------------------------------------------------------------------------
--
--  Logical unit: InventoryPartsInShipmentInventoryHandling
--  Component:    SHPMNT
--
--  IFS Developer Studio Template Version 3.0
--
-- Date        Sign    History
-- ----------  ------  --------------------------------------------------------------------------
-- 2021-03-03  ErRalk  SC2020R1-12389, Modified Get_Quantity_And_Uom___ to support collection type parameter.
-- 2020-09-18  RasDlk  SC2020R1-9923, Implemented Create_Ord_Pre_Ship_Del_Note___ to prevent the static code analysis error.
-- 2018-11-14  KHVESE  SCUXXW4-4769, Created methods Get_Quantity_And_Uom___, Scrap_Part_In_Shipment_Inventory___.
-- 2018-04-16  KHVESE  SCUXXW4-4829, Added Conditional Compilation check for Order in method Create_Ord_Pre_Ship_Del_Note___
-- 2018-04-16  KHVESE  SCUXXW4-4829, Created.
-----------------------------------------------------------------------------

layer Core;

FUNCTION Get_Quantity_And_Uom___  (
   selection_     IN Text_Arr ) RETURN Quantity_And_Uom_Struc_Rec
IS
   
   quantity_and_uom_struc_rec_   Quantity_And_Uom_Struc_Rec;      
   lu_rec_                       Handle_Source_In_Ship_Inv_Ext%ROWTYPE;
   current_selection_            VARCHAR2(32000);
   source_ref1_                  VARCHAR2(100);
   source_ref2_                  VARCHAR2(100);
   source_ref3_                  VARCHAR2(100);
   source_ref4_                  VARCHAR2(100);
   source_ref_type_db_           VARCHAR2(100);
   contract_                     VARCHAR2(100);
   configuration_id_             VARCHAR2(100);
   part_no_                      VARCHAR2(100);
   location_no_                  VARCHAR2(100);
   lot_batch_no_                 VARCHAR2(100);
   serial_no_                    VARCHAR2(100);
   eng_chg_level_                VARCHAR2(100);
   waiv_dev_rej_no_              VARCHAR2(100);
   pick_list_no_                 VARCHAR2(100);
   delnote_no_exists_            VARCHAR2(5) := 'FALSE';   
   activity_seq_                 NUMBER;
   handling_unit_id_             NUMBER;
   shipment_id_                  NUMBER;
   qty_picked_                   NUMBER;
   catch_qty_picked_             NUMBER;
   inv_uom_                      VARCHAR2(100);
   inv_catch_uom_                VARCHAR2(100);
   index_                        NUMBER := 0;
   
   CURSOR getrec IS
      SELECT * 
        FROM Handle_Source_In_Ship_Inv_Ext 
       WHERE source_ref1 = source_ref1_ 
       AND   NVL(source_ref2,'*') = source_ref2_
       AND   NVL(source_ref3,'*') = source_ref3_
       AND   NVL(source_ref4,'*') = source_ref4_
       AND   source_ref_type_db = source_ref_type_db_
       AND   contract = contract_
       AND   configuration_id = configuration_id_
       AND   part_no = part_no_
       AND   location_no = location_no_
       AND   lot_batch_no = lot_batch_no_
       AND   serial_no = serial_no_
       AND   eng_chg_level = eng_chg_level_
       AND   waiv_dev_rej_no = waiv_dev_rej_no_
       AND   activity_seq = activity_seq_
       AND   handling_unit_id = handling_unit_id_
       AND   shipment_id = shipment_id_
       AND   pick_list_no = pick_list_no_;
   
BEGIN
   FOR i_ IN selection_.first..selection_.last  LOOP
      index_ := index_ + 1;
      current_selection_ := selection_(i_);

      source_ref1_         := Client_SYS.Get_Key_Reference_Value(current_selection_, 'SOURCE_REF1');
      source_ref2_         := Client_SYS.Get_Key_Reference_Value(current_selection_, 'SOURCE_REF2_DB');
      source_ref3_         := Client_SYS.Get_Key_Reference_Value(current_selection_, 'SOURCE_REF3_DB');
      source_ref4_         := Client_SYS.Get_Key_Reference_Value(current_selection_, 'SOURCE_REF4_DB');
      source_ref_type_db_  := Client_SYS.Get_Key_Reference_Value(current_selection_, 'SOURCE_REF_TYPE_DB');
      pick_list_no_        := Client_SYS.Get_Key_Reference_Value(current_selection_, 'PICK_LIST_NO');
      contract_            := Client_SYS.Get_Key_Reference_Value(current_selection_, 'CONTRACT');
      configuration_id_    := Client_SYS.Get_Key_Reference_Value(current_selection_, 'CONFIGURATION_ID');
      part_no_             := Client_SYS.Get_Key_Reference_Value(current_selection_, 'PART_NO');
      location_no_         := Client_SYS.Get_Key_Reference_Value(current_selection_, 'LOCATION_NO');
      lot_batch_no_        := Client_SYS.Get_Key_Reference_Value(current_selection_, 'LOT_BATCH_NO');
      serial_no_           := Client_SYS.Get_Key_Reference_Value(current_selection_, 'SERIAL_NO');
      eng_chg_level_       := Client_SYS.Get_Key_Reference_Value(current_selection_, 'ENG_CHG_LEVEL');
      waiv_dev_rej_no_     := Client_SYS.Get_Key_Reference_Value(current_selection_, 'WAIV_DEV_REJ_NO');
      activity_seq_        := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Key_Reference_Value(current_selection_, 'ACTIVITY_SEQ'));
      handling_unit_id_    := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Key_Reference_Value(current_selection_, 'HANDLING_UNIT_ID'));
      shipment_id_         := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Key_Reference_Value(current_selection_, 'SHIPMENT_ID'));

      OPEN getrec;
      FETCH getrec INTO lu_rec_;
      CLOSE getrec;
      
      IF lu_rec_.delnote_no IS NOT NULL AND source_ref_type_db_ = 'CUSTOMER_ORDER' THEN 
         delnote_no_exists_ := 'TRUE';
      END IF ;

      IF index_ = 1 THEN 
         qty_picked_ := lu_rec_.qty_picked;
         catch_qty_picked_ := lu_rec_.catch_qty;
         inv_uom_ := Inventory_Part_API.Get_Unit_Meas(contract_,part_no_);
         inv_catch_uom_ := Inventory_Part_API.Get_Enabled_Catch_Unit_Meas(contract_,part_no_);
      ELSE 
         qty_picked_ := null;
         catch_qty_picked_ := null;
         inv_uom_ := null;
         inv_catch_uom_ := null;
      END IF;
   END LOOP;
   
   quantity_and_uom_struc_rec_.qty_picked := qty_picked_;      
   quantity_and_uom_struc_rec_.inv_uom := inv_uom_;      
   quantity_and_uom_struc_rec_.catch_qty_picked := catch_qty_picked_;      
   quantity_and_uom_struc_rec_.catch_uom := inv_catch_uom_;      
   quantity_and_uom_struc_rec_.delnote_no_exists := delnote_no_exists_; 
   RETURN quantity_and_uom_struc_rec_;

END Get_Quantity_And_Uom___;


PROCEDURE Scrap_Part_In_Shipment_Inventory___ (
   source_ref1_                  IN  VARCHAR2,
   source_ref2_                  IN  VARCHAR2,
   source_ref3_                  IN  VARCHAR2,
   source_ref4_                  IN  VARCHAR2,
   source_ref_type_              IN  VARCHAR2,
   contract_                     IN  VARCHAR2,
   part_no_                      IN  VARCHAR2,
   location_no_                  IN  VARCHAR2,
   lot_batch_no_                 IN  VARCHAR2,
   serial_no_                    IN  VARCHAR2,
   eng_chg_level_                IN  VARCHAR2,
   waiv_dev_rej_no_              IN  VARCHAR2,
   pick_list_no_                 IN  VARCHAR2,
   activity_seq_                 IN  NUMBER,
   handling_unit_id_             IN  NUMBER,
   qty_picked_                   IN  NUMBER,
   catch_qty_picked_             IN  NUMBER,
   qty_to_scrap_                 IN  NUMBER,
   catch_qty_to_scrap_           IN  NUMBER,
   scrap_cause_                  IN  VARCHAR2,
   scrap_note_                   IN  VARCHAR2,
   shipment_id_                  IN  NUMBER,
   delnote_no_                   IN  VARCHAR2,
   print_pre_ship_del_note_      IN  VARCHAR2,
   info$_                        OUT VARCHAR2 ) 
IS
   info_message_                 VARCHAR2(32000);
   local_qty_to_scrap_           NUMBER ;
   local_catch_qty_to_scrap_     NUMBER ;
BEGIN 
   IF qty_to_scrap_ IS NULL THEN 
      local_qty_to_scrap_        := qty_picked_;
      local_catch_qty_to_scrap_  := catch_qty_picked_;
   ELSE 
      local_qty_to_scrap_        := qty_to_scrap_;
      local_catch_qty_to_scrap_  := catch_qty_to_scrap_;
   END IF;
   
   Handle_Ship_Invent_Utility_API.Scrap_Part_In_Ship_Inv__( info_                => info_message_,
                                                            source_ref1_         => source_ref1_,
                                                            source_ref2_         => nullif(source_ref2_,'*'),
                                                            source_ref3_         => nullif(source_ref3_,'*'),
                                                            source_ref4_         => nullif(source_ref4_,'*'),
                                                            source_ref_type_db_  => source_ref_type_,
                                                            contract_            => contract_,
                                                            part_no_             => part_no_, 
                                                            location_no_         => location_no_,
                                                            lot_batch_no_        => lot_batch_no_, 
                                                            serial_no_           => serial_no_, 
                                                            eng_chg_level_       => eng_chg_level_, 
                                                            waiv_dev_rej_no_     => waiv_dev_rej_no_, 
                                                            pick_list_no_        => pick_list_no_,
                                                            activity_seq_        => Client_SYS.Attr_Value_To_Number(activity_seq_),
                                                            handling_unit_id_    => Client_SYS.Attr_Value_To_Number(handling_unit_id_), 
                                                            qty_to_scrap_        => Client_SYS.Attr_Value_To_Number(local_qty_to_scrap_),
                                                            catch_qty_to_scrap_  => Client_SYS.Attr_Value_To_Number(local_catch_qty_to_scrap_),
                                                            scrap_cause_         => scrap_cause_,
                                                            scrap_note_          => scrap_note_,
                                                            shipment_id_         => Client_SYS.Attr_Value_To_Number(shipment_id_));
                                                            
   IF (print_pre_ship_del_note_ = 'TRUE') AND (delnote_no_ IS NOT NULL) AND (source_ref_type_ = 'CUSTOMER_ORDER') THEN 
      Create_Ord_Pre_Ship_Del_Note___(source_ref1_,location_no_);
   END IF;
   info$_ := info_message_;
END Scrap_Part_In_Shipment_Inventory___;


PROCEDURE Create_Ord_Pre_Ship_Del_Note___ (
   source_ref1_ IN VARCHAR2,
   location_no_ IN VARCHAR2)
IS
BEGIN
	$IF Component_Order_SYS.INSTALLED $THEN      
      User_Allowed_Site_API.Is_Authorized(Customer_Order_API.Get_Contract(source_ref1_));
      Deliver_Customer_Order_API.Create_Ord_Pre_Ship_Del_Note__(source_ref1_, location_no_);
   $ELSE
      NULL;
   $END
END Create_Ord_Pre_Ship_Del_Note___;
