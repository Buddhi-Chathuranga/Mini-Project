-----------------------------------------------------------------------------
--
--  Logical unit: Shipment
--
--  File:         GoodsDeclaration.rdf
--  Version:      Foundation1 2.1.0
--
--  Date    Sign   History
--  ------  ----   -----------------------------------------------------------
--  220503  RasDlk SCDEV-10343, Modified Report_Goods_Declaration method by enabling custom fields for InventoryPart LU in the SHIPMENT_LINE block.
--  200717  AjShLK Bug 152999(SCZ-9246), Modified Report_Goods_Declaration method to support language translation for different languages. 
--  200717         The report language will check for forwarder language, shipment language, user default language respectively. 
--  200117  MeAblk SCSPRING20-270, Added sender and receiver details into report xml.
--  160601  Chgulk STRLOC-472. Added new address fields.
--  160328  MaRalk LIM-6591, Replace the usages of Shipment_Source_Utility_API-get methods for sales_unit_meas, 
--  160328         conv_factor and inverted_conv_factor with corresponding columns of shipment line tab.
--  160323  MaIklk LIM-4552, Changed report table name to SHPMNT_INFO_SERVICES_RPT.
--  160307  MaIklk LIM-4670, Made canges to handle static calls to Order module.
--  160126  RoJalk LIM-5387, Modified get_shipment_lines cursor to check for source ref type. 
--  151202  RoJalk LIM-5178, Rename ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO to SOURCE_REF1,
--  151202         SOURCE_REF2, SOURCE_REF3, SOURCE_REF4 in ShipmentLine and ShipmentLineHandlUnit. 
--  151110  RoJalk LIM-4610, Rename ShipmentOrderLine LU to ShipmentLine.
--  150820  ShKolk Bug 119909, Modified report method to restrict users without site access from printing the report.
--  150624  RasDlk Bug 121318, Modified Report_Goods_Declaration() to enable translations for Custom Field Enumerations.
--  140724  KoDelk Bug 117850, Modified report method to show site document address name as company name. If it's null show name from company header.
--  140421  TiRalk Bug 116444, Modified Footer_Connection_API.Get_Footer_Details by passing language code to fetch footer information according to the correct language.
--  130723  MeAblk Changed the references of Pallet_Type_API and Package_Type_API into Handling_Unit_Type_API.
--  120821  TiRalk Custom Fields enabled in the report.
--  120730  SBalLK Bug 101597, Modified document phrase get method to enhance the code redability and fetch data with location specific.
--  100615  MaEelk Replaced the usage of Company_Distribution_Info_API.Get_Uom_For_Weight with
--  100615         Company_Invent_Info_API.Get_Uom_For_Weight.
--  120521  Mohrlk EDEL-770, Support Document Address Positioning.
--  120515  Mohrlk EDEL-726, Added document footer details 
--  120313  MaEelk Modified the method Report_Goods_declaration to fetch correct weights and UOMs defined in sales part or master part.
--  110727  PraWlk Bug 97733, Removed consecutive ': ' from archive_notes_ and added it prior to the appending value.
--  110719  ChJalk Modified usage of view SALES_PART to SALES_PART_TAB in cursors.
--  110717  ChJalk Modified usage of view CUSTOMER_ORDER_LINE to CUSTOMER_ORDER_LINE_TAB in cursors.
--  110505  ChJalk Modified the report method Report_Goods_Declaration to change the calculation of weight_net to consider the weight defined in configuration specification.
--  110303  PAWELK Removed SHIPMENT view from the code and replaced it with SHIPMENT_TAB.
--  100812  NWeelk Bug 92105, Moved ROW_NO to detail view and added PARENT_ROW_NO and HEADER_ROW_NO to the view. 
--  100803  NWeelk Bug 92105, Added new blocks to DOCUMENT_TEXT and PHRASE.
--  091013  MaHplk Modified codes to get the package_desc_ from basic data translations.
--  090709  IrRalk Bug 82835, Rounded weight to 4 decimals respectively.
--  090820  KiSalk Removed ITEM_NO.
--  090505  SaJjlk Bug 82504, Modified select statement in cursor get_shipment to retrive the customer address information from shipment view.
--  080625  MaRalk Bug 74854, Added RECEIVER_NAME and modified method Report_Goods_Declaration in order to print receiver name.
--  080620  MaRalk Bug 74854, Added SENDER_ADDR_6. Modified method Report_Goods_Declaration in order to correctly print   
--  080620         sender name and other address fields in the report. Converted the sender address and receiver address  
--  080620         to the address presentation format. Removed SENDER_COUNTRY AND RECEIVER_COUNTRY from the view and 
--  080620         modified method Report_Goods_Declaration accordingly.  
--  090615  KiSalk ADR_RID_CLASS and PROPER_SHIPPING_NAME usage changed to use newly added attribute ADR_RID_CLASS_ID and PROPER_SHIPPING_NAME_ID with their connected LUs.
--  081202  AmPalk Introduced UoM conversion to package_weight_ calculation.
--  060509  SaRalk Enlarge Forwarder - Changed variable definitions.
--  050328  SaJjlk Added page footers.
--  050215  IsAnlk Changed document_code to 80 for Goods Declaration. 
--  050201  UsRalk Added DOCUMENT_TEXT support.
--  050120  UsRalk Added support for Non-Inventory Sales Parts and Package Parts.
--  050119  UsRalk Converted to use Shipment instead of Consignment.
--  050118  UsRalk Renamed CustomerNo attribute on Shipment LU to DeliverToCustomerNo.
--  041015  GeKalk Modified to get the package_weight from the package type not from sales part.
--  040716  DaMase Removed references to GoodsDeclaration.qrp and GoodsDeclaration_ltr.qrp
--  040609  NaWilk Bug 44975, Modified FROM clause in view GOODS_DECLARATION_REP.
--  040416  ToBeSe Bug 44010, Corrected Sender Address in XML generation.
--  040315  RoJalk Bug 42813, Changed the UN_NO from NUMBER to VARCHAR2(4).
--  040220  ToBeSe Bug 42219, Report Designer, New layout and adjustments.
--  031016  PrJalk Bug fix 106237, Added procedure Init.
--  021211  GeKaLk Merged bug fixes in 2002-3 SP3.
--  021123  SaRalk Bug 33337, Added code which enables to add different logos for different companies.
--  001123  DaZa   Sender Address is now fetched from consignment instead of company.
--  000919  DaZa   Changed column comment on no_of_packages.
--  000914  FBen   Added UNDEFINED.
--  981208  JoEd   Changed some column comments.
--  981203  JoEd   Changed fetch of sender information (company address).
--  980925  JoEd   Support id 6045. Added ' ' around predefined variable used when
--                 retrieving document texts and/or phrases.
--  980325  DaZa   SID 1709, removed set feedback on/off and set verify on/off.
--  980320  DaZa   Support id 1764, added package_description, removed package_type
--                 from view and report, removed kg from titles and changed
--                 sender_reference to consignment_note_no.
--  980304  DaZa   Added text GOODS_DECLARATION_TITLE.
--  980303  DaZa   Added Archive_API.Set_Language
--  980302  DaZa   Changed forward_agent so it now fetches forward agent name
--                 from enterprise, change view length of forward_agent to 100,
--                 change so notes and countries are written in forward agent
--                 language.
--  980219  DaZa   Added report notes
--  980216  DaZa   Created.
-----------------------------------------------------------------------------

define MODULE             = SHPMNT
define LU                 = Shipment
define PKG                = GOODS_DECLARATION_RPI

define TABLE              = SHPMNT_INFO_SERVICES_RPT
define VIEW_RPV           = SHPMNT_INFO_SERVICES_RPV
define VIEW               = GOODS_DECLARATION_REP
define METHOD             = Report_Goods_Declaration

define GOODSDECLARPHRASE  = 56

define CONTRACT           = S1
define SHIPMENT_ID        = N1
define CONS_NOTE_NO       = S2
define DATE_OF_ISSUE      = D1
define SENDER_NAME        = S3
define SENDER_ADDR_1      = S4
define SENDER_ADDR_2      = S5
define SENDER_ADDR_3      = S6
define SENDER_ADDR_4      = S7
define SENDER_ADDR_5      = S8
define SENDER_ADDR_7      = S28
define SENDER_ADDR_8      = S29
define SENDER_ADDR_9      = S30
define SENDER_ADDR_10     = S31
define RECEIVER_ADDR_1    = S10
define RECEIVER_ADDR_2    = S11
define RECEIVER_ADDR_3    = S12
define RECEIVER_ADDR_4    = S13
define RECEIVER_ADDR_5    = S14
define RECEIVER_ADDR_6    = S15
define RECEIVER_ADDR_7    = S32
define RECEIVER_ADDR_8    = S33
define RECEIVER_ADDR_9    = S34
define RECEIVER_ADDR_10   = S35
define PROPER_SHIPP_NAME  = S17
define ADR_RID_CLASS      = S18
define NO_OF_PACKAGES     = N3
define GROSS_WEIGHT       = N4
define NET_WEIGHT         = N5
define PHRASE             = S20
define PACKAGE_DESC       = S21
define UN_NO              = S22
define DOCUMENT_TEXT      = S23
define PAGE_FOOTER_1      = S24
define PAGE_FOOTER_2      = S25
define PAGE_FOOTER_3      = S26
define PAGE_FOOTER_4      = S27
define SENDER_ADDR_6      = S9
define RECEIVER_NAME      = S16
define SENDER_TYPE_DB       = S36
define SENDER_TYPE          = S37
define SENDER_ID            = S38
define SENDER_DESCRIPTION   = S39
define RECEIVER_TYPE_DB     = S40
define RECEIVER_TYPE        = S41
define RECEIVER_ID          = S42
define RECEIVER_DESCRIPTION = S43


-----------------------------------------------------------------------------
-- PACKAGE SPECIFICATION:
-----------------------------------------------------------------------------

PROMPT Creating &PKG specification

CREATE OR REPLACE PACKAGE &PKG AS

module_  CONSTANT VARCHAR2(6)  := '&MODULE';
lu_name_ CONSTANT VARCHAR2(25) := '&LU';

PROCEDURE &METHOD (
   report_attr_    IN VARCHAR2,
   parameter_attr_ IN VARCHAR2 );

PROCEDURE Init;

END &PKG;
/
SHOW ERROR

-----------------------------------------------------------------------------
-- REPORTS
-----------------------------------------------------------------------------

PROMPT Creating report view &VIEW

CREATE OR REPLACE VIEW &VIEW AS
SELECT H.RESULT_KEY                            RESULT_KEY,
       D.ROW_NO                                ROW_NO,
       H.PARENT_ROW_NO                         PARENT_ROW_NO,
       H.ROW_NO                                HEADER_ROW_NO,
       H.&CONTRACT                             CONTRACT,
       H.&SHIPMENT_ID                          SHIPMENT_ID,
       H.&CONS_NOTE_NO                         CONSIGNMENT_NOTE_NO,
       H.&DATE_OF_ISSUE                        DATE_OF_ISSUE,
       H.&SENDER_TYPE                          SENDER_TYPE, 
       H.&SENDER_TYPE_DB                       SENDER_TYPE_DB,
       H.&SENDER_ID                            SENDER_ID,
       H.&SENDER_DESCRIPTION                   SENDER_DESCRIPTION,
       H.&SENDER_NAME                          SENDER_NAME,
       H.&SENDER_ADDR_1                        SENDER_ADDR_1,
       H.&SENDER_ADDR_2                        SENDER_ADDR_2,
       H.&SENDER_ADDR_3                        SENDER_ADDR_3,
       H.&SENDER_ADDR_4                        SENDER_ADDR_4,
       H.&SENDER_ADDR_5                        SENDER_ADDR_5,
       H.&SENDER_ADDR_6                        SENDER_ADDR_6,
       H.&SENDER_ADDR_7                        SENDER_ADDR_7,
       H.&SENDER_ADDR_8                        SENDER_ADDR_8,
       H.&SENDER_ADDR_9                        SENDER_ADDR_9,
       H.&SENDER_ADDR_10                       SENDER_ADDR_10,
       H.&RECEIVER_TYPE                        RECEIVER_TYPE,
       H.&RECEIVER_TYPE_DB                     RECEIVER_TYPE_DB,
       H.&RECEIVER_ID                          RECEIVER_ID,
       H.&RECEIVER_DESCRIPTION                 RECEIVER_DESCRIPTION,
       H.&RECEIVER_NAME                        RECEIVER_NAME,
       H.&RECEIVER_ADDR_1                      RECEIVER_ADDR_1,
       H.&RECEIVER_ADDR_2                      RECEIVER_ADDR_2,
       H.&RECEIVER_ADDR_3                      RECEIVER_ADDR_3,
       H.&RECEIVER_ADDR_4                      RECEIVER_ADDR_4,
       H.&RECEIVER_ADDR_5                      RECEIVER_ADDR_5,
       H.&RECEIVER_ADDR_6                      RECEIVER_ADDR_6,
       H.&RECEIVER_ADDR_7                      RECEIVER_ADDR_7,
       H.&RECEIVER_ADDR_8                      RECEIVER_ADDR_8,
       H.&RECEIVER_ADDR_9                      RECEIVER_ADDR_9,
       H.&RECEIVER_ADDR_10                     RECEIVER_ADDR_10,
       D.&PHRASE                               PHRASE,
       D.&DOCUMENT_TEXT                        DOCUMENT_TEXT,
       H.&PAGE_FOOTER_1                        PAGE_FOOTER_1,
       H.&PAGE_FOOTER_2                        PAGE_FOOTER_2,
       H.&PAGE_FOOTER_3                        PAGE_FOOTER_3,
       H.&PAGE_FOOTER_4                        PAGE_FOOTER_4,
       D.&UN_NO                                UN_NO,
       D.&PROPER_SHIPP_NAME                    PROPER_SHIPPING_NAME,
       D.&ADR_RID_CLASS                        ADR_RID_CLASS,
       D.&PACKAGE_DESC                         PACKAGE_DESCRIPTION,
       D.&NO_OF_PACKAGES                       NO_OF_PACKAGES,
       D.&GROSS_WEIGHT                         GROSS_WEIGHT,
       D.&NET_WEIGHT                           NET_WEIGHT
FROM  &VIEW_RPV H, &VIEW_RPV D
WHERE D.RESULT_KEY = H.RESULT_KEY
AND   D.PARENT_ROW_NO = H.ROW_NO
WITH  read only;

COMMENT ON TABLE &VIEW IS
   'MODULE=&MODULE^LU=&LU^PROMPT=&LU^';

COMMENT ON COLUMN &VIEW..result_key IS
   'FLAGS=M----^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..row_no IS
   'FLAGS=M----^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..contract IS
   'FLAGS=A----^DATATYPE=STRING(5)/UPPERCASE^PROMPT=Site^REF=Site^';
COMMENT ON COLUMN &VIEW..shipment_id IS
   'FLAGS=A----^DATATYPE=NUMBER^PROMPT=Shipment ID^REF=Shipment^QUERY=Shipment ID:^QFLAGS=MCS--^';
COMMENT ON COLUMN &VIEW..consignment_note_no IS
   'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Consignment Note No:^ITEM_NAME=iConsignmentNoteNo^';
COMMENT ON COLUMN &VIEW..date_of_issue IS
   'FLAGS=A----^DATATYPE=DATE^TITLE=Date Of Issue:^ITEM_NAME=iDateOfIssue^';
COMMENT ON COLUMN &VIEW..sender_type IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Sender Type^ITEM_NAME=iSenderType^';
COMMENT ON COLUMN &VIEW..sender_type_db IS
   'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Sender Type Db^ITEM_NAME=iSenderTypeDb^';
COMMENT ON COLUMN &VIEW..sender_id IS
   'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Sender ID^ITEM_NAME=iSenderId^';
COMMENT ON COLUMN &VIEW..sender_description IS
   'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Sender Description^ITEM_NAME=iSenderDescription^';
COMMENT ON COLUMN &VIEW..sender_name IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Sender:^ITEM_NAME=iSenderName^';
COMMENT ON COLUMN &VIEW..sender_addr_1 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Sender Addr 1^ITEM_NAME=iSenderAddr1^';
COMMENT ON COLUMN &VIEW..sender_addr_2 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Sender Addr 2^ITEM_NAME=iSenderAddr2^';
COMMENT ON COLUMN &VIEW..sender_addr_3 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Sender Addr 3^ITEM_NAME=iSenderAddr3^';
COMMENT ON COLUMN &VIEW..sender_addr_4 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Sender Addr 4^ITEM_NAME=iSenderAddr4^';
COMMENT ON COLUMN &VIEW..sender_addr_5 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Sender Addr 5^ITEM_NAME=iSenderAddr5^';
COMMENT ON COLUMN &VIEW..sender_addr_6 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Sender Addr 6^ITEM_NAME=iSenderAddr6^';
COMMENT ON COLUMN &VIEW..sender_addr_7 IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Sender Addr 7^ITEM_NAME=iSenderAddr7^';
COMMENT ON COLUMN &VIEW..sender_addr_8 IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Sender Addr 8^ITEM_NAME=iSenderAddr8^';
COMMENT ON COLUMN &VIEW..sender_addr_9 IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Sender Addr 9^ITEM_NAME=iSenderAddr9^';
COMMENT ON COLUMN &VIEW..sender_addr_10 IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Sender Addr 10^ITEM_NAME=iSenderAddr10^';
COMMENT ON COLUMN &VIEW..receiver_type IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Receiver Type^ITEM_NAME=iReceiverType^';
COMMENT ON COLUMN &VIEW..receiver_type_db IS
   'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Receiver Type Db^ITEM_NAME=iReceiverTypeDb^';
COMMENT ON COLUMN &VIEW..receiver_id IS
   'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Receiver ID^ITEM_NAME=iReceiverId^';
COMMENT ON COLUMN &VIEW..receiver_description IS
   'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Receiver Description^ITEM_NAME=iReceiverDescription^';
COMMENT ON COLUMN &VIEW..receiver_name IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Receiver Name:^ITEM_NAME=iReceiverName^';  
COMMENT ON COLUMN &VIEW..receiver_addr_1 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Receiver:^ITEM_NAME=iReceiverAddr1^';
COMMENT ON COLUMN &VIEW..receiver_addr_2 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Receiver Addr 2^ITEM_NAME=iReceiverAddr2^';
COMMENT ON COLUMN &VIEW..receiver_addr_3 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Receiver Addr 3^ITEM_NAME=iReceiverAddr3^';
COMMENT ON COLUMN &VIEW..receiver_addr_4 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Receiver Addr 4^ITEM_NAME=iReceiverAddr4^';
COMMENT ON COLUMN &VIEW..receiver_addr_5 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Receiver Addr 5^ITEM_NAME=iReceiverAddr5^';
COMMENT ON COLUMN &VIEW..receiver_addr_6 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Receiver Addr 6^ITEM_NAME=iReceiverAddr6^';
COMMENT ON COLUMN &VIEW..receiver_addr_7 IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Receiver Addr 7^ITEM_NAME=iReceiverAddr7^';
COMMENT ON COLUMN &VIEW..receiver_addr_8 IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Receiver Addr 8^ITEM_NAME=iReceiverAddr8^';
COMMENT ON COLUMN &VIEW..receiver_addr_9 IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Receiver Addr 9^ITEM_NAME=iReceiverAddr9^';
COMMENT ON COLUMN &VIEW..receiver_addr_10 IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Receiver Addr 10^ITEM_NAME=iReceiverAddr10^';
COMMENT ON COLUMN &VIEW..phrase IS
   'FLAGS=A----^DATATYPE=STRING(2000)^TITLE=Phrase^ITEM_NAME=iPhrase^';
COMMENT ON COLUMN &VIEW..document_text IS
   'FLAGS=A----^DATATYPE=STRING(2000)^TITLE=Document Text^ITEM_NAME=iDocumentText^';
COMMENT ON COLUMN &VIEW..page_footer_1 IS
   'FLAGS=A----^DATATYPE=NUMBER^TITLE=Page Footer 1:^ITEM_NAME=iPageFooter1^';
COMMENT ON COLUMN &VIEW..page_footer_2 IS
   'FLAGS=A----^DATATYPE=NUMBER^TITLE=Page Footer 2:^ITEM_NAME=iPageFooter2^';
COMMENT ON COLUMN &VIEW..page_footer_3 IS
   'FLAGS=A----^DATATYPE=NUMBER^TITLE=Page Footer 3:^ITEM_NAME=iPageFooter3^';
COMMENT ON COLUMN &VIEW..page_footer_4 IS
   'FLAGS=A----^DATATYPE=NUMBER^TITLE=Page Footer 4:^ITEM_NAME=iPageFooter4^';
COMMENT ON COLUMN &VIEW..un_no IS
   'FLAGS=A----^DATATYPE=STRING(4)^TITLE=UN No^ITEM_NAME=iUnNo^';
COMMENT ON COLUMN &VIEW..proper_shipping_name IS
   'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Proper Shipping Name^ITEM_NAME=iProperShippingName^';
COMMENT ON COLUMN &VIEW..adr_rid_class IS
   'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Adr Rid Class^ITEM_NAME=iAdrRidClass^';
COMMENT ON COLUMN &VIEW..package_description IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Package Description^ITEM_NAME=iPackageDescription^';
COMMENT ON COLUMN &VIEW..no_of_packages IS
   'FLAGS=A----^DATATYPE=NUMBER^TITLE=No of Items^ITEM_NAME=iNoOfPackages^';
COMMENT ON COLUMN &VIEW..gross_weight IS
   'FLAGS=A----^DATATYPE=NUMBER^TITLE=Gross Weight^ITEM_NAME=iGrossWeight^';
COMMENT ON COLUMN &VIEW..net_weight IS
   'FLAGS=A----^DATATYPE=NUMBER^TITLE=Net Weight^ITEM_NAME=iNetWeight^';

BEGIN
   Report_SYS.Define_Report_('&VIEW', '&MODULE', '&LU', 'Goods Declaration ADR', '&TABLE', '&PKG..&METHOD', 0,'','','','PLSQL1.2','TRUE','Shipment','Delivery Document');
   Report_SYS.Define_Report_Text_( '&VIEW', 'REGULATION', 'ADR' );
   Report_SYS.Define_Report_Text_( '&VIEW', 'ADR_DECLARE_FOOTER',
      'We hereby declare that the goods may be transported on roads and that ' ||
      'the packaging and marking are in accordance with the ADR regulations' );
   Report_SYS.Define_Report_Text_( '&VIEW', 'REGULATION_HEADER', 'Regulation' );
   Report_SYS.Define_Report_Text_( '&VIEW', 'GOODS_DECLARATION_TITLE', 'Goods Declaration ADR' );
   Report_SYS.Define_Report_Text_( '&VIEW', 'PAGE_FOOTER_TITLES', 'Visit Address,Invoice Address,Phone,Fax,Bank Giro,Postal Giro,Tax Number');   
   Report_SYS.Refresh_('&VIEW');
   -- Addition for Custom Fields ------
   Report_Lu_Definition_API.Clear_Custom_Fields_For_Report('&VIEW');
   Report_Lu_Definition_API.Enable_Custom_Fields_for_Lu('&VIEW','Shipment','GOODS_DECLARATION_REP');
   Report_Lu_Definition_API.Enable_Custom_Fields_for_Lu('&VIEW','InventoryPart','GOODS_DECLARATION_REP/SHIPMENT_LINES/SHIPMENT_LINE');
END;
/

COMMIT
/

-----------------------------------------------------------------------------
-- PACKAGE IMPLEMENTATION
-----------------------------------------------------------------------------

PROMPT Creating &PKG implementation

CREATE OR REPLACE PACKAGE BODY &PKG AS

TYPE pagefoot_type IS RECORD(
   val1     VARCHAR2(100),
   val2     VARCHAR2(100),
   val3     VARCHAR2(100),
   val4     VARCHAR2(100),
   val5     VARCHAR2(100),
   val6     VARCHAR2(100),
   val7     VARCHAR2(100)
);

PROCEDURE Split_Pagefooter___(
   pagefoot_rec_ OUT pagefoot_type,
   pagefoot_     IN  VARCHAR2 )
IS
   i_     NUMBER := 1;
   from_  NUMBER := 1;
   to_    NUMBER;
   delim_ VARCHAR2(1) := CHR(9);
   tmp_   VARCHAR2(100);
BEGIN
   to_ := INSTR(pagefoot_, delim_, from_);
   WHILE (to_ > 0) LOOP
      tmp_ := SUBSTR(pagefoot_, from_, to_ - from_);
      from_ := to_ + 1;
      to_ := INSTR(pagefoot_, delim_, from_);
      IF (i_ = 1) THEN
         pagefoot_rec_.val1 := tmp_;
      ELSIF (i_ = 2) THEN
         pagefoot_rec_.val2 := tmp_;
      ELSIF (i_ = 3) THEN
         pagefoot_rec_.val3 := tmp_;
      ELSIF (i_ = 4) THEN
         pagefoot_rec_.val4 := tmp_;
      ELSIF (i_ = 5) THEN
         pagefoot_rec_.val5 := tmp_;
      ELSIF (i_ = 6) THEN
         pagefoot_rec_.val6 := tmp_;
      ELSIF (i_ = 7) THEN
         pagefoot_rec_.val7 := tmp_;
      END IF;
      i_ := i_+1;
   END LOOP;
END Split_Pagefooter___;

PROCEDURE &METHOD (
   report_attr_    IN VARCHAR2,
   parameter_attr_ IN VARCHAR2 )
IS
   result_key_             NUMBER;
   row_no_                 NUMBER := 1;
   parent_row_no_          NUMBER := 0;
   weight_net_             NUMBER;
   package_weight_         NUMBER;
   language_code_          VARCHAR2(4);
   archive_notes_          VARCHAR2(200);
   logotype_               VARCHAR2(100);
   company_name_           VARCHAR2(100);
   shipment_id_            &VIEW..SHIPMENT_ID%TYPE;
   receiver_country_       VARCHAR2(35);
   sender_country_         VARCHAR2(35);
   gross_weight_           &VIEW..GROSS_WEIGHT%TYPE;
   net_weight_             &VIEW..NET_WEIGHT%TYPE;
   phrases_                &VIEW..PHRASE%TYPE;
   package_desc_           &VIEW..PACKAGE_DESCRIPTION%TYPE;

   page_footer_1_          VARCHAR2(2000);
   page_footer_2_          VARCHAR2(2000);
   page_footer_3_          VARCHAR2(2000);
   page_footer_4_          VARCHAR2(2000);
   pagefoot_rec1_          pagefoot_type;
   pagefoot_rec2_          pagefoot_type;
   pagefoot_rec3_          pagefoot_type;
   pagefoot_rec4_          pagefoot_type;

   company_                COMPANY.company%TYPE;
   do_xml_                 BOOLEAN := Report_SYS.Should_Generate_Xml('&VIEW');
   do_rs_                  BOOLEAN := Report_SYS.Should_Generate_Result_Set('&VIEW');
   xml_                    CLOB;
   package_name_           VARCHAR2(100) := 'GOODS_DECLARATION_REP';

   address_rec_            Address_Presentation_API.Address_Rec_Type;
   sender_id_              VARCHAR2(50);
   sender_addr_1_          address_rec_.address1%TYPE;
   sender_addr_2_          address_rec_.address2%TYPE;
   sender_addr_3_          address_rec_.address3%TYPE;
   sender_addr_4_          address_rec_.address4%TYPE;
   sender_addr_5_          address_rec_.address5%TYPE;
   sender_addr_6_          address_rec_.address6%TYPE;
   sender_addr_7_          address_rec_.address7%TYPE;
   sender_addr_8_          address_rec_.address8%TYPE;
   sender_addr_9_          address_rec_.address9%TYPE;
   sender_addr_10_         address_rec_.address10%TYPE;
   receiver_id_            VARCHAR2(50);    
   receiver_addr_1_        address_rec_.address1%TYPE;
   receiver_addr_2_        address_rec_.address2%TYPE;
   receiver_addr_3_        address_rec_.address3%TYPE;
   receiver_addr_4_        address_rec_.address4%TYPE;
   receiver_addr_5_        address_rec_.address5%TYPE;
   receiver_addr_6_        address_rec_.address6%TYPE;
   receiver_addr_7_        address_rec_.address7%TYPE;
   receiver_addr_8_        address_rec_.address8%TYPE;
   receiver_addr_9_        address_rec_.address9%TYPE;
   receiver_addr_10_       address_rec_.address10%TYPE;

   note_text_tab_          Document_Text_API.Note_Text_Table;
   phrase_on_document_tab_ Phrase_On_Document_API.Phrase_Id_Tab;
   address_                VARCHAR2(2000);

   CURSOR get_shipment IS
      SELECT consignment_note_id                                                                  consignment_note_no,
             contract                                                                             contract,
             receiver_type                                                                        receiver_type_db,
             Sender_Receiver_Type_API.Decode(receiver_type)                                       receiver_type,
             receiver_id                                                                          receiver_id,
             Shipment_Source_Utility_API.Get_Receiver_Name(receiver_id, receiver_type)            receiver_description,                                                                 
             receiver_address_name                                                                receiver_name,
             receiver_address1                                                                    receiver_addr_1,
             receiver_address2                                                                    receiver_addr_2,
             receiver_address3                                                                    receiver_addr_7,
             receiver_address4                                                                    receiver_addr_8,
             receiver_address5                                                                    receiver_addr_9,
             receiver_address6                                                                    receiver_addr_10,
             receiver_zip_code                                                                    receiver_addr_3,
             receiver_city                                                                        receiver_addr_4,
             receiver_state                                                                       receiver_addr_5,
             receiver_county                                                                      receiver_addr_6,
             receiver_country                                                                     receiver_country_code,
             forward_agent_id                                                                     forward_agent_id,
             sender_type                                                                          sender_type_db,
             Sender_Receiver_Type_API.Decode(sender_type)                                         sender_type,
             sender_id                                                                            sender_id,
             Shipment_Source_Utility_API.Get_Sender_Name(sender_id, sender_type)                  sender_description,
             sender_name                                                                          sender_name,
             sender_address1                                                                      sender_addr_1,
             sender_address2                                                                      sender_addr_2,
             sender_address3                                                                      sender_addr_7,
             sender_address4                                                                      sender_addr_8,
             sender_address5                                                                      sender_addr_9,
             sender_address6                                                                      sender_addr_10,
             sender_zip_code                                                                      sender_addr_3,
             sender_city                                                                          sender_addr_4,
             sender_state                                                                         sender_addr_5,
             sender_county                                                                        sender_addr_6,
             sender_country                                                                       sender_country_code,
             note_id                                                                              note_id,
             rowkey                                                                               rowkey
      FROM   shipment_tab
      WHERE  shipment_id = shipment_id_;

   CURSOR get_shipment_lines IS
      SELECT sum(sol.inventory_qty) no_of_packages, Shipment_API.Get_Contract(shipment_id) contract,
             sol.source_part_no, sol.inventory_part_no,
             pcia.un_no, pcia.adr_rid_class_id, pcia.proper_shipping_name_id,
             pcia.packaging_material_id, Shipment_Source_Utility_API.Get_Configuration_Id(sol.source_ref1, sol.source_ref2, sol.source_ref3, sol.source_ref4, sol.source_ref_type) configuration_id,sol.handling_unit_type_id,
             sol.source_unit_meas, sol.conv_factor, sol.inverted_conv_factor                        
      FROM   shipment_line_tab sol, part_catalog_invent_attrib pcia
      WHERE  sol.shipment_id = shipment_id_     
      AND    sol.source_part_no  = pcia.part_no
      AND    pcia.adr_rid_class_id IS NOT NULL
      GROUP BY Shipment_API.Get_Contract(shipment_id), sol.source_part_no, sol.inventory_part_no,
               pcia.un_no, pcia.adr_rid_class_id,pcia.proper_shipping_name_id,
             pcia.packaging_material_id, Shipment_Source_Utility_API.Get_Configuration_Id(sol.source_ref1, sol.source_ref2, sol.source_ref3, sol.source_ref4, sol.source_ref_type), sol.handling_unit_type_id,
             sol.source_unit_meas, sol.conv_factor, sol.inverted_conv_factor; 

   shipment_rec_           get_shipment%ROWTYPE;
   sp_package_desc_        &VIEW..PACKAGE_DESCRIPTION%TYPE; 
   weight_                 NUMBER;
   uom_for_weight_         VARCHAR2(30);   
   row_                    NUMBER;
   column_title_           Footer_Connection_API.footer_arr;
   column_text_            Footer_Connection_API.footer_arr;
   f_title_                Footer_Connection_API.t_varchar2;     
   f_text_                 Footer_Connection_API.t_varchar2; 
   company_rec_            Company_Api.Public_Rec; 
   handling_unit_type_rec_ Handling_Unit_type_API.Public_Rec; 
BEGIN
   -- Initialize
   General_SYS.Init_Method(lu_name_, '&PKG', '&METHOD');
   result_key_  := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Item_Value('RESULT_KEY',     report_attr_));
   shipment_id_ := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Item_Value('SHIPMENT_ID', parameter_attr_));

   -- Proceed only if shipment exists.
   Shipment_API.Exist(shipment_id_);

   -- Set report notes displayed in the InfoServices archive
   archive_notes_ := Language_SYS.Translate_Constant(lu_name_, 'SHIPMENTID: Shipment ID');
   archive_notes_ := archive_notes_ || ': '|| shipment_id_;
   Archive_API.Set_Notes(archive_notes_);

   -- Fetching Shipment
   OPEN  get_shipment;
   FETCH get_shipment INTO shipment_rec_;
   CLOSE get_shipment;

   User_Allowed_Site_API.Exist(Fnd_Session_API.Get_Fnd_User(), shipment_rec_.contract);

   -- Use forward agent language if possible
   language_code_ := Iso_Language_API.Encode(Forwarder_Info_API.Get_Default_Language(shipment_rec_.forward_agent_id));
   IF (language_code_ IS NULL) THEN
      language_code_ := Shipment_API.Get_Language_Code(shipment_id_);
   END IF;
   
   IF (language_code_ IS NULL) THEN
      language_code_ := Language_SYS.Get_Language;
   END IF;

   -- Set report language
   Archive_API.Set_Language(language_code_);

   company_       := Site_API.Get_Company(shipment_rec_.contract);
   
   $IF Component_Invoic_SYS.INSTALLED $THEN
      page_footer_1_ := translate(Company_Invoice_Info_API.Get_Footing_Line(company_, 1), '^', chr(9));
      page_footer_2_ := translate(Company_Invoice_Info_API.Get_Footing_Line(company_, 2), '^', chr(9));
      page_footer_3_ := translate(Company_Invoice_Info_API.Get_Footing_Line(company_, 3), '^', chr(9));
      page_footer_4_ := translate(Company_Invoice_Info_API.Get_Footing_Line(company_, 4), '^', chr(9));
   $END

   receiver_country_ := SUBSTR(Iso_Country_API.Get_Description(shipment_rec_.receiver_country_code, Iso_Language_API.Decode(language_code_)), 1, 35);

   sender_country_ := SUBSTR(Iso_Country_API.Get_Description(shipment_rec_.sender_country_code, Iso_Language_API.Decode(language_code_)), 1, 35);
   
   -- Convert the sender address and receiver to the address presentation format.
    address_       := Address_Presentation_API.Format_Address(shipment_rec_.sender_country_code,
                                                              shipment_rec_.sender_addr_1,
                                                              shipment_rec_.sender_addr_2,
                                                              shipment_rec_.sender_addr_7,
                                                              shipment_rec_.sender_addr_8,
                                                              shipment_rec_.sender_addr_9,
                                                              shipment_rec_.sender_addr_10,
                                                              shipment_rec_.sender_addr_4,
                                                              shipment_rec_.sender_addr_6,
                                                              shipment_rec_.sender_addr_5,
                                                              shipment_rec_.sender_addr_3,
                                                              sender_country_);
   address_rec_   := Address_Presentation_API.Format_To_Line(address_);
   
    
   sender_addr_1_ := address_rec_.address1; 
   sender_addr_2_ := address_rec_.address2; 
   sender_addr_3_ := address_rec_.address3;
   sender_addr_4_ := address_rec_.address4;
   sender_addr_5_ := address_rec_.address5;
   sender_addr_6_ := address_rec_.address6;
   sender_addr_7_ := address_rec_.address7; 
   sender_addr_8_ := address_rec_.address8; 
   sender_addr_9_ := address_rec_.address9; 
   sender_addr_10_ := address_rec_.address10; 
   
   
   address_       := Address_Presentation_API.Format_Address(shipment_rec_.receiver_country_code,
                                                             shipment_rec_.receiver_addr_1,
                                                             shipment_rec_.receiver_addr_2,
                                                             shipment_rec_.receiver_addr_7,
                                                             shipment_rec_.receiver_addr_8,
                                                             shipment_rec_.receiver_addr_9,
                                                             shipment_rec_.receiver_addr_10,
                                                             shipment_rec_.receiver_addr_4,
                                                             shipment_rec_.receiver_addr_6,
                                                             shipment_rec_.receiver_addr_5,
                                                             shipment_rec_.receiver_addr_3,
                                                             receiver_country_);
   address_rec_   := Address_Presentation_API.Format_To_Line(address_);
    
    
   receiver_addr_1_ := address_rec_.address1;
   receiver_addr_2_ := address_rec_.address2;
   receiver_addr_3_ := address_rec_.address3;
   receiver_addr_4_ := address_rec_.address4;
   receiver_addr_5_ := address_rec_.address5;
   receiver_addr_6_ := address_rec_.address6;
   receiver_addr_7_ := address_rec_.address7;
   receiver_addr_8_ := address_rec_.address8;
   receiver_addr_9_ := address_rec_.address9;
   receiver_addr_10_ := address_rec_.address10;

   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.Create_Report_Header(xml_, '&VIEW', package_name_);

      Split_Pagefooter___(pagefoot_rec1_, page_footer_1_);
      Split_Pagefooter___(pagefoot_rec2_, page_footer_2_);
      Split_Pagefooter___(pagefoot_rec3_, page_footer_3_);
      Split_Pagefooter___(pagefoot_rec4_, page_footer_4_);

      Xml_Record_Writer_SYS.Add_Element(xml_, 'CONTRACT',            shipment_rec_.contract);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SHIPMENT_ID',         shipment_id_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'CONSIGNMENT_NOTE_NO', shipment_rec_.consignment_note_no);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'DATE_OF_ISSUE',       SYSDATE);  
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_TYPE_DB',      shipment_rec_.sender_type_db);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_TYPE',         shipment_rec_.sender_type);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ID',           shipment_rec_.sender_id);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_DESCRIPTION',  shipment_rec_.sender_description);  
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_NAME',         shipment_rec_.sender_name);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_1',       sender_addr_1_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_2',       sender_addr_2_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_3',       sender_addr_3_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_4',       sender_addr_4_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_5',       sender_addr_5_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_6',       sender_addr_6_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_7',       sender_addr_7_); 
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_8',       sender_addr_8_); 
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_9',       sender_addr_9_); 
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_10',      sender_addr_10_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'RECEIVER_TYPE_DB',    shipment_rec_.receiver_type_db);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'RECEIVER_TYPE',       shipment_rec_.receiver_type);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'RECEIVER_ID',         shipment_rec_.receiver_id);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'RECEIVER_DESCRIPTION',shipment_rec_.receiver_description);        
      Xml_Record_Writer_SYS.Add_Element(xml_, 'RECEIVER_NAME',       shipment_rec_.receiver_name); 
      Xml_Record_Writer_SYS.Add_Element(xml_, 'RECEIVER_ADDR_1',     receiver_addr_1_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'RECEIVER_ADDR_2',     receiver_addr_2_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'RECEIVER_ADDR_3',     receiver_addr_3_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'RECEIVER_ADDR_4',     receiver_addr_4_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'RECEIVER_ADDR_5',     receiver_addr_5_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'RECEIVER_ADDR_6',     receiver_addr_6_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'RECEIVER_ADDR_7',     receiver_addr_7_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'RECEIVER_ADDR_8',     receiver_addr_8_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'RECEIVER_ADDR_9',     receiver_addr_9_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'RECEIVER_ADDR_10',     receiver_addr_10_);
      Xml_Record_Writer_SYS.Add_Custom_Fields(xml_,'Shipment',       shipment_rec_.rowkey, '&VIEW', language_code_);
      
      IF (Footer_Connection_API.Is_Report_Footer_Connected(company_,'&VIEW',shipment_rec_.contract)) THEN
         Xml_Record_Writer_SYS.Add_Element(xml_,'DOCUMENT_FOOTER', 'TRUE');
      ELSE
         Xml_Record_Writer_SYS.Add_Element(xml_,'DOCUMENT_FOOTER', 'FALSE');
      END IF; 
      
      IF (Footer_Connection_API.Is_Report_Footer_Connected(company_,'&VIEW', shipment_rec_.contract)) THEN      
         Footer_Connection_API.Get_Footer_Details(row_, column_title_, column_text_, company_, '&VIEW', shipment_rec_.contract, language_code_);
         Xml_Record_Writer_SYS.Start_Element(xml_, 'DOCUMENT_FOOTERS');
         
         FOR i IN 0..row_ LOOP
             Xml_Record_Writer_SYS.Start_Element(xml_,'DOCUMENT_FOOTER');
             f_title_  := column_title_(i);
             f_text_   := column_text_(i);
             FOR n IN f_title_.FIRST..f_text_.LAST LOOP
                Xml_Record_Writer_SYS.Add_Element(xml_,f_title_(n),f_text_(n));
             END LOOP;
             Xml_Record_Writer_SYS.End_Element(xml_,'DOCUMENT_FOOTER');
         END LOOP;
         Xml_Record_Writer_SYS.End_Element(xml_,'DOCUMENT_FOOTERS');   
      ELSE                                 
         -- Adding footer rows
         Xml_Record_Writer_SYS.Start_Element(xml_, 'PAGE_FOOTER_ROW_1');
         Xml_Record_Writer_SYS.Start_Element(xml_, 'PAGE_FOOTER_ROW');
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_1', pagefoot_rec1_.val1);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_2', pagefoot_rec1_.val2);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_3', pagefoot_rec1_.val3);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_4', pagefoot_rec1_.val4);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_5', pagefoot_rec1_.val5);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_6', pagefoot_rec1_.val6);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_7', pagefoot_rec1_.val7);
         Xml_Record_Writer_SYS.End_Element(xml_, 'PAGE_FOOTER_ROW');
         Xml_Record_Writer_SYS.End_Element(xml_, 'PAGE_FOOTER_ROW_1');
         Xml_Record_Writer_SYS.Start_Element(xml_, 'PAGE_FOOTER_ROW_2');
         Xml_Record_Writer_SYS.Start_Element(xml_, 'PAGE_FOOTER_ROW');
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_1', pagefoot_rec2_.val1);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_2', pagefoot_rec2_.val2);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_3', pagefoot_rec2_.val3);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_4', pagefoot_rec2_.val4);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_5', pagefoot_rec2_.val5);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_6', pagefoot_rec2_.val6);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_7', pagefoot_rec2_.val7);
         Xml_Record_Writer_SYS.End_Element(xml_, 'PAGE_FOOTER_ROW');
         Xml_Record_Writer_SYS.End_Element(xml_, 'PAGE_FOOTER_ROW_2');
         Xml_Record_Writer_SYS.Start_Element(xml_, 'PAGE_FOOTER_ROW_3');
         Xml_Record_Writer_SYS.Start_Element(xml_, 'PAGE_FOOTER_ROW');
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_1', pagefoot_rec3_.val1);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_2', pagefoot_rec3_.val2);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_3', pagefoot_rec3_.val3);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_4', pagefoot_rec3_.val4);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_5', pagefoot_rec3_.val5);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_6', pagefoot_rec3_.val6);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_7', pagefoot_rec3_.val7);
         Xml_Record_Writer_SYS.End_Element(xml_, 'PAGE_FOOTER_ROW');
         Xml_Record_Writer_SYS.End_Element(xml_, 'PAGE_FOOTER_ROW_3');
         Xml_Record_Writer_SYS.Start_Element(xml_, 'PAGE_FOOTER_ROW_4');
         Xml_Record_Writer_SYS.Start_Element(xml_, 'PAGE_FOOTER_ROW');
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_1', pagefoot_rec4_.val1);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_2', pagefoot_rec4_.val2);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_3', pagefoot_rec4_.val3);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_4', pagefoot_rec4_.val4);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_5', pagefoot_rec4_.val5);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_6', pagefoot_rec4_.val6);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'COLUMN_7', pagefoot_rec4_.val7);
         Xml_Record_Writer_SYS.End_Element(xml_, 'PAGE_FOOTER_ROW');
         Xml_Record_Writer_SYS.End_Element(xml_, 'PAGE_FOOTER_ROW_4'); 
      END IF;
   END IF;
   IF (do_rs_) THEN
      INSERT INTO &TABLE
         (result_key,
          row_no,
          parent_row_no,
          &CONTRACT,
          &SHIPMENT_ID,
          &CONS_NOTE_NO,
          &DATE_OF_ISSUE,
          &SENDER_TYPE_DB, 
          &SENDER_TYPE, 
          &SENDER_ID, 
          &SENDER_DESCRIPTION,
          &SENDER_NAME,
          &SENDER_ADDR_1,
          &SENDER_ADDR_2,
          &SENDER_ADDR_3,
          &SENDER_ADDR_4,
          &SENDER_ADDR_5,
          &SENDER_ADDR_6,
          &SENDER_ADDR_7,
          &SENDER_ADDR_8,
          &SENDER_ADDR_9,
          &SENDER_ADDR_10,
          &RECEIVER_TYPE_DB, 
          &RECEIVER_TYPE,
          &RECEIVER_ID, 
          &RECEIVER_DESCRIPTION,
          &RECEIVER_NAME,
          &RECEIVER_ADDR_1,
          &RECEIVER_ADDR_2,
          &RECEIVER_ADDR_3,
          &RECEIVER_ADDR_4,
          &RECEIVER_ADDR_5,
          &RECEIVER_ADDR_6,
          &RECEIVER_ADDR_7,
          &RECEIVER_ADDR_8,
          &RECEIVER_ADDR_9,
          &RECEIVER_ADDR_10,
          &PAGE_FOOTER_1, &PAGE_FOOTER_2, &PAGE_FOOTER_3, &PAGE_FOOTER_4)
      VALUES
         (result_key_,
          row_no_,
          parent_row_no_,
          shipment_rec_.contract,
          shipment_id_,
          shipment_rec_.consignment_note_no,
          SYSDATE,
          shipment_rec_.sender_type_db, 
          shipment_rec_.sender_type,
          shipment_rec_.sender_id, 
          shipment_rec_.sender_description,
          shipment_rec_.sender_name,
          sender_addr_1_,
          sender_addr_2_,
          sender_addr_3_,
          sender_addr_4_,
          sender_addr_5_,
          sender_addr_6_,
          sender_addr_7_,
          sender_addr_8_,
          sender_addr_9_,
          sender_addr_10_,
          shipment_rec_.receiver_type_db, 
          shipment_rec_.receiver_type, 
          shipment_rec_.receiver_id, 
          shipment_rec_.receiver_description,
          shipment_rec_.receiver_name,
          receiver_addr_1_,
          receiver_addr_2_,
          receiver_addr_3_,
          receiver_addr_4_,
          receiver_addr_5_,
          receiver_addr_6_,
          receiver_addr_7_,
          receiver_addr_8_,
          receiver_addr_9_,
          receiver_addr_10_,
          page_footer_1_, page_footer_2_, page_footer_3_, page_footer_4_);
   END IF;

   parent_row_no_ := row_no_;
   row_no_        := row_no_ + 1;

   IF (shipment_rec_.note_id IS NOT NULL) THEN
      IF (do_xml_) THEN
         Xml_Record_Writer_SYS.Start_Element(xml_, 'DOC_TEXTS');
      END IF;
      note_text_tab_ := Document_Text_API.Get_All_Notes_Tab(shipment_rec_.note_id, '80');
            
      IF (note_text_tab_.COUNT > 0) THEN
         FOR n IN note_text_tab_.FIRST..note_text_tab_.LAST LOOP
            IF (do_xml_) THEN
               Xml_Record_Writer_SYS.Start_Element(xml_, 'DOC_TEXT');
               Xml_Record_Writer_SYS.Add_Element(xml_,'DOCUMENT_TEXT', note_text_tab_(n));
               Xml_Record_Writer_SYS.End_Element(xml_, 'DOC_TEXT');
            END IF;
            IF (do_rs_) THEN
               INSERT INTO &TABLE (
                  result_key, row_no, parent_row_no, &DOCUMENT_TEXT)
               VALUES (
                  result_key_, row_no_, parent_row_no_, note_text_tab_(n));
            END IF;  
            row_no_ := row_no_ + 1;
         END LOOP;                  
      END IF; 
      IF (do_xml_) THEN
         Xml_Record_Writer_SYS.End_Element(xml_, 'DOC_TEXTS');
      END IF; 
   END IF;

   IF (language_code_ IS NOT NULL) THEN
      IF (do_xml_) THEN
         Xml_Record_Writer_SYS.Start_Element(xml_, 'DOC_PHRASES');
      END IF;
      
      phrase_on_document_tab_ := Phrase_On_Document_API.Get_Phrase_Id_Tab ('SHIPADR', NULL, shipment_rec_.contract);
      
      IF (phrase_on_document_tab_.COUNT > 0) THEN
         FOR n IN phrase_on_document_tab_.FIRST..phrase_on_document_tab_.LAST LOOP
            phrases_ := Mpccom_Phrase_Text_API.Get_Phrase_Text( phrase_on_document_tab_(n), language_code_);
            IF (phrases_ IS NOT NULL) THEN
               IF (do_xml_) THEN
                  Xml_Record_Writer_SYS.Start_Element(xml_, 'DOC_PHRASE');
                  Xml_Record_Writer_SYS.Add_Element(xml_, 'PHRASE', phrases_ );
                  Xml_Record_Writer_SYS.End_Element(xml_, 'DOC_PHRASE');
               END IF;
               IF (do_rs_) THEN
                  INSERT INTO &TABLE (
                     result_key, row_no, parent_row_no, &PHRASE)
                  VALUES (
                     result_key_, row_no_, parent_row_no_, phrases_);
               row_no_ := row_no_ + 1;
               END IF;
            END IF;
         END LOOP;
      END IF;
      
      IF (do_xml_) THEN
         Xml_Record_Writer_SYS.End_Element(xml_, 'DOC_PHRASES');
      END IF;
   END IF;
         
   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.Start_Element(xml_, 'SHIPMENT_LINES');
   END IF;

   FOR line_rec_ IN get_shipment_lines LOOP
      handling_unit_type_rec_ := Handling_Unit_type_API.Get(line_rec_.handling_unit_type_id);
      sp_package_desc_ := Handling_Unit_type_API.Get_Description(line_rec_.handling_unit_type_id);
      weight_          := handling_unit_type_rec_.tare_weight;
      uom_for_weight_  := handling_unit_type_rec_.uom_for_weight;
      
      package_desc_    := NVL(Packaging_Material_API.Get_Packaging_Material(line_rec_.packaging_material_id, language_code_),
                              sp_package_desc_);      
      weight_net_      := NVL(Part_Weight_Volume_Util_API.Get_Config_Weight_Net(line_rec_.contract, line_rec_.source_part_no, line_rec_.configuration_id, line_rec_.inventory_part_no, line_rec_.source_unit_meas,  line_rec_.conv_factor, line_rec_.inverted_conv_factor, Company_Invent_Info_API.Get_Uom_For_Weight(Site_API.Get_Company(line_rec_.contract))),0);
      package_weight_  := NVL(Iso_Unit_API.Get_Unit_Converted_Quantity (weight_, 
                                                                        uom_for_weight_ ,
                                                                        Company_Invent_Info_API.Get_Uom_For_Weight(Site_API.Get_Company(line_rec_.contract)))
                                                                        , 0);
      gross_weight_    := ROUND(((weight_net_ + package_weight_) * line_rec_.no_of_packages) ,4);
      net_weight_      := ROUND((weight_net_ * line_rec_.no_of_packages), 4);

      IF (do_xml_) THEN
         Xml_Record_Writer_SYS.Start_Element(xml_, 'SHIPMENT_LINE');
         Xml_Record_Writer_SYS.Add_Element(xml_, 'UN_NO',                line_rec_.un_no);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'PROPER_SHIPPING_NAME', Proper_Shipping_Name_Api.Get_Proper_Shipping_Name(line_rec_.proper_shipping_name_id, language_code_));
         Xml_Record_Writer_SYS.Add_Element(xml_, 'ADR_RID_CLASS',        Transport_Hazard_Class_Api.Get_Description(line_rec_.adr_rid_class_id, language_code_));
         Xml_Record_Writer_SYS.Add_Element(xml_, 'PACKAGE_DESCRIPTION',  package_desc_);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'NO_OF_PACKAGES',       line_rec_.no_of_packages);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'GROSS_WEIGHT',         gross_weight_);
         Xml_Record_Writer_SYS.Add_Element(xml_, 'NET_WEIGHT',           net_weight_);
         Xml_Record_Writer_SYS.Add_Custom_Fields(xml_,'InventoryPart', Inventory_Part_API.Get_Objkey(line_rec_.contract, line_rec_.inventory_part_no), '&VIEW', language_code_);
         Xml_Record_Writer_SYS.End_Element(xml_,'SHIPMENT_LINE');
      END IF;
      IF (do_rs_) THEN
         -- insert shipment line
         INSERT INTO &TABLE
            (result_key,
             row_no,
             parent_row_no,
             &UN_NO,
             &PROPER_SHIPP_NAME,
             &ADR_RID_CLASS,
             &PACKAGE_DESC,
             &NO_OF_PACKAGES,
             &GROSS_WEIGHT,
             &NET_WEIGHT)
         VALUES
            (result_key_,
             row_no_,
             parent_row_no_,
             line_rec_.un_no,
             Proper_Shipping_Name_Api.Get_Proper_Shipping_Name(line_rec_.proper_shipping_name_id),
             line_rec_.adr_rid_class_id,
             package_desc_,
             line_rec_.no_of_packages,
             gross_weight_,
             net_weight_);
      END IF;
      row_no_ := row_no_ + 1;
   END LOOP;

   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.End_Element(xml_, 'SHIPMENT_LINES');
   END IF;

   company_rec_ := Company_Api.get(company_);
      
   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.Add_Element(xml_,'ADDRESS_POSITION', NVL(company_rec_.doc_recip_address_pos,'RIGHT'));  
      IF (company_rec_.print_senders_address = 'TRUE') THEN
         Xml_Record_Writer_SYS.Add_Element(xml_, 'DOCUMENT_ADDRESS', Company_Address_API.Get_Address_Form(company_,Site_Discom_Info_API.Get_Document_Address_Id(shipment_rec_.contract,'TRUE'),'TRUE','TRUE',' ') );
      END IF;       
   END IF;
   
   logotype_     := Company_API.Get_Logotype(company_);
   company_name_ := NVL(Company_Address_Deliv_Info_API.Get_Address_Name(company_, Site_Discom_Info_API.Get_Document_Address_Id(shipment_rec_.contract, 'TRUE')), Company_API.Get_Name(company_));

   IF (logotype_ IS NOT NULL ) THEN
      Archive_Variable_API.Set_Object(result_key_, 'rhSysLogo', logotype_);
      Archive_Variable_API.Set_Variable(result_key_, 'companyName', company_name_);
   END IF;

   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.End_Element(xml_,'&VIEW');
      Report_SYS.Finish_Xml_Report('&VIEW',result_key_,xml_);
   END IF;
END &METHOD;

-----------------------------------------------------------------------------
-------------------- FOUNDATION1 METHODS ------------------------------------
-----------------------------------------------------------------------------
-- Init
--   Dummy procedure that can be called at database startup to ensure that
--   this package is loaded into memory for performance reasons only.
-----------------------------------------------------------------------------

PROCEDURE Init
IS
BEGIN
   NULL;
END Init;

END &PKG;
/
SHOW ERROR

----------------------------------------------------------
-- <UNDEFINE_SECTION>
----------------------------------------------------------
-- This section is reserved for undefine statements
-- nothing should be manually written below because
-- that would be overwritten everytime the IFS / Undefine
-- tool is run.  
-- Also do NOT make any changes to the above tag because
-- this will result in duplicated code
----------------------------------------------------------
UNDEFINE MODULE
UNDEFINE LU
UNDEFINE PKG
UNDEFINE TABLE
UNDEFINE VIEW_RPV
UNDEFINE VIEW
UNDEFINE METHOD
UNDEFINE GOODSDECLARPHRASE
UNDEFINE CONTRACT
UNDEFINE SHIPMENT_ID
UNDEFINE CONS_NOTE_NO
UNDEFINE DATE_OF_ISSUE
UNDEFINE SENDER_NAME
UNDEFINE SENDER_ADDR_1
UNDEFINE SENDER_ADDR_2
UNDEFINE SENDER_ADDR_3
UNDEFINE SENDER_ADDR_4
UNDEFINE SENDER_ADDR_5
UNDEFINE SENDER_ADDR_7
UNDEFINE SENDER_ADDR_8
UNDEFINE SENDER_ADDR_9
UNDEFINE SENDER_ADDR_10
UNDEFINE RECEIVER_ADDR_1
UNDEFINE RECEIVER_ADDR_2
UNDEFINE RECEIVER_ADDR_3
UNDEFINE RECEIVER_ADDR_4
UNDEFINE RECEIVER_ADDR_5
UNDEFINE RECEIVER_ADDR_6
UNDEFINE RECEIVER_ADDR_7
UNDEFINE RECEIVER_ADDR_8
UNDEFINE RECEIVER_ADDR_9
UNDEFINE RECEIVER_ADDR_10
UNDEFINE PROPER_SHIPP_NAME
UNDEFINE ADR_RID_CLASS
UNDEFINE ITEM_NO
UNDEFINE NO_OF_PACKAGES
UNDEFINE GROSS_WEIGHT
UNDEFINE NET_WEIGHT
UNDEFINE PHRASE
UNDEFINE PACKAGE_DESC
UNDEFINE UN_NO
UNDEFINE DOCUMENT_TEXT
UNDEFINE PAGE_FOOTER_1
UNDEFINE PAGE_FOOTER_2
UNDEFINE PAGE_FOOTER_3
UNDEFINE PAGE_FOOTER_4
UNDEFINE SENDER_ADDR_6
UNDEFINE RECEIVER_NAME
UNDEFINE SENDER_TYPE_DB
UNDEFINE SENDER_TYPE
UNDEFINE SENDER_ID
UNDEFINE SENDER_DESCRIPTION
UNDEFINE RECEIVER_TYPE_DB
UNDEFINE RECEIVER_TYPE
UNDEFINE RECEIVER_ID
UNDEFINE RECEIVER_DESCRIPTION





-----------------------------------------------------------------------------
-- END
-----------------------------------------------------------------------------

