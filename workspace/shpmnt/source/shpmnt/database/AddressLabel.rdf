-----------------------------------------------------------------------------
--
--  Logical unit: Shipment
--
--  File:         AddressLabel.rdf
--
--  Date    Sign   History
--  ------  ----   -----------------------------------------------------------
--  210127  SBalLK  Bug 157792(SCZ-13284), Changed add custom field call by adding report view as parameter to include/not include
--  210127          custom field according to the report definition.
--  200116  MeAblk  SCSPRING20-269, Added sender_type, sender_id, sender_description, receiver_type, receiver_id, receiver_description into report xml.
--  191115  MeAblk  SCSPRING20-934, Increased the length of receiver_id upto 50 characters.
--  180119  ChJalk  STRSC-15813, Modified the CURSOR get_shipment to select the attributes in the correct order, so that it will generate the addresses correctly.
--  170914  MaRalk  STRSC-12005, Modified method Report_Address_Label to reflect column renaming 
--  170914          Shipment_Tab - Payer_Reference as Freight_Payer_Note.
--  170913  MaRalk  STRSC-11318, Modified method Report_Address_Label to include freight payer,
--  170913          freight payer id and payer note in the header level.
--  170901  RoJalk  STRSC-11274, Called  Shipment_API.Set_Print_Flags.
--  160615  reanpl  STRLOC-481, Added handling of new address attributes
--  160323  MaIklk  LIM-4552, Changed report table name to SHPMNT_INFO_SERVICES_RPT.
--  160229  MaIklk LIM-4669, Handleed staic calls to order modules and made the report generic. 
--  150820  ShKolk Bug 119909, Modified report method to restrict users without site access from printing the report.
--  141208  Chfose PRSC-2977, Added Contract and Contract Description to the report.
--  140619  SeJalk Bug 117509, Enabled custom fields for Shipment LU and fetched rowkey of the 
--  140619         SHIPMENT_TAB and provided facility to fetch custom field values in the Address label report.
--  140428  RoJalk Modified Report_Address_Label method to set the shipment language_code as report language. 
--  120402  MaMalk Replaced SUBSTRB with SUBSTR.
--  110727  PraWlk Bug 97733, Removed consecutive ': ' from archive_notes_ and added it prior to the appending value. 
--  110303  PAWELK Removed the usage of shipment view in cursors and replaced it with tab.
--  100201  NWeelk Bug 86141, Created.
------------------------------------------------------------------------------

DEFINE MODULE             = SHPMNT
DEFINE LU                 = Shipment
DEFINE PKG                = ADDRESS_LABEL_RPI

DEFINE REPTAB             = SHPMNT_INFO_SERVICES_RPT
DEFINE VIEW               = ADDRESS_LABEL_REP
DEFINE VIEW_RPV           = SHPMNT_INFO_SERVICES_RPV

DEFINE REPORTNAME         = "'Report_Address_Label'"

DEFINE METHOD             = Report_Address_Label

DEFINE SHIPMENT_ID          = N1
DEFINE SENDER_NAME          = S1
DEFINE SENDER_ADDR_1        = S2
DEFINE SENDER_ADDR_2        = S3
DEFINE SENDER_ADDR_3        = S4
DEFINE SENDER_ADDR_4        = S5
DEFINE SENDER_ADDR_5        = S6
DEFINE SENDER_ADDR_6        = S7
DEFINE PLACE_OF_DEPARTURE   = S8
DEFINE SENDER_REFERENCE     = S9
DEFINE CONSIGNEE_ADDR_1     = S10
DEFINE CONSIGNEE_ADDR_2     = S11
DEFINE CONSIGNEE_ADDR_3     = S12
DEFINE CONSIGNEE_ADDR_4     = S13
DEFINE CONSIGNEE_ADDR_5     = S14
DEFINE CONSIGNEE_ADDR_6     = S15
DEFINE CONSIGNEE_ADDR_7     = S16
DEFINE PLACE_OF_DESTINATION = S17
DEFINE CONSIGNEE_REFERENCE  = S18
DEFINE FORWARD_AGENT        = S19
DEFINE CONTRACT             = S20
DEFINE CONTRACT_DESCRIPTION = S21
DEFINE SENDER_ADDR_7        = S22
DEFINE SENDER_ADDR_8        = S23
DEFINE SENDER_ADDR_9        = S24
DEFINE SENDER_ADDR_10       = S25
DEFINE CONSIGNEE_ADDR_8     = S26
DEFINE CONSIGNEE_ADDR_9     = S27
DEFINE CONSIGNEE_ADDR_10    = S28
DEFINE CONSIGNEE_ADDR_11    = S29
DEFINE DATE_PRINTED         = D1
DEFINE SHIPMENT_FREIGHT_PAYER    = S30
DEFINE SHIPMENT_FREIGHT_PAYER_ID = S31
DEFINE FREIGHT_PAYER_NOTE   = S32
DEFINE SENDER_TYPE_DB       = S33
DEFINE SENDER_TYPE          = S34
DEFINE SENDER_ID            = S35
DEFINE SENDER_DESCRIPTION   = S36
DEFINE RECEIVER_TYPE_DB     = S37
DEFINE RECEIVER_TYPE        = S38
DEFINE RECEIVER_ID          = S39
DEFINE RECEIVER_DESCRIPTION = S40


-----------------------------------------------------------------------------
-- PACKAGE SPECIFICATION:  ADDRESS_LABEL_RPI
-----------------------------------------------------------------------------

PROMPT Creating &PKG specification

CREATE OR REPLACE PACKAGE &PKG AS

module_  CONSTANT VARCHAR2(6)  := '&MODULE';
lu_name_ CONSTANT VARCHAR2(25) := '&LU';

PROCEDURE &METHOD (
   report_attr_    IN VARCHAR2,
   parameter_attr_ IN VARCHAR2 );

PROCEDURE Init;

END &PKG;
/
SHOW ERROR

-----------------------------------------------------------------------------
-- VIEWS:   ADDRESS_LABEL_REP
-----------------------------------------------------------------------------

PROMPT Creating report view &VIEW

CREATE OR REPLACE VIEW &VIEW AS
SELECT RESULT_KEY                              RESULT_KEY,
       ROW_NO                                  ROW_NO,
       PARENT_ROW_NO                           PARENT_ROW_NO,
       &SHIPMENT_ID                            SHIPMENT_ID,
       &CONTRACT                               CONTRACT,
       &CONTRACT_DESCRIPTION                   CONTRACT_DESCRIPTION,
       &SENDER_TYPE                            SENDER_TYPE, 
       &SENDER_TYPE_DB                         SENDER_TYPE_DB,
       &SENDER_ID                              SENDER_ID,
       &SENDER_DESCRIPTION                     SENDER_DESCRIPTION,
       &SENDER_NAME                            SENDER_NAME,
       &SENDER_ADDR_1                          SENDER_ADDR_1,
       &SENDER_ADDR_2                          SENDER_ADDR_2,
       &SENDER_ADDR_3                          SENDER_ADDR_3,
       &SENDER_ADDR_4                          SENDER_ADDR_4,
       &SENDER_ADDR_5                          SENDER_ADDR_5,
       &SENDER_ADDR_6                          SENDER_ADDR_6,
       &SENDER_ADDR_7                          SENDER_ADDR_7,
       &SENDER_ADDR_8                          SENDER_ADDR_8,
       &SENDER_ADDR_9                          SENDER_ADDR_9,
       &SENDER_ADDR_10                         SENDER_ADDR_10,
       &RECEIVER_TYPE                          RECEIVER_TYPE,
       &RECEIVER_TYPE_DB                       RECEIVER_TYPE_DB,
       &RECEIVER_ID                            RECEIVER_ID,
       &RECEIVER_DESCRIPTION                   RECEIVER_DESCRIPTION,
       &PLACE_OF_DEPARTURE                     PLACE_OF_DEPARTURE,
       &SENDER_REFERENCE                       SENDER_REFERENCE,  
       &CONSIGNEE_ADDR_1                       CONSIGNEE_ADDR_1,
       &CONSIGNEE_ADDR_2                       CONSIGNEE_ADDR_2,
       &CONSIGNEE_ADDR_3                       CONSIGNEE_ADDR_3,
       &CONSIGNEE_ADDR_4                       CONSIGNEE_ADDR_4,
       &CONSIGNEE_ADDR_5                       CONSIGNEE_ADDR_5,
       &CONSIGNEE_ADDR_6                       CONSIGNEE_ADDR_6,
       &CONSIGNEE_ADDR_7                       CONSIGNEE_ADDR_7,
       &CONSIGNEE_ADDR_8                       CONSIGNEE_ADDR_8,
       &CONSIGNEE_ADDR_9                       CONSIGNEE_ADDR_9,
       &CONSIGNEE_ADDR_10                      CONSIGNEE_ADDR_10,
       &CONSIGNEE_ADDR_11                      CONSIGNEE_ADDR_11,
       &PLACE_OF_DESTINATION                   PLACE_OF_DESTINATION,
       &CONSIGNEE_REFERENCE                    CONSIGNEE_REFERENCE,
       &FORWARD_AGENT                          FORWARD_AGENT,
       &DATE_PRINTED                           DATE_PRINTED,
       &SHIPMENT_FREIGHT_PAYER                 SHIPMENT_FREIGHT_PAYER,
       &SHIPMENT_FREIGHT_PAYER_ID              SHIPMENT_FREIGHT_PAYER_ID,
       &FREIGHT_PAYER_NOTE                     FREIGHT_PAYER_NOTE      
FROM  &VIEW_RPV
WITH  read only;

COMMENT ON TABLE &VIEW IS
   'MODULE=&MODULE^LU=&LU^PROMPT=&LU^';

COMMENT ON COLUMN &VIEW..result_key IS
   'FLAGS=M----^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..row_no IS
   'FLAGS=M----^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..parent_row_no IS
   'FLAGS=M----^DATATYPE=NUMBER^';
COMMENT ON COLUMN &VIEW..shipment_id IS
   'FLAGS=A----^DATATYPE=NUMBER^TITLE=Shipment ID:^ITEM_NAME=iShipmentId^QUERY=Shipment ID:^QFLAGS=MCS--^';
COMMENT ON COLUMN &VIEW..contract IS
   'FLAGS=A----^DATATYPE=STRING(5)/UPPERCASE^TITLE=Site:^ITEM_NAME=iContract^';
COMMENT ON COLUMN &VIEW..contract_description IS
'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Site Description:^ITEM_NAME=iContractDescription^';
COMMENT ON COLUMN &VIEW..sender_type IS
'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Sender Type^ITEM_NAME=iSenderType^';
COMMENT ON COLUMN &VIEW..sender_type_db IS
'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Sender Type Db^ITEM_NAME=iSenderTypeDb^';
COMMENT ON COLUMN &VIEW..sender_id IS
'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Sender ID^ITEM_NAME=iSenderId^';
COMMENT ON COLUMN &VIEW..sender_description IS
   'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Sender Description^ITEM_NAME=iSenderDescription^';
COMMENT ON COLUMN &VIEW..sender_name IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=From^ITEM_NAME=iSenderName^';
COMMENT ON COLUMN &VIEW..sender_addr_1 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Sender Addr 1^ITEM_NAME=iSenderAddr1^';
COMMENT ON COLUMN &VIEW..sender_addr_2 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Sender Addr 2^ITEM_NAME=iSenderAddr2^';
COMMENT ON COLUMN &VIEW..sender_addr_3 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Sender Addr 3^ITEM_NAME=iSenderAddr3^';
COMMENT ON COLUMN &VIEW..sender_addr_4 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Sender Addr 4^ITEM_NAME=iSenderAddr4^';
COMMENT ON COLUMN &VIEW..sender_addr_5 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Sender Addr 5^ITEM_NAME=iSenderAddr5^';
COMMENT ON COLUMN &VIEW..sender_addr_6 IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Sender Addr 6^ITEM_NAME=iSenderAddr6^';
COMMENT ON COLUMN &VIEW..sender_addr_7 IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Sender Addr 7^ITEM_NAME=iSenderAddr7^';
COMMENT ON COLUMN &VIEW..sender_addr_8 IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Sender Addr 8^ITEM_NAME=iSenderAddr8^';
COMMENT ON COLUMN &VIEW..sender_addr_9 IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Sender Addr 9^ITEM_NAME=iSenderAddr9^';
COMMENT ON COLUMN &VIEW..sender_addr_10 IS
'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Sender Addr 10^ITEM_NAME=iSenderAddr10^';
COMMENT ON COLUMN &VIEW..receiver_type IS
'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Receiver Type^ITEM_NAME=iReceiverType^';
COMMENT ON COLUMN &VIEW..receiver_type_db IS
'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Receiver Type Db^ITEM_NAME=iReceiverTypeDb^';
COMMENT ON COLUMN &VIEW..receiver_id IS
'FLAGS=A----^DATATYPE=STRING(50)^TITLE=Receiver ID^ITEM_NAME=iReceiverId^';
COMMENT ON COLUMN &VIEW..receiver_description IS
'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Receiver Description^ITEM_NAME=iReceiverDescription^';
COMMENT ON COLUMN &VIEW..place_of_departure IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Place Of Departure:^ITEM_NAME=iPlaceOfDeparture^'; 
COMMENT ON COLUMN &VIEW..sender_reference IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Sender Reference:^ITEM_NAME=iSenderReference^';
COMMENT ON COLUMN &VIEW..consignee_addr_1 IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=To^ITEM_NAME=iConsigneeAddr1^';
COMMENT ON COLUMN &VIEW..consignee_addr_2 IS
   'FLAGS=A----^DATATYPE=STRING(35)^ITEM_NAME=iConsigneeAddr2^';
COMMENT ON COLUMN &VIEW..consignee_addr_3 IS
   'FLAGS=A----^DATATYPE=STRING(35)^ITEM_NAME=iConsigneeAddr3^';
COMMENT ON COLUMN &VIEW..consignee_addr_4 IS
   'FLAGS=A----^DATATYPE=STRING(35)^ITEM_NAME=iConsigneeAddr4^';
COMMENT ON COLUMN &VIEW..consignee_addr_5 IS
   'FLAGS=A----^DATATYPE=STRING(35)^ITEM_NAME=iConsigneeAddr5^';
COMMENT ON COLUMN &VIEW..consignee_addr_6 IS
   'FLAGS=A----^DATATYPE=STRING(35)^ITEM_NAME=iConsigneeAddr6^';
COMMENT ON COLUMN &VIEW..consignee_addr_7 IS
   'FLAGS=A----^DATATYPE=STRING(35)^ITEM_NAME=iConsigneeAddr7^';
COMMENT ON COLUMN &VIEW..consignee_addr_8 IS
   'FLAGS=A----^DATATYPE=STRING(100)^ITEM_NAME=iConsigneeAddr8^';
COMMENT ON COLUMN &VIEW..consignee_addr_9 IS
   'FLAGS=A----^DATATYPE=STRING(100)^ITEM_NAME=iConsigneeAddr9^';
COMMENT ON COLUMN &VIEW..consignee_addr_10 IS
   'FLAGS=A----^DATATYPE=STRING(100)^ITEM_NAME=iConsigneeAddr10^';
COMMENT ON COLUMN &VIEW..consignee_addr_11 IS
   'FLAGS=A----^DATATYPE=STRING(100)^ITEM_NAME=iConsigneeAddr11^';
COMMENT ON COLUMN &VIEW..place_of_destination IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Place Of Destination:^ITEM_NAME=iPlaceOfDestination^';
COMMENT ON COLUMN &VIEW..consignee_reference IS
   'FLAGS=A----^DATATYPE=STRING(35)^TITLE=Consignee Reference:^ITEM_NAME=iConsigneeReference^'; 
COMMENT ON COLUMN &VIEW..forward_agent IS
   'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Forwarder:^ITEM_NAME=iForwardAgent^';
COMMENT ON COLUMN &VIEW..date_printed IS
   'FLAGS=A----^DATATYPE=DATE/DATE^TITLE=Date:^ITEM_NAME=iDatePrinted^';
COMMENT ON COLUMN &VIEW..shipment_freight_payer IS
   'FLAGS=A----^DATATYPE=STRING(100)^TITLE=Shipment Freight Payer:^ITEM_NAME=iShipmentFreightPayer^';
COMMENT ON COLUMN &VIEW..shipment_freight_payer_id IS
   'FLAGS=A----^DATATYPE=STRING(20)^TITLE=Shipment Freight Payer ID:^ITEM_NAME=iShipmentFreightPayerId^'; 
COMMENT ON COLUMN &VIEW..freight_payer_note IS
   'FLAGS=A----^DATATYPE=STRING(200)^TITLE=Freight Payer Note:^ITEM_NAME=iFreightPayerNote^';
BEGIN
   Report_SYS.Define_Report_ ( '&VIEW', '&MODULE', '&LU', 'Report Address Label', '&REPTAB', '&PKG..&METHOD', 1000, NULL, NULL, NULL, 'PLSQL1.2' ,'TRUE','Shipment','Shipment Label');
   Report_SYS.Define_Report_Text_('&VIEW', 'ADDRESS_LABEL_TITLE', 'Address Label');
   Report_SYS.Refresh_('&VIEW');
   
   -- Addition for Custom Fields ------
   Report_Lu_Definition_API.Clear_Custom_Fields_For_Report('&VIEW');
   Report_Lu_Definition_API.Enable_Custom_Fields_for_Lu('&VIEW', 'Shipment', 'ADDRESS_LABEL_REP');
   
END;
/

COMMIT;


-----------------------------------------------------------------------------
-- PACKAGE IMPLEMENTATION: ADDRESS_LABEL_RPI
-- Purpose: Generate address label report.
-----------------------------------------------------------------------------

PROMPT Creating &PKG implementation

CREATE OR REPLACE PACKAGE BODY &PKG AS

PROCEDURE &METHOD (
   report_attr_    IN VARCHAR2,
   parameter_attr_ IN VARCHAR2 )
IS
   result_key_ NUMBER;
   row_no_     NUMBER := 1;

   shipment_id_            &VIEW..SHIPMENT_ID%TYPE;
   date_printed_           &VIEW..DATE_PRINTED%TYPE;
   sender_type_db_         VARCHAR2(20);
   sender_type_            VARCHAR2(100);
   sender_id_              VARCHAR2(50);
   sender_description_     VARCHAR2(200);
   sender_name_            &VIEW..SENDER_NAME%TYPE;
   sender_addr_1_          &VIEW..SENDER_ADDR_1%TYPE;
   sender_addr_2_          &VIEW..SENDER_ADDR_2%TYPE;
   sender_addr_3_          &VIEW..SENDER_ADDR_3%TYPE;
   sender_addr_4_          &VIEW..SENDER_ADDR_4%TYPE;
   sender_addr_5_          &VIEW..SENDER_ADDR_5%TYPE;
   sender_addr_6_          VARCHAR2(35);
   sender_addr_7_          &VIEW..SENDER_ADDR_7%TYPE;
   sender_addr_8_          &VIEW..SENDER_ADDR_8%TYPE;
   sender_addr_9_          &VIEW..SENDER_ADDR_9%TYPE;
   sender_addr_10_         &VIEW..SENDER_ADDR_10%TYPE;
   sender_reference_       &VIEW..SENDER_REFERENCE%TYPE;
   sender_country_code_    VARCHAR2(2);
   sender_country_         VARCHAR2(35);
   contract_               VARCHAR(20);
   contract_description_   VARCHAR(100);
   

   forward_agent_          &VIEW..FORWARD_AGENT%TYPE;
   forward_agent_id_       VARCHAR2(20); 
   shipment_freight_payer_ Shipment_Tab.shipment_freight_payer%TYPE;  
   shipment_freight_payer_id_ Shipment_Tab.shipment_freight_payer_id%TYPE;
   freight_payer_note_     Shipment_Tab.freight_payer_note%TYPE;  
      
   consignee_addr_1_       &VIEW..CONSIGNEE_ADDR_1%TYPE;
   consignee_addr_2_       &VIEW..CONSIGNEE_ADDR_2%TYPE;
   consignee_addr_3_       &VIEW..CONSIGNEE_ADDR_3%TYPE;
   consignee_addr_4_       &VIEW..CONSIGNEE_ADDR_4%TYPE;
   consignee_addr_5_       &VIEW..CONSIGNEE_ADDR_5%TYPE;
   consignee_addr_6_       &VIEW..CONSIGNEE_ADDR_6%TYPE;
   consignee_addr_7_       VARCHAR2(35);
   consignee_addr_8_       &VIEW..CONSIGNEE_ADDR_8%TYPE;
   consignee_addr_9_       &VIEW..CONSIGNEE_ADDR_9%TYPE;
   consignee_addr_10_      &VIEW..CONSIGNEE_ADDR_10%TYPE;
   consignee_addr_11_      &VIEW..CONSIGNEE_ADDR_11%TYPE;
   consignee_country_      VARCHAR2(35);
   consignee_country_code_ VARCHAR2(2);
   receiver_reference_    &VIEW..CONSIGNEE_REFERENCE%TYPE;

   place_of_departure_     &VIEW..PLACE_OF_DEPARTURE%TYPE;
   place_of_destination_   &VIEW..PLACE_OF_DESTINATION%TYPE;

   receiver_id_            VARCHAR2(50);
   bill_addr_no_           VARCHAR2(50);

   language_code_          VARCHAR2(4); 
   shipment_language_code_ SHIPMENT_TAB.LANGUAGE_CODE%TYPE; 
   archive_notes_          VARCHAR2(200); 
   
   address_rec_            Address_Presentation_API.Address_Rec_Type;
   con_address_2_          address_rec_.address1%TYPE;
   con_address_3_          address_rec_.address2%TYPE;
   con_address_4_          address_rec_.address3%TYPE;
   con_address_5_          address_rec_.address4%TYPE;
   con_address_6_          address_rec_.address5%TYPE;
   con_address_7_          address_rec_.address6%TYPE;
   con_address_8_          address_rec_.address7%TYPE;
   con_address_9_          address_rec_.address8%TYPE;
   con_address_10_         address_rec_.address9%TYPE;
   con_address_11_         address_rec_.address10%TYPE;
   sender_address_2_       address_rec_.address1%TYPE;
   sender_address_3_       address_rec_.address2%TYPE;
   sender_address_4_       address_rec_.address3%TYPE;
   sender_address_5_       address_rec_.address4%TYPE;
   sender_address_6_       address_rec_.address5%TYPE;
   sender_address_7_       address_rec_.address6%TYPE;
   sender_address_8_       address_rec_.address7%TYPE;
   sender_address_9_       address_rec_.address8%TYPE;
   sender_address_10_      address_rec_.address9%TYPE;
   sender_address_11_      address_rec_.address10%TYPE;

   do_xml_                 BOOLEAN := Report_SYS.Should_Generate_Xml('&VIEW');
   do_rs_                  BOOLEAN := Report_SYS.Should_Generate_Result_Set('&VIEW');
   xml_                    CLOB;
   package_name_           VARCHAR2(100) := 'ADDRESS_LABEL_REP';
   shipment_rowkey_        VARCHAR2(50);   
   address_                VARCHAR2(2000);
   receiver_type_db_       VARCHAR2(20);
   receiver_type_          VARCHAR2(100);
   receiver_description_   VARCHAR2(200);
                 
   
   CURSOR get_shipment IS
   SELECT forward_agent_id,
          receiver_address_name,
          receiver_address1,
          receiver_address2,
          receiver_address3,
          receiver_address4,
          receiver_address5,
          receiver_address6,
          receiver_city,
          receiver_county,
          receiver_state,
          receiver_zip_code,
          receiver_country,
          sender_reference,
          receiver_reference,
          place_of_departure,
          place_of_destination,
          sender_type,
          sender_id,
          sender_name,
          sender_address1,
          sender_address2,
          sender_address3,
          sender_address4,
          sender_address5,
          sender_address6,
          sender_city,
          sender_county,
          sender_state,
          sender_zip_code,
          sender_country,
          receiver_id,
          receiver_type,
          contract,
          language_code,
          shipment_freight_payer, 
          shipment_freight_payer_id,
          freight_payer_note,
          rowkey
   FROM   shipment_tab
   WHERE  shipment_id = shipment_id_;

   CURSOR get_current_date IS 
   SELECT current_date
   FROM dual;
   
BEGIN
   General_SYS.Init_Method(lu_name_, '&PKG', '&METHOD');
   result_key_  := to_number(Client_SYS.Get_Item_Value('RESULT_KEY', report_attr_));
   shipment_id_ := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Item_Value('SHIPMENT_ID', parameter_attr_));
   
   -- Make sure that consignment exists
   Shipment_API.Exist(shipment_id_);

   -- fetching consignment
   OPEN get_shipment;
   FETCH get_shipment INTO forward_agent_id_,
                           consignee_addr_1_,
                           consignee_addr_2_,
                           consignee_addr_3_,
                           consignee_addr_4_,
                           consignee_addr_5_,
                           consignee_addr_6_,
                           consignee_addr_7_,
                           consignee_addr_8_,
                           consignee_addr_9_,
                           consignee_addr_10_,
                           consignee_addr_11_,
                           consignee_country_code_,
                           sender_reference_,
                           receiver_reference_,
                           place_of_departure_,
                           place_of_destination_,
                           sender_type_db_,
                           sender_id_,
                           sender_name_,
                           sender_addr_1_,
                           sender_addr_2_,
                           sender_addr_3_,
                           sender_addr_4_,
                           sender_addr_5_,
                           sender_addr_6_,
                           sender_addr_7_,
                           sender_addr_8_,
                           sender_addr_9_,
                           sender_addr_10_,
                           sender_country_code_,
                           receiver_id_,
                           receiver_type_db_,
                           contract_,
                           shipment_language_code_,
                           shipment_freight_payer_,
                           shipment_freight_payer_id_,
                           freight_payer_note_,
                           shipment_rowkey_;
   CLOSE get_shipment;

   User_Allowed_Site_API.Exist(Fnd_Session_API.Get_Fnd_User(), contract_);
 
   -- Set report language
   Archive_API.Set_Language(shipment_language_code_);
   -- Set report notes displayed in the InfoServices archive
   archive_notes_ := Language_SYS.Translate_Constant(lu_name_, 'SHIPMENTID: Shipment ID');
   archive_notes_ := archive_notes_ || ': '|| shipment_id_; 
   Archive_API.Set_Notes(archive_notes_);
  
   -- Use forward agent language if possible
   forward_agent_ := Forwarder_Info_API.Get_Name(forward_agent_id_);
   language_code_ := Iso_Language_API.Encode(Forwarder_Info_API.Get_Default_Language(forward_agent_id_));
   IF (language_code_ IS NULL) THEN
      language_code_ := Language_SYS.Get_Language;
      Trace_SYS.Message('No forward agent language');
   END IF;

   sender_country_ := SUBSTR(Iso_Country_API.Get_Description(sender_country_code_, Iso_Language_API.Decode(language_code_)), 1, 35);
   
   -- Convert the sender address to the address presentation format.
   address_       := Address_Presentation_API.Format_Address(sender_country_code_,
                                                             sender_addr_1_,
                                                             sender_addr_2_,
                                                             sender_addr_3_,
                                                             sender_addr_4_,
                                                             sender_addr_5_,
                                                             sender_addr_6_,
                                                             sender_addr_7_,
                                                             sender_addr_8_,
                                                             sender_addr_9_,
                                                             sender_addr_10_,
                                                             sender_country_);
   address_rec_   := Address_Presentation_API.Format_To_Line(address_);
       
   sender_address_2_ := address_rec_.address1;
   sender_address_3_ := address_rec_.address2;
   sender_address_4_ := address_rec_.address3;
   sender_address_5_ := address_rec_.address4;
   sender_address_6_ := address_rec_.address5;
   sender_address_7_ := address_rec_.address6;
   sender_address_8_ := address_rec_.address7;
   sender_address_9_ := address_rec_.address8;
   sender_address_10_ := address_rec_.address9;
   sender_address_11_ := address_rec_.address10;
   
   consignee_country_ := SUBSTR(Iso_Country_API.Get_Description(consignee_country_code_, Iso_Language_API.Decode(language_code_)), 1, 35);
    
   -- Convert the consignee address to the address presentation format.
   address_       := Address_Presentation_API.Format_Address(consignee_country_code_,
                                                             consignee_addr_2_,
                                                             consignee_addr_3_,
                                                             consignee_addr_4_,
                                                             consignee_addr_5_,
                                                             consignee_addr_6_,
                                                             consignee_addr_7_,
                                                             consignee_addr_8_,
                                                             consignee_addr_9_,
                                                             consignee_addr_10_,
                                                             consignee_addr_11_,
                                                             consignee_country_);
   address_rec_   := Address_Presentation_API.Format_To_Line(address_);
   
   con_address_2_ := address_rec_.address1;
   con_address_3_ := address_rec_.address2;
   con_address_4_ := address_rec_.address3;
   con_address_5_ := address_rec_.address4;
   con_address_6_ := address_rec_.address5;
   con_address_7_ := address_rec_.address6;
   con_address_8_ := address_rec_.address7;
   con_address_9_ := address_rec_.address8;
   con_address_10_ := address_rec_.address9;
   con_address_11_ := address_rec_.address10;
    
   bill_addr_no_       := Shipment_Source_Utility_API.Get_Document_Address(receiver_id_, receiver_type_db_);
   receiver_reference_ := SUBSTR(NVL(Shipment_Source_Utility_API.Get_Receiver_Contact_Name(receiver_id_, bill_addr_no_, receiver_reference_, receiver_type_db_), receiver_reference_), 1, 100);
   
   contract_description_ := Site_API.Get_Description(contract_);
   
   sender_type_          := Sender_Receiver_Type_API.Decode(sender_type_db_);
   sender_description_   := Shipment_Source_Utility_API.Get_Sender_Name(sender_id_, sender_type_db_);
   receiver_type_        := Sender_Receiver_Type_API.Decode(receiver_type_db_);
   receiver_description_ := Shipment_Source_Utility_API.Get_Receiver_Name(receiver_id_, receiver_type_db_);
   
   OPEN  get_current_date;
   FETCH get_current_date INTO date_printed_;
   CLOSE get_current_date;

   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.Create_Report_Header(xml_,'&VIEW',package_name_);
   END IF;

   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_TYPE_DB',       sender_type_db_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_TYPE',          sender_type_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ID',            sender_id_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_DESCRIPTION',   sender_description_);  
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_NAME',   sender_name_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_1', sender_address_2_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_2', sender_address_3_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_3', sender_address_4_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_4', sender_address_5_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_5', sender_address_6_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_6', sender_address_7_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_7', sender_address_8_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_8', sender_address_9_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_9', sender_address_10_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_ADDR_10', sender_address_11_);
      
      Xml_Record_Writer_SYS.Add_Element(xml_, 'RECEIVER_TYPE_DB',     receiver_type_db_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'RECEIVER_TYPE',        receiver_type_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'RECEIVER_ID',          receiver_id_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'RECEIVER_DESCRIPTION', receiver_description_);      

      Xml_Record_Writer_SYS.Add_Element(xml_, 'PLACE_OF_DEPARTURE', place_of_departure_);  
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SENDER_REFERENCE', sender_reference_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'DATE_PRINTED', date_printed_);  
      
      Xml_Record_Writer_SYS.Add_Element(xml_, 'CONSIGNEE_ADDR_1', con_address_2_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'CONSIGNEE_ADDR_2', con_address_3_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'CONSIGNEE_ADDR_3', con_address_4_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'CONSIGNEE_ADDR_4', con_address_5_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'CONSIGNEE_ADDR_5', con_address_6_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'CONSIGNEE_ADDR_6', con_address_7_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'CONSIGNEE_ADDR_7', con_address_8_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'CONSIGNEE_ADDR_8', con_address_9_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'CONSIGNEE_ADDR_9', con_address_10_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'CONSIGNEE_ADDR_10', con_address_11_);
      
      Xml_Record_Writer_SYS.Add_Element(xml_, 'PLACE_OF_DESTINATION', place_of_destination_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'CONSIGNEE_REFERENCE', receiver_reference_);

      Xml_Record_Writer_SYS.Add_Element(xml_, 'FORWARD_AGENT', forward_agent_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SHIPMENT_ID', shipment_id_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'CONTRACT', contract_);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'CONTRACT_DESCRIPTION', contract_description_);      
      Xml_Record_Writer_SYS.Add_Element(xml_,'SHIPMENT_FREIGHT_PAYER', Shipment_Payer_API.decode(shipment_freight_payer_)); 
      Xml_Record_Writer_SYS.Add_Element(xml_,'SHIPMENT_FREIGHT_PAYER_ID', shipment_freight_payer_id_);      
      Xml_Record_Writer_SYS.Add_Element(xml_,'FREIGHT_PAYER_NOTE', freight_payer_note_);
      Xml_Record_Writer_SYS.Add_Custom_Fields(xml_, 'Shipment', shipment_rowkey_, '&VIEW');
   END IF;                                                    

   IF (do_rs_) THEN
      INSERT INTO &REPTAB
          (result_key, row_no, parent_row_no, &SHIPMENT_ID,
          &CONTRACT, &CONTRACT_DESCRIPTION, &SENDER_TYPE_DB, &SENDER_TYPE, &SENDER_ID, &SENDER_DESCRIPTION,
          &SENDER_NAME, &SENDER_ADDR_1, &SENDER_ADDR_2,
          &SENDER_ADDR_3, &SENDER_ADDR_4, &SENDER_ADDR_5,
          &SENDER_ADDR_6, &SENDER_ADDR_7, &SENDER_ADDR_8, &SENDER_ADDR_9, &SENDER_ADDR_10, &RECEIVER_TYPE_DB, &RECEIVER_TYPE,
          &RECEIVER_ID, &RECEIVER_DESCRIPTION, &PLACE_OF_DEPARTURE, &SENDER_REFERENCE,
          &DATE_PRINTED, &CONSIGNEE_ADDR_1, &CONSIGNEE_ADDR_2,
          &CONSIGNEE_ADDR_3, &CONSIGNEE_ADDR_4, &CONSIGNEE_ADDR_5,
          &CONSIGNEE_ADDR_6, &CONSIGNEE_ADDR_7, &CONSIGNEE_ADDR_8,
          &CONSIGNEE_ADDR_9, &CONSIGNEE_ADDR_10, &CONSIGNEE_ADDR_11, 
          &PLACE_OF_DESTINATION,
          &CONSIGNEE_REFERENCE, &FORWARD_AGENT, 
          &SHIPMENT_FREIGHT_PAYER, &SHIPMENT_FREIGHT_PAYER_ID, &FREIGHT_PAYER_NOTE)
      VALUES
          (result_key_, row_no_, row_no_, shipment_id_,
          contract_, contract_description_,  sender_type_db_, sender_type_,
          sender_id_, sender_description_,
          sender_name_, sender_address_2_, sender_address_3_, 
          sender_address_4_, sender_address_5_, sender_address_6_, 
          sender_address_7_, sender_address_8_, sender_address_9_, sender_address_10_, sender_address_11_,
          receiver_type_db_, receiver_type_, receiver_id_, 
          receiver_description_,
          place_of_departure_, sender_reference_, 
          date_printed_, consignee_addr_1_, con_address_2_,
          con_address_3_, con_address_4_, con_address_5_,
          con_address_6_, con_address_7_, con_address_8_, con_address_9_, con_address_10_, con_address_11_,
          place_of_destination_,
          receiver_reference_, forward_agent_, 
          Shipment_Payer_API.decode(shipment_freight_payer_), shipment_freight_payer_id_, freight_payer_note_);
   END IF;

   IF (do_xml_) THEN
      Xml_Record_Writer_SYS.End_Element(xml_,'&VIEW');
      Report_SYS.Finish_Xml_Report('&VIEW',result_key_,xml_);
   END IF;
   
   Shipment_API.Set_Print_Flags(shipment_id_, 'ADDRESS_LABEL_PRINTED_DB', Fnd_Boolean_API.DB_TRUE);
   
END &METHOD;

-----------------------------------------------------------------------------
-------------------- FOUNDATION1 METHODS ------------------------------------
-----------------------------------------------------------------------------
-- Init
--   Dummy procedure that can be called at database startup to ensure that
--   this package is loaded into memory for performance reasons only.
-----------------------------------------------------------------------------

PROCEDURE Init
IS
BEGIN
   NULL;
END Init;

END &PKG;
/
SHOW ERROR

UNDEFINE MODULE
UNDEFINE LU
UNDEFINE PKG
UNDEFINE REPTAB
UNDEFINE VIEW
UNDEFINE VIEW_RPV
UNDEFINE REPORTNAME
UNDEFINE METHOD
UNDEFINE SHIPMENT_ID
UNDEFINE CONTRACT
UNDEFINE CONTRACT_DESCRIPTION
UNDEFINE SENDER_NAME
UNDEFINE SENDER_ADDR_1
UNDEFINE SENDER_ADDR_2
UNDEFINE SENDER_ADDR_3
UNDEFINE SENDER_ADDR_4
UNDEFINE SENDER_ADDR_5
UNDEFINE SENDER_ADDR_6
UNDEFINE SENDER_ADDR_7
UNDEFINE SENDER_ADDR_8
UNDEFINE SENDER_ADDR_9
UNDEFINE SENDER_ADDR_10
UNDEFINE PLACE_OF_DEPARTURE
UNDEFINE SENDER_REFERENCE
UNDEFINE CONSIGNEE_ADDR_1
UNDEFINE CONSIGNEE_ADDR_2
UNDEFINE CONSIGNEE_ADDR_3
UNDEFINE CONSIGNEE_ADDR_4
UNDEFINE CONSIGNEE_ADDR_5
UNDEFINE CONSIGNEE_ADDR_6
UNDEFINE CONSIGNEE_ADDR_7
UNDEFINE CONSIGNEE_ADDR_8
UNDEFINE CONSIGNEE_ADDR_9
UNDEFINE CONSIGNEE_ADDR_10
UNDEFINE CONSIGNEE_ADDR_11
UNDEFINE PLACE_OF_DESTINATION
UNDEFINE CONSIGNEE_REFERENCE
UNDEFINE FORWARD_AGENT
UNDEFINE DATE_PRINTED
UNDEFINE SHIPMENT_FREIGHT_PAYER    
UNDEFINE SHIPMENT_FREIGHT_PAYER_ID 
UNDEFINE FREIGHT_PAYER_NOTE
UNDEFINE SENDER_TYPE_DB
UNDEFINE SENDER_TYPE
UNDEFINE SENDER_ID
UNDEFINE SENDER_DESCRIPTION
UNDEFINE RECEIVER_TYPE_DB
UNDEFINE RECEIVER_TYPE
UNDEFINE RECEIVER_ID
UNDEFINE RECEIVER_DESCRIPTION

