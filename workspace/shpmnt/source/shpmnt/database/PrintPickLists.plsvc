-----------------------------------------------------------------------------
--
--  Logical unit: PrintPickList
--  Component:    SHPMNT
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  210514  Aabalk  SCZ-14792, Modified Print_Selected_Pick_Lists___ to handle optional pick list events by calling Pick_Shipment_API.Print_Pick_List__.
--  180755  KHVESE  SCUXXW4-1251, Added Conditional Compilation check for Order in method Print_Selected_Pick_Lists___.
--  180521  MAHPLK  SCUXXW4-1251, Created.
-----------------------------------------------------------------------------

layer Core;

PROCEDURE Print_Selected_Pick_Lists___ (
   full_selection_ IN VARCHAR2 ) 
IS
   selection_                 VARCHAR2(4000) := CONCAT(full_selection_, ';');
   current_selection_         VARCHAR2(200);
   current_pick_list_no_      VARCHAR2(40);
   attr_                      VARCHAR2(32000);
   attr_current_              VARCHAR2(32000);
BEGIN
   Client_SYS.Clear_Attr(attr_);
   -- Get all the selected Pick List numbers to the attr_
   WHILE (INSTR(selection_, ';') > 0) LOOP
      current_selection_  := substr(selection_, 0, INSTR(selection_, ';'));      
      current_pick_list_no_   := Client_SYS.Get_Key_Reference_Value(current_selection_, 'PICK_LIST_NO');
      Client_SYS.Clear_Attr(attr_current_);
      Client_SYS.Add_To_Attr('PICK_LIST_NO', current_pick_list_no_, attr_current_);
      attr_ := attr_ || attr_current_;            
      selection_ := substr(selection_, INSTR(selection_, ';')+1);  
   END LOOP;
   
   IF attr_ IS NOT NULL THEN
      Pick_Shipment_API.Print_Pick_List__(attr_);
   END IF;
END Print_Selected_Pick_Lists___;


FUNCTION Print_Selected_Pick_Lists_Initial_Check___(
	full_selection_ IN VARCHAR2) RETURN BOOLEAN
IS
   selection_           VARCHAR2(4000) := CONCAT(full_selection_, ';');
   current_selection_   VARCHAR2(200);
   pick_list_no_        VARCHAR2(15);
   found_               BOOLEAN := TRUE;
   dummy_               NUMBER;
   
   CURSOR check_record IS
      SELECT 1
      FROM  PRINT_PICK_LIST
      WHERE  pick_list_no =  pick_list_no_;
      
BEGIN
   WHILE (INSTR(selection_, ';') > 0) LOOP
      current_selection_   := substr(selection_, 0, INSTR(selection_, ';'));      
      pick_list_no_        := Client_SYS.Get_Key_Reference_Value(current_selection_, 'PICK_LIST_NO');
      
      OPEN check_record;
      FETCH check_record INTO dummy_;
      IF check_record%NOTFOUND THEN 
         found_ := FALSE;
      END IF ;
      CLOSE check_record;
      EXIT WHEN NOT found_;
      
      selection_ := substr(selection_, INSTR(selection_, ';')+1);  
   END LOOP;
   RETURN found_;
END Print_Selected_Pick_Lists_Initial_Check___;
