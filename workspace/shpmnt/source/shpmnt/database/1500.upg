-----------------------------------------------------------------------------
--  Module : SHPMNT
--
--  Purpose: Upgrade of SHPMNT database objects from PreComponent 'Order'.
--
--  File   : 1500.upg
--
--  IFS Developer Studio Template Version 2.6
--
--  Date    Sign    History
--  ------  ------  --------------------------------------------------------
--  180129  MaRalk  STRSC-9097, Improved the performance of SHIPMENT_LINE_TAB - SHIPMENT_LINE_NO update
--  180129          by removing cursor for loops.  
--  180102  ChJalk  STRSC-11458, Added ORACLE DEFAULT value feature when adding NOT NULL column to a table to improve performance.
--  170914  MaRalk  STRSC-12005, Renamed column PAYER_REFERENCE as FREIGHT_PAYER_NOTE in SHIPMENT_TAB.      
--  170904  MaRalk  STRSC-11317, Renamed column SHIPMENT_PAYER as SHIPMENT_FREIGHT_PAYER in SHIPMENT_TAB. 
--  170830  KhVese  STRSC-11640, Removed obsolete view HANDLING_UNIT_SHIPMENT_UIV.
--  170828  RoJalk  STRSC-11267, Added ADDRESS_LABEL_PRINTED to SHIPMENT_TAB.
--  170815  HaPuLK  STRSC-11383, Fixed issues in SQL Plus (Serial Installation) and formating
--  170731  MaRalk  STRSC-10685, Added SHIPMENT_FREIGHT_PAYER_ID to SHIPMENT_TAB.
--  170711  MaRalk  STRSC-10683, Added table RECEIVER_FRGHT_PAYER_FWDR_TAB.
--  170522  MaRalk  STRSC-6924, Recreate the index SHIPMENT_LINE_IX1 by adding SOURCE_REF4(instead of LINE_ITEM_NO)
--  170522          and SOURCE_REF_TYPE.
--  170428  MaRalk  STRSC-7487, Made the block for updating SHIPMENT_LINE_NO in SHIPMENT_LINE_TAB dynamic
--  170428          as the upgrade uses line_item_no which could have been removed from the clear script.
--  170426  MaEelk  LIM-10676, In order to improve performance, re-wrote the update statement using a PLSQL Block
--  170426          to add CONTRACT information FROM SHIPMENT_TAB TO HANDLING_UNIT_TAB.
--  170322  Chfose  LIM-10517, Renamed Shipment Optional Event PACK_INTO_HANDLING_UNIT to PACK_ACC_TO_HU_CAPACITY.
--  170314  Chfose  LIM-11152, Moved PICK_LIST_FOR_HU_REFRESH from ORDER.
--  170307  Jhalse  LIM-10113, Added Confirm_Shipment_Location and prepared Pick_Inventory_Type for being dropped on Shipment_Type_Tab.
--  161122  MaIklk  LIM-9178, Renamed some columns of SHIPMENT_RESERV_HANDL_UNIT_TAB and added source_ref_type to make it generic.
--  161027  DaZase  LIM-7326, Replaced obsolete optional event PRINT_HANDLING_UNIT_LABELS with PRINT_SHIP_HANDL_UNIT_LABEL in TABLE SHIPMENT_TYPE_OPT_EVENT_TAB
--  160915  RasDlk  Bug 131492, Increased the length of the column S11 in SHPMNT_INFO_SERVICES_RPT table.
--  160824  RasDlk  Bug 131033, Increased the length of the column S16 in SHPMNT_INFO_SERVICES_RPT table.
--  160816  MaIklk  LIM-8300, Added CUSTOMS_VALUE_CURRENCY to SHIPMENT_TAB.
--  160802  MaIklk  LIM-8216, Added CUSTOMS_VALUE column to SHIPMENT_LINE_TAB.
--  160721  MaIklk  LIM-8053, Renamed SHIPMENT_CREATION to SHIPMENT_CREATION_CO in SHIPMENT_TYPE_TAB.
--  160718  MaRalk  LIM-8115, Removed the blocks for adding SHIP_ADDRESS3-6, renaming as RECEIVER_ADDRESS3-6
--  160718          and instead added the block for adding columns RECEIVER_ADDRESS3-6.
--  160704  MaRalk  LIM-7671, Renamed columns in DELIVERY_NOTE_TAB.
--  160630  RoJalk  LIM-7604, Renamed line_item_no, part_no to source_ref4, inventory_part_no in reassign_ship_component_tmp
--  160608  MaIklk  LIM-7442, Renamed CUSTOMER_ORDER_DELIV_TAB to DELIVERY_TAB and moved content from ORDER.
--  160527  MaRalk  LIM-7316, Modified SHIPMENT_LINE_TAB - SOURCE_UNIT_MEAS, CONV_FACTOR, INVERTED_CONV_FACTOR
--  160527          column adding statements as mandatory columns and set a default value.
--  160524  LEPESE  LIM-7474, Copying CONTRACT information from SHIPMENT_TAB to HANDLING_UNIT_TAB.
--  160516  reanpl  STRLOC-65, Added new address columns to SHIPMENT_TAB
--  160511  ShPrlk  Bug 128625, Created the index SHIPMENT_LINE_HANDL_UNIT_IX1 to be applied when searched by handling_unit_id_.
--  160509  MaRalk  LIM-6531, Modified APPLY_FIX_DELIV_FREIGHT, FREIGHT_CHG_INVOICED, SUPPLY_COUNTRY, USE_PRICE_INCL_TAX
--  160509          columns nullable in SHIPMENT_TAB.
--  160510  RoJalk  LIM-7331, Removed the view SHIPMENT_LINE_HANDL_UNIT_UIV since usage is replaced by Shipment_Line_Handl_Unit_Res.
--  160411  MaIklk  LIM-6957, Renamed SHIP_DATE to PLANNED_SHIP_DATE and added PLANNED_DELIVERY_DATE.
--  160405  MaRalk  LIM-6543, Renamed SHIPPER_ID to SENDER_ADDR_ID in SHIPMENT_TAB.
--  160330  RoJalk  STRSC-1827, Moved the code to add ALLOW_PARTIAL_PICKING to SHIPMENT_TYPE_TAB from ORDER to SHPMNT.
--  160328  MaRalk  LIM-6591, Added SOURCE_UNIT_MEAS, CONV_FACTOR and INVERTED_CONV_FACTOR to SHIPMENT_LINE_TAB.
--  160328          Updating values will be done in a post script since customer_order_line_tab is referred.
--  160323  MaIklk  LIM-6596, Added SHPMNT_INFO_SERVICES_RPT.
--  160308  MaRalk  LIM-5871, Modified the logic of Changing the data type of SHIPMENT_LINE_TAB - SOURCE_REF4
--  160308          as VARCHAR2(50) in a way that adding a new column SOURCE_REF4 and update with the values
--  160308          of LINE_ITEM_NO. Made SHIPMENT_LINE_TAB - LINE_ITEM_NO nullable.
--  160308          Moved adding of new columns to SHIPMENT_LINE_TAB into one block.
--  160311  RoJalk  LIM-6303, Reverse the correction to rename SHIPMENT_ORDER_LINE_RPI to SHIPMENT_INE_RPI.
--  160308  MaRalk  LIM-5871, Moved adding of new columns to SHIPMENT_LINE_TAB into one block.
--  160229  RoJalk  LIM-5934, Removed the code to make source ref null in SHIPMENT_LINE_HANDL_UNIT_TAB.
--  160224  RoJalk  LIM-4245, Added unique constraint SHIPMENT_LINE_UX1.
--  160210  HaPulk  LIM-6237, Renamed to 1500.upg.
--  160206  RoJalk  LIM-4246, Added the key column shipment lien no to SHIPMENT_LINE_HANDL_UNIT_TAB, SHIPMENT_LINE_TAB.
--  160203  MaRalk  LIM-6114, Rename SHIP_ADDR_NO to RECEIVER_ADDR_ID in SHIPMENT_TAB.
--  160201  RoJalk  LIM-4246, Added the code to make SHIPMENT_LINE_NO not null in SHIPMENT_LINE_HANDL_UNIT_TAB.
--  160119  RoJalk  LIM-5595, Removed the obsolete view Unclosed_Shipments.
--  160114  RoJalk  LIM-5776, Rename LINE_NO to SHIPMENT_LINE_NO in SHIPMENT_LINE_HANDL_UNIT_TAB.
--  160111  RoJalk  LIM-5712, Rename shipment_qty to onnected_source_qty in SHIPMENT_LINE_TAB.
--  160110  MaRalk  LIM-5776, Added LINE_NO to SHIPMENT_LINE_HANDL_UNIT_TAB.
--  160108  MaIklk  LIM-4231, Added SOURCE_PART_NO, SOURCE_PART_DESCRIPTION, INVENTORY_PART_NO columns to SHIPMENT_LINE_TAB.
--  160106  MaRalk  LIM-5646, Added SHIPMENT_LINE_NO to SHIPMENT_LINE_TAB.
--  151221  MaIklk  LIM-5674, Update the existing value CUST ORDER NUMBER to SOURCE REF 1 in Shipment_Consol_Rule_Tab.
--  151215  MaIklk  Added Source_Ref_Type column to Shipment_tab and updated the existing records.
--  151210  RoJalk  Moved the code block of adding the column HANDLING_UNIT_ID to REASSIGN_SHIP_COMPONENT_TMP from ORDER to SHPMNT.
--  151209  MaIklk  LIM-4060, Rename ORDER_NO to SOURCE_REF1 in Shipment_Tab.
--  151202  RoJalk  LIM-5178, Rename ORDER_NO, LINE_NO, REL_NO, LINE_ITEM_NO to SOURCE_REF1,
--  151202          SOURCE_REF2, SOURCE_REF3, SOURCE_REF4 in ShipmentLine and ShipmentLineHandlUnit.
--  151123  MaIklk  LIM-5007, Added Receiver_Type to Shipment_tab.
--  151109  RoJalk  LIM-4888, Added SOURCE_REF_TYPE to SHIPMENT_LINE_TAB.
--  151120  MaIklk  LIM-4891, Renamed to 100.upg.
--  151119  RoJalk  LIM-4886, Make Shipment Line Generic - Rename SALES_QTY to SHIPMENT_QTY, REVISED_QTY_DUE to INVENTORY_QTY.
--  151116  MaEelk  LIM-4453, Dropped PALLET_ID from REASSIGN_SHIP_COMPONENT_TMP
--  151110  MaIklk  LIM-4059, Renamed deilver_to_customer_no to receiver_id and renamed address fields to sender_xxx and receiver_xxx of shipment table.
-----------------------------------------------------------------------------

SET SERVEROUTPUT ON
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_1');
PROMPT Start upgrading with 1500.upg

------------------------------------------------------------------------------------------
---------------------------- Instructions for upg files ----------------------------------
------------------------------------------------------------------------------------------

-- If possible, everything regarding one table should be placed in one section.
-- If this is not possible, a proper comment about the reason should be added.

-- Each section should be started with a "-----" line and a empty line.
-- This section should then start with a line like: "-- ***** Example_Tab Start *****"
-- and end with a line like:                       "-- ***** Example_Tab End *****"
-- Don't forget UPPER/lower case !

-- Every part inside the section should start with a "PROMPT" line explaining what is done by the block.

-- If the PL/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.

-- Remember ordinary coding standard rules !

-- Don't drop any Table/Column !

-- Don't forget performance when updating large table !

-- No unnecessary blank lines or comments !

-- If possible, use pure SQL commands
-- If possible, try to group several updates together in one statement.

-- For more information refer the "Upgrade Script Standards document and the Performance Guide.

-- Timestamps will be added automatically at the end of the project.


---------------------------------------------------------------------------------------------
--------------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ----------------------
---------------------------------------------------------------------------------------------

-- ***** SHIPMENT_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_2');
PROMPT Renaming columns DELIVER_TO_CUSTOMER_NO, ORDER_NO, freight payer related columns and address related columns in SHIPMENT_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'SHIPMENT_TAB';
BEGIN
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_ID', 'DELIVER_TO_CUSTOMER_NO', TRUE);
   Database_SYS.Rename_Column(table_name_, 'SENDER_ADDR_ID', 'SHIPPER_ID', TRUE);
   Database_SYS.Rename_Column(table_name_, 'SENDER_NAME', 'SHIPPER_NAME', TRUE);
   Database_SYS.Rename_Column(table_name_, 'SENDER_ADDRESS1', 'SHIPPER_ADDRESS1', TRUE);
   Database_SYS.Rename_Column(table_name_, 'SENDER_ADDRESS2', 'SHIPPER_ADDRESS2', TRUE);
   Database_SYS.Rename_Column(table_name_, 'SENDER_ZIP_CODE', 'SHIPPER_ZIP_CODE', TRUE);
   Database_SYS.Rename_Column(table_name_, 'SENDER_CITY', 'SHIPPER_CITY', TRUE);
   Database_SYS.Rename_Column(table_name_, 'SENDER_STATE', 'SHIPPER_STATE', TRUE);
   Database_SYS.Rename_Column(table_name_, 'SENDER_COUNTY', 'SHIPPER_COUNTY', TRUE);
   Database_SYS.Rename_Column(table_name_, 'SENDER_COUNTRY', 'SHIPPER_COUNTRY', TRUE);
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_ADDRESS_NAME', 'CUSTOMER_ADDRESS_NAME', TRUE);
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_ADDRESS1', 'CUSTOMER_ADDRESS1', TRUE);
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_ADDRESS2', 'CUSTOMER_ADDRESS2', TRUE);
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_ZIP_CODE', 'CUSTOMER_ZIP_CODE', TRUE);
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_CITY', 'CUSTOMER_CITY', TRUE);
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_STATE', 'CUSTOMER_STATE', TRUE);
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_COUNTY', 'CUSTOMER_COUNTY', TRUE);
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_COUNTRY', 'CUSTOMER_COUNTRY', TRUE);
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_REFERENCE', 'CONSIGNEE_REFERENCE', TRUE);
   Database_SYS.Rename_Column(table_name_, 'SOURCE_REF1', 'ORDER_NO', TRUE);
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_ADDR_ID', 'SHIP_ADDR_NO', TRUE);
   Database_SYS.Rename_Column(table_name_, 'PLANNED_SHIP_DATE', 'SHIP_DATE', TRUE);
   Database_SYS.Rename_Column(table_name_, 'SHIPMENT_FREIGHT_PAYER', 'SHIPMENT_PAYER', TRUE);  
   Database_SYS.Rename_Column(table_name_, 'FREIGHT_PAYER_NOTE', 'PAYER_REFERENCE', TRUE);      
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_3');
PROMPT Adding RECEIVER_TYPE, SOURCE_REF_TYPE, ACTUAL_SHIP_DATE, PLANNED_DELIVERY_DATE, CUSTOMS_VALUE_CURRENCY 
PROMPT AND SHIPMENT_FREIGHT_PAYER_ID TO SHIPMENT_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'SHIPMENT_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('RECEIVER_TYPE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('SOURCE_REF_TYPE', 'VARCHAR2(4000)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('ACTUAL_SHIP_DATE', 'DATE', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('PLANNED_DELIVERY_DATE', 'DATE', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('CUSTOMS_VALUE_CURRENCY', 'VARCHAR2(3)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('SHIPMENT_FREIGHT_PAYER_ID', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('ADDRESS_LABEL_PRINTED', 'VARCHAR2(5)', 'N', '''FALSE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);  
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_4');
PROMPT Updating valus FOR Receiver_type IN existing records
UPDATE shipment_tab
SET receiver_type = 'CUSTOMER'
WHERE shipment_category = 'NORMAL'
AND RECEIVER_ID IS NOT NULL;
COMMIT;

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_5');
PROMPT Updating valus FOR source_ref_type IN existing records
DECLARE
   stmt_ VARCHAR2(32000);
BEGIN
   IF (Database_SYS.Table_Exist('SHIPMENT_ORDER_LINE_TAB')) THEN
      stmt_ := 'UPDATE shipment_tab s
                  SET s.source_ref_type = ''^CUSTOMER_ORDER^''
                  WHERE s.shipment_category = ''NORMAL''
                  AND s.source_ref_type IS NULL
                  AND EXISTS (SELECT 1 FROM shipment_order_line_tab WHERE shipment_id = s.shipment_id)';
      EXECUTE IMMEDIATE stmt_;
      COMMIT;
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_6');
PROMPT Modify APPLY_FIX_DELIV_FREIGHT, FREIGHT_CHG_INVOICED, SUPPLY_COUNTRY, USE_PRICE_INCL_TAX columns nullable in SHIPMENT_TAB.
DECLARE
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := 'SHIPMENT_TAB';
BEGIN
   column_ := Database_SYS.Set_Column_Values('APPLY_FIX_DELIV_FREIGHT', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('FREIGHT_CHG_INVOICED', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('SUPPLY_COUNTRY', 'VARCHAR2(2)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);

   column_ := Database_SYS.Set_Column_Values('USE_PRICE_INCL_TAX', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_7');
PROMPT Adding new address columns to SHIPMENT_TAB
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'SHIPMENT_TAB';
BEGIN
   Database_SYS.Set_Table_Column(columns_, 'SENDER_ADDRESS3', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SENDER_ADDRESS4', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SENDER_ADDRESS5', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'SENDER_ADDRESS6', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS3', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS4', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS5', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS6', 'VARCHAR2(100)', 'Y');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE);
END;
/

-- ***** SHIPMENT_TAB End *****

------------------------------------------------------------------------------------------

-- ***** SHIPMENT_LINE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_8');
PROMPT Rename SHIPMENT_ORDER_LINE_TAB to SHIPMENT_LINE_TAB, SHIPMENT_ORDER_LINE_PK to SHIPMENT_LINE_PK.
BEGIN
   Database_SYS.Rename_Table('SHIPMENT_ORDER_LINE_TAB',   'SHIPMENT_LINE_TAB',      TRUE,               TRUE, FALSE, FALSE);
   Database_SYS.Rename_Constraint('SHIPMENT_LINE_TAB',    'SHIPMENT_ORDER_LINE_PK', 'SHIPMENT_LINE_PK', TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_9');
PROMPT Renmae the index SHIPMENT_ORDER_LINE_IX1 as SHIPMENT_LINE_IX1.
BEGIN   
   Database_SYS.Rename_Index('SHIPMENT_ORDER_LINE_IX1', 'SHIPMENT_LINE_IX1', TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_10');
PROMPT Renaming columns ORDER_NO, LINE_NO, REL_NO, SALES_QTY, REVISED_QTY_DUE to
PROMPT SOURCE_REF1, SOURCE_REF2, SOURCE_REF3, SHIPMENT_QTY, INVENTORY_QTY in SHIPMENT_LINE_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'SHIPMENT_LINE_TAB';
BEGIN
   Database_SYS.Rename_Column(table_name_, 'SOURCE_REF1',          'ORDER_NO',        TRUE);
   Database_SYS.Rename_Column(table_name_, 'SOURCE_REF2',          'LINE_NO',         TRUE);
   Database_SYS.Rename_Column(table_name_, 'SOURCE_REF3',          'REL_NO',          TRUE);
   Database_SYS.Rename_Column(table_name_, 'CONNECTED_SOURCE_QTY', 'SALES_QTY',       TRUE);
   Database_SYS.Rename_Column(table_name_, 'INVENTORY_QTY',        'REVISED_QTY_DUE', TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_11');
PROMPT change the length of SOURCE_REF1, SOURCE_REF2, SOURCE_REF3 to 50 in SHIPMENT_LINE_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'SHIPMENT_LINE_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('SOURCE_REF1', 'VARCHAR2(50)', 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('SOURCE_REF2', 'VARCHAR2(50)', 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('SOURCE_REF3', 'VARCHAR2(50)', 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_12');
PROMPT Adding SHIPMENT_LINE_NO, SOURCE_REF_TYPE. SOURCE_PART_NO, SOURCE_PART_DESCRIPTION, INVENTORY_PART_NO, SOURCE_REF4, CUSTOMS_VALUE columns to SHIPMENT_LINE_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'SHIPMENT_LINE_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('SHIPMENT_LINE_NO', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('SOURCE_REF_TYPE', 'VARCHAR2(20)', 'N', '''CUSTOMER_ORDER''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('SOURCE_PART_NO', 'VARCHAR2(25)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('SOURCE_PART_DESCRIPTION', 'VARCHAR2(200)', 'N', '''DUMMY_UPG''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('INVENTORY_PART_NO', 'VARCHAR2(25)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('SOURCE_REF4', 'VARCHAR2(50)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('SOURCE_UNIT_MEAS', 'VARCHAR2(10)', 'N', '''DUMMY_UPG''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('CONV_FACTOR', 'NUMBER', 'N', '-99999', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('INVERTED_CONV_FACTOR', 'NUMBER', 'N', '-99999', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('CUSTOMS_VALUE', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/


exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_13');
PROMPT Updating SHIPMENT_LINE_NO in SHIPMENT_LINE_TAB

DECLARE
   stmt_ VARCHAR2(32000);
BEGIN
   IF (Database_SYS.Column_Exist('SHIPMENT_LINE_TAB', 'LINE_ITEM_NO')) THEN      
      stmt_ := 'DECLARE
                  CURSOR get_shipment_line IS
                     SELECT shipment_id, 
                            source_ref1,
                            source_ref2,
                            source_ref3,             
                            line_item_no,
                            rowid  obj_id
                     FROM shipment_line_tab 
                     WHERE shipment_line_no IS NULL       
                     ORDER BY shipment_id, source_ref1, source_ref2, source_ref3, line_item_no;

                  shipment_line_rec_      get_shipment_line%ROWTYPE;
                  shipment_prev_line_rec_ get_shipment_line%ROWTYPE;
                  shipment_line_no_       NUMBER;

                BEGIN
                   OPEN get_shipment_line;
                   FETCH get_shipment_line INTO shipment_line_rec_;
                   WHILE (get_shipment_line%FOUND) LOOP
                      shipment_prev_line_rec_ := shipment_line_rec_;
                      shipment_line_no_ := 1;      
                      WHILE ((shipment_prev_line_rec_.shipment_id = shipment_line_rec_.shipment_id) AND (get_shipment_line%FOUND)) LOOP  
                         UPDATE shipment_line_tab sl
                         SET    sl.shipment_line_no = shipment_line_no_
                         WHERE  sl.rowid = shipment_line_rec_.obj_id;
                         shipment_line_no_ := shipment_line_no_ + 1; 
                         FETCH get_shipment_line INTO shipment_line_rec_;
                      END LOOP;      
                   END LOOP;
                   CLOSE get_shipment_line;
                   COMMIT;
                END;';
      EXECUTE IMMEDIATE stmt_;
      COMMIT;
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_14');
PROMPT Modify column SHIPMENT_LINE_NO as mandatory in SHIPMENT_LINE_TAB
DECLARE
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := 'SHIPMENT_LINE_TAB';
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('SHIPMENT_LINE_NO', 'NUMBER', 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_,  TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_15');
PROMPT Updating SOURCE_REF4 in SHIPMENT_LINE_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'SHIPMENT_LINE_TAB';
   column_     Database_SYS.ColRec;
   stmt_      VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Column_Exist(table_name_, 'LINE_ITEM_NO') AND Database_SYS.Get_Column_Nullable(table_name_, 'LINE_ITEM_NO') = 'N') THEN
      stmt_:= 'UPDATE SHIPMENT_LINE_TAB
               SET SOURCE_REF4 = LINE_ITEM_NO
               WHERE SOURCE_REF4 IS NULL';
      EXECUTE IMMEDIATE stmt_;
      COMMIT;
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_16');
PROMPT Recreating the primary key constraint SHIPMENT_LINE_PK now including SHIPMENT_LINE_NO
DECLARE
   index_name_ VARCHAR2(30) := 'SHIPMENT_LINE_PK';
   table_name_ VARCHAR2(30) := 'SHIPMENT_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_ID');
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_LINE_NO');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_17');
PROMPT Modify source_ref1, 2, 3 columns and line_item_no nullable in SHIPMENT_LINE_TAB
DECLARE
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := 'SHIPMENT_LINE_TAB';
BEGIN
   column_ := Database_SYS.Set_Column_Values('SOURCE_REF1', 'VARCHAR2(50)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('SOURCE_REF2', 'VARCHAR2(50)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('SOURCE_REF3', 'VARCHAR2(50)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('LINE_ITEM_NO', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_18');
PROMPT Creating SHIPMENT_LINE_UX1 index
DECLARE
   index_name_ VARCHAR2(30) := 'SHIPMENT_LINE_UX1';
   table_name_ VARCHAR2(30) := 'SHIPMENT_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_ID');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF1');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF2');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF3');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF4');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF_TYPE');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_PART_DESCRIPTION');

   Database_SYS.Create_Index(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_19');
PROMPT Recreating index SHIPMENT_LINE_IX1 by adding SOURCE_REF4 and SOURCE_REF_TYPE
DECLARE
   index_name_ VARCHAR2(30) := 'SHIPMENT_LINE_IX1';
   table_name_ VARCHAR2(30) := 'SHIPMENT_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF1');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF2');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF3');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF4');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF_TYPE');
   Database_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** SHIPMENT_LINE_TAB End *****

------------------------------------------------------------------------------------------

-- ***** SHIPMENT_LINE_HANDL_UNIT_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_20');
PROMPT Adding SHIPMENT_LINE_NO to SHIPMENT_LINE_HANDL_UNIT_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'SHIPMENT_LINE_HANDL_UNIT_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('SHIPMENT_LINE_NO', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_21');
PROMPT Updating SHIPMENT_LINE_NO in SHIPMENT_LINE_HANDL_UNIT_TAB
DECLARE
   stmt_        VARCHAR2(2000);
   table_name_  VARCHAR2(30) := 'SHIPMENT_LINE_HANDL_UNIT_TAB';
BEGIN
   IF (Database_SYS.Column_Exist(table_name_, 'ORDER_NO') AND Database_SYS.Get_Column_Nullable(table_name_, 'ORDER_NO') = 'N') THEN
      stmt_ := 'UPDATE shipment_line_handl_unit_tab slhu
                SET shipment_line_no = (SELECT shipment_line_no
                                        FROM shipment_line_tab sl
                                        WHERE sl.shipment_id = slhu.shipment_id
                                        AND sl.source_ref1 = slhu.order_no
                                        AND sl.source_ref2 = slhu.line_no
                                        AND sl.source_ref3 = slhu.rel_no
                                        AND sl.source_ref4 = slhu.line_item_no)
                WHERE shipment_line_no IS NULL';
      EXECUTE IMMEDIATE stmt_;
   END IF;
   COMMIT;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_22');
PROMPT Modify column SHIPMENT_LINE_NO as mandatory in SHIPMENT_LINE_HANDL_UNIT_TAB
DECLARE
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := 'SHIPMENT_LINE_HANDL_UNIT_TAB';
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('SHIPMENT_LINE_NO', 'NUMBER', 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_,  TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_23');
PROMPT Recreating the primary key constraint SHIPMENT_LINE_HANDL_UNIT_PK now including SHIPMENT_LINE_NO
DECLARE
   index_name_ VARCHAR2(30) := 'SHIPMENT_LINE_HANDL_UNIT_PK';
   table_name_ VARCHAR2(30) := 'SHIPMENT_LINE_HANDL_UNIT_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_ID');
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_LINE_NO');
   Database_SYS.Set_Table_Column(columns_, 'HANDLING_UNIT_ID');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_24');
PROMPT Modify order_no, line_no, rel_no, line_item_no columns to be null in SHIPMENT_LINE_HANDL_UNIT_TAB
DECLARE
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := 'SHIPMENT_LINE_HANDL_UNIT_TAB';
BEGIN
   column_ := Database_SYS.Set_Column_Values('ORDER_NO', 'VARCHAR2(12)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('LINE_NO', 'VARCHAR2(4)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('REL_NO', 'VARCHAR2(4)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('LINE_ITEM_NO', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
END;
/

-- ***** SHIPMENT_LINE_HANDL_UNIT_TAB End *****

------------------------------------------------------------------------------------------

-- ***** SHIPMENT_TYPE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_25');
PROMPT Adding allow_partial_picking to shipment_type_tab
DECLARE
   column_ Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('ALLOW_PARTIAL_PICKING', 'VARCHAR2(5)', 'N', '''FALSE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column('SHIPMENT_TYPE_TAB', 'A', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_26');
PROMPT Renaming SHIPMENT_CREATION column in SHIPMENT_TYPE_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'SHIPMENT_TYPE_TAB';
BEGIN
   Database_SYS.Rename_Column(table_name_, 'SHIPMENT_CREATION_CO', 'SHIPMENT_CREATION', TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_27');
PROMPT Prepare FOR dropping COLUMN PICK_INVENTORY_TYPE AND Adding COLUMN CONFIRM_SHIPMENT_LOCATION TO SHIPMENT_TYPE_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'SHIPMENT_TYPE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF(Database_SYS.Column_Exist(table_name_,'PICK_INVENTORY_TYPE')) THEN
      Database_SYS.Alter_Table_Column(table_name_, 'M', Database_SYS.Set_Column_Values('PICK_INVENTORY_TYPE', nullable_ => 'Y'), TRUE);
   END IF;
   
   Database_SYS.Alter_Table_Column(table_name_, 'A', Database_SYS.Set_Column_Values('CONFIRM_SHIPMENT_LOCATION', 'VARCHAR2(5)', 'N', '''TRUE''', keep_default_ => 'N'), TRUE);
END;
/

-- ***** SHIPMENT_TYPE_TAB End *****

------------------------------------------------------------------------------------------

-- ***** REASSIGN_SHIP_COMPONENT_TMP Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_28');
PROMPT Dropping PALLET_ID from REASSIGN_SHIP_COMPONENT_TMP
BEGIN
   Database_SYS.Alter_Table_Column('REASSIGN_SHIP_COMPONENT_TMP', 'DROP COLUMN', Database_SYS.Set_Column_Values ('PALLET_ID'));
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_29');
PROMPT Adding HANDLING_UNIT_ID TO REASSIGN_SHIP_COMPONENT_TMP
DECLARE
   table_name_ VARCHAR2(30) := 'REASSIGN_SHIP_COMPONENT_TMP';
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('HANDLING_UNIT_ID', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_30');
PROMPT Renaming columns LINE_ITEM_NO, PART_NO to SOURCE_REF4, INVENTORY_PART_NO in REASSIGN_SHIP_COMPONENT_TMP
DECLARE
   table_name_ VARCHAR2(30) := 'REASSIGN_SHIP_COMPONENT_TMP';
BEGIN
   Database_SYS.Rename_Column(table_name_, 'SOURCE_REF4',       'LINE_ITEM_NO', TRUE);
   Database_SYS.Rename_Column(table_name_, 'INVENTORY_PART_NO', 'PART_NO',      TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_31');
PROMPT change the type of SOURCE_REF4 to VARCHAR2 in REASSIGN_SHIP_COMPONENT_TMP
DECLARE
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := 'REASSIGN_SHIP_COMPONENT_TMP';
BEGIN
   column_ := Database_SYS.Set_Column_Values('SOURCE_REF4', 'VARCHAR2(50)', 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
END;
/

-- ***** REASSIGN_SHIP_COMPONENT_TMP End *****

------------------------------------------------------------------------------------------

-- ***** SHIPMENT_CONSOL_RULE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_32');
PROMPT Updating value of consol param IN existing records

UPDATE shipment_consol_rule_tab
SET consol_param = 'SOURCE REF 1'
WHERE consol_param = 'CUST ORDER NUMBER';
COMMIT;

-- ***** SHIPMENT_CONSOL_RULE_TAB End *****


------------------------------------------------------------------------------------------

-- ***** SHPMNT_INFO_SERVICES_RPT Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_33');
PROMPT creating report TABLE SHPMNT_INFO_SERVICES_RPT.

DECLARE
   table_name_ VARCHAR2(30) := 'SHPMNT_INFO_SERVICES_RPT';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'RESULT_KEY', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROW_NO', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'PARENT_ROW_NO', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'S1', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S2', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S3', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S4', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S5', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S6', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S7', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S8', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S9', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S10', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S11', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S12', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S13', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S14', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S15', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S16', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S17', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S18', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S19', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S20', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S21', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S22', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S23', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S24', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S25', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S26', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S27', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S28', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S29', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S30', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S31', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S32', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S33', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S34', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S35', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S36', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S37', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S38', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S39', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S40', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S41', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S42', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S43', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S44', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S45', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S46', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S47', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S48', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S49', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S50', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S51', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S52', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S53', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S54', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S55', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S56', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S57', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S58', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S59', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S60', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S61', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S62', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S63', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S64', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S65', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S66', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S67', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S68', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S69', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S70', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S71', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S72', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S73', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S74', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S75', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S76', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S77', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S78', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S79', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S80', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S81', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S82', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S83', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S84', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S85', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S86', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S87', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S88', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S89', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S90', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S91', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S92', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S93', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S94', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S95', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S96', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S97', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S98', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S99', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S100', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S101', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S102', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S103', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S104', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S105', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S106', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S107', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S108', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S109', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S110', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S111', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S112', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S113', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S114', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S115', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S116', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S117', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S118', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S119', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'S120', 'VARCHAR2(2000)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N1', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N2', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N3', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N4', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N5', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N6', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N7', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N8', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N9', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N10', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N11', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N12', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N13', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N14', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N15', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N16', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N17', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N18', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N19', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N20', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N21', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N22', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N23', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N24', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N25', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N26', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N27', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N28', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N29', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N30', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N31', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N32', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N33', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N34', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N35', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N36', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N37', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N38', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N39', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N40', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N41', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N42', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N43', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N44', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N45', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N46', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N47', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N48', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N49', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'N50', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D1', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D2', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D3', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D4', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D5', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D6', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D7', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D8', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D9', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D10', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D11', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D12', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D13', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D14', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'D15', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'Y');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_REPORT_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_34');
PROMPT Creating SHPMNT_INFO_SERVICES_RPT_PK index
DECLARE
   index_name_ VARCHAR2(30) := 'SHPMNT_INFO_SERVICES_RPT_PK';
   table_name_ VARCHAR2(30) := 'SHPMNT_INFO_SERVICES_RPT';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'RESULT_KEY');
   Database_SYS.Set_Table_Column(columns_, 'PARENT_ROW_NO');
   Database_SYS.Set_Table_Column(columns_, 'ROW_NO');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_REPORT_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_35');
PROMPT Creating SHPMNT_INFO_SERVICES_RPV view

CREATE OR REPLACE VIEW SHPMNT_INFO_SERVICES_RPV AS
SELECT *
  FROM SHPMNT_INFO_SERVICES_RPT T
 WHERE EXISTS (SELECT 1
                 FROM ALLOWED_REPORT A
                WHERE A.RESULT_KEY = T.RESULT_KEY)
  WITH READ ONLY;
/
COMMENT ON TABLE SHPMNT_INFO_SERVICES_RPV
   IS 'LU=Shipment^PROMPT=Shipment Info Services^MODULE=SHPMNT^';
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_36');
PROMPT Increasing the length of the column S11 and S16 in SHPMNT_INFO_SERVICES_RPT
DECLARE
   column_       Database_SYS.ColRec;
   table_name_   VARCHAR2(30) := 'SHPMNT_INFO_SERVICES_RPT';
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('S16', 'VARCHAR2(4000)');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('S11', 'VARCHAR2(4000)');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
END;
/

-- ***** SHPMNT_INFO_SERVICES_RPT End *****

------------------------------------------------------------------------------------------

-- ***** SHIPMENT_LINE_HANDL_UNIT_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_37');
PROMPT Creating INDEX SHIPMENT_LINE_HANDL_UNIT_IX1 ON SHIPMENT_LINE_HANDL_UNIT_TAB.
BEGIN
   DECLARE
      columns_    Database_SYS.ColumnTabType;
      table_name_ VARCHAR2(35) := 'SHIPMENT_LINE_HANDL_UNIT_TAB';
      index_name_ VARCHAR2(35) := 'SHIPMENT_LINE_HANDL_UNIT_IX1';
   BEGIN
      Database_SYS.Set_Table_Column( columns_, 'HANDLING_UNIT_ID');
      Database_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   END;
END;
/

-- ***** SHIPMENT_LINE_HANDL_UNIT_TAB End *****

------------------------------------------------------------------------------------------

-- ***** HANDLING_UNIT_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_38');
PROMPT Adding CONTRACT information FROM SHIPMENT_TAB TO HANDLING_UNIT_TAB.
BEGIN
   IF (Database_SYS.Column_Exist('HANDLING_UNIT_TAB', 'CONTRACT')) THEN
      EXECUTE IMMEDIATE
         'DECLARE
             CURSOR get_shipment IS
                SELECT contract, shipment_id
                  FROM shipment_tab s
                 WHERE s.shipment_id IN (SELECT DISTINCT hu.shipment_id
                                           FROM handling_unit_tab hu
                                          WHERE hu.shipment_id IS NOT NULL);
          BEGIN
             FOR rec_ in get_shipment LOOP
                UPDATE handling_unit_tab
                   SET contract = rec_.contract
                 WHERE shipment_id = rec_.shipment_id
                   AND contract IS NULL ;
             END LOOP;
             COMMIT;
          END;';
    END IF;
END;
/

-- ***** HANDLING_UNIT_TAB End *****

------------------------------------------------------------------------------------------

-- ***** DELIVERY_NOTE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_39');
PROMPT Rename CUSTOMER_ORDER_DELIV_NOTE_TAB to DELIVERY_NOTE_TAB.
BEGIN
   Database_SYS.Rename_Table('CUSTOMER_ORDER_DELIV_NOTE_TAB', 'DELIVERY_NOTE_TAB', TRUE, TRUE, FALSE, FALSE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_40');
PROMPT Adding columns RECEIVER_ADDRESS3-6 to DELIVERY_NOTE_TAB
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'DELIVERY_NOTE_TAB';
BEGIN
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS3', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS4', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS5', 'VARCHAR2(100)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ADDRESS6', 'VARCHAR2(100)', 'Y');
   Database_SYS.Alter_Table(table_name_, columns_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_41');
PROMPT Renaming columns in DELIVERY_NOTE_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'DELIVERY_NOTE_TAB';
BEGIN
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_ID', 'DELIVER_TO_CUSTOMER_NO', TRUE);
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_ADDR_ID', 'SHIP_ADDR_NO', TRUE);
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_ADDRESS1', 'SHIP_ADDRESS1', TRUE);
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_ADDRESS2', 'SHIP_ADDRESS2', TRUE);
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_CITY', 'SHIP_CITY', TRUE);
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_COUNTY', 'SHIP_COUNTY', TRUE);
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_STATE', 'SHIP_STATE', TRUE);
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_ZIP_CODE', 'SHIP_ZIP_CODE', TRUE);
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_COUNTRY', 'COUNTRY_CODE', TRUE);
   Database_SYS.Rename_Column(table_name_, 'RECEIVER_ADDR_NAME', 'ADDR_1', TRUE);
   Database_SYS.Rename_Column(table_name_, 'SINGLE_OCC_ADDR_FLAG', 'ADDR_FLAG', TRUE);
   Database_SYS.Rename_Column(table_name_, 'SOURCE_LANG_CODE', 'ORIGINATING_CO_LANG_CODE', TRUE);
END;
/

-- ***** DELIVERY_NOTE_TAB End *****

------------------------------------------------------------------------------------------

-- ***** SHIPMENT_TYPE_OPT_EVENT_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_42');
PROMPT Replacing obsolete optional event PRINT_HANDLING_UNIT_LABELS WITH PRINT_SHIP_HANDL_UNIT_LABEL IN TABLE SHIPMENT_TYPE_OPT_EVENT_TAB.

BEGIN
   UPDATE shipment_type_opt_event_tab
   SET optional_event = 'PRINT_SHIP_HANDL_UNIT_LABEL'
   WHERE optional_event = 'PRINT_HANDLING_UNIT_LABELS';
   COMMIT;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_43');
PROMPT Renaming optional event PACK_INTO_HANDLING_UNIT WITH PACK_ACC_TO_HU_CAPACITY IN TABLE SHIPMENT_TYPE_OPT_EVENT_TAB.

BEGIN
   UPDATE shipment_type_opt_event_tab
   SET optional_event = 'PACK_ACC_TO_HU_CAPACITY'
   WHERE optional_event = 'PACK_INTO_HANDLING_UNIT';
   COMMIT;
END;
/

-- ***** SHIPMENT_TYPE_OPT_EVENT_TAB End *****

------------------------------------------------------------------------------------------

-- ***** SHIPMENT_RESERV_HANDL_UNIT_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_44');
PROMPT RENAME ORDER_NO, LINE_NO, REL_NO COLUMNS OF SHIPMENT_RESERV_HANDL_UNIT_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'SHIPMENT_RESERV_HANDL_UNIT_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   Database_SYS.Rename_Column(table_name_, 'SOURCE_REF1', 'ORDER_NO', TRUE);
   Database_SYS.Rename_Column(table_name_, 'SOURCE_REF2', 'LINE_NO', TRUE);
   Database_SYS.Rename_Column(table_name_, 'SOURCE_REF3', 'REL_NO', TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_45');
PROMPT CHANGE THE length OF SOURCE_REF1, SOURCE_REF2, SOURCE_REF3 AND SOURCE_REF4
DECLARE
   table_name_    VARCHAR2(30) := 'SHIPMENT_RESERV_HANDL_UNIT_TAB';
   column_        Database_SYS.ColRec;
   stmt_          VARCHAR2(2000);
BEGIN
   column_ := Database_SYS.Set_Column_Values('SOURCE_REF1', 'VARCHAR2(50)', 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('SOURCE_REF2', 'VARCHAR2(50)', 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('SOURCE_REF3', 'VARCHAR2(50)', 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   IF (NOT Database_SYS.Column_Exist(table_name_, 'SOURCE_REF4')) THEN
      column_ := Database_SYS.Set_Column_Values('SOURCE_REF4', 'VARCHAR2(50)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

      stmt_:= 'UPDATE SHIPMENT_RESERV_HANDL_UNIT_TAB
               SET SOURCE_REF4 = LINE_ITEM_NO
               WHERE SOURCE_REF4 IS NULL';
      EXECUTE IMMEDIATE stmt_;
      COMMIT;
      column_ := Database_SYS.Set_Column_Values('SOURCE_REF4', 'VARCHAR2(50)', 'N');
      Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_46');
PROMPT Adding columns HANDLING_UNIT_ID, SHIPMENT_LINE_NO, SOURCE_REF_TYPE to SHIPMENT_RESERV_HANDL_UNIT_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'SHIPMENT_RESERV_HANDL_UNIT_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('RESERV_HANDLING_UNIT_ID', 'NUMBER', 'N', '0', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('SHIPMENT_LINE_NO', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_47');
PROMPT Updating HANDLING_UNIT_ID of the SHIPMENT_RESERV_HANDL_UNIT_TAB using the HANDLING_UNIT_IDs FROM THE HANDLING_UNIT_TAB that match the PALLET_IDs
DECLARE
   stmt_       VARCHAR2(2000);
   table_name_ VARCHAR2(30) := 'SHIPMENT_RESERV_HANDL_UNIT_TAB';
BEGIN
   IF (Database_SYS.Column_Exist(table_name_, 'PALLET_ID')) THEN
      stmt_ := 'UPDATE shipment_reserv_handl_unit_tab
                SET  reserv_handling_unit_id = (SELECT handling_unit_id
                                          FROM handling_unit_tab
                                          WHERE alt_handling_unit_label_id = pallet_id || '' - UPGRADE'')
                WHERE pallet_id              != ''*''
                AND   reserv_handling_unit_id = 0';
      EXECUTE IMMEDIATE stmt_;
   END IF;
   COMMIT;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_48');
PROMPT Updating SHIPMENT_LINE_NO in SHIPMENT_RESERV_HANDL_UNIT_TAB
BEGIN
   UPDATE shipment_reserv_handl_unit_tab srhu
   SET shipment_line_no = (SELECT shipment_line_no
                           FROM shipment_line_tab sl
                           WHERE sl.shipment_id = srhu.shipment_id
                           AND sl.source_ref1 = srhu.source_ref1
                           AND sl.source_ref2 = srhu.source_ref2
                           AND sl.source_ref3 = srhu.source_ref3
                           AND sl.source_ref4 = srhu.source_ref4
                           AND sl.source_ref_type = 'CUSTOMER_ORDER')
   WHERE shipment_line_no IS NULL;
   COMMIT;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_49');
PROMPT Modify column SHIPMENT_LINE_NO as mandatory in SHIPMENT_RESERV_HANDL_UNIT_TAB
DECLARE
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := 'SHIPMENT_RESERV_HANDL_UNIT_TAB';
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('SHIPMENT_LINE_NO', 'NUMBER', 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_,  TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_50');
PROMPT Recreating the primary key constraint SHIPMENT_RESERV_HANDL_UNIT_PK
DECLARE
   index_name_ VARCHAR2(30) := 'SHIPMENT_RESERV_HANDL_UNIT_PK';
   table_name_ VARCHAR2(30) := 'SHIPMENT_RESERV_HANDL_UNIT_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF1');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF2');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF3');
   Database_SYS.Set_Table_Column(columns_, 'SOURCE_REF4');
   Database_SYS.Set_Table_Column(columns_, 'CONTRACT');
   Database_SYS.Set_Table_Column(columns_, 'PART_NO');
   Database_SYS.Set_Table_Column(columns_, 'LOCATION_NO');
   Database_SYS.Set_Table_Column(columns_, 'LOT_BATCH_NO');
   Database_SYS.Set_Table_Column(columns_, 'SERIAL_NO');
   Database_SYS.Set_Table_Column(columns_, 'ENG_CHG_LEVEL');
   Database_SYS.Set_Table_Column(columns_, 'WAIV_DEV_REJ_NO');
   Database_SYS.Set_Table_Column(columns_, 'ACTIVITY_SEQ');
   Database_SYS.Set_Table_Column(columns_, 'RESERV_HANDLING_UNIT_ID');
   Database_SYS.Set_Table_Column(columns_, 'CONFIGURATION_ID');
   Database_SYS.Set_Table_Column(columns_, 'PICK_LIST_NO');
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_ID');
   Database_SYS.Set_Table_Column(columns_, 'SHIPMENT_LINE_NO');
   Database_SYS.Set_Table_Column(columns_, 'HANDLING_UNIT_ID');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_51');
PROMPT Making PALLET_ID,LINE_ITEM_NO columns nullable in SHIPMENT_RESERV_HANDL_UNIT_TAB
DECLARE
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := 'SHIPMENT_RESERV_HANDL_UNIT_TAB';
BEGIN
   column_ := Database_SYS.Set_Column_Values('PALLET_ID', 'VARCHAR2(10)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   column_ := Database_SYS.Set_Column_Values('LINE_ITEM_NO', 'NUMBER', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
END;
/

-- ***** SHIPMENT_RESERV_HANDL_UNIT_TAB End *****

--------------------------------------------------------------------------------------------

-- ***** RECEIVER_FRGHT_PAYER_FWDR_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_52');
PROMPT Adding new table RECEIVER_FRGHT_PAYER_FWDR_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'RECEIVER_FRGHT_PAYER_FWDR_TAB';
   columns_    Database_SYS.ColumnTabType;   
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'FORWARDER_ID', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_TYPE', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ID', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ADDRESS_ID', 'VARCHAR2(50)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'FREIGHT_PAYER_ID', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Or_Replace_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_53');
PROMPT Creating index RECEIVER_FRGHT_PAYER_FWDR_PK
DECLARE
   index_name_ VARCHAR2(30) := 'RECEIVER_FRGHT_PAYER_FWDR_PK';
   table_name_ VARCHAR2(30) := 'RECEIVER_FRGHT_PAYER_FWDR_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'FORWARDER_ID');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_TYPE');
   Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ID');
   Database_SYS.Set_Table_Column(columns_, 'ADDRESS_ID');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_54');
PROMPT Creating index RECEIVER_FRGHT_PAYER_FWDR_RK
DECLARE
   index_name_ VARCHAR2(30) := 'RECEIVER_FRGHT_PAYER_FWDR_RK';
   table_name_ VARCHAR2(30) := 'RECEIVER_FRGHT_PAYER_FWDR_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** RECEIVER_FRGHT_PAYER_FWDR_TAB End *****
  
---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES  ----------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES/COLUMNS -----------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_55');
PROMPT Remove obsolete packages.
BEGIN
   Database_SYS.Remove_Package('SHIPMENT_ORDER_LINE_API', TRUE);
   Database_SYS.Remove_Package('CUSTOMER_ORDER_DELIV_NOTE_API', TRUE);
   Database_SYS.Remove_Package('CREATE_ORDER_DELIVERY_NOTE_API', TRUE);
   Database_SYS.Remove_Package('DATA_CA_RET_PART_SHIP_INV_API', TRUE);
   Database_SYS.Remove_Package('DATA_CA_MOVE_PART_SHIP_INV_API', TRUE);
END;
/

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_56');
PROMPT Remove obsolete views.
BEGIN
   Database_SYS.Remove_View('SHIPMENT_ORDER_LINE',             TRUE);
   Database_SYS.Remove_View('SHIPMENT_ORDER_LINE_LOV',         TRUE);
   Database_SYS.Remove_View('SHIPMENT_ORDER_LINE_OVW',         TRUE);
   Database_SYS.Remove_View('UNCLOSED_SHIPMENTS',              TRUE);
   Database_SYS.Remove_View('SHIPMENT_LINE_HANDL_UNIT_UIV',    TRUE);
   Database_SYS.Remove_View('CUSTOMER_ORDER_DELIV_NOTE',       TRUE);
   Database_Sys.Remove_View('SHIPMENT_RESERV_HANDL_UNIT_UIV',  TRUE);
   Database_SYS.Remove_View('HANDLING_UNIT_SHIPMENT_UIV',      TRUE);
END;
/

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE SEQUENCES --------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_57');
PROMPT Renmae indexes.
BEGIN   
   Database_SYS.Rename_Index('CUSTOMER_ORDER_DELIV_NOTE_IX1', 'DELIVERY_NOTE_ix1', TRUE);
   Database_SYS.Rename_Index('CUSTOMER_ORDER_DELIV_NOTE_IX2', 'DELIVERY_NOTE_ix2', TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_58');
PROMPT Renmae constraints.
BEGIN
   Database_SYS.Rename_Constraint('SHIPMENT_LINE_TAB', 'SHIPMENT_ORDER_LINE_RK', 'SHIPMENT_LINE_RK', TRUE);
   Database_SYS.Rename_Constraint('DELIVERY_NOTE_TAB', 'CUSTOMER_ORDER_DELIV_NOTE_PK', 'DELIVERY_NOTE_PK', TRUE);
   Database_SYS.Rename_Constraint('DELIVERY_NOTE_TAB', 'CUSTOMER_ORDER_DELIV_NOTE_RK', 'DELIVERY_NOTE_RK', TRUE);
END;
/
---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Timestamp_59');
PROMPT Upgrade statements in file 1500.upg end here.

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('SHPMNT','1500.upg','Done');



