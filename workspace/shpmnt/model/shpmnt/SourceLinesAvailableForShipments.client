
--  Date       Sign    History
--  ---------  ------  ---------------------------------------------------------
--  2021-12-16 Diablk  SC21R2-6773, Modified SourceDetailsCommand to facilitate source Purchase Receipt Return.
--  2021-03-11 SBalLK  SC2020R1-12873, Added dynamic dependency for navigator entries.
--  2021-02-17 RoJalk  SC2020R1-11806, Removed ProjectRef, ActivityRef usages.
--  2020-09-16 ErRalk  SC2020R1-9687, Modified badge Objstate to Support for Shipment Order status.
--  2020-09-09 RasDlk  SC2020R1-6764, Modified SourceDetailsCommand to support for Shipment Order.
--  2019-11-07 MeAblk  SCSPRING20-937, Added SenderId, SenderType and ReceiverType.
--  2019-10-31 AyAmlk  SCXTEND-1202, Added the startup mode as search.
--  2019-08-22 RoJalk  SCUXXW4-23976, Removed the titles of messagebox.
--  2019-06-17 ErRalk  SCUXXW4-22561, Added contactwidget for ForwardAgentId and label for ProjectId.
--  2019-06-13 RasDlk  SCUXXW4-22388, Added code to show the status with relevant colors.
--  2019-06-06 ErRalk  SCUXXW4-21720, Modified SourceDetailsCommand to navigate correctly into relevant pages.
--  2019-03-12 Kubalk  SCUXXW4-17364, Dependency annotations added.
--  2018-07-11 RoJalk  SCUXXW4-4939, Added code to handle command logic.
--  2018-07-06 Dinglk  SCUXXW4-4939, Converted tbwSourceLinesToConnectToShipment using MTG Version: 1.23
--  ---------  ------  ---------------------------------------------------------

client SourceLinesAvailableForShipments;
component SHPMNT;
layer Core;
projection SourceLinesAvailableForShipmentsHandling;
include fragment IntorderPartAlternateLovSelector;
include fragment SourceLineStateBadge;
include fragment ShipmentReceiverSelector;
include fragment ShipmentSenderSelector;

---------------------------- GENERATED FROM APF -----------------------------

//! TODO: Take necessary steps to handle following construct(s) found in 'tbwSourceLinesToConnectToShipment'

// --- Navigation actions ---
// Following code templates can be verified and used to define the 'execute' section of a command:
// 1. navigate "page/Customer/Form";
//    Hint: In Enterprise Explorer identified as 'frmCustomerInfo' (ENTERP)
// 2. navigate "page/SalesParts/List";
//    Hint: In Enterprise Explorer identified as 'tbwSalesPart' (ORDER)
// 3. navigate "page/InventoryPart/Form";
//    Hint: In Enterprise Explorer identified as 'frmInventoryPart' (INVENT)
// 4. navigate "page/CustomerOrder/Form";
//    Hint: In Enterprise Explorer identified as 'frmCustomerOrder' (ORDER)
// 5. navigate "page/ProjectDeliverableItems/List";
//    Hint: In Enterprise Explorer identified as 'tbwDeliverablesItem' (PRJDEL)
// 8. navigate "page/ShipmentLines/List";
//    Hint: In Enterprise Explorer identified as 'tbwOverviewShipmentLines' (SHPMNT)
// -------------------------------------------------------------------------------------

----------------------------- NAVIGATOR ENTRIES -----------------------------

navigator {
   entry ShipmentManagementSourceLinesToConnectToShipmentNavEntry parent ShpmntNavigator.ShipmentManagementOutboundShipment at index 600 {
      label = "Available Lines for Shipments";
      page List;
   }

   @DynamicComponentDependency ORDER
   entry SalesSourceLinesToConnectToShipmentNavEntry parent OrderNavigator.ShippingShipmentDelivery at index 600 {
      label = "Available Lines for Shipments";
      page List;
   }
}
-------------------------------- MAIN PAGES ---------------------------------

page List using SourceLinesAvailableForShipments {
   label = "Available Lines for Shipments";
   startupmode = search;
   list SourceLinesAvailableForShipmentList;
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------

command ConnecttoShipmentCommand for SourceLinesAvailableForShipment {
   label = "Connect to Shipment";
   mode = SelectedRecords;
   enabled = [true];
   variable ShipmentLineKeyVar Text;
   bulkexecute {
      call AddSourceLinesToShipment(Selection) into ShipmentLineKeyVar;
      if [ShipmentLineKeyVar != null] {
         messagebox("", question, "Connection to shipment(s) was done, do you want to view the shipment line(s)?") {
            when YES {
               navigate "page/ShipmentLines/List?$filter=${ShipmentLineKeyVar}";
            }
            when "No" {
               exit CANCEL;
            }
         }
      }
   }
}
command SourceDetailsCommand for SourceLinesAvailableForShipment {
   label = "Source Details";
   mode = SelectedRecords;
   enabled = [count(SourceRefTypeDb) = 1];
   bulkexecute {
      ifany [SourceRefTypeDb = "CUSTOMER_ORDER"] {
         bulknavigate "page/CustomerOrderLines/List?$filter=OrderNo eq $[SourceRef1] and LineNo eq $[SourceRef2] and RelNo eq $[SourceRef3] and LineItemNo eq $[SourceRef4Number]";
      }
      else {
         ifany [SourceRefTypeDb = "PROJECT_DELIVERABLES"] {
            bulknavigate "page/DeliverablePlanningHandling/List?$filter=ItemNo eq $[SourceRef1Number] and ItemRevision eq $[SourceRef2] and PlanningNo eq $[SourceRef3Number]";
         }
         else {
            ifany [SourceRefTypeDb = "SHIPMENT_ORDER"] {
               bulknavigate "page/ShipmentOrderLines/List?$filter=ShipmentOrderId eq $[SourceRef1Number] and LineNo eq $[SourceRef2Number]";
            }
            else {
               ifany [SourceRefTypeDb = "PURCH_RECEIPT_RETURN"] {
                  bulknavigate "page/Receipts/List?$filter=SourceRef1 eq $[SourceRef1] and SourceRef2 eq $[SourceRef2] and SourceRef3 eq $[SourceRef3] and ReceiptNo eq $[ReceiptNo]";
               }
            }
         }
      }
   }
}

--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------

----------------------------------- LISTS -----------------------------------

list SourceLinesAvailableForShipmentList for SourceLinesAvailableForShipment {
   field SourceRef1;
   field SourceRef2;
   field SourceRef3;
   field SourceRef4;
   field SourceRefType {
      size = Large;
   }
   field Contract {
      label = "Site";
   }
   fieldset SourceLineStateFieldset;
   field ReceiverPartNo {
      size = Large;
   }
   field SourcePartNo {
      size = Large;
   }
   field SourcePartDescription {
      size = Large;
   }
   lov InventoryPartNoRef with ReferenceIntorderPartAlternateLovSelector {
      size = Large;
   }
   @DynamicComponentDependency CFGCHR
   field ConfigurationIdRef;
   field ConditionCode;
   field ConditionCodeRef.Description {
      label = "Condition Code Description";
   }
   field SenderIdRef;
   field SenderType;
   field ReceiverIdRef {
      size = Large;
      contactwidget {
         enabled = [ReceiverId != null];
         source {
            Customer = [ReceiverTypeDb = "CUSTOMER"];
         }
      }
   }
   field ReceiverDescription {
      size = Large;
   }
   field ReceiverType;
   field QtyAssigned;
   field QtyPicked;
   field QtyShipped;
   field SourceUnitMeasRef;
   field SourceQty;
   field QtyAvailabeToConnect;
   field InventoryQty;
   field InventoryPartRef.UnitMeas {
      label = "Inventory UoM";
   }
   field PlannedDeliveryDate {
      size = Large;
   }
   field PlannedDueDate;
   field PromisedDeliveryDate {
      size = Large;
   }
   field PlannedShipDate {
      size = Large;
   }
   field PlannedShipPeriodRef;
   field DockCode;
   field SubDockCode;
   field RefId;
   field LocationNo;
   @DynamicComponentDependency PROJ
   field ProgramId;
   @DynamicComponentDependency PROJ
   field ProgramDescription;
   field ProjectId {
      label = "Project ID";
   }
   @DynamicComponentDependency PROJ
   field ProjectName;
   @DynamicComponentDependency PROJ
   field SubProjectId {
      label = "Sub Project ID";
   }
   @DynamicComponentDependency PROJ
   field SubProjectDescription;
   @DynamicComponentDependency PROJ
   field ActivitySeqRef;
   @DynamicComponentDependency PROJ
   field ActivityNo {
      label = "Activity ID";
   }
   @DynamicComponentDependency PROJ
   field ActivityDescription {
      label = "Activity Description";
   }
   field AdjustedWeightGross;
   field AdjustedVolume;
   field WantedDeliveryDate {
      size = Large;
   }
   field AvailableQty {
      searchable = true;
   }
   field ShipmentTypeRef;
   field ShipmentCreation {
      size = Large;
   }
   field ReceiverAddressName {
      size = Large;
   }
   field ReceiverAddress1;
   field ReceiverAddress2;
   field ReceiverAddress3;
   field ReceiverAddress4;
   field ReceiverAddress5;
   field ReceiverAddress6;
   field ReceiverCity;
   field ReceiverState;
   field ReceiverZipCode;
   field ReceiverCounty;
   field ReceiverCountry;
   field ShipViaCodeRef;
   field DeliveryTermsRef;
   field RouteIdRef;
   field Description;
   field AddrFlagDb;
   field ForwardAgentId {
      contactwidget {
         enabled = [ForwardAgentId != null];
         source = Person;
      }
   }
   field ForwarderInfoRef.Name {
      label = "Forwarder Name";
   }
   field ReceiverAddrId;
   field SupplyCountry;
   field RentalDb;

   fieldranking SourceRef1, SourceRef2, SourceRef3, SourceRef4, SourceRefType, Contract, ReceiverIdRef;

   commandgroup ShipmentCmdGroup {
      command ConnecttoShipmentCommand;
   }
   commandgroup SourceCmdGroup {
      command SourceDetailsCommand;
   }
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

