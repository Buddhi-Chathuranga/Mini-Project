
--  Date       Sign    History
--  ---------  ------  ---------------------------------------------------------
--  2020-09-04 RasDlk  SC2020R1-8961, Removed the attribute SourceRefTypeDb and removed the references ConditionCodeRef, HandlingUnitTypeRef by replacing them with
--  2020-09-04         ConditionCodeDescription and HandlingUnitCategoryId attributes to improve performance.
--  2020-03-06 JaThlk  SCXTEND-2147, Added PlannedDueDate and PickingConfirmedDb to support Warehouse Instant View lobby page.
--  2019-06-20 JaBalk  SCUXXW4-17911, Handled the filteration for source_ref_type column.
--  2019-03-12 Kubalk  SCUXXW4-17358, Dependency annotations added.
--  2018-07-06 Dinglk  SCUXXW4-4854, Converted tbwOverviewPickList using MTG Version: 1.23
--  ---------  ------  ---------------------------------------------------------

projection NotReportedDetailedPickListLinesHandling;
component SHPMNT;
layer Core;
description "Use this API to view the detailed pick list lines that have been included on pick lists but have not yet been
            picked. From this API it is possible to print pick list and to got to more detailed picklist pages where further actions can be performed.";
category Users;
include fragment ShipmentReceiverSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset NotReportedDetailedPickListLines for NotReportedDetailedPickListLine;

------------------------------ ENTITY DETAILS -------------------------------

query NotReportedDetailedPickListLine {
   from = "pick_shipment_res_stock";
   where = "Pick_Shipment_API.Pick_List_Fully_Reported(PICK_LIST_NO, SOURCE_REF_TYPE_DB) = 'FALSE'";
   keys = PickListNo, SourceRef1, SourceRef2Key, SourceRef3Key, SourceRef4Key, SourceRefType, ShipmentId, Contract, PartNo, ConfigurationId, LocationNo, HandlingUnitId, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq;

   attribute PickListNo Text {
      editable = [false];
   }
   attribute SourceRef1 Text {
      fetch = "SOURCE_REF1";
      label = "Source Ref 1";
      format = uppercase;
   }
   attribute SourceRef2 Text {
      fetch = "SOURCE_REF2";
      label = "Source Ref 2";
   }
   attribute SourceRef2Key Text {
      fetch = "NVL(SOURCE_REF2,CHR(32))";
      lovcolumn = [false];
   }
   attribute SourceRef3 Text {
      fetch = "SOURCE_REF3";
      label = "Source Ref 3";
   }
   attribute SourceRef3Key Text {
      fetch = "NVL(SOURCE_REF3,CHR(32))";
      lovcolumn = [false];
   }
   attribute SourceRef4 Text {
      fetch = "SOURCE_REF4";
      label = "Source Ref 4";
   }
   attribute SourceRef4Key Text {
      fetch = "NVL(SOURCE_REF4,CHR(32))";
      maxlength = 50;
      lovcolumn = [false];
   }
   attribute SourceRefType Enumeration(LogisticsSourceRefType.Shipment) {
      fetch = "SOURCE_REF_TYPE_DB";
      label = "Source Ref Type";
   }
   attribute ShipmentId Number {
      label = "Shipment ID";
      editable = [false];
   }
   attribute PartNo Text {
      format = uppercase;
   }
   attribute PartDescription Text {
      fetch = "Inventory_Part_API.Get_Description(CONTRACT, PART_NO)";
      label = "Part Description";
   }
   attribute ConfigurationId Text {
      label = "Configuration ID";
      editable = [false];
   }
   attribute ConditionCode Text {
      fetch = "CONDITION_CODE";
      label = "Condition Code";
      format = uppercase;
   }
   attribute ConditionCodeDescription Text {
      fetch = "Condition_Code_API.Get_Description(condition_code)";
   }
   attribute PartOwnership Enumeration(PartOwnership) {
      fetch = "PART_OWNERSHIP_DB";
      label = "Ownership";
   }
   attribute Owner Text {
      fetch = "OWNER";
      label = "Owner";
   }
   attribute OwnerName Text {
      fetch = "OWNER_NAME";
      label = "Owner Name";
   }
   attribute QtyPicked Number {
      editable = [false];
   }
   attribute QtyReserved Number {
      fetch = "QTY_RESERVED";
      label = "Qty Reserved";
   }
   @DynamicComponentDependency ORDER
   attribute PrintedFlag Boolean {
      fetch = "DECODE(DECODE(Customer_Order_Pick_List_API.Get_Printed_Flag(PICK_LIST_NO), Pick_List_Printed_API.Decode('Y'),1,0), 1, 'TRUE', 'FALSE')";
      label = "Printed Flag";
   }
   attribute ReceiverTypeDb Text;
   attribute ReceiverID Text {
      fetch = "Pick_Shipment_API.Get_Receiver_Id(SHIPMENT_ID, SOURCE_REF1, SOURCE_REF2, SOURCE_REF3, SOURCE_REF4)";
      label = "Receiver ID";
   }
   attribute ReceiverDescription Text {
      fetch = "Pick_Shipment_API.Get_Receiver_Name(SHIPMENT_ID, SOURCE_REF1, SOURCE_REF2, SOURCE_REF3, SOURCE_REF4)";
      label = "Receiver Description";
   }
   attribute PlannedShipDateTime Date {
      fetch = "Pick_Shipment_API.Get_Planned_Ship_Date(SHIPMENT_ID, SOURCE_REF1, SOURCE_REF2, SOURCE_REF3, SOURCE_REF4, SOURCE_REF_TYPE_DB)";
      label = "Planned Ship Date/Time";
   }
   attribute PlannedShipPeriod Text {
      fetch = "Pick_Shipment_API.Get_Planned_Ship_Period(SHIPMENT_ID, SOURCE_REF1, SOURCE_REF2, SOURCE_REF3, SOURCE_REF4, SOURCE_REF_TYPE_DB)";
      label = "Planned Ship Period";
   }
   attribute ShipmentInventory Boolean {
      fetch = "DECODE(Handle_Ship_Invent_Utility_API.Uses_Shipment_Inventory(PICK_LIST_NO), 1, 'TRUE', 'FALSE')";
      label = "Shipment Inventory";
   }
   attribute RouteID Text {
      fetch = "Pick_Shipment_API.Get_Route_Id(SHIPMENT_ID, SOURCE_REF1, SOURCE_REF2, SOURCE_REF3, SOURCE_REF4, SOURCE_REF_TYPE_DB)";
      label = "Route ID";
   }
   attribute RouteDescription Text {
      fetch = "Delivery_Route_API.Get_Description(Pick_Shipment_API.Get_Route_Id(SHIPMENT_ID, SOURCE_REF1, SOURCE_REF2, SOURCE_REF3, SOURCE_REF4, SOURCE_REF_TYPE_DB))";
      label = "Route Description";
   }
   attribute ForwardAgent Text {
      fetch = "Pick_Shipment_API.Get_Forward_Agent_Id(SHIPMENT_ID, SOURCE_REF1, SOURCE_REF2, SOURCE_REF3, SOURCE_REF4, SOURCE_REF_TYPE_DB)";
      label = "Forward Agent";
   }
   attribute LocationGroup Text {
      fetch = "LOCATION_GROUP";
      label = "Location Group";
   }
   attribute LocationNo Text {
      maxlength = 100;
      editable = [false];
   }
   attribute Warehouse Text {
      fetch = "WAREHOUSE";
      label = "Warehouse ID";
   }
   attribute BayNo Text {
      fetch = "BAY_NO";
      label = "Bay ID";
   }
   attribute RowNo Text {
      fetch = "ROW_NO";
      label = "Row ID";
   }
   attribute TierNo Text {
      fetch = "TIER_NO";
      label = "Tier ID";
   }
   attribute BinNo Text {
      fetch = "BIN_NO";
      label = "Bin ID";
   }
   attribute Contract Text {
      label = "Site";
      editable = [false];
   }
   attribute HandlingUnitId Number {
      label = "Handling Unit ID";
      editable = [false];
   }
   attribute HandlingUnitTypeDescription Text {
      fetch = "Handling_Unit_Type_API.Get_Description(HANDLING_UNIT_TYPE_ID)";
      label = "Handling Unit Type Description";
   }
   attribute HandlingUnitCategoryDescription Text {
      fetch = "HANDLING_UNIT_TYPE_API.Get_Handl_Unit_Category_Desc(HANDLING_UNIT_TYPE_ID)";
      label = "Handling Unit Category Description";
   }
   attribute HandlingUnitTypeId Text {
      fetch = "HANDLING_UNIT_TYPE_ID";
      label = "Handling Unit Type ID";
   }
   attribute HandlingUnitCategoryId Text {
      fetch = "Handling_Unit_Type_API.Get_Handling_Unit_Category_Id(handling_unit_type_id)";
      label = "Handling Unit Category ID";
   }
   attribute Sscc Text {
      fetch = "SSCC";
      label = "SSCC";
   }
   attribute AltHandlingUnitLabelId Text {
      fetch = "ALT_HANDLING_UNIT_LABEL_ID";
      label = "Alt Handling Unit Label ID";
   }
   attribute LotBatchNo Text {
      fetch = "lot_batch_no";
      label = "Lot/Batch No";
   }
   attribute SerialNo Text {
      fetch = "Serial_No";
      label = "Serial No";
   }
   attribute EngChgLevel Text {
      fetch = "ENG_CHG_LEVEL";
      label = "Rev No";
   }
   attribute WaivDevRejNo Text {
      fetch = "WAIV_DEV_REJ_NO";
      label = "Waiv Dev Rej No";
   }
   attribute ActivitySeq Number {
      label = "Activity Sequence";
   }
   @DynamicComponentDependency ORDER
   attribute PlannedDueDate Date {
      fetch = "trunc(Customer_Order_Line_API.Get_Planned_Due_Date(source_ref1, source_ref2, source_ref3, source_ref4))";
   }
   @DynamicComponentDependency ORDER
   attribute PickingConfirmedDb Text {
      fetch = "Customer_Order_Pick_List_API.Get_Picking_Confirmed_Db(pick_list_no)";
   }
   reference ReceiverIdRef(ReceiverID) to ShipmentReceiver(ReceiverId) {
      label = "Receiver ID";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

