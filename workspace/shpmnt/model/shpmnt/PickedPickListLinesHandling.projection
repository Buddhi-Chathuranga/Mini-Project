-------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  --------------------------------------------------------------------
-- 2020-09-08  RasDlk  SC2020R1-9661, Changed the label of the attribute EngChgLevel to Revision No.
-- 2020-03-05  ErRalk  SCXTEND-3657, Added attribute LastActivityDateTruncated for navigation in Delivery Statistics Lobby.
-- 2019-06-20  JaBalk  SCUXXW4-17911, Handled the filteration for source_ref_type column.
-- 2018-06-20  JaThlk  SCUXXW4-11617, Included UserAllowedSiteLovSelector fragment instead of UserAllowedSiteLov.
-- 2018-04-20  StHose  SCUXXW4-4849, corrections after code review
-- 2018-04-09  StHose  SCUXXW4-4849, Converted from tbwOverviewPickedLines using MTG Version: 1.15
-------------------------------------------------------------------------------------------
projection PickedPickListLinesHandling;
component SHPMNT;
layer Core;
description "Use this API to view the pick list lines that have been pick reported.";
category Users;
include fragment UserAllowedSiteLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset ShipmentReservations for ShipmentReservation;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity Shipment {
   attribute SourceRefType Text {
      fetch = "Logistics_Source_Ref_Type_API.Decode_List(source_ref_type_db)";
      label = "Source Ref Type";
      lovcolumn = [true];
      implementationtype = "VARCHAR2(4000)";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

query ShipmentReservation {
   from = "pick_shipment_res_stock";
   keys = SourceRef1, SourceRef2Db, SourceRef3Db, SourceRef4Db, ShipmentId, Contract, PartNo, ConfigurationId, LocationNo,
   HandlingUnitId, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, PickListNo;
   where = "QTY_PICKED > 0";

   attribute SourceRef1 Text {
      fetch = "SOURCE_REF1";
      label = "Source Ref 1";
      format = uppercase;
   }
   attribute SourceRef2 Text {
      fetch = "SOURCE_REF2";
      label = "Source Ref 2";
   }
   attribute SourceRef2Db Text {
      fetch = "NVL(SOURCE_REF2,'*')";
      label = "Source Ref 2";
   }
   attribute SourceRef3 Text {
      fetch = "SOURCE_REF3";
      label = "Source Ref 3";
   }
   attribute SourceRef3Db Text {
      fetch = "NVL(SOURCE_REF3,'*')";
      label = "Source Ref 3";
   }
   attribute SourceRef4 Text {
      fetch = "SOURCE_REF4";
   }
   attribute SourceRef4Db Text {
      fetch = "NVL(SOURCE_REF4,'*')";
      label = "Source Ref 4";
   }
   attribute SourceRefType Enumeration(LogisticsSourceRefType.Shipment) {
      fetch = "SOURCE_REF_TYPE_DB";
   }
   attribute ShipmentId Number;
   attribute Contract Text;
   attribute PartNo Text;
   attribute PartDescription Text {
      fetch = "Inventory_Part_API.Get_Description(CONTRACT, PART_NO)";
   }
   attribute ConfigurationId Text {
      label = "Configuration ID";
   }
   attribute ShipmentInventory Boolean {
      fetch = "DECODE(Handle_Ship_Invent_Utility_API.Uses_Shipment_Inventory(SOURCE_REF1, SOURCE_REF2, SOURCE_REF3, SOURCE_REF4, SOURCE_REF_TYPE_DB, SHIPMENT_ID), 1, 'TRUE', 'FALSE')";
   }
   attribute QtyPicked Number;
   attribute QtyIssued Text {
      fetch = "QTY_ISSUED";
   }
   attribute LocationNo Text;
   attribute HandlingUnitId Number {
      label = "Handling Unit ID";
   }
   attribute HandlingUnitTypeId Text {
      fetch = "HANDLING_UNIT_TYPE_ID";
      label = "Handling Unit Type ID";
   }
   attribute HandlingUnitTypeDesc Text {
      fetch = "HANDLING_UNIT_TYPE_DESC";
      label = "Type Description";
   }
   attribute Sscc Text {
      fetch = "SSCC";
      label = "SSCC";
   }
   attribute AltHandlingUnitLabelId Text {
      fetch = "ALT_HANDLING_UNIT_LABEL_ID";
      label = "Alt Handling Unit Label ID";
   }
   attribute Warehouse Text {
      fetch = "WAREHOUSE";
      label = "Warehouse ID";
   }
   attribute BayNo Text {
      fetch = "BAY_NO";
      label = "Bay ID";
   }
   attribute RowNo Text {
      fetch = "ROW_NO";
      label = "Row ID";
   }
   attribute TierNo Text {
      fetch = "TIER_NO";
      label = "Tier ID";
   }
   attribute BinNo Text {
      fetch = "BIN_NO";
      label = "Bin ID";
   }
   attribute LotBatchNo Text;
   attribute SerialNo Text;
   attribute ConditionCode Text {
      fetch = "CONDITION_CODE";
   }
   attribute ConditionCodeDescription Text {
      fetch = "CONDITION_CODE_API.Get_Description(CONDITION_CODE)";
   }
   attribute PartOwnership Text {
      fetch = "PART_OWNERSHIP";
      label = "Ownership";
   }
   attribute PartOwnerShipDb Text {
      fetch = "part_ownership_db";
   }
   attribute Owner Text {
      fetch = "OWNER";
   }
   attribute OwnerName Text {
      fetch = "OWNER_NAME";
   }
   attribute EngChgLevel Text {
      label = "Revision No";
   }
   attribute WaivDevRejNo Text {
      label = "W/D/R No";
   }
   attribute TopParentHandlingUnitId Number {
      fetch = "Handling_Unit_API.Get_Top_Parent_Handl_Unit_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Handling Unit ID";
   }
   attribute TopParentHandlingUnitTypeId Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Hu_Type_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Handling Unit Type ID";
   }
   attribute TopParentHandlingUnitTypeDesc Text {
      fetch = "Handling_Unit_Type_API.Get_Description(Handling_Unit_API.Get_Top_Parent_Hu_Type_Id(HANDLING_UNIT_ID))";
      label = "Top Parent Handling Unit Type Desc";
   }
   attribute TopParentSscc Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Sscc(HANDLING_UNIT_ID)";
      label = "Top Parent SSCC";
   }
   attribute TopParentAltHandlingUnitLabelId Text {
      fetch = "Handling_Unit_API.Get_Top_Parent_Alt_Hu_Label_Id(HANDLING_UNIT_ID)";
      label = "Top Parent Alt Handling Unit Label ID";
   }
   attribute AvailabilityControlId Text {
      fetch = "AVAILABILITY_CONTROL_ID";
      label = "Availability Control ID";
   }
   attribute AvailabilityControlDescription Text {
      fetch = "Part_Availability_Control_API.Get_Description(AVAILABILITY_CONTROL_ID)";
   }
   attribute PickListNo Text;
   attribute SourceRefTypeDb Text {
      fetch = "SOURCE_REF_TYPE_DB";
      label = "Source Ref Type Db";
   }
   attribute LastActivityDateTruncated Date {
      fetch = "trunc(last_activity_date)";
   }

   reference ShipmentIdRef(ShipmentId) to Shipment(ShipmentId) {
      label = "Shipment ID";
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
}

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------