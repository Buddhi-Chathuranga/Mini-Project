----------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------
-- 2019-08-20  MalLlk  SCUXXW4-22978, Supporting to move fragment CopyConfigurationForSalesAssistant to a seperate projection CopyConfigurationForSales.
-- 2019-08-20  MaIklk  SCUXXW4-23888, Removed part_no = :PartNo criteria from CopyConfigBusinessOpportunityLineList().
-- 2019-06-19  AyAmlk  SCUXXW4-4659, Added search context to filter out the list from the Customer No and
-- 2019-06-19          also corrected some bugs in the assistant.
-- 2018-11-07  MalLlk  SCUXXW4-4661, Converted dlgCopyConfigurationFrom using MTG Version: 1.32
----------------------------------------------------------------------------------------------

projection CopyConfigurationForSales;
component SHPMNT;
layer Core;
description "Use this API to copy an existing configuration. You can specify the selection of configurations by entering one or more customer order numbers/sales quotation numbers/business opportunity numbers, sites, part numbers, etc. The result of the selection is displayed in the list where you can select the configuration of your choice.";
category Users;

--------------------------------- FRAGMENTS ---------------------------------
include fragment IntorderPartLovSelector;
@DynamicComponentDependency ORDER
include fragment CoChargeJoinSelector;
@DynamicComponentDependency ORDER
include fragment QuotationsPerSiteLovSelector;
include fragment CopyConfigurationMessagesAssistant;
@DynamicComponentDependency ORDER
include fragment NonRentalSalesPartLovSelector;
@DynamicComponentDependency CRM
include fragment BusinessOpportunityLineInitialCheck;
@DynamicComponentDependency ORDER
include fragment CustomerOrderLineInitialCheck;
@DynamicComponentDependency ORDER
include fragment OrderQuotationLineInitialCheck;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset CopyConfigurationForSalesSet for CopyConfigurationForSalesVirtual;

------------------------------ ENTITY DETAILS -------------------------------

@Override
@DynamicComponentDependency ORDER
entity CopyConfigCustomerOrderLine using CustomerOrderLine {
   crud = Read;
   use attributes = ConfigurationId, CatalogNo, CustomerNo;

   attribute Contract Text;
   attribute PartNo Text;
   attribute ConfigurationId Text;
   @DynamicComponentDependency CFGCHR
   attribute Description Text {
      fetch = "Part_Config_Description_API.Get_Actual_Description(part_no, configuration_id)";
   }
   attribute CatalogNo Text {
      label = "Part No";
   }
   attribute DateEntered Timestamp;
   @DynamicComponentDependency CFGCHR
   attribute RevisionNumber Number {
      fetch = "Configuration_Spec_API.Get_Spec_Revision_No(nvl(part_no, catalog_no), configuration_id)";
   }
   attribute AvailableQuantity Number {
      fetch = "Inventory_Part_In_Stock_API.Get_Avail_Plan_Qty_Loc_Type(contract_               => contract,
                                                                     part_no_                => nvl(part_no, catalog_no),
                                                                     configuration_id_       => configuration_id,
                                                                     activity_seq_           => NULL,
                                                                     qty_type_               => 'AVAILABLE',
                                                                     date_requested_         => NULL,
                                                                     location_type1_db_      => 'PICKING')";
   }

   attribute ConfiguredLinePriceId Number;

   reference CustomerNoRef(CustomerNo) to CustOrdCustomer(CustomerNo) {
      label = "Customer No";
   }
   reference OrderNoRef(OrderNo) to CoChargeJoin(OrderNo) {
      label = "Order No";
   }
   reference PartNoRef(Contract, PartNo) to IntorderPartLov(Contract, PartNo) {
      label = "Part No";
   }
   reference CatalogNoRef(Contract, CatalogNo) to SalesPart(Contract, CatalogNo) {
      label = "Part No";
   }
}

@Override
@DynamicComponentDependency ORDER
entity CopyConfigOrderQuotationLine using OrderQuotationLine {
   crud = Read;
   use attributes = ConfigurationId, CatalogNo, CustomerNo;

   attribute Contract Text;
   @DynamicComponentDependency CFGCHR
   attribute Description Text {
      fetch = "Part_Config_Description_API.Get_Actual_Description(part_no, configuration_id)";
   }
   attribute QuotationNo Text {
      format = uppercase;
   }
   attribute PartNo Text {
      editable = [ETag = null];
   }
   attribute CatalogNo Text {
      label = "Part No";
   }
   attribute DateEntered Timestamp;
   @DynamicComponentDependency CFGCHR
   attribute RevisionNumber Number {
      fetch = "Configuration_Spec_API.Get_Spec_Revision_No(nvl(part_no, catalog_no), configuration_id)";
   }
   attribute AvailableQuantity Number {
      fetch = "Inventory_Part_In_Stock_API.Get_Avail_Plan_Qty_Loc_Type(contract_               => contract,
                                                                     part_no_                => nvl(part_no, catalog_no),
                                                                     configuration_id_       => configuration_id,
                                                                     activity_seq_           => NULL,
                                                                     qty_type_               => 'AVAILABLE',
                                                                     date_requested_         => NULL,
                                                                     location_type1_db_      => 'PICKING')";
   }
   attribute ConfiguredLinePriceId Number;

   reference CustomerNoRef(CustomerNo) to CustOrdCustomer(CustomerNo) {
      label = "Customer No";
   }
   reference QuotationNoRef(QuotationNo) to QuotationsPerSiteLov(QuotationNo) {
      label = "Quotation No";
   }
   reference PartNoRef(Contract, PartNo) to IntorderPartLov(Contract, PartNo) {
      label = "Part No";
   }
   reference CatalogNoRef(Contract, CatalogNo) to SalesPart(Contract, CatalogNo) {
      label = "Part No";
   }
}

@Override
@DynamicComponentDependency CRM
entity CopyConfigBusinessOpportunityLine using BusinessOpportunityLine {
   crud = Read;
   use attributes = DateEntered, ConfiguredLinePriceId, Contract;

   attribute ConfigurationId Text {
      editable = [false];
   }
   @DynamicComponentDependency CFGCHR
   attribute Description Text {
      fetch = "Part_Config_Description_API.Get_Actual_Description(catalog_no, configuration_id)";
      editable = [false];
   }
   attribute OpportunityNo Text {
      editable = [false];
   }
   attribute RevisionNo Number {
      editable = [false];
   }
   attribute LineNo Number {
      editable = [false];
   }
   @DynamicComponentDependency CFGCHR
   attribute SpecRevisionNo Text {
      fetch = "Configuration_Spec_API.Get_Spec_Revision_No(catalog_no, configuration_id)";
      label = "Spec Revision No";
      editable = [false];
   }
   attribute CatalogNo Text {
      label = "Sales Part No";
   }
   attribute PartNo Text {
      fetch = "NVL(Sales_Part_API.Get_Part_No(contract, catalog_no), catalog_no)";
   }
   attribute ConfiguredLinePriceId Number {
      editable = [false];
   }
   attribute AvailableQuantity Number {
      fetch = "Inventory_Part_In_Stock_API.Get_Avail_Plan_Qty_Loc_Type(contract_             => contract,
                                                                     part_no_                => catalog_no,
                                                                     configuration_id_       => configuration_id,
                                                                     activity_seq_           => NULL,
                                                                     qty_type_               => 'AVAILABLE',
                                                                     date_requested_         => NULL,
                                                                     location_type1_db_      => 'PICKING')";
   }
   attribute CustomerNo Text {
      fetch = "Business_Opportunity_API.Get_Customer_Id( OPPORTUNITY_NO)";
   }

   reference CustomerNoRef(CustomerNo) to CustOrdCustomer(CustomerNo) {
      label = "Customer No";
   }
   reference CatalogNoRef(Contract, CatalogNo) to SalesPart(Contract, CatalogNo) {
      label = "Sales Part No";
   }
}

--------------------------------- FUNCTIONS ---------------------------------
function SearchContextDefaults Structure(SearchStructure) {
   parameter CustomerNo Text;
}

@DynamicComponentDependency ORDER
function CopyConfigCustomerOrderLineList List<Entity(CopyConfigCustomerOrderLine)> {
   parameter PartNo Text;
   parameter CatalogNo Text;
   parameter CustomerNo Text;
   parameter OrderNo Text;
   parameter LineNo Text;
   parameter RelNo Text;
   parameter LineItemNo Number;

   where = "(:CustomerNo IS NULL OR customer_no = :CustomerNo) AND (part_no = :PartNo OR catalog_no = :CatalogNo) AND
   configuration_id != '*' AND NOT(order_no = :OrderNo AND line_no = :LineNo AND rel_no = :RelNo AND  line_item_no = :LineItemNo)";
}

@DynamicComponentDependency CFGCHR
@DynamicComponentDependency ORDER
function CopyConfigOrderQuotationLineList List<Entity(CopyConfigOrderQuotationLine)> {
   parameter PartNo Text;
   parameter CatalogNo Text;
   parameter QuotationNo Text;
   parameter LineNo Text;
   parameter RelNo Text;
   parameter LineItemNo Number;
   parameter CustomerNo Text;
   parameter RequiredDate Timestamp;

   where = "(:CustomerNo IS NULL OR customer_no = :CustomerNo) AND
   (part_no = :PartNo OR catalog_no = :CatalogNo) AND configuration_id != '*' AND
   NOT(quotation_no = :QuotationNo AND line_no = :LineNo AND rel_no = :RelNo AND  line_item_no = :LineItemNo) AND
   NOT(Inventory_Part_In_Stock_API.Get_Avail_Plan_Qty_Loc_Type(contract, catalog_no, configuration_id, NULL, 'AVAILABLE', NULL, 'PICKING') = 0 AND
   (Configuration_Spec_API.Get_Spec_Revision_No(NVL(part_no, catalog_no), configuration_id)
   != Config_Part_Spec_Rev_API.Get_Spec_Rev_For_Date(NVL(part_no, catalog_no), NVL(TRUNC(:RequiredDate), TRUNC(SYSDATE)))))";
}

@DynamicComponentDependency CFGCHR
@DynamicComponentDependency CRM
function CopyConfigBusinessOpportunityLineList List<Entity(CopyConfigBusinessOpportunityLine)> {
   parameter PartNo Text;
   parameter CatalogNo Text;
   parameter CustomerNo Text;
   parameter OpportunityNo Text;
   parameter RevisionNo Text;
   parameter LineNo Text;
   parameter RequiredDate Timestamp;

   where = "(:CustomerNo IS NULL OR Business_Opportunity_API.Get_Customer_Id(opportunity_no) = :CustomerNo) AND
   configuration_id != '*' AND (catalog_no = :CatalogNo) AND NOT(opportunity_no = :OpportunityNo AND revision_no = :RevisionNo AND line_no = :LineNo) AND
   (Configuration_Spec_API.Get_Spec_Revision_No(NVL(Sales_Part_API.Get_Part_No(contract, catalog_no), catalog_no), configuration_id)
   = Config_Part_Spec_Rev_API.Get_Spec_Rev_For_Date(NVL(Sales_Part_API.Get_Part_No(contract, catalog_no), catalog_no), NVL(TRUNC(:RequiredDate), TRUNC(SYSDATE))))";
}

--------------------------------- VIRTUALS ----------------------------------
virtual CopyConfigurationForSalesVirtual {
   attribute Source Text;
   attribute CustomerNo Text {
      format = uppercase;
      updatable = [true];
      editable = [true];
   }
   attribute ToSourceRef1 Text {
      format = uppercase;
      editable = [false];
   }
   attribute ToSourceRef2 Text {
      editable = [false];
   }
   attribute ToSourceRef3 Text {
      editable = [false];
   }
   attribute ToSourceRef4 Number {
      editable = [false];
   }
   attribute ToConfiguredLinePriceId Number;
   attribute PartNo Text {
      format = uppercase;
      editable = [false];
   }
   attribute CatalogNo Text;
   attribute Description Text {
      editable = [false];
   }
   attribute SourceContract Text;
   attribute SelectedConfigurationId Text;
   attribute RequiredDate Timestamp;
   attribute DiscardChanges Text {
      default = "'FALSE'";
   }
   @DynamicComponentDependency ORDER
   reference PartNoRef(SourceContract, PartNo) to NonRentalSalesPartLov(Contract, CatalogNo) {
      label = "Part";
   }
}

-------------------------------- STRUCTURES ---------------------------------
structure SearchStructure {
   attribute CustomerNo Text;
   reference CustomerInfoRef(CustomerNo) to CustomerInfo(CustomerId) {
      label = "Customer";
   }
}

---------------------------------- ACTIONS ----------------------------------
action DiscardChanges {
   initialcheck implementation;
   parameter Source Text;
   parameter SourceRef1 Text;
   parameter SourceRef2 Text;
   parameter SourceRef3 Text;
   parameter SourceRef4 Number;
   parameter ConfiguredLinePriceId Number;

   ludependencies = CustomerOrderLine, OrderQuotationLine, BusinessOpportunityLine;
}
