-------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  --------------------------------------------------------------------------
-- 2022-06-28  Aabalk  SCDEV-9149, Modified LocationTypeFilter to allow QA and Arrival for Shipment Orders with demand code Purchase Receipt.
-- 2022-06-23  Aabalk  SCDEV-9149, Added attribute DemandCode to InventoryPartsInShipmentInventory query to filter locations for shipment orders with Purchase Receipt demand code.
-- 2022-06-23          Modified DetailReturnToStock array to include Arrival and QA locations for Shipment Order Purchase Receipt to support returns for multi leg inbound shipment flow.
-- 2022-05-09  AvWilk  SCDEV-9414, Changed LocationNoRef with 'InventoryLocation17', implemented 'LocationTypeFilter'.
-- 2022-04-01  diablk  SCZ-18250, Modified entity InventoryPartInStock, added attribute LocationType.
-- 2021-12-17  AsZelk  SC21R2-6630, Modified DetailReturnToStock array where condition to populate PICKING, QA, ARRIVAL only when source ref type is PURCH_RECEIPT_RETURN.
-- 2019-11-27  Aabalk  SCSPRING20-720, Added sender ID, name and type to InventoryPartsInShipmentInventory query. Added SenderIdFilter function.
-- 2019-06-19  KHVESE  SCUXXW4-22712, Added function StringToNumber.
-- 2019-06-16  JaBalk  SCUXXW4-20269, Renamed the CatchUoM and changed the labels of Warehouse and other fileds.
-- 2018-09-24  KHVESE  SCUXXW4-4764, Added actions ReturnFromShipInv and ReturnFromShipInvToNewLoc and function OnhandQtyStruc.
-- 2018-09-24          Removed structure ParentKeyStr and function ParentKeys, GetCatchQtyOnhand and GetQtyOnhand
-- 2018-04-26  KHVESE  SCUXXW4-4764, Converted from frmReturnFromShipInv using MTG Version: 1.15
-------------------------------------------------------------------------------------------------

projection ReturnPartsFromShipmentInventory;
component SHPMNT;
layer Core;
description "Use this API to return inventory parts placed in a shipment location.";
category Users;
include fragment InventoryLocation5Selector;
include fragment ShipmentSenderSelector;
include fragment ShipmentReceiverSelector;
include fragment InventoryPartLov;
include fragment UserAllowedSiteLovSelector;
include fragment InventoryLocation17Selector;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset InventoryPartsInShipmentInventories for InventoryPartsInShipmentInventory;

------------------------------ ENTITY DETAILS -------------------------------

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

query InventoryPartsInShipmentInventory {
   from = "Handle_Source_In_Ship_Inv_Ext";
   keys = SourceRef1, SourceRef2Db, SourceRef3Db, SourceRef4Db, SourceRefType, Contract, PartNo, LotBatchNo, SerialNo,
   EngChgLevel, WaivDevRejNo, ConfigurationId, ActivitySeq, HandlingUnitId, LocationNo, PickListNo, ShipmentId {
      where = "SOURCE_REF1 = :SourceRef1 and NVL(SOURCE_REF2,'*') = :SourceRef2Db and NVL(SOURCE_REF3,'*') = :SourceRef3Db and NVL(SOURCE_REF4,'*') = :SourceRef4Db and
      SOURCE_REF_TYPE_DB = :SourceRefType and CONTRACT = :Contract and PART_NO = :PartNo and LOT_BATCH_NO = :LotBatchNo and SERIAL_NO = :SerialNo and
      ENG_CHG_LEVEL = :EngChgLevel and WAIV_DEV_REJ_NO = :WaivDevRejNo and CONFIGURATION_ID = :ConfigurationId and ACTIVITY_SEQ = :ActivitySeq and
      HANDLING_UNIT_ID = :HandlingUnitId and LOCATION_NO = :LocationNo and PICK_LIST_NO = :PickListNo and SHIPMENT_ID = :ShipmentId  ";
   }
   attribute SourceRef1 Text {
      fetch = "SOURCE_REF1";
      label = "Source Ref 1";
      format = uppercase;
      lovcolumn = [true];
   }
   attribute SourceRef2 Text {
      fetch = "SOURCE_REF2";
      label = "Source Ref 2";
      lovcolumn = [true];
   }
   attribute SourceRef2Db Text {
      fetch = "NVL(SOURCE_REF2,'*')";
      label = "Source Ref 2";
      lovcolumn = [false];
   }
   attribute SourceRef3 Text {
      fetch = "SOURCE_REF3";
      label = "Source Ref 3";
      lovcolumn = [true];
   }
   attribute SourceRef3Db Text {
      fetch = "NVL(SOURCE_REF3,'*')";
      label = "Source Ref 3";
      lovcolumn = [false];
   }
   attribute SourceRef4 Text {
      fetch = "SOURCE_REF4";
      label = "Source Ref 4";
      lovcolumn = [true];
   }
   attribute SourceRef4Db Text {
      fetch = "NVL(SOURCE_REF4,'*')";
      label = "Source Ref 4";
      lovcolumn = [false];
   }
   attribute SourceRefType Enumeration(LogisticsSourceRefType) {
      fetch = "SOURCE_REF_TYPE_DB";
      label = "Source Ref Type";
      lovcolumn = [true];
   }
   attribute ShipmentId Number {
      fetch = "Shipment_Id";
      label = "Shipment ID";
      lovcolumn = [false];
   }
   attribute ShipmentLineNo Number {
      fetch = "SHIPMENT_LINE_NO";
      label = "Line No";
      lovcolumn = [false];
   }
   attribute Contract Text {
      fetch = "Contract";
      label = "Site";
      lovcolumn = [true];
   }
   attribute ContractDesc Text {
      label = "Site Description";
      fetch = "Site_API.Get_Description(contract)";
   }
   attribute SenderId Text {
      fetch = "SENDER_ID";
      label = "Sender ID";
      editable = [false];
   }
   attribute SenderName Text {
      fetch = "SENDER_NAME";
      label = "Sender Description";
      editable = [false];
   }
   attribute SenderType Enumeration(SenderReceiverType.SenderReceiver) {
      fetch = "SENDER_TYPE_DB";
      label = "Sender Type";
      editable = [false];
   }
   attribute ReceiverId Text {
      fetch = "RECEIVER_ID";
      label = "Receiver ID";
      lovcolumn = [false];
   }
   attribute ReceiverName Text {
      fetch = "RECEIVER_NAME";
      label = "Receiver Description";
      lovcolumn = [false];
   }
   attribute ReceiverType Enumeration(SenderReceiverType.Shipment) {
      fetch = "RECEIVER_TYPE_DB";
      label = "Receiver Type";
      lovcolumn = [false];
   }
   attribute SourcePartNo Text {
      fetch = "SOURCE_PART_NO";
      label = "Source Part No";
      lovcolumn = [false];
   }
   attribute SourcePartDescription Text {
      fetch = "SOURCE_PART_DESCRIPTION";
      label = "Source Part Description";
      lovcolumn = [false];
   }
   attribute DemandCode Enumeration(OrderSupplyType) {
      fetch = "DEMAND_CODE_DB";
      lovcolumn = [false];
   }
   attribute PartNo Text {
      lovcolumn = [true];
   }
   attribute PartDescription Text {
      fetch = "PART_DESCRIPTION";
      label = "Part Description";
      lovcolumn = [false];
   }
   attribute QtyPicked Number {
      fetch = "QTY_PICKED";
      label = "Picked Qty";
      lovcolumn = [false];
   }
   attribute CatchQtyPicked Number {
      fetch = "CATCH_QTY";
      label = "Picked Catch Qty";
      lovcolumn = [false];
   }
   attribute LocationNo Text {
      fetch = "Location_No";
      label = "Location No";
      lovcolumn = [false];
   }
   attribute Warehouse Text {
      fetch = "WAREHOUSE";
      label = "Warehouse ID";
      lovcolumn = [false];
   }
   attribute BayNo Text {
      fetch = "BAY_NO";
      label = "Bay ID";
      lovcolumn = [false];
   }
   attribute RowNo Text {
      fetch = "ROW_NO";
      label = "Row ID";
      lovcolumn = [false];
   }
   attribute TierNo Text {
      fetch = "TIER_NO";
      label = "Tier ID";
      lovcolumn = [false];
   }
   attribute BinNo Text {
      fetch = "BIN_NO";
      label = "Bin ID";
      lovcolumn = [false];
   }
   attribute HandlingUnitId Number {
      fetch = "Handling_Unit_Id";
      label = "Handling Unit ID";
      lovcolumn = [true];
   }
   attribute HandlingUnitTypeId Text {
      fetch = "HANDLING_UNIT_TYPE_ID";
      label = "Handling Unit Type ID";
      lovcolumn = [false];
   }
   attribute HandlingUnitTypeDesc Text {
      fetch = "HANDLING_UNIT_TYPE_DESC";
      label = "Description";
      lovcolumn = [false];
   }
   attribute Sscc Text {
      fetch = "SSCC";
      label = "SSCC";
      lovcolumn = [false];
   }
   attribute AltHandlingUnitLabelId Text {
      fetch = "Alt_Handling_Unit_Label_Id";
      label = "Alt Handling Unit Label ID";
      lovcolumn = [false];
   }
   attribute LotBatchNo Text {
      fetch = "lot_batch_no";
      label = "Lot/Batch No";
      lovcolumn = [true];
   }
   attribute SerialNo Text {
      fetch = "Serial_No";
      label = "Serial No";
      lovcolumn = [true];
   }
   attribute EngChgLevel Text {
      fetch = "ENG_CHG_LEVEL";
      label = "Rev No";
      lovcolumn = [true];
   }
   attribute WaivDevRejNo Text {
      fetch = "WAIV_DEV_REJ_NO";
      label = "W/D/R No";
      lovcolumn = [true];
   }
   attribute ConfigurationId Text {
      fetch = "CONFIGURATION_ID";
      label = "Configuration ID";
      lovcolumn = [true];
   }
   @DynamicComponentDependency PROJ
   attribute ProjectId Text {
      label = "Project ID";
      fetch = "DECODE(activity_seq, 0, NULL, Activity_API.Get_Project_Id(activity_Seq))";
   }
   attribute ActivitySeq Number {
      fetch = "ACTIVITY_SEQ";
      label = "Activity Sequence";
      lovcolumn = [true];
   }
   attribute PickListNo Text {
      fetch = "PICK_LIST_NO";
      lovcolumn = [true];
   }
   attribute DelnoteNo Text {
      fetch = "DELNOTE_NO";
      lovcolumn = [false];
   }
   attribute QtyAssigned Text {
      fetch = "QTY_ASSIGNED";
      lovcolumn = [false];
   }
   attribute LocationType Enumeration(InventoryLocationType) {
      fetch = "NULL";
      editable = [false];
   }
   reference ShipmentIdRef(ShipmentId) to Shipment(ShipmentId) {
      label = "Shipment ID";
   }
   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference PartNoRef(Contract, PartNo) to InventoryPartLov(Contract, PartNo) {
      label = "Part";
   }
   reference SenderIdRef(SenderId) to ShipmentSender(SenderId) {
      label = "Sender ID";
   }
   reference ReceiverIdRef(ReceiverId) to ShipmentReceiver(ReceiverId) {
      label = "Receiver ID";
   }
   reference HandlingUnitTypeIdRef(HandlingUnitTypeId) to HandlingUnitType(HandlingUnitTypeId) {
      label = "Handling Unit Type";
   }
   array DetailReturnToStock(PartNo, Contract, ConfigurationId, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq) to InventoryPartInStock(PartNo, Contract, ConfigurationId, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq)
      {
      where = ":child.PartNo = :parent.PartNo AND :child.Contract = :parent.Contract AND :child.ConfigurationId = :parent.ConfigurationId AND
               :child.LotBatchNo = :parent.LotBatchNo AND :child.LotBatchNo = :parent.LotBatchNo AND :child.SerialNo = :parent.SerialNo AND
               :child.EngChgLevel = :parent.EngChgLevel AND :child.WaivDevRejNo = :parent.WaivDevRejNo AND :child.ActivitySeq = :parent.ActivitySeq AND
               (:child.HandlingUnitId = :parent.HandlingUnitId OR :child.HandlingUnitId = 0) AND
               ((:parent.SourceRefType != 'PURCH_RECEIPT_RETURN' AND NOT(:parent.SourceRefType = 'SHIPMENT_ORDER' AND :parent.DemandCode IS NOT NULL AND :parent.DemandCode = 'PR') AND :child.LocationType = 'PICKING') OR
               (:parent.SourceRefType = 'PURCH_RECEIPT_RETURN' AND :child.LocationType IN('PICKING', 'QA', 'ARRIVAL')) OR
               (:parent.SourceRefType = 'SHIPMENT_ORDER' AND :parent.DemandCode IS NOT NULL AND :parent.DemandCode = 'PR' AND :child.LocationType IN('QA', 'ARRIVAL')))";
   }
}

@Override
entity InventoryPartInStock {
   crud = Create, Update, Read;
   keys = PartNo, Contract, LocationNo, ConfigurationId, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq, HandlingUnitId {
      where = "PART_NO = :PartNo and CONTRACT = :Contract and LOCATION_NO = :LocationNo and CONFIGURATION_ID = :ConfigurationId and LOT_BATCH_NO = :LotBatchNo and
      SERIAL_NO = :SerialNo and ENG_CHG_LEVEL = :EngChgLevel and WAIV_DEV_REJ_NO = :WaivDevRejNo and ACTIVITY_SEQ = :ActivitySeq and HANDLING_UNIT_ID = :HandlingUnitId";
   }

   use attributes = QtyOnhand, Warehouse, LocationType;
   action ReturnFromShipInv {
      ludependencies = InventoryPartsInShipmentInventory, InventoryPartInStock;
      supportwarnings = [true];
      parameter SourceRef1          Text;
      parameter SourceRef2          Text;
      parameter SourceRef3          Text;
      parameter SourceRef4          Text;
      parameter SourceRefType     Enumeration(LogisticsSourceRefType);
      parameter FromContract        Text;
      parameter FromLocationNo      Text;
      parameter FromHandlingUnitId  Number;
      parameter QtyToReturn         Number;
      parameter CatchQtyToReturn    Number;
      parameter PickListNo          Text;
      parameter ShipmentId          Number;
      parameter Note                Text;
   }
   attribute HandlingUnitId Number {
      fetch = "handling_unit_id";
      label = "Handling Unit ID";
      required = [false];
      insertable = [false];
      updatable = [false];
      editable = [false];
      implementationtype = "NUMBER";
   }
   attribute ConfigurationId Text {
      fetch = "configuration_id";
      label = "Configuration Id";
      maxlength = 50;
      required = [false];
      insertable = [false];
      updatable = [false];
      editable = [false];
      format = uppercase;
      implementationtype = "VARCHAR2(50)";
   }
   attribute QtyOnhand Number {
      fetch = "qty_onhand";
      label = "On Hand Qty";
      required = [false];
      insertable = [false];
      updatable = [false];
      editable = [false];
      implementationtype = "NUMBER";
   }
   attribute CatchQtyOnhand Number {
      fetch = "catch_qty_onhand";
      label = "On Hand Catch Qty";
      required = [false];
      insertable = [false];
      updatable = [false];
      editable = [false];
      implementationtype = "NUMBER";
   }
   attribute QtyToReturn Number {
      fetch = "NULL";
      label = "Qty To Return";
      editable = [true];
      lovcolumn = [false];
   }
   attribute CatchQtyToReturn Number {
      fetch = "NULL";
      label = "Catch Qty To Return";
      required = [false];
      editable = [true];
      lovcolumn = [false];
   }
   attribute CatchUom Text {
      fetch = "Inventory_Part_API.Get_Enabled_Catch_Unit_Meas(CONTRACT, PART_NO)";
      label = "Catch UoM";
      required = [false];
      insertable = [false];
      updatable = [false];
      editable = [false];
      lovcolumn = [false];
   }
   attribute Note Text {
      fetch = "NULL";
      required = [false];
      insertable = [true];
      updatable = [true];
      editable = [true];
      lovcolumn = [false];
   }
   attribute SourceRef1 Text {
      fetch = "NULL";
      label = "Source Ref 1";
      editable = [false];
      format = uppercase;
   }
   attribute SourceRef2 Text {
      fetch = "NULL";
      label = "Source Ref 2";
      editable = [false];
      format = uppercase;
   }
   attribute SourceRef3 Text {
      fetch = "NULL";
      label = "Source Ref 3";
      editable = [false];
      format = uppercase;
   }
   attribute SourceRef4 Text {
      fetch = "NULL";
      label = "Source Ref 4";
      editable = [false];
      format = uppercase;
   }
   attribute SourceRefType Enumeration(LogisticsSourceRefType) {
      fetch = "NULL";
      label = "Source Ref type";
      editable = [false];
      format = uppercase;
   }
   attribute ShipmentId Number {
      fetch = "NULL";
      label = "Shipment ID";
      editable = [false];
   }
   attribute PickListNo Text {
      fetch = "NULL";
      label = "Pick List No";
      editable = [false];
      format = uppercase;
   }
   attribute FromContract Text {
      fetch = "NULL";
      label = "From Contract";
      editable = [false];
      format = uppercase;
   }
   attribute FromLocationNo Text {
      fetch = "NULL";
      label = "From Location No";
      editable = [false];
      format = uppercase;
   }
   attribute FromHandlingUnitId Number {
      fetch = "NULL";
      label = "From Handling Unit Id";
      editable = [false];
   }
   attribute RemoteWarehouse Boolean {
      fetch = "Warehouse_API.Get_Remote_Warehouse_Db(contract, warehouse)";
      editable = [false];
   }
   attribute LocationType Enumeration(InventoryLocationType) {
      editable = [false];
      required = [false];
   }
   reference LocationNoRef(Contract, LocationNo) to InventoryLocation17(Contract, LocationNo) {
      label = "Location No";
   }

}

--------------------------------- FUNCTIONS ---------------------------------

function GetOnhandQtys Structure(OnhandQtyStruc) {
   parameter Contract Text;
   parameter PartNo Text;
   parameter ConfigurationId Text;
   parameter LocationNo Text;
   parameter LotBatchNo Text;
   parameter SerialNo Text;
   parameter EngChgLevel Text;
   parameter WaivDevRejNo Text;
   parameter ActivitySeq Number;
   parameter HandlingUnitId Number;
}

function StringToNumber Number {
   parameter String Text;
}

function SenderIdFilter List<Entity(ShipmentSender)> {
   parameter SenderType Enumeration(SenderReceiverType.SenderReceiver);
   where = " SENDER_TYPE_DB = :SenderType";
}

function ReceiverIdFilter List<Entity(ShipmentReceiver)> {
   parameter ReceiverType Enumeration(SenderReceiverType.Shipment);
   where = " RECEIVER_TYPE_DB = :ReceiverType";
}

function LocationTypeFilter List<Entity(InventoryLocation17)> {
   parameter SourceRefType Enumeration(LogisticsSourceRefType);
   parameter DemandCode Enumeration(OrderSupplyType);
   where = "((:SourceRefType = 'PURCH_RECEIPT_RETURN' AND LOCATION_TYPE_DB IN ('PICKING', 'QA', 'ARRIVAL')) OR
             (:SourceRefType = 'SHIPMENT_ORDER' AND :DemandCode IS NOT NULL AND :DemandCode = 'PR' AND LOCATION_TYPE_DB IN ('QA', 'ARRIVAL')) OR
             ((:SourceRefType <> 'PURCH_RECEIPT_RETURN') AND
               NOT(:SourceRefType = 'SHIPMENT_ORDER' AND (:DemandCode IS NOT NULL AND :DemandCode = 'PR')) AND LOCATION_TYPE_DB = 'PICKING'))";
}
---------------------------------- ACTIONS ----------------------------------

action ReturnFromShipInvToNewLoc {
   initialcheck UserAllowedSite(Contract);
   ludependencies = InventoryPartsInShipmentInventory, InventoryPartInStock;
   supportwarnings = [true];
   parameter PartNo              Text;
   parameter Contract            Text;
   parameter LocationNo          Text;
   parameter LotBatchNo          Text;
   parameter SerialNo            Text;
   parameter EngChgLevel         Text;
   parameter WaivDevRejNo        Text;
   parameter ActivitySeq         Number;
   parameter SourceRef1          Text;
   parameter SourceRef2          Text;
   parameter SourceRef3          Text;
   parameter SourceRef4          Text;
   parameter SourceRefType     Enumeration(LogisticsSourceRefType);
   parameter FromContract        Text;
   parameter FromLocationNo      Text;
   parameter FromHandlingUnitId  Number;
   parameter QtyToReturn         Number;
   parameter CatchQtyToReturn    Number;
   parameter PickListNo          Text;
   parameter ShipmentId          Number;
   parameter Note                Text;
}

action CreateOrdPreShipDelNote {
   initialcheck implementation;
   parameter SourceRef1 Text;
   parameter FromLocationNo Text;
}

-------------------------------- STRUCTURES ---------------------------------

structure OnhandQtyStruc {
   attribute QtyOnhand Number;
   attribute CatchQtyOnhand Number;
}
