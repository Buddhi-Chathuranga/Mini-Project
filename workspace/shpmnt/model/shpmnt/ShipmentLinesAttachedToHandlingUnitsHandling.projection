--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-07-11  RaVdlk  SCUXXW4-4904, Made the entity a query
-- 2018-07-10  Dinglk  SCUXXW4-4904, Converted tbwShipmentLinesAttachedToHU using MTG Version: 1.23
--------------------------------------------------------------------------------------

projection ShipmentLinesAttachedToHandlingUnitsHandling;
component SHPMNT;
layer Core;
description "Use this API to view shipment lines that are attached to handling units, in detail.";
category Users;
include fragment ShipmentReceiverSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset ShipmentLineHandlUnitSet for ShipmentLineHandlUnit;

------------------------------ ENTITY DETAILS -------------------------------
@Override
query ShipmentLineHandlUnit {

   from = "shipment_line_handl_unit_res";
   lu = ShipmentLineHandlUnit;
   keys = ShipmentId, ShipmentLineNo, HandlingUnitId;
   attribute ShipmentId Number {
      label = "Shipment ID";
   }

   attribute ShipmentLineNo Number;

   attribute Contract Text {
      fetch = "CONTRACT";
      label = "Site";
      format = uppercase;
   }
   attribute ShipmentStatus Enumeration(ShipmentStatus) {
      fetch = "SHIPMENT_STATUS";
      label = "Status";
   }
   attribute ReceiverType Text {
      fetch = "RECEIVER_TYPE";
      label = "Receiver Type";
   }
   attribute ReceiverTypeDb Text {
      fetch = "RECEIVER_TYPE_DB";
      label = "Receiver Type";
   }
   attribute ReceiverId Text {
      fetch = "RECEIVER_ID";
      label = "Receiver ID";
      format = uppercase;
   }
   attribute ReceiverName Text {
      fetch = "RECEIVER_NAME";
      label = "Receiver Description";
   }
   attribute ShipmentCreatedDate Date {
      fetch = "SHIPMENT_CREATED_DATE";
      label = "Created Date";
   }
   attribute ShipmentType Text {
      fetch = "SHIPMENT_TYPE";
      label = "Shipment Type";
   }
   attribute HandlingUnitId Number;

   attribute HandlingUnitTypeId Text {
      fetch = "HANDLING_UNIT_TYPE_ID";
      label = "Handling Unit Type ID";
      format = uppercase;
   }
   attribute HandlingUnitTypeDescription Text {
      fetch = "HANDLING_UNIT_TYPE_API.Get_Description(HANDLING_UNIT_TYPE_ID)";
      label = "Handling Unit Type Description";
   }

   attribute HandlingUnitCategoryDescription Text {
      fetch = "HANDLING_UNIT_TYPE_API.Get_Handl_Unit_Category_Desc(HANDLING_UNIT_TYPE_ID)";
      label = "Handling Unit Category Description";
   }
   attribute SourceRef1 Text {
      fetch = "SOURCE_REF1";
      label = "Source Ref 1";
      format = uppercase;
   }
   attribute SourceRef2 Text {
      fetch = "SOURCE_REF2";
      label = "Source Ref 2";
   }

   attribute SourceRef3 Text {
      fetch = "SOURCE_REF3";
      label = "Source Ref 3";
   }

   attribute SourceRef4 Text {
      fetch = "SOURCE_REF4";
      label = "Source Ref 4";
   }
   attribute SourceRefType Enumeration(LogisticsSourceRefType.Shipment) {
      //! TODO: Currently used enumeration method 'Enumerate_Shipment' is not the standard 'Enumerate' method! Please verify the usage of it, trying to use the standard enumeration method with/without a subset
      fetch = "SOURCE_REF_TYPE_DB";
      label = "Source Ref Type";
   }
   attribute SourcePartNo Text {
      fetch = "SOURCE_PART_NO";
      label = "Source Part No";
   }
   attribute Quantity Number {
      label = "Attached Quantity";
   }
   attribute QuantityAttachedReservation Number {
      fetch = "QUANTITY_ATTACHED_RESERVATION";
      label = "Quantity Attached Reservation";
   }

   attribute SourceUnitMeas Text {
      fetch = "SOURCE_UNIT_MEAS";
      label = "Source UoM";
   }

   reference HandlingUnitTypeRef(HandlingUnitTypeId) to HandlingUnitType(HandlingUnitTypeId);

   reference ContractRef(Contract) to Site(Contract) {
      label = "Site";
   }
   reference ShipmentTypeRef(ShipmentType) to ShipmentType(ShipmentType) {
      label = "Shipment Type";
   }
   reference HandlingUnitIdRef(HandlingUnitId) to HandlingUnit(HandlingUnitId) {
      label = "Handling Unit ID";
   }
   reference HandlingUnitTypeIdRef(HandlingUnitTypeId) to HandlingUnitType(HandlingUnitTypeId) {
      label = "Handling Unit Type ID";
   }
   reference ReceiverIdRef(ReceiverId) to ShipmentReceiver(ReceiverId) {
      label = "Receiver ID";
   }
}

------------------------------- ENUMERATIONS --------------------------------
@Override
enumeration ShipmentStatus {
   exec = "SHIPMENT_API";
   value = "Cancelled" {
      identifier = "Cancelled";
      label = "Cancelled";
   }
   value = "Closed" {
      identifier = "Closed";
      label = "Closed";
   }
   value = "Completed" {
      identifier = "Completed";
      label = "Completed";
   }
   value = "Preliminary" {
      identifier = "Preliminary";
      label = "Preliminary";
   }
}

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

