----------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------
-- 190328      JaBalk  SCUXXW4-18236, Corrected reported issues.
-- 190327      JaBalk  SCUXXW4-17901, Corrected reported issues.
-- 181204      RAKUSE  SCUXXW4-4684, Converted dialog 'dlgPSheetShipConPickList' using MTG Version: 1.34
----------------------------------------------------------------------------------------------------
projection CreateConsolidatedPickListforShipmentsHandling;
component SHPMNT;
layer Core;
description "Scheduled Task Assistant handling ''P Sheet Con Pick List''";
category Users;
include fragment ScheduledTasksCommon;
include fragment UserAllowedSiteLovSelector;
include fragment InventoryLocation7Selector;
include fragment ShipmentLov;
include fragment ConsolidatedShipmentLov;
@DynamicComponentDependency ORDER
include fragment CustOrdCust1Lov;
include fragment MpccomShipViaLovSelector;
include fragment ShipmentTypeSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset ShipmentLovLovListSet for ShipmentLov;
entityset ShipmentTypeLovListSet for ShipmentType;
entityset ShipmentLov2LovListSet for ShipmentLov2;
@DynamicComponentDependency ORDER
entityset CustOrdCust1LovListSet for CustOrdCust1;
entityset MpccomShipViaLovLovListSet for MpccomShipViaLov;
entityset DeliveryRouteLovListSet for DeliveryRoute;
entityset ForwarderInfoLovListSet for ForwarderInfo;
entityset InventoryLocation7LovListSet for InventoryLocation7;
entityset WorkTimePeriodLovListSet for WorkTimePeriod;
entityset StorageZoneLovListSet for StorageZone;


-------------------------------- STRUCTURES----------------------------------

@Override
structure ParametersStructure {
   attribute Contract Text;
   attribute Consolidate Enumeration(PickListConsolidation.ForShipment);
   attribute PrintPickList Boolean("1", "0");
   attribute ShipmentId Text;
   attribute ConsolidatedShipmentId Text;
   attribute ShipmentType Text;
   attribute CustomerNo Text;
   attribute RouteId Text;
   attribute ForwardAgent Text;
   attribute ShipViaCode Text;
   attribute ShipPeriod Text;
   attribute DueDate Date;
   attribute ShipDate Date;
   attribute DueDateExecutionOffset Number;
   attribute ShipDateExecutionOffset Number;
   attribute LocationGroup Text;
   attribute ShipmentLocation Text;
   attribute StorageZone Text;
   attribute MaxShipmentOnPickList Text;
   @DynamicComponentDependency ORDER
   attribute IncludeShipments Enumeration(ConsolPickInclCustOrd);
}

--------------------------------- VIRTUALS ----------------------------------

@Override
virtual TaskVirtual using BatchSchedule {
   attribute Contract Text {
      required = [true];
   }
   attribute Consolidate Enumeration(PickListConsolidation.ForShipment) {
      required = [true];
   }
   attribute PrintPickList Boolean("1", "0");

   attribute ShipmentId Text;
   attribute ConsolidatedShipmentId Text;
   attribute ShipmentType Text {
      format = uppercase;
   }
   attribute CustomerNo Text {
      format = uppercase;
   }
   attribute RouteId Text {
      format = uppercase;
   }
   attribute ForwardAgent Text {
      format = uppercase;
   }
   attribute ShipViaCode Text {
      format = uppercase;
   }
   attribute ShipPeriod Text {
      format = uppercase;
   }
   attribute DueDate Date;
   attribute ShipDate Date;
   attribute DueDateExecutionOffset Number;
   attribute ShipDateExecutionOffset Number;
   attribute LocationGroup Text {
      format = uppercase;
   }
   attribute ShipmentLocation Text {
      format = uppercase;
   }
   attribute StorageZone Text {
      format = uppercase;
   }
   attribute MaxShipmentOnPickList Text;
   @DynamicComponentDependency ORDER
   attribute IncludeShipments Enumeration(ConsolPickInclCustOrd);
   attribute  OnlyHuInOneStep Boolean("TRUE", "FALSE");

   reference ContractRef(Contract) to UserAllowedSiteLov(Contract);
   reference ShipmentIdRef(Contract, ShipmentId) to ShipmentLov(Contract, ShipmentId);
   reference ConsolidatedShipmentIdRef(Contract, ConsolidatedShipmentId) to ShipmentLov2(Contract, ShipmentId);
   reference ShipmentTypeRef(ShipmentType) to ShipmentType(ShipmentType);
   @DynamicComponentDependency ORDER
   reference CustomerNoRef(CustomerNo) to CustOrdCust1(CustomerNo);
   reference ShipViaCodeRef(ShipViaCode) to MpccomShipViaLov(ShipViaCode);
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId);
   reference ForwardAgentRef(ForwardAgent)to ForwarderInfo(ForwarderId);
   reference ShipmentLocationRef(Contract, ShipmentLocation) to InventoryLocation7(Contract, LocationNo);
   reference ShipPeriodRef(ShipPeriod) to WorkTimePeriod(Period);
   reference LocationGroupRef(LocationGroup) to InventoryLocationGroup(LocationGroup);
   reference StorageZoneRef(Contract, StorageZone) to StorageZone(Contract, StorageZoneId);
   ---------------------------
   ---

}
--------------------------------- FUNCTIONS ---------------------------------
function LocationGroupRefFilter List<Entity(InventoryLocationGroup)> {
   parameter Contract Text;
   where = "INVENTORY_LOCATION_TYPE_DB = 'PICKING' AND LOCATION_GROUP in (select LOCATION_GROUP from INVENTORY_LOCATION where CONTRACT = :Contract)";
}
