
--  Date       Sign    History
--  ---------  ------  ---------------------------------------------------------
--  2020-07-29 RoJalk  SCXTEND-4046, Created
--  ---------  ------  ---------------------------------------------------------

fragment ReservationsAttachedToHandlingUnitBase;
component SHPMNT;
layer Core;
description "This fragment include common code related to ShipmentReservHandlUnit whitch includes shipment lines reservations that are attached to handling units";

--------------------------------- FRAGMENTS ---------------------------------


----------------------------- CLIENT FRAGMENTS ------------------------------

list ReservationsAttachedToHandlingUnitBaseList for ShipmentReservHandlUnit {

   orderby = HandlingUnitId, ShipmentLineNo;

   field ShipmentId;
   field ShipmentLineNo;
   field HandlingUnitIdRef;
   field HandlingUnitRef.HandlingUnitTypeId {
      size = Small;
      label = "Handling Unit Type ID";
   }
   field TypeDescription {
      size = Small;
   }
   field CategoryID {
      size = Small;
   }
   field CategoryDescription {
      size = Small;
   }
   field PartNo {
      size = Small;
   }
   field PartDescription {
      size = Small;
   }
   field CondCode {
      size = Small;
   }
   field Quantity;
   field InventoryUom {
      size = Small;
   }
   field CatchQtyToReassign {
      editable = [CatchUom != null];
   }
   field CatchUom {
      size = Small;
   }
   field SourceRef1 {
      size = Small;
   }
   field SourceRef2Client {
      size = Small;
   }
   field SourceRef3Client {
      size = Small;
   }
   field SourceRef4Client {
      size = Small;
   }
   field SourceRefType {
      size = Small;
      label = "Source Ref Type";
   }
   field SerialNo {
      size = Small;
   }
   field LotBatchNo {
      size = Small;
   }
   field EngChgLevel {
      size = Small;
   }
   field WaivDevRejNo {
      size = Small;
   }
   field Contract {
      size = Small;
   }
   field ConfigurationId {
      size = Small;
   }
   field ActivitySeq;
   field LocationNo {
      size = Small;
   }
   field PickListNo {
      size = Small;
   }
   field ReservHandlingUnitId;
}

--------------------------- PROJECTION FRAGMENTS ----------------------------

entityset ShipmentReservHandlUnitSet for ShipmentReservHandlUnit;

@Override
entity ShipmentReservHandlUnit {
   crud = Read, Update;

   use attributes = Quantity;

   attribute ShipmentLineNo Number {
      label = "Shipment Line Number";
   }
   attribute SourceRef2Client Text {
      fetch = "DECODE(SOURCE_REF2,'*', NULL, SOURCE_REF2)";
      label = "Source Ref 2";
      editable = [false];
   }
   attribute SourceRef3Client Text {
      fetch = "DECODE(SOURCE_REF3,'*', NULL, SOURCE_REF3)";
      label = "Source Ref 3";
      editable = [false];
   }
   attribute SourceRef4Client Text {
      fetch = "DECODE(SOURCE_REF4,'*', NULL, SOURCE_REF4)";
      label = "Source Ref 4";
      editable = [false];
   }
   attribute TypeDescription Text {
      fetch = "Handling_Unit_Type_API.Get_Description(Handling_Unit_API.Get_Handling_Unit_Type_Id(handling_unit_id))";
      label = "Type Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute CategoryID Text {
      fetch = "Handling_Unit_Type_API.Get_Handling_Unit_Category_Id(Handling_Unit_API.Get_Handling_Unit_Type_Id(handling_unit_id))";
      label = "Category ID";
      maxlength = 2000;
      editable = [false];
   }
   attribute CategoryDescription Text {
      fetch = "Handling_Unit_Type_API.Get_Handl_Unit_Category_Desc(Handling_Unit_API.Get_Handling_Unit_Type_Id(handling_unit_id))";
      maxlength = 2000;
      editable = [false];
   }
   attribute PartDescription Text {
      fetch = "Inventory_Part_API.Get_Description(contract, part_no)";
      maxlength = 2000;
      editable = [false];
   }
   attribute CondCode Text {
      fetch = "Shipment_Source_Utility_API.Get_Condition_Code__(source_ref1, source_ref2, source_ref3, source_ref4, Shipment_Line_API.Get_Source_Ref_Type_Db(shipment_id, shipment_line_no))";
      maxlength = 2000;
      editable = [false];
   }
   attribute Quantity Number {
      label = "Attached Qty";
   }
   attribute CatchQtyToReassign Number {
      label = "Attached Catch Qty";
      editable = [true];
      updatable = [true];
   }
   attribute InventoryUom Text {
      fetch = "Inventory_Part_API.Get_Unit_Meas(contract, part_no)";
      label = "Inventory UoM";
      maxlength = 2000;
      editable = [false];
   }
   attribute CatchUom Text {
      fetch = "Inventory_Part_API.Get_Enabled_Catch_Unit_Meas(contract, part_no)";
      label = "Catch UoM";
      maxlength = 2000;
      editable = [false];
   }
   attribute LotBatchNo Text {
      label = "Lot/Batch No";
   }
   attribute EngChgLevel Text {
      label = "Part Revision";
      editable = [false];
   }
   attribute PickListNo Text {
      editable = [false];
   }
   attribute ReservHandlingUnitId Number {
      editable = [false];
   }
   attribute PrintLabelsHU Text {
      fetch = "Handling_Unit_Ship_Util_API.Print_Labels_Exist_On_Shipment(Shipment_Id, Handling_Unit_Id)";
      editable = [false];
   }
   attribute ShipmentObjstate Text {
      fetch = "Shipment_API.Get_Objstate(shipment_id)";
      label = "Shipment Objstate";
      maxlength = 2000;
      editable = [false];
   }
   attribute SourceRefType Text {
      fetch = "Shipment_Line_API.Get_Source_Ref_Type(Shipment_Id, Shipment_Line_No)";
      label = "Source Ref Type";
      editable = [false];
   }

   reference HandlingUnitRef(HandlingUnitId) to HandlingUnit(HandlingUnitId);
   reference InventoryPartRef(Contract, PartNo) to InventoryPart(Contract, PartNo);
   reference HandlingUnitIdRef(ShipmentId, ShipmentLineNo, HandlingUnitId) to ShipmentLineHandlUnit(ShipmentId, ShipmentLineNo, HandlingUnitId) {
      label = "Handling Unit ID";
   }
}