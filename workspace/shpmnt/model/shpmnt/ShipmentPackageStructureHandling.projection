
--  Date       Sign    History
--  ------     ------  ---------------------------------------------------------
-- 2022-06-23  AsZelk  SCDEV-11874, Added SourceRef4Number for ShipmentPackageLine and ShipmentPackageComponentLine queries and removed unused SourceRef4Ref.
-- 2021-02-18  RoJalk  SC2020R1-12619, Removed SourceRef4Ref since Customer Order Lines will not show Component parts.
-- 2019-03-12  Kubalk  SCUXXW4-17362, Dependency annotations added.
-- 2018-09-11  RaVdlk  SCUXXW4-4794, Changed the names of queries and entity sets
-- 2018-09-10  HPetse  SCUXXW4-4794, Added description
-- 2018-09-03  RaVdlk  SCUXXW4-4794, Converted frmShipmentPackageStructure using MTG Version: 1.26
--  ------     ------  ---------------------------------------------------------

projection ShipmentPackageStructureHandling;
component SHPMNT;
layer Core;
description "Use this API to view the customer order package part and its components for a shipment line.";
category Users;
include fragment IntorderPartLovSelector;
@DynamicComponentDependency ORDER
include fragment CampaignCustOrdLineSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------

entityset ShipmentPackageComponentLineSet for ShipmentPackageComponentLine;
entityset ShipmentPackageLineSet for ShipmentPackageLine;

------------------------------ ENTITY DETAILS -------------------------------
query ShipmentPackageLine {
   from = "SHIPMENT_LINE";
   lu = ShipmentLine;
   keys = ShipmentId, ShipmentLineNo;

   attribute ShipmentId Number {
      fetch = "SHIPMENT_ID";
      label = "Shipment ID";
   }
   attribute ShipmentLineNo Number {
      fetch = "SHIPMENT_LINE_NO";
      label = "Line No";
   }
   attribute SourceRef1 Text {
      label = "Source Ref 1";
   }
   attribute SourceRef2 Text {
      label = "Source Ref 2";
   }
   attribute SourceRef3 Text {
      label = "Source Ref 3";
   }
   attribute SourcePartNo Text {
      label = "Package Part No";
   }
   attribute SourcePartDescription Text {
      label = "Part Description";
   }
   attribute QtyAssigned Number {
      label = "Reserved Qty";
   }
   attribute QtyPicked Number {
      label = "Picked Qty";
   }
   attribute QtyShipped Number {
      label = "Delivered Qty";
   }
   attribute SourceRef4 Text;
   attribute SourceRef4Number Number {
      label = "Source Ref 4";
      fetch = "TO_NUMBER(SOURCE_REF4)";
   }
   attribute ConnectedSourceQty Number {
      fetch = "CONNECTED_SOURCE_QTY";
   }

   @DynamicComponentDependency ORDER
   reference CustomerOrderRef(SourceRef1) to CustomerOrder(OrderNo);
   array PackStructureArray(ShipmentId, SourceRef1, SourceRef2, SourceRef3) to ShipmentPackageComponentLine(ShipmentId, SourceRef1, SourceRef2, SourceRef3) {
      where = "SOURCE_REF4 > 0";
   }
}

query ShipmentPackageComponentLine {
   from = "shipment_line_ovw";
   lu = ShipmentLine;
   keys = ShipmentId, ShipmentLineNo {
      where = "SOURCE_REF_TYPE_DB = CUSTOMER_ORDER";
   }

   attribute ShipmentLineNo Number {
      fetch = "SHIPMENT_LINE_NO";
      label = "Line No";
   }
   attribute SourceRef4 Text {
      fetch = "SOURCE_REF4";
      label = "Source Ref 4";
   }
   attribute SourceRef4Number Number {
      label = "Source Ref 4";
      fetch = "TO_NUMBER(SOURCE_REF4)";
   }
   attribute SourcePartNo Text {
      fetch = "SOURCE_PART_NO";
      label = "Component Part";
      format = uppercase;
   }
   attribute SourcePartDescription Text {
      fetch = "SOURCE_PART_DESCRIPTION";
      label = "Description";
   }
   @DynamicComponentDependency ORDER
   attribute ConditionCodeDescription Text {
      fetch = "Condition_Code_API.Get_Description(Customer_Order_Line_API.Get_Condition_Code(SOURCE_REF1, SOURCE_REF2, SOURCE_REF3, SOURCE_REF4))";
   }
   attribute ReservedQty Number {
      fetch = "RESERVED_QTY";
   }
   attribute PickedQty Number {
      fetch = "PICKED_QTY";
      label = "Picked Qty";
   }
   attribute QtyToPick Number {
      fetch = "QTY_TO_PICK";
   }
   attribute DeliveredQty Number {
      fetch = "DELIVERED_QTY";
   }
   attribute SourceUnitMeas Text {
      fetch = "SOURCE_UNIT_MEAS";
      label = "UoM";
   }
   attribute ConnectedSourceQty Number {
      fetch = "CONNECTED_SOURCE_QTY";
   }
   @DynamicComponentDependency ORDER
   attribute ConnectableSourceQty Text {
      fetch = "Customer_Order_Line_API.Get_Connectable_Sales_Qty(SOURCE_REF1, SOURCE_REF2, SOURCE_REF3, SOURCE_REF4)";
   }
   attribute ShipmentId Number {
      fetch = "SHIPMENT_ID";
      label = "Shipment ID";
   }
   attribute SourceRef1 Text {
      fetch = "SOURCE_REF1";
      label = "Source Ref 1";
      format = uppercase;
   }
   attribute SourceRef2 Text {
      fetch = "SOURCE_REF2";
      label = "Source Ref 2";
   }
   attribute SourceRef3 Text {
      fetch = "SOURCE_REF3";
      label = "Source Ref 3";
   }
   attribute InventoryPartNo Text {
      fetch = "INVENTORY_PART_NO";
      format = uppercase;
   }
   @DynamicComponentDependency ORDER
   attribute SupplyCodeDb Text {
      fetch = " Customer_Order_Line_API.Get_Supply_Code_Db(SOURCE_REF1, SOURCE_REF2, SOURCE_REF3, SOURCE_REF4)";
   }
   @DynamicComponentDependency ORDER
   attribute CustomerOrderObjstate Text {
      fetch = "Customer_Order_API.Get_Objstate(SOURCE_REF1)";
   }
   @DynamicComponentDependency ORDER
   reference CustomerOrderLineRef(SourceRef1, SourceRef2, SourceRef3, SourceRef4Number) to CustomerOrderLine(OrderNo, LineNo, RelNo, LineItemNo);
   reference InventoryPartNoRef(InventoryPartNo) to IntorderPartLov(Contract) {
      label = "Inventory Part No";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------

