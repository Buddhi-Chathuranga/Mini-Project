
--  Date       Sign    History
--  ------     ------  ---------------------------------------------------------
-- 2022-06-23  AsZelk  SCDEV-11874, Modified ManualReservationsCommand enable condition by using SourceRef4Number instead SourceRef4.
-- 2021-02-18  RoJalk  SC2020R1-12619, Replaced SourceRef4Ref with SourceRef4 since Customer Order Lines will not show Component parts.
-- 2020-02-10  RasDlk  SCSPRING20-170, Modified the command ManualReservationsCommand by adding initcontext to show the title correctly
-- 2020-02-10          when navigating to the manual reservations page.
-- 2019-06-17  RasDlk  SCUXXW4-22437, Corrected the navigation URL in the ManualReservationsCommand.
-- 2019-03-12  Kubalk  SCUXXW4-17362, Dependency annotations added.
-- 2018-09-10  HPetse  SCUXXW4-4794, Changed field sizes, added list label
-- 2018-09-03  RaVdlk  SCUXXW4-4794, Converted frmShipmentPackageStructure using MTG Version: 1.26
--  ------     ------  ---------------------------------------------------------

client ShipmentPackageStructure;
component SHPMNT;
layer Core;
projection ShipmentPackageStructureHandling;
@DynamicComponentDependency ORDER
include fragment CampaignCustOrdLineSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------

-------------------------------- MAIN PAGES ---------------------------------
page Form using ShipmentPackageLineSet {
   label = "Package Part Structure  - ${SourceRef1}";
   singleton ShipmentLineSingleton;
   group ShipmentPackageStructureGroup;
   list PackStructureList(PackStructureArray);
}

-------------------------------- ASSISTANTS ---------------------------------

singleton ShipmentLineSingleton for ShipmentPackageLine;

--------------------------------- COMMANDS ----------------------------------

@DynamicComponentDependency ORDER
command ManualReservationsCommand for ShipmentPackageComponentLine {
   label = "Manual Reservations";
   mode = SelectedRecords;
   enabled = [(InventoryPartNo != null) and(SourceRef4Number >= 0) and(Objstate != "Delivered") and(Objstate != "Invoiced") and(Objstate != "Cancelled")
   and(not(SupplyCodeDb = "PD" or SupplyCodeDb = "IPD"))];
   bulkexecute {
      bulknavigate "page/ManualReservationsForShipmentAndCustomerOrderLine/Form?initcontext=Source:'Shipment Line'&$filter=ShipmentId eq $[ShipmentId] and ShipmentLineNo eq $[ShipmentLineNo]";
   }
}
command ItemPartsInShipmentInventoryCommand for ShipmentPackageComponentLine {
   label = "Inventory Parts in Shipment Inventory";
   mode = SelectedRecords;
   enabled = [PickedQty > 0];
   bulkexecute {
      bulknavigate "page/ShipmentInventory/Form?$filter=ShipmentId eq $[ShipmentId] and ShipmentLineNo eq $[ShipmentLineNo]";
   }
}
command ItemHUsInShipmentInventoryCommand for ShipmentPackageComponentLine {
   label = "Handling Units in Shipment Inventory";
   mode = SelectedRecords;
   enabled = [PickedQty > 0];
   bulkexecute {
      bulknavigate "page/ShipmentInventoryHandlingUnits/Form?$filter=ShipmentId eq $[ShipmentId] and ShipmentLineNo eq $[ShipmentLineNo]";
   }
}
--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------
group ShipmentPackageStructureGroup for ShipmentPackageLine {
   label = "";

   field ShipmentId {
      size = Small;
   }
   field ShipmentLineNo {
      size = Small;
   }
   field SourceRef1 {
      size = Small;
   }
   field SourceRef2 {
      size = Small;
   }
   field SourceRef3 {
      size = Small;
   }
   @DynamicComponentDependency ORDER
   field CustomerOrderRef.Contract {
      label = "Site";
      size = Small;
   }
   @DynamicComponentDependency ORDER
   field CustomerOrderRef.BackorderOption {
      label = "Backorder Option";
   }
   field SourcePartNo {
      size = Small;
   }
   field SourcePartDescription {
      size = Small;
   }
   field ConnectedSourceQty {
      size = Small;
   }
   field QtyAssigned {
      size = Small;
   }
   field QtyPicked {
      size = Small;
   }
   field QtyShipped {
      size = Small;
   }

}

----------------------------------- LISTS -----------------------------------
list PackStructureList for ShipmentPackageComponentLine {
   label = "Components";
   orderby = SourceRef4;
   field ShipmentLineNo;
   field SourceRef4;
   field SourcePartNo;
   field SourcePartDescription {
      size = Large;
   }
   @DynamicComponentDependency ORDER
   field CustomerOrderLineRef.ConfigurationId {
      label = "Configuration ID";
   }
   @DynamicComponentDependency ORDER
   field CustomerOrderLineRef.ConditionCode {
      label = "Condition Code";
   }
   @DynamicComponentDependency ORDER
   field ConditionCodeDescription;
   field ReservedQty;
   field PickedQty;
   field QtyToPick;
   field DeliveredQty;
   @DynamicComponentDependency ORDER
   field CustomerOrderLineRef.QtyPerAssembly {
      label = "Qty/Assembly";
   }
   field SourceUnitMeas;
   field ConnectedSourceQty;
   @DynamicComponentDependency ORDER
   field ConnectableSourceQty;

   commandgroup PackageStructureCmdGroup {
      label = "Package Structure Command Group";
      @DynamicComponentDependency ORDER
      command ManualReservationsCommand;
      command ItemPartsInShipmentInventoryCommand;
      command ItemHUsInShipmentInventoryCommand;
   }
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

--------------------------------- CHECKLIST ---------------------------------

