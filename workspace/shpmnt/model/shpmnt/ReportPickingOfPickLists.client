
--  Date       Sign    History
--  ------     ------  ---------------------------------------------------------
-- 2021-06-10  PamPlk  Bug 159730(SCZ-15165), Modified the ReportPickingCommand by adding a info message.
-- 2021-03-11  SBalLK  SC2020R1-12873, Added dynamic dependency for navigator entries.
-- 2020-04-08  RasDlk  SCSPRING20-689, Modified ReportPickingCommand by passing the SenderTypeDb in the stringify.
-- 2020-03-24  RasDlk  SCSPRING20-689, Modified ReportPickingCommand by passing the SenderType and SenderId parameters for MovePartsIntoShipmentInventoryDialog.
-- 2020-03-24          Modified the enable condition of ReportPickingCommand to check whether all selected lines have the same SenderType and SenderId.
-- 2020-03-24          Added sender information to the PickReportPickListsList.
-- 2020-01-29  RasDlk  SCSPRING20-689, Replaced the function name CheckDialogTwo with CheckReportPickingOfPickLists.
-- 2019-11-06  FRBESE  SCXTEND-1156, Changed PickListNavEntry navigator entry index from 1000 to 800.
-- 2019-11-01  FRBESE  SCXTEND-1155, Changed ShipmentManagementPickReportPickListsNavEntry navigator entry index from 500 to 400.
-- 2019-10-31  chlelk  SCXTEND-1321, The startupmode was set to "Search"
-- 2019-04-30  SBalLK  SCUXXW4-20160, Resolved navigation issue in ReportPickingofPickListCommand.
-- 2019-01-08  RasDlk  SCUXXW4-12769, Handled the dialog dlgShipmentLocation in 'Report Picking' RMB.
-- 2018-08-03  RaVdlk  SCUXXW4-4874, Implementations of ReportPickingofCustomerOrdeCommand and ReportPickingCommand
-- 2018-08-02  RaVdlk  SCUXXW4-4874, Converted tbwPickReportPickLists using MTG Version: 1.24
--  ------     ------  ---------------------------------------------------------

client ReportPickingOfPickLists;
component SHPMNT;
layer Core;
projection ReportPickingOfPickListsHandling;

include fragment UserAllowedSiteLovSelector;
include fragment MovePartsIntoShipmentInventoryDialog;
include fragment ShipmentReceiverSelector;
include fragment ShipmentSenderSelector;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   @DynamicComponentDependency ORDER
   entry SalesPickReportPickListsNavEntry parent OrderNavigator.ShippingPicking at index 500 {
      label = "Report Picking of Pick Lists";
      page List;
   }

   entry ShipmentManagementPickReportPickListsNavEntry parent ShpmntNavigator.OutboundShipmentPicking at index 400 {
      label = "Report Picking of Pick Lists";
      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------

page List using PickReportPickListSet {
   label = "Report Picking of Pick Lists";
   startupmode = search;
   list PickReportPickListsList;
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command ReportPickingCommand for PickReportPickList {
   label = "Report Picking";
   mode = SelectedRecords;
   enabled = [(UseReportPickListLines = "FALSE") and(count(Contract) = 1) and(count(SenderType) = 1) and(count(SenderId) = 1)];
   variable PickListSelectionVar {
      type = Text;
   }
   variable ShipmentInvLocVar {
      type = Structure(ShipmentInventoryLocationStructure);
   }
   variable DefaultLocationNoVar {
      type = Text;
   }
   variable ReportPickSelectionVar {
      type = LongText;
   }
   bulkexecute {
      stringify(records, "CONTRACT=${Contract}^PICK_LIST_NO=${PickListNo}^PICK_LIST_TYPE=${PickListType}^SENDER_TYPE=${SenderTypeDb}^SENDER_ID=${SenderId}^", JSON) into PickListSelectionVar;

      ifany [ShipmentInventory] {
         call CheckReportPickingOfPickLists(PickListSelectionVar) into ShipmentInvLocVar;
      }
      messagebox("", information, "The selected picklist(s) will be pickreported.") {
         when "OK" {
            if [ShipmentInvLocVar.ShowDialog = "TRUE"] {
               dialog MovePartsIntoShipmentInventoryDialog(ShipmentInvLocVar.LocationNo, ShipmentInvLocVar.Contract, ShipmentInvLocVar.SenderType, ShipmentInvLocVar.SenderId) into(DefaultLocationNoVar) {
                  when CANCEL {
                     exit;
                  }
               }
            }
         }
         when "CANCEL" {
            exit;
         }
      }
      stringify(records, "PICK_LIST_NO=${PickListNo}^", JSON) into ReportPickSelectionVar;
      call ReportPickMain(ReportPickSelectionVar, DefaultLocationNoVar) {
         when SUCCESS {
            hideselection();
         }
         when FAIL {
            error("${error.Message}");
            info("The picklist(s) was not pickreported");
         }
      }
      @DynamicComponentDependency ORDER
      ifany [ConnectedToLoadId = 1] {
         alert("Load list(s) will be updated");
      }
   }
}
command ReportPickingofPickListCommand for PickReportPickList {
   label = "Report Picking of Pick List Lines";
   mode = SelectedRecords;
   enabled = [true];
   bulkexecute {
      bulknavigate "page/ReportPickingOfPickListLines/Form?$filter=PickListNo eq $[PickListNo]";
   }
}

--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------

----------------------------------- LISTS -----------------------------------

list PickReportPickListsList for PickReportPickList {
   field PickListNo;
   @DynamicComponentDependency ORDER
   field OrderNoRef;
   @DynamicComponentDependency ORDER
   field ConsolidatedOrders;
   field ShipmentsConsolidated;
   field Consolidation;
   lov ContractRef with ReferenceUserAllowedSiteLovSelector;
   field ShipmentInventory;

   field SenderType;
   field SenderIdRef;
   field SenderName {
      size = Large;
   }
   field ReceiverType;
   field ReceiverIdRef {
      contactwidget {
         enabled = [ReceiverId != null and ReceiverType = "Customer"];
         source = Customer;
      }
   }
   field ReceiverName {
      size = Large;
   }

   field DeliveryDate {
      size = Large;
   }
   lov RouteIdRef with ReferenceDeliveryRouteSelector {
      description = RouteIdRef.Description;
      label = "Route";
      editable = [false];
   }

   fieldranking PickListNo, ConsolidatedOrders, ContractRef, ReceiverIdref, DeliveryDate;

   command ReportPickingCommand;
   command ReportPickingofPickListCommand;

}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

