--  Date        Sign    History
--  ----------  ------  ---------------------------------------------------------
--  2022-05-09  AvWilk  SCDEV-9414, added SourceRefTypeDb attribute into HandlingUnit, added action CheckSourceRefType.
--  2020-05-21  Aabalk  SC2020R1-1686, Renamed GetContractForHandlingUnits to GetInfoForHandlingUnits. Added WarehouseId to HandlingUnitsInContract.
--  2019-12-16  Aabalk  SCSPRING20-721, Added sender and receiver type, name and ID attributes to query HandlingUnit.
--  2019-06-17  SBalLK  SCUXXW4-22436, Handled Multi record navigation to Handling Units in Shipment Inventory.
--  2018-12-08  SBalLK  SCUXXW4-4719, Converted from frmHandleShipInvHU using MTG Version: 1.34
-----------------------------------------------------------------------------
projection HandlingUnitsInShipmentInventoryHandling;
component SHPMNT;
layer Core;
description "View HandleShipInventUtility";
category Users;

include fragment HandlingUnitLovSelector;
include fragment HandlingUnitsSearchContext;
include fragment ScrapHandlingUnitDialog;
include fragment MoveHandlingUnitDialog;
include fragment UserAllowedSiteLovSelector;
include fragment InventoryLocation5Selector;
include fragment InventoryLocation7Selector;
include fragment InventoryLocation11Selector;
include fragment HandlingUnitExtendedInitialCheck;
include fragment ShipmentReceiverSelector;
include fragment ShipmentSenderSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset HandlingUnitSet for HandlingUnit;

------------------------------ ENTITY DETAILS -------------------------------
query HandlingUnit {
   from = "HANDL_UNIT_IN_SHIP_INV";
   keys = HandlingUnitId;

   attribute SourceRef1 Text {
      label = "Source Ref 1";
      maxlength = 50;
      format = uppercase;
   }
   attribute SourceRef2 Text {
      label = "Source Ref 2";
      maxlength = 50;
   }
   attribute SourceRef3 Text {
      label = "Source Ref 3";
      maxlength = 50;
   }
   attribute SourceRef4 Text {
      label = "Source Ref 4";
      maxlength = 50;
   }
   attribute SourceRefType Enumeration(LogisticsSourceRefType.Shipment) {
      fetch = "SOURCE_REF_TYPE_DB";
      label = "Source Ref Type";
      required = [true];
   }
   attribute SourceRefTypeDb Text {
      fetch = "SOURCE_REF_TYPE_DB";
      label = "Source Ref Type";
   }
   attribute ShipmentId Number {
      label = "Shipment ID";
   }
   attribute ShipmentLineNo Number {
      label = "Shipment Line No";
   }
   attribute Contract Text {
      label = "Site";
      maxlength = 5;
      format = uppercase;
   }
   attribute PartNo Text {
      fetch = "part_no";
      label = "Part No";
      maxlength = 25;
   }
   attribute PartDescription Text {
      fetch = "part_description";
      label = "Part Description";
      maxlength = 200;
   }
   attribute SourcePartNo Text {
      fetch = "source_part_no";
      label = "Source Part No";
      maxlength = 25;
   }
   attribute ConfigurationId Text {
      fetch = "configuration_id";
      label = "Configuration ID";
      maxlength = 50;
   }
   attribute QtyPicked Number {
      fetch = "qty_picked";
      label = "Qty Picked";
   }
   attribute UnitMeas Text {
      fetch = "unit_meas";
      label = "U/M";
      maxlength = 100;
   }
   attribute SenderId Text {
      label = "Sender ID";
   }
   attribute SenderName Text {
      label = "Sender Description";
   }
   attribute SenderType Enumeration(SenderReceiverType.SenderReceiver) {
      fetch = "sender_type_db";
   }
   attribute ReceiverId Text {
      label = "Receiver ID";
   }
   attribute ReceiverName Text {
      label = "Receiver Description";
   }
   attribute ReceiverType Enumeration(SenderReceiverType.Shipment) {
      fetch = "receiver_type_db";
   }
   attribute LocationNo Text {
      label = "Location No";
      maxlength = 35;
      format = uppercase;
   }
   attribute StructureLevel Text {
      label = "Structure Level";
      maxlength = 100;
   }
   attribute HandlingUnitId Number {
      label = "Handling Unit ID";
   }
   attribute HandlingUnitTypeId Text {
      label = "Handling Unit Type ID";
      maxlength = 25;
   }
   attribute HandlingUnitTypeDescription Text {
      label = "Handling Unit Type Description";
      maxlength = 200;
   }
   attribute HandlingUnitCategoryId Text {
      label = "Handling Unit Category ID";
      maxlength = 25;
   }
   attribute HandlingUnitCategoryDesc Text {
      label = "Handling Unit Category Description";
      maxlength = 200;
   }
   attribute ParentHandlingUnitId Number {
      label = "Parent Handling Unit ID";
   }
   // This will retrive through database get method which retruns db value.
   attribute AccessoryExistDb Boolean("TRUE", "FALSE") {
      fetch = "accessory_exist";
      label = "Accessory Exist";
      required = [true];
   }
   attribute Composition Text {
      label = "Composition";
      maxlength = 100;
   }
   attribute Sscc Text {
      label = "SSCC";
      maxlength = 18;
   }
   attribute AltHandlingUnitLabelId Text {
      label = "Alt Handling Unit Label ID";
      maxlength = 25;
   }
   attribute WarehouseId Text {
      label = "Warehouse ID";
      maxlength = 15;
   }
   attribute BayId Text {
      label = "Bay ID";
      maxlength = 5;
   }
   attribute RowId Text {
      label = "Row ID";
      maxlength = 5;
   }
   attribute TierId Text {
      label = "Tier ID";
      maxlength = 5;
   }
   attribute BinId Text {
      label = "Bin ID";
      maxlength = 5;
   }
   attribute LotBatchNo Text {
      fetch = "lot_batch_no";
      label = "Lot Batch No";
      maxlength = 20;
      format = uppercase;
   }
   attribute SerialNo Text {
      fetch = "serial_no";
      label = "Serial No";
      maxlength = 50;
   }
   attribute ConditionCode Text {
      fetch = "condition_code";
      label = "Condition Code";
      maxlength = 10;
   }
   attribute PartOwnership Text {
      fetch = "part_ownership";
      label = "Part Ownership";
      maxlength = 200;
   }
   attribute Owner Text {
      fetch = "owner";
      label = "Owner";
      maxlength = 20;
   }
   attribute EngChgLevel Text {
      fetch = "eng_chg_level";
      label = "Eng Chg Level";
      maxlength = 6;
   }
   attribute WaivDevRejNo Text {
      fetch = "waiv_dev_rej_no";
      label = "W/D/R No";
      maxlength = 15;
   }
   attribute AvailabilityControlId Text {
      fetch = "availability_control_id";
      label = "Availability Control ID";
      maxlength = 25;
   }
   attribute PickListNo Text {
      fetch = "pick_list_no";
      label = "Pick List No";
      maxlength = 15;
   }
   attribute ActivitySeq Number {
      fetch = "activity_seq";
      label = "Activity seq";
   }
   attribute SecondLevelParentHuId Number {
      fetch = "second_level_parent_hu_id";
      label = "Level 2 Handling Unit ID";
   }
   attribute SecondLevelSscc Text {
      fetch = "second_level_sscc";
      label = "Level 2 SSCC";
      maxlength = 100;
   }
   attribute SecondLevelAltHuLabelId Text {
      fetch = "second_level_alt_hu_label_id";
      label = "Level 2 Alt Handling Unit Label ID";
      maxlength = 100;
   }
   attribute TopParentHandlingUnitId Number {
      label = "Top Parent Handling Unit ID";
   }
   attribute TopParentHuTypeDesc Text {
      label = "Top Parent Type Description";
      maxlength = 200;
   }
   attribute TopParentHuTypeId Text {
      label = "Top Parent Handling Unit Type ID";
      maxlength = 25;
   }
   attribute TopParentSscc Text {
      label = "Top Parent SSCC";
      maxlength = 18;
   }
   attribute TopParentAltHuLabelId Text {
      label = "Top Parent Alt Handling Unit Label ID";
      maxlength = 25;
   }
   reference HandlingUnitIdRef(HandlingUnitId) to HandlingUnitLov(HandlingUnitId) {
      label = "Handling Unit ID";
   }
   reference ReceiverIdRef(ReceiverId) to ShipmentReceiver(ReceiverId) {
      label = "Receiver ID";
   }
   reference SenderIdRef(SenderId) to ShipmentSender(SenderId) {
      label = "Sender ID";
   }

   array PartInShipmentInventoryArray() to HandlingUnitSourceInShipmentInventory() {
      where = "(:child.HandlingUnitId IN (SELECT HANDLING_UNIT_ID FROM HANDLING_UNIT CONNECT BY PRIOR HANDLING_UNIT_ID = PARENT_HANDLING_UNIT_ID START WITH HANDLING_UNIT_ID IN (:parent.HandlingUnitId)))";
   }
}

query HandlingUnitSourceInShipmentInventory {
   from = "HANDLE_SOURCE_IN_SHIP_INV_EXT";
   keys = SourceRef1, SourceRef2Db, SourceRef3Db, SourceRef4Db, ShipmentId, Contract, PartNo, ConfigurationId, LocationNo, HandlingUnitId, LotBatchNo, SerialNo, EngChgLevel, WaivDevRejNo, ActivitySeq, PickListNo;

   attribute SourceRef1 Text {
      label = "Source Ref 1";
      maxlength = 50;
      format = uppercase;
   }
   attribute SourceRef2 Text {
      label = "Source Ref 2";
      maxlength = 50;
   }
   attribute SourceRef2Db Text {
      fetch = "NVL(SOURCE_REF2,'*')";
      label = "Source Ref 2";
   }
   attribute SourceRef3 Text {
      label = "Source Ref 3";
      maxlength = 50;
   }
   attribute SourceRef3Db Text {
      fetch = "NVL(SOURCE_REF3,'*')";
      label = "Source Ref 3";
   }
   attribute SourceRef4 Text {
      label = "Source Ref 4";
      maxlength = 50;
   }
   attribute SourceRef4Db Text {
      fetch = "NVL(SOURCE_REF4,'*')";
      label = "Source Ref 4";
   }
   attribute SourceRefType Enumeration(LogisticsSourceRefType.Shipment) {
      fetch = "SOURCE_REF_TYPE_DB";
      label = "Source Ref Type";
      required = [true];
   }
   attribute ShipmentId Number {
      label = "Shipment ID";
      required = [true];
   }
   attribute Contract Text {
      label = "Site";
      maxlength = 5;
      required = [true];
      format = uppercase;
   }
   attribute PartNo Text {
      maxlength = 100;
   }
   attribute SourcePartNo Text {
      maxlength = 25;
   }
   attribute ConfigurationId Text {
      label = "Configuration ID";
      maxlength = 50;
   }
   attribute QtyPicked Text {
      maxlength = 100;
   }
   attribute LocationNo Text {
      maxlength = 35;
      format = uppercase;
   }
   attribute HandlingUnitId Number {
      label = "Handling Unit ID";
   }
   attribute HandlingUnitTypeId Text {
      label = "Handling Unit Type ID";
      maxlength = 25;
   }
   attribute HandlingUnitTypeDesc Text {
      label = "Handling Unit Type Description";
      maxlength = 200;
   }
   attribute HandlingUnitCategoryId Text {
      label = "Handling Unit Category ID";
      maxlength = 25;
   }
   attribute HandlingUnitCategoryDesc Text {
      label = "Handling Unit Category Description";
      maxlength = 200;
   }
   attribute Sscc Text {
      label = "SSCC";
      maxlength = 18;
   }
   attribute AltHandlingUnitLabelId Text {
      label = "Alt Handling Unit Label ID";
      maxlength = 25;
   }
   attribute LotBatchNo Text {
      maxlength = 20;
      format = uppercase;
   }
   attribute SerialNo Text {
      maxlength = 50;
   }
   attribute EngChgLevel Text;

   attribute WaivDevRejNo Text {
      label = "W/D/R No";
      maxlength = 15;
   }
   attribute PickListNo Text {
      maxlength = 15;
   }
   attribute ActivitySeq Number;

   reference InventoryPartRef(Contract, PartNo) to InventoryPart(Contract, PartNo);
   reference HandlingUnitIdRef(HandlingUnitId) to HandlingUnitLov(HandlingUnitId) {
      label = "Handling Unit ID";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------
action ScrapHandlingUnitInShipmentInventory {
   initialcheck implementation;
   supportwarnings = [true];
   parameter Selection Text;
   parameter ScrapCode Text;
   parameter ScrapNote Text;
   ludependencies = HandlingUnit, HandlingUnitSourceInShipmentInventory;
}

action GetSourceRefType Text {
   initialcheck implementation;
   parameter Selection LongText;
}

--------------------------------- FUNCTIONS ---------------------------------
function GetValidShipmentHandlingUnits List<Entity(HandlingUnit)> {
   parameter ShowDetails Enumeration(ShowHuLevels);
   parameter HandlingUnitIdList Text;
   parameter ShipmentIdList Text;
   parameter ShipmentLineNoList Text;
   basedon HandlingUnitSet;

   where = "(((:ShowDetails = 'ShowAll') OR ( :ShowDetails = 'ShowOnlyTopLevel' AND PARENT_HANDLING_UNIT_ID IS NULL )) AND
            (:HandlingUnitIdList IS NULL OR (handling_unit_id IN (SELECT REGEXP_SUBSTR(:HandlingUnitIdList, '[^;]+', 1, LEVEL) FROM dual
               CONNECT BY REGEXP_SUBSTR(:HandlingUnitIdList, '[^;]+', 1, LEVEL) IS NOT NULL))) AND
            (:ShipmentIdList IS NULL OR (shipment_id IN (SELECT REGEXP_SUBSTR(:ShipmentIdList, '[^;]+', 1, LEVEL) FROM dual
               CONNECT BY REGEXP_SUBSTR(:ShipmentIdList, '[^;]+', 1, LEVEL) IS NOT NULL))) AND
            (:ShipmentLineNoList IS NULL OR (shipment_line_no IN (SELECT REGEXP_SUBSTR(:ShipmentLineNoList, '[^;]+', 1, LEVEL) FROM dual
               CONNECT BY REGEXP_SUBSTR(:ShipmentLineNoList, '[^;]+', 1, LEVEL) IS NOT NULL))))";
}

function GetInfoForHandlingUnits Structure(HandlingUnitsInContract) {
   parameter HandlingUnitList Text;
}

function GetHandlingUnitPageSearchContextDefaults Structure(HandlingUnitPageSearchContextStructure);

-------------------------------- STRUCTURES ---------------------------------
structure HandlingUnitsInContract {
   attribute HandlingUnitList Text;
   attribute Contract Text;
   attribute WarehouseId Text;
}

structure HandlingUnitPageSearchContextStructure {
   attribute HandlingUnitIdList Text {
      label = "Handling Unit ID";
   }
   attribute ShipmentIdList Text {
      label = "Shipment ID";
   }
   attribute ShipmentLineNoList Text {
      label = "Shipment Line No";
   }
}
--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------


