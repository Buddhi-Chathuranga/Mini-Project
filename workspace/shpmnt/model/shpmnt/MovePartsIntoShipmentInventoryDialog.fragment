-------------------------------------------------------------------------------------------------
-- Date        Sign     History
-- ----------  ------   -------------------------------------------------------------------------
-- 2022-01-27  Aabalk   Bug 162269(SCZ-17476), Modified ShipmentInventoryLocation query to use view inventory_location7 and modified function InventoryLocationFilter by
-- 2022-01-27           removing condition to exclude receipts blocked location.
-- 2021-02-23  BudKlk   Bug 157543(SCZ-13440), Modified function InventoryLocationFilter to add a condtion to exculde the receipts_blocked locations
-- 2021-02-23           and added a new method CheckReceiptBlocked() to exculde the receipts_blocked locations from the dafault value.
-- 2020-03-24  RasDlk   SCSPRING20-689, Modified the SenderType attribute of ShipmentInventoryLocationStructure to an enumeration.
-- 2020-03-17  RasDlk   SCSPRING20-1238, Modified CheckReportResQtyAsPickedForManRes() by adding sender and receiver information.
-- 2020-03-17           Also changed the Enumeration of SenderType attribute.
-- 2020-03-11  RasDlk   SCSPRING20-689, Modified the ShipmentInventoryLocationStructure by adding SenderType and SenderId attributes.
-- 2020-02-19  RasDlk   SCSPRING20-689, Added SenderType and SenderId to filter location no lov based on sender type.
-- 2020-01-29  RasDlk   SCSPRING20-689, Changed the function names to be more meaningful.
-- 2019-03-27  KHVESE   SCUXXW4-5659, Modified PickListNo parameter type in method CheckDialogThree.
-- 2019-01-02  RasDlk   SCUXXW4-4694, Converted from dlgShipmentLocation using MTG Version: 1.34
-------------------------------------------------------------------------------------------------

fragment MovePartsIntoShipmentInventoryDialog;
component SHPMNT;
layer Core;
description "Use this API to place sales parts in a shipment location.";

----------------------------- CLIENT FRAGMENTS ------------------------------

----------------------------- NAVIGATOR ENTRIES -----------------------------

-------------------------------- MAIN PAGES ---------------------------------

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command InitCommand for InventoryLocationStructure {
   variable ReceiptBlocked Boolean;
   execute {
      call CheckReceiptBlocked(Contract, DefaultLocationNo) into ReceiptBlocked;

      if [DefaultLocationNo != null and ReceiptBlocked = false] {
         set LocationNo = DefaultLocationNo;
      }
      else {
         call GetLocationNo(Contract, SenderType, SenderId) into LocationNo;
      }
   }
}
--------------------------------- SELECTORS ---------------------------------
@Overtake Core
selector ReferenceShipmentInventoryLocationSelector for ShipmentInventoryLocation {
   label = "";
   static LocationNo;
   static Warehouse;
   static BayNo;
   static RowNo;
   static TierNo;
   static BinNo;
}
---------------------------------- GROUPS -----------------------------------
group InventoryLocationGroup for InventoryLocationStructure {
   label = "Location";
   lov LocationNoRef with ReferenceShipmentInventoryLocationSelector using InventoryLocationFilter(Contract, SenderType, SenderId);
   field LocationNoRef.LocationName {
      size = Large;
   }
   field LocationNoRef.Warehouse;
   field LocationNoRef.BayNo {
      size = Small;
   }
   field LocationNoRef.RowNo {
      size = Small;
   }
   field LocationNoRef.TierNo {
      size = Small;
   }
   field LocationNoRef.BinNo {
      size = Small;
   }
}
----------------------------------- LISTS -----------------------------------

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------
dialog MovePartsIntoShipmentInventoryDialog for InventoryLocationStructure {
   label = "Move Parts into Shipment Inventory - Site ${Contract}";
   input(DefaultLocationNo, Contract, SenderType, SenderId) {
      command InitCommand;
   }
   output(LocationNo);
   group InventoryLocationGroup;
   commandgroup ShipmentInventoryCmdGroup {

      command Ok {
         enabled = [LocationNo != null];
         execute {
         }
      }
      command Cancel;
   }
}

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

--------------------------- PROJECTION FRAGMENTS ----------------------------

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset InventoryLocationSet for ShipmentInventoryLocation;

------------------------------ ENTITY DETAILS -------------------------------

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------
query ShipmentInventoryLocation {
   from = "inventory_location7";
   lu = InventoryLocation;
   keys = Contract, LocationNo {
      where = "CONTRACT = :Contract AND LOCATION_NO = :LocationNo";
   }

   attribute Contract Text;
   attribute LocationNo Text;
   attribute LocationName Text {
      label = "Location Description";
   }
   attribute Warehouse Text {
      label = "Warehouse ID";
   }
   attribute BayNo Text {
      label = "Bay ID";
   }
   attribute RowNo Text {
      label = "Row ID";
   }
   attribute TierNo Text {
      label = "Tier ID";
   }
   attribute BinNo Text {
      label = "Bin ID";
   }
}
---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------
function GetLocationNo Text {
   parameter Contract Text;
   parameter SenderType Enumeration(SenderReceiverType.SenderReceiver);
   parameter SenderId Text;
}
function InventoryLocationFilter List < Entity(ShipmentInventoryLocation) > {
   parameter Contract Text;
   parameter SenderType Enumeration(SenderReceiverType.SenderReceiver);
   parameter SenderId Text;
   where = "(((:SenderType = 'SITE' AND Warehouse_API.Get_Remote_Warehouse_Db(contract, warehouse) = 'FALSE') OR
            (:SenderType = 'REMOTE_WAREHOUSE' AND warehouse = Warehouse_API.Get_Warehouse_Id_By_Global_Id(:SenderId))) AND
            (CONTRACT = :Contract))";
}
function CheckReportPickingForShipmentList Structure(ShipmentInventoryLocationStructure) {
   parameter ReportPickListSelection Text;
}
function CheckReportPickingOfPickLists Structure(ShipmentInventoryLocationStructure) {
   parameter PickListSelection Text;
}
function CheckReportPicking Structure(ShipmentInventoryLocationStructure) {
   parameter Contract Text;
   parameter PickListNo Text;
   parameter PickListType Text;
}
function CheckReportResQtyAsPickedForOrderFlow Structure(ShipmentInventoryLocationStructure) {
   parameter Contract Text;
   parameter SourceRef1 Text;
   parameter SourceRefTypeDb Text;
}
function CheckReportResQtyAsPickedForManRes Structure(ShipmentInventoryLocationStructure) {
   parameter Contract Text;
   parameter SourceRef1 Text;
   parameter SourceRef2 Text;
   parameter SourceRef3 Text;
   parameter SourceRef4 Text;
   parameter SourceRefTypeDb Text;
   parameter ShipmentId Number;
   parameter SenderType Enumeration(SenderReceiverType.SenderReceiver);
   parameter SenderId Text;
   parameter ReceiverType Enumeration(SenderReceiverType.Shipment);
   parameter ReceiverId Text;
}
function CheckReportPickingForShipment Structure(ShipmentInventoryLocationStructure) {
   parameter ShipmentId Number;
}

function CheckReceiptBlocked Boolean {
   parameter Contract Text;
   parameter DefaultLocationNo Text;
}
-------------------------------- STRUCTURES ---------------------------------
structure ShipmentInventoryLocationStructure {
   attribute LocationNo Text;
   attribute ShowDialog Text;
   attribute Contract Text;
   attribute SenderType Enumeration(SenderReceiverType.SenderReceiver);
   attribute SenderId Text;
}
structure InventoryLocationStructure {
   attribute LocationNo Text {
      required = [true];
   }
   attribute DefaultLocationNo Text;
   attribute Contract Text;
   attribute SenderType Enumeration(SenderReceiverType.SenderReceiver);
   attribute SenderId Text;
   reference LocationNoRef(Contract, LocationNo) to ShipmentInventoryLocation(Contract, LocationNo) {
      label = "Location No";
   }
}
--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------