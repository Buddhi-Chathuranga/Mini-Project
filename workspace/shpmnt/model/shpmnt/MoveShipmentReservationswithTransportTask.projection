----------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------
-- 200327      RasDlk  SC2020R1-2285, Modified MpccomShipViaLov by adding the Objstate attribute to support data validity.
-- 190626      SBalLK  SCUXXW4-21590, Adjusted the UI changes recommended though the reported issue.
-- 190525      ErRalk  SCUXXW4-21522, Modified ReceiverIdRef to fix server error.
-- 190329      JaBalk  SCUXXW4-18224, Corrected reported issues and made multilov for all the lov reference columns.
-- 181204      RAKUSE  SCUXXW4-4679, Converted dialog 'dlgPSheetMoveShipReserveWithTransTask' using MTG Version: 1.34
----------------------------------------------------------------------------------------------------
projection MoveShipmentReservationswithTransportTask;
component SHPMNT;
layer Core;
description "Scheduled Task Assistant handling ''Move Shipment Reservations with Transport Task''";
category Users;
include fragment ScheduledTasksCommon;
include fragment UserAllowedSiteLovSelector;
include fragment WarehouseLov2Selector;
include fragment WarehouseBayLov2Selector;
include fragment WarehouseBayRowLov2Selector;
include fragment WarehouseBayTierLov2Selector;
include fragment WarehouseBayBinLovSelector;
include fragment InventoryLocation17Selector;
include fragment ConsolidatedShipmentLov;
include fragment ShipmentReceiverSelector;
include fragment InventoryLocation7Selector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset ShipmentLovLovListSet for ShipmentLov;
entityset ShipmentTypeLovListSet for ShipmentType;
entityset ConsolidatedShipmentLov2LovListSet for ConsolidatedShipmentLov2;
entityset ShipmentReceiverLovListSet for ShipmentReceiver;
entityset MpccomShipViaLovLovListSet for MpccomShipViaLov;
entityset DeliveryRouteLovListSet for DeliveryRoute;
entityset ForwarderInfoLovListSet for ForwarderInfo;
entityset InventoryLocation7LovListSet for InventoryLocation7;
entityset WorkTimePeriodLovListSet for WorkTimePeriod;
-------------------------------- STRUCTURES----------------------------------

@Override
structure ParametersStructure {
   attribute Contract Text;
   attribute Warehouse Text;
   attribute Bay Text;
   attribute RowNum Text;
   attribute Tier Text;
   attribute Bin Text;
   attribute StorageZone Text;
   attribute ToLocation Text;
   attribute ShipmentId Text;
   attribute ConsolShipmentId Text;
   attribute ShipmentType Text;
   attribute ReceiverType Enumeration(SenderReceiverType.Shipment);
   attribute ReceiverId Text;
   attribute ShipViaCode Text;
   attribute RouteId Text;
   attribute ForwarderId Text;
   attribute ShipmentLocationNo Text;
   attribute PlannedShipPeriod Text;
   attribute PlannedShipDate Timestamp;
   attribute PlannedDueDate Date;
   attribute ShipDateExecutionOffset Number;
   attribute DueDateExecutionOffset Number;
   attribute IncludeFullQtyOfTopHu Boolean("Y", "N");
   attribute ExcludeStockAttachedToHu Boolean("Y", "N");
   attribute ExcludeStockNotAttachToHu Boolean("Y", "N");
   attribute ExcludeHuToPickInOneStep Boolean("Y", "N");
}

--------------------------------- VIRTUALS ----------------------------------

@Override
virtual TaskVirtual using BatchSchedule {
   attribute Contract Text {
      label = "Site";
      required = [true];
      maxlength = 100;
      format = uppercase;
   }
   attribute Warehouse Text {
      label = "Warehouse ID";
      maxlength = 100;
      format = uppercase;
   }
   attribute Bay Text {
      label = "Bay ID";
      maxlength = 100;
      format = uppercase;
   }
   attribute RowNum Text {
      label = "Row ID";
      maxlength = 100;
      format = uppercase;
   }
   attribute Tier Text {
      label = "Tier ID";
      maxlength = 100;
      format = uppercase;
   }
   attribute Bin Text {
      label = "Bin ID";
      maxlength = 100;
      format = uppercase;
   }
   attribute StorageZone Text {
      label = "Storage Zone ID";
      maxlength = 100;
      format = uppercase;
   }
   attribute ToLocation Text {
      label = "Location No";
      maxlength = 100;
      required = [true];
      format = uppercase;
   }
   attribute ShipmentId Text {
      label = "Shipment ID";
      format = uppercase;
   }
   attribute ConsolShipmentId Text {
      label = "Consolidated Shipment ID";
      format = uppercase;
   }
   attribute ShipmentType Text {
      label = "Shipment Type";
      format = uppercase;
   }
   attribute ReceiverType Enumeration(SenderReceiverType.Shipment) {
      required = [true];
   }
   attribute ReceiverId Text {
      label = "Receiver ID";
      format = uppercase;
   }
   attribute ShipViaCode Text {
      label = "Ship Via";
      format = uppercase;
   }
   attribute RouteId Text {
      label = "Route ID";
      format = uppercase;
   }
   attribute ForwarderId Text {
      label = "Forwarder ID";
      format = uppercase;
   }
   attribute ShipmentLocationNo Text {
      label = "Shipment Location No";
      format = uppercase;
   }
   attribute PlannedShipPeriod Text {
      label = "Planned Ship Period";
      format = uppercase;
   }
   attribute PlannedShipDate Timestamp {
      label = "Until Planned Ship Date";
   }
   attribute PlannedDueDate Date {
      label = "Until Planned Due Date";
   }
   attribute ShipDateExecutionOffset Number;
   attribute DueDateExecutionOffset Number;
   attribute IncludeFullQtyOfTopHu Boolean("Y", "N");
   attribute ExcludeStockAttachedToHu Boolean("Y", "N");
   attribute ExcludeStockNotAttachToHu Boolean("Y", "N");
   attribute ExcludeHuToPickInOneStep Boolean("Y", "N");

   reference ContractRef(Contract) to UserAllowedSiteLov(Contract) {
      label = "Site";
   }
   reference WarehouseRef(Contract, Warehouse) to WarehouseLov2(Contract, WarehouseId) {
      label = "Warehouse ID";
   }
   reference BayRef(Contract, Warehouse, Bay) to WarehouseBayLov2(Contract, WarehouseId, BayId) {
      label = "Bay ID";
   }
   reference RowRef(Contract, Warehouse, Bay, RowNum) to WarehouseBayRowLov2(Contract, WarehouseId, BayId, RowId) {
      label = "Row ID";
   }
   reference TierRef(Contract, Warehouse, Bay, Tier) to WarehouseBayTierLov2(Contract, WarehouseId, BayId, TierId) {
      label = "Tier ID";
   }
   reference BinRef(Contract, Warehouse, Bay, RowNum, Tier, Bin) to WarehouseBayBinLov(Contract, WarehouseId, BayId, RowId, TierId, BinId) {
      label = "Bin ID";
   }
   reference StorageZoneRef(Contract, StorageZone) to StorageZone(Contract, StorageZoneId) {
      label = "Storage Zone ID";
   }
   reference ToLocationRef(Contract, ToLocation) to InventoryLocation17(Contract, LocationNo) {
      label = "Location No";
   }
   reference ShipmentIdRef(Contract, ShipmentId) to ShipmentLov(Contract, ShipmentId) {
      label = "Shipment ID";
   }
   reference ConsolShipmentIdRef(ConsolShipmentId) to ConsolidatedShipmentLov2(ShipmentId) {
      label = "Consolidated Shipment ID";
   }
   reference ShipmentTypeRef(ShipmentType) to ShipmentType(ShipmentType) {
      label = "Shipment Type";
   }
   reference ReceiverIdRef(ReceiverType, ReceiverId) to ShipmentReceiver(ReceiverType, ReceiverId) {
      label = "Receiver ID";
   }
   reference ShipViaCodeRef(ShipViaCode) to MpccomShipViaLov(ShipViaCode) {
      label = "Ship Via";
   }
   reference RouteIdRef(RouteId) to DeliveryRoute(RouteId) {
      label = "Route ID";
   }
   reference ForwarderIdRef(ForwarderId)to ForwarderInfo(ForwarderId) {
      label = "Forwarder ID";
   }
   reference ShipmentLocationNoRef(Contract, ShipmentLocationNo) to InventoryLocation7(Contract, LocationNo) {
      label = "Shipment Location No";
   }
   reference PlannedShipPeriodRef(PlannedShipPeriod) to WorkTimePeriod(Period) {
      label = "Planned Ship Period";
   }

   ---

}


query MpccomShipViaLov {
   from = "mpccom_ship_via_lov";
   lu = MpccomShipVia;
   where = "OBJSTATE = 'Active'";
   keys = ShipViaCode;
   ludependencies = MpccomShipVia;

   attribute ShipViaCode Text {
      format = uppercase;
      lovcolumn = [true];
   }
   attribute Description Text {
      lovcolumn = [true];
   }
   attribute ModeOfTransport Enumeration(ModeOfTransport) {
      label = "Mode of Transport";
      lovcolumn = [true];
      fetch = "mode_of_transport_db";
   }
   attribute State Text {
      label = "Validity";
      lovcolumn = [true];
   }
   attribute Objstate Enumeration(MpccomShipViaState);
}


query ShipmentLov {
   from = "shipment";
   lu = Shipment;
   keys = ShipmentId;
   where = "SHIPMENT_CATEGORY_DB = 'NORMAL'";

   attribute ShipmentId Text {
      fetch = "to_char(shipment_id)";
      label = "Shipment ID";
   }
   attribute ReceiverType Text;
   attribute ReceiverId Text;

   attribute  SourceRefType             Text;
   attribute Contract Text {
      label = "Site";
   }
   attribute SenderName Text;
   attribute ShipmentType Text;
   attribute ParentConsolShipmentId Number;
   attribute State Text;
}
