--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2020-10-07  JaThlk  SC2020R1-10402, Modified the command ChangeManufacturerInfoCommand to remove fetching default Manufactured Date.
-- 2020-08-24  JaThlk  SC2020R1-1185, Added the command ChangeManufacturerInfoCommand.
-- 2019-11-13  FRBESE  SCXTEND-1159, Changed PartLotBatchNavEntry navigator entry index from 100 to 500.
-- 2019-11-04  NiAslk  SCXTEND-1224, Added startup mode as search.
-- 2019-05-10  ChFolk  SCUXXW4-19057, Renamed PartNoRef as PartCatalogRef.
-- 2019-04-04  ChFolk  SCUXXW4-18711, corrected reference of PartNoRef.
-- 2019-03-25  ChFolk  SCUXXW4-18040, Added dynamic dependency where necessary.
-- 2018-10-18  SWiclk  SCUXXW4-12614, Added QmanInventoryCreateAnalysisDialog.
-- 2018-07-18  SWiclk  SCUXXW4-1649, Converted from dlgChangeConditionCode using MTG Version: 1.23
-- 2018-07-16  SWiclk  SCUXXW4-1894, Converted from tbwSubLot using MTG Version: 1.23
-- 2018-07-13  SWiclk  SCUXXW4-1714, Converted from frmLotBatchMaster using MTG Version: 1.23
--------------------------------------------------------------------------------------
client PartLotBatch;
component PARTCA;
layer Core;
projection PartLotBatchHandling;
include fragment LotBatchHistoryList;
include fragment ChangeConditionCodeDialog;
@DynamicComponentDependency MPCCOM
include fragment UserAllowedSiteLovSelector;
@DynamicComponentDependency MSCOM
include fragment OrgCodeAllowedSiteLovSelector;
@DynamicComponentDependency PCERT
include fragment PartCertificateCustomerSelector;
@DynamicComponentDependency PCERT
include fragment PartCertificatesList;
@DynamicComponentDependency QUAMAN
include fragment QmanInventoryCreateAnalysisDialog;



----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry PartLotBatchNavEntry parent PartcaNavigator.MasterPartPartLotTracking at index 500 {
      label = "Part Lot Batch";
      page Form home LotBatchMaster;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using PartLotBatchSet {
   label = "Part Lot Batch";
   startupmode = search;
   editmode = Inline;
   selector PartLotBatchSelector;
   arrange {
      group PartLotBatchGroup;
   }
   tabs {
      tab {
         label = "Detail";
         arrange {
            arrange {
               group PartLotBatchDetailGroup;
               group MasterLotInfoGroup;
            }
            arrange {
               group PartSerialManufacturerGroup;
               group SourceOrderGroup;
            }
         }
      }
      tab {
         label = "History";
         list LotBatchHistoryList(LotBatchHistoryArray);
      }
      tab {
         label = "Sub Lot";
         list SubLotList(SubLotArray);

      }
      @DynamicComponentDependency PCERT
      tab {
         label = "Part Certificates";
         list TbwPartCertificates(PartCertificatesArray);
      }


//      tab {
//         label = "Inventory Part In Stock";
           // TODO: SCUXXW4-7100, for the moment it is added as a command navigator
//      }
   }

   commandgroup PartLotBatchNavigationCmdGroup {
      command InventoryTransactionsCommand;
      command InventoryPartInStockCommand;
      @DynamicComponentDependency MFGSTD
      command LotBatchWhereUsedCommand;
   }
   commandgroup PartLotBatchDialogCmdGroup {
      command OpenChangeConditionCodeDialog;
      command CreateQualityControlAnalysisCommand;
      command ChangeManufacturerInfoCommand;

   }
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command OpenChangeConditionCodeDialog {
   label = "Change Condition Code";
   enabled = [ConditionCodeUsageDb = "ALLOW_COND_CODE" and SerialTrackingCodeDb = "NOT SERIAL TRACKING"];

   execute {
      dialog ChangeConditionCodeDialog(PartNo, "*", LotBatchNo, ConditionCode) {
         when CANCEL {
            exit;
         }
      }

   }
}

command CreateQualityControlAnalysisCommand for PartLotBatch {
   label = "Create Inventory Analysis";
   enabled = [PartNo != null];
   execute {
      @DynamicComponentDependency QUAMAN
      dialog QmanInventoryCreateAnalysisDialog(PartNo, LotBatchNo) {
         when CANCEL {
            exit CANCEL;
         }
      }
   }
}

command InventoryTransactionsCommand for PartLotBatch {
   label = "Inventory Transactions";
   enabled = [true];
   //! TODO: SCUXXW4-6790
   execute {
      navigate "page/InventoryTransactionsHistory/List?$filter=PartNo eq $[PartNo] and LotBatchNo eq $[LotBatchNo]";
   }
}

command InventoryPartInStockCommand for PartLotBatch {
   label = "Inventory Part In Stock";
   enabled = [true];
   execute {
      navigate "page/InventoryPartInStock/List?$filter=PartNo eq $[PartNo] and LotBatchNo eq $[LotBatchNo]";
   }
}

command LotBatchWhereUsedCommand for PartLotBatch {
   label = "Lot/Batch Where Used";
   //! TODO: Enable when MFGSTD component is available. Added DynamicComponentDependency to MFGSTD in the CommandGroup there for if the navigation
   // option is disabled when MFGSTD not available then we don't have to enable/disable this command I guess.
   enabled = [true];
   execute {
      navigate "tree/LotBatchStructureWhereUsed/Tree?$filter=PartNo eq $[PartNo] and LotBatchNo eq $[LotBatchNo]";
   }
}

-- Sub Lot is also handled in same projection since it has not been used anywhere else like Lot Batch History.
command PartSubLotBatchCommand for PartLotBatch {
   label = "Part Lot Batch";
   enabled = [true];
   execute {
      navigate "page/PartLotBatch/Form?$filter=PartNo eq $[PartNo] and LotBatchNo eq $[LotBatchNo]";
   }
}

command ChangeManufacturerInfoCommand for PartLotBatch {
   label = "Change Manufacturer's Info";

   execute {
      assistant ChangeManufacturerInformation.ChangeManufacturerInfoAssistant(PartNo, null, LotBatchNo, ManufacturerNo, ManufacturerPartNo, ManufacturedDate, null, ManufacturerLotBatchNo, null, "LOTBATCH") {
         when OK {
            exit OK;
         }
         when CANCEL {
            exit CANCEL;
         }
      }
   }
}
--------------------------------- SELECTORS ---------------------------------
@Override
selector PartLotBatchSelector for PartLotBatch {
   label = "${PartNo} - ${Description} - ${LotBatchNo}";
   static PartNo;
   static Description;
   static LotBatchNo;
}

selector ReferenceConditionCodeLovSelector for ConditionCode {
   static ConditionCode;
   static Description;
}

---------------------------------- GROUPS -----------------------------------
group PartLotBatchGroup for PartLotBatch {
   label = "";
   lov PartCatalogRef with ReferencePartCatalogSelector {
      label = "Part";
      description = Description;
   }
   field LotBatchNo;
   field CreateDate;
   lov ConditionCodeRef with ReferenceConditionCodeSelector {
      description = ConditionCodeRef.Description;
   }

   field NoteText {
      multiline = true;
   }
}

group PartLotBatchDetailGroup for PartLotBatch {
   label = "";
   field ReceivedQty;
   @DynamicComponentDependency MPCCOM
   field InitialContractRef;
   field ShippedQty;
   @DynamicComponentDependency INVENT
   field InventoryPartRef.UnitMeas {
      label = "Inventory UoM";
   }
   field ScrappedQty;
   field LastSalesDate;
   field ExpirationDate {
      validate command {
         execute {
            confirm("This will update Expiration date for all Inventory Part in Stock and in-transit records for this Lot Batch combination.");
         }
      }
   }
}

group MasterLotInfoGroup for PartLotBatch {
   label = "Master Lot Info";
   field ParentPartNo;
   field ParentLot;
}
group SourceOrderGroup for PartLotBatch {
   label = "Source Order";
   field OrderType;
   field OrderRef1;
   field OrderRef2;
   field OrderRef3;
   field OrderRef4;
}

group PartSerialManufacturerGroup for PartLotBatch {
   label = "Manufacturer";
   field ManufacturerNo;
   field ManufacturerPartNo;
   field Country;
   field ManufacturedDate;
   field ManufacturerLotBatchNo;
}


----------------------------------- LISTS -----------------------------------

list SubLotList for PartLotBatch {
   crudactions {
      edit {
         enabled = [false];
      }
   }

   field PartCatalogRef;
   field LotBatchNo;
   field ConditionCodeRef;
   field ConditionCodeRef.Description {
      label = "Description";
   }
   field CreateDate;
   field InitialContract {
      label = "Site";
   }
   @DynamicComponentDependency INVENT
   field InventoryPartRef.UnitMeas {
      label = "UoM";
   }
   field ShippedQty;
   field ReceivedQty;
   field ScrappedQty;
   field ExpirationDate {
      label = "Expiration Date";
   }
   field LastSalesDate;
   field NoteText;

   command PartSubLotBatchCommand;
}
----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------

