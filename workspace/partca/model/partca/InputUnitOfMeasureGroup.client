--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2021-01-20  UdGnlk  SC2020R1-12098, Modified UnitCode from field to lov and added freeinput true.
-- 2019-01-24  SaGelk  SCUXXW4-1689, Implemented the InputUoMParametersCommand.
-- 2018-12-10  SWiclk  SCUXXW4-13288, Enabled splitter using bind lists.
-- 2018-09-03  SWiclk  SCUXXW4-1669, Converted from dlgCopyInputUoMGroup using MTG Version: 1.27
-- 2018-09-03  SWiclk  SCUXXW4-1709, Converted from frmInputUnitMeasGroup using MTG Version: 1.27
--------------------------------------------------------------------------------------
client InputUnitOfMeasureGroup;
component PARTCA;
layer Core;
projection InputUnitOfMeasureGroupHandling;
include fragment ValidFormulaSelector;
include fragment EnterInputUomParametersAssistant;
warningsenabled = InputUnitMeasGroup;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry InputUnitMeasGroupNavEntry parent PartcaNavigator.MasterPartMultipleUnitsofMeasure at index 100 {
      label = "Input UoM Group";
      page Form;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page Form using InputUnitMeasGroupSet {
   label = "Input UoM Group";
   selector InputUnitMeasGroupSelector;
   group InputUnitMeasGroupGroup;
   list InputUnitMeasList(InputUnitMeasureArray);
   list InputUnitMeasVariableList(InputUnitMeasureVariableArray) bind InputUnitMeasList;

   commandgroup CommandGroupCmdGroup {

      command TranslationCommand;
   }

//   commandgroup CommandGroup2CmdGroup {
//      label = "Command Group 2";
//      command InputUoMParametersCommand;
//   }

   commandgroup CommandGroup3CmdGroup {

      command UsedbyInventoryPartCommand;
      command UsedbyPartCatalogCommand;
   }

   commandgroup CommandGroup4CmdGroup {

      command CopyInputUoMGroupCommand;
   }
}

-------------------------------- ASSISTANTS ---------------------------------

--------------------------------- COMMANDS ----------------------------------
command TranslationCommand for InputUnitMeasGroup {
   label = "Translation";
   mode = Global;
   enabled = [true];
   execute {
      navigate "page/BasicDataTranslation/Form?$filter=Module eq 'PARTCA' and Lu eq 'InputUnitMeasGroup'";
   }
}

command InputUoMParametersCommand for InputUnitMeas {
   label = "Input UoM Parameters";
   //! TODO: <Use the "enabled" keyword below to define the Inquire logic, found within the event handler 'menuItem__Input_Inquire'>
   enabled = [true];
   //! TODO: <Use the "execute" keyword below to define the Execute logic, found within the event handler 'menuItem__Input_Execute'>
   execute {
      assistant EnterInputUnitParamAssistant(parent.InputUnitMeasGroupId, "", null, null, UnitCode, ConversionFactor, "PARTCA") {
         when CANCEL {
            exit CANCEL;
         }
      }
   }
}

command UsedbyInventoryPartCommand for InputUnitMeasGroup {
   label = "Used by Inventory Part";
   enabled = [true];
   execute {
      navigate "page/InventoryParts/List?$filter=InputUnitMeasGroupId eq $[InputUnitMeasGroupId]";
   }
}
command UsedbyPartCatalogCommand for InputUnitMeasGroup {
   label = "Used by Part Catalog";
   enabled = [true];
   execute {
      navigate "page/Parts/List?$filter=InputUnitMeasGroupId eq $[InputUnitMeasGroupId]";
   }
}
command CopyInputUoMGroupCommand for InputUnitMeasGroup {
   label = "Copy Input UoM Group";
   variable NewInputUomGroupIdVar;
   variable DescriptionVar;

   execute {
      dialog CopyInputUoMGroupDialog into(NewInputUomGroupIdVar, DescriptionVar) {
         when OK {
            call CreateNewInputUomGroup(InputUnitMeasGroupId, NewInputUomGroupIdVar, DescriptionVar);
            navigate "page/InputUnitOfMeasureGroup/Form?$filter=InputUnitMeasGroupId eq $[NewInputUomGroupIdVar]";
         }
      }
   }

}

--------------------------------- SELECTORS ---------------------------------
@Override
selector InputUnitMeasGroupSelector for InputUnitMeasGroup {
   label = "${InputUnitMeasGroupId}";
   static InputUnitMeasGroupId;
}

---------------------------------- GROUPS -----------------------------------
group InputUnitMeasGroupGroup for InputUnitMeasGroup {
   label = "";
   field InputUnitMeasGroupId;
   field Description;
   lov UnitCodeRef with IsoUnitSelector {
      label = "Inventory Unit of Measure";
      description = UnitCodeRef.Description;

   }
}

group CopyInputUoMGroup for CopyInputUoMGroupStructure {
   label = "";
   field InputUomGroupId;
   field Description;
}

----------------------------------- LISTS -----------------------------------
list InputUnitMeasList for InputUnitMeas {
   label = "";

   lov UnitCodeRef with ReferenceIsoUnitSelector {
      freeinput = [true];
      validate command {
         variable Temp;
         execute {
            if [UnitCode != null] {
               call GetInputUomDetails(UnitCode) into Temp;
               set Description = Temp.Description;
               set PreDefinedUom = Temp.PreDefined;
               set InputUnitMeasType = Temp.InputUnitMeasureType;

               call ConvertUnitQuantity(1, UnitCode, InputUnitMeasGroupId) into ConversionFactor;
               if [ConversionFactor = null] {
                  //  UserDefined is the identifier of USER_DEFINED.
                  set InputUnitMeasType = "UserDefined";
               }
            }
         }
      }
   }
   field Description;
   field PreDefinedUom;

   field InputUnitMeasType {

      validate command {
         execute {
            //  SystemDefined is the identifier of SYSTEM_DEFINED.
            if [InputUnitMeasType = "SystemDefined" and FormulaId != null] {
               call ConvertUnitQuantity(1, FormulaRef.FormulaUom, InputUnitMeasGroupId) into ConversionFactor;
               if [ConversionFactor = null] {
                  //  UserDefined is the identifier of USER_DEFINED.
                  set InputUnitMeasType = "UserDefined";
               }
            }
         }
      }
   }
   field ConversionFactor {
      validate command {
         execute {
            set InputUnitMeasType = "UserDefined";
         }
      }
   }
   lov FormulaRef with ReferenceValidFormulaSelector {
      validate command {
         execute {
            call ConvertUnitQuantity(1, FormulaRef.FormulaUom, InputUnitMeasGroupId) into ConversionFactor;
            set InputUnitMeasType = "SystemDefined";
         }
      }
   }
   field FormulaRef.FormulaUom {
      label = "Formula UoM";
   }
   field RoundingDecimals;
   field ManufUsageAllowed;
   field PurchUsageAllowed;
   field CustUsageAllowed;
   field DefaultInputUomDb;
   // fieldranking UnitCodeRef, Description, PreDefinedUom, InputUnitMeasType, ConversionFactor, FormulaIdRef, FormulaRef.FormulaUom, RoundingDecimals, ManufUsageAllowed, DefaultInputUomDb;
   commandgroup CommandGroup2CmdGroup {

      command InputUoMParametersCommand;
   }
}

list InputUnitMeasVariableList for InputUnitMeasVariable {
   label = "";
   field VariableIdRef;
   field FormulaVariableRef.Description {
      label = "Description";
   }
   field FormulaVariableRef.UnitCode {
      label = "UoM";
   }
   field ValueSource;
   field VariableValue;
   // fieldranking VariableIdRef, FormulaVariableRef.Description, FormulaVariableRef.UnitCode, ValueSource, VariableValue;
}

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------
dialog CopyInputUoMGroupDialog for CopyInputUoMGroupStructure {
   label = "Copy Input UoM Group";
   // input(<replace with input parameters>);
   output(InputUomGroupId, Description);
   group CopyInputUoMGroup;

   commandgroup ButtonCmdGroup {

      command Ok {
         enabled = [InputUomGroupId != null and Description != null];
      }
      command Cancel;
   }
}
---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------
