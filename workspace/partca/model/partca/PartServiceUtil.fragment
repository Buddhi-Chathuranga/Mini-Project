--  Date        Sign    History
--  ----------  ------  ---------------------------------------------------------
--  2021-07-30  MiKulk  SC21R2-2139, Added missing Maxlengths for the attributes.
--  2021-07-27  ChBnlk  SC21R2-1737, Modified Get_Part_Catalog to handle errors properly by moving the attribute ErrorMessage to
--                      entity PartCatalog.
--  2021-06-28  ChBnlk  SC21R2-1418, Added attribute ErrorMessage to the structure PartCatalogStructure.
--  2021-05-25  DhAplk  SC21R2-1283, SC21R2-142 Added array and reference related descriptions.
--  2021-05-17  DhAplk  SC21R2-1188, Added CRUD = none to the entities to remove unnecessary projection entity actions grants.
--  2020-12-01  DhAplk  SC2020R1-11053, Added descriptions to GetPartCatalog related structures and overriden entities.
--  2020-09-29  ChBnlk  SC2020R1-55, Made AttributeStructure and AssortmentPartStructure in to queries to
--  2020-09-29          get the modelling support.
--  2020-04-23  Erlise  SC2020R1-55, Conversion of BizApi GetPartCatalog from ORDSRV/PartCatalogHandling.serverpackage.
-----------------------------------------------------------------------------

fragment PartServiceUtil;
component PARTCA;
layer Core;
description "This will keep the models and structures for Integration related to Part Catalog Information.";

--------------------------------- FRAGMENTS ---------------------------------


----------------------------- CLIENT FRAGMENTS ------------------------------


--------------------------- PROJECTION FRAGMENTS ----------------------------
@Override
@apidoc {
   @description : Overridden PartCatalog entity
   @attribute PartNo : The identification number of the part in part catalog.
   @attribute Description : The catalog description of the part.
   @attribute UnitCode : The unit of measure for the part in the part catalog.
   @attribute LanguageDescription : The description of the part, in the desired language.
   @attribute LotTrackingCode : Determines whether lot/batch tracking is used.
   @attribute SerialRule : This column indicates which method to use when creating serial numbers, either manual or automatic.
   @attribute SerialTrackingCode : This column indicates which method to use when creating serial numbers, either manual or automatic.
   @attribute EngSerialTrackingCode : Indicates if after delivery serial tracking is used for the part. If serial tracking is enabled, tracking of individual parts issued to a delivery structure, e.g. project delivery structure, is done
   @attribute Configurable : Indicates whether the part is allowed to have configurations. A configuration is a unique combination of characteristics and options that is used with a configurable part.
   @attribute ConditionCodeUsage : This is an indiation if the part is condition code enabled or not.
   @attribute SubLotRule : Identifies whether a single lot or batch can be divided into one or more sub-lots. If the part is lot-tracked, sub-lots may be allowed. The two possible values are: Sub-Lots Allowed and No Sub-Lots Allowed.
   @attribute LotQuantityRule : Displays the Lot Rule for the part, as defined in Part Catalog. A part can either allow One Lot per Production Order, or Many Lots per Production Order.
   @attribute PositionPart : <<Indicates if this part is a position part. A position part is a fictitious part number used to group real part numbers that are interchangeable.
   Position parts are only used in complex MRO. Usually, SBs and manuals are issued per position part, not per real part number. Likewise, the work scope refers to position parts.
   When the actual maintenance work begins, the position parts are gradually replaced by the real part numbers found during the disassembly of the overhaul object.>>
   @attribute CatchUnitEnabled : Indicates if this part is Catch Unit enabled.
   @attribute MultilevelTracking : <<Indicates if multi-level tracking for the part is enabled or not. If multi-level tracking is enabled, it impacts the processing of shop orders for the part itself in two ways:
   A tracked structure must be created prior to receipt.
   Tracking numbers for order-based lot tracked parts must be generated prior to receipt.>>
   @attribute ComponentLotRule : <<The component lot rule of the part. The component lot rule applies to the Shop Order or the Production Schedule Receipts, and determines whether the lot-tracked components may be issued from only one lot/batch or not. The possible values are:
   One Lot Allowed - Only one lot/batch can be issued/used per shop order or production schedule receipt.
   Many Lots Allowed - Multiple lots/batches can be issued/used per shop order or production schedule receipt.>>
   @attribute StopArrivalIssuedSerial : <<If this option is enabled, purchase order arrival of serials having current position in the part serial catalog as Issued or In Facility is prevented. This feature is only available for parts that are serial-tracked.
   If you enable this feature, you cannot perform purchase order arrival for a serial which has the current position with value Issued or In Facility unless:
   The purchase order line is an ESO(External Service Order).
   The purchase order line has the origin in MRO(Maintenance Repair and Overhaul).
   You can temporarily ignore the setting of this option for a specific serial, if you select the Ignore Stop PO Arrivals of Issued check box in the part serial catalog.>>
   @attribute AllowAsNotConsumed : <<Indicates if the item should be consumed or not for certain events. If this option is enabled, the consumption item may either be set to Consumed or Not Consumed in the manufacturing structure (inclusive of all structures and structure types),
   shop order material line, DOP order component line or in the interim order component line. However if it is not selected, then it indicates that the consumption item is set to Consumed only. By default this option is cleared for lot/batch and/or serial-tracked parts, and can be selected if needed.
   If the consumption item of the specified part is set to Not Consumed in a manufacturing structure line of a site, then an error message appears upon clearing this option.>>
   @attribute ReceiptIssueSerialTrack : Indicates if this part is serial tracked at receipt and issue of the part.
   @attribute StopNewSerialInRma : Indicates if it is possible to return a non existing part serial or not. If this option is enabled, you can create new part serial when you return parts as long as the RMA line is not connected to an order. It is possible to create new serials both when you return into inventory and when you scrap the part.
   @attribute PartMainGroup : The main group to where the part belongs. Part main groups are used for logical grouping of parts.
   @attribute CustWarrantyId : This is a indication if the part is connected to any customer warranty.
   @attribute SupWarrantyId : This is a indication if the part is connected to any supplier warranty.
   @attribute InputUnitMeasGroupId : The unique identity of the input unit of measure (UoM) group. An input UoM group contains one or more input UoMs.
   @attribute WeightNet : The net weight of the part expressed in the weight unit of measure.
   @attribute UomForWeightNet : The unit of measure in which the weight is defined.
   @attribute VolumeNet : The volume of one unit of the part, without the outer case, expressed in the volume unit of measure.
   @attribute UomForVolumeNet : The unit of measure in which the volume is defined.
   @attribute FreightFactor : This is used for the calculation of freight charges. Its purpose is to adjust the real net weight or net volume for freight calculation purposes, e.g. large items with a light overall weight can be charged according to a higher weight than its real weight.
   @attribute InfoText : Additional information text connected to the specific part.
   @attribute StandardNameId : The standard name is used to ensure that a part description is always entered in the same way. The value is set to zero (0) when a standard name is not connected to the part catalog part.
   @attribute MainGroupDesc : The description of the part main group to which the part is assigned. Part main groups are used for logical grouping of parts.
   @attribute PartActive : Indicates if the part is active or not.
   @attribute StandardName : The standard name of the part, as defined in IFS/Part Catalog. The standard name feature is used to ensure that a part description is always entered in the same way.
   @navigation AlternateParts : Include alternate part information connected to a specific part catalog record in IFS Cloud.
   @navigation Languages : Include part information in a specific language as defined in IFS Cloud.
   @navigation PartHandlingUnits : Include handling unit information connected to a specific part catalog record in IFS Cloud.
   @navigation PartGtinList : Include GTIN number related information connected to a specific part catalog record in IFS Cloud.
   @navigation AssortmentNodePartCatalog : Include information on which assortment and assortment node a specific part catalog record belongs to in IFS Cloud.
   @navigation Attributes : Include information related to custom fields created for a specific part catalog record in IFS Cloud.
}
entity PartCatalog {
   crud = None;
   use attributes = Description, StdNameId, UnitCode, LanguageDescription,
   LotTrackingCode, SerialRule, SerialTrackingCode, EngSerialTrackingCode, Configurable, ConditionCodeUsage,
   SubLotRule, LotQuantityRule, PositionPart, CatchUnitEnabled, MultilevelTracking, ComponentLotRule, StopArrivalIssuedSerial,
   AllowAsNotConsumed, ReceiptIssueSerialTrack, StopNewSerialInRma,
   PartMainGroup, CustWarrantyId, SupWarrantyId, InputUnitMeasGroupId,
   WeightNet, UomForWeightNet, VolumeNet, UomForVolumeNet,
   FreightFactor, InfoText;

   attribute StdNameId Number {
      alias = "StandardNameId";
   }
   attribute MainGroupDesc Text {
      fetch = "Eng_Part_Main_Group_API.Get_Description(part_main_group)";
      maxlength = 200;
   }
   attribute PartActive Text {
      fetch = "Get_Part_Status(part_no)";
      maxlength = 5;

   }
   attribute StandardName Text {
      fetch = "Standard_Names_Language_API.Get_Std_Name(null, std_name_id)";
      maxlength = 200;

   }
   attribute ErrorMessage Text {
      maxlength = 20000;
      fetch = "''";
   }

   array AlternateParts(PartNo) to PartCatalogAlternative(PartNo);
   array Languages(PartNo) to PartCatalogLanguage(PartNo);
   @DynamicComponentDependency INVENT
   array PartHandlingUnits(PartNo) to PartHandlingUnit(PartNo);
   array PartGtinList(PartNo) to PartGtin(PartNo);
   @DynamicComponentDependency INVENT
   array AssortmentNodePartCatalog(PartNo) to AssortmentPartStructure(PartNo);
   array Attributes(PartNo) to AttributeStructure(PartNo);
}

@Override
@apidoc {
   @description : Overridden PartCatalogAlternative entity
   @attribute PartNo : The identification number of the part in part catalog.
   @attribute AlternativePartNo : The part number of the alternate part.
   @attribute Information : Information regarding the custom object.
   @attribute NoteText : Notes or comments related to the alternate part connection.
   @attribute FullyInterchangeable : Indicates that the part and the alternate part have been defined as fully interchangeable alternates to each other.
   @attribute DateCreated : The date on which the record was created.
   @attribute CreatedBy : The identity of the user who created this alternate part record.
   @attribute DateChanged : The date on which the record was last changed.
   @attribute ChangedBy : The identity of the user who performed the last changed this alternate part record.
}
entity PartCatalogAlternative {
   crud = None;
   use attributes = Information, NoteText, Mutual, DtCre, UserCreated, DtChg, UserSign;
   attribute Mutual Text {
      alias = "FullyInterchangeable";
   }
   attribute DtCre Date {
      alias = "DateCreated";
   }
   attribute UserCreated Text {
      alias = "CreatedBy";
   }
   attribute DtChg Date {
      alias = "DateChanged";
   }
   attribute UserSign Text {
      alias = "ChangedBy";
   }
}

@Override
@apidoc {
   @description : Overridden PartCatalogLanguage entity
   @attribute PartNo : The identification number of the part in part catalog.
   @attribute LanguageCode : The language code of the part catalog description.
   @attribute Description : The description of this part for this specific language.
   @attribute NoteId : Notes or comments related to this language description.
}
entity PartCatalogLanguage {
   crud = None;
   use attributes = Description, NoteId;
}

@Override
@apidoc {
   @description : Overridden PartGtin entity
   @attribute PartNo : The identification number of the part in part catalog.
   @attribute GtinNo : The Global Trade Item Number (GTIN).
   @attribute GtinSeries : The Global Trade Item Number (GTIN) series to which the GTIN belongs.
   @attribute UsedForIdentification : Indicates if the Global Trade Item Number (GTIN) is used for identification of this part. This means that the GTIN or GTIN-14 can be used for identifying the part, for example, when you are entering customer orders, receiving incoming customer orders etc. If this option is not selected, it indicates you can reuse the same GTIN along with the series for another part.
   @attribute AutoCreatedGtin : Indicates if the Global Trade Item Number (GTIN) is automatically created by the system. If the option is cleared, it indicates the GTIN is entered manually.
   @attribute DefaultGtin : Indicates if this is the default Global Trade Item Number (GTIN) for this part.
   @attribute IdentificationDateChanged : This is the date on which the Used for Identification option was modified for this Global Trade Item Number (GTIN).
}
entity PartGtin {
   crud = None;
   use attributes = GtinSeries, UsedForIdentification, AutoCreatedGtin, DefaultGtin, IdentificationDateChanged;
}

@Override
@apidoc {
   @description : Overridden PartHandlingUnit entity
   @attribute PartNo : The identification number of the part in part catalog.
   @attribute HandlingUnitTypeId : The type of the handling unit. Handling unit types can be a pallet, box, container etc. For each handling unit type it is possible to specify the specific types of attributes like dimensions, weight and volume restrictions.
   @attribute UnitCode : The UoM used to define the maximum quantity. Note: For the same handling unit type it is possible to enter different maximum quantities for different UoMs as different UoMs can be used for different sites.
   @attribute MaxQuantityCapacity : The maximum quantity defined for a part catalog record. This determines the quantity, in the specified UoM, that can be stored in a specific handling unit type for this part.
   @attribute HandlingUnitTypeDesc : The description of the handling unit type.
   @attribute HandlingUnitCategoryId : The ID of the handling unit category. The handling unit category can be used to identify the difference between different groups of handling unit types. Different handling unit categories can be groups of pallets or packages. For example, you can enter a category for plastic boxes for a number of plastic boxes with different sizes.
   @attribute HandlingUnitCategoryDesc : The description of the handling unit category.
}
@DynamicComponentDependency INVENT
entity PartHandlingUnit {
   crud = None;
   use attributes = MaxQuantityCapacity;

   attribute HandlingUnitTypeDesc Text {
      fetch = "Handling_Unit_Type_API.Get_Description(handling_unit_type_id)";
      maxlength = 200;

   }
   attribute HandlingUnitCategoryId Text {
      fetch = "Handling_Unit_Type_API.Get_Handling_Unit_Category_Id(handling_unit_type_id)";
      maxlength = 25;

   }
   attribute HandlingUnitCategoryDesc Text {
      fetch = "Handling_Unit_Category_API.Get_Description(Handling_Unit_Type_API.Get_Handling_Unit_Category_Id(handling_unit_type_id))";
      maxlength = 25;

   }
}


---------------------------------- ACTIONS ----------------------------------


--------------------------------- FUNCTIONS ---------------------------------


-------------------------------- STRUCTURES ---------------------------------

@apidoc {
   @description : Data structure for Get part catalog response
}
structure PartCatalogStructure using PartCatalog {
   nestedwithcrud = ReadAndWrapWithJson;
   implementation = "Utility";


}

@apidoc {
   @description : Query type for Additional attributes of Part Catalog in PartCatalogStructure.
   @attribute PartNo : An attribute used for internal use
   @attribute AttributeName : The custom field name.
   @attribute AttributeValue : The custom field value.
}
query AttributeStructure {
   from = "Part_Catalog";
   keys = PartNo;
   attribute PartNo Text {
      maxlength = 200;
   }
   attribute AttributeName Text {
      fetch = "''";
      maxlength = 200;
   }
   attribute AttributeValue Text {
      fetch = "''";
      maxlength = 2000;
   }
}

@apidoc {
   @description : Query type for AssortmentPartStructure type elements.
   @attribute PartNo : The identity of the part that is connected to the specified assortment node. A part, or rather a part node, is the lowest level of an assortment. A part node cannot be a parent to other nodes.
   @attribute AssortmentId : The identity of the assortment to which this part catalog number belongs.
   @attribute AssortmentNodeId : The identity of the assortment node to which this part catalog number belongs.
   @attribute ClosestNode : Traversing upwards in the assortment, this is the identity of the assortment node that is closest to the part; i.e., the part node's parent node.
}
@DynamicComponentDependency INVENT
query AssortmentPartStructure {
   keys = PartNo;
   from = "Assortment_Node_Part_Cat";
   where = "assortment_id is not null";

   attribute PartNo Text {
      maxlength = 200;
   }
   attribute AssortmentId Text {
      maxlength = 200;
   }
   attribute AssortmentNodeId Text {
      maxlength = 200;
   }
   attribute ClosestNode Text {
      maxlength = 200;
   }
}

@apidoc {
   @description : This is the structure of Part catalog parameters.
   @attribute AssortmentId : The assortment ID for which to retrive information. When specified it will retrieve part catalog information for parts connected to this assortment in IFS Cloud.
   @attribute PartNo : The catalog part number for which to retrive information. When specified it will retrieve part catalog information only for this part number defined in IFS Cloud.
   @attribute PartMainGroup : The main group to where the part belongs. Part main groups are used for logical grouping of parts. When specified it will retrieve part catalog information for parts connected to this main group in IFS Cloud.
   @attribute PartMainGrpInCond : Used as a parameter where a list of part main groups can be entered as a search criteria.
   @attribute ChangedSinceNumberOfDays : This attribute can be used to set a criteria to only retrieve records that has been changed during a certain time frame.
   @attribute IncludeAttributes : This attribute determine if the defined extra attributes should be included in the response payload or not. Valid values for this field is true or false.
}
structure PartCatalogParamsStructure {
   implementation = "Utility";
   attribute AssortmentId Text {
      maxlength = 50;

   }
   attribute PartNo Text {
      maxlength = 25;

   }
   attribute PartMainGroup Text {
      maxlength = 20;

   }
   attribute PartMainGrpInCond Text {
      maxlength = 2000;

   }
   attribute ChangedSinceNumberOfDays Integer;
   attribute IncludeAttributes Boolean;
}
