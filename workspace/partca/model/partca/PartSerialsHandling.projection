----------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------------
-- 2020-08-18  JaThlk  SC2020R1-1191, Added the fields Country and ManufacturerSerialNo.
-- 2018-06-01  SuDelk  SCUXXW4-1876, Converted from tbwPartSerial using MTG Version: 1.18
----------------------------------------------------------------------------------------------------------
projection PartSerialsHandling;
component PARTCA;
layer Core;
description "Use this API to view details of the serial part, e.g., the part number, description, serial number, status, and current position";
category Users;
@DynamicComponentDependency FIXASS
include fragment FaAcquisitionSelector;
@DynamicComponentDependency PURCH
include fragment PurchaseBuyerLovSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset PartSerialCatalogSet for PartSerialCatalog;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity PartSerialCatalog {
   crud = Read;
   attribute Description Text {
      fetch = "PART_CATALOG_API.Get_Description(PART_NO)";
      label = "Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute SerialNo Text {
      maxlength = 100;
      format = uppercase;
   }
   attribute ConfigurationId Text {
      required = [true];
      editable = [ETag = null];
   }
   attribute LatestTransaction Text {
      maxlength = 100;
      editable = [ETag = null];
   }
   attribute TrackedInInventoryDb Boolean("TRUE", "FALSE") {
      fetch = "TRACKED_IN_INVENTORY_DB";
      label = "Tracked In Inventory";
      editable = [false];
   }
   attribute SupplierNo Text {
      editable = [ETag = null];
   }
   attribute IgnoreStopArrivalIssuedDb Boolean("TRUE", "FALSE") {
      fetch = "IGNORE_STOP_ARRIVAL_ISSUED_DB";
      label = "Ignore Stop PO Arrival of Issued";
      editable = [ETag != null];
   }
   attribute ManufacturerNo Text {
      editable = [ETag = null];
   }
   attribute SuperiorPartNo Text {
      editable = [ETag = null];
   }
   attribute SuperiorSerialNo Text {
      editable = [ETag = null];
   }
   attribute NoteText Text {
      label = "Note";
      editable = [ETag = null];
   }
   attribute OperationalStatus Enumeration(SerialOperationalStatus) {
      editable = [ETag = null];
   }
   attribute OperationalCondition Enumeration(SerialOperationalCond) {
      editable = [ETag = null];
   }
   attribute LockedForUpdateDb Boolean("LOCKED", "NOT_LOCKED") {
      fetch = "LOCKED_FOR_UPDATE_DB";
      label = "Locked for Update";
      editable = [false];
   }
   attribute DateLocked Timestamp {
      label = "Date/Time Locked";
      editable = [false];
   }
   attribute TopPartCurrentPosition Text {
      fetch = "PART_SERIAL_CATALOG_API.Get_Top_Parent_State(PART_NO,SERIAL_NO)";
      label = "Top Part Current Position";
      maxlength = 2000;
      editable = [false];
   }
   attribute ConditionCode Text {
      editable = [ETag = null];
   }
   attribute RenamedFromSerialNo Text {
      editable = [ETag = null];
   }
   attribute RenamedToSerialNo Text {
      editable = [ETag = null];
   }
   attribute RenameReason Text {
      fetch = "RENAME_REASON";
      maxlength = 50;
      editable = [false];
   }
   attribute PartOwnership Enumeration(PartOwnership) {
      label = "Ownership";
      editable = [ETag = null];
   }
   attribute Owner Text {
      fetch = "DECODE(OWNING_CUSTOMER_NO,NULL,OWNING_VENDOR_NO,OWNING_CUSTOMER_NO)";
      label = "Owner";
      maxlength = 100;
      editable = [ETag = null];
      format = uppercase;
   }
   @DynamicComponentDependency ORDER
   @DynamicComponentDependency PURCH
   attribute OwnerName Text {
      fetch = "DECODE(OWNING_CUSTOMER_NO,NULL,SUPPLIER_API.Get_Vendor_Name(OWNING_VENDOR_NO), Cust_Ord_Customer_API.Get_Name(OWNING_CUSTOMER_NO))";
      label = "Owner Name";
      maxlength = 100;
      editable = [ETag = null];
   }
   attribute OwnerId Text {
      label = "Owner Organization";
   }
   attribute AcquisitionCost Number {
      maxlength = 100;
   }
   attribute CurrencyCode Text {
      fetch = "CURRENCY_CODE";
   }
   attribute EngPartRevision Text {
      editable = [ETag = null];
   }
   attribute SerialRevision Text {
      editable = [ETag = null];
      format = uppercase;
   }
   attribute FaObjectSystemDefinedDb Boolean("TRUE", "FALSE") {
      fetch = "FA_OBJECT_SYSTEM_DEFINED_DB";
      label = "System Defined";
      editable = [false];
   }
   attribute DateCreated Timestamp {
      required = [true];
      editable = [ETag = null];
   }
   attribute UserCreated Text {
      required = [true];
      editable = [ETag = null];
   }
   attribute DateChanged Timestamp {
      required = [true];
      editable = [ETag = null];
   }
   attribute UserChanged Text {
      required = [true];
      editable = [ETag = null];
   }
   attribute StopArrIssueSerialDB Text {
      fetch = "Part_Catalog_API.Get_Stop_Arr_Issued_Serial_Db(PART_NO)";
      label = "StopArrIssueSerialDB";
      maxlength = 2000;
      editable = [false];
   }
   @DynamicComponentDependency FIXASS
   attribute FaObjectState Text {
      fetch = "Fa_Object_API.Get_State(FA_OBJECT_COMPANY, FA_OBJECT_ID)";
      label = "Object Status";
   }
   attribute Country Text {
      fetch = "Manufacturer_Info_API.Get_Country(manufacturer_no)";
   }
   attribute ManufacturerSerialNo Text;
   reference ManufacturerInfoRef(ManufacturerNo) to ManufacturerInfo(ManufacturerId);
   reference OwnerInfoRef(OwnerId) to OwnerInfo(OwnerId);
   @DynamicComponentDependency FIXASS
   reference FaObjectRef(FaObjectCompany, FaObjectId) to FaObject(Company, ObjectId);
   reference PartNoRef(PartNo) to PartCatalog(PartNo) {
      label = "Part No";
   }
   @DynamicComponentDependency CFGCHR
   reference ConfigurationIdRef(PartNo, ConfigurationId) to ConfigurationSpec(PartNo, ConfigurationId) {
      label = "Configuration Id";
   }
   reference SupplierNoRef(SupplierNo) to SupplierInfo(SupplierId) {
      label = "Supplier No";
   }
   @DynamicComponentDependency PURCH
   reference BuyerRef(Buyer) to PurchaseBuyerLov(BuyerCode) {
      label = "Buyer";
   }
   reference ManufacturerNoRef(ManufacturerNo) to ManufacturerInfo(ManufacturerId) {
      label = "Manufacturer No";
   }
   reference ManuPartNoRef(PartNo, ManufacturerNo, ManuPartNo) to PartManuPartNo(PartNo, ManufacturerNo, ManuPartNo) {
      label = "Manufacturer Part No";
   }
   reference SuperiorSerialNoRef(SuperiorPartNo, SuperiorSerialNo) to PartSerialCatalog(PartNo, SerialNo) {
      label = "Superior Serial No";
   }
   reference ConditionCodeRef(ConditionCode) to ConditionCode(ConditionCode) {
      label = "Condition Code";
   }
   reference OwnerIdRef(OwnerId) to OwnerInfo(OwnerId) {
      label = "Owner Organization";
   }
   reference CurrencyCodeRef(CurrencyCode) to IsoCurrency(CurrencyCode) {
      label = "Currency Code";
   }
   @DynamicComponentDependency FIXASS
   reference FaObjectIdRef(FaObjectCompany, FaObjectId) to FaAcquisition(Company, ObjectId) {
      label = "Object ID";
   }
}
