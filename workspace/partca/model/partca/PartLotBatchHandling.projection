--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2021-02-05  Wasalk  SC2020R1-12255, Modified CreateDate by adding fetch TRUNC(create_date) to work properly in exact date search.
-- 2020-10-07  JaThlk  SC2020R1-10402, Removed the function GetDefaultDate.
-- 2020-10-02  JaThlk  SC2020R1-10295, Set the manufacturing tracking information to uneditable without using ChangeManufacturerInfoAssistant.
-- 2020-08-24  JaThlk  SC2020R1-1185, Added the columns ManufacturerNo, ManufacturerPartNo, Country and ManufacturerLotBatchNo.
-- 2019-04-10  ChFolk  SCUXXW4-19057, Renamed PartNoRef as PartCatalogRef.
-- 2018-10-18  SWiclk  SCUXXW4-12614, Added fragment QmanInventoryCreateAnalysisDialog.
-- 2018-07-18  SWiclk  SCUXXW4-1649, Converted from  dlgChangeConditionCode using MTG Version: 1.23
-- 2018-07-16  SWiclk  SCUXXW4-1894, Added array SubLotArray in order to handle tbwSubLot.
-- 2018-07-13  SWiclk  SCUXXW4-1714, Converted from frmLotBatchMaster using MTG Version: 1.23
--------------------------------------------------------------------------------------
projection PartLotBatchHandling;
component PARTCA;
layer Core;
description "Use this API to view information about part lot/batch. You can open the Change Condition Code dialog box to change the condition code for the lot/batch for parts that have condition code functionality enabled.";
category Users;
include fragment LotBatchHistoryList;
include fragment ChangeConditionCodeDialog;
@DynamicComponentDependency MPCCOM
include fragment UserAllowedSiteLovSelector;
@DynamicComponentDependency MSCOM
include fragment OrgCodeAllowedSiteLovSelector;
@DynamicComponentDependency PCERT
include fragment PartCertificateCustomerSelector;
@DynamicComponentDependency PCERT
include fragment PartCertificatesList;
@DynamicComponentDependency QUAMAN
include fragment QmanInventoryCreateAnalysisDialog;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset PartLotBatchSet for PartLotBatch;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity PartLotBatch using LotBatchMaster {
   crud = Read, Update;
   supportwarnings = [true];
   attribute PartNo Text {
      maxlength = 100;
   }
   attribute Description Text {
      fetch = "PART_CATALOG_API.Get_Description(PART_NO)";
      label = "Description";
      maxlength = 2000;
      editable = [false];
   }
   attribute LotBatchNo Text {
      label = "Lot/Batch No";
   }
   attribute CreateDate Date {
      label = "Created";
      fetch = "TRUNC(create_date)";
      required = [true];
      editable = [false];
   }
   attribute ConditionCode Text {
      editable = [false];
   }
   attribute InitialContract Text {
      label = "Initial Site";
      editable = [false];
   }
   attribute LastSalesDate Date {
      editable = [false];
   }
   attribute ManufacturedDate Date {
      label = "Manufacturing Date";
      editable = [false];
   }
   attribute ReceivedQty Number {
      editable = [false];
   }
   attribute ScrappedQty Number {
      editable = [false];
   }
   attribute ShippedQty Number {
      label = "Delivered Qty";
      editable = [false];
   }
   attribute ExpirationDate Date {
      label = "Lot/Batch Expiration Date";
   }
   attribute ParentPartNo Text {
      label = "Master Part No";
      editable = [ETag = null];
   }
   attribute ParentLot Text {
      label = "Master Lot";
      editable = [false];
   }
   attribute OrderType Enumeration(OrderType) {
      editable = [false];
   }
   attribute OrderRef1 Text {
      editable = [false];
   }
   attribute OrderRef2 Text {
      label = "Order Ref 2";
      editable = [false];
   }
   attribute OrderRef3 Text {
      label = "Order Ref 3";
      editable = [false];
   }
   attribute OrderRef4 Number {
      label = "Order Ref 4";
      editable = [false];
   }
   attribute NoteText Text {
      label = "Notes";
   }

   attribute ConditionCodeUsageDb Text {
      fetch = "Part_Catalog_API.Get_Condition_Code_Usage_Db (PART_NO)";
      editable = [false];
   }
   attribute SerialTrackingCodeDb Text {
      fetch = "Part_Catalog_API.Get_Serial_Tracking_Code_Db (PART_NO)";
      editable = [false];
   }
   attribute ManufacturerNo Text {
      label = "Manufacturer";
      editable = [false];
   }
   attribute ManufacturerPartNo Text {
      label = "Manufacturer's Part No";
      editable = [false];
   }
   attribute ManufacturerLotBatchNo Text {
      label = "Manufacturer Lot Batch No";
      editable = [false];
   }
   attribute Country Text {
      label = "Manufacturer Country";
      fetch = "Manufacturer_Info_API.Get_Country(manufacturer_no)";
      editable = [false];
   }

   @DynamicComponentDependency INVENT
   reference InventoryPartRef(InitialContract, PartNo) to InventoryPart(Contract, PartNo);
   reference PartCatalogRef(PartNo) to PartCatalog(PartNo) {
      label = "Part No";
   }
   reference ConditionCodeRef(ConditionCode) to ConditionCode(ConditionCode) {
      label = "Condition Code";
   }
   @DynamicComponentDependency MPCCOM
   reference InitialContractRef(InitialContract) to Site(Contract) {
      label = "Initial Site";
   }

   array LotBatchHistoryArray() to LotBatchHistory() {
      where = "(:parent.PartNo = :child.PartNo and :parent.LotBatchNo = :child.LotBatchNo)";

   }

   -- Sub Lot uses the same LU PartLotBatch.
   array SubLotArray() to PartLotBatch() {
      where = "(:child.ParentPartNo  = :parent.PartNo and :child.ParentLot  = :parent.LotBatchNo)";
   }

   @DynamicComponentDependency PCERT
   array PartCertificatesArray() to PartCertificate() {
      where = "(:child.PartNo = :parent.PartNo and :child.LotBatchNo = :parent.LotBatchNo)";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------

-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------


-------------------------------- STRUCTURES ---------------------------------

