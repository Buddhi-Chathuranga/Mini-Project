--------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2019-05-08  DaZase  SCUXXW4-19913, Added initialcheck to all unbounded actions.
-- 2019-01-24  SaGelk  SCUXXW4-1689, Implemented the InputUoMParametersCommand.
-- 2018-09-03  SWiclk  SCUXXW4-1669, Converted from dlgCopyInputUoMGroup using MTG Version: 1.27
-- 2018-09-03  SWiclk  SCUXXW4-1709, Converted from frmInputUnitMeasGroup using MTG Version: 1.27
--------------------------------------------------------------------------------------
projection InputUnitOfMeasureGroupHandling;
component PARTCA;
layer Core;
description "Use this API to create input UoM groups and to enter most of the information relating to part unit conversions.";
category Users;
include fragment ValidFormulaSelector;
include fragment EnterInputUomParametersAssistant;


----------------------------- MAIN ENTRY POINTS -----------------------------
entityset InputUnitMeasGroupSet for InputUnitMeasGroup;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity InputUnitMeasGroup {
   ludependencies = InputUnitMeas;
   supportwarnings = [true];
   attribute InputUnitMeasGroupId Text {
      fetch = "input_unit_meas_group_id";
      label = "Input UoM Group ID";
      maxlength = 100;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute Description Text {
      fetch = "description";
      label = "Input UoM Group Description";
      maxlength = 100;
      required = [true];
   }
   attribute UnitCode Text {
      fetch = "unit_code";
      label = "Inventory UoM";
      maxlength = 30;
      required = [true];
      editable = [ETag = null];
   }
   reference UnitCodeRef(UnitCode) to IsoUnit(UnitCode) {
      label = "Inventory UoM";
   }
   array InputUnitMeasureArray(InputUnitMeasGroupId) to InputUnitMeas(InputUnitMeasGroupId);

}

@Override
entity InputUnitMeas {
   ludependencies = InputUnitMeas;
   use attributes = Description;

   attribute InputUnitMeasGroupId Text {
      fetch = "input_unit_meas_group_id";
      label = "Input UoM Group ID";
      maxlength = 30;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute UnitCode Text {
      fetch = "unit_code";
      label = "Input UoM";
      maxlength = 30;
      required = [true];
      editable = [ETag = null];
   }
   attribute Description Text {
      fetch = "description";
      label = "Description";
      maxlength = 100;
      required = [true];
   }
   attribute PreDefinedUom Boolean("TRUE", "FALSE") {
      fetch = "Iso_Unit_API.Check_Exist(unit_code)";
      label = "Pre-Defined UoM";
      editable = [false];
   }
   attribute InputUnitMeasType Enumeration(InputUnitMeasType) {
      fetch = "input_unit_meas_type_db";
      label = "Type";
      required = [true];
   }

   attribute ConversionFactor Number {
      fetch = "conversion_factor";
      label = "Input UoM Conversion Factor";

   }
   attribute FormulaId Text {
      fetch = "formula_id";
      label = "Formula ID";
      maxlength = 30;
      editable = [ETag = null];
      format = uppercase;
   }
   attribute RoundingDecimals Number {
      fetch = "rounding_decimals";
      label = "Rounding Decimals";
   }
   attribute ManufUsageAllowed Boolean {
      fetch = "DECODE(manuf_usage_allowed, 1, 'TRUE', 'FALSE')";
      label = "Manufacturing Usage Allowed";
      required = [true];
   }
   attribute PurchUsageAllowed Boolean {
      fetch = "DECODE(purch_usage_allowed, 1, 'TRUE', 'FALSE')";
      label = "Purchasing Usage Allowed";
      required = [true];
   }
   attribute CustUsageAllowed Boolean {
      fetch = "DECODE(cust_usage_allowed, 1, 'TRUE', 'FALSE')";
      label = "Sales Usage Allowed";
      required = [true];
   }
   attribute DefaultInputUomDb Boolean("TRUE", "FALSE") {
      fetch = "default_input_uom_db";
      label = "Default Input UoM";
      required = [true];
   }
   reference FormulaRef(FormulaId) to Formula(FormulaId) {
      label = "Formula ID";
   }
   reference InputUnitMeasGroupIdRef(InputUnitMeasGroupId) to InputUnitMeasGroup(InputUnitMeasGroupId) {
      label = "Input UoM Group ID";
   }
   reference UnitCodeRef(UnitCode) to IsoUnit(UnitCode) {
      label = "Input UoM";
   }
   array InputUnitMeasureVariableArray(InputUnitMeasGroupId, UnitCode) to InputUnitMeasVariable(InputUnitMeasGroupId, UnitCode);

}

@Override
entity InputUnitMeasVariable {
   crud = Read, Update;
   ludependencies = InputUnitMeasVariable;
   attribute InputUnitMeasGroupId Text {
      fetch = "input_unit_meas_group_id";
      label = "Input UoM Group ID";
      maxlength = 30;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }

   attribute FormulaId Text {
      fetch = "formula_id";
      label = "Formula ID";
      maxlength = 30;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute VariableId Text {
      fetch = "variable_id";
      label = "Variable ID";
      maxlength = 30;
      required = [true];
      editable = [ETag = null];
      format = uppercase;
   }
   attribute ValueSource Enumeration(FormulaVarValueSource) {
      fetch = "value_source_db";
      label = "Value Type";
      required = [true];
   }
   attribute VariableValue Number {
      fetch = "variable_value";
      label = "Value";
   }
   reference FormulaVariableRef(VariableId) to FormulaVariable(VariableId);
   reference VariableIdRef(FormulaId, FormulaItemId, VariableId) to FormulaItemVariable(FormulaId, FormulaItemId, VariableId) {
      label = "Variable ID";
   }
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------
action CreateNewInputUomGroup {
   initialcheck none;
   parameter OldInputUomGroupId Text;
   parameter NewInputUomGroupId Text;
   parameter Description Text;

}

--------------------------------- FUNCTIONS ---------------------------------
function GetInputUomDetails Structure(InputUomDetailsStructure) {
   parameter UnitCode Text;
}

function ConvertUnitQuantity Number {
   parameter FromQuantity Number;
   parameter FromUnitCode Text;
   parameter InputUnitGroupId Text;
}

-------------------------------- STRUCTURES ---------------------------------
structure InputUomDetailsStructure {
   attribute Description Text;
   attribute PreDefined Boolean;
   attribute InputUnitMeasureType Enumeration(InputUnitMeasType);
}

structure CopyInputUoMGroupStructure {
   attribute InputUomGroupId Text {
      label = "Input UoM Group ID";
      maxlength = 30;
      format = uppercase;
   }
   attribute Description Text {
      label = "Description";
      maxlength = 100;
   }
}

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

--------------------------------- CHECKLIST ---------------------------------

