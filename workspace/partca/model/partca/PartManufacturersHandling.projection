----------------------------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  -----------------------------------------------------------------------------------
-- 2020-10-13  OsAllk  SC2020R1-10455, Replaced Component_Is_Installed_Num with Component_Is_Active_Num to check component ACTIVE/INACTIVE.
-- 2018-05-01  SuDelk  SCUXXW4-1861, Converted from tbwPartGtinPackageLevel using MTG Version: 1.16
----------------------------------------------------------------------------------------------------------
projection PartManufacturersHandling;
component PARTCA;
layer Core;
description "Use this API to identify all the manufacturers of a part. You can identify more than one manufacturer for each part.";
category Users;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset PartManufacturers for PartManufacturer;

------------------------------ ENTITY DETAILS -------------------------------
@Override
entity PartManufacturer {
   ludependencies = PartManufacturer;
   attribute PartDescription Text {
      fetch = "PART_CATALOG_API.Get_Description(PART_NO)";
      label = "Part Description";
      maxlength = 200;
      editable = [false];
   }
   attribute StandardName Text {
      fetch = "Standard_Names_API.Get_Std_Name(PART_CATALOG_API.Get_Std_Name_Id( PART_NO ))";
      label = "Standard Name";
      maxlength = 200;
      editable = [false];
   }
   attribute PreferredManufacturerDb Boolean("TRUE", "FALSE") {
      fetch = "PREFERRED_MANUFACTURER_DB";
      label = "Preferred Manufacturer";
      editable = [true];
   }
   attribute DateCreated Timestamp {
      label = "Created";
   }
   attribute DateChanged Timestamp {
      label = "Modified";
   }
   attribute UserChanged Text {
      label = "Modified By";
   }
   attribute IsDocmanInstalled Number {
      fetch = "Dictionary_SYS.Component_Is_Active_Num('DOCMAN')";
   }
   attribute IsObjectConnectionAvailable Boolean("TRUE", "FALSE") {
      fetch = "Part_Manufacturer_API.Approval_Connection_Available('PartManufacturer', 'ApprovalRouting')";
   }
   attribute QualifiedManufacturer Boolean("TRUE", "FALSE") {
      fetch = "QUALIFIED_MANUFACTURER_DB";
      label = "Qualified Manufacturer (QMR)";
      required = [true];
      editable = [false];
   }
   reference PartNoRef(PartNo) to PartCatalog(PartNo) {
      label = "Part No";
   }
   reference ManufacturerNoRef(ManufacturerNo) to ManufacturerInfo(ManufacturerId) {
      label = "Manufacturer No";
   }
   action SetQualifiedManufacturer {
      ludependencies = PartManufacturer, ApprovalRouting;
   }
   action NotQualifiedManufacturer {
      ludependencies = PartManufacturer, ApprovalRouting;
   }
}
--------------------------------- FUNCTIONS ---------------------------------
function GetDescription Text {
   parameter PartNo Text;
}

function GetStdName Text {
   parameter StdNameId Text;
}