-----------------------------------------------------------------------------
--  Module : PARTCA
--
--  Purpose: Upgrade of PARTCA database objects from release 13.1.0 to 14.0.0.
--
--  File   : 1400.upg
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  --------------------------------------------------
--  171011   BuRalk  CAM-785, Added reset_repair_value and reset_overhaul_value to the Condition_Code_Tab.
--  170403   MaEelk  STRSC-6922, Dropped obsolete view SO_LOT_BATCH_LOV.
--  170106   SudJlk  STRSC-5316, Set keep_default_ where value was missing for rowstate introduced for data validity.
--  161220   Chfose  STRSC-5075, Modified length of LINE_NO(PART_SERIAL_HISTORY_TAB) and ORDER_REF2(LOT_BATCH_HISTORY_TAB AND LOT_BATCH_MASTER_TAB) to 12.
--  160810   UdGnlk  STRSC-2428, Modified order_type column length from 200 to 20, therfore SUBSTR the values.
--  160610   Tiduse  STRMF-4832, Adding Column ROWSTATE to MAINT_LEVEL_TAB.
--  160603   JoAnSe  STRMF-2793, Added index LOT_BATCH_MASTER_IX1 to lot_batch_master_tab
--  160526   SWeelk  Bug 127359, Altered sequence PART_MANU_PART_HIST_SEQ to have a maximum value of 9999999999999999999
--  160428   TiRalk  STRSC-1786, Added rowstate to SUPPLIER_BLANKET_TYPE_TAB to handle data validity.
--  151120   MaEelk  LIM-4472, Removed the record for the Data Set 'PARTPALL' from PART_COPY_MODULE_DATASET_TAB
--  151119   Chfose  STRSC-404, Merged After9/Support cdbs into new upg.
--  151119           Updated tracked_in_inventory column in part_serial_catalog_tab with 'FALSE' where tracked_in_inventory is enabled in master parts.
--  151119           Added fa_object_company, fa_object_id, fa_object_system_defined to part_serial_catalog_tab.
--  151119           Added fa_object_company and fa_object_id to part_serial_history_tab.
--  ------   ------  --------------------------------------------------
-----------------------------------------------------------------------------

SET SERVEROUTPUT ON
exec Database_SYS.Log_Detail_Time_Stamp('PARTCA','1400.upg','Timestamp_1');
PROMPT Start upgrading with 1400.upg

------------------------------------------------------------------------------------------
---------------------------- Instructions for upg files ----------------------------------
------------------------------------------------------------------------------------------

-- If possible, everything regarding one table should be placed in one section.
-- If this is not possible, a proper comment about the reason should be added.

-- Each section should be started with a "-----" line and a empty line.
-- This section should then start with a line like: "-- ***** Example_Tab Start *****"
-- and end with a line like:                       "-- ***** Example_Tab End *****"
-- Don't forget UPPER/lower case !

-- Every part inside the section should start with a "PROMPT" line explaining what is done by the block.

-- If the Pl/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.

-- Remember ordinary coding standard rules !

-- Don't drop any Table/Column !

-- Don't forget performance when updating large table !

-- No unnecessary blank lines or comments !

-- If possible, use pure SQL commands
-- If possible, try to group several updates together in one statement.

-- For more information refer the "Upgrade Script Standards document and the Performance Guide.

-- Timestamps will be added automatically at the end of the project.


---------------------------------------------------------------------------------------------
--------------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ----------------------
---------------------------------------------------------------------------------------------

-- ***** ENG_PART_MAIN_GROUP_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('PARTCA','1400.upg','Timestamp_2');
PROMPT ADD ROWSTATE to ENG_PART_MAIN_GROUP_TAB.
DECLARE
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := 'ENG_PART_MAIN_GROUP_TAB';
BEGIN
   column_ := Database_SYS.Set_Column_Values('ROWSTATE',  'VARCHAR2(20)',  'N', '''Active''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
END;
/
-- ***** ENG_PART_MAIN_GROUP_TAB End *****

-- ***** LOT_BATCH_MASTER_TAB Start *****


exec Database_SYS.Log_Detail_Time_Stamp('PARTCA','1400.upg','Timestamp_3');
PROMPT Increasing the length of the column ORDER_REF2 in LOT_BATCH_MASTER_TAB to 12.
DECLARE
   column_ Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('ORDER_REF2', 'VARCHAR2(12)', 'Y');
   Database_SYS.Alter_Table_Column('LOT_BATCH_MASTER_TAB', 'M', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('PARTCA','1400.upg','Timestamp_4');
PROMPT ADD INDEX LOT_BATCH_MASTER_IX1 TO lot_batch_master_tab
DECLARE
   index_name_ VARCHAR2(30) := 'LOT_BATCH_MASTER_IX1';
   table_name_ VARCHAR2(30) := 'LOT_BATCH_MASTER_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ORDER_REF1');
   Database_SYS.Set_Table_Column(columns_, 'ORDER_REF2');
   Database_SYS.Set_Table_Column(columns_, 'ORDER_REF3');
   Database_SYS.Set_Table_Column(columns_, 'ORDER_REF4');
   Database_SYS.Set_Table_Column(columns_, 'ORDER_TYPE');
   Database_SYS.Set_Table_Column(columns_, 'PART_NO');
   Database_SYS.Create_Index(table_name_, index_name_, columns_, 'N', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
END;
/

-- ***** LOT_BATCH_MASTER_TAB End *****

-- ***** PART_COPY_MODULE_DATASET_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('PARTCA','1400.upg','Timestamp_5');
PROMPT Removing the record for the Data Set 'PARTPALL' from PART_COPY_MODULE_DATASET_TAB
BEGIN
   DELETE FROM PART_COPY_MODULE_DATASET_TAB
   WHERE  module = 'INVENT'
   AND    dataset_id = 'PARTPALL';
   COMMIT;
END;
/

-- ***** PART_COPY_MODULE_DATASET_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** PART_SERIAL_CATALOG_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('PARTCA','1400.upg','Timestamp_6');
PROMPT Updating tracked_in_inventory column in part_serial_catalog_tab with 'FALSE' where tracked_in_inventory enabled in master parts.
BEGIN
   UPDATE part_serial_catalog_tab
   SET    tracked_in_inventory = 'FALSE'
   WHERE  part_no IN (SELECT part_no
                      FROM   part_catalog_tab
                      WHERE  serial_tracking_code = 'SERIAL TRACKING')
   AND    tracked_in_inventory = 'TRUE';
   COMMIT;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('PARTCA','1400.upg','Timestamp_7');
PROMPT Adding fa_object_company, fa_object_id, fa_object_system_defined to part_serial_catalog_tab table
DECLARE
   table_name_ VARCHAR2(30) := 'PART_SERIAL_CATALOG_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('FA_OBJECT_COMPANY', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_,  TRUE);

   column_ := Database_SYS.Set_Column_Values('FA_OBJECT_ID', 'VARCHAR2(10)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_,  TRUE);

   column_ := Database_SYS.Set_Column_Values('FA_OBJECT_SYSTEM_DEFINED', 'VARCHAR2(5)', 'N', '''FALSE''', keep_default_ => 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_,  TRUE);
END;
/

-- ***** PART_SERIAL_CATALOG_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** PART_SERIAL_HISTORY_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('PARTCA','1400.upg','Timestamp_8');
PROMPT Adding fa_object_company and fa_object_id to part_serial_history_tab table
DECLARE
   table_name_ VARCHAR2(30) := 'PART_SERIAL_HISTORY_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('FA_OBJECT_COMPANY', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_,  TRUE);

   column_ := Database_SYS.Set_Column_Values('FA_OBJECT_ID', 'VARCHAR2(10)', 'Y');
   Database_SYS.Alter_Table_Column(table_name_, 'A', column_,  TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('PARTCA','1400.upg','Timestamp_9');
PROMPT Updating column ORDER_TYPE by substring to 20 characters for values more than 20
BEGIN
   UPDATE part_serial_history_tab
   SET    order_type = SUBSTR(order_type, 1,20)
   WHERE  LENGTH(order_type) > 20;
   COMMIT;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('PARTCA','1400.upg','Timestamp_10');
PROMPT Modifying the length of ORDER_TYPE to 20 and LINE_NO to 12 in PART_SERIAL_HISTORY_TAB.
DECLARE
   columns_ Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ORDER_TYPE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'LINE_NO', 'VARCHAR2(12)', 'Y');
   Database_SYS.Alter_Table('PART_SERIAL_HISTORY_TAB', columns_, TRUE);
END;
/

-- ***** PART_SERIAL_HISTORY_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** MAINT_LEVEL_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('PARTCA','1400.upg','Timestamp_11');
PROMPT Adding Column ROWSTATE to MAINT_LEVEL_TAB.
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'MAINT_LEVEL_TAB';
BEGIN
   Database_SYS.Set_Table_Column(columns_, 'ROWSTATE', 'VARCHAR2(20)', 'Y');
   Database_SYS.Alter_Table (table_name_, columns_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('PARTCA','1400.upg','Timestamp_12');
PROMPT UPDATE ROWSTATE IN  MAINT_LEVEL_TAB
DECLARE
   columns_     Database_SYS.ColumnTabType;
   table_name_  VARCHAR2(30) := 'MAINT_LEVEL_TAB';
   sql_stmt     VARCHAR2(200);
BEGIN
   sql_stmt := 'UPDATE MAINT_LEVEL_TAB
                SET rowstate = ''Active''';
   EXECUTE IMMEDIATE sql_stmt;
   Database_SYS.Set_Table_Column(columns_, 'ROWSTATE', 'VARCHAR2(20)', 'N');
   Database_SYS.Alter_Table (table_name_, columns_, TRUE);
END;
/

-- ***** MAINT_LEVEL_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** LOT_BATCH_HISTORY_TAB Start *****


exec Database_SYS.Log_Detail_Time_Stamp('PARTCA','1400.upg','Timestamp_13');
PROMPT Increasing the length of the column ORDER_REF2 in LOT_BATCH_HISTORY_TAB to 12.
DECLARE
   column_ Database_SYS.ColRec;
BEGIN
   Database_SYS.Reset_Column(column_);
   column_ := Database_SYS.Set_Column_Values('ORDER_REF2', 'VARCHAR2(12)', 'Y');
   Database_SYS.Alter_Table_Column('LOT_BATCH_HISTORY_TAB', 'M', column_, TRUE);
END;
/

-- ***** LOT_BATCH_HISTORY_TAB End *****

---------------------------------------------------------------------------------------------

-- ***** CONDITION_CODE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('PARTCA','1400.upg','Timestamp_14');
PROMPT Add ResetRepairValue and ResetOverhaulValue to LU ConditionCode
DECLARE
   table_name_ VARCHAR2(30) := 'CONDITION_CODE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'RESET_REPAIR_VALUE', 'VARCHAR2(20)', 'N', '''FALSE''', keep_default_ => 'N');
   Database_SYS.Set_Table_Column(columns_, 'RESET_OVERHAUL_VALUE', 'VARCHAR2(20)', 'N', '''FALSE''', keep_default_ => 'N');
   Database_SYS.Alter_Table(table_name_, columns_);
END;
/

-- ***** CONDITION_CODE_TAB End *****

---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES  ----------------------------------------
---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
--------------------------------- ALTER SEQUENCES -------------------------------------------
---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('PARTCA','1400.upg','Timestamp_15');
PROMPT Altering PART_MANU_PART_HIST_SEQ sequence to have a maximum value of 9999999999999999999
DECLARE
   stmt_      VARCHAR2(2000);
BEGIN
   stmt_ := 'ALTER SEQUENCE PART_MANU_PART_HIST_SEQ
            MAXVALUE 9999999999999999999';
   EXECUTE IMMEDIATE stmt_;
END;
/

---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES -------------------------------------
---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('PARTCA','1400.upg','Timestamp_16');
PROMPT Remove Obsolete VIEW SO_LOT_BATCH_LOV
BEGIN
   Database_SYS.Remove_View('SO_LOT_BATCH_LOV',   TRUE);
END;
/

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE SEQUENCES -------------------------------------
---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('PARTCA','1400.upg','Timestamp_17');
PROMPT Upgrade statements in file 1400.upg end here.

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('PARTCA','1400.upg','Done');



