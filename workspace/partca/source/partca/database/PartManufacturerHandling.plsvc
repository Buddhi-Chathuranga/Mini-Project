-----------------------------------------------------------------------------
--
--  Logical unit: PartManufacturerHandling
--  Component:    PARTCA
--
--  IFS Developer Studio Template Version 3.0
--
-------------------------------------------------------------------------------------
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2020-10-21  WaSalk  SC2020R1-10645, Overrode CRUD_Default_Copy___ to remove default values when duplicating. 
-- 2018-10-18  Sthose  SCUXXW4-1739, Converted from frmPartManufacturer using MTG Version: 1.31
--------------------------------------------------------------------------------------

layer Core;

PROCEDURE Modify_Qualified_Manufacturer___(
   key_                       IN Part_Manufacturer_Key,
   qualified_manufacturer_    IN VARCHAR2)
IS
   objid_            VARCHAR2(2000);
   objversion_       VARCHAR2(2000);
   attr_             VARCHAR2(2000);
   info_             VARCHAR2(2000);
BEGIN
   info_ := Client_SYS.Get_All_Info();
   Get_Objid_Objversion___ (objid_, objversion_, key_);
      
   Client_SYS.Clear_Attr(attr_);
   Client_SYS.Add_To_Attr('QUALIFIED_MANUFACTURER_DB', qualified_manufacturer_, attr_);
   
   Part_Manufacturer_API.Modify__(info_, objid_, objversion_, attr_, 'DO');
END Modify_Qualified_Manufacturer___;

PROCEDURE Set_Preferred_Manufacturer___ (
   part_no_         IN VARCHAR2,
   manufacturer_no_ IN VARCHAR2 )
IS
BEGIN
   Part_Manufacturer_API.Set_Preferred_Manufacturer(part_no_, manufacturer_no_);
END Set_Preferred_Manufacturer___;

PROCEDURE Set_Preferred_Manu_Part___ (
   part_no_         IN VARCHAR2,
   manufacturer_no_ IN VARCHAR2,
   manu_part_no_    IN VARCHAR2)
IS
BEGIN
   Part_Manu_Part_No_API.Set_Preferred_Manu_Part(part_no_, manufacturer_no_, manu_part_no_);
END Set_Preferred_Manu_Part___;

PROCEDURE Set_Qualified_Manufacturer___ (
   key_                       IN Part_Manufacturer_Key) 
IS
   key_ref_                      VARCHAR2(600);
   routing_exist_                VARCHAR2(10);
   approval_routing_started_     VARCHAR2(10);
   approval_routing_finished_    VARCHAR2(10);
BEGIN
   $IF Component_Docman_SYS.INSTALLED $THEN
      IF Part_Manufacturer_API.Approval_Connection_Available('PartManufacturer', 'ApprovalRouting') = 'TRUE' THEN
         key_ref_ := Client_SYS.Get_Key_Reference ('PartManufacturer', 'MANUFACTURER_NO', key_.manufacturer_no,'PART_NO', key_.part_no);

         routing_exist_ := Approval_Routing_API.Exist_Routing('PartManufacturer', key_ref_);
         IF (routing_exist_ = 'FALSE') THEN
            Error_SYS.Record_General(lu_name_, 'NOAPPROUTING: You need to create a Approval Routing to be able to Qualify a Manufacturer.');
         END IF;

         approval_routing_finished_ := Approval_Routing_API.Check_Routing_Finished('PartManufacturer', key_ref_);
         IF (approval_routing_finished_ = 'FALSE') THEN
            Error_SYS.Record_General(lu_name_, 'APPROUTINGNOTFINICHED: All steps in the Approval Process must be Approved to be able to set Manufacturer as Qualified.');
         END IF;
      END IF;
   $END
   
   Modify_Qualified_Manufacturer___(key_, 'TRUE');   
END Set_Qualified_Manufacturer___;

PROCEDURE Not_Qualified_Manufacturer___ (
   key_                       IN Part_Manufacturer_Key) 
IS
   key_ref_                      VARCHAR2(600);
BEGIN
   $IF Component_Docman_SYS.INSTALLED $THEN
      IF Part_Manufacturer_API.Approval_Connection_Available('PartManufacturer', 'ApprovalRouting') = 'TRUE' THEN
         key_ref_ := Client_SYS.Get_Key_Reference ('PartManufacturer', 'MANUFACTURER_NO', key_.manufacturer_no,'PART_NO', key_.part_no);
         Approval_Routing_API.Remove_Approval_Routing('PartManufacturer', key_ref_);
      END IF;
   $END
   Modify_Qualified_Manufacturer___(key_, 'FALSE');
END Not_Qualified_Manufacturer___;

@Override
PROCEDURE CRUD_Default_Copy___ (
   objid_  IN     VARCHAR2,
   key_    IN     Part_Manufacturer_Key,
   values_ IN     Copy_Values_Rec,
   attr_      OUT VARCHAR2,
   info_      OUT VARCHAR2 )
IS
BEGIN
   super(objid_, key_, values_, attr_, info_);
   attr_ := Client_SYS.Remove_Attr('PREFERRED_MANUFACTURER_DB', attr_);
   attr_ := Client_SYS.Remove_Attr('USER_CREATED', attr_);
   attr_ := Client_SYS.Remove_Attr('DATE_CREATED', attr_);
   attr_ := Client_SYS.Remove_Attr('USER_CHANGED', attr_);
   attr_ := Client_SYS.Remove_Attr('DATE_CHANGED', attr_);
END CRUD_Default_Copy___;
