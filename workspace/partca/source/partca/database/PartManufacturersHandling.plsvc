-----------------------------------------------------------------------------
--
--  Logical unit: PartManufacturersHandling
--  Component:    PARTCA
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------

layer Core;

FUNCTION Get_Description___ (
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2
IS
BEGIN
   RETURN Part_Catalog_API.Get_Description(part_no_);
END Get_Description___;  

FUNCTION Get_Std_Name___ (
   part_no_  IN VARCHAR2 ) RETURN VARCHAR2
IS
BEGIN
   RETURN Standard_Names_API.Get_Std_Name(Part_Catalog_API.Get_Std_Name_Id(part_no_));
END Get_Std_Name___;  

PROCEDURE Modify_Qualified_Manufacturer___(
   key_                       IN Part_Manufacturer_Key,
   qualified_manufacturer_    IN VARCHAR2)
IS
   objid_            VARCHAR2(2000);
   objversion_       VARCHAR2(2000);
   attr_             VARCHAR2(2000);
   info_             VARCHAR2(2000);
BEGIN
   info_ := Client_SYS.Get_All_Info();
   Get_Objid_Objversion___ (objid_, objversion_, key_);
      
   Client_SYS.Clear_Attr(attr_);
   Client_SYS.Add_To_Attr('QUALIFIED_MANUFACTURER_DB', qualified_manufacturer_, attr_);
   
   Part_Manufacturer_API.Modify__(info_, objid_, objversion_, attr_, 'DO');
END Modify_Qualified_Manufacturer___;

PROCEDURE Set_Qualified_Manufacturer___ (
   key_                       IN Part_Manufacturer_Key)
IS
   key_ref_                      VARCHAR2(600);
   routing_exist_                VARCHAR2(10);
   approval_routing_finished_    VARCHAR2(10);
BEGIN
   $IF Component_Docman_SYS.INSTALLED $THEN
      IF Part_Manufacturer_API.Approval_Connection_Available('PartManufacturer', 'ApprovalRouting') = 'TRUE' THEN
         key_ref_ := Client_SYS.Get_Key_Reference ('PartManufacturer', 'MANUFACTURER_NO', key_.manufacturer_no,'PART_NO', key_.part_no);

         routing_exist_ := Approval_Routing_API.Exist_Routing('PartManufacturer', key_ref_);
         IF (routing_exist_ = 'FALSE') THEN
            Error_SYS.Record_General(lu_name_, 'NOAPPROUTING: You need to create a Approval Routing to be able to Qualify a Manufacturer.');
         END IF;

         approval_routing_finished_ := Approval_Routing_API.Check_Routing_Finished('PartManufacturer', key_ref_);
         IF (approval_routing_finished_ = 'FALSE') THEN
            Error_SYS.Record_General(lu_name_, 'APPROUTINGNOTFINICHED: All steps in the Approval Process must be Approved to be able to set Manufacturer as Qualified.');
         END IF;
      END IF;
   $END
   
   Modify_Qualified_Manufacturer___(key_, 'TRUE');   
END Set_Qualified_Manufacturer___;

PROCEDURE Not_Qualified_Manufacturer___ (
   key_                       IN Part_Manufacturer_Key) 
IS
   key_ref_                      VARCHAR2(600);
BEGIN
   $IF Component_Docman_SYS.INSTALLED $THEN
      IF Part_Manufacturer_API.Approval_Connection_Available('PartManufacturer', 'ApprovalRouting') = 'TRUE' THEN
         key_ref_ := Client_SYS.Get_Key_Reference ('PartManufacturer', 'MANUFACTURER_NO', key_.manufacturer_no,'PART_NO', key_.part_no);
         Approval_Routing_API.Remove_Approval_Routing('PartManufacturer', key_ref_);
      END IF;
   $END
   Modify_Qualified_Manufacturer___(key_, 'FALSE');
END Not_Qualified_Manufacturer___;
