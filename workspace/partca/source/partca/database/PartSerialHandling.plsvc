-----------------------------------------------------------------------------
--
--  Logical unit: PartSerialHandling
--  Component:    PARTCA
--
--  IFS Developer Studio Template Version 3.0
--
-- Date        Sign    History
-- ----------  ------  ---------------------------------------------------------------
-- 2018-07-31  SURBLK  SCUXXW4-1744, Created.
--------------------------------------------------------------------------------------


layer Core;

FUNCTION Set_Operational_Condition___ (
   part_no_                      IN VARCHAR2,
   serial_no_                    IN VARCHAR2,
   new_operational_condition_    IN VARCHAR2,
   change_conditional_structure_ IN BOOLEAN,
   info$_ OUT VARCHAR2 ) RETURN VARCHAR2
IS
   new_operational_condition_db_ VARCHAR2(20);
   final_operational_condition_  VARCHAR2(20);
   final_change_conditional_structure_ VARCHAR2(20);
BEGIN
   new_operational_condition_db_ := Serial_Operational_Cond_API.Encode(new_operational_condition_);
   
   IF new_operational_condition_db_ IS NOT NULL THEN
      final_operational_condition_ := new_operational_condition_db_;
   ELSE
      final_operational_condition_ := new_operational_condition_;
   END IF;
   
   IF change_conditional_structure_ THEN 
      final_change_conditional_structure_ := 'TRUE';
   ELSE
      final_change_conditional_structure_ := 'FALSE';
   END IF;
   
   
   Part_Serial_Catalog_API.Set_Operational_Condition(info$_,
                                                      part_no_,
                                                      serial_no_,                                    
                                                      final_operational_condition_,                                
                                                      final_change_conditional_structure_,
                                                      'TRUE' );                         

   RETURN info$_;
END Set_Operational_Condition___;


PROCEDURE Rename_Non_Vim_Serial___ (
   part_no_              IN VARCHAR2,
   serial_no_            IN VARCHAR2,
   new_part_no_          IN VARCHAR2,
   new_serial_no_        IN VARCHAR2,
   manufacture_no_       IN VARCHAR2,
   manufacturer_part_no_ IN VARCHAR2,
   rename_reason_        IN VARCHAR2 ) 
IS
   
BEGIN
   Part_Serial_Catalog_API.Rename_Non_Vim_Serial ( part_no_,
                                                   serial_no_,
                                                   new_part_no_,
                                                   new_serial_no_,
                                                   manufacture_no_,
                                                   manufacturer_part_no_,
                                                   rename_reason_);
END Rename_Non_Vim_Serial___;


FUNCTION Get_Default_Date___ RETURN DATE
IS
   current_date_ Date;
BEGIN
   SELECT sysdate INTO current_date_ FROM dual;
   RETURN current_date_;
END Get_Default_Date___;


PROCEDURE Disconnect_From_Parent___ (
   part_no_   IN VARCHAR2,
   serial_no_ IN VARCHAR2 ) 
IS
   
BEGIN
   Part_Serial_Catalog_API.Disconnect_From_Parent(part_no_, serial_no_);
END Disconnect_From_Parent___;


FUNCTION Get_Fa_State___(
   fa_object_company_ IN VARCHAR2,
   fa_object_id_      IN VARCHAR2 ) RETURN VARCHAR2
IS
   obj_state_    VARCHAR2(20);
BEGIN
   $IF Component_Fixass_SYS.INSTALLED $THEN 
      obj_state_ := FA_OBJECT_API.Get_State(fa_object_company_, fa_object_id_);
   $END   
   RETURN obj_state_;
END Get_Fa_State___;

PROCEDURE Set_Fa_Object_Reference___ (
   part_no_           IN VARCHAR2,
   serial_no_         IN VARCHAR2,
   fa_object_company_ IN VARCHAR2,
   fa_object_id_      IN VARCHAR2,
   system_defined_    IN VARCHAR2 ) 
IS
BEGIN
   -- Security check
   $IF Component_Accrul_SYS.INSTALLED $THEN
   IF (fa_object_company_ IS NOT NULL) THEN
      IF (NOT (User_Finance_API.Is_User_Authorized(fa_object_company_))) THEN
         Error_SYS.Appl_Failure(lu_name_, err_source_ => 'User_Finance_API.Is_User_Authorized(fa_object_company_)');
      END IF;   
   END IF;
   $END   
   Part_Serial_Catalog_API.Set_Fa_Object_Reference(part_no_, serial_no_, fa_object_company_, fa_object_id_, system_defined_);
END Set_Fa_Object_Reference___;


FUNCTION Set_Company___(
   part_no_   IN VARCHAR2,
   serial_no_ IN VARCHAR2 ) RETURN VARCHAR2
IS
   part_serial_history_rec_ Part_Serial_History_API.Public_Rec;
   company_                 VARCHAR2(20);
BEGIN
   $IF Component_Mpccom_SYS.INSTALLED AND Component_Invent_SYS.INSTALLED $THEN
      part_serial_history_rec_ := Part_Serial_History_API.Get_Latest_Inv_Trans_Owenrship(part_no_, serial_no_, 'COMPANY RENTAL ASSET');
      company_ := Site_API.Get_Company(Inventory_Transaction_Hist_API.Get_Contract(part_serial_history_rec_.inv_transsaction_id));
   $END

   RETURN company_; 
   
END Set_Company___;
