-----------------------------------------------------------------------------
--
--  Fragment:     ReservedLotBatch
--  Component:    PARTCA
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  181210  NISMLK  MFUXXW4-16996, Created.
-----------------------------------------------------------------------------

layer Core;

@Override
PROCEDURE CRUD_Create___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Reserved_Lot_Batch_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT VARCHAR2,
   action_ IN  VARCHAR2 )
IS
   reservation_type_    VARCHAR2(20);
   order_ref1_          VARCHAR2(12);
   order_ref2_          VARCHAR2(4);
   order_ref3_          VARCHAR2(30);
   revised_qty_         NUMBER;
   sum_qty_reserved_    NUMBER; 
   $IF (Component_Shpord_SYS.INSTALLED) $THEN
   shop_ord_rec_        Shop_Ord_API.Public_Rec;
   $END
   
   CURSOR get_order IS
      SELECT order_ref1, order_ref2, order_ref3
        FROM RESERVED_LOT_BATCH
       WHERE part_no = key_.part_no
         AND lot_batch_no = key_.lot_batch_no;   
BEGIN  
   IF (Client_SYS.Item_Exist('RESERVATION_TYPE_DB', attr_)) THEN
      reservation_type_ := Client_SYS.Get_Item_Value('RESERVATION_TYPE_DB', attr_);
   END IF; 
   super(etag_, key_, attr_, info_, action_);
   OPEN get_order;
   FETCH get_order INTO order_ref1_, order_ref2_, order_ref3_;
   CLOSE get_order;
   $IF (Component_Shpord_SYS.INSTALLED) $THEN
      IF (reservation_type_ = 'SHOP_ORD') THEN         
         sum_qty_reserved_ := Reserved_Lot_Batch_API.Get_Sum_Qty_Reserved_Ord(order_ref1_, order_ref2_, order_ref3_, NULL, 'SHOP_ORD');         
         Shop_Ord_API.Check_Reserved_Lot_Batch(order_ref1_, order_ref2_, order_ref3_, sum_qty_reserved_);
         shop_ord_rec_ := Shop_Ord_API.Get(order_ref1_, order_ref2_, order_ref3_);
         IF (sum_qty_reserved_ != 0) AND (shop_ord_rec_.revised_qty_due + shop_ord_rec_.operation_qty_deviation > sum_qty_reserved_) THEN
            Client_SYS.Add_Info(lu_name_, 'SO_RESERVED_QTY_LESS: Total reserved quantity for lots/batches associated with the shop order is less than the remaining quantity.');
         END IF;
      ELSIF (reservation_type_ = 'SHOP_REQ') THEN
         revised_qty_ := Shop_Order_Prop_API.Get_Plan_Order_Rec(order_ref1_);
         sum_qty_reserved_ := Reserved_Lot_Batch_API.Get_Sum_Qty_Reserved_Ord(order_ref1_, NULL, NULL, NULL, 'SHOP_REQ'); 
         Shop_Order_Prop_API.Check_Plan_Order_Rec(order_ref1_, sum_qty_reserved_);
         IF (sum_qty_reserved_ != 0) AND (revised_qty_ > sum_qty_reserved_) THEN
            Client_SYS.Add_Info(lu_name_, 'SOR_RESERVED_QTY_LESS: Total Reserved Quantity for lots/batches associated with the Shop Order Requisition is less than Revised Quantity Due.');
         END IF;
      END IF;
   $END
   info_ := info_ || Client_SYS.Get_All_Info;
END CRUD_Create___;

@Override
PROCEDURE CRUD_Update___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Reserved_Lot_Batch_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT VARCHAR2,
   action_ IN  VARCHAR2 )
IS
   modify_reserved_qty_  BOOLEAN := FALSE;
   reservation_type_     VARCHAR2(20);
   order_ref1_           VARCHAR2(12);
   order_ref2_           VARCHAR2(4);
   order_ref3_           VARCHAR2(30);
   revised_qty_          NUMBER;
   sum_qty_reserved_     NUMBER;
   $IF (Component_Shpord_SYS.INSTALLED) $THEN
   shop_ord_rec_        Shop_Ord_API.Public_Rec;
   $END
   
   CURSOR get_order IS
      SELECT order_ref1, order_ref2, order_ref3, reservation_type_db
        FROM RESERVED_LOT_BATCH
       WHERE part_no = key_.part_no
         AND lot_batch_no = key_.lot_batch_no;   
BEGIN
   IF (Client_SYS.Item_Exist('RESERVED_QTY', attr_)) THEN
      modify_reserved_qty_ := TRUE;
   END IF; 
   super(etag_, key_, attr_, info_, action_);
   OPEN get_order;
   FETCH get_order INTO order_ref1_, order_ref2_, order_ref3_, reservation_type_;
   CLOSE get_order;
   $IF (Component_Shpord_SYS.INSTALLED) $THEN
      IF modify_reserved_qty_ THEN
         IF (reservation_type_ = 'SHOP_ORD') THEN         
            sum_qty_reserved_ := Reserved_Lot_Batch_API.Get_Sum_Qty_Reserved_Ord(order_ref1_, order_ref2_, order_ref3_, NULL, 'SHOP_ORD');         
            Shop_Ord_API.Check_Reserved_Lot_Batch(order_ref1_, order_ref2_, order_ref3_, sum_qty_reserved_);
            shop_ord_rec_ := Shop_Ord_API.Get(order_ref1_, order_ref2_, order_ref3_);
            IF (sum_qty_reserved_ != 0) AND (shop_ord_rec_.revised_qty_due + shop_ord_rec_.operation_qty_deviation > sum_qty_reserved_) THEN
               Client_SYS.Add_Info(lu_name_, 'SO_RESERVED_QTY_LESS: Total reserved quantity for lots/batches associated with the shop order is less than the remaining quantity.');
            END IF;
         ELSIF (reservation_type_ = 'SHOP_REQ') THEN
            revised_qty_ := Shop_Order_Prop_API.Get_Plan_Order_Rec(order_ref1_);
            sum_qty_reserved_ := Reserved_Lot_Batch_API.Get_Sum_Qty_Reserved_Ord(order_ref1_, NULL, NULL, NULL, 'SHOP_REQ'); 
            Shop_Order_Prop_API.Check_Plan_Order_Rec(order_ref1_, sum_qty_reserved_);
            IF (sum_qty_reserved_ != 0) AND (revised_qty_ > sum_qty_reserved_) THEN
               Client_SYS.Add_Info(lu_name_, 'SOR_RESERVED_QTY_LESS: Total Reserved Quantity for lots/batches associated with the Shop Order Requisition is less than Revised Quantity Due.');
            END IF;
         END IF;
      END IF;
   $END
   info_ := info_ || Client_SYS.Get_All_Info;
END CRUD_Update___;

@Override
PROCEDURE CRUD_Delete___ (
   etag_   IN OUT VARCHAR2,
   key_    IN  Reserved_Lot_Batch_Key,
   info_   OUT VARCHAR2,
   action_ IN  VARCHAR2 )
IS
   reservation_type_     VARCHAR2(20);
   order_ref1_           VARCHAR2(12);
   order_ref2_           VARCHAR2(4);
   order_ref3_           VARCHAR2(30);
   revised_qty_          NUMBER;
   sum_qty_reserved_     NUMBER;
   $IF (Component_Shpord_SYS.INSTALLED) $THEN
   shop_ord_rec_        Shop_Ord_API.Public_Rec;
   $END
   
   CURSOR get_order IS
      SELECT order_ref1, order_ref2, order_ref3, reservation_type_db
        FROM RESERVED_LOT_BATCH
       WHERE part_no = key_.part_no
         AND lot_batch_no = key_.lot_batch_no; 
BEGIN
   OPEN get_order;
   FETCH get_order INTO order_ref1_, order_ref2_, order_ref3_, reservation_type_;
   CLOSE get_order;
   super(etag_, key_, info_, action_);
   $IF (Component_Shpord_SYS.INSTALLED) $THEN      
      IF (reservation_type_ = 'SHOP_ORD') THEN         
         sum_qty_reserved_ := Reserved_Lot_Batch_API.Get_Sum_Qty_Reserved_Ord(order_ref1_, order_ref2_, order_ref3_, NULL, 'SHOP_ORD');
         shop_ord_rec_ := Shop_Ord_API.Get(order_ref1_, order_ref2_, order_ref3_);
         IF (sum_qty_reserved_ != 0) AND (shop_ord_rec_.revised_qty_due + shop_ord_rec_.operation_qty_deviation > sum_qty_reserved_) THEN
            Client_SYS.Add_Info(lu_name_, 'SO_RESERVED_QTY_LESS: Total reserved quantity for lots/batches associated with the shop order is less than the remaining quantity.');
         END IF;
      ELSIF (reservation_type_ = 'SHOP_REQ') THEN
         revised_qty_ := Shop_Order_Prop_API.Get_Plan_Order_Rec(order_ref1_);
         sum_qty_reserved_ := Reserved_Lot_Batch_API.Get_Sum_Qty_Reserved_Ord(order_ref1_, NULL, NULL, NULL, 'SHOP_REQ');
         IF (sum_qty_reserved_ != 0) AND (revised_qty_ > sum_qty_reserved_) THEN
            Client_SYS.Add_Info(lu_name_, 'SOR_RESERVED_QTY_LESS: Total Reserved Quantity for lots/batches associated with the Shop Order Requisition is less than Revised Quantity Due.');
         END IF;
      END IF;      
   $END
   info_ := info_ || Client_SYS.Get_All_Info;
END CRUD_Delete___;