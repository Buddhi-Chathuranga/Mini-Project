fragment CompanyAttributeTranslationCommon;
component ENTERP;
layer Core;
description "This fragment includes common components for Company Attribute Translations";

--------------------------------- FRAGMENTS ---------------------------------
include fragment CopyToCompaniesAssistant;

----------------------------- CLIENT FRAGMENTS ------------------------------
command CopyInstallationTranslationCommand {
   label = "Copy Installation Translation";

   execute {
      inquire("All Current Translations for this Company (${KeyValue}), Module (${Module}) and Logical Unit (${Lu}), which have Installation Translation defined, will be replaced. Do you want to continue?") {
         when NO {
            exit;
         }
         when CANCEL {
            exit;
         }
      }
   }
}

command CopyToCompaniesCommand {
   label = "Copy To Companies";
   enabled = [true];
   mode = SelectedRecords;
   variable CurrentCompanyVar Text;
   bulkexecute {
      assistant CopyToCompaniesAssistant(CurrentCompanyVar, "CompanyKeyLuTranslation", "MANUAL", Selection, "Company_Key_Lu_Translation_API") {
         when OK {
            exit;

         }
      }
   }
}

command AutoCopyToCompaniesCommand for CompanyKeyLuTranslation {
   label = "Copy to Companies";
   mode = SelectedRecords;
   variable CurrentCompanyVar Text;
   variable SelectionVar;
   variable StateVar Text;
   bulkexecute {
      call IsActiveLuExist(CurrentCompanyVar, "CompanyKeyLuTranslation") into StateVar;
      if [StateVar = "TRUE"] {
         if[CreateCount > 0] {
            set SelectionVar = CreateList;
         }
         if[UpdateCount > 0] {
            set SelectionVar = UpdateList;
         }
         if[DeleteCount > 0] {
            set SelectionVar = DeleteList;
         }
         assistant CopyToCompaniesAssistant(CurrentCompanyVar, "CompanyKeyLuTranslation", "AUTOMATIC", SelectionVar, "Company_Key_Lu_Translation_API") {
            when OK {
               exit;
            }
         }
      }
   }
}

command CopyInstallationTranslationTextCommand for CompanyKeyLuTranslation {
   label = "Copy Installation Translation";
   enabled = [InstallationTranslation != null and(InstallationTranslation != CurrentTranslation)];
   mode = SelectedRecords;
   bulkexecute {
      bulkcall CopyInstallationText(false);
   }
}

list CompanyKeyLuTranslationList for CompanyKeyLuTranslation {
   label = "Translations";

   crudactions {
      after command AutoCopyToCompaniesCommand;
   }
   lov AttributeKeyRef with ReferenceCompanyKeyLuAttributeSelector {
      editable = [isNew];
   }
   lov LanguageCodeRef with ReferenceIsoLanguageSelector {
      search = LanguageCode, Description;
      description = LanguageCodeRef.Description;
      editable = [isNew];
   }
   field CurrentTranslation {
      size = Large;
   }
   field InstallationTranslation {
      size = Large;
   }
   field SystemDefined;

   commandgroup CopyCmdGroup {
      command CopyInstallationTranslationTextCommand;
      command CopyToCompaniesCommand;
   }
}

@Override
selector ReferenceModuleLuSelector for ModuleLu {
   orderby = Lu;
}

--------------------------- PROJECTION FRAGMENTS ----------------------------
@Override
entity CompanyKeyLu {
   crud = Read;

   reference CompanyRef(KeyValue) to CompanyPublic(Company) {
      label = "Company";
   }
   reference ModuleLuRef(Lu) to ModuleLu(Lu) {
      label = "Logical Unit";
   }

   array CompanyKeyLuTranslationArray(KeyName, KeyValue, Module, Lu) to CompanyKeyLuTranslation(KeyName, KeyValue, Module, Lu);

   action CopyInstallationText {
      ludependencies = CompanyKeyLuTranslation;
   }
}

@Override
entity CompanyKeyLuTranslation {
   attribute InstallationTranslation Text {
      editable = [false];
   }
   attribute SystemDefined Boolean("TRUE", "FALSE") {
      editable = [false];
   }
   attribute State Text {
      fetch = "Company_Basic_Data_Window_API.Is_Active_Lu_Exist(key_value, lu)";
   }
   attribute KeyName Text {
      default = "'CompanyKeyLu'";
   }
   attribute Lu Text {
      label = "Logical Unit";
   }

   reference AttributeKeyRef(KeyName, KeyValue, Module, Lu, AttributeKey) to CompanyKeyLuAttribute(KeyName, KeyValue, Module, Lu, AttributeKey) {
      label = "Translation Key";
      copy AttributeText to CurrentTranslation;
   }
   reference LanguageCodeRef(LanguageCode) to IsoLanguage(LanguageCode) {
      label = "Language";
   }
   reference CompanyRef(KeyValue) to CompanyPublic(Company) {
      label = "Company";
   }
   reference ModuleLuRef(Lu) to ModuleLu(Lu) {
      label = "Logical Unit";
   }
   reference ModuleRef(Module) to Module(Module) {
      label = "Module";
   }

   action CopyInstallationText {
      parameter CopyAll Boolean;

      ludependencies = CompanyKeyLuTranslation;
   }
}