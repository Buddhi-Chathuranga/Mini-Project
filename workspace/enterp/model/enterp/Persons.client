--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  181120  thjilk  Bug 145381, Added changes related to Lookup attributes.
--  190525  basblk  Bug 146766, Made changes to configure middle name
--  190708  basblk  Bug 148922, Removed all occurences of IsEmpConnected.
--  200722  Hecolk  FIXTEND-3404 (LCS Bug 154880), Modified PersonNameCommand
--  210720  Diwslk  FI21R2-2216, Added new field JobTitle to the list PersonsList, command PersonNameCommand.
-----------------------------------------------------------------------------
client Persons;
component ENTERP;
layer Core;
projection PersonsHandling;

include fragment PersonFullNameDialog;
include fragment PersonInfoFreeUserSelector;

warningsenabled = PersonInfo;
----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry PersonsNavEntry parent EnterpNavigator.PersonMenu at index 200 {
      label = "Persons";

      page List;
   }
}

-------------------------------- MAIN PAGES ---------------------------------
page List using PersonInfoSet {
   label = "Persons";

   initcontext PageInitContext;

   list PersonsList {
      details = "page/Person/Form?$filter=PersonId eq $[PersonId]";
   }
}


initcontext PageInitContext {
   parameter VisibleDataSubConstColumnVar Text;
   init command {
      execute {
         call FetchPersDataManagement() into VisibleDataSubConstColumnVar;
      }
   }
}


-------------------------------- ASSISTANTS ---------------------------------


--------------------------------- COMMANDS ----------------------------------
command PersonNameCommand for PersonInfo {
   label = "Edit Full Name";
   variable FirstNameVar Text;
   variable MiddleNameVar Text;
   variable LastNameVar Text;
   variable TitleVar Text;
   variable JobTitleVar Text;
   variable InitialsVar Text;
   execute {

      call FormattedFullName(Name) into NameStruct;
      dialog NameDialog(FirstName, MiddleName, LastName, Title, JobTitle, Initials, NameStruct.ExposeMiddleName) into(FirstNameVar, MiddleNameVar, LastNameVar, TitleVar, JobTitleVar, InitialsVar) {
         when OK {
            if [NameStruct.ExposeMiddleName = "FALSE" or MiddleNameVar = null] {
               set NameStr = "${FirstNameVar}${NameStruct.Separator}${LastNameVar}";
            }
            else {
               set NameStr = "${FirstNameVar}${NameStruct.Separator}${MiddleNameVar}${NameStruct.Separator}${LastNameVar}";
            }
            call UpdateFullName(PersonId, NameStr, FirstNameVar, MiddleNameVar, LastNameVar, TitleVar, JobTitleVar, InitialsVar);
            exit;
         }
      }
   }
}


command ManageDataProcessingPurposesCommand for PersonInfo {
   label = "Manage Data Processing Purposes";
   enabled = [initcontext.VisibleDataSubConstColumnVar = "TRUE"];

   variable DataSubjectDbVar Text;
   variable DataSubjectKeyRefVar Text;

   execute {
      set DataSubjectDbVar = "PERSON";
      call SubjectKeyRef(DataSubjectDbVar, PersonId, "NULL") into DataSubjectKeyRefVar;
      navigate "assistant/DataProcessingPurposeManagement/DataProcessingPurposeManagementAssistant?$action=InitPersonalConsents{KeyRefVar:$[DataSubjectKeyRefVar], DataSubjectIdVar:$[PersonId], DataSubjectNameVar:$[Name], DataSubjectVar:$[DataSubjectDbVar]}";
   }
}

command UpdatePersonNamesCommand {
   label = "Update Person Names";
   mode = Global;
   enabled = [component.PersonsList.SelectionCount = 0];

   variable ExecuteBatchVar Enumeration(FndYesNo);
   variable ExecuteStatusVar Text;
   execute {
      dialog ExecuteBatchDialog into(ExecuteBatchVar) {
         when OK {
            if [ExecuteBatchVar = "Yes"] {
               alert("Names will be updated in background.");
               set ExecuteStatusVar = "TRUE";
            }
            else {
               set ExecuteStatusVar = "FALSE";
            }
            call UpdatePersonNames(ExecuteStatusVar);
            exit;
         }
      }
   }
}
--------------------------------- SELECTORS ---------------------------------


---------------------------------- GROUPS -----------------------------------
group ExecuteBatchGroup for ExecuteBackground {
   label = "Execute in background";
   radiogroup ExecuteInBackground {
      showlabel = false;
      size = Small;
   }
}
----------------------------------- LISTS -----------------------------------
list PersonsList for PersonInfo {
   label = "Persons";

   field PersonId;
   field Name {
      size = Large;
      editable = [ETag = null];
      validate command {
         variable FirstNameVar Text;
         variable MiddleNameVar Text;
         variable LastNameVar Text;
         variable TitleVar Text;
         variable JobTitleVar Text;
         variable InitialsVar Text;
         execute {
            call FormattedFullName(Name) into NameStruct;
            if [NameStruct.FirstName != null and not(NameStruct.MiddleName != null or NameStruct.LastName != null)] {
               dialog NameDialog(NameStruct.FirstName, NameStruct.MiddleName, NameStruct.LastName, NameStruct.Title, NameStruct.JobTitle, NameStruct.Initials, NameStruct.ExposeMiddleName) into(FirstNameVar, MiddleNameVar, LastNameVar, TitleVar, JobTitleVar, InitialsVar) {
                  when OK {
                     if [Name != "${FirstNameVar} ${MiddleNameVar} ${LastNameVar}"] {
                        set Name = "${FirstNameVar} ${MiddleNameVar} ${LastNameVar}";
                     }
                     if [FirstName != FirstNameVar] {
                        set FirstName = FirstNameVar;
                     }
                     if [MiddleName != MiddleNameVar] {
                        set MiddleName = MiddleNameVar;
                     }
                     if [LastName != LastNameVar] {
                        set LastName = LastNameVar;
                     }
                     if [Title != TitleVar] {
                        set Title = TitleVar;
                     }
                     if [JobTitle != JobTitleVar] {
                        set Title = JobTitleVar;
                     }
                     if [Initials != InitialsVar] {
                        set Initials = InitialsVar;
                     }
                  }
               }
            }
            else {
               set FirstName = "${NameStruct.FirstName}";
               set MiddleName = "${NameStruct.MiddleName}";
               set LastName = "${NameStruct.LastName}";
            }

            if [NameStruct.ExposeMiddleName = "FALSE"] {
               set Name = "${FirstName} ${LastName}";
            }
         }
      }
   }
   field AlternativeName {
      size = Large;
   }
   field DefaultLanguage;
   field Country {
      format = uppercase;
   }
   field CreationDate;
   field ValidDataProcessingPurpose {
      size = Small;
      columnvisible = [initcontext.VisibleDataSubConstColumnVar = "TRUE"];
   }
   lov UserIdRef with ReferencePersonInfoFreeUserSelector {
      size = Small;
   }
   field ContactCustomers {
      size = Large;
   }
   field ContactSuppliers {
      size = Large;
   }

   command PersonNameCommand;
   command ManageDataProcessingPurposesCommand;
   command UpdatePersonNamesCommand;
}


----------------------------------- CARDS -----------------------------------


---------------------------------- DIALOGS ----------------------------------
dialog ExecuteBatchDialog for ExecuteBackground {
   label = "Update Person Names";
   output(ExecuteInBackground);

   markdowntext {
      text = "Name of Persons will be updated as per the 'EXPOSE_MIDDLE_NAME' parameter set in System Definitions.";
   }

   group ExecuteBatchGroup;

   command Ok;
   command Cancel;
}

---------------------------------- CHARTS -----------------------------------


--------------------------------- CALENDARS ---------------------------------


---------------------------------- SHEETS -----------------------------------


----------------------------- STATE INDICATORS ------------------------------


----------------------------------- TREES -----------------------------------


---------------------------------- PLUGINS ----------------------------------


------------------------------- IMAGE VIEWERS -------------------------------


-------------------------------- SINGLETONS ---------------------------------

