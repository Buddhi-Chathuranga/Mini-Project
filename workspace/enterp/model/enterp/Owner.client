--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  210303  Smallk  FISPRING20-8769, Merged LCS Bug 157213.
-----------------------------------------------------------------------------
client Owner;
component ENTERP;
layer Core;
projection OwnerHandling;

include fragment AssociationInfoSelector;
include fragment CompanyPublicSelector;
include fragment CommunicationMethodsList;
@DynamicComponentDependency VIM
include fragment VimOperatorInfoForm;

warningsenabled = OwnerInfo, CheckDefaultCommMethod, CommMethod, OwnerInfoAddress, OwnerInfoAddressType;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry OwnerNavEntry parent EnterpNavigator.OwnerMenu at index 100 {
      label = "Owner";

      page Form home OwnerInfo selector OwnerInfoSelector;
      entry AddressInfoNavEntry;
      entry CommunicationMethodNavEntry;
      entry MessageSetupNavEntry;
      @DynamicComponentDependency VIM
      entry OperatorInfoNavEntry;
   }
}

entry AddressInfoNavEntry {
   label = "Address";

   page AddressInfo selector OwnerInfoSelector;
}

entry CommunicationMethodNavEntry {
   label = "Communication Method";

   page CommunicationMethod selector OwnerInfoSelector;
}

entry MessageSetupNavEntry {
   label = "Message Setup";

   page MessageSetup selector OwnerInfoSelector;
}

@DynamicComponentDependency VIM
entry OperatorInfoNavEntry {
   label = "Operator Information";

   page OperatorInfoForm selector OwnerInfoSelector;
}


-------------------------------- MAIN PAGES ---------------------------------
page Form using OwnerInfoSet {
   label = "Owner";
   selector OwnerInfoSelector;
   arrange {
      group OwnerInfoGroup bind OwnerInfoSelector;
      group OwnerGeneralInfoGroup bind OwnerInfoSelector;
   }
   list OurIdAtOwnerList(OurIds) bind OwnerInfoSelector;
}


page AddressInfo using OwnerInfoSet {
   label = "Address";
   crudactions {
      new {
         enabled = [false];
      }
      edit {
         enabled = [false];
      }
      delete {
         enabled = [false];
      }
   }
   selector OwnerInfoSelector;
   group OwnerInfoGroup;
   selector OwnerInfoAddressSelector(OwnerInfoAddresses) bind OwnerInfoSelector;
   group OwnerInfoAddressGroup bind OwnerInfoAddressSelector;
   arrange {
      group AddressGroup bind OwnerInfoAddressSelector;
      list AddressTypeList(AddressTypes) bind OwnerInfoAddressSelector;
   }
   list CommMethodAddressList(AddressCommunicationMethods) bind OwnerInfoAddressSelector;
}


page CommunicationMethod using OwnerInfoSet {
   label = "Communication Method";
   crudactions {
      new {
         enabled = [false];
      }
      edit {
         enabled = [false];
      }
      delete {
         enabled = [false];
      }
   }

   selector OwnerInfoSelector;
   group OwnerInfoGroup;
   list CommMethodList(CommunicationMethods) bind OwnerInfoSelector;
}


page MessageSetup using OwnerInfoSet {
   label = "Message Setup";
   crudactions {
      new {
         enabled = [false];
      }
      edit {
         enabled = [false];
      }
      delete {
         enabled = [false];
      }
   }

   selector OwnerInfoSelector;
   group OwnerInfoGroup;
   list OwnerInfoMsgSetupList(MessageSetups) bind OwnerInfoSelector;
}


-------------------------------- ASSISTANTS ---------------------------------


--------------------------------- COMMANDS ----------------------------------
command AddDefaultAddressTypesCommand for OwnerInfoAddress {
   execute {
      if [CrudOperation = "create"] {
         call AddDefaultAddressTypes();
      }
   }
}


--------------------------------- SELECTORS ---------------------------------
@Override
selector OwnerInfoSelector for OwnerInfo {
   label = "${OwnerId} - ${Name} - ${AssociationNo}";

   static OwnerId;
   static Name;
   static AssociationNo;
}


@Override
selector ReferenceMessageClassSelector for MessageClass {
   static ClassId {
      label = "Class ID";
   }
   static Receive {
      visible = [false];
   }
   static Send {
      visible = [false];
   }
}


@Override
selector OwnerInfoAddressSelector for OwnerInfoAddress {
   label = "Address ID: ${AddressId}";
   crudactions {
      after command AddDefaultAddressTypesCommand;
   }
   static OwnerId {
      visible = [false];
   }
   static AddressId;
   static Country;
   static City;
   static ZipCode;
   static EanLocation {
      visible = [false];
   }
   static ValidFrom {
      visible = [false];
   }
   static ValidTo {
      visible = [false];
   }
   static Address1 {
      visible = [false];
   }
   static Address2 {
      visible = [false];
   }
   static Address3 {
      visible = [false];
   }
   static Address4 {
      visible = [false];
   }
   static Address5 {
      visible = [false];
   }
   static Address6 {
      visible = [false];
   }
   static State {
      visible = [false];
   }
   static County {
      visible = [false];
   }
   static PartyType {
      visible = [false];
   }
   static CountryDesc {
      visible = [false];
   }
}


---------------------------------- GROUPS -----------------------------------
group OwnerInfoGroup for OwnerInfo {
   label = "";

   field OwnerId;
   field Name;
   lov AssociationNoRef with ReferenceAssociationInfoSelector {
      freeinput = [true];
   }
}


group OwnerGeneralInfoGroup for OwnerInfo {
   label = "General Information";

   field DefaultLanguage {
      required = [true];
   }
   field Country {
      required = [true];
      format = uppercase;
   }
   field CreationDate;
}


group OwnerInfoAddressGroup for OwnerInfoAddress {
   label = "";

   field AddressId {
      visible = [isNew];
   }
   field EanLocation;
}


group AddressGroup for OwnerInfoAddress {
   label = "General Address Information";

   field Country {
      validate command {
         execute {
            if [Country != null] {
               call FetchCountryDescription(Country) into CountryDesc;
            }
            else {
               set CountryDesc = null;
            }
         }
      }
   }
   daterangefield {
      startdate ValidFrom;
      enddate ValidTo;
      label = "Validity Period";
   }
   addressfield {
      address1 Address1;
      address2 Address2;
      address3 Address3;
      address4 Address4;
      address5 Address5;
      address6 Address6;
      city City;
      country CountryDesc;
      county County;
      state State;
      zipcode ZipCode;
      countrycode Country;
      label = "Address";
   }
}


----------------------------------- LISTS -----------------------------------
list OurIdAtOwnerList for OwnerInfoOurId {
   label = "Our ID at Owner";

   lov CompanyRef with ReferenceCompanyPublicSelector;
   field OurId;
}


list OwnerInfoMsgSetupList for OwnerInfoMsgSetup {
   label = "";

   lov MessageClassRef with ReferenceMessageClassSelector;
   lov MediaCodeRef with ReferenceMessageMediaSelector;
   lov AddressRef with ReferenceMessageReceiverSelector;
   field MethodDefault {
      size = Small;
   }
}


@Override
list MessageMediaLovList for MessageMedia {
   static MediaCode;
   static Description;
}


@Override
list MessageClassLovList for MessageClass {
   static ClassId {
      label = "Class ID";
   }
}


@Override
list MessageReceiverLovList for MessageReceiver {
   static Receiver;
   static Description;
}


list AddressTypeList for OwnerInfoAddressType {
   label = "Address Types";

   field AddressTypeCode;
   field DefAddress;
}


----------------------------------- CARDS -----------------------------------


---------------------------------- DIALOGS ----------------------------------


---------------------------------- CHARTS -----------------------------------


--------------------------------- CALENDARS ---------------------------------


---------------------------------- SHEETS -----------------------------------


----------------------------- STATE INDICATORS ------------------------------


----------------------------------- TREES -----------------------------------


---------------------------------- PLUGINS ----------------------------------


------------------------------- IMAGE VIEWERS -------------------------------

