client TaxOffice;
component ENTERP;
layer Core;
projection TaxOfficeHandling;

include fragment DetailAddressDialog;
include fragment CommunicationMethodsList;
@DynamicComponentDependency TAXLED
include fragment TaxReportInfoForm;

warningsenabled = CheckDefaultCommMethod, CommMethod, TaxOfficeInfoAddress, TaxOfficeAddrType, CheckDetailAddress;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry TaxOfficeNavEntry parent EnterpNavigator.TaxMenu at index 200 {
      label = "Tax Office";

      page Form home TaxOfficeInfo selector TaxOfficeInfoSelector;
      entry AddressInfoNavEntry;
      entry CommunicationMethodNavEntry;
      @DynamicComponentDependency TAXLED
      entry TaxReportNavEntry;
   }
}


entry AddressInfoNavEntry {
   label = "Address";

   page AddressInfo selector TaxOfficeInfoSelector;
}


entry CommunicationMethodNavEntry {
   label = "Communication Method";

   page CommunicationMethod selector TaxOfficeInfoSelector;
}


@DynamicComponentDependency TAXLED
entry TaxReportNavEntry {
   label = "Tax Report";

   page TaxReport selector TaxOfficeInfoSelector;
}


-------------------------------- MAIN PAGES ---------------------------------
page Form using TaxOfficeInfoSet {
   label = "Tax Office";

   selector TaxOfficeInfoSelector;
   arrange {
      group TaxOfficeInfoGroup bind TaxOfficeInfoSelector;
      group TaxOfficeGeneralInfoGroup bind TaxOfficeInfoSelector;
   }

}


page AddressInfo using TaxOfficeInfoSet {
   label = "Address";
   crudactions {
      new {
         enabled = [false];
      }
      edit {
         enabled = [false];
      }
      delete {
         enabled = [false];
      }
   }
   selector TaxOfficeInfoSelector;
   group TaxOfficeInfoGroup;
   selector TaxOfficeInfoAddressSelector(TaxOfficeInfoAddresses) bind TaxOfficeInfoSelector;
   arrange {
      group AddressGroup bind TaxOfficeInfoAddressSelector;
      list AddressTypeList(AddressTypes) bind TaxOfficeInfoAddressSelector;
   }
   list CommMethodAddressList(AddressCommunicationMethods) bind TaxOfficeInfoAddressSelector;
}


page CommunicationMethod using TaxOfficeInfoSet {
   label = "Communication Method";
   crudactions {
      new {
         enabled = [false];
      }
      edit {
         enabled = [false];
      }
      delete {
         enabled = [false];
      }
   }

   selector TaxOfficeInfoSelector;
   group TaxOfficeInfoGroup;
   list CommMethodList(CommunicationMethods) bind TaxOfficeInfoSelector;
}


-------------------------------- ASSISTANTS ---------------------------------


--------------------------------- COMMANDS ----------------------------------
command ViewDetailedAddressCommand for TaxOfficeInfoAddress {
   label = "Edit Detailed Address";
   enabled = [DetailAddressExist];

   execute {
      dialog DetailedAddressDialog("TAX", TaxOfficeId, AddressId, Street, HouseNo, null, Community, District) {
         when OK {
            exit;
         }
         when CANCEL {
            exit;
         }
      }
   }
}


command AddDefaultAddressTypesCommand for TaxOfficeInfoAddress {
   execute {
      if [CrudOperation = "create"] {
         call AddDefaultAddressTypes();
      }
      if [CrudOperation = "create" or CrudOperation = "update"] {
         call CheckDetailAddress(TaxOfficeId, AddressId, "TAX");
      }
   }
}


--------------------------------- SELECTORS ---------------------------------
@Override
selector TaxOfficeInfoSelector for TaxOfficeInfo {
   label = "${TaxOfficeId} - ${Name}";

   static TaxOfficeId;
   static Name;
}


@Override
selector TaxOfficeInfoAddressSelector for TaxOfficeInfoAddress {
   label = "Address ID: ${AddressId}";
   crudactions {
      after command AddDefaultAddressTypesCommand;
   }
   static TaxOfficeId {
      visible = [false];
   }
   static AddressId;
   static Country;
   static City;
   static ZipCode;
   static ValidFrom {
      visible = [false];
   }
   static ValidTo {
      visible = [false];
   }
   static Address1 {
      visible = [false];
   }
   static Address2 {
      visible = [false];
   }
   static Address3 {
      visible = [false];
   }
   static Address4 {
      visible = [false];
   }
   static Address5 {
      visible = [false];
   }
   static Address6 {
      visible = [false];
   }
   static State {
      visible = [false];
   }
   static County {
      visible = [false];
   }
   static PartyType {
      visible = [false];
   }
   static CountryDesc {
      visible = [false];
   }
   static DetailAddressExist {
      visible = [false];
   }
   static Street {
      visible = [false];
   }
   static HouseNo {
      visible = [false];
   }
   static Community {
      visible = [false];
   }
   static District {
      visible = [false];
   }

   command ViewDetailedAddressCommand;
}


---------------------------------- GROUPS -----------------------------------
group TaxOfficeInfoGroup for TaxOfficeInfo {
   label = "";

   field TaxOfficeId;
   field Name;
}


group TaxOfficeGeneralInfoGroup for TaxOfficeInfo {
   label = "General Information";

   field DefaultLanguage;
   field Country;
   field CreationDate {
      editable = [false];
   }
}


group AddressGroup for TaxOfficeInfoAddress {
   label = "General Address Information";

   field AddressId {
      visible = [isNew];
   }
   field Country {
      validate command {
         execute {
            if [Country != null] {
               call FetchCountryDescription(Country) into CountryDesc;
            }
            else {
               set CountryDesc = null;
            }
         }
      }
   }
   daterangefield {
      startdate ValidFrom;
      enddate ValidTo;
      label = "Validity Period";
   }
   addressfield {
      address1 Address1;
      address2 Address2;
      address3 Address3;
      address4 Address4;
      address5 Address5;
      address6 Address6;
      city City;
      country CountryDesc;
      county County;
      state State;
      zipcode ZipCode;
      countrycode Country;
      label = "Address";
   }
}


----------------------------------- LISTS -----------------------------------
list AddressTypeList for TaxOfficeAddrType {
   label = "Address Types";

   field TaxOfficeAddrTypeCode;
   field DefAddress;
}


----------------------------------- CARDS -----------------------------------


---------------------------------- DIALOGS ----------------------------------


---------------------------------- CHARTS -----------------------------------


--------------------------------- CALENDARS ---------------------------------


---------------------------------- SHEETS -----------------------------------


----------------------------- STATE INDICATORS ------------------------------


----------------------------------- TREES -----------------------------------


---------------------------------- PLUGINS ----------------------------------


------------------------------- IMAGE VIEWERS -------------------------------

