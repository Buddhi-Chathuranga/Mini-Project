fragment PersonInfoAllSelector;
component ENTERP;
layer Core;
description "List of values fragment defining view person_info_all";

----------------------------- CLIENT FRAGMENTS ------------------------------

@Overtake Core
selector ReferencePersonInfoAllSelector for PersonInfoAll {
   static PersonId;
   static Name;
}

card PersonInfoAllCard for PersonInfoAll {
   label = "";
   fieldranking PersonId;
   field PersonId;
   field Name;
}
---------------------- MANUALLY ADDED CLIENT FRAGMENTS ----------------------

--------------------------- PROJECTION FRAGMENTS ----------------------------

query PersonInfoAll {
   from = "person_info_all";
   keys = PersonId;
   ludependencies = PersonInfo;
   lu = PersonInfo;
   attribute PersonId Text {
      label = "Person ID";
      format = uppercase;
      lovcolumn = [true];
   }
   attribute Name Text {
      lovcolumn = [true];
   }
   attribute FirstName Text {
      lovcolumn = [false];
   }
   attribute MiddleName Text {
      lovcolumn = [false];
   }
   attribute LastName Text {
      lovcolumn = [false];
   }
   attribute AlternativeName Text {
      lovcolumn = [true];
   }
   attribute Prefix Text {
      lovcolumn = [false];
   }
   attribute BirthName Text {
      lovcolumn = [false];
   }
   attribute Alias Text {
      lovcolumn = [false];
   }
   attribute Initials Text {
      lovcolumn = [true];
   }
   attribute Title Text {
      lovcolumn = [true];
   }
   attribute CreationDate Date {
      lovcolumn = [false];
   }
   attribute Party Text {
      lovcolumn = [false];
   }
   attribute PictureId Number {
      lovcolumn = [false];
   }
   attribute Protected Boolean("TRUE", "FALSE") {
      lovcolumn = [false];
   }
   attribute DefaultDomain Boolean("TRUE", "FALSE") {
      lovcolumn = [false];
   }
   attribute Country Lookup(IsoCountry) {
      lovcolumn = [false];
      fetch = "country_db";
   }
   attribute DefaultLanguage Lookup(IsoLanguage) {
      lovcolumn = [false];
      fetch = "default_language_db";
   }
   attribute PartyType Enumeration(PartyType) {
      lovcolumn = [false];
      fetch = "party_type_db";
   }
   attribute UserId Text {
      label = "User ID";
      format = uppercase;
      lovcolumn = [true];
   }
   attribute PictureThumbnailId Number {
      lovcolumn = [false];
   }
   attribute Inactive Text {
      label = "Inactive for Document Distribution";
      format = uppercase;
      lovcolumn = [true];
   }
   attribute ContactCustomers Text {
      lovcolumn = [true];
   }
   attribute ContactSuppliers Text {
      lovcolumn = [true];
   }
   attribute CustomerContact Enumeration(FndBoolean) {
      lovcolumn = [true];
      fetch = "customer_contact_db";
   }
   attribute BlockedForUse Enumeration(FndBoolean) {
      label = "Blocked for Use as a Customer Contact";
      lovcolumn = [true];
      fetch = "blocked_for_use_db";
   }
   attribute SupplierContact Enumeration(FndBoolean) {
      lovcolumn = [true];
      fetch = "supplier_contact_db";
   }
   attribute BlockedForUseSupplier Enumeration(FndBoolean) {
      label = "Blocked for Use as a Supplier Contact";
      lovcolumn = [true];
      fetch = "blocked_for_use_supplier_db";
   }
   attribute Objstate Enumeration(PersonInfoState) {
      label = "Validity";
      lovcolumn = [true];
   }
   // Is temporary due to being referenced from other locations.
   // Will be removed once references to State have been replaced and reference Objstate!
   attribute State Text {
      lovcolumn = [false];
   }
}

-------------------- MANUALLY ADDED PROJECTION FRAGMENTS --------------------
