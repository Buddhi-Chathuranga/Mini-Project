projection CompanySiteHandling;
component ENTERP;
layer Core;
description "Manage all the sites to be used in the system";
category Users;

@DynamicComponentDependency MPCCOM
include fragment SiteHandling;
@DynamicComponentDependency MSCOM
include fragment MpccomSitesHandling;
@DynamicComponentDependency MFGSTD
include fragment ManufacturingSiteHandling;
@DynamicComponentDependency DISCOM
include fragment DiscomSiteHandling;
@DynamicComponentDependency INVENT
include fragment InventorySiteHandling;
@DynamicComponentDependency RENTAL
include fragment RentalSiteHandling;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset CompanySiteSet for CompanySite;


------------------------------ ENTITY DETAILS -------------------------------
@Override
entity CompanySite {
   reference CompanyRef(Company) to Company(Company) {
      label = "Company";
   }
   @DynamicComponentDependency MPCCOM
   array Sites(Contract, Company) to Site(Contract, Company);
   @DynamicComponentDependency MFGSTD
   array SiteMfgstdInfoArray(Contract) to SiteMfgstdInfo(Contract);
   @DynamicComponentDependency SHPORD
   array ShopOrdReplicationSetups(Contract) to ShopOrdReplicationSetup(Contract);
   @DynamicComponentDependency DISCOM
   array SiteDiscomInfoArray(Contract) to SiteDiscomInfo(Contract);
   @DynamicComponentDependency INVENT
   array SiteInventInfoArray(Contract) to SiteInventInfo(Contract);
   @DynamicComponentDependency RENTAL
   array SiteRentalInfoArray(Contract) to SiteRentalInfo(Contract);
   @DynamicComponentDependency MSCOM
   array SiteMaintenanceInfoArray(Contract) to SiteMscomInfo(Contract);
   @DynamicComponentDependency INVPLA
   array SiteIprInfoArray(Contract) to SiteIprInfo(Contract);
}

------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------
function FetchUserCompanies List<Entity(Company)> {
   where = "EXISTS (SELECT 1 FROM user_finance_auth_pub WHERE company.company = company)";
}

function FetchCompanyCountryDescription Text {
   parameter Company Text;
}
-------------------------------- STRUCTURES ---------------------------------

--------------------------------- VIRTUALS ----------------------------------

--------------------------------- SUMMARIES ---------------------------------



