fragment UpdateCompanyTranslationAssistant;
component ENTERP;
layer Core;
description "Revise company's translations (or insert new ones) after updated basic data related to the source company, source template, or any company template";

include fragment CreateCompanyTemValidSelector;

----------------------------- CLIENT FRAGMENTS ------------------------------


-------------------------------- ASSISTANTS ---------------------------------
assistant UpdateCompanyTranslationAssistant using UpdateCompanyTranslationVirtualSet {
   label = "Update Company Translation";
   savemode = OnLostFocus;
   input(CompanyParam);
   init command {
      variable InitValuesVar Structure(UpdateCompanyTranslationInitStructure);
      execute {
         set Company = CompanyParam;
         call InitUpdateCompanyTranslation(Company) into InitValuesVar;
         set Name = InitValuesVar.Name;
         set SourceCompany = InitValuesVar.SourceCompany;
         set SourceTemplateId = InitValuesVar.SourceTemplateId;
         set CurrencyCode = InitValuesVar.CurrencyCode;
         set ValidFrom = InitValuesVar.ValidFrom;
         set ExistingLanguage = InitValuesVar.ExistingLanguage;
      }
   }
   steps {
      step {
         group UpdateCompanyTranslationInformationGroup;
         markdowntext {
            text = "Select language(s) for which source translations will update/be added to current company translations. If no source exists, choose template to get available languages.";
         }
         group UpdateCompanyTranslationParametersGroup;
         group UpdateCompanyTranslationItemPickerGroup;
      }
      final step {
      }
      cancelled step {
      }
   }
   finish command {
      enabled = [TemplateLanguagePicker != null];

      variable CountedVar Number;
      execute {
         call FinalizeTranslationVirtual() into CountedVar {
            when FAIL {
               error("${error.Message}");
               exit;
            }
            when SUCCESS {
               info("${CountedVar} language(s) were updated/added during the Update Company Translation.");
               exit OK;
            }
         }
      }
   }
   cancel command {
      execute {
         call CleanupTranslationVirtual(true, true);
         exit CANCEL;
      }
   }
   restart command {
      visible = [false];
   }
}


--------------------------------- COMMANDS ----------------------------------


--------------------------------- SELECTORS ---------------------------------
@Override
selector ReferenceCreateCompanyTemValidSelector for CreateCompanyTemValid {
   static TemplateId {
      showlabel = false;
   }
   static Description {
      showlabel = false;
   }
}


---------------------------------- GROUPS -----------------------------------
group UpdateCompanyTranslationInformationGroup for UpdateCompanyTranslationVirtual {
   label = "Company Infomation";

   field Company {
      size = Small;
   }
   field Name;
   field CurrencyCode {
      size = Small;
   }
   field ValidFrom {
      size = Small;
   }
   field SourceCompany {
      size = Small;
   }
   field SourceTemplateId {
      size = Small;
   }
   field ExistingLanguage {
      multiline = true;
   }
}

group UpdateCompanyTranslationParametersGroup for UpdateCompanyTranslationVirtual {
   label = "Update Company Translation Parameters";

   lov TemplateIdRef with ReferenceCreateCompanyTemValidSelector {
      size = Small;
      validate command {
         execute {
            call PopulateTranslationVirtual(TemplateId, "TemplKeyLu");
         }
      }
   }
   field TemplateName {
      editable = [false];
   }
}

group UpdateCompanyTranslationItemPickerGroup for UpdateCompanyTranslationVirtual {
   label = "Language Selection";
// TODO: still unclear which to use, waiting bug correction
   itempicker TemplateLanguagePicker using Reference_UpdateCompanyTranslationLanguagesVirtual {
      label = "Available Languages in Source";
      displayvalue = Description;
      filter = [ParentObjkey = TempObjkey];
   }
//   itempicker TemplateLanguagePicker using UpdateCompanyTranslationLanguagesVirtualQuerySet {
//      label = "Available Languages in Source";
//      displayvalue = Description;
//      filter = [ParentObjkey = TempObjkey];
//   }
}


----------------------------------- LISTS -----------------------------------

----------------------------------- CARDS -----------------------------------

---------------------------------- DIALOGS ----------------------------------

---------------------------------- CHARTS -----------------------------------

--------------------------------- CALENDARS ---------------------------------

---------------------------------- SHEETS -----------------------------------

----------------------------- STATE INDICATORS ------------------------------

----------------------------------- TREES -----------------------------------

---------------------------------- PLUGINS ----------------------------------

------------------------------- IMAGE VIEWERS -------------------------------




--------------------------- PROJECTION FRAGMENTS ----------------------------


------------------------------ ENTITY DETAILS -------------------------------
entityset UpdateCompanyTranslationVirtualSet for UpdateCompanyTranslationVirtual;

entityset CreateCompanyTemValidSet for CreateCompanyTemValid;

//entityset UpdateCompanyTranslationLanguagesVirtualQuerySet for UpdateCompanyTranslationLanguagesVirtualQuery;


---------------------------------- QUERIES ----------------------------------
--TODO: Should we use a query or not?
//query UpdateCompanyTranslationLanguagesVirtualQuery {
//   from = "AAC_UPDATE_COMPANY_TRANSLATION_LANGUAGES_VIRTUAL_VRT";
//   attribute ParentObjkey Text;
//   attribute KeyName Text;
//   attribute KeyValue Text;
//   attribute LanguageCode Text;
//   attribute Description Text {
//      fetch = "Iso_Language_API.Decode(language_code)";
//   }
//   ludependencies = UpdateCompanyTranslationVirtual;
//}

---------------------------------- ACTIONS ----------------------------------


--------------------------------- FUNCTIONS ---------------------------------
function InitUpdateCompanyTranslation Structure(UpdateCompanyTranslationInitStructure) {
   parameter Company Text;
}

-------------------------------- STRUCTURES ---------------------------------
structure UpdateCompanyTranslationInitStructure {
   attribute Name Text;
   attribute SourceCompany Text;
   attribute SourceTemplateId Text;
   attribute CurrencyCode Text;
   attribute ValidFrom Date;
   attribute ExistingLanguage Text;
}


--------------------------------- VIRTUALS ----------------------------------
virtual UpdateCompanyTranslationVirtual {
   attribute KeyName Text;
   attribute Company Text {
      editable = [false];
   }
   attribute Name Text {
      editable = [false];
   }
   attribute CurrencyCode Text {
      editable = [false];
   }
   attribute ValidFrom Date {
      editable = [false];
   }
   attribute SourceCompany Text {
      editable = [false];
   }
   attribute SourceTemplateId Text {
      editable = [false];
   }
   attribute ExistingLanguage Text {
      editable = [false];
   }
   attribute TemplateId Text {
      label = "Source Template ID";
      format = uppercase;
   }
   attribute TemplateName Text {
      label = "Description";
   }
   attribute TemplateLanguagePicker Text;
   attribute TempObjkey Text;

   reference TemplateIdRef(TemplateId) to CreateCompanyTemValid(TemplateId) {
      label = "Source Template ID";
   }

   array UpdateCompanyTranslationLanguagesArray(KeyName, TemplateId) to UpdateCompanyTranslationLanguagesVirtual(KeyName, KeyValue);

   action PopulateTranslationVirtual {
      parameter KeyValue Text;
      parameter KeyName Text;

   }

   action CleanupTranslationVirtual {
      parameter CleanupMaster Boolean;
      parameter CleanupDetail Boolean;
   }

   action FinalizeTranslationVirtual Number {
   }
}


virtual UpdateCompanyTranslationLanguagesVirtual {
   ludependencies = UpdateCompanyTranslationVirtual;
   attribute KeyName Text;
   attribute KeyValue Text;
   attribute LanguageCode Text;
   attribute Description Text;
}


--------------------------------- SUMMARIES ---------------------------------


-------------------------------- SINGLETONS ---------------------------------
