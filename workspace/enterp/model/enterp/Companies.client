client Companies;
component ENTERP;
layer Core;
projection CompaniesHandling;

include fragment AssociationInfoSelector;

warningsenabled = Company;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry CompaniesNavEntry parent EnterpNavigator.CompanyMenu at index 300 {
      label = "Companies";
      page List;
   }
}


-------------------------------- MAIN PAGES ---------------------------------
page List using CompanySet {
   label = "Companies";
   list CompanyList {
      details = "page/Company/Form?$filter=Company eq $[Company]";
   }
}


-------------------------------- ASSISTANTS ---------------------------------


--------------------------------- COMMANDS ----------------------------------
command UserPrivRemoveCompanyCommand {
   label = "Users Privileged to Remove Company";
   enabled = [true];
   mode = SelectedRecords;
   bulkexecute {
      bulknavigate "page/UserPrivRemoveCompany/Form?$filter=Company eq $[Company]";
   }
}

command RemoveCompanyCommand for Company {
   label = "Remove Company";
   enabled = [component.CompanyList.SelectionCount = 1 and RemoveAllowed = "TRUE"];
   mode = SelectedRecords;
   execute {
      confirm("This action will delete all records in database related to the company. Do you really need to delete all these data?") {
         when OK {
            confirm("By removing the company you may loose all valuable information related to the company. Please confirm to delete.") {
               when OK {
                  call DeleteCompany();
               }
            }
         }
      }
   }
}

command CompanyLogCommand {
   label = "Company Log";
   enabled = [true];
   execute {
      navigate "page/CreateCompanyComponentLog/List?$filter=Company eq $[Company]";
   }
}

command RemoveCompanyLogCommand for Company {
   label = "Remove Company Log";
   enabled = [true];
   execute {
      confirm("By removing the company log you will delete all the information logged when the company were created. Please confirm to delete.") {
         when OK {
            call DeleteCompanyLog();
         }
      }
   }
}


--------------------------------- SELECTORS ---------------------------------


---------------------------------- GROUPS -----------------------------------


----------------------------------- LISTS -----------------------------------
list CompanyList for Company {
   field Company;
   field Name {
      size = Large;
   }
   lov AssociationNoRef with ReferenceAssociationInfoSelector {
      freeinput = [true];
   }
   field DefaultLanguage;
   field Country {
      validate command {
         execute {
            if [CorporateForm != null] {
               warning("Changing the Country Code will remove the current Form of Business, as it is country specific. Use the Company page to enter a new Form of Business which is valid for the new Country Code.");
               set CorporateForm = null;
            }
            if [BusinessClassification != null] {
               warning("Changing the Country Code will remove the current Classification of Business, as it is country specific. Use the Company page to enter a new Classification of Business which is valid for the new Country Code.");
               set BusinessClassification = null;
            }
         }
      }
   }
   field Logotype {
      size = Large;
   }
   field CreationDate {
      editable = [false];
   }
   field FromCompany {
      size = Small;
      editable = [false];
   }
   field FromTemplateId {
      size = Small;
      editable = [false];
   }
   field TemplateCompany {
      editable = [false];
   }
   field MasterCompany {
      editable = [false];
   }
   field CreatedBy {
      contactwidget {
         enabled = [true];
         source = Person;
         key = PersonId;
      }
      format = uppercase;
   }
   field LocalizationCountry {
      size = Large;
   }
   field RemoveAllowed {
      columnexclude = [true];
   }

   command RemoveCompanyCommand;
   commandgroup DetailsGroupCmdGroup {
      command CompanyLogCommand;
   }

   commandgroup DetailsGroup2CmdGroup {
      command RemoveCompanyLogCommand;
      command UserPrivRemoveCompanyCommand;

   }
}


----------------------------------- CARDS -----------------------------------


---------------------------------- DIALOGS ----------------------------------


---------------------------------- CHARTS -----------------------------------


--------------------------------- CALENDARS ---------------------------------


---------------------------------- SHEETS -----------------------------------


----------------------------- STATE INDICATORS ------------------------------


----------------------------------- TREES -----------------------------------


---------------------------------- PLUGINS ----------------------------------


------------------------------- IMAGE VIEWERS -------------------------------


