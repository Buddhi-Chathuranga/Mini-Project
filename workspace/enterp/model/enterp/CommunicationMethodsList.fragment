fragment CommunicationMethodsList;
component ENTERP;
layer Core;
description "This fragment contains code to handle common list for Communication Method in Party Types";

include fragment PartyTypeAddressSelector;

----------------------------- CLIENT FRAGMENTS ------------------------------
list CommMethodList for CommMethod {
   label = "";
   
   field CommId {
      size = Small;
   }
   field Name;
   field Description;
   field MethodId;
   field Value;
   field MethodDefault {
      size = Small;
   }
   lov AddressIdRef with ReferencePartyTypeAddressSelector {
      columnexclude = [parent.PartyType = "Person"];
   }
   field AddressDefault {
      size = Small;
   }
   daterangefield {
      startdate ValidFrom;
      enddate ValidTo;
      label = "Validity Period";
   }
}

-- This list to be used in the Address tab
list CommMethodAddressList for CommMethod {
   label = "Communication Method";

   field CommId {
      size = Small;
   }
   field Name;
   field Description;
   field MethodId;
   field Value;
   field MethodDefault {
      size = Small;
   }
   field AddressDefault {
      size = Small;
   }
   daterangefield {
      startdate ValidFrom;
      enddate ValidTo;
      label = "Validity Period";
   }
}


--------------------------- PROJECTION FRAGMENTS ----------------------------
@Override
entity CommMethod {
   validate action CheckDefaultCommMethod;
   supportwarnings = [true];

   attribute CommId Number {
      label = "Comm ID";
      editable = [false];
   }
   attribute PartyTypeDbVal Text {
      fetch = "party_type_db";
   }
   attribute MethodId Enumeration(CommMethodCode) {
      label = "Communication Method";
   }
   attribute MethodDefault Boolean("TRUE", "FALSE") {
      label = "Default per Method";
      required = [true];
   }
   attribute AddressDefault Boolean("TRUE", "FALSE") {
      label = "Default per Method and Address";
      required = [true];
   }

   reference AddressIdRef(PartyTypeDbVal, Identity, AddressId) to PartyTypeAddress(PartyType, Identity, AddressId) {
      label = "Address ID";
   }
}


action CheckDefaultCommMethod {
   initialcheck none;
   supportwarnings = [true];
   parameter Init Boolean;
}

--@Overtake this enumeration to add PartyType values for 'CUSTOMS' and 'TAX OFFICE'
enumeration PartyType {
   enumerationtype = Standard;
   exec = "Party_Type_API";
   value = "COMPANY" {
      identifier = "Company";
      label = "Company";
   }
   value = "CUSTOMER" {
      identifier = "Customer";
      label = "Customer";
   }
   value = "SUPPLIER" {
      identifier = "Supplier";
      label = "Supplier";
   }
   value = "PERSON" {
      identifier = "Person";
      label = "Person";
   }
   value = "MANUFACTURER" {
      identifier = "Manufacturer";
      label = "Manufacturer";
   }
   value = "OWNER" {
      identifier = "Owner";
      label = "Owner";
   }
   value = "FORWARDER" {
      identifier = "ForwardingAgent";
      label = "Forwarding Agent";
   }
   value = "EMPLOYEE" {
      identifier = "Employee";
      label = "Employee";
   }
   value = "CUSTOMS" {
      identifier = "Customs";
      label = "Customs";
   }
   value = "TAX" {
      identifier = "TaxOffice";
      label = "TaxOffice";
   }
}

