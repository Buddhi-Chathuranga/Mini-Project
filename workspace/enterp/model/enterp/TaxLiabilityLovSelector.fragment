fragment TaxLiabilityLovSelector;
component ENTERP;
layer Core;
description "List of values fragment defining view tax_liability_lov";

----------------------------- CLIENT FRAGMENTS ------------------------------

@Overtake Core
selector ReferenceTaxLiabilityLovSelector for TaxLiabilityLov {
   static TaxLiability;
   static Description;
}

card TaxLiabilityLovCard for TaxLiabilityLov {
   label = "";
   fieldranking TaxLiability;
   field TaxLiability;
   field Description;
}
---------------------- MANUALLY ADDED CLIENT FRAGMENTS ----------------------

--------------------------- PROJECTION FRAGMENTS ----------------------------

query TaxLiabilityLov {
   from = "tax_liability_lov";
   lu = TaxLiability;
   keys = TaxLiability;
   ludependencies = TaxLiability;
   attribute TaxLiability Text {
      lovcolumn = [true];
   }
   attribute Description Text {
      lovcolumn = [true];
   }
   attribute CountryCode Text {
      format = uppercase;
      lovcolumn = [false];
   }
   attribute Country Text {
      lovcolumn = [true];
   }
   attribute TaxLiabilityType Enumeration(TaxLiabilityType) {
      lovcolumn = [true];
      fetch = "tax_liability_type_db";
   }
}

-------------------- MANUALLY ADDED PROJECTION FRAGMENTS --------------------

function FetchTaxLiabilityForCountry List < Entity(TaxLiabilityLov) > {
   parameter CountryCode Text;

   where = "country_code = :CountryCode OR country_code = '*'";
}

function FetchTaxLiabilityForCountryExcludeExempt List < Entity(TaxLiabilityLov) > {
   parameter CountryCode Lookup(IsoCountry);

   where = "country_code = :CountryCode OR country_code = '*' AND tax_liability_type_db != 'EXM'";
}

