fragment FinNotesDialog;
component ENTERP;
layer Core;
description "Fin Notes Dialog";

----------------------------- CLIENT FRAGMENTS ------------------------------

assistant NotesAssistant using NotesInfoVirtuals {
   label = "${Title}";

   input(PackageName, CallingProjectionName, KeyRef, EntityName, Title);
   output(NoteId);

   init command {
      execute {
      }
   }
   steps {
      step {
         list FinNotesList(FinNotesArray);
      }
      final step {
      }
      cancelled step {
      }
   }
   finish command {
      label = "Close";

      execute {
         exit OK;
      }
   }
   cancel command {
      visible = [false];
      execute {
      }
   }
   restart command {
      visible = [false];
   }
}


list FinNotesList for FinNotesVirtual {
   label = "";
   orderby = Timestamp;
   field Timestamp {
      format = longtime;
   }
   field Text {
      size = Large;
      multiline = true;
   }
   field UserId {
      size = Small;
      format = uppercase;
      contactwidget {
         enabled = [true];
         source = User;
      }
   }
}

--------------------------- PROJECTION FRAGMENTS ----------------------------
entityset NotesInfoVirtuals for NotesInfoVirtual;


structure NotesInfoStructure {
   attribute UserId Text;
   attribute NoteId Number;
   attribute PackageName Text;
   attribute CallingProjectionName Text;
   attribute IsNewNote Text;
   attribute KeyAttr Text;
   attribute Title Text;
}

virtual NotesInfoVirtual {
   ludependencies = FinNotesVirtual;
   attribute NoteId Number;
   attribute PackageName Text;
   attribute KeyRef Text;
   attribute EntityName Text;
   attribute CallingProjectionName Text;
   attribute IsNewNote Text;
   attribute Title Text;
   attribute NoteExists Text;
   attribute ModifiedKeyRef Text;

   array  FinNotesArray(Objkey) to FinNotesVirtual(ParentObjkey);
}


virtual FinNotesVirtual {
   keys = Objkey;

   ludependencies = NotesInfoVirtual;
   attribute NoteId Number;
   attribute RowNo Number;
   attribute UserId Text {
      label = "User ID";
      editable = [false];
   }
   attribute Timestamp Timestamp {
      label = "Time Stamp";
      editable = [false];
   }
   attribute Text Text {
      label = "Notes";
      maxlength = 2000;
      required = [true];
   }
   attribute NoteSource Text;
   // cleanup attribute is used for when performing the removal of the temporary data
   attribute Cleanup Text;
}
