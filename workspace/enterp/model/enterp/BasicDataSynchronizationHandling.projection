projection BasicDataSynchronizationHandling;
component ENTERP;
layer Core;
description "Define a relation between the source and target company/companies";
category Users;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset SourceCompanySet for SourceCompany;


------------------------------ ENTITY DETAILS -------------------------------
@Override
entity SourceCompany {
   crud = Create, Delete, StateChange;
   from = "source_company2";
   keys = SourceCompany;

   @DynamicComponentDependency ACCRUL
   reference SourceCompanyRef(SourceCompany) to CompanyFinance(Company) {
      label = "Company";
   }

   array TargetCompanyDetails(SourceCompany) to TargetCompany(SourceCompany);
}

@Override
entity TargetCompany {
   crud = Create, Delete;
   from = "target_company_union";
   keys = SourceCompany, TargetCompany;

   exclude attributes = TargetCompanyName;

   attribute SourceCompany Text {
      label = "Master Company";
   }
   attribute Include Boolean("TRUE", "FALSE") {
      label = "Include in Copy";
   }

   reference TargetCompanyRef(TargetCompany) to Company(Company) {
      label = "Company";
   }

   array CompanyBasicDataWindowDetails(SourceCompany, TargetCompany) to CompanyBasicDataWindow(SourceCompany, TargetCompany);

   action AddAllPages Number {
      ludependencies = CompanyBasicDataWindow;
   }
}

@Override
entity CompanyBasicDataWindow {
   attribute LogicalUnitName Text {
      label = "LU Name";
      required = [true];
   }
   attribute CopyFromCompany Boolean("TRUE", "FALSE") {
      label = "Only Source Company";
   }
   attribute UpdateMethodType Enumeration(SyncUpdateMethodType) {
      label = "Update Existing";
   }

   reference WindowRef(LogicalUnitName) to BasicDataWindow(LogicalUnitName) {
      label = "Logical Unit Name";
   }
}


------------------------------- ENUMERATIONS --------------------------------


---------------------------------- QUERIES ----------------------------------


---------------------------------- ACTIONS ----------------------------------


--------------------------------- FUNCTIONS ---------------------------------
function FetchUserCompanies List<Entity(Company)> {
   where = "EXISTS (SELECT 1 FROM user_finance_auth_pub WHERE company.company = company) AND NOT EXISTS (SELECT 1 FROM source_company WHERE company.company = source_company)";
}


-------------------------------- STRUCTURES ---------------------------------


--------------------------------- VIRTUALS ----------------------------------


--------------------------------- SUMMARIES ---------------------------------


-------------------------------- SINGLETONS ---------------------------------


