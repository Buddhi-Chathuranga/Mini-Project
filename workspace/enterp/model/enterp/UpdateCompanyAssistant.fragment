fragment UpdateCompanyAssistant;
component ENTERP;
layer Core;
description "Update an existing company with new basic data, by using an existing company or a pre-defined template.";

----------------------------- CLIENT FRAGMENTS ------------------------------

assistant UpdateCompanyAssistant using UpdateCompanyVirtualSet {
   label = "Update Company";
   input(CompanyParam);
   init command {
      variable InitValuesVar Structure(UpdateCompanyInitStructure);
      variable OldSourceTemplate  Text;
      variable TempSourceTemplate  Text;
      variable TempTargetTemplate  Text;
      variable DiffTemplate  Text;
      variable StepMsg Text;

      execute {
         set Company = CompanyParam;
         call InitCommand(Company) into InitValuesVar;
         set Name = InitValuesVar.Name;
         set SourceCompany = InitValuesVar.SourceCompany;
         set SourceTemplateId = InitValuesVar.SourceTemplateId;
         set CurrencyCode = InitValuesVar.CurrencyCode;
         set ValidFrom = InitValuesVar.ValidFrom;
         set SourceCompanyDescription = InitValuesVar.SourceCompanyDescription;
         set GenDiffUpdateTemplateId = InitValuesVar.SourceCompany;
         set GenDiffUpdateTemplateIdDescription = InitValuesVar.SourceCompanyDescription;

         if [SourceCompany = null and SourceTemplateId = null] {
            set TemplateAsSource = true;
            set SelectedSourceCompany = false;
            set SelectedSourceTemplateId = false;
            set SelectedNewTemplateId = true;
         }
         else {
            set TemplateAsSource = false;
            if [SourceCompany != null] {
               set SelectedSourceCompany = true;
               set SelectedSourceTemplateId = false;
               set SelectedNewTemplateId = false;
            }
            else {
               set SelectedSourceCompany = false;
               set SelectedSourceTemplateId = true;
               set SelectedNewTemplateId = false;
            }
         }
      }
   }
   steps {
      step {
         label = "General Parameters";
         group CompanyInformationGroup;
         group UpdateCompanyGroup;
         group UseTemplateAsSourceGroup;
         group UpdateCompanySpecifyLuToIncludeGroup;
         next command {
            variable UpdateIdVar Text;
            enabled = [((SourceCompany != null or SourceTemplateId != null) and TemplateAsSource = false) or(UpdateTemplateId != null and TemplateAsSource = true)];
            execute {
               if [UpdateId = null] {
                  call InitValues() into UpdateIdVar;
                  set UpdateId = UpdateIdVar;
               }
               set GenDiffUpdateTemplateId = UpdateTemplateId;
               set GenDiffUpdateTemplateIdDescription = UpdateTemplateIdRef.Description;
            }
         }
      }
      step {
         label = "Specify LU(s) to include (optional)";
         visible = [SpecifyLuToInclude];
         group UpdateCompanySelectLuGroup;
         group UpdateCompanySelectedSourceGroup;
         list UpdateCompanySelectLuList(UpdateCompanySelectLuArray);

         next command {
            enabled = [true];
         }
      }
      step {
         label = "Generate Difference Template";
         group GenerateDifferenceHeaderGroup;
         list GenerateDifferenceHeaderDetailList(GenerateDiffHeaderAray);
         list GenerateDifferenceDetailList(DetailArray) bind GenerateDifferenceHeaderDetailList;

         next command {
            enabled = [true];
         }
      }
      step {
         label = "Summary";
         group Summary;
      }
      final step {
      }
      cancelled step {
      }
   }
   finish command {
      enabled = [(((SourceCompany != null or SourceTemplateId != null) and TemplateAsSource = false) or(UpdateTemplateId != null and TemplateAsSource = true)) and(SpecifyLuToInclude = false or component.UpdateCompanyAssistant.ActiveStep = 2)];
      variable ErrorCreatedVar Text;
      execute {
         call UpdateCompany(Company, ValidFrom, SourceCompany, SourceTemplateId, NonAccRelData, AccRelData, TemplateAsSource, UpdateTemplateId, UpdateId, Objkey, RunInBackground) into ErrorCreatedVar {
            when FAIL {
               error("${error.Message}");
               exit;
            }
            when SUCCESS {
               if [not RunInBackground] {
                  call RemoveForId(UpdateId);
               }
               if [RunInBackground] {
                  alert("Update Company process has been put into background queue for execution.");
                  exit OK;
               }
               if [ErrorCreatedVar = "TRUE"] {
                  inquire("Company Updated with Error. Press Yes to open Company Log.") {
                     when CANCEL {
                        exit CANCEL;
                     }
                     when NO {
                        exit OK;
                     }
                     when YES {
                        navigate "page/CreateCompanyComponentLog/List?$filter=Company eq $[Company]";
                        exit OK;
                     }
                  }
               }
               if [ErrorCreatedVar = "FALSE"] {
                  alert("Company Successfully Updated.");
                  exit OK;
               }
               if [ErrorCreatedVar = "COMMENTS"] {
                  alert("Company Successfully Updated with some Comments, check the Company Log.");
                  exit CANCEL;
               }
            }
         }
      }
   }
   cancel command {
      execute {
         if [UpdateId != null] {
            call RemoveForId(UpdateId);
         }
         exit CANCEL;
      }
   }
   restart command {
      visible = [false];
   }
}

--------------------------------- COMMANDS ----------------------------------
command SelectMarkedCommand for UpdateCompanySelectLu {
   label = "Select Marked";
   mode = SelectedRecords;
   enabled = [count(*, CheckSelected = "FALSE") > 0];
   variable KeyrefsVar;
   bulkexecute {
      stringify(records, keyref) into KeyrefsVar;
      call SelectAllCommand(KeyrefsVar);
   }
}

command SelectAllCommand {
   label = "Select All";
   mode = Global;
   variable KeyrefsVar;
   execute {
      stringify(UpdateCompanySelectLuList, keyref) into KeyrefsVar;
      call SelectAllCommand(KeyrefsVar);
   }
}

command DeselectMarkedCommand for UpdateCompanySelectLu {
   label = "Deselect Marked";
   mode = SelectedRecords;
   enabled = [count(*, CheckSelected = "TRUE") > 0];
   variable KeyrefsVar;
   bulkexecute {
      stringify(records, keyref) into KeyrefsVar;
      call DeselectAllCommand(KeyrefsVar);
   }
}

command DeselectAllCommand {
   label = "Deselect All";
   mode = Global;
   variable KeyrefsVar;
   execute {
      stringify(UpdateCompanySelectLuList, keyref) into KeyrefsVar;
      call DeselectAllCommand(KeyrefsVar);
   }
}

command GenerateDiffCommand for UpdateCompanyVirtual {
   label = "Generate Diff";
   mode = Global;
   variable GenDiff Structure(GenerateDiffStructure);
   execute {
      if [SourceTemplateId = null] {
         set SourceTemplateId = GenDiffUpdateTemplateId;
      }
      call GenerateDiff(Company, ValidFrom, SourceCompany, SourceTemplateId, OldSourceTemplate, TempSourceTemplate, TempTargetTemplate, DiffTemplate, UpdateId) into GenerateDiffStructure;
      set DiffTemplate = GenerateDiffStructure.DiffTemplateId;
   }
}

command UseDiffTemplateCommand for GenerateDifferenceHeaderVirtual {
   label = "Use Diff Template";
   mode = Global;
   execute {
      set OldSourceTemplate = UpdateTemplateId;
      set UpdateTemplateId = DiffTemplate;
      set DifferenceTemplate = true;
      info("General Parameter step has been updated with the Diff Template ID ${DiffTemplate}");
   }
}

--------------------------------- SELECTORS ---------------------------------
@Override
selector ReferenceCreateCompanyTemSelector for CreateCompanyTem {
   static TemplateId;
   static Description;
   static Valid {
      visible = [false];
   }
   static DefaultTemplate {
      visible = [false];
   }
   static CreatedByUser {
      visible = [false];
   }
}

---------------------------------- GROUPS -----------------------------------
group CompanyInformationGroup for UpdateCompanyVirtual {
   label = "Company Information";
   @DynamicComponentDependency ACCRUL
   lov CompanyRef with ReferenceCompanyFinanceSelector {
      search = Company, Description;
      label = "Company";
      size = Large;
      description = CompanyRef.Description;
   }

   field CurrencyCode {
      size = Small;
   }
   field ValidFrom {
      size = Small;
   }
   field SourceCompany {
      label = "Source Company ID";
      size = Medium;
      editable = [false];
   }
   field SourceTemplateId {
      size = FullWidth;
   }
}

group UpdateCompanyGroup for UpdateCompanyVirtual {
   label = "Update of existing Logical Units with new data";
   field NonAccRelData {
      size = FullWidth;
      defaulttoprevious = [true];
   }
   field AccRelData {
      size = FullWidth;
      defaulttoprevious = [true];
   }
}

group UseTemplateAsSourceGroup for UpdateCompanyVirtual {
   label = "Company Template as Source";
   field TemplateAsSource {
      size = Large;
      validate command {
         execute {
            if [TemplateAsSource] {
               set SelectedSourceCompany = false;
               set SelectedSourceTemplateId = false;
               set SelectedNewTemplateId = true;
            }
            else {
               set UpdateTemplateId = null;
               set SelectedNewTemplateId = false;
               if [SourceCompany != null] {
                  set SelectedSourceCompany = true;
                  set SelectedSourceTemplateId = false;
               }
               if [SourceTemplateId != null] {
                  set SelectedSourceCompany = false;
                  set SelectedSourceTemplateId = true;
               }
            }
         }
      }
   }
   field DifferenceTemplate {
      size = Large;
      required = [true];
      editable = [false];
   }
   lov UpdateTemplateIdRef with ReferenceCreateCompanyTemSelector using GetValidTemplates {
      search = TemplateId, Description;
      visible = [TemplateAsSource];
      description = UpdateTemplateIdRef.Description;
   }
   field OldSourceTemplate {
      size = FullWidth;
   }
}

group UpdateCompanySelectLuGroup for UpdateCompanyVirtual {
   label = "Company Information";
   field Company {
      size = Small;
   }
   field Name;
   field CurrencyCode {
      size = Small;
   }
   field ValidFrom {
      size = Small;
   }
   field UpdateId {
      searchable = false;
      visible = [false];
   }
}

group UpdateCompanySpecifyLuToIncludeGroup for UpdateCompanyVirtual {
   label = "Optional Parameters";
   field SpecifyLuToInclude {
      defaulttoprevious = [true];
   }
   field RunInBackground {
      defaulttoprevious = [true];
   }
}

group UpdateCompanySelectedSourceGroup  for UpdateCompanyVirtual {
   label = "Selected Parameters to use when updating Company";
   field SelectedSourceCompany {
      size = Small;
      visible = [SelectedSourceCompany];
   }
   field SourceCompany {
      size = Small;
      visible = [SelectedSourceCompany];
   }
   field SelectedSourceTemplateId {
      size = Small;
      visible = [SelectedSourceTemplateId];
   }
   field SourceTemplateId {
      size = Small;
      visible = [SelectedSourceTemplateId];
   }
   field SelectedNewTemplateId {
      size = Small;
      visible = [SelectedNewTemplateId];
   }
   field UpdateTemplateId {
      size = Small;
      visible = [SelectedNewTemplateId];
      editable = [false];
   }
   field NonAccRelData {
      editable = [false];
   }
   field AccRelData {
      editable = [false];
   }
   field RunInBackground;
}

group GenerateDifferenceHeaderGroup for UpdateCompanyVirtual {
   label = "Company Information";
   field Company {
      size = Small;
      editable = [false];
   }
   field Name {
      editable = [false];
   }
   field GenDiffUpdateTemplateId {
      label = "Update Source";
      size = Small;
      editable = [false];
   }
   field GenDiffUpdateTemplateIdDescription {
      label = "Name";
      editable = [false];
   }
}

group Summary for UpdateCompanyVirtual {
   label = "Summary";
   field Company {
      size = Small;
   }
   field Name;
   field CurrencyCode {
      size = Small;
   }
   field ValidFrom {
      size = Small;
   }
   field SourceCompany {
      size = FullWidth;
      editable = [false];
   }
   field SourceTemplateId {
      size = FullWidth;
   }
   field TemplateAsSource {
      size = FullWidth;
      editable = [false];
   }
   lov UpdateTemplateIdRef with ReferenceCreateCompanyTemSelector using GetValidTemplates {
      search = TemplateId, Description;
      visible = [TemplateAsSource];
      editable = [false];
   }
   field UpdateTemplateIdRef.Description {
      size = Large;
      visible = [TemplateAsSource];
   }
   field OldSourceTemplate {
      size = FullWidth;
      editable = [false];
   }
}

----------------------------------- LISTS -----------------------------------
list UpdateCompanySelectLuList for UpdateCompanySelectLu {
   preselect = [false];
   label = "Select LU(s) to Update Company";
   orderby = Module, Lu;

   field Module {
      size = Small;
   }
   field Lu;
   field AccountRelated {
      size = Small;
   }
   field Selected {
      size = Small;
   }

   fieldranking Module, Lu, AccountRelated, Selected;

   command SelectAllCommand;
   command SelectMarkedCommand;
   command DeselectAllCommand;
   command DeselectMarkedCommand;
}

list GenerateDifferenceHeaderDetailList for GenerateDifferenceHeaderVirtual {
   label = "Generate Difference Header Information";
   multiselect = [false];

   crudactions {
      new {
         enabled = [false];
      }
      edit {
         enabled = [false];
      }
      delete {
         enabled = [false];
      }
   }
   field TemplateId {
      size = Small;
      editable = [false];
   }
   field Description {
      editable = [false];
   }
   field Component {
      size = Small;
      editable = [false];
   }
   field Version {
      size = Small;
      editable = [false];
   }
   field Lu {
      label = "Logical Unit";
      size = Small;
      editable = [false];
   }

   command GenerateDiffCommand;
   command UseDiffTemplateCommand;
}

list GenerateDifferenceDetailList for GenerateDifferenceDetailVirtual {
   label = "Generate Difference Detail Information";
   multiselect = [false];

   crudactions {
      new {
         enabled = [false];
      }
      delete {
         enabled = [false];
      }
   }

   field TemplateId {
      size = Small;
      columnexclude = [true];
   }
   field Component {
      size = Small;
      columnexclude = [true];
   }
   field Lu {
      size = Small;
      columnexclude = [true];
   }
   field ItemId {
      size = Small;
      columnexclude = [true];
   }
   field Selected {
      size = Small;
   }
   field C1 {
      label = "${parent.C1}";
      columnexclude = [substring(parent.ListFieldEnabled, 0, 1) = "N"];
   }
   field C2 {
      label = "${parent.C2}";
      columnexclude = [substring(parent.ListFieldEnabled, 1, 1) = "N"];
   }
   field C3 {
      label = "${parent.C3}";
      columnexclude = [substring(parent.ListFieldEnabled, 2, 1) = "N"];
   }
   field C4 {
      label = "${parent.C4}";
      columnexclude = [substring(parent.ListFieldEnabled, 3, 1) = "N"];
   }
   field C5 {
      label = "${parent.C5}";
      columnexclude = [substring(parent.ListFieldEnabled, 4, 1) = "N"];
   }
   field C6 {
      label = "${parent.C6}";
      columnexclude = [substring(parent.ListFieldEnabled, 5, 1) = "N"];
   }
   field C7 {
      label = "${parent.C7}";
      columnexclude = [substring(parent.ListFieldEnabled, 6, 1) = "N"];
   }
   field C8 {
      label = "${parent.C8}";
      columnexclude = [substring(parent.ListFieldEnabled, 7, 1) = "N"];
   }
   field C9 {
      label = "${parent.C9}";
      columnexclude = [substring(parent.ListFieldEnabled, 8, 1) = "N"];
   }
   field C10 {
      label = "${parent.C10}";
      columnexclude = [substring(parent.ListFieldEnabled, 9, 1) = "N"];
   }
   field C11 {
      label = "${parent.C11}";
      columnexclude = [substring(parent.ListFieldEnabled, 10, 1) = "N"];
   }
   field C12 {
      label = "${parent.C12}";
      columnexclude = [substring(parent.ListFieldEnabled, 11, 1) = "N"];
   }
   field C13 {
      label = "${parent.C13}";
      columnexclude = [substring(parent.ListFieldEnabled, 12, 1) = "N"];
   }
   field C14 {
      label = "${parent.C14}";
      columnexclude = [substring(parent.ListFieldEnabled, 13, 1) = "N"];
   }
   field C15 {
      label = "${parent.C15}";
      columnexclude = [substring(parent.ListFieldEnabled, 14, 1) = "N"];
   }
   field C16 {
      label = "${parent.C16}";
      columnexclude = [substring(parent.ListFieldEnabled, 15, 1) = "N"];
   }
   field C17 {
      label = "${parent.C17}";
      columnexclude = [substring(parent.ListFieldEnabled, 16, 1) = "N"];
   }
   field C18 {
      label = "${parent.C18}";
      columnexclude = [substring(parent.ListFieldEnabled, 17, 1) = "N"];
   }
   field C19 {
      label = "${parent.C19}";
      columnexclude = [substring(parent.ListFieldEnabled, 18, 1) = "N"];
   }
   field C20 {
      label = "${parent.C20}";
      columnexclude = [substring(parent.ListFieldEnabled, 19, 1) = "N"];
   }
   field C21 {
      label = "${parent.C21}";
      columnexclude = [substring(parent.ListFieldEnabled, 20, 1) = "N"];
   }
   field C22 {
      label = "${parent.C22}";
      columnexclude = [substring(parent.ListFieldEnabled, 21, 1) = "N"];
   }
   field C23 {
      label = "${parent.C23}";
      columnexclude = [substring(parent.ListFieldEnabled, 22, 1) = "N"];
   }
   field C24 {
      label = "${parent.C24}";
      columnexclude = [substring(parent.ListFieldEnabled, 23, 1) = "N"];
   }
   field C25 {
      label = "${parent.C25}";
      columnexclude = [substring(parent.ListFieldEnabled, 24, 1) = "N"];
   }
   field C26 {
      label = "${parent.C26}";
      columnexclude = [substring(parent.ListFieldEnabled, 25, 1) = "N"];
   }
   field C27 {
      label = "${parent.C27}";
      columnexclude = [substring(parent.ListFieldEnabled, 26, 1) = "N"];
   }
   field C28 {
      label = "${parent.C28}";
      columnexclude = [substring(parent.ListFieldEnabled, 27, 1) = "N"];
   }
   field C29 {
      label = "${parent.C29}";
      columnexclude = [substring(parent.ListFieldEnabled, 28, 1) = "N"];
   }
   field C30 {
      label = "${parent.C30}";
      columnexclude = [substring(parent.ListFieldEnabled, 29, 1) = "N"];
   }
   field C31 {
      label = "${parent.C31}";
      columnexclude = [substring(parent.ListFieldEnabled, 30, 1) = "N"];
   }
   field C32 {
      label = "${parent.C32}";
      columnexclude = [substring(parent.ListFieldEnabled, 31, 1) = "N"];
   }
   field C33 {
      label = "${parent.C33}";
      columnexclude = [substring(parent.ListFieldEnabled, 32, 1) = "N"];
   }
   field C34 {
      label = "${parent.C34}";
      columnexclude = [substring(parent.ListFieldEnabled, 33, 1) = "N"];
   }
   field C35 {
      label = "${parent.C35}";
      columnexclude = [substring(parent.ListFieldEnabled, 34, 1) = "N"];
   }
   field C36 {
      label = "${parent.C36}";
      columnexclude = [substring(parent.ListFieldEnabled, 35, 1) = "N"];
   }
   field C37 {
      label = "${parent.C37}";
      columnexclude = [substring(parent.ListFieldEnabled, 36, 1) = "N"];
   }
   field C38 {
      label = "${parent.C38}";
      columnexclude = [substring(parent.ListFieldEnabled, 37, 1) = "N"];
   }
   field C39 {
      label = "${parent.C39}";
      columnexclude = [substring(parent.ListFieldEnabled, 38, 1) = "N"];
   }
   field C40 {
      label = "${parent.C40}";
      columnexclude = [substring(parent.ListFieldEnabled, 39, 1) = "N"];
   }
   field C41 {
      label = "${parent.C41}";
      columnexclude = [substring(parent.ListFieldEnabled, 40, 1) = "N"];
   }
   field C42 {
      label = "${parent.C42}";
      columnexclude = [substring(parent.ListFieldEnabled, 41, 1) = "N"];
   }
   field C43 {
      label = "${parent.C43}";
      columnexclude = [substring(parent.ListFieldEnabled, 42, 1) = "N"];
   }
   field C44 {
      label = "${parent.C44}";
      columnexclude = [substring(parent.ListFieldEnabled, 43, 1) = "N"];
   }
   field C45 {
      label = "${parent.C45}";
      columnexclude = [substring(parent.ListFieldEnabled, 44, 1) = "N"];
   }
   field C46 {
      label = "${parent.C46}";
      columnexclude = [substring(parent.ListFieldEnabled, 45, 1) = "N"];
   }
   field C47 {
      label = "${parent.C47}";
      columnexclude = [substring(parent.ListFieldEnabled, 46, 1) = "N"];
   }
   field C48 {
      label = "${parent.C48}";
      columnexclude = [substring(parent.ListFieldEnabled, 47, 1) = "N"];
   }
   field C49 {
      label = "${parent.C49}";
      columnexclude = [substring(parent.ListFieldEnabled, 48, 1) = "N"];
   }
   field C50 {
      label = "${parent.C50}";
      columnexclude = [substring(parent.ListFieldEnabled, 49, 1) = "N"];
   }
   field C51 {
      label = "${parent.C51}";
      columnexclude = [substring(parent.ListFieldEnabled, 50, 1) = "N"];
   }
   field C52 {
      label = "${parent.C52}";
      columnexclude = [substring(parent.ListFieldEnabled, 51, 1) = "N"];
   }
   field C53 {
      label = "${parent.C53}";
      columnexclude = [substring(parent.ListFieldEnabled, 52, 1) = "N"];
   }
   field C54 {
      label = "${parent.C54}";
      columnexclude = [substring(parent.ListFieldEnabled, 53, 1) = "N"];
   }
   field C55 {
      label = "${parent.C55}";
      columnexclude = [substring(parent.ListFieldEnabled, 54, 1) = "N"];
   }
   field C56 {
      label = "${parent.C56}";
      columnexclude = [substring(parent.ListFieldEnabled, 55, 1) = "N"];
   }
   field C57 {
      label = "${parent.C57}";
      columnexclude = [substring(parent.ListFieldEnabled, 56, 1) = "N"];
   }
   field C58 {
      label = "${parent.C58}";
      columnexclude = [substring(parent.ListFieldEnabled, 57, 1) = "N"];
   }
   field C59 {
      label = "${parent.C59}";
      columnexclude = [substring(parent.ListFieldEnabled, 58, 1) = "N"];
   }
   field C60 {
      label = "${parent.C60}";
      columnexclude = [substring(parent.ListFieldEnabled, 59, 1) = "N"];
   }
   field C61 {
      label = "${parent.C61}";
      columnexclude = [substring(parent.ListFieldEnabled, 60, 1) = "N"];
   }
   field C62 {
      label = "${parent.C62}";
      columnexclude = [substring(parent.ListFieldEnabled, 61, 1) = "N"];
   }
   field C63 {
      label = "${parent.C63}";
      columnexclude = [substring(parent.ListFieldEnabled, 62, 1) = "N"];
   }
   field C64 {
      label = "${parent.C64}";
      columnexclude = [substring(parent.ListFieldEnabled, 63, 1) = "N"];
   }
   field C65 {
      label = "${parent.C65}";
      columnexclude = [substring(parent.ListFieldEnabled, 64, 1) = "N"];
   }
   field C66 {
      label = "${parent.C66}";
      columnexclude = [substring(parent.ListFieldEnabled, 65, 1) = "N"];
   }
   field C67 {
      label = "${parent.C67}";
      columnexclude = [substring(parent.ListFieldEnabled, 66, 1) = "N"];
   }
   field C68 {
      label = "${parent.C68}";
      columnexclude = [substring(parent.ListFieldEnabled, 67, 1) = "N"];
   }
   field C69 {
      label = "${parent.C69}";
      columnexclude = [substring(parent.ListFieldEnabled, 68, 1) = "N"];
   }
   field C70 {
      label = "${parent.C70}";
      columnexclude = [substring(parent.ListFieldEnabled, 69, 1) = "N"];
   }
   field ExtC1 {
      label = "${parent.ExtC1}";
      columnexclude = [substring(parent.ListFieldEnabled, 70, 1) = "N"];
   }
   field ExtC2 {
      label = "${parent.ExtC2}";
      columnexclude = [substring(parent.ListFieldEnabled, 71, 1) = "N"];
   }
   field ExtC3 {
      label = "${parent.ExtC3}";
      columnexclude = [substring(parent.ListFieldEnabled, 72, 1) = "N"];
   }
   field ExtC4 {
      label = "${parent.ExtC4}";
      columnexclude = [substring(parent.ListFieldEnabled, 73, 1) = "N"];
   }
   field ExtC5 {
      label = "${parent.ExtC5}";
      columnexclude = [substring(parent.ListFieldEnabled, 74, 1) = "N"];
   }
   field ExtC6 {
      label = "${parent.ExtC6}";
      columnexclude = [substring(parent.ListFieldEnabled, 75, 1) = "N"];
   }
   field ExtC7 {
      label = "${parent.ExtC7}";
      columnexclude = [substring(parent.ListFieldEnabled, 76, 1) = "N"];
   }
   field ExtC8 {
      label = "${parent.ExtC8}";
      columnexclude = [substring(parent.ListFieldEnabled, 77, 1) = "N"];
   }
   field ExtC9 {
      label = "${parent.ExtC9}";
      columnexclude = [substring(parent.ListFieldEnabled, 78, 1) = "N"];
   }
   field ExtC10 {
      label = "${parent.ExtC10}";
      columnexclude = [substring(parent.ListFieldEnabled, 79, 1) = "N"];
   }
   field ExtC11 {
      label = "${parent.ExtC11}";
      columnexclude = [substring(parent.ListFieldEnabled, 80, 1) = "N"];
   }
   field ExtC12 {
      label = "${parent.ExtC12}";
      columnexclude = [substring(parent.ListFieldEnabled, 81, 1) = "N"];
   }
   field ExtC13 {
      label = "${parent.ExtC13}";
      columnexclude = [substring(parent.ListFieldEnabled, 82, 1) = "N"];
   }
   field ExtC14 {
      label = "${parent.ExtC14}";
      columnexclude = [substring(parent.ListFieldEnabled, 83, 1) = "N"];
   }
   field ExtC15 {
      label = "${parent.ExtC15}";
      columnexclude = [substring(parent.ListFieldEnabled, 84, 1) = "N"];
   }
   field ExtC16 {
      label = "${parent.ExtC16}";
      columnexclude = [substring(parent.ListFieldEnabled, 85, 1) = "N"];
   }
   field ExtC17 {
      label = "${parent.ExtC17}";
      columnexclude = [substring(parent.ListFieldEnabled, 86, 1) = "N"];
   }
   field ExtC18 {
      label = "${parent.ExtC18}";
      columnexclude = [substring(parent.ListFieldEnabled, 87, 1) = "N"];
   }
   field ExtC19 {
      label = "${parent.ExtC19}";
      columnexclude = [substring(parent.ListFieldEnabled, 88, 1) = "N"];
   }
   field ExtC20 {
      label = "${parent.ExtC20}";
      columnexclude = [substring(parent.ListFieldEnabled, 89, 1) = "N"];
   }
   field ExtC21 {
      label = "${parent.ExtC21}";
      columnexclude = [substring(parent.ListFieldEnabled, 90, 1) = "N"];
   }
   field ExtC22 {
      label = "${parent.ExtC22}";
      columnexclude = [substring(parent.ListFieldEnabled, 91, 1) = "N"];
   }
   field ExtC23 {
      label = "${parent.ExtC23}";
      columnexclude = [substring(parent.ListFieldEnabled, 92, 1) = "N"];
   }
   field ExtC24 {
      label = "${parent.ExtC24}";
      columnexclude = [substring(parent.ListFieldEnabled, 93, 1) = "N"];
   }
   field ExtC25 {
      label = "${parent.ExtC25}";
      columnexclude = [substring(parent.ListFieldEnabled, 94, 1) = "N"];
   }
   field ExtC26 {
      label = "${parent.ExtC26}";
      columnexclude = [substring(parent.ListFieldEnabled, 95, 1) = "N"];
   }
   field ExtC27 {
      label = "${parent.ExtC27}";
      columnexclude = [substring(parent.ListFieldEnabled, 96, 1) = "N"];
   }
   field ExtC28 {
      label = "${parent.ExtC28}";
      columnexclude = [substring(parent.ListFieldEnabled, 97, 1) = "N"];
   }
   field ExtC29 {
      label = "${parent.ExtC29}";
      columnexclude = [substring(parent.ListFieldEnabled, 98, 1) = "N"];
   }
   field ExtC30 {
      label = "${parent.ExtC30}";
      columnexclude = [substring(parent.ListFieldEnabled, 99, 1) = "N"];
   }
   field D1 {
      label = "${parent.D1}";
      columnexclude = [substring(parent.ListFieldEnabled, 100, 1) = "N"];
   }
   field D2 {
      label = "${parent.D2}";
      columnexclude = [substring(parent.ListFieldEnabled, 101, 1) = "N"];
   }
   field D3 {
      label = "${parent.D3}";
      columnexclude = [substring(parent.ListFieldEnabled, 102, 1) = "N"];
   }
   field D4 {
      label = "${parent.D4}";
      columnexclude = [substring(parent.ListFieldEnabled, 103, 1) = "N"];
   }
   field D5 {
      label = "${parent.D5}";
      columnexclude = [substring(parent.ListFieldEnabled, 104, 1) = "N"];
   }
   field ExtD1 {
      label = "${parent.ExtD1}";
      columnexclude = [substring(parent.ListFieldEnabled, 105, 1) = "N"];
   }
   field ExtD2 {
      label = "${parent.ExtD2}";
      columnexclude = [substring(parent.ListFieldEnabled, 106, 1) = "N"];
   }
   field ExtD3 {
      label = "${parent.ExtD3}";
      columnexclude = [substring(parent.ListFieldEnabled, 107, 1) = "N"];
   }
   field ExtD4 {
      label = "${parent.ExtD4}";
      columnexclude = [substring(parent.ListFieldEnabled, 108, 1) = "N"];
   }
   field ExtD5 {
      label = "${parent.ExtD5}";
      columnexclude = [substring(parent.ListFieldEnabled, 109, 1) = "N"];
   }
   field N1 {
      label = "${parent.N1}";
      columnexclude = [substring(parent.ListFieldEnabled, 110, 1) = "N"];
   }
   field N2 {
      label = "${parent.N2}";
      columnexclude = [substring(parent.ListFieldEnabled, 111, 1) = "N"];
   }
   field N3 {
      label = "${parent.N3}";
      columnexclude = [substring(parent.ListFieldEnabled, 112, 1) = "N"];
   }
   field N4 {
      label = "${parent.N4}";
      columnexclude = [substring(parent.ListFieldEnabled, 113, 1) = "N"];
   }
   field N5 {
      label = "${parent.N5}";
      columnexclude = [substring(parent.ListFieldEnabled, 114, 1) = "N"];
   }
   field N6 {
      label = "${parent.N6}";
      columnexclude = [substring(parent.ListFieldEnabled, 115, 1) = "N"];
   }
   field N7 {
      label = "${parent.N7}";
      columnexclude = [substring(parent.ListFieldEnabled, 116, 1) = "N"];
   }
   field N8 {
      label = "${parent.N8}";
      columnexclude = [substring(parent.ListFieldEnabled, 117, 1) = "N"];
   }
   field N9 {
      label = "${parent.N9}";
      columnexclude = [substring(parent.ListFieldEnabled, 118, 1) = "N"];
   }
   field N10 {
      label = "${parent.N10}";
      columnexclude = [substring(parent.ListFieldEnabled, 119, 1) = "N"];
   }
   field N11 {
      label = "${parent.N11}";
      columnexclude = [substring(parent.ListFieldEnabled, 120, 1) = "N"];
   }
   field N12 {
      label = "${parent.N12}";
      columnexclude = [substring(parent.ListFieldEnabled, 121, 1) = "N"];
   }
   field N13 {
      label = "${parent.N13}";
      columnexclude = [substring(parent.ListFieldEnabled, 122, 1) = "N"];
   }
   field N14 {
      label = "${parent.N14}";
      columnexclude = [substring(parent.ListFieldEnabled, 123, 1) = "N"];
   }
   field N15 {
      label = "${parent.N15}";
      columnexclude = [substring(parent.ListFieldEnabled, 124, 1) = "N"];
   }
   field N16 {
      label = "${parent.N16}";
      columnexclude = [substring(parent.ListFieldEnabled, 125, 1) = "N"];
   }
   field N17 {
      label = "${parent.N17}";
      columnexclude = [substring(parent.ListFieldEnabled, 126, 1) = "N"];
   }
   field N18 {
      label = "${parent.N18}";
      columnexclude = [substring(parent.ListFieldEnabled, 127, 1) = "N"];
   }
   field N19 {
      label = "${parent.N19}";
      columnexclude = [substring(parent.ListFieldEnabled, 128, 1) = "N"];
   }
   field N20 {
      label = "${parent.N20}";
      columnexclude = [substring(parent.ListFieldEnabled, 129, 1) = "N"];
   }
   field ExtN1 {
      label = "${parent.ExtN1}";
      columnexclude = [substring(parent.ListFieldEnabled, 130, 1) = "N"];
   }
   field ExtN2 {
      label = "${parent.ExtN2}";
      columnexclude = [substring(parent.ListFieldEnabled, 131, 1) = "N"];
   }
   field ExtN3 {
      label = "${parent.ExtN3}";
      columnexclude = [substring(parent.ListFieldEnabled, 132, 1) = "N"];
   }
   field ExtN4 {
      label = "${parent.ExtN4}";
      columnexclude = [substring(parent.ListFieldEnabled, 133, 1) = "N"];
   }
   field ExtN5 {
      label = "${parent.ExtN5}";
      columnexclude = [substring(parent.ListFieldEnabled, 134, 1) = "N"];
   }
   field ExtN6 {
      label = "${parent.ExtN6}";
      columnexclude = [substring(parent.ListFieldEnabled, 135, 1) = "N"];
   }
   field ExtN7 {
      label = "${parent.ExtN7}";
      columnexclude = [substring(parent.ListFieldEnabled, 136, 1) = "N"];
   }
   field ExtN8 {
      label = "${parent.ExtN8}";
      columnexclude = [substring(parent.ListFieldEnabled, 137, 1) = "N"];
   }
   field ExtN9 {
      label = "${parent.ExtN9}";
      columnexclude = [substring(parent.ListFieldEnabled, 138, 1) = "N"];
   }
   field ExtN10 {
      label = "${parent.ExtN10}";
      columnexclude = [substring(parent.ListFieldEnabled, 139, 1) = "N"];
   }
   field ExtN11 {
      label = "${parent.ExtN11}";
      columnexclude = [substring(parent.ListFieldEnabled, 140, 1) = "N"];
   }
   field ExtN12 {
      label = "${parent.ExtN12}";
      columnexclude = [substring(parent.ListFieldEnabled, 141, 1) = "N"];
   }
   field ExtN13 {
      label = "${parent.ExtN13}";
      columnexclude = [substring(parent.ListFieldEnabled, 142, 1) = "N"];
   }
   field ExtN14 {
      label = "${parent.ExtN14}";
      columnexclude = [substring(parent.ListFieldEnabled, 143, 1) = "N"];
   }
   field ExtN15 {
      label = "${parent.ExtN15}";
      columnexclude = [substring(parent.ListFieldEnabled, 144, 1) = "N"];
   }
   field ExtN16 {
      label = "${parent.ExtN16}";
      columnexclude = [substring(parent.ListFieldEnabled, 145, 1) = "N"];
   }
   field ExtN17 {
      label = "${parent.ExtN17}";
      columnexclude = [substring(parent.ListFieldEnabled, 146, 1) = "N"];
   }
   field ExtN18 {
      label = "${parent.ExtN18}";
      columnexclude = [substring(parent.ListFieldEnabled, 147, 1) = "N"];
   }
   field ExtN19 {
      label = "${parent.ExtN19}";
      columnexclude = [substring(parent.ListFieldEnabled, 148, 1) = "N"];
   }
   field ExtN20 {
      label = "${parent.ExtN20}";
      columnexclude = [substring(parent.ListFieldEnabled, 149, 1) = "N"];
   }
   fieldranking C1, C2, C3, C4, C5, C6, C7, C8, C9, C10;
}
--------------------------- PROJECTION FRAGMENTS ----------------------------

------------------------------ ENTITY DETAILS -------------------------------
entityset UpdateCompanyVirtualSet for UpdateCompanyVirtual;
entityset GenerateDifferenceHeaderVirtualSet for GenerateDifferenceHeaderVirtual;
entityset GenerateDifferenceDetailVirtualSet for GenerateDifferenceDetailVirtual;
entityset CreateCompanyTemLuSet for CreateCompanyTemLu;

@Override
entity UpdateCompanySelectLu {
   crud = Read, Update;
   from = "update_company_select_lu_cl";
   use attributes = Selected;

   attribute Lu Text {
      label = "LU Name";
   }
   attribute AccountRelated Boolean("TRUE", "FALSE") {
      fetch = "account_related";
      label = "Account Related";
      editable = [false];
   }
   attribute Selected Boolean("TRUE", "FALSE") {
      fetch = "selected";
      required = [true];
   }
   attribute CheckSelected Text {
      fetch = "selected";
      editable = [false];
   }
}

@Override
entity CreateCompanyTemLu {
   crud = Read;
   from = "CREATE_COMPANY_TEM_LU_DIFF";
   keys = TemplateId, Component, Lu;

   attribute TemplateId Text;
   attribute Component Text;
   attribute UpdateId Text;
   attribute Lu Text;
   array DetailArray(TemplateId, Component, Lu) to CreateCompanyTemDetail(TemplateId, Component, Lu);
}

---------------------------------- ACTIONS ----------------------------------
action InitValues Text {
   initialcheck none;
}

-- Update_Company_Select_Lu_API.Check_Delete___ also has no security check.
action RemoveForId {
   initialcheck none;

   parameter UpdateId Text;
}

-- Update_Company_Select_Lu_API.Modify__ is called from this action
action SelectAllCommand {
   initialcheck implementation;

   parameter Selection Text;
   ludependencies = UpdateCompanySelectLu;
}

-- Update_Company_Select_Lu_API.Modify__ is called from this action
action DeselectAllCommand {
   initialcheck implementation;

   parameter Selection Text;
   ludependencies = UpdateCompanySelectLu;
}

-- Company Security is handled in Create_Company_API.Create_New_Company__
action UpdateCompany Text {
   initialcheck implementation;

   parameter Company Text;
   parameter ValidFrom Date;
   parameter SourceCompany Text;
   parameter SourceTemplateId Text;
   parameter NonAccRelData Boolean;
   parameter AccRelData Boolean;
   parameter TemplateAsSource Boolean;
   parameter UpdateTemplateId Text;
   parameter UpdateId Text;
   parameter ObjKey Text;
   parameter RunInBackground Boolean;

}

--------------------------------- FUNCTIONS ---------------------------------
function GetValidTemplates List < Entity(CreateCompanyTem) > {
   where = "valid = 'TRUE'";
}

function InitCommand Structure(UpdateCompanyInitStructure) {
   parameter Company Text;
}

-------------------------------- STRUCTURES ---------------------------------
structure UpdateCompanyInitStructure {
   attribute Name Text;
   attribute SourceCompany Text;
   attribute SourceCompanyDescription Text;
   attribute SourceTemplateId Text;
   attribute CurrencyCode Text;
   attribute ValidFrom Date;
}

structure GenerateDiffStructure {
   attribute Company Text;
   attribute ValidFrom Date;
   attribute SourceCompany Text;
   attribute SourceTemplateId Text;
   attribute OldSourceTemplateId Text;
   attribute TempSourceTemplateId Text;
   attribute TempTargetTemplateId Text;
   attribute DiffTemplateId Text;
   attribute UpdateId Text;
}

--------------------------------- VIRTUALS ----------------------------------
virtual UpdateCompanyVirtual {
   attribute Company Text {
      format = uppercase;
      editable = [false];
   }
   attribute Name Text {
      editable = [false];
   }
   attribute CurrencyCode Text {
      format = uppercase;
      editable = [false];
   }
   attribute ValidFrom Date {
      format = uppercase;
      editable = [false];
   }
   attribute SourceCompany Text {
      label = "Source Company";
      format = uppercase;
   }
   attribute SourceCompanyDescription Text {
      label = "Source Company Name";
   }
   attribute SourceTemplateId Text {
      label = "Source Template ID";
      format = uppercase;
      editable = [false];
   }
   attribute NonAccRelData Boolean("TRUE", "FALSE") {
      label = "Non-Account Related Logical Units";
      required = [true];
   }
   attribute AccRelData Boolean("TRUE", "FALSE") {
      label = "Account Related Logical Units";
      required = [true];
   }
   attribute TemplateAsSource Boolean("TRUE", "FALSE") {
      label = "Choose Company Template as Source";
      required = [true];
   }
   attribute UpdateTemplateId Text {
      label = "Template ID";
      maxlength = 100;
      format = uppercase;
   }
   attribute TemplateDescription Text {
      label = "Description";
      editable = [false];
   }
   attribute OldSourceTemplate Text {
      label = "Source Template ID";
      format = uppercase;
      editable = [false];
   }
   attribute SelectedSourceCompany Boolean("TRUE", "FALSE") {
      label = "Use Source Company";
      required = [true];
      editable = [false];
   }
   attribute SelectedSourceTemplateId Boolean("TRUE", "FALSE") {
      label = "Use Source Template ID";
      required = [true];
      editable = [false];
   }
   attribute SelectedNewTemplateId Boolean("TRUE", "FALSE") {
      label = "Use New Template ID";
      required = [true];
      editable = [false];
   }
   attribute SpecifyLuToInclude Boolean("TRUE", "FALSE") {
      label = "Specify LU(s) to include";
      required = [true];
      editable = [true];
   }
   attribute RunInBackground Boolean("TRUE", "FALSE") {
      label = "Run in background";
      required = [true];
      editable = [true];
   }
   attribute DiffTemplate Text;
   attribute GenDiffUpdateTemplateId Text;
   attribute GenDiffUpdateTemplateIdDescription Text;
   attribute UpdateId Text;
   attribute DifferenceTemplate Boolean("TRUE", "FALSE") {
      label = "Difference Template";
      required = [true];
      editable = [false];
   }

   reference UpdateTemplateIdRef(UpdateTemplateId) to CreateCompanyTem(TemplateId) {
      label = "Template ID";
   }
   @DynamicComponentDependency ACCRUL
   reference CompanyRef(Company) to CompanyFinance(Company);

   array UpdateCompanySelectLuArray(UpdateId) to UpdateCompanySelectLu(UpdateId);
   array GenerateDiffHeaderAray(UpdateId) to GenerateDifferenceHeaderVirtual(UpdateId);

   action GenerateDiff Structure(GenerateDiffStructure) {
      parameter Company Text;
      parameter ValidFrom Date;
      parameter SourceCompany Text;
      parameter SourceTemplateId Text;
      parameter OldSourceTemplateId Text;
      parameter TempSourceTemplateId Text;
      parameter TempTargetTemplateId Text;
      parameter DiffTemplateId Text;
      parameter UpdateId Text;
      ludependencies = GenerateDifferenceHeaderVirtual;
      ludependencies = GenerateDifferenceDetailVirtual;
   }
}

virtual GenerateDifferenceHeaderVirtual {
   attribute TemplateId Text;
   attribute UpdateId Text;
   attribute Description Text;
   attribute Component Text;
   attribute Version Text;
   attribute Lu Text;
   attribute GenDiffUpdateTemplateId Text;
   attribute DiffTemplate Text;
   attribute C1 Text {
      label = "";
   }
   attribute C2 Text {
      label = "";
   }
   attribute C3 Text {
      label = "";
   }
   attribute C4 Text {
      label = "";
   }
   attribute C5 Text {
      label = "";
   }
   attribute C6 Text {
      label = "";
   }
   attribute C7 Text {
      label = "";
   }
   attribute C8 Text {
      label = "";
   }
   attribute C9 Text {
      label = "";
   }
   attribute C10 Text {
      label = "";
   }
   attribute C11 Text {
      label = "";
   }
   attribute C12 Text {
      label = "";
   }
   attribute C13 Text {
      label = "";
   }
   attribute C14 Text {
      label = "";
   }
   attribute C15 Text {
      label = "";
   }
   attribute C16 Text {
      label = "";
   }
   attribute C17 Text {
      label = "";
   }
   attribute C18 Text {
      label = "";
   }
   attribute C19 Text {
      label = "";
   }
   attribute C20 Text {
      label = "";
   }
   attribute C21 Text {
      label = "";
   }
   attribute C22 Text {
      label = "";
   }
   attribute C23 Text {
      label = "";
   }
   attribute C24 Text {
      label = "";
   }
   attribute C25 Text {
      label = "";
   }
   attribute C26 Text {
      label = "";
   }
   attribute C27 Text {
      label = "";
   }
   attribute C28 Text {
      label = "";
   }
   attribute C29 Text {
      label = "";
   }
   attribute C30 Text {
      label = "";
   }
   attribute C31 Text {
      label = "";
   }
   attribute C32 Text {
      label = "";
   }
   attribute C33 Text {
      label = "";
   }
   attribute C34 Text {
      label = "";
   }
   attribute C35 Text {
      label = "";
   }
   attribute C36 Text {
      label = "";
   }
   attribute C37 Text {
      label = "";
   }
   attribute C38 Text {
      label = "";
   }
   attribute C39 Text {
      label = "";
   }
   attribute C40 Text {
      label = "";
   }
   attribute C41 Text {
      label = "";
   }
   attribute C42 Text {
      label = "";
   }
   attribute C43 Text {
      label = "";
   }
   attribute C44 Text {
      label = "";
   }
   attribute C45 Text {
      label = "";
   }
   attribute C46 Text {
      label = "";
   }
   attribute C47 Text {
      label = "";
   }
   attribute C48 Text {
      label = "";
   }
   attribute C49 Text {
      label = "";
   }
   attribute C50 Text {
      label = "";
   }
   attribute C51 Text {
      label = "";
   }
   attribute C52 Text {
      label = "";
   }
   attribute C53 Text {
      label = "";
   }
   attribute C54 Text {
      label = "";
   }
   attribute C55 Text {
      label = "";
   }
   attribute C56 Text {
      label = "";
   }
   attribute C57 Text {
      label = "";
   }
   attribute C58 Text {
      label = "";
   }
   attribute C59 Text {
      label = "";
   }
   attribute C60 Text {
      label = "";
   }
   attribute C61 Text {
      label = "";
   }
   attribute C62 Text {
      label = "";
   }
   attribute C63 Text {
      label = "";
   }
   attribute C64 Text {
      label = "";
   }
   attribute C65 Text {
      label = "";
   }
   attribute C66 Text {
      label = "";
   }
   attribute C67 Text {
      label = "";
   }
   attribute C68 Text {
      label = "";
   }
   attribute C69 Text {
      label = "";
   }
   attribute C70 Text {
      label = "";
   }
   attribute ExtC1 Text {
      label = "";
   }
   attribute ExtC2 Text {
      label = "";
   }
   attribute ExtC3 Text {
      label = "";
   }
   attribute ExtC4 Text {
      label = "";
   }
   attribute ExtC5 Text {
      label = "";
   }
   attribute ExtC6 Text {
      label = "";
   }
   attribute ExtC7 Text {
      label = "";
   }
   attribute ExtC8 Text {
      label = "";
   }
   attribute ExtC9 Text {
      label = "";
   }
   attribute ExtC10 Text {
      label = "";
   }
   attribute ExtC11 Text {
      label = "";
   }
   attribute ExtC12 Text {
      label = "";
   }
   attribute ExtC13 Text {
      label = "";
   }
   attribute ExtC14 Text {
      label = "";
   }
   attribute ExtC15 Text {
      label = "";
   }
   attribute ExtC16 Text {
      label = "";
   }
   attribute ExtC17 Text {
      label = "";
   }
   attribute ExtC18 Text {
      label = "";
   }
   attribute ExtC19 Text {
      label = "";
   }
   attribute ExtC20 Text {
      label = "";
   }
   attribute ExtC21 Text {
      label = "";
   }
   attribute ExtC22 Text {
      label = "";
   }
   attribute ExtC23 Text {
      label = "";
   }
   attribute ExtC24 Text {
      label = "";
   }
   attribute ExtC25 Text {
      label = "";
   }
   attribute ExtC26 Text {
      label = "";
   }
   attribute ExtC27 Text {
      label = "";
   }
   attribute ExtC28 Text {
      label = "";
   }
   attribute ExtC29 Text {
      label = "";
   }
   attribute ExtC30 Text {
      label = "";
   }
   attribute D1 Text {
      label = "";
   }
   attribute D2 Text {
      label = "";
   }
   attribute D3 Text {
      label = "";
   }
   attribute D4 Text {
      label = "";
   }
   attribute D5 Text {
      label = "";
   }
   attribute ExtD1 Text {
      label = "";
   }
   attribute ExtD2 Text {
      label = "";
   }
   attribute ExtD3 Text {
      label = "";
   }
   attribute ExtD4 Text {
      label = "";
   }
   attribute ExtD5 Text {
      label = "";
   }
   attribute N1 Text {
      label = "";
   }
   attribute N2 Text {
      label = "";
   }
   attribute N3 Text {
      label = "";
   }
   attribute N4 Text {
      label = "";
   }
   attribute N5 Text {
      label = "";
   }
   attribute N6 Text {
      label = "";
   }
   attribute N7 Text {
      label = "";
   }
   attribute N8 Text {
      label = "";
   }
   attribute N9 Text {
      label = "";
   }
   attribute N10 Text {
      label = "";
   }
   attribute N11 Text {
      label = "";
   }
   attribute N12 Text {
      label = "";
   }
   attribute N13 Text {
      label = "";
   }
   attribute N14 Text {
      label = "";
   }
   attribute N15 Text {
      label = "";
   }
   attribute N16 Text {
      label = "";
   }
   attribute N17 Text {
      label = "";
   }
   attribute N18 Text {
      label = "";
   }
   attribute N19 Text {
      label = "";
   }
   attribute N20 Text {
      label = "";
   }
   attribute ExtN1 Text {
      label = "";
   }
   attribute ExtN2 Text {
      label = "";
   }
   attribute ExtN3 Text {
      label = "";
   }
   attribute ExtN4 Text {
      label = "";
   }
   attribute ExtN5 Text {
      label = "";
   }
   attribute ExtN6 Text {
      label = "";
   }
   attribute ExtN7 Text {
      label = "";
   }
   attribute ExtN8 Text {
      label = "";
   }
   attribute ExtN9 Text {
      label = "";
   }
   attribute ExtN10 Text {
      label = "";
   }
   attribute ExtN11 Text {
      label = "";
   }
   attribute ExtN12 Text {
      label = "";
   }
   attribute ExtN13 Text {
      label = "";
   }
   attribute ExtN14 Text {
      label = "";
   }
   attribute ExtN15 Text {
      label = "";
   }
   attribute ExtN16 Text {
      label = "";
   }
   attribute ExtN17 Text {
      label = "";
   }
   attribute ExtN18 Text {
      label = "";
   }
   attribute ExtN19 Text {
      label = "";
   }
   attribute ExtN20 Text {
      label = "";
   }
   array DetailArray(TemplateId, Component, Lu) to GenerateDifferenceDetailVirtual(TemplateId, Component, Lu);
}

virtual GenerateDifferenceDetailVirtual {
   attribute TemplateId Text;
   attribute UpdateId Text;
   attribute Description Text;
   attribute Component Text;
   attribute Version Text;
   attribute Lu Text;
   attribute ItemId Text;
   attribute Selected Boolean("TRUE", "FALSE") {
      required = [true];
   }
   attribute C1 Text {
      label = "";
   }
   attribute C2 Text {
      label = "";
   }
   attribute C3 Text {
      label = "";
   }
   attribute C4 Text {
      label = "";
   }
   attribute C5 Text {
      label = "";
   }
   attribute C6 Text {
      label = "";
   }
   attribute C7 Text {
      label = "";
   }
   attribute C8 Text {
      label = "";
   }
   attribute C9 Text {
      label = "";
   }
   attribute C10 Text {
      label = "";
   }
   attribute C11 Text {
      label = "";
   }
   attribute C12 Text {
      label = "";
   }
   attribute C13 Text {
      label = "";
   }
   attribute C14 Text {
      label = "";
   }
   attribute C15 Text {
      label = "";
   }
   attribute C16 Text {
      label = "";
   }
   attribute C17 Text {
      label = "";
   }
   attribute C18 Text {
      label = "";
   }
   attribute C19 Text {
      label = "";
   }
   attribute C20 Text {
      label = "";
   }
   attribute C21 Text {
      label = "";
   }
   attribute C22 Text {
      label = "";
   }
   attribute C23 Text {
      label = "";
   }
   attribute C24 Text {
      label = "";
   }
   attribute C25 Text {
      label = "";
   }
   attribute C26 Text {
      label = "";
   }
   attribute C27 Text {
      label = "";
   }
   attribute C28 Text {
      label = "";
   }
   attribute C29 Text {
      label = "";
   }
   attribute C30 Text {
      label = "";
   }
   attribute C31 Text {
      label = "";
   }
   attribute C32 Text {
      label = "";
   }
   attribute C33 Text {
      label = "";
   }
   attribute C34 Text {
      label = "";
   }
   attribute C35 Text {
      label = "";
   }
   attribute C36 Text {
      label = "";
   }
   attribute C37 Text {
      label = "";
   }
   attribute C38 Text {
      label = "";
   }
   attribute C39 Text {
      label = "";
   }
   attribute C40 Text {
      label = "";
   }
   attribute C41 Text {
      label = "";
   }
   attribute C42 Text {
      label = "";
   }
   attribute C43 Text {
      label = "";
   }
   attribute C44 Text {
      label = "";
   }
   attribute C45 Text {
      label = "";
   }
   attribute C46 Text {
      label = "";
   }
   attribute C47 Text {
      label = "";
   }
   attribute C48 Text {
      label = "";
   }
   attribute C49 Text {
      label = "";
   }
   attribute C50 Text {
      label = "";
   }
   attribute C51 Text {
      label = "";
   }
   attribute C52 Text {
      label = "";
   }
   attribute C53 Text {
      label = "";
   }
   attribute C54 Text {
      label = "";
   }
   attribute C55 Text {
      label = "";
   }
   attribute C56 Text {
      label = "";
   }
   attribute C57 Text {
      label = "";
   }
   attribute C58 Text {
      label = "";
   }
   attribute C59 Text {
      label = "";
   }
   attribute C60 Text {
      label = "";
   }
   attribute C61 Text {
      label = "";
   }
   attribute C62 Text {
      label = "";
   }
   attribute C63 Text {
      label = "";
   }
   attribute C64 Text {
      label = "";
   }
   attribute C65 Text {
      label = "";
   }
   attribute C66 Text {
      label = "";
   }
   attribute C67 Text {
      label = "";
   }
   attribute C68 Text {
      label = "";
   }
   attribute C69 Text {
      label = "";
   }
   attribute C70 Text {
      label = "";
   }
   attribute ExtC1 Text {
      label = "";
   }
   attribute ExtC2 Text {
      label = "";
   }
   attribute ExtC3 Text {
      label = "";
   }
   attribute ExtC4 Text {
      label = "";
   }
   attribute ExtC5 Text {
      label = "";
   }
   attribute ExtC6 Text {
      label = "";
   }
   attribute ExtC7 Text {
      label = "";
   }
   attribute ExtC8 Text {
      label = "";
   }
   attribute ExtC9 Text {
      label = "";
   }
   attribute ExtC10 Text {
      label = "";
   }
   attribute ExtC11 Text {
      label = "";
   }
   attribute ExtC12 Text {
      label = "";
   }
   attribute ExtC13 Text {
      label = "";
   }
   attribute ExtC14 Text {
      label = "";
   }
   attribute ExtC15 Text {
      label = "";
   }
   attribute ExtC16 Text {
      label = "";
   }
   attribute ExtC17 Text {
      label = "";
   }
   attribute ExtC18 Text {
      label = "";
   }
   attribute ExtC19 Text {
      label = "";
   }
   attribute ExtC20 Text {
      label = "";
   }
   attribute ExtC21 Text {
      label = "";
   }
   attribute ExtC22 Text {
      label = "";
   }
   attribute ExtC23 Text {
      label = "";
   }
   attribute ExtC24 Text {
      label = "";
   }
   attribute ExtC25 Text {
      label = "";
   }
   attribute ExtC26 Text {
      label = "";
   }
   attribute ExtC27 Text {
      label = "";
   }
   attribute ExtC28 Text {
      label = "";
   }
   attribute ExtC29 Text {
      label = "";
   }
   attribute ExtC30 Text {
      label = "";
   }
   attribute D1 Date {
      label = "";
   }
   attribute D2 Date {
      label = "";
   }
   attribute D3 Date {
      label = "";
   }
   attribute D4 Date {
      label = "";
   }
   attribute D5 Date {
      label = "";
   }
   attribute ExtD1 Date {
      label = "";
   }
   attribute ExtD2 Date {
      label = "";
   }
   attribute ExtD3 Date {
      label = "";
   }
   attribute ExtD4 Date {
      label = "";
   }
   attribute ExtD5 Date {
      label = "";
   }
   attribute N1 Number {
      label = "";
   }
   attribute N2 Number {
      label = "";
   }
   attribute N3 Number {
      label = "";
   }
   attribute N4 Number {
      label = "";
   }
   attribute N5 Number {
      label = "";
   }
   attribute N6 Number {
      label = "";
   }
   attribute N7 Number {
      label = "";
   }
   attribute N8 Number {
      label = "";
   }
   attribute N9 Number {
      label = "";
   }
   attribute N10 Number {
      label = "";
   }
   attribute N11 Number {
      label = "";
   }
   attribute N12 Number {
      label = "";
   }
   attribute N13 Number {
      label = "";
   }
   attribute N14 Number {
      label = "";
   }
   attribute N15 Number {
      label = "";
   }
   attribute N16 Number {
      label = "";
   }
   attribute N17 Number {
      label = "";
   }
   attribute N18 Number {
      label = "";
   }
   attribute N19 Number {
      label = "";
   }
   attribute N20 Number {
      label = "";
   }
   attribute ExtN1 Number {
      label = "";
   }
   attribute ExtN2 Number {
      label = "";
   }
   attribute ExtN3 Number {
      label = "";
   }
   attribute ExtN4 Number {
      label = "";
   }
   attribute ExtN5 Number {
      label = "";
   }
   attribute ExtN6 Number {
      label = "";
   }
   attribute ExtN7 Number {
      label = "";
   }
   attribute ExtN8 Number {
      label = "";
   }
   attribute ExtN9 Number {
      label = "";
   }
   attribute ExtN10 Number {
      label = "";
   }
   attribute ExtN11 Number {
      label = "";
   }
   attribute ExtN12 Number {
      label = "";
   }
   attribute ExtN13 Number {
      label = "";
   }
   attribute ExtN14 Number {
      label = "";
   }
   attribute ExtN15 Number {
      label = "";
   }
   attribute ExtN16 Number {
      label = "";
   }
   attribute ExtN17 Number {
      label = "";
   }
   attribute ExtN18 Number {
      label = "";
   }
   attribute ExtN19 Number {
      label = "";
   }
   attribute ExtN20 Number {
      label = "";
   }
}
--------------------------------- SUMMARIES ---------------------------------


-------------------------------- SINGLETONS ---------------------------------


