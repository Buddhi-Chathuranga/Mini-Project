fragment AddSupplierContactDialog;
component ENTERP;
layer Core;
description "Add Supplier Contact Dialog";

include fragment AddContactCommon;
include fragment SupplierInfoAddressPublicSelector;

----------------------------- CLIENT FRAGMENTS ------------------------------


---------------------------------- GROUPS -----------------------------------
group SupplierContactHeaderGroup for SupplierContactStructure {
   label = "";

   lov SupplierIdRef with ReferenceSupplierInfoGeneralSelector {
      size = Small;
      contactwidget {
         enabled = [true];
         source = Supplier;
         key = SupplierId;
      }
      editable = [IsNewSupplier = true];

   }
   lov SupplierAddressRef with ReferenceSupplierInfoAddressPublicSelector {
      preview = SupplierInfoAddressPublicCard;
      validate command {
         execute {
            if[AddressId = null] {
               set CopyAddress = false;
            }
         }
      }
   }
   field CopyAddress {
      editable = [AddressId != null];
   }
}


group SupplierContactDetailsGroup for SupplierContactStructure {
   label = "Contact";

   fieldset ContactDetailsFieldSet;
}


group CommunicationMethodGroup for SupplierContactStructure {
   label = "Communication Methods";

   fieldset CommunicationMethodsFieldSet;
}


---------------------------------- DIALOGS ----------------------------------
dialog AddSupplierContactDialog for SupplierContactStructure {
   label = "Add Supplier Contact";
   input(SupplierId, AddressId, IsNewSupplier);
   output(SupplierId, PersonId, AddressId);

   group SupplierContactHeaderGroup;
   group SupplierContactDetailsGroup;
   group CommunicationMethodGroup;

   command Ok {
      enabled = [FullName != null];
      execute {
         if [AddressId = null] {
            set CopyAddress = false;
         }
         if [PersonExists and(PersonId != null)] {
            call CreateSupplierContactForExistPerson(SupplierId,
            PersonId,
            AddressId,
            CopyAddress,
            Role);
            exit OK;
         }
         else {
            call CreateSupplierContact(SupplierId,
            PersonId,
            AddressId,
            CopyAddress,
            Role,
            FullName,
            FirstName,
            MiddleName,
            LastName,
            Title,
            Initials,
            Phone,
            Mobile,
            Email,
            Fax,
            Pager,
            Intercom,
            Www,
            Messenger) into PersonId;
            exit OK;
         }
         exit OK;
      }
   }
   command Cancel;
}


----------------------------------- CARDS -----------------------------------

--------------------------- PROJECTION FRAGMENTS ----------------------------

------------------------------ ENTITY DETAILS -------------------------------

---------------------------------- ACTIONS ----------------------------------
-- Supplier_Info_Contact_API.New__ and Contact_Util_API.Create_Contact methods are called. But the Check_Insert contains no security check
action CreateSupplierContact Text {
   initialcheck none;

   parameter SupplierId Text;
   parameter PersonId Text;
   parameter SupplierAddress Text;
   parameter CopyAddress Boolean;
   parameter Role Text;
   parameter FullName Text;
   parameter FirstName Text;
   parameter MiddleName Text;
   parameter LastName Text;
   parameter Title Text;
   parameter Initials Text;
   parameter Phone Text;
   parameter Mobile Text;
   parameter Email Text;
   parameter Fax Text;
   parameter Pager Text;
   parameter Intercom Text;
   parameter Www Text;
   parameter Messenger Text;

   ludependencies = SupplierInfoContact;
}


-- Supplier_Info_Contact_API.New is called but no security is hanlded in this method as well
action CreateSupplierContactForExistPerson {
   initialcheck none;

   parameter SupplierId Text;
   parameter PersonId Text;
   parameter SupplierAddress Text;
   parameter CopyAddress Boolean;
   parameter Role Text;

   ludependencies = SupplierInfoContact;
}


--------------------------------- FUNCTIONS ---------------------------------
function ActivePersons List < Entity(PersonInfoAll) > {
   where = "supplier_contact_db = 'TRUE' AND blocked_for_use_supplier_db = 'FALSE' AND objstate IN ('Active')";
}


-------------------------------- STRUCTURES ---------------------------------
structure SupplierContactStructure {
   attribute SupplierId Text {
      label = "Supplier";
   }
   attribute PersonId Text {
      label = "Person";
      format = uppercase;
   }
   attribute FullName Text {
      label = "Name";
   }
   attribute FirstName Text;
   attribute MiddleName Text;
   attribute LastName Text;
   attribute Initials Text;
   attribute Title Text;
   attribute Phone Text;
   attribute Mobile Text;
   attribute Email Text {
      label = "E-mail";
   }
   attribute Fax Text;
   attribute Www Text {
      label = "www";
   }
   attribute Messenger Text;
   attribute Pager Text {
      label = "Pager Number";
   }
   attribute Intercom Text;
   attribute CopyAddress Boolean("TRUE", "FALSE") {
      label = "Copy Address to Contact";
      required = [true];
   }
   attribute PersonExists Boolean("TRUE", "FALSE") {
      default = "'FALSE'";
   }
   attribute AddressId Text;
   attribute NewPerson Boolean("TRUE", "FALSE") {
      required = [true];
   }
   attribute RoleDb Text;
   attribute Role Text;
   attribute IsNewSupplier Text;

   reference PersonIdRef(PersonId) to PersonInfoAll(PersonId) {
      label = "Person";
   }
   reference SupplierIdRef(SupplierId) to SupplierInfoGeneral(SupplierId) {
      label = "Supplier";
   }
   reference SupplierAddressRef(SupplierId, AddressId) to SupplierInfoAddressPublic(SupplierId, AddressId) {
      label = "Supplier Address";
   }
   reference ContactRoleRef(RoleDb, Role) to ContactRoleDbLov(RoleDb, Description) {
      label = "Role";
      multireference = [true];
   }
}

