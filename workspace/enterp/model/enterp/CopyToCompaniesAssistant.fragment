fragment CopyToCompaniesAssistant;
component ENTERP;
layer Core;
description "Copy To Companies";

----------------------------- CLIENT FRAGMENTS ------------------------------

assistant CopyToCompaniesAssistant using CopyToCompanyVirtualSet {
   label = "Copy To Companies";
   savemode = OnLostFocus;
   input(Company, Lu, Type, KeyList, Package);

   steps {
      step {
         markdowntext {
            visible = [Type = "AUTOMATIC"];
            text = "This page has been selected to copy the basic data automatically in \"Basic Data Synchronization\" page.
The saved data will be copied to the selected companies. You may change the selection in this page.";
         }
         markdowntext {
            visible = [Type = "MANUAL"];
            text = "Select the companies to which you want to copy the selected basic data.";
         }
         list TargetCompanyList(TargetCompanyVirtualArray);
         group RunInBackgroundGroup;
      }
      final step {
         markdowntext {
            visible = [Status = "PARTIALLY_SUCCESSFUL"];
            text = "Several ${Window} were not synchronized to the target companies due to errors.";
         }
         markdowntext {
            visible = [Status = "ERROR"];
            text = "There were errors while synchronizing ${Window}.";
         }
         group CopyBasicDataLogGroup(CopyBasicDataLogs) {
            visible = [Status = "ERROR" or Status = "PARTIALLY_SUCCESSFUL"];
         }
         list CopyBasicDataLogDetailList(CopyBasicDataLogDetails) {
            visible = [Status = "ERROR" or Status = "PARTIALLY_SUCCESSFUL"];
         }
         command CloseCommand;
      }
      cancelled step {
      }
   }

   finish command {
      variable StructCopyToCompanyResultVar Structure(CopyToCompanyResultStructure);
      execute {
         call DoCopyToCompanies() into StructCopyToCompanyResultVar;
         if [StructCopyToCompanyResultVar.Executed] {
            if [RunInBackground] {
               info("Copy to Companies process is successfully added to the background.");
               exit OK;
            }
            else {
               if [StructCopyToCompanyResultVar.Status = "SUCCESSFUL"] {
                  info("The selected ${StructCopyToCompanyResultVar.Window} were successfully synchronized to the target companies.");
                  navigate back;
               }
            }
         }
         else {
            --error("Select one or more companies from the list to perform the Copy operation.");
            exit OK;
         }
      }
   }
   cancel command {
      execute {
         exit CANCEL;
      }
   }
   restart command {
      visible = [false];
   }
}


--------------------------------- COMMANDS ----------------------------------
command CloseCommand {
   label = "Close";
   execute {
      exit OK;
   }
}


--------------------------------- SELECTORS ---------------------------------

---------------------------------- GROUPS -----------------------------------
group RunInBackgroundGroup for CopyToCompanyVirtual {
   label = "";
   field RunInBackground;
}

group CopyBasicDataLogGroup for CopyBasicDataLog {
   label = "Basic Data Synchronization Log Detail";
   field LogId;
   lov CompanyRef with ReferenceCompanySelector {
      search = Company, Name;
      description = CompanyRef.Name;
   }
   field WindowName;
   field UserId;
}


----------------------------------- LISTS -----------------------------------
list TargetCompanyList for TargetCompanyVirtual {
   label = "";
   editmode = SingleCellEdit;
   crudactions {
      new {
         enabled = [false];
      }
      delete {
         enabled = [false];
      }
   }
   lov TargetCompanyRef with ReferenceCompanySelector {
      search = Company, Name;
      editable = [false];
      description = TargetCompanyRef.Name;
      size = Large;
   }
   field TargetCompanyRef.CountryName;
   field Include;
   field UpdateMethodTypeManual;
}

list CopyBasicDataLogDetailList for CopyBasicDataLogDetail {
   label = "";
   multiselect = [false];
   lov CompanyRef with ReferenceCompanySelector {
      search = Company, Name;
      description = CompanyRef.Name;
      size = Large;
   }
   field Value;
   field Status;
   field MessageText {
      size = Large;
   }
   field Timestamp;
}




--------------------------- PROJECTION FRAGMENTS ----------------------------
entityset CopyToCompanyVirtualSet for CopyToCompanyVirtual;


------------------------------ ENTITY DETAILS -------------------------------
@Override
entity CopyBasicDataLog {
   crud = Read;

   attribute LogId Number {
      label = "Log ID";
   }
   attribute UserId Text {
      label = "User ID";
   }
   attribute Status Text {
      label = "Copy Status";
      maxlength = 20;
   }
   attribute Timestamp Timestamp {
      label = "Time Stamp";
   }
   reference CompanyRef(SourceCompany) to Company(Company) {
      label = "Source Company";
   }
}

@Override
entity CopyBasicDataLogDetail {
   crud = Read;

   attribute Timestamp Timestamp {
      label = "Time Stamp";
   }
   attribute Status Text {
      label = "Copy Status";
      maxlength = 20;
   }
   attribute MessageText Text {
      label = "Error Message";
   }
   reference CompanyRef(TargetCompany) to Company(Company) {
      label = "Target Company";
   }
}

@Override
entity Company {
   attribute CountryName Text {
      label = "Country";
      fetch = "Country";
   }
}


------------------------------- ENUMERATIONS --------------------------------

---------------------------------- QUERIES ----------------------------------

---------------------------------- ACTIONS ----------------------------------

--------------------------------- FUNCTIONS ---------------------------------
function IsActiveLuExist Text {
   parameter Company Text;
   parameter LuName Text;
}


-------------------------------- STRUCTURES ---------------------------------
structure CopyToCompanyResultStructure {
   attribute Executed Boolean;
   attribute LogId Number;
   attribute Status Text;
   attribute Window Text;
}


--------------------------------- VIRTUALS ----------------------------------

virtual TargetCompanyVirtual {
   attribute TargetCompany Text {
      label = "Company";
      maxlength = 20;
   }
   attribute SourceCompany Text {
      label = "Company";
      maxlength = 20;
   }
   attribute Include Boolean("1", "0") {
      label = "Include in Copy";
      required = [true];
   }
   attribute UpdateMethodTypeManual Enumeration(SyncUpdateMethodType) {
      label = "Update Existing";
      required = [true];
   }
   reference TargetCompanyRef(TargetCompany) to Company(Company) {
      label = "Company";
   }
}

virtual CopyToCompanyVirtual {
   crud = Create, Read, Update, Delete;
   attribute Company Text;
   attribute Type Text;
   attribute Lu Text;
   attribute RunInBackground Boolean {
      required = [true];
   }
   attribute Package Text;
   attribute KeyList LongText {
      inlined = [true];
   }
   attribute UpdateAttrString Text;
   attribute LogId Number;
   attribute Status Text;
   attribute Window Text;

   array TargetCompanyVirtualArray() to TargetCompanyVirtual();
   array CopyBasicDataLogs(LogId) to CopyBasicDataLog(LogId);
   array CopyBasicDataLogDetails(LogId) to CopyBasicDataLogDetail(LogId);

   action DoCopyToCompanies Structure(CopyToCompanyResultStructure) {
   }
}


--------------------------------- SUMMARIES ---------------------------------

-------------------------------- SINGLETONS ---------------------------------

