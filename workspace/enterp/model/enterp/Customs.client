--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  210303  Smallk  FISPRING20-8769, Merged LCS Bug 157213.
-----------------------------------------------------------------------------
client Customs;
component ENTERP;
layer Core;
projection CustomsHandling;

include fragment AssociationInfoSelector;
include fragment CompanyPublicSelector;
include fragment CommunicationMethodsList;

warningsenabled = CustomsInfo, CheckDefaultCommMethod, CommMethod, CustomsInfoAddress, CustomsInfoAddressType;

----------------------------- NAVIGATOR ENTRIES -----------------------------
navigator {
   entry CustomsNavEntry parent EnterpNavigator.CustomsMenu at index 100 {
      label = "Customs";

      page Form home CustomsInfo selector CustomsInfoSelector;
      entry AddressInfoNavEntry;
      entry CommunicationMethodNavEntry;
   }
}


entry AddressInfoNavEntry {
   label = "Address";

   page AddressInfo selector CustomsInfoSelector;
}


entry CommunicationMethodNavEntry {
   label = "Communication Method";

   page CommunicationMethod selector CustomsInfoSelector;
}


-------------------------------- MAIN PAGES ---------------------------------
page Form using CustomsInfoSet {
   label = "Customs";

   selector CustomsInfoSelector;
   arrange {
      group CustomsInfoGroup bind CustomsInfoSelector;
      group CustomsGeneralInfoGroup bind CustomsInfoSelector;
   }
   list OurIdAtCustomsList(OurIds) bind CustomsInfoSelector;
}


page AddressInfo using CustomsInfoSet {
   label = "Address";
   crudactions {
      new {
         enabled = [false];
      }
      edit {
         enabled = [false];
      }
      delete {
         enabled = [false];
      }
   }
   selector CustomsInfoSelector;
   group CustomsInfoGroup;
   selector CustomsInfoAddressSelector(CustomsInfoAddresses) bind CustomsInfoSelector;
   group CustomsInfoAddressGroup bind CustomsInfoAddressSelector;
   arrange {
      group AddressGroup bind CustomsInfoAddressSelector;
      list AddressTypeList(AddressTypes) bind CustomsInfoAddressSelector;
   }
   list CommMethodAddressList(AddressCommunicationMethods) bind CustomsInfoAddressSelector;
}


page CommunicationMethod using CustomsInfoSet {
   label = "Communication Method";
   crudactions {
      new {
         enabled = [false];
      }
      edit {
         enabled = [false];
      }
      delete {
         enabled = [false];
      }
   }

   selector CustomsInfoSelector;
   group CustomsInfoGroup;
   list CommMethodList(CommunicationMethods) bind CustomsInfoSelector;
}


-------------------------------- ASSISTANTS ---------------------------------


--------------------------------- COMMANDS ----------------------------------
command AddDefaultAddressTypesCommand for CustomsInfoAddress {
   execute {
      if [CrudOperation = "create"] {
         call AddDefaultAddressTypes();
      }
   }
}


--------------------------------- SELECTORS ---------------------------------
@Override
selector CustomsInfoSelector for CustomsInfo {
   label = "${CustomsId} - ${Name} - ${AssociationNo}";
   static CustomsId;
   static Name;
   static AssociationNo;
}


@Override
selector CustomsInfoAddressSelector for CustomsInfoAddress {
   label = "Address ID: ${AddressId}";
   crudactions {
      after command AddDefaultAddressTypesCommand;
   }
   static CustomsId {
      visible = [false];
   }
   static AddressId;
   static Country;
   static City;
   static ZipCode;
   static EanLocation {
      visible = [false];
   }
   static ValidFrom {
      visible = [false];
   }
   static ValidTo {
      visible = [false];
   }
   static Address1 {
      visible = [false];
   }
   static Address2 {
      visible = [false];
   }
   static Address3 {
      visible = [false];
   }
   static Address4 {
      visible = [false];
   }
   static Address5 {
      visible = [false];
   }
   static Address6 {
      visible = [false];
   }
   static State {
      visible = [false];
   }
   static County {
      visible = [false];
   }
   static PartyType {
      visible = [false];
   }
   static CountryDesc {
      visible = [false];
   }
}


---------------------------------- GROUPS -----------------------------------
group CustomsInfoGroup for CustomsInfo {
   label = "";

   field CustomsId;
   field Name;
   lov AssociationNoRef with ReferenceAssociationInfoSelector {
      freeinput = [true];
   }
}


group CustomsGeneralInfoGroup for CustomsInfo {
   label = "General Information";

   field DefaultLanguage;
   field Country;
   field CreationDate {
      editable = [false];
   }
}


group CustomsInfoAddressGroup for CustomsInfoAddress {
   label = "";

   field AddressId {
      visible = [isNew];
   }
   field EanLocation;
}


group AddressGroup for CustomsInfoAddress {
   label = "General Address Information";

   field Country {
      validate command {
         execute {
            if [Country != null] {
               call FetchCountryDescription(Country) into CountryDesc;
            }
            else {
               set CountryDesc = null;
            }
         }
      }
   }
   daterangefield {
      startdate ValidFrom;
      enddate ValidTo;
      label = "Validity Period";
   }
   addressfield {
      address1 Address1;
      address2 Address2;
      address3 Address3;
      address4 Address4;
      address5 Address5;
      address6 Address6;
      city City;
      country CountryDesc;
      county County;
      state State;
      zipcode ZipCode;
      countrycode Country;
      label = "Address";
   }
}


----------------------------------- LISTS -----------------------------------
list OurIdAtCustomsList for CustomsInfoOurId {
   label = "Our ID at Customs";

   lov CompanyRef with ReferenceCompanyPublicSelector;
   field OurId;
}


list AddressTypeList for CustomsInfoAddressType {
   label = "Address Types";

   field AddressTypeCode;
   field DefAddress;
}


----------------------------------- CARDS -----------------------------------


---------------------------------- DIALOGS ----------------------------------


---------------------------------- CHARTS -----------------------------------


--------------------------------- CALENDARS ---------------------------------


---------------------------------- SHEETS -----------------------------------


----------------------------- STATE INDICATORS ------------------------------


----------------------------------- TREES -----------------------------------


---------------------------------- PLUGINS ----------------------------------


------------------------------- IMAGE VIEWERS -------------------------------

