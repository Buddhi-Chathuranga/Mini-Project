----------------------------------------------------------------------------
--
--  Dimension:  CustomerInfoAddress
--  Component:  ENTERP
--  LU:         DimCustomerInfoAddress
--
--  File        : MVEnterp_DimCustomerInfoAddress.cre
--  Purpose     : Create Materialized views, constraints and indexes for ENTERP BI Services
--  Localization: No translation needed.
--
--  IFS Developer Studio Template Version 3.0
--
--  NOTE! Do not edit!! This file is completely generated and will be
--        overwritten next time the corresponding model is saved.
-----------------------------------------------------------------------------

SET SERVEROUTPUT ON



-- ***** &MV - Start *****

DEFINE MV         = CUSTOMER_INFO_ADDRESS_MV
DEFINE TAB1       = CUSTOMER_INFO_ADDRESS_TAB

PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT a.customer_id                                                                                                               id,
              a.customer_id                                                                                                               code,
              t.def_address                                                                                                               def_address,
              t.address_type_code                                                                                                         address_type_code,
              a.valid_from                                                                                                                valid_from,
              a.valid_to                                                                                                                  valid_to,
              a.primary_contact                                                                                                           primary_contact,
              a.secondary_contact                                                                                                         secondary_contact,
              a.country                                                                                                                   country,
              a.address                                                                                                                   address,
              SUBSTR(a.address ||'', '' ||  SUBSTR(Iso_Country_API.Decode(country),1,100),1,2100)                                         geo_address,
              RTRIM(DECODE(CITY,NULL,NULL,CITY||'', '') ||
      DECODE(COUNTY,NULL,NULL,COUNTY||'', '') || DECODE(STATE,NULL,NULL,STATE||'', '') || SUBSTR(Iso_Country_API.Decode(country),1,100) ) geo_city,
              a.address1                                                                                                                  address1,
              a.address2                                                                                                                  address2,
              a.address3                                                                                                                  address3,
              a.address4                                                                                                                  address4,
              a.address5                                                                                                                  address5,
              a.address6                                                                                                                  address6,
              a.zip_code                                                                                                                  zip_code,
              a.city                                                                                                                      city,
              a.county                                                                                                                    county,
              a.state                                                                                                                     state,
              a.in_city                                                                                                                   in_city,
              ''Dummy''                                                                                                                   in_city_desc,
              a.jurisdiction_code                                                                                                         jurisdiction_code
       FROM   customer_info_address_Tab a,customer_info_address_type_tab t
       WHERE t.customer_id = a.customer_id
   AND t.address_id = a.address_id';
   EXECUTE IMMEDIATE stmt_;
END;
/

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'ID');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
-- ***** &MV - End *****
------------------------------------------------------------------
