---------------------------------------------------------------------------------------------
--  Module : ENTERP
--
--  Purpose: File for upgrade Enterp to 21.1.0
--
--  File   : 2110.upg
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  ------------------------------------------------------------------------
--  200914   hecolk  FISPRING20-7242, Created.
--  201120   Dakplk  FISPRING20-8262, Changed IFS Cloud version to 21R1.
--  ------   ------  ------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SET SERVEROUTPUT ON
exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','2110.upg','Timestamp_1');
PROMPT START upgrading WITH 2110.upg

---------------------------------------------------------------------------------------------
------------------------------ Instructions for upg files -----------------------------------
---------------------------------------------------------------------------------------------
--
--  Main section should contain all upgrade operations.
--  Next section should contain removal of obsolete objects (any removal of data inside upg is prohibited!).
--  Removal of backup tables and obsolete columns should be added to <component>Cl.sql script!
--
--  If possible, everything regarding one table should be placed in one section.
--  If this is not possible, a proper comment about the reason should be added.
--
--  Each section should be started with a "-----" line and a empty line.
--  This section should then start with a line like: "-- ***** Example_Tab Start *****"
--  and end with a line like:                       "-- ***** Example_Tab End *****"
--
--  Don't forget UPPER/lower case !
--
--  Every part inside the section should start with a "PROMPT" line explaining what is done by the block.
--
--  If the PL/SQL block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.
--
--  Remember ordinary coding standard rules !
--
--  Don't drop any Table/Column !
--
--  Don't forget performance when updating large table !
--
--  No unnecessary blank lines or comments !
--
--  If possible, use pure SQL commands
--
--  If possible, try to group several updates together in one statement.
--
--  Timestamps will be added automatically at the end of the project.
--
--  For more information refer to the "Upgrade Script Standards" and the "Performance" technical documents.
--
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ CREATE NEW SEQUENCES -----------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
--------------- CREATE/ALTER TABLES/INDEXES AND DATA CORRECTIONS ------------------
---------------------------------------------------------------------------------------------

-- ***** COMPANY_MV - Start *****
DEFINE MV         = COMPANY_MV
DEFINE TAB1       = COMPANY_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','2110.upg','Timestamp_2');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT company          id,
              company          code,
              a.company        company,
              a.name           name,
              a.country        country_code,
              a.association_no association_no
       FROM   &TAB1 a
       UNION ALL
       SELECT ''#''            id,
              NULL             code,
              NULL             company,
              NULL             name,
              NULL             country_code,
              NULL             association_no
       FROM BI_DUAL_TAB
       ';
   EXECUTE IMMEDIATE stmt_;

   dbms_output.put_line('Create constraint and index(s) on Materialized View &MV');

   constraint_name_ := table_name_||'_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Constraint( table_name_,
                               constraint_name_,
                               columns_,
                               'P',
                               '&IFSAPP_INDEX',
                                NULL,
                                TRUE,
                                TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'U',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX2';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'U',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
END;
/

UNDEFINE MV
UNDEFINE TAB
UNDEFINE TAB2
-- ***** COMPANY_MV - End *****

-----------------------------------------------------------------

-- ***** CUSTOMER_MV - Start *****
DEFINE TAB1    = CUSTOMER_INFO_TAB
DEFINE TAB2    = BI_DUAL_TAB
DEFINE MV      = CUSTOMER_MV

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','2110.upg','Timestamp_3');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
         'CREATE MATERIALIZED VIEW &MV
         TABLESPACE &IFSAPP_DATA
         BUILD DEFERRED
         USING NO INDEX
         REFRESH COMPLETE ON DEMAND
         EVALUATE USING CURRENT EDITION
         AS
    SELECT a.customer_id       id,
           a.customer_id       code,
           a.customer_id       customer,
           a.name              customer_name,
           a.country           country,
           a.creation_date     creation_date,
           a.association_no    association_no,
           a.default_language  default_language,
           a.corporate_form    corporate_form,
           ''NULL''            corporate_form_desc,
           a.customer_category customer_category
         FROM   &TAB1 a
         UNION ALL
    SELECT ''#''               id,
           NULL                code,
           NULL                customer,
           NULL                customer_name,
           NULL                country,
           NULL                creation_date,
           NULL                association_no,
           NULL                default_language,
           NULL                corporate_form,
           NULL                corporate_form_desc,
           NULL                customer_category
         FROM BI_DUAL_TAB
   ';
   EXECUTE IMMEDIATE stmt_;

   dbms_output.put_line('Create constraint and index(s) on Materialized View &MV');

   constraint_name_ := table_name_||'_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Constraint( table_name_,
                               constraint_name_,
                               columns_,
                               'P',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'U',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX2';
   Database_SYS.Set_Table_Column (columns_ , 'CUSTOMER');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'U',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
-- ***** CUSTOMER_MV - End *****

-------------------------------------------------------------------

-- ***** FORWARDER_MV - Begin *****
DEFINE TAB     = FORWARDER_INFO_TAB
DEFINE TAB2    = BI_DUAL_TAB
DEFINE MV      = FORWARDER_MV

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','2110.upg','Timestamp_4');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
      TABLESPACE &IFSAPP_DATA
      BUILD DEFERRED
      USING NO INDEX
      REFRESH COMPLETE ON DEMAND
      EVALUATE USING CURRENT EDITION
      AS
      SELECT a.forwarder_id             id,
             a.forwarder_id             code,
             a.forwarder_id             forwarder_id,
             a.name                     name,
             a.country                  country
      FROM &TAB a
      UNION ALL
      SELECT ''#''                      id,
             NULL                       code,
             NULL                       forwarder_id,
             NULL                       name,
             NULL                       country
      FROM &TAB2';

   EXECUTE IMMEDIATE stmt_;

   dbms_output.put_line('Create constraint and index(s) on Materialized View &MV');

   constraint_name_ := table_name_||'_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Constraint( table_name_,
                               constraint_name_,
                               columns_,
                               'P',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'U',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX2';
   Database_SYS.Set_Table_Column (columns_ , 'FORWARDER_ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'U',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
END;
/

UNDEFINE TAB
UNDEFINE MV
-- ***** FORWARDER_MV - End *****

-------------------------------------------------------------------

-- ***** CUSTOMER_CONTACT_MV - Start *****
DEFINE MV         = CUSTOMER_CONTACT_MV
DEFINE TAB1       = PERSON_INFO_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','2110.upg','Timestamp_5');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT person_id id,
              person_id person_id,
              name      name,
              country   country
       FROM   &TAB1
       UNION ALL
       SELECT ''#''     id,
              NULL      person_id,
              NULL      name,
              NULL      country
       FROM BI_DUAL_TAB
       ';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','2110.upg','Timestamp_6');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);

   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
-- ***** CUSTOMER_CONTACT_MV - End *****

------------------------------------------------------------------

-- ***** SUPPLIER_PROSPECT_MV - Start *****
DEFINE MV         = SUPPLIER_PROSPECT_MV
DEFINE TAB1       = SUPPLIER_INFO_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','2110.upg','Timestamp_7');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT a.supplier_id      id,
              a.supplier_id      code,
              a.name             supplier_name,
              a.country          country,
              a.creation_date    creation_date,
              a.association_no   association_no,
              a.default_language default_language,
              a.suppliers_own_id suppliers_own_id,
              a.corporate_form   corporate_form,
              ''Dummy''          corporate_form_desc
       FROM   &TAB1 a
       WHERE supplier_category=''PROSPECT''
       UNION ALL
       SELECT ''#''              id,
              NULL               code,
              NULL               supplier_name,
              NULL               country,
              NULL               creation_date,
              NULL               association_no,
              NULL               default_language,
              NULL               suppliers_own_id,
              NULL               corporate_form,
              NULL               corporate_form_desc
       FROM BI_DUAL_TAB
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','2110.upg','Timestamp_8');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);

   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
-- ***** SUPPLIER_PROSPECT_MV - End *****

-------------------------------------------------------------------

-- ***** CUSTOMER_INFO_ADDRESS_MV - Start *****
DEFINE MV         = CUSTOMER_INFO_ADDRESS_MV
DEFINE TAB1       = CUSTOMER_INFO_ADDRESS_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','2110.upg','Timestamp_9');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT a.customer_id                                                                                                               id,
              a.customer_id                                                                                                               code,
              t.def_address                                                                                                               def_address,
              t.address_type_code                                                                                                         address_type_code,
              a.valid_from                                                                                                                valid_from,
              a.valid_to                                                                                                                  valid_to,
              a.primary_contact                                                                                                           primary_contact,
              a.secondary_contact                                                                                                         secondary_contact,
              a.country                                                                                                                   country,
              a.address                                                                                                                   address,
              SUBSTR(a.address ||'', '' ||  SUBSTR(Iso_Country_API.Decode(country),1,100),1,2100)                                         geo_address,
              RTRIM(DECODE(CITY,NULL,NULL,CITY||'', '') ||
      DECODE(COUNTY,NULL,NULL,COUNTY||'', '') || DECODE(STATE,NULL,NULL,STATE||'', '') || SUBSTR(Iso_Country_API.Decode(country),1,100) ) geo_city,
              a.address1                                                                                                                  address1,
              a.address2                                                                                                                  address2,
              a.address3                                                                                                                  address3,
              a.address4                                                                                                                  address4,
              a.address5                                                                                                                  address5,
              a.address6                                                                                                                  address6,
              a.zip_code                                                                                                                  zip_code,
              a.city                                                                                                                      city,
              a.county                                                                                                                    county,
              a.state                                                                                                                     state,
              a.in_city                                                                                                                   in_city,
              ''Dummy''                                                                                                                   in_city_desc,
              a.jurisdiction_code                                                                                                         jurisdiction_code
       FROM   customer_info_address_Tab a,customer_info_address_type_tab t
       WHERE t.customer_id = a.customer_id
   AND t.address_id = a.address_id';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','2110.upg','Timestamp_10');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'ID');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
-- ***** CUSTOMER_INFO_ADDRESS_MV - End *****

-------------------------------------------------------------------

-- ***** EMPLOYEE_MV - Start *****
DEFINE MV         = EMPLOYEE_MV
DEFINE TAB1       = COMPANY_EMP_TAB
DEFINE TAB2       = COMPANY_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','2110.upg','Timestamp_11');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.employee_id                                                                                                                                id,
              a.company                                                                                                                                                      company,
              a.employee_id                                                                                                                                                  code,
              SUBSTR(b.name,1,100)                                                                                                                                           employee_name,
              a.person_id                                                                                                                                                    person_id,
              SUBSTR(Person_Info_Address_API.Get_Country(a.person_id,Person_Info_Address_API.Get_Default_Address(a.person_id,Address_Type_Code_API.Decode(''HOME''))),1,100) country
       FROM   COMPANY_EMP_TAB a, PERSON_INFO_TAB b
       WHERE a.person_id = b.person_id
   UNION ALL
   SELECT company||''^''||''#''                                                                                                                                          id,
   company                                                                                                                                                        company,
   NULL                                                                                                                                                           code,
   NULL                                                                                                                                                           employee_name,
   NULL                                                                                                                                                           person_id,
   NULL                                                                                                                                                           country
   FROM   COMPANY_TAB
   UNION ALL
   SELECT a.company || ''^'' || ''*''                                                                                                                                id,
   a.company                                                                                                                                                     company,
   ''*''                                                                                                                                                           code,
   NULL                                                                                                                                                          employee_name,
   NULL                                                                                                                                                          person_id,
   NULL                                                                                                                                                          country
   FROM COMPANY_TAB a
   WHERE a.company NOT IN (SELECT DISTINCT(t.company) FROM COMPANY_EMP_TAB t WHERE t.employee_id = ''*'')
   UNION ALL
   SELECT ''#''||''^''||''#''                                                                                                                                            id,
   NULL                                                                                                                                                           company,
   NULL                                                                                                                                                           code,
   NULL                                                                                                                                                           employee_name,
   NULL                                                                                                                                                           person_id,
   NULL                                                                                                                                                           country
   FROM BI_DUAL_TAB';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','2110.upg','Timestamp_12');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN

   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'CODE');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
-- ***** EMPLOYEE_MV - End *****

-------------------------------------------------------------------

-- ***** SUPPLIER_MV - Start *****
DEFINE MV         = SUPPLIER_MV
DEFINE TAB1       = SUPPLIER_INFO_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','2110.upg','Timestamp_13');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT a.supplier_id      id,
              a.supplier_id      code,
              a.name             supplier_name,
              a.country          country,
              a.creation_date    creation_date,
              a.association_no   association_no,
              a.default_language default_language,
              a.suppliers_own_id suppliers_own_id,
              a.corporate_form   corporate_form,
              ''Dummy''          corporate_form_desc
       FROM   &TAB1 a
       WHERE supplier_category=''SUPPLIER''
       UNION ALL
       SELECT ''#''              id,
              NULL               code,
              NULL               supplier_name,
              NULL               country,
              NULL               creation_date,
              NULL               association_no,
              NULL               default_language,
              NULL               suppliers_own_id,
              NULL               corporate_form,
              NULL               corporate_form_desc
       FROM BI_DUAL_TAB
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','2110.upg','Timestamp_14');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN

   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_UX1';
   Database_SYS.Set_Table_Column (columns_, 'CODE');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'U',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
-- ***** SUPPLIER_MV - End *****

-------------------------------------------------------------------

---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME OBSOLETE TABLES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE RPT TABLES/COLUMNS -----------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE TEMPORARY TABLES -------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE VIEWS ------------------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE INDEXES/SEQUENCES ------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------
------------------------------ RENAME INDEXES/CONSTRAINTS  ----------------------------------
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','2110.upg','Timestamp_15');
PROMPT Upgrade statements IN FILE 2110.upg ends here.

-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','2110.upg','Done');
