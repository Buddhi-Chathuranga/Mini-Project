----------------------------------------------------------------------------
--
--  Dimension:  Employee
--  Component:  ENTERP
--  LU:         DimEmployee
--
--  File        : MVEnterp_DimEmployee.cre
--  Purpose     : Create Materialized views, constraints and indexes for ENTERP BI Services
--  Localization: No translation needed.
--
--  IFS Developer Studio Template Version 3.0
--
--  NOTE! Do not edit!! This file is completely generated and will be
--        overwritten next time the corresponding model is saved.
-----------------------------------------------------------------------------

SET SERVEROUTPUT ON



-- ***** &MV - Start *****

DEFINE MV         = EMPLOYEE_MV
DEFINE TAB1       = COMPANY_EMP_TAB
DEFINE TAB2       = COMPANY_TAB

PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.employee_id                                                                                                                                id,
              a.company                                                                                                                                                      company,
              a.employee_id                                                                                                                                                  code,
              SUBSTR(b.name,1,100)                                                                                                                                           employee_name,
              a.person_id                                                                                                                                                    person_id,
              SUBSTR(Person_Info_Address_API.Get_Country(a.person_id,Person_Info_Address_API.Get_Default_Address(a.person_id,Address_Type_Code_API.Decode(''HOME''))),1,100) country
       FROM   COMPANY_EMP_TAB a, PERSON_INFO_TAB b
       WHERE a.person_id = b.person_id
   UNION ALL
   SELECT company||''^''||''#''                                                                                                                                          id,
   company                                                                                                                                                        company,
   NULL                                                                                                                                                           code,
   NULL                                                                                                                                                           employee_name,
   NULL                                                                                                                                                           person_id,
   NULL                                                                                                                                                           country
   FROM   COMPANY_TAB
   UNION ALL
   SELECT a.company || ''^'' || ''*''                                                                                                                                id,
   a.company                                                                                                                                                     company,
   ''*''                                                                                                                                                           code,
   NULL                                                                                                                                                          employee_name,
   NULL                                                                                                                                                          person_id,
   NULL                                                                                                                                                          country
   FROM COMPANY_TAB a
   WHERE a.company NOT IN (SELECT DISTINCT(t.company) FROM COMPANY_EMP_TAB t WHERE t.employee_id = ''*'')
   UNION ALL
   SELECT ''#''||''^''||''#''                                                                                                                                            id,
   NULL                                                                                                                                                           company,
   NULL                                                                                                                                                           code,
   NULL                                                                                                                                                           employee_name,
   NULL                                                                                                                                                           person_id,
   NULL                                                                                                                                                           country
   FROM BI_DUAL_TAB';
   EXECUTE IMMEDIATE stmt_;
END;
/

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN

   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'CODE');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
-- ***** &MV - End *****
------------------------------------------------------------------
