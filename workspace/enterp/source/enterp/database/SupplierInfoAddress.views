-----------------------------------------------------------------------------
--
--  Logical unit: SupplierInfoAddress
--  Component:    ENTERP
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  151218  ILSOLK  STRSA-1705,Created new view Supp_Info_Del_Visit_Addr_Pub.
--  160419  ChguLK  STRLOC-347, Added new attributes address3,address4,address5,address6.
--  210202  KUGNLK  FISPRING20-8938, Added WHERE clause to Supplier_One_Time_Address_Pub to check validity of addresses.
--  211124  Chgulk  FI21R2-4512  Removed obsolete views.
--  211126  Chgulk  FI21R2-4383, Added row-level security
-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

@Override
COLUMN Country_Db IS
   Datatype   = 'STRING(20)';

COLUMN Address_Lov IS
   Flags      = 'A---L'
   Datatype   = 'STRING(2000)'
   Prompt     = 'Address';

COLUMN Def_Address IS
   Flags      = 'A---L'
   Datatype   = 'BOOLEAN'
   Prompt     = 'Default Address';

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------

@DbViewRowLevelSecurity NotRequired
VIEW Supplier_Info_Address_Public IS
   Prompt = 'Supplier Info Address'
   Zip_Code.Datatype = 'STRING(35)'
SELECT supplier_id                                        supplier_id,
       address_id                                         address_id,
       name                                               name,
       address                                            address,
       ean_location                                       ean_location,
       valid_from                                         valid_from,
       valid_to                                           valid_to,
       party                                              party,
       REPLACE(REPLACE(address,CHR(13),''),CHR(10),' ')   address_lov,
       default_domain                                     default_domain,
       Iso_Country_API.Decode(country)                    country,
       country                                            country_db,
       Party_Type_API.Decode(party_type)                  party_type,
       party_type                                         party_type_db,
       address1                                           address1,
       address2                                           address2,
       address3                                           address3,
       address4                                           address4,
       address5                                           address5,
       address6                                           address6,
       zip_code                                           zip_code,
       city                                               city,
       county                                             county,
       state                                              state,
       comm_id                                            comm_id,
       Output_Media_Type_API.Decode(output_media)         output_media,
       output_media                                       output_media_db,
       ROWID                                              objid,
       TO_CHAR(rowversion)                                objversion,
       rowkey                                             objkey
FROM   supplier_info_address_tab;

@DbViewRowLevelSecurity NotRequired
VIEW Supplier_Info_Addr_Inv_Pub_Lov IS
   Prompt = 'Supplier Info Document Address'
   Supplier_Id.Flags = 'P----'
   Supplier_Id.Prompt = 'Supplier ID'
   Address_Id.Flags = 'K---L'
   Address_Id.Prompt = 'Address ID'
   Name.Flags = 'A---L'
   Valid_From.Flags = 'A---L'
   Valid_To.Flags = 'A---L'
SELECT a.supplier_id                                          supplier_id,
       a.address_id                                           address_id,
       a.name                                                 name,
       t.def_address                                          def_address,
       REPLACE(REPLACE(a.address,CHR(13),''),CHR(10),' ')     address_lov,
       a.valid_from                                           valid_from,
       a.valid_to                                             valid_to       
FROM   supplier_info_address_type_tab t, supplier_info_address_tab a
WHERE  a.supplier_id  = t.supplier_id
AND    a.address_id   = t.address_id
AND    t.address_type_code = 'INVOICE'
AND    TRUNC(SYSDATE) BETWEEN NVL(valid_from, Database_SYS.Get_First_Calendar_Date())
                      AND     NVL(valid_to,   Database_SYS.Get_Last_Calendar_Date());

@DbViewRowLevelSecurity NotRequired
VIEW Supplier_One_Time_Address_Pub IS
   Prompt = 'Customer Info Address'
   Supplier_Id.Prompt = 'Supplier ID'
   Name.Flags = 'KMI-L'
   Address_Id.Flags = 'A---L'
   Address_Id.Prompt = 'Address ID'
   Address1.Flags = 'A---L'
   Address1.Prompt = 'Address 1'
   Address2.Flags = 'A---L'
   Address2.Prompt = 'Address 2'
   Address3.Flags = 'A---L'
   Address3.Prompt = 'Address 3'
   Address4.Flags = 'A---L'
   Address4.Prompt = 'Address 4'
   Address5.Flags = 'A---L'
   Address5.Prompt = 'Address 5'
   Address6.Flags = 'A---L'
   Address6.Prompt = 'Address 6'
   Zip_Code.Flags = 'A---L'
   City.Flags = 'A---L'
   County.Flags = 'A---L'
   State.Flags = 'A---L'
   Country.Flags = 'A---L'
SELECT supplier_id                     supplier_id,
       name                            name,
       address_id                      address_id,
       address1                        address1,
       address2                        address2,
       address3                        address3,
       address4                        address4,
       address5                        address5,
       address6                        address6,
       zip_code                        zip_code,
       city                            city,
       county                          county,
       state                           state,
       Iso_Country_API.Decode(country) country,
       country                         country_db
FROM   supplier_info_address_tab
WHERE  TRUNC(SYSDATE) BETWEEN NVL(valid_from, Database_SYS.Get_First_Calendar_Date())
                      AND     NVL(valid_to,   Database_SYS.Get_Last_Calendar_Date());

@DbViewRowLevelSecurity NotRequired
VIEW Supplier_Info_Address_Pay_Lov IS
   Prompt = 'Supplier Info Address Lov'
   Supplier_Id.Flags = 'P----'
   Address_Id.Flags = 'K---L'
   Name.Flags = 'A---L'
SELECT a.supplier_id                                        supplier_id,
       a.address_id                                         address_id,
       a.name                                               name,
       t.def_address                                        def_address,
       REPLACE(REPLACE(a.address,CHR(13),''),CHR(10),' ')   address_lov,
       a.rowkey                                             objkey
FROM   supplier_info_address_type_tab t, supplier_info_address_tab a
WHERE  a.supplier_id       = t.supplier_id
AND    a.address_id        = t.address_id
AND    t.address_type_code = 'PAY';

@DbViewRowLevelSecurity NotRequired
VIEW Supplier_Info_Addr_Del_Pub_Lov IS
   Def_Address.Datatype = 'BOOLEAN("TRUE", "FALSE")'
SELECT a.supplier_id                                          supplier_id,
       a.address_id                                           address_id,
       a.name                                                 name,
       t.def_address                                          def_address,
       REPLACE(REPLACE(a.address,CHR(13),''),CHR(10),' ')     address_lov,
       a.valid_from                                           valid_from,
       a.valid_to                                             valid_to       
FROM   supplier_info_address_type_tab t, supplier_info_address_tab a
WHERE  a.supplier_id  = t.supplier_id
AND    a.address_id   = t.address_id
AND    t.address_type_code = 'DELIVERY'
AND    TRUNC(SYSDATE) BETWEEN NVL(valid_from, Database_SYS.Get_First_Calendar_Date())
                      AND     NVL(valid_to,   Database_SYS.Get_Last_Calendar_Date());
                      
-------------------- PRIVATE VIEW DEFINITIONS -------------------------------