-----------------------------------------------------------------------------
--  Module : ENTERP
--
--  Purpose: File for upgrading Enterprise Versions 2.1.0-GET, 3.0.0-GET to IFS CLOUD
--
--  File   : GET_TO_CLOUD.UPG
--
--  IFS/Design Template Version 2.3
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  191001  ShKolk  Created.
--  201120  Dakplk  FISPRING20-8262, Changed IFS Cloud version to 21R1.
--  210512  Hecolk  FI21R2-1080, Renamed 2110_GET.upg to GET_TO_CLOUD.upg and merged relevant CDBs to section 2.2
--  210519  Kagalk  FI21R2-1437, Renamed LCC parameter CO_IVC_CURR_RATE_VOUCHER_DATE to OUT_INV_CURR_RATE_VOUCHER_DATE.
--  210915  Shdilk  FI21R2-3955, Added sections 2.3 and 3.3.
--  211006  Jratlk  FI21R2-4734, Renamed LCC parameter SK_VAT_REPORTING to SK_TAX_REPORTING.
--  211109  Kgamlk  FI21R2-6998, Renamed LCC parameter CZ_VAT_REPORTING to CZ_TAX_REPORTING.
--  211130  Alwolk  FI21R2-7690, Renamed LCC Parameter CASH_BOX_REPORT_ENHANCEMENT to CASH_BOX_RECEIPT_ENHANCEMENT.
--  211206  Ajpelk  FI21R2-7237, Upgrade Handling, rename column date_of_registration then data update will be done automatically.
--  220103  Dipelk  FI21R2-6998, Renamed LCC parameter INVOICE_E-REPORTING to E-INVOICING_COMPLIANCE.
-----------------------------------------------------------------------------

SET SERVEROUTPUT ON

DEFINE MODULE       = 'ENTERP'
DEFINE GET9VERSION  = 2.1.0-GET
DEFINE GET10VERSION = 3.0.0-GET

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_1');
PROMPT Starting GET_TO_CLOUD.upg

------------------------------------------------------------------------------------------

-- Instructions for upg files:

-- If possible, everything regarding one table should be placed in one section.
-- If this is not possible, a proper comment about the reason should be added.

-- Each section should be started with a "-" line and a empty line.
-- The section should then start with a line like: "-- ***** Example_Tab Start *****"
-- and end with a line like:                       "-- ***** Example_Tab End *****"
-- The "start tag" (in this case "Example_Tab"), should be placed in "List of upgrade sections".
-- Don't forget UPPER/lower case !

-- Every part inside the section should start with a "PROMPT" line.

-- If the Pl block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.
-- If the Pl block not has DML instructions, there should not be a "COMMIT;" line after the block.

-- Remember ordinary coding standard rules !

-- Don't drop any column in an upgrade file !

-- Don't forget performance when updating large tabled !

-- No unnecessary blank lines or comments !

-- If possible, use pure SQL update
-- If possible, try to put several updates together in one statement.

-----------------------------------------------------------------------------------------

-- LIST OF  SECTIONS
--
-- SECTION 1 : Handling upgrade from GET9 to GET10 RTM
--    List of upgrade sections - Localization_Parameter_Tab
--                               Localization_Country_Param_Tab
--                               Company_Localization_Tab
--                               Local_Uom_Code_Tab
--                               Local_Country_Code_Tab
--                               Branch_Tab
--                               State_Codes_Tab
--                               Supplier_Info_Address_Tab
--                               Info_Services_Rpt
--
--                               Company_Localization_Tab
--                               Zip_Code_Tab
--                               Branch_Tab
--                               Customer_Info_Address_Tab
--                               Supplier_Info_Address_Tab
--
-- SECTION 2 - Handling Upgrade from GET10 RTM to development base per each version
-- 2.1 List of upgrade sections From GET10 RTM to GET10 UPD6
--                               Corporate_Form_Tab
--                               Localization_Country_Param_Tab
--                               Localization_Parameter_Tab
--                               Company_Localization_Tab
--                               Info_Services_Rpt
--                               Company_Tab
--                               Digital_Key_Store_Info_Tab
--                               Tax_Id_Number_Setup_Tab
--                               Tax_Type_Category_Tab
-- 2.2 List of upgrade sections from GET10 UPD6 to GET10 UPD11
--                               Localization_Parameter_Tab
--                               Localization_Country_Param_Tab
--                               Company_Localization_info_Tab
--                               language_sys_tab
--                               Info_Services_Rpt
-- 2.3 List of upgrade sections from GET10 UPD11 to GET10 UPD13
--
-- SECTION 3 - IFS CLOUD related GET DB Changes
-- 3.1 List of upgrade sections 21R1-
--                               Company_Localization_Tab
--                               Company_Localization_Info_Tab
-- 3.2 List of upgrade sections 21R2-
--                               Localization_Parameter_Tab
--                               Localization_Country_Param_Tab
--                               Company_Localization_Info_Tab
--                               Language_Sys_Tab
-- 3.3 List of upgrade sections 22R1-
--                               Customer_Info_Tab

-----------------------------------------------------------------------------------------
------------- SECTION 1 : Handling upgrade from GET9 to GET10 RTM start here ------------
-----------------------------------------------------------------------------------------

-- ***** Localization_Parameter_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_2');
PROMPT Adding column parameter_no to the table localization_parameter_tab
DECLARE
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := 'LOCALIZATION_PARAMETER_TAB';
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      -- gelr:localization_control_center, begin
      column_ := Database_SYS.Set_Column_Values('PARAMETER_NO', 'NUMBER', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      -- gelr:localization_control_center, end
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_3');
PROMPT Updating records with dummy numbers
DECLARE
   stmt_ VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      -- gelr:localization_control_center, begin
      stmt_ := 'UPDATE localization_parameter_tab
                SET parameter_no = ROWNUM+1000
                WHERE parameter_no IS NULL';
      EXECUTE IMMEDIATE  stmt_;
      COMMIT;
      -- gelr:localization_control_center, end
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_4');
PROMPT Making parameter_no a mandatory column in localization_parameter_tab
DECLARE
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := 'LOCALIZATION_PARAMETER_TAB';
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      -- gelr:localization_control_center, begin
      column_ := Database_SYS.Set_Column_Values('PARAMETER_NO', 'NUMBER', 'N');
      Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
      -- gelr:localization_control_center, end
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** Localization_Parameter_Tab End *****

-----------------------------------------------------------------------------------------

-- ***** Localization_Country_Param_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_5');
PROMPT Removing the mandatory flag from localization parameter additional_tax_numbers in localization_country_param_tab
DECLARE
   stmt_ VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      -- gelr:in_hsn_sac_codes, begin
      stmt_ := 'UPDATE localization_country_param_tab
                SET mandatory = ''N''
                WHERE localization = ''IN''
                AND   parameter    = ''ADDITIONAL_TAX_NUMBERS''';
      EXECUTE IMMEDIATE stmt_;
      COMMIT;
      -- gelr:in_hsn_sac_codes, end
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_6');
PROMPT Removing localization parameter free_of_charge from India
DECLARE
   stmt_ VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      -- gelr:in_hsn_sac_codes, begin
      stmt_ := 'DELETE FROM LOCALIZATION_COUNTRY_PARAM_TAB
                WHERE LOCALIZATION = ''IN''
                AND PARAMETER      = ''FREE_OF_CHARGE''';
      EXECUTE IMMEDIATE stmt_;
      COMMIT;
      -- gelr:in_hsn_sac_codes, end
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_7');
PROMPT Removing the mandatory flag from form_340
DECLARE
   stmt_ VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      -- gelr:form_340, begin
      stmt_ := 'UPDATE LOCALIZATION_COUNTRY_PARAM_TAB
                SET MANDATORY = ''N''
                WHERE LOCALIZATION = ''ES''
                AND   PARAMETER    = ''FORM_340''';
      EXECUTE IMMEDIATE stmt_;
      COMMIT;
      -- gelr:form_340, end
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** Localization_Country_Param_Tab End *****

-----------------------------------------------------------------------------------------

-- ***** Company_Localization_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_8');
PROMPT Making column localization obsolete in the table company_localization_tab
DECLARE
   table_name_ VARCHAR2(30) := 'COMPANY_LOCALIZATION_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      IF (Database_SYS.Column_Exist(table_name_, 'LOCALIZATION')) THEN
         -- obsolute column have to be nullable
         column_ := Database_SYS.Set_Column_Values('LOCALIZATION', 'VARCHAR2(20)', 'Y');
         Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);

         -- To emphasize the column from previous primary key is obsolete and shouldn't be use anymore I rename it.
         Database_SYS.Rename_Column(table_name_, 'LOCALIZATION_210', 'LOCALIZATION', show_info_ => TRUE);
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** Company_Localization_Tab End *****

-----------------------------------------------------------------------------------------

-- ***** Local_Uom_Code_Tab Start *****

-- gelr:schet_faktura_printout, begin
exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_9');
PROMPT Adding table local_uom_code_tab
DECLARE
   table_name_ VARCHAR2(30) := 'LOCAL_UOM_CODE_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY',          'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'UNIT_CODE',        'VARCHAR2(30)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'LOCAL_UOM_CODE',   'VARCHAR2(10)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'NUMERIC_UOM_CODE', 'VARCHAR2(10)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION',       'DATE',         'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY',           'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_10');
PROMPT Adding primary key index to the table local_uom_code_tab
DECLARE
   index_name_ VARCHAR2(30) := 'LOCAL_UOM_CODE_PK';
   table_name_ VARCHAR2(30) := 'LOCAL_UOM_CODE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'UNIT_CODE');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_11');
PROMPT Adding rowkey index to the table local_uom_code_tab
DECLARE
   index_name_ VARCHAR2(30) := 'LOCAL_UOM_CODE_RK';
   table_name_ VARCHAR2(30) := 'LOCAL_UOM_CODE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/
-- gelr:schet_faktura_printout, end

-- ***** Local_Uom_Code_Tab End *****

-----------------------------------------------------------------------------------------

-- ***** Local_Country_Code_Tab Start *****

-- gelr:schet_faktura_printout, begin
exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_12');
PROMPT Adding table local_country_code_tab
DECLARE
   table_name_ VARCHAR2(30) := 'LOCAL_COUNTRY_CODE_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY',            'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY_CODE',       'VARCHAR2(2)',  'N');
      Database_SYS.Set_Table_Column(columns_, 'LOCAL_COUNTRY_CODE', 'VARCHAR2(10)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION',         'DATE',         'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY',             'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_13');
PROMPT Adding primary key index to the table local_country_code_tab
DECLARE
   index_name_ VARCHAR2(30) := 'LOCAL_COUNTRY_CODE_PK';
   table_name_ VARCHAR2(30) := 'LOCAL_COUNTRY_CODE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY_CODE');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_14');
PROMPT Adding rowkey index to the table local_country_code_tab
DECLARE
   index_name_ VARCHAR2(30) := 'LOCAL_COUNTRY_CODE_RK';
   table_name_ VARCHAR2(30) := 'LOCAL_COUNTRY_CODE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/
-- gelr:schet_faktura_printout, end

-- ***** Local_Country_Code_Tab End *****

-----------------------------------------------------------------------------------------

-- ***** Branch_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_15');
PROMPT Adding new columns tax_id_type and company_tax_id_number to branch_tab
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'BRANCH_TAB';
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table( columns_ );
      -- gelr:in_gstin_number, begin
      Database_SYS.Set_Table_Column(columns_, 'TAX_ID_TYPE',           'VARCHAR2(10)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'COMPANY_TAX_ID_NUMBER', 'VARCHAR2(50)', 'Y');
      -- gelr:in_gstin_number, end
      Database_SYS.Alter_Table(table_name_, columns_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** Branch_Tab End *****

-----------------------------------------------------------------------------------------

-- ***** State_Codes_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_16');
PROMPT Adding column state_code_number to the table state_codes_tab
DECLARE
   columns_    Database_SYS.ColumnTabType;
   table_name_ VARCHAR2(30) := 'STATE_CODES_TAB';
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table( columns_ );
      -- gelr:in_hsn_sac_codes, begin
      Database_SYS.Set_Table_Column(columns_, 'STATE_CODE_NUMBER', 'VARCHAR2(35)', 'Y');
      -- gelr:in_hsn_sac_codes, end
      Database_SYS.Alter_Table(table_name_, columns_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** State_Codes_Tab End *****

-----------------------------------------------------------------------------------------

-- ***** Supplier_Info_Address_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_17');
PROMPT Adding column address_detail to the table supplier_info_address_tab
DECLARE
   column_     Database_SYS.ColRec;
   table_name_ VARCHAR2(30) := 'SUPPLIER_INFO_ADDRESS_TAB';
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      column_ := Database_SYS.Set_Column_Values('ADDRESS_DETAIL', 'VARCHAR2(2000)');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** Supplier_Info_Address_Tab End *****

-----------------------------------------------------------------------------------------

-- ***** Info_Services_Rpt Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_18');
PROMPT Adding columns ext_n1, ext_n2, ext_d1, ext_s1 .. ext_s10 to the report table info_services_rpt
DECLARE
   table_name_ VARCHAR2(30) := 'INFO_SERVICES_RPT';
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      column_ := Database_SYS.Set_Column_Values('EXT_N1', 'NUMBER', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

      column_ := Database_SYS.Set_Column_Values('EXT_N2', 'NUMBER', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

      column_ := Database_SYS.Set_Column_Values('EXT_D1', 'DATE', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

      column_ := Database_SYS.Set_Column_Values('EXT_S1', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

      column_ := Database_SYS.Set_Column_Values('EXT_S2', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

      column_ := Database_SYS.Set_Column_Values('EXT_S3', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

      column_ := Database_SYS.Set_Column_Values('EXT_S4', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

      column_ := Database_SYS.Set_Column_Values('EXT_S5', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

      column_ := Database_SYS.Set_Column_Values('EXT_S6', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

      column_ := Database_SYS.Set_Column_Values('EXT_S7', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

      column_ := Database_SYS.Set_Column_Values('EXT_S8', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

      column_ := Database_SYS.Set_Column_Values('EXT_S9', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

      column_ := Database_SYS.Set_Column_Values('EXT_S10', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_19');
PROMPT Recreating report view info_services_rpv
DECLARE
   PROCEDURE Create_RPV_View(
      table_name_ IN VARCHAR2,
      view_name_  IN VARCHAR2,
      lu_         IN VARCHAR2,
      prompt_     IN VARCHAR2,
      module_     IN VARCHAR2)
   IS
      stmt_     VARCHAR2(2000);
      err_text_ VARCHAR2(200);
   BEGIN
      stmt_  := 'CREATE OR REPLACE VIEW ' || view_name_ ||' AS
                        SELECT *
                        FROM   ' || table_name_ || ' t
                        WHERE EXISTS ( SELECT 1
                                       FROM   allowed_report a
                                       WHERE  a.result_key = t.result_key )
                  WITH read only';

      dbms_output.put_line (' Creating View ' || view_name_ );
      EXECUTE IMMEDIATE stmt_;
      dbms_output.put_line (' View Created ');
      stmt_ := 'COMMENT ON TABLE '||view_name_||' IS ''LU='||lu_||'^PROMPT='||prompt_||'^MODULE='||module_||'^''';
      dbms_output.put_line (stmt_);
      EXECUTE IMMEDIATE stmt_;
      dbms_output.put_line (' View Comment Created ');
   EXCEPTION
      WHEN OTHERS THEN
         err_text_ := substr(SQLERRM, 1, 200);
         dbms_output.put_line (' Following Error occured while creating view ' || view_name_);
         dbms_output.put_line (err_text_);
   END Create_RPV_View;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Create_RPV_View('INFO_SERVICES_RPT','INFO_SERVICES_RPV','ArchiveDistribution','Raw data view for Info Services','FNDBAS');
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** Info_Services_Rpt End *****

----------------------------- Upgrade sections for Loc2Core starts here -----------------

-- ***** Company_Localization_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_20');
PROMPT Removing localization parameter free_of_charge from Indian companies
DECLARE
   stmt_ VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      -- gelr:in_hsn_sac_codes, begin
      stmt_ := 'DELETE FROM COMPANY_LOCALIZATION_TAB
                WHERE  parameter = ''FREE_OF_CHARGE''
                AND    company IN (SELECT company
                                   FROM  company_tab
                                   WHERE localization_country = ''IN'')';
      EXECUTE IMMEDIATE stmt_;
      COMMIT;
      -- gelr:in_hsn_sac_codes, end
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** Company_Localization_Tab End *****

-----------------------------------------------------------------------------------------

-- ***** Zip_Code_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_21');
PROMPT Inserting data to zip_code_tab from zip_code_range_210
DECLARE
   stmt_ VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      IF (Database_SYS.Table_Exist('ZIP_CODE_RANGE_210')) THEN
         stmt_ := 'INSERT INTO ZIP_CODE_TAB b (country_code, state_code, county_code, city_code, zip_code,
                                               region1, region2, street_name,
                                               street_number_even_from, street_number_even_to,
                                               street_number_odd_from, street_number_odd_to,
                                               rowversion, rowkey  )
                          (SELECT b.country_code, b.state_code, b.county_code, b.city_code, b.zip_code,
                                  b.district, b.address2, b.street_id,
                                  b.street_number_even_from, b.street_number_even_to,
                                  b.street_number_odd_from, b.street_number_odd_to,
                                  sysdate, sys_guid()
                                  FROM ZIP_CODE_RANGE_210 b
                          WHERE NOT EXISTS (SELECT 1
                                              FROM ZIP_CODE_TAB z
                                              WHERE z.country_code = b.country_code
                                                AND z.state_code   = b.state_code
                                                AND z.county_code  = b.county_code
                                                AND z.city_code    = b.city_code
                                                AND z.zip_code     = b.zip_code) )';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** Zip_Code_Tab End *****

-----------------------------------------------------------------------------------------

-- ***** Branch_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_22');
PROMPT Transfering data from columns in branch_tab
DECLARE
   stmt_       VARCHAR2(2000);
   table_name_ VARCHAR2(30) := 'BRANCH_TAB';
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      IF (Database_SYS.Column_Exist(table_name_, 'ADDRESS_ID_210')) THEN
         stmt_ := 'UPDATE branch_tab
                   SET company_address_id = address_id_210
                   WHERE company_address_id IS NULL';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** Branch_Tab End *****

-----------------------------------------------------------------------------------------

-- ***** Customer_Info_Address_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_23');
PROMPT Transfering data from columns in customer_info_address_tab
DECLARE
   stmt_       VARCHAR2(2000);
   table_name_ VARCHAR2(30) := 'CUSTOMER_INFO_ADDRESS_TAB';
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      IF (Database_SYS.Column_Exist(table_name_, 'BRANCH_ID_210')) THEN
         stmt_ := 'UPDATE customer_info_address_tab
                   SET customer_branch = branch_id_210
                   WHERE customer_branch IS NULL';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** Customer_Info_Address_Tab End *****

-----------------------------------------------------------------------------------------

-- ***** Supplier_Info_Address_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_24');
PROMPT Transfering data from columns in supplier_info_address_tab
DECLARE
   stmt_       VARCHAR2(2000);
   table_name_ VARCHAR2(30) := 'SUPPLIER_INFO_ADDRESS_TAB';
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      IF (Database_SYS.Column_Exist(table_name_, 'BRANCH_ID_210')) THEN
         stmt_ := 'UPDATE supplier_info_address_tab
                   SET supplier_branch = branch_id_210
                   WHERE supplier_branch IS NULL';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** Supplier_Info_Address_Tab End *****

----------------------------- Upgrade Sections for Loc2Core ends here -------------------

-----------------------------------------------------------------------------------------
------------- SECTION 1 : Handling upgrade from GET9 to GET10 RTM ends here -------------
-----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
------------- SECTION 2.1 : Handling upgrade from GET10 RTM to GET10 UPD6 starts here --------------
------------- NOTE        : Support cdb files from GET10 RTM until UPD6               --------------
----------------------------------------------------------------------------------------------------

-- ***** Corporate_Form_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_25');
PROMPT Renaming column business_type in the table corporate_form_tab
DECLARE
   table_name_ VARCHAR2(40) := 'CORPORATE_FORM_TAB';
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      -- gelr:it_xml_invoice, begin
      IF ((NOT Database_SYS.Column_Exist(table_name_, 'BUSINESS_TYPE_210')) AND Database_SYS.Column_Exist(table_name_, 'BUSINESS_TYPE')) THEN
         Database_SYS.Rename_Column(table_name_,'BUSINESS_TYPE','BUSINESS_TYPE_210',TRUE);
      END IF;
      -- gelr:it_xml_invoice, end
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** Corporate_Form_Tab End *****

-----------------------------------------------------------------------------------------

-- ***** Localization_Country_Param_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_26');
PROMPT Changing mandatory localization parameter preprint_delnote_no to not mandatory
DECLARE
   stmt_ VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      -- gelr:preprint_delnote_no, begin
      stmt_ := 'UPDATE LOCALIZATION_COUNTRY_PARAM_TAB
                SET mandatory = ''N''
                WHERE localization = ''TR''
                AND   parameter    = ''PREPRINT_DELNOTE_NO''';
      EXECUTE IMMEDIATE stmt_;
      COMMIT;
      -- gelr:preprint_delnote_no, end
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_27');
PROMPT Renaming localization parameter cz_vat_control_statement to cz_vat_reporting in the table localization_country_param_tab
DECLARE
   stmt_ VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      stmt_ := 'UPDATE LOCALIZATION_COUNTRY_PARAM_TAB
                SET parameter = ''CZ_VAT_REPORTING''
                WHERE parameter = ''CZ_VAT_CONTROL_STATEMENT''';
      EXECUTE IMMEDIATE stmt_;
      COMMIT;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** Localization_Country_Param_Tab End *****

-----------------------------------------------------------------------------------------

-- ***** Localization_Parameter_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_28');
PROMPT Renaming localization parameter cz_vat_control_statement to cz_vat_reporting in the table localization_parameter_tab
DECLARE
   stmt_ VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      stmt_ := 'UPDATE LOCALIZATION_PARAMETER_TAB
                SET parameter = ''CZ_VAT_REPORTING''
                WHERE parameter = ''CZ_VAT_CONTROL_STATEMENT''';
      EXECUTE IMMEDIATE stmt_;
      COMMIT;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** Localization_Parameter_Tab End *****

-----------------------------------------------------------------------------------------

-- ***** Company_Localization_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_29');
PROMPT Renaming localization parameter cz_vat_control_statement to cz_vat_reporting in the table company_localization_tab
DECLARE
   stmt_ VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      stmt_ := 'UPDATE COMPANY_LOCALIZATION_TAB
                SET parameter = ''CZ_VAT_REPORTING''
                WHERE parameter = ''CZ_VAT_CONTROL_STATEMENT''';
      EXECUTE IMMEDIATE stmt_;
      COMMIT;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** Company_Localization_Tab End *****

-----------------------------------------------------------------------------------------

-- ***** Info_Services_Rpt Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_30');
PROMPT Adding columns ext_s11 .. ext_s12, ext_n3 to the report table info_services_rpt
DECLARE
   table_name_ VARCHAR2(30) := 'INFO_SERVICES_RPT';
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      -- gelr:hu_vat_control_statement, begin
      column_ := Database_SYS.Set_Column_Values('EXT_S11', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

      column_ := Database_SYS.Set_Column_Values('EXT_S12', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

      column_ := Database_SYS.Set_Column_Values('EXT_S14', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

      column_ := Database_SYS.Set_Column_Values('EXT_S15', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      -- gelr:hu_vat_control_statement, end

      -- gelr:service_statistics_no, begin
      column_ := Database_SYS.Set_Column_Values('EXT_S13', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      -- gelr:service_statistics_no, end

      -- gelr:saft_portugal, begin
      column_ := Database_SYS.Set_Column_Values('EXT_N3', 'NUMBER', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      -- gelr:saft_portugal, end
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_31');
PROMPT Recreating report view info_services_rpv
DECLARE
   PROCEDURE Create_RPV_View(
      table_name_ IN VARCHAR2,
      view_name_  IN VARCHAR2,
      lu_         IN VARCHAR2,
      prompt_     IN VARCHAR2,
      module_     IN VARCHAR2)
   IS
      stmt_     VARCHAR2(2000);
      err_text_ VARCHAR2(200);
   BEGIN
      stmt_  := 'CREATE OR REPLACE VIEW ' || view_name_ ||' AS
                        SELECT *
                        FROM   ' || table_name_ || ' t
                        WHERE EXISTS ( SELECT 1
                                       FROM   allowed_report a
                                       WHERE  a.result_key = t.result_key )
                  WITH read only';

      dbms_output.put_line (' Creating View ' || view_name_ );
      EXECUTE IMMEDIATE stmt_;
      dbms_output.put_line (' View Created ');
      stmt_ := 'COMMENT ON TABLE '||view_name_||' IS ''LU='||lu_||'^PROMPT='||prompt_||'^MODULE='||module_||'^''';
      dbms_output.put_line (stmt_);
      EXECUTE IMMEDIATE stmt_;
      dbms_output.put_line (' View Comment Created ');
   EXCEPTION
      WHEN OTHERS THEN
         err_text_ := substr(SQLERRM, 1, 200);
         dbms_output.put_line (' Following Error occured while creating view ' || view_name_);
         dbms_output.put_line (err_text_);
   END Create_RPV_View;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Create_RPV_View('INFO_SERVICES_RPT','INFO_SERVICES_RPV','ArchiveDistribution','Raw data view for Info Services','FNDBAS');
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** Info_Services_Rpt End *****

-----------------------------------------------------------------------------------------

-- ***** Company_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_32');
PROMPT Adding column erp_certification_no to the table company_tab
DECLARE
   table_name_ VARCHAR2(30) := 'COMPANY_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      -- gelr:pt_erp_certification, begin
      column_ := Database_SYS.Set_Column_Values('ERP_CERTIFICATION_NO', 'NUMBER', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      -- gelr:pt_erp_certification, end
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** Company_Tab End *****

-----------------------------------------------------------------------------------------

-- ***** Digital_Key_Store_Info_Tab Start *****

-- gelr:digital_signature, begin
exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_33');
PROMPT Adding table digital_key_store_info_tab
DECLARE
   table_name_ VARCHAR2(30) := 'DIGITAL_KEY_STORE_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY',              'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'KEY_IDENTIFIER',       'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'KEY_STORE_ID',         'VARCHAR2(50)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'LOCALIZATION_COUNTRY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'KEY_VERSION',          'NUMBER',       'N');
      Database_SYS.Set_Table_Column(columns_, 'USER_NAME',            'VARCHAR2(30)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION',           'DATE',         'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY',               'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_34');
PROMPT Adding primary key constraint to the table digital_key_store_info_tab
DECLARE
   index_name_ VARCHAR2(30) := 'DIGITAL_KEY_STORE_INFO_PK';
   table_name_ VARCHAR2(30) := 'DIGITAL_KEY_STORE_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'KEY_IDENTIFIER');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_35');
PROMPT Adding rowkey constraint to the table digital_key_store_info_tab
DECLARE
   index_name_ VARCHAR2(30) := 'DIGITAL_KEY_STORE_INFO_RK';
   table_name_ VARCHAR2(30) := 'DIGITAL_KEY_STORE_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/
-- gelr:digital_signature, end

-- ***** Digital_Key_Store_Info_Tab End *****

-----------------------------------------------------------------------------------------

-- ***** Tax_Id_Number_Setup_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_36');
PROMPT Removing package and view of tax_id_number_setup_tab
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Remove_Package('TAX_ID_NUMBER_SETUP_API', TRUE);
      Database_SYS.Remove_View('TAX_ID_NUMBER_SETUP', TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_37');
PROMPT Renaming table tax_id_number_setup_tab to tax_id_number_setup_tab_300
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      IF (NOT Database_SYS.Table_Exist('TAX_ID_NUMBER_SETUP_TAB_300')) THEN
         Database_SYS.Rename_Table('TAX_ID_NUMBER_SETUP_TAB', 'TAX_ID_NUMBER_SETUP_TAB_300', TRUE, TRUE, TRUE, TRUE);
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** Tax_Id_Number_Setup_Tab End *****

-----------------------------------------------------------------------------------------

-- ***** Tax_Type_Category_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_38');
PROMPT Removing package and view of tax_type_category_tab
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Remove_Package('TAX_TYPE_CATEGORY_API', TRUE);
      Database_SYS.Remove_View('TAX_TYPE_CATEGORY', TRUE);
      Database_SYS.Remove_View('TAX_TYPE_CATEGORY_LOV', TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_39');
PROMPT Renaming table tax_type_category_tab to tax_type_category_tab_300
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      IF (NOT Database_SYS.Table_Exist('TAX_TYPE_CATEGORY_TAB_300')) THEN
         Database_SYS.Rename_Table('TAX_TYPE_CATEGORY_TAB', 'TAX_TYPE_CATEGORY_TAB_300', TRUE, TRUE, TRUE, TRUE);
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** Tax_Type_Category_Tab End *****

-------------------------------------------------------------------------------------------
------------- SECTION 2.1 : Handling upgrade from GET10 RTM to GET10 UPD6 ends here -------
-------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------
------------- SECTION 2.2 : Handling Upgrade from GET10 UPD6 to GET10 UPD11 Starts Here --------------
------------- NOTE        : Support cdb files from GET10 UPD6 until UPD11               --------------
------------------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_40');
PROMPT updating localization tables where PARAMETER has value FR_VAT_RETURN
DECLARE
   lu_           VARCHAR2(50) := 'LocalizationParameter';
   module_       VARCHAR2(10) := 'ENTERP';
   parameter1_   VARCHAR2(20) := 'FR_VAT_RETURN';
   stmt_         VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      IF (Database_SYS.Table_Exist('LOCALIZATION_PARAMETER_TAB')) THEN
         stmt_ := 'UPDATE LOCALIZATION_PARAMETER_TAB
                  SET    PARAMETER             = ''FR_TAX_REPORT'',
                         PARAMETER_DESCRIPTION = ''French Tax Reports'',
                         PARAMETER_TEXT        = ''Enables French VAT Return (CA3) tax template and Declaration of Fees (DAS2) report.''
                  WHERE  PARAMETER             = ''' || parameter1_ || '''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF (Database_SYS.Table_Exist('LOCALIZATION_COUNTRY_PARAM_TAB')) THEN
         stmt_ := 'UPDATE LOCALIZATION_COUNTRY_PARAM_TAB
                  SET    PARAMETER    = ''FR_TAX_REPORT''
                  WHERE  LOCALIZATION = ''FR''
                  AND    PARAMETER    = ''' || parameter1_ || '''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF (Database_SYS.Table_Exist('COMPANY_LOCALIZATION_INFO_TAB')) THEN
         stmt_ := 'UPDATE COMPANY_LOCALIZATION_INFO_TAB
                  SET     PARAMETER = ''FR_TAX_REPORT''
                  WHERE   PARAMETER = ''' || parameter1_ || '''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF (Database_SYS.Table_Exist('LANGUAGE_SYS_TAB')) THEN
         stmt_ := 'DELETE LANGUAGE_SYS_TAB
                  WHERE  path LIKE ''' || lu_ || '_' || module_ || '.' || parameter1_ ||'%''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

--*************info_services_rpt Begin*************

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_41');
PROMPT Adding new columns EXT_S16, EXT_S17, EXT_S18 to INFO_SERVICES_RPT
DECLARE
   table_name_ VARCHAR2(30) := 'INFO_SERVICES_RPT';
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      -- gelr:in_einvoice, begin
      column_ := Database_SYS.Set_Column_Values('EXT_S16', 'VARCHAR2(100)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('EXT_S17', 'VARCHAR2(4000)', 'Y');
      Database_SYS.Alter_Table_Column (table_name_, 'A', column_, TRUE);
      -- gelr:in_einvoice, end
      -- gelr:qr_codes, begin
      column_ := Database_SYS.Set_Column_Values('EXT_S18', 'VARCHAR2(1000)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      -- gelr:qr_codes, end
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_42');
PROMPT Recreating report view INFO_SERVICES_RPV
DECLARE
   PROCEDURE Create_RPV_View(
      table_name_ IN VARCHAR2,
      view_name_  IN VARCHAR2,
      lu_         IN VARCHAR2,
      prompt_     IN VARCHAR2,
      module_     IN VARCHAR2)
   IS
      stmt_     VARCHAR2(2000);
      err_text_ VARCHAR2(200);
   BEGIN
      stmt_  := 'CREATE OR REPLACE VIEW ' || view_name_ ||' AS
                        SELECT *
                        FROM   ' || table_name_ || ' t
                        WHERE EXISTS ( SELECT 1
                                       FROM   allowed_report a
                                       WHERE  a.result_key = t.result_key )
                  WITH read only';

      dbms_output.put_line (' Creating View ' || view_name_ );
      EXECUTE IMMEDIATE stmt_;
      dbms_output.put_line (' View Created ');
      stmt_ := 'COMMENT ON TABLE '||view_name_||' IS ''LU='||lu_||'^PROMPT='||prompt_||'^MODULE='||module_||'^''';
      dbms_output.put_line (stmt_);
      EXECUTE IMMEDIATE stmt_;
      dbms_output.put_line (' View Comment Created ');
   EXCEPTION
      WHEN OTHERS THEN
         err_text_ := substr(SQLERRM, 1, 200);
         dbms_output.put_line (' Following Error occured while creating view ' || view_name_);
         dbms_output.put_line (err_text_);
   END;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Create_RPV_View('INFO_SERVICES_RPT','INFO_SERVICES_RPV','ArchiveDistribution','Raw data view for Info Services','FNDBAS');
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

--*************info_services_rpt End*************

------------------------------------------------------------------------------------------------------
------------- SECTION 2.2 : Handling Upgrade from GET10 UPD6 to GET10 UPD11 Ends Here ----------------
------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------
------------- SECTION 2.3 : Handling Upgrade from GET10 UPD11 to GET10 UPD13 Starts Here -------------
------------- NOTE        : Support cdb files from GET10 UPD11 until UPD13               -------------
------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------
------------- SECTION 2.3 : Handling Upgrade from GET10 UPD11 to GET10 UPD13 Ends Here ---------------
------------------------------------------------------------------------------------------------------


-------------------------------------------------------------------------------------------
------------- SECTION 3.1 : Handling Upgrade from 21R1 related GET DB Changes Start Here -------------
-------------------------------------------------------------------------------------------

-- ***** Company_Localization_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_43');
PROMPT Update localization parameters setup
DECLARE
   stmt_       VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      stmt_ := 'UPDATE company_localization_tab t
               SET    t.parameter_value = ''Y''
               WHERE  t.parameter = ''NO_DELIVERY_NOTE_FOR_SERVICES''
               AND EXISTS (SELECT x.company FROM company_localization_tab x
                         WHERE  x.parameter = ''EXC_SVC_DELNOTE_PRINT''
                         AND    x.parameter_value =''Y''
                         AND    x.company = t.company)';
      EXECUTE IMMEDIATE stmt_;
      COMMIT;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** Company_Localization_Tab End *****


-- ***** Company_Localization_Info_Tab Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_44');
PROMPT Renaming table company_localization_tab to company_localization_info_tab
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      IF (Database_SYS.Table_Exist('COMPANY_LOCALIZATION_TAB')) THEN
         Database_SYS.Rename_Table('COMPANY_LOCALIZATION_TAB', 'COMPANY_LOCALIZATION_INFO_TAB', TRUE);
         Database_SYS.Remove_Package('COMPANY_LOCALIZATION_API', TRUE);
         Database_SYS.Remove_View('COMPANY_LOCALIZATION', TRUE);
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_45');
PROMPT Adding primary key index to the table company_localization_info_tab
DECLARE
   index_name_ VARCHAR2(30) := 'COMPANY_LOCALIZATION_INFO_PK';
   table_name_ VARCHAR2(30) := 'COMPANY_LOCALIZATION_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PARAMETER');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_46');
PROMPT Adding rowkey index to the table company_localization_info_tab
DECLARE
   index_name_ VARCHAR2(30) := 'COMPANY_LOCALIZATION_INFO_RK';
   table_name_ VARCHAR2(30) := 'COMPANY_LOCALIZATION_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- gelr:it_tax_reports, begin
exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_47');
PROMPT REPLACE parameter VALUE FROM it_vat_reports TO it_tax_reports
DECLARE
   stmt_ VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      IF(Database_SYS.Table_Exist('LOCALIZATION_PARAMETER_TAB')) THEN
         stmt_ := 'UPDATE localization_parameter_tab
                  SET parameter = ''IT_TAX_REPORTS'',
                  parameter_description = ''Italian Tax Reports'',
                  parameter_text = ''Enables Italian Tax Reporting, Purchases, Sales, Corrispettiv, Tax Summarized Reports, Tax Liquidation Report and Quarterly Spesometro Declaration.''
                  WHERE parameter = ''IT_VAT_REPORTS''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF(Database_SYS.Table_Exist('LOCALIZATION_COUNTRY_PARAM_TAB')) THEN
         stmt_ := 'UPDATE localization_country_param_tab
               SET parameter = ''IT_TAX_REPORTS''
               WHERE parameter = ''IT_VAT_REPORTS''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF(Database_SYS.Table_Exist('COMPANY_LOCALIZATION_INFO_TAB')) THEN
         stmt_ := 'UPDATE company_localization_info_tab
               SET parameter = ''IT_TAX_REPORTS''
               WHERE parameter = ''IT_VAT_REPORTS''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/
-- gelr:it_tax_reports, end

-- gelr:fr_tax_reports, begin
exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_48');
PROMPT REPLACE parameter VALUE FROM fr_tax_report TO fr_tax_reports
DECLARE
   stmt_ VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION','&GET10VERSION')) THEN
      IF(Database_SYS.Table_Exist('LOCALIZATION_PARAMETER_TAB')) THEN
         stmt_ := 'UPDATE localization_parameter_tab
                  SET parameter = ''FR_TAX_REPORTS''
                  WHERE parameter = ''FR_TAX_REPORT''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF(Database_SYS.Table_Exist('LOCALIZATION_COUNTRY_PARAM_TAB')) THEN
         stmt_ := 'UPDATE localization_country_param_tab
               SET parameter = ''FR_TAX_REPORTS''
               WHERE parameter = ''FR_TAX_REPORT''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF(Database_SYS.Table_Exist('COMPANY_LOCALIZATION_INFO_TAB')) THEN
         stmt_ := 'UPDATE company_localization_info_tab
               SET parameter = ''FR_TAX_REPORTS''
               WHERE parameter = ''FR_TAX_REPORT''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET10VERSION'||' Version');
   END IF;
END;
/


exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_49');
PROMPT Remove ADDITIONAL_TAX_NUMBERS parameters FROM french companies
DECLARE
   stmt_ VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION','&GET10VERSION')) THEN
      IF(Database_SYS.Table_Exist('LOCALIZATION_COUNTRY_PARAM_TAB')) THEN
         stmt_ := 'DELETE localization_country_param_tab
               WHERE parameter = ''ADDITIONAL_TAX_NUMBERS''
               AND localization = ''FR''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF(Database_SYS.Table_Exist('COMPANY_LOCALIZATION_INFO_TAB')) THEN
         stmt_ := 'DELETE FROM COMPANY_LOCALIZATION_INFO_TAB
                WHERE  parameter = ''ADDITIONAL_TAX_NUMBERS''
                AND    company IN (SELECT company
                                   FROM  company_tab
                                   WHERE localization_country = ''FR'')';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET10VERSION'||' Version');
   END IF;
END;
/
-- gelr:fr_tax_reports, end

-- gelr:round_tax_customs_documents, begin
exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_50');
PROMPT REPLACE parameter VALUE FROM round_vat_customs_documents TO round_tax_customs_documents
DECLARE
   stmt_ VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION','&GET10VERSION')) THEN
      IF(Database_SYS.Table_Exist('LOCALIZATION_PARAMETER_TAB')) THEN
         stmt_ := 'UPDATE localization_parameter_tab
                  SET parameter = ''ROUND_TAX_CUSTOMS_DOCUMENTS''
                  WHERE parameter = ''ROUND_VAT_CUSTOMS_DOCUMENTS''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF(Database_SYS.Table_Exist('LOCALIZATION_COUNTRY_PARAM_TAB')) THEN
         stmt_ := 'UPDATE localization_country_param_tab
               SET parameter = ''ROUND_TAX_CUSTOMS_DOCUMENTS''
               WHERE parameter = ''ROUND_VAT_CUSTOMS_DOCUMENTS''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF(Database_SYS.Table_Exist('COMPANY_LOCALIZATION_INFO_TAB')) THEN
         stmt_ := 'UPDATE company_localization_info_tab
               SET parameter = ''ROUND_TAX_CUSTOMS_DOCUMENTS''
               WHERE parameter = ''ROUND_VAT_CUSTOMS_DOCUMENTS''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET10VERSION'||' Version');
   END IF;
END;
/
-- gelr:round_tax_customs_documents, end

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_51');
PROMPT Changing localization parameter values to TRUE and FALSE
DECLARE
   stmt_ VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      IF(Database_SYS.Table_Exist('COMPANY_LOCALIZATION_INFO_TAB')) THEN
         stmt_ := 'UPDATE COMPANY_LOCALIZATION_INFO_TAB
                   SET parameter_value = ''TRUE''
                   WHERE parameter_value = ''Y''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;

         stmt_ := 'UPDATE COMPANY_LOCALIZATION_INFO_TAB
                   SET parameter_value = ''FALSE''
                   WHERE parameter_value = ''N''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** Company_Localization_Info_Tab End *****

---------------------------------------------------------------------------------------------
------------------------------ DROP OBSOLETE PACKAGES ---------------------------------------
---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_52');
PROMPT Remove obsolete packages
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Remove_Package('TRED_UTILITY_API', TRUE);
      Database_SYS.Remove_Package('FISCAL_NOTE_ITEM_API', TRUE);
   END IF;
END;
/
---------------------------------------------------------------------------------------------
------------- SECTION 3.1 : Handling Upgrade from 21R1 related GET DB Changes End Here  -----
---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
------------ SECTION 3.2 : Handling Upgrade from 21R2 related GET DB Changes Start Here -----
---------------------------------------------------------------------------------------------

-- gelr:out_inv_curr_rate_voucher_date, begin

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_53');
PROMPT Renaming parameter name in localization parameters setup
DECLARE
   lu_           VARCHAR2(50) := 'LocalizationParameter';
   module_       VARCHAR2(10) := 'ENTERP';
   parameter1_   VARCHAR2(50) := 'CO_IVC_CURR_RATE_VOUCHER_DATE';
   parameter2_   VARCHAR2(50) := 'OUT_INV_CURR_RATE_VOUCHER_DATE';
   stmt_         VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      IF (Database_SYS.Table_Exist('LOCALIZATION_PARAMETER_TAB')) THEN
         stmt_ := 'UPDATE Localization_Parameter_Tab
                     SET    parameter = ''' || parameter2_ || '''
                     WHERE  parameter = ''' || parameter1_ || '''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF (Database_SYS.Table_Exist('LOCALIZATION_COUNTRY_PARAM_TAB')) THEN
         stmt_ := 'UPDATE Localization_Country_Param_Tab
                     SET    parameter = ''' || parameter2_ || '''
                     WHERE  parameter = ''' || parameter1_ || '''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF (Database_SYS.Table_Exist('COMPANY_LOCALIZATION_INFO_TAB')) THEN
         stmt_ := 'UPDATE Company_Localization_Info_Tab
                     SET    parameter = ''' || parameter2_ || '''
                     WHERE  parameter = ''' || parameter1_ || '''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF (Database_SYS.Table_Exist('LANGUAGE_SYS_TAB')) THEN
         stmt_ := 'DELETE Language_Sys_Tab
                     WHERE  path LIKE ''' || lu_ || '_' || module_ || '.' || parameter1_ ||'%''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

   ELSE
     dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- gelr:out_inv_curr_rate_voucher_date, end

---------------------------------------------------------------------------------------------
------------ SECTION 3.2 : Handling Upgrade from 21R2 related GET DB Changes End Here -------
---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
------------ SECTION 3.3 : Handling Upgrade from 22R1 related GET DB Changes Start Here -----
---------------------------------------------------------------------------------------------

-- gelr:sk_tax_reporting, begin
exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_54');
PROMPT Renaming parameter name in localization parameters setup
DECLARE
   lu_           VARCHAR2(50) := 'LocalizationParameter';
   module_       VARCHAR2(10) := 'ENTERP';
   parameter1_   VARCHAR2(50) := 'SK_VAT_REPORTING';
   parameter2_   VARCHAR2(50) := 'SK_TAX_REPORTING';
   stmt_         VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      IF (Database_SYS.Table_Exist('LOCALIZATION_PARAMETER_TAB')) THEN
         stmt_ := 'UPDATE   Localization_Parameter_Tab
                      SET   parameter = ''' || parameter2_ || '''
                    WHERE   parameter = ''' || parameter1_ || '''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF (Database_SYS.Table_Exist('LOCALIZATION_COUNTRY_PARAM_TAB')) THEN
         stmt_ := 'UPDATE   Localization_Country_Param_Tab
                      SET   parameter = ''' || parameter2_ || '''
                    WHERE   parameter = ''' || parameter1_ || '''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF (Database_SYS.Table_Exist('COMPANY_LOCALIZATION_INFO_TAB')) THEN
         stmt_ := 'UPDATE   Company_Localization_Info_Tab
                      SET   parameter = ''' || parameter2_ || '''
                    WHERE   parameter = ''' || parameter1_ || '''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF (Database_SYS.Table_Exist('LANGUAGE_SYS_TAB')) THEN
         stmt_ := ' DELETE   Language_Sys_Tab
                     WHERE   path LIKE ''' || lu_ || '_' || module_ || '.' || parameter1_ ||'%''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;
   ELSE
     dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/
-- gelr:sk_tax_reporting, end

-- gelr:cz_tax_reporting, begin
exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_55');
PROMPT Renaming parameter name in localization parameters setup
DECLARE
   lu_           VARCHAR2(50) := 'LocalizationParameter';
   module_       VARCHAR2(10) := 'ENTERP';
   parameter1_   VARCHAR2(50) := 'CZ_VAT_REPORTING';
   parameter2_   VARCHAR2(50) := 'CZ_TAX_REPORTING';
   stmt_         VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      IF (Database_SYS.Table_Exist('LOCALIZATION_PARAMETER_TAB')) THEN
         stmt_ := 'UPDATE   Localization_Parameter_Tab
                      SET   parameter = ''' || parameter2_ || '''
                    WHERE   parameter = ''' || parameter1_ || '''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF (Database_SYS.Table_Exist('LOCALIZATION_COUNTRY_PARAM_TAB')) THEN
         stmt_ := 'UPDATE   Localization_Country_Param_Tab
                      SET   parameter = ''' || parameter2_ || '''
                    WHERE   parameter = ''' || parameter1_ || '''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF (Database_SYS.Table_Exist('COMPANY_LOCALIZATION_INFO_TAB')) THEN
         stmt_ := 'UPDATE   Company_Localization_Info_Tab
                      SET   parameter = ''' || parameter2_ || '''
                    WHERE   parameter = ''' || parameter1_ || '''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF (Database_SYS.Table_Exist('LANGUAGE_SYS_TAB')) THEN
         stmt_ := ' DELETE   Language_Sys_Tab
                     WHERE   path LIKE ''' || lu_ || '_' || module_ || '.' || parameter1_ ||'%''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;
   ELSE
     dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/
-- gelr:cz_tax_reporting, end

-- gelr:cash_box_receipt_enhancement, begin.
exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_56');
PROMPT Renaming parameter name in localization parameters setup
DECLARE
   lu_           VARCHAR2(50) := 'LocalizationParameter';
   module_       VARCHAR2(10) := 'ENTERP';
   parameter1_   VARCHAR2(50) := 'CASH_BOX_REPORT_ENHANCEMENT';
   parameter2_   VARCHAR2(50) := 'CASH_BOX_RECEIPT_ENHANCEMENT';
   stmt_         VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      IF (Database_SYS.Table_Exist('LOCALIZATION_PARAMETER_TAB')) THEN
         stmt_ := 'UPDATE   Localization_Parameter_Tab
                      SET   parameter = ''' || parameter2_ || '''
                    WHERE   parameter = ''' || parameter1_ || '''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF (Database_SYS.Table_Exist('LOCALIZATION_COUNTRY_PARAM_TAB')) THEN
         stmt_ := 'UPDATE   Localization_Country_Param_Tab
                      SET   parameter = ''' || parameter2_ || '''
                    WHERE   parameter = ''' || parameter1_ || '''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF (Database_SYS.Table_Exist('COMPANY_LOCALIZATION_INFO_TAB')) THEN
         stmt_ := 'UPDATE   Company_Localization_Info_Tab
                      SET   parameter = ''' || parameter2_ || '''
                    WHERE   parameter = ''' || parameter1_ || '''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF (Database_SYS.Table_Exist('LANGUAGE_SYS_TAB')) THEN
         stmt_ := ' DELETE   Language_Sys_Tab
                     WHERE   path LIKE ''' || lu_ || '_' || module_ || '.' || parameter1_ ||'%''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;
   ELSE
     dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/
-- gelr:cash_box_receipt_enhancement, end.

-- gelr:e-invoicing_compliance, begin.
exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_57');
PROMPT Renaming parameter name in localization parameters setup
DECLARE
   lu_           VARCHAR2(50) := 'LocalizationParameter';
   module_       VARCHAR2(10) := 'ENTERP';
   parameter1_   VARCHAR2(50) := 'INVOICE_E-REPORTING';
   parameter2_   VARCHAR2(50) := 'E-INVOICING_COMPLIANCE';
   stmt_         VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      IF (Database_SYS.Table_Exist('LOCALIZATION_PARAMETER_TAB')) THEN
         stmt_ := 'UPDATE   Localization_Parameter_Tab
                      SET   parameter = ''' || parameter2_ || '''
                    WHERE   parameter = ''' || parameter1_ || '''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF (Database_SYS.Table_Exist('LOCALIZATION_COUNTRY_PARAM_TAB')) THEN
         stmt_ := 'UPDATE   Localization_Country_Param_Tab
                      SET   parameter = ''' || parameter2_ || '''
                    WHERE   parameter = ''' || parameter1_ || '''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF (Database_SYS.Table_Exist('COMPANY_LOCALIZATION_INFO_TAB')) THEN
         stmt_ := 'UPDATE   Company_Localization_Info_Tab
                      SET   parameter = ''' || parameter2_ || '''
                    WHERE   parameter = ''' || parameter1_ || '''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;

      IF (Database_SYS.Table_Exist('LANGUAGE_SYS_TAB')) THEN
         stmt_ := ' DELETE   Language_Sys_Tab
                     WHERE   path LIKE ''' || lu_ || '_' || module_ || '.' || parameter1_ ||'%''';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;
   ELSE
     dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/
-- gelr:e-invoicing_compliance, end.

-- gelr: cz_tax_reporting, begin
exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_58');
PROMPT Rename from column Customer_Inc_Date to column Date_Of_Registration AND data copy will be done automatically.
DECLARE
   new_column_name_   VARCHAR2(30);
   old_column_name_   VARCHAR2(30);
   table_name_        VARCHAR2(30) := 'CUSTOMER_INFO_TAB';
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      new_column_name_ := 'DATE_OF_REGISTRATION';
      old_column_name_ := 'CUSTOMER_INC_DATE';
      IF NOT(Database_SYS.Column_Exist(table_name_, new_column_name_)) AND Database_SYS.Column_Exist(table_name_, old_column_name_) THEN
         Database_SYS.Rename_Column(table_name_, new_column_name_, old_column_name_, TRUE);
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/
-- gelr: cz_tax_reporting, end
---------------------------------------------------------------------------------------------
------------ SECTION 3.3 : Handling Upgrade from 22R1 related GET DB Changes End Here -------
---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Timestamp_59');
PROMPT Upgrade statements in file Enterp GET_TO_CLOUD.upg end here

-----------------------------------------------------------------------------------------

UNDEFINE MODULE
UNDEFINE GET9VERSION
UNDEFINE GET10VERSION

exec Database_SYS.Log_Detail_Time_Stamp('ENTERP','GET_TO_CLOUD.upg','Done');
PROMPT Finished with GET_TO_CLOUD.upg
