-----------------------------------------------------------------------------
--
--  Logical unit: SupplierHandling
--  Component:    ENTERP
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  180719  thjilk  Created.
--  200824  Hairlk  SCTA-8074, Added dummy action CheckCreateCategorySupplier to control permission to create a Supplier Info record with category Supplier.
--  210305  Smallk  FISPRING20-8936, Overrode CRUD_Default_Copy___().
--  210710  Smallk  FI21R2-2313, Merged LCS bug 159691, removed Check_Default___().
-----------------------------------------------------------------------------

layer Core;

@ApproveGlobalVariable 
supplier_id_         VARCHAR2(20);
@ApproveGlobalVariable 
supplier_address_    VARCHAR2(20);
@ApproveGlobalVariable
glb_address_id_      VARCHAR2(100);
@ApproveGlobalVariable
glb_address_code_    VARCHAR2(100);

FUNCTION Subject_Key_Ref___ (
   data_subject_db_  IN   VARCHAR2,
   key1_             IN   VARCHAR2,
   key2_             IN   VARCHAR2 ) RETURN VARCHAR2
IS
BEGIN
   RETURN Data_Subject_Consent_API.Get_Subject_Key_Ref(data_subject_db_, key1_, key2_);
END Subject_Key_Ref___;


FUNCTION Default_Contact_Info___ (
   person_id_       IN VARCHAR2,
   contact_address_ IN VARCHAR2 ) RETURN Default_Contact_Info_Structure_Rec
IS
   rec_  Default_Contact_Info_Structure_Rec;
BEGIN
   Person_Info_Address_API.Get_Default_Contact_Info(rec_.phone,
                                                    rec_.mobile,
                                                    rec_.e_mail, 
                                                    rec_.fax, 
                                                    rec_.pager, 
                                                    rec_.intercom, 
                                                    rec_.www, 
                                                    person_id_, 
                                                    contact_address_);
   RETURN rec_;
END Default_Contact_Info___;


@Override
PROCEDURE CRUD_Update___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Supplier_Info_Contact_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT    VARCHAR2,
   action_ IN     VARCHAR2 )
IS
BEGIN
   super(etag_, key_, attr_, info_, action_);
   supplier_id_ := key_.supplier_id;
   supplier_address_  := Client_SYS.Get_Item_Value('SUPPLIER_ADDRESS', attr_);
END CRUD_Update___;


@Override
PROCEDURE CRUD_Create___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Supplier_Info_Contact_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT    VARCHAR2,
   action_ IN     VARCHAR2 )
IS
BEGIN
   super(etag_, key_, attr_, info_, action_);
   supplier_id_ := key_.supplier_id;
   supplier_address_  := Client_SYS.Get_Item_Value('SUPPLIER_ADDRESS', attr_);
END CRUD_Create___;


@Override
PROCEDURE CRUD_Delete___ (
   etag_   IN OUT VARCHAR2,
   key_    IN     Supplier_Info_Address_Type_Key,
   info_   OUT    VARCHAR2,
   action_ IN     VARCHAR2 )
IS
BEGIN
   supplier_id_      := key_.supplier_id;
   glb_address_id_   := key_.address_id;
   glb_address_code_ := key_.address_type_code;
   super(etag_, key_, info_, action_);
END CRUD_Delete___;
                  

PROCEDURE Check_Default_Address_Type___ (
   init_  IN  BOOLEAN,
   info$_ OUT VARCHAR2 ) 
IS
BEGIN
   IF (init_) THEN
      supplier_id_       := NULL;
      glb_address_id_    := NULL;
      glb_address_code_  := NULL;
   ELSE
      IF (glb_address_code_ = Address_Type_Code_API.DB_DELIVERY) THEN
         Supplier_Info_Address_Type_API.Check_Del_Tax_Info_Exist__(supplier_id_, glb_address_id_);
      END IF;
      IF (glb_address_code_ = Address_Type_Code_API.DB_DOCUMENT) THEN
         Supplier_Info_Address_Type_API.Check_Doc_Tax_Info_Exist__(supplier_id_, glb_address_id_);
      END IF;
   END IF;
   info$_ := Client_SYS.Get_All_Info();
END Check_Default_Address_Type___;


@Override
PROCEDURE CRUD_Default___ (
   key_  IN     Supplier_Info_Address_Key,
   attr_ IN OUT VARCHAR2,
   info_ OUT    VARCHAR2 )
IS
   supp_id_      VARCHAR2(200);
   country_      VARCHAR2(200);
   country_db_   VARCHAR2(200);
BEGIN
   supp_id_     := Client_SYS.Get_Item_Value('SUPPLIER_ID', attr_);
   country_db_  := Supplier_Info_API.Get_Country_Db(supp_id_);
   country_     := Iso_Country_API.Decode(country_db_);
   super(key_, attr_, info_);
   Client_SYS.Add_To_Attr('COUNTRY_DESC', country_, attr_);
   Client_SYS.Add_To_Attr('COUNTRY_DB', country_db_, attr_);
END CRUD_Default___;


PROCEDURE Add_Default_Address_Types___ (
   key_ IN Supplier_Info_Address_Key )
IS 
BEGIN
   Supplier_Info_Address_Type_API.Add_Default_Address_Types(key_.supplier_id, key_.address_id);
END Add_Default_Address_Types___;


FUNCTION Fetch_Country_Description___ (
   country_code_ IN VARCHAR2 )  RETURN VARCHAR2
IS 
BEGIN
   RETURN Iso_Country_API.Decode(country_code_);
END Fetch_Country_Description___;


@Override
PROCEDURE CRUD_Update___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Supplier_Info_General_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT    VARCHAR2,
   action_ IN     VARCHAR2 )
IS
   default_language_db_    VARCHAR2(5);
   country_db_             VARCHAR2(5);
BEGIN
   IF (Client_SYS.Item_Exist('DEFAULT_LANGUAGE_DB', attr_)) THEN
      default_language_db_ := Client_SYS.Get_Item_Value('DEFAULT_LANGUAGE_DB', attr_);
      Error_SYS.Check_Not_Null(lu_name_, 'DEFAULT_LANGUAGE_DB', default_language_db_);      
   END IF;
   IF (Client_SYS.Item_Exist('COUNTRY_DB', attr_)) THEN
      country_db_          := Client_SYS.Get_Item_Value('COUNTRY_DB', attr_);
      Error_SYS.Check_Not_Null(lu_name_, 'COUNTRY_DB', country_db_);      
   END IF;
   super(etag_, key_, attr_, info_, action_);
END CRUD_Update___;


PROCEDURE Check_Create_Category_Supplier___
IS
BEGIN
   Error_SYS.Record_General(lu_name_, 'NOACCESSTOCREATESUP: This procedure is used for control permission to create a Supplier Info record with category :P1', Supplier_Info_Category_API.Decode(Supplier_Info_Category_API.DB_SUPPLIER));
END Check_Create_Category_Supplier___;


@Override
PROCEDURE CRUD_Default_Copy___ (
   rec_ IN OUT Supplier_Info_General_Rec )
IS
BEGIN
   super(rec_);
   rec_.creation_date := TRUNC(SYSDATE); 
END CRUD_Default_Copy___;
