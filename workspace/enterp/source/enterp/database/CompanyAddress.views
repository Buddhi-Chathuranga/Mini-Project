-----------------------------------------------------------------------------
--
--  Logical unit: CompanyAddress
--  Component:    ENTERP
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  211124  Chgulk  FI21R2-4512  Removed obsolete views.
--  180911  NaLrlk  SCUXXW4-2496, Added country_db to the view Company_Address_Lov_Pub.
--  160412  reanpl  STRLOC-53, Added handling of new attributes address3, address4, address5, address6
--  151217  ILSOLK  STRSA-1705,Created new view Company_Del_Visit_Add_Pub.
--  211126  Chgulk  FI21R2-4383, Added row-level security
-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------

@DbViewRowLevelSecurity NotRequired
VIEW Company_Address_Lov_Pub IS
   Prompt = 'Company Address Lov'
   Company.Ref = 'Company/NOCHECK'
   Delivery_Address.Flags = 'KMI-L'
   Delivery_Address.Datatype = 'STRING(50)/UPPERCASE'
   Delivery_Address.Prompt = 'Delivery Address ID'
   Address_Name.Flags = 'A-I-L'
   Address_Name.Datatype = 'STRING(100)'
   Address_Name.Prompt = 'Address Name'
   Address.Flags = 'A-IUL'
   Country.Flags = 'A-IUL'
   Country.Datatype = 'STRING(2)'
SELECT cat.company                                               company,
       cat.address_id                                            delivery_address,
       Address_API.Get_Address_Name(cat.company,cat.address_id)  address_name,
       REPLACE(REPLACE(cat.address,CHR(13),''),CHR(10),' ')      address,
       Iso_Country_API.Decode(cat.country)                       country,
       cat.country                                               country_db, 
       cat.rowkey                                                objkey
FROM   company_address_tab cat,
       company_address_type_tab catt
WHERE  catt.address_type_code = 'DELIVERY'
AND    cat.company = catt.company
AND    cat.address_id = catt.address_id
AND    TRUNC(SYSDATE) BETWEEN NVL(valid_from, Database_SYS.Get_First_Calendar_Date())
                      AND     NVL(valid_to,   Database_SYS.Get_Last_Calendar_Date());

@DbViewRowLevelSecurity NotRequired
VIEW Company_Doc_Address_Lov_Pub IS
   Prompt = 'Company Address Lov'
   Company.Ref = 'Company/NOCHECK'
   Document_Address.Flags = 'KMI-L'
   Document_Address.Datatype = 'STRING(50)/UPPERCASE'
   Document_Address.Prompt = 'Document Address ID'
   Address_Name.Flags = 'A-I-L'
   Address_Name.Datatype = 'STRING(100)'
   Address_Name.Prompt = 'Address Name'
   Address.Flags = 'A-IUL'
   Country_Db.Flags = 'A-IUL'
   Country_Db.Datatype = 'STRING(2)'
SELECT cat.company                                                           company,
       cat.address_id                                                        document_address,
       Address_API.Get_Address_Name(cat.company,cat.address_id)              address_name,
       SUBSTR(REPLACE(REPLACE(cat.address,CHR(13),''),CHR(10),' '),1,2000)   address,
       Iso_Country_API.Decode(cat.country)                                   country,
       cat.country                                                           country_db, 
       cat.rowkey                                                            objkey
FROM   company_address_tab cat,
       company_address_type_tab catt
WHERE  catt.address_type_code = 'INVOICE'
AND    cat.company = catt.company
AND    cat.address_id = catt.address_id
AND    TRUNC(SYSDATE) BETWEEN NVL(valid_from, Database_SYS.Get_First_Calendar_Date())
                      AND     NVL(valid_to,   Database_SYS.Get_Last_Calendar_Date());

@DbViewRowLevelSecurity NotRequired
VIEW Company_Address_Pub IS
   Prompt = 'Company Address'
   Company.Ref = 'Company/NOCHECK'
SELECT company                                            company,
       address_id                                         address_id,
       address                                            address,
       ean_location                                       ean_location,
       REPLACE(REPLACE(address,CHR(13),''),CHR(10),' ')   address_lov,
       valid_from                                         valid_from,
       valid_to                                           valid_to,
       party                                              party,
       default_domain                                     default_domain,
       Iso_Country_API.Decode(country)                    country,
       country                                            country_db,
       Party_Type_API.Decode(party_type)                  party_type,
       party_type                                         party_type_db,
       address1                                           address1,
       address2                                           address2,
       address3                                           address3,
       address4                                           address4,
       address5                                           address5,
       address6                                           address6,
       zip_code                                           zip_code,
       city                                               city,
       county                                             county,
       state                                              state,
       ROWID                                              objid,
       TO_CHAR(rowversion)                                objversion,
       rowkey                                             objkey
FROM   company_address_tab;

-------------------- PRIVATE VIEW DEFINITIONS -------------------------------