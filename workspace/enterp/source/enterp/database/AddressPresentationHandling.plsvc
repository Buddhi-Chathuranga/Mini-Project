-----------------------------------------------------------------------------
--
--  Logical unit: AddressPresentationHandling
--  Component:    ENTERP
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  200820  Hecolk  FISPRING20-146, Created.
-----------------------------------------------------------------------------

layer Core;

@Override
PROCEDURE CRUD_Create___ (
   rec_ IN Address_Presentation_Configure_Virtual_Rec )
IS
   disprec_  Address_Presentation_Configure_Virtual_Rec;
   r1_       NUMBER;
   r2_       NUMBER;
   r3_       NUMBER;
   r4_       NUMBER;
   r5_       NUMBER;
   r6_       NUMBER;
   r8_       NUMBER;
   r9_       NUMBER;
   r10_      NUMBER;
   r11_      NUMBER;
BEGIN
   disprec_ := rec_;
   r1_   := Message_SYS.Find_Attribute(disprec_.edit_layout, 'R1', 0);
   r2_   := Message_SYS.Find_Attribute(disprec_.edit_layout, 'R2', 0);
   r3_   := Message_SYS.Find_Attribute(disprec_.edit_layout, 'R3', 0);
   r4_   := Message_SYS.Find_Attribute(disprec_.edit_layout, 'R4', 0);
   r5_   := Message_SYS.Find_Attribute(disprec_.edit_layout, 'R5', 0);
   r6_   := Message_SYS.Find_Attribute(disprec_.edit_layout, 'R6', 0);
   r8_   := Message_SYS.Find_Attribute(disprec_.edit_layout, 'R8', 0);
   r9_   := Message_SYS.Find_Attribute(disprec_.edit_layout, 'R9', 0);
   r10_  := Message_SYS.Find_Attribute(disprec_.edit_layout, 'R10', 0);
   r11_  := Message_SYS.Find_Attribute(disprec_.edit_layout, 'R11', 0);   
   disprec_.address1  := (r1_ > 0);
   disprec_.address2  := (r2_ > 0);
   disprec_.zip_code  := (r3_ > 0);
   disprec_.city      := (r4_ > 0);
   disprec_.state     := (r5_ > 0);
   disprec_.county    := (r6_ > 0);
   disprec_.address3  := (r8_ > 0);
   disprec_.address4  := (r9_ > 0);
   disprec_.address5  := (r10_ > 0);
   disprec_.address6  := (r11_ > 0);
   super(disprec_);
END CRUD_Create___;


PROCEDURE Check_Defaults___ (
   init_  IN  BOOLEAN,
   info$_ OUT VARCHAR2 )
IS
BEGIN
   IF (init_) THEN
      NULL;
   ELSE
      Address_Presentation_API.Check_Defaults_();
      info$_ := Client_SYS.Get_All_Info();
   END IF;
END Check_Defaults___;


FUNCTION Update_Configuration___ (
  objkey_ IN  VARCHAR2,
  info$_  OUT VARCHAR2 ) RETURN VARCHAR2
IS
   configrec_  Address_Presentation_Configure_Virtual_Rec;
   virtualkey_ Address_Presentation_Configure_Virtual_Key;
   key_        Address_Presentation_Key;
   etag_       VARCHAR2(4000);
   attr_       VARCHAR2(32000);
   do_attr_    VARCHAR2(32000);
   info_       VARCHAR2(2000);
BEGIN
   virtualkey_.objkey := objkey_;
   configrec_ := Get_Record___(virtualkey_);
   Set_Edit_Layout_Elements___(configrec_, 'R');
   Set_Edit_Layout_Elements___(configrec_, 'C');
   Set_Edit_Layout_Elements___(configrec_, 'W');
   attr_             := Prepare_Configuration_Attr___(configrec_.country_code, configrec_.display_layout, configrec_.edit_layout); 
   do_attr_          := attr_;
   key_.country_code := configrec_.country_code;
   etag_             := Client_SYS.Cut_Item_Value('ETAG', attr_);
   CRUD_Update___(etag_, key_, attr_, info_, 'CHECK');
   info$_ := info_;
   info_ := NULL;
   CRUD_Update___(etag_, key_, do_attr_, info_, 'DO');
   RETURN info_;
END Update_Configuration___;


FUNCTION Decode_Visibility___ (
   visible_ IN Boolean ) RETURN VARCHAR2
IS
BEGIN
   IF (visible_) THEN
      RETURN '1';
   END IF;
   RETURN '0';
END Decode_Visibility___;    


PROCEDURE Set_Edit_Layout_Elements___ (
   configrec_     IN OUT Address_Presentation_Configure_Virtual_Rec,
   row_col_width_ IN     VARCHAR2 )
IS
BEGIN
   Message_SYS.Set_Attribute(configrec_.edit_layout, row_col_width_ || '1', Decode_Visibility___(configrec_.address1));
   Message_SYS.Set_Attribute(configrec_.edit_layout, row_col_width_ || '2', Decode_Visibility___(configrec_.address2));
   Message_SYS.Set_Attribute(configrec_.edit_layout, row_col_width_ || '3', Decode_Visibility___(configrec_.zip_code));
   Message_SYS.Set_Attribute(configrec_.edit_layout, row_col_width_ || '4', Decode_Visibility___(configrec_.city));
   Message_SYS.Set_Attribute(configrec_.edit_layout, row_col_width_ || '5', Decode_Visibility___(configrec_.state));
   Message_SYS.Set_Attribute(configrec_.edit_layout, row_col_width_ || '6', Decode_Visibility___(configrec_.county));
   Message_SYS.Set_Attribute(configrec_.edit_layout, row_col_width_ || '8', Decode_Visibility___(configrec_.address3));
   Message_SYS.Set_Attribute(configrec_.edit_layout, row_col_width_ || '9', Decode_Visibility___(configrec_.address4));
   Message_SYS.Set_Attribute(configrec_.edit_layout, row_col_width_ || '10', Decode_Visibility___(configrec_.address5));
   Message_SYS.Set_Attribute(configrec_.edit_layout, row_col_width_ || '11', Decode_Visibility___(configrec_.address6));   
END Set_Edit_Layout_Elements___;   


FUNCTION Prepare_Configuration_Attr___ (
   country_code_          IN VARCHAR2,
   display_layout_        IN VARCHAR2,
   edit_layout_           IN VARCHAR2 ) RETURN VARCHAR2
IS
   address_pres_rec_ address_presentation%ROWTYPE;
   attr_             VARCHAR2(32000);
   CURSOR get_address_presentation IS
      SELECT * 
      FROM   address_presentation
      WHERE  country_code = country_code_;
BEGIN
   OPEN get_address_presentation;
   FETCH get_address_presentation INTO address_pres_rec_;
   IF (get_address_presentation%FOUND) THEN 
      CLOSE get_address_presentation;
   ELSE
      CLOSE get_address_presentation;
      RETURN NULL;
   END IF;   
   Client_SYS.Clear_Attr(attr_);
   IF (String_Differs___(address_pres_rec_.display_layout, display_layout_)) THEN
      Client_SYS.Add_To_Attr('DISPLAY_LAYOUT', display_layout_, attr_);
   END IF;   
   IF (String_Differs___(address_pres_rec_.edit_layout, edit_layout_)) THEN
      Client_SYS.Add_To_Attr('EDIT_LAYOUT', edit_layout_, attr_);
   END IF;
   Client_SYS.Add_To_Attr('ETAG', Get_Etag___(address_pres_rec_.objid, address_pres_rec_.objversion), attr_);
   RETURN attr_; 
END Prepare_Configuration_Attr___;


FUNCTION String_Differs___ (
   old_value_  IN VARCHAR2,
   new_value_  IN VARCHAR2 ) RETURN BOOLEAN
IS
BEGIN
   IF (old_value_ IS NULL AND new_value_ IS NOT NULL) OR (old_value_ IS NOT NULL AND new_value_ IS NULL) OR (old_value_ != new_value_) THEN
      RETURN TRUE;
   END IF;   
   RETURN FALSE;
END String_Differs___;


FUNCTION Set_Default_Disp_Layout___ (
   display_layout_ IN  VARCHAR2 ) RETURN VARCHAR2
IS
BEGIN
   IF (String_Differs___(display_layout_, Address_Presentation_API.default_display_layout_)) THEN
      RETURN Address_Presentation_API.default_display_layout_;
   END IF;   
   RETURN display_layout_;
END Set_Default_Disp_Layout___;

