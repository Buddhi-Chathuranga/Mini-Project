-----------------------------------------------------------------------------
--
--  Logical unit: BasicDataSynchronizationHandling
--  Component:    ENTERP
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------

layer Core;

FUNCTION Add_All_Pages___ (
   key_ IN Target_Company_Key ) RETURN NUMBER
IS
   CURSOR get_data IS
      SELECT t.logical_unit_name
      FROM basic_data_window t;
   newrec_   company_basic_data_window_tab%ROWTYPE;
   cnt_      NUMBER:=0;
BEGIN
   IF (Source_Company_API.Get_Objstate(key_.source_company) != 'Planned') THEN
      Error_SYS.Record_General(lu_name_, 'NOTPLANNED: Source Company :P1 is not in state Planned, no pages can be added.', key_.source_company);
   END IF; 
   FOR c1 IN get_data LOOP
      IF NOT (Company_Basic_Data_Window_API.Exists(key_.source_company, key_.target_company, c1.logical_unit_name)) THEN 
         newrec_.source_company := key_.source_company;
         newrec_.target_company := key_.target_company;
         newrec_.logical_unit_name := c1.logical_unit_name;
         newrec_.update_method_type := 'NO_UPDATE';
         newrec_.copy_from_company := 'FALSE';
         Company_Basic_Data_Window_API.Create_Company_Basic_Data(newrec_);         
         cnt_ := cnt_ +1;
      END IF;
   END LOOP;
   RETURN cnt_;
END Add_All_Pages___;


@Override 
PROCEDURE CRUD_Create___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Company_Basic_Data_Window_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT    VARCHAR2,
   action_ IN     VARCHAR2 )
IS
BEGIN
   super(etag_, key_, attr_, info_, action_);
   IF (Source_Company_API.Get_Objstate(key_.source_company) != 'Planned') THEN 
      Error_SYS.Record_General(lu_name_, 'NOTPLANNEDCREATE: Source Company :P1 is not in state Planned, no new records can be added.', key_.source_company);
   END IF;   
END CRUD_Create___;


@Override 
PROCEDURE CRUD_Update___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Company_Basic_Data_Window_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT    VARCHAR2,
   action_ IN     VARCHAR2 )
IS   
BEGIN
   super(etag_, key_, attr_, info_, action_);
   IF (Source_Company_API.Get_Objstate(key_.source_company) != 'Planned') THEN 
      Error_SYS.Record_General(lu_name_, 'NOTPLANNEDUPDATE: Source Company :P1 is not in state Planned, no changes can be done.', key_.source_company);
   END IF;   
END CRUD_Update___;


@Override
PROCEDURE CRUD_Delete___ (
   etag_   IN OUT VARCHAR2,
   key_    IN     Company_Basic_Data_Window_Key,
   info_   OUT    VARCHAR2,
   action_ IN     VARCHAR2 )
IS
BEGIN
   super(etag_, key_, info_, action_);
   IF (Source_Company_API.Get_Objstate(key_.source_company) != 'Planned') THEN 
      Error_SYS.Record_General(lu_name_, 'NOTPLANNEDDELETE: Source Company :P1 is not in state Planned, no deletions can be done.', key_.source_company);
   END IF;      
END CRUD_Delete___;


@Override
PROCEDURE CRUD_Create___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Target_Company_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT    VARCHAR2,
   action_ IN     VARCHAR2 )
IS
   company_ VARCHAR2(20);
BEGIN
   company_ := Client_SYS.Get_Item_Value('TARGET_COMPANY', attr_);
   $IF Component_Accrul_SYS.INSTALLED $THEN
   IF NOT (User_Finance_API.Is_User_Authorized(company_)) THEN
      Error_SYS.Record_General(lu_name_, 'USERNOTAUTHORIZED: Access denied! User :P1 is not connected to Company :P2.', Fnd_Session_API.Get_Fnd_User, company_, attr_);      
   END IF;
   $END
   super(etag_, key_, attr_, info_, action_);   
END CRUD_Create___;


@Override
PROCEDURE CRUD_Create___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Source_Company_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT    VARCHAR2,
   action_ IN     VARCHAR2 )
IS
   company_ VARCHAR2(20);
BEGIN
   company_ := Client_SYS.Get_Item_Value('SOURCE_COMPANY', attr_);
   $IF Component_Accrul_SYS.INSTALLED $THEN
   IF NOT (User_Finance_API.Is_User_Authorized(company_)) THEN
      Error_SYS.Record_General(lu_name_, 'USERNOTAUTHORIZED: Access denied! User :P1 is not connected to Company :P2.', Fnd_Session_API.Get_Fnd_User, company_, attr_);      
   END IF;      
   $END
   super(etag_, key_, attr_, info_, action_);   
END CRUD_Create___;
