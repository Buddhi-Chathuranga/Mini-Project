-----------------------------------------------------------------------------
--
--  Fragment:     DetailAddressDialog
--  Component:    ENTERP
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  180614  MaRalk  FIUXXW2-396, Created. Moved methods 
-----------------------------------------------------------------------------

layer Core;

PROCEDURE Update_Detailed_Address___ (
   party_type_db_ IN VARCHAR2,
   id_            IN VARCHAR2,
   address_id_    IN VARCHAR2,
   street_        IN VARCHAR2,
   house_no_      IN VARCHAR2,
   flat_no_       IN VARCHAR2,
   community_     IN VARCHAR2,
   district_      IN VARCHAR2 ) 
IS
BEGIN
   IF(party_type_db_ = Party_Type_API.DB_COMPANY) THEN
      Company_Address_API.Modify_Detailed_Address(id_, address_id_, street_, house_no_, community_, district_);
   ELSIF(party_type_db_ = Party_Type_API.DB_PERSON) THEN
      Person_Info_Address_API.Modify_Detailed_Address(id_, address_id_, street_, house_no_, flat_no_, community_, district_);
   ELSIF(party_type_db_ = 'TAX') THEN
      Tax_Office_Info_Address_API.Modify_Detailed_Address(id_, address_id_, street_, house_no_, community_, district_);
   END IF;    
END Update_Detailed_Address___;


PROCEDURE Check_Detail_Address___ (
   identity_      IN  VARCHAR2,
   address_id_    IN  VARCHAR2,
   party_type_db_ IN  VARCHAR2,
   info$_         OUT VARCHAR2 )
IS
   company_rec_      Company_Address_API.Public_Rec;
   person_rec_       Person_Info_Address_API.Public_Rec;
   tax_office_rec_   Tax_Office_Info_Address_API.Public_Rec; 
   address1_         VARCHAR2(1000);  
   det_address1_     VARCHAR2(1000);    
   det_addr_exist_   VARCHAR2(5); 
BEGIN
   IF(party_type_db_ = Party_Type_API.DB_COMPANY) THEN
      company_rec_    := Company_Address_API.Get(identity_, address_id_);
      det_address1_   := Get_Detailed_Address1___(company_rec_.street, company_rec_.house_no, NULL);
      address1_       := company_rec_.address1;
      det_addr_exist_ := Enterp_Address_Country_API.Get_Detailed_Address(company_rec_.country);
   ELSIF(party_type_db_ = Party_Type_API.DB_PERSON) THEN
      person_rec_     := Person_Info_Address_API.Get(identity_, address_id_);
      det_address1_   := Get_Detailed_Address1___(person_rec_.street, person_rec_.house_no, person_rec_.flat_no);
      address1_       := person_rec_.address1;
      det_addr_exist_ := Enterp_Address_Country_API.Get_Detailed_Address(person_rec_.country);
   ELSIF(party_type_db_ = 'TAX') THEN
      tax_office_rec_ := Tax_Office_Info_Address_API.Get(identity_, address_id_);
      det_address1_   := Get_Detailed_Address1___(tax_office_rec_.street, tax_office_rec_.house_no, NULL);
      address1_       := tax_office_rec_.address1;
      det_addr_exist_ := Enterp_Address_Country_API.Get_Detailed_Address(tax_office_rec_.country);
   END IF; 
   IF (((address1_ != det_address1_) AND (address1_ IS NOT NULL) AND (det_address1_ IS NOT NULL)) OR 
       ((address1_ IS NULL) AND (det_address1_ IS NOT NULL)) OR 
       ((address1_ IS NOT NULL) AND (det_address1_ IS NULL))) AND (det_addr_exist_ = 'TRUE') THEN
      Client_SYS.Add_Info(lu_name_, 'DIFADDR: Address 1 is different from Detail Address.');
   END IF;
   info$_ := Client_SYS.Get_All_Info;
END Check_Detail_Address___;


FUNCTION Get_Detailed_Address1___ (
   street_        IN VARCHAR2,
   house_no_      IN VARCHAR2,
   flat_no_       IN VARCHAR2 ) RETURN VARCHAR2 
IS
   address1_   VARCHAR2(1000);  
BEGIN
   IF (flat_no_ IS NOT NULL) THEN
      address1_ := SUBSTR((street_ || ' ' || house_no_ || ' / ' || flat_no_),0,35);
   ELSE 
      address1_ := SUBSTR((street_ || ' ' || house_no_),0,35);
   END IF;
   RETURN address1_;
END Get_Detailed_Address1___;

