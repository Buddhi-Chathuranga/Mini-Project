-----------------------------------------------------------------------------
--
--  Logical unit: PersDataManProcessPurpose
--  Component:    ENTERP
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  171221  Piwrpl  Created, LCS 139441, GDPR implemented
--  211124  Chgulk  FI21R2-4512  Removed obsolete views. 
-----------------------------------------------------------------------------

layer Core;

-------------------- PUBLIC VIEW DEFINITIONS --------------------------------


-------------------- PRIVATE VIEW DEFINITIONS -------------------------------


VIEW Pers_Data_Man_Proc_Purp_All IS
SELECT purpose_id,
       pers_data_management_id,
       data_subject
FROM pers_data_man_proc_purpose_tab
UNION ALL
SELECT 0 purpose_id, 
       p.pers_data_management_id,
       d.data_subject_id data_subject
FROM   data_subject_tab d, personal_data_management_tab p
WHERE  d.personal_data_management = 'TRUE'
AND    p.data_cleanup = 'TRUE'
AND    NOT EXISTS (SELECT 1
                   FROM pers_data_man_proc_purpose_tab x
                   WHERE x.pers_data_management_id = p.pers_data_management_id
                   AND x.data_subject = d.data_subject_id)
AND    EXISTS (SELECT 1
               FROM  personal_data_man_det_tab pd
               WHERE pd.pers_data_management_id = p.pers_data_management_id
               AND   pd.exclude_from_cleanup = 'FALSE'
               AND   Report_Sys.Parse_Parameter(d.data_subject_id, Personal_Data_Man_Util_api.Get_Related_Data_Subjects(pd.data_subject, 'REVERSE')) = 'TRUE');

VIEW PERS_DATA_PROC_PURPOSE_ASSIST IS
   Prompt = 'Pers Data Process Purpose Emp Assistant'
   Purpose_id.Datatype = 'NUMBER'
   Purpose_id.Flags = 'PMI--'
   Purpose_id.Prompt = 'Purpose ID'
   Key_Ref.Datatype = 'STRING(100)'
   Key_Ref.Flags = 'PMI--'
   Key_Ref.Prompt = 'Key Ref'
   Data_Subject.Datatype = 'STRING(200)'
   Data_Subject.Flags = 'KMI--'
   Data_Subject.Prompt = 'Data Subject'
   Operation_Date.Datatype = 'DATE/DATETIME'
   Operation_Date.Flags = 'KMI--'
   Operation_Date.Prompt = 'Operation Date'
   Action.Datatype = 'STRING(200)'
   Action.Flags = 'KMI--'
   Action.Prompt = 'Action'
   Valid.Datatype = 'STRING(5)'
   Valid.Flafs = 'AMIU-'
   Valid.Prompt = 'Selected'
   Effective_on.Datatype= 'DATE/DATETIME'
   Effective_on.Flags = 'A-IU-'
   Effective_On.Prompt = 'Effective On'
   Effective_Until.Datatype= 'DATE/DATETIME'
   Effective_Until.Flags = 'A-IU-'
   Effective_Until.Prompt = 'Effective Until'
   Purpose_Name.Datatype = 'STRING(100)'
   Purpose_Name.Flags = 'A----'
   Purpose_Name.Prompt = 'Purpose Name'
   Description.Datatype = 'STRING(2000)'
   Description.Flags = 'A----'
   Description.Prompt = 'Description'
   Purpose_Personal_Data_List.Datatype = 'STRING(2000)'
   Purpose_Personal_Data_List.Flags = 'A----'
   Purpose_Personal_Data_List.Prompt = 'Purpose Personal Data List'
SELECT purpose_id                     purpose_id,
       t2.key_ref                     key_ref,
       t1.data_subject                data_subject_db,
       Data_Subject_API.Decode(t1.data_subject) data_subject,
       t2.operation_date              operation_date,
       t2.action                      action,
       t3.valid                       valid,
       t3.effective_on                effective_on,
       t3.effective_until             effective_until,
       Basic_Data_Translation_API.Get_Basic_Data_Translation('ENTERP', 'PersDataProcessPurpose', purpose_id||'^PURPOSE_NAME') purpose_name,
       Pers_Data_Process_Purpose_API.Get_Description(purpose_id) description,
       Pers_Data_Man_Proc_Purpose_API.Get_Purpose_Personal_Data_List(t1.data_subject, t1.purpose_id) purpose_personal_data_list,
       to_char(t3.rowversion,'YYYYMMDDHH24MISS')     objversion,
       t3.rowid                                      objid
FROM   (SELECT DISTINCT purpose_id, data_subject FROM pers_data_man_proc_purpose_tab)  t1,
       DATA_SUBJECT_CONSENT_OPER_TAB t2,
       DATA_SUBJECT_CONSENT_PURP_TAB t3
WHERE  t2.key_ref = t3.key_ref (+) AND t2.operation_date = t3.operation_date (+) AND t2.action = t3.action (+) AND t1.purpose_id = t3.process_purpose_id (+)
UNION ALL
SELECT DISTINCT t1.purpose_id,
       ''                                     key_ref,
       t1.data_subject                        data_subject_db,
       Data_Subject_API.Decode(t1.data_subject)  data_subject,       
       to_date(null)                          operation_date,
       ''                                     action,
       'FALSE'                                selected,
       to_date(NULL)                          effective_on,
       to_date(NULl)                          effective_until,
       Basic_Data_Translation_API.Get_Basic_Data_Translation('ENTERP', 'PersDataProcessPurpose', purpose_id||'^PURPOSE_NAME') purpose_name,
       Pers_Data_Process_Purpose_API.Get_Description(purpose_id) description,
       Pers_Data_Man_Proc_Purpose_API.Get_Purpose_Personal_Data_List(t1.data_subject, t1.purpose_id) purpose_personal_data_list,
       NULL                                   objversion,
       NULL                                   objid
FROM   pers_data_man_proc_purpose_tab t1
WITH   READ ONLY;
