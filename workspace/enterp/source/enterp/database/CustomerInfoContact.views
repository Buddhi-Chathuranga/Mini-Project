-----------------------------------------------------------------------------
--
--  Logical unit: CustomerInfoContact
--  Component:    ENTERP
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  211222  prKalk  FI21R2-8241, Replaced @DynamicComponentDependency with conditional compilation
--  211126  Chgulk  FI21R2-4383, Added row-level security.
--  211124  Chgulk  FI21R2-4512  Removed obsolete views.
--  210909  SaDeLK  SM21R2-2756, Added rowversion for customer_info_contact_public.
--  210622  MaIklk  CRM21R2-140, Renamed customer related column prompts in to account in Customer_Info_Contact_Crm_Pub.
--  210224  MaIklk  CRMZSPPT-302, Added rowid for customer_info_contact_public.
--  201203  Dwanlk  IP2020R1-256, Added Ind_Crm_Cntct_Role_Lobby, Ind_Crm_Cntct_Campaign_Lobby, Ind_Crm_Cntct_Personal_Lobby, Ind_Crm_Contact_Lobby views which are used in Industries CRM functional lobbies. 
--  200610  kusplk  GESPRING20-4690, Added view PERSONS_PER_CUSTOMER_LOV.
--  200304  Sipelk  NGMWO-7094, Added public view CUSTOMER_INFO_CONTACT_MOBILE.
--  191223  Basblk  Bug 151547, Added new view Contact_Customer_Info.
--  191024  HarWlk  SCXTEND-963, Salesman renamed to Salesperson
--  190903  MaRalk  SCFALL19-69, Removed unused view Customer_Person_Contact.
--  190806  ovjose  FIUXX-23999, Added objversion to the views cust_info_contact_lov2_pub and cust_info_contact_lov_base, to support mobile WO
--  190712  Pavrlk  SCUXXW4-23143, Added role_db,personal_interest_db,campaign_interest_db,department_db,decision_power_type_db to Customer_Info_Contact_Crm_Pub.
--  180720  Hairlk  SCUXX-3990, Modified Cust_Info_Contact_Lov_Base to use UNION ALL instead of UNION.
--  180711  ILSOLK  Bug 142950, Modified Customer_Info_Contact_Lov (get customer name from customer_info_custcategory_pub).
--  180531  AwWelk  SCUXX-2763, Added view Customer_Person_Contact to query all customer contacts and persons.
--  180502  DiKuLk  Bug 140211, Modified Customer_Info_Contact_Crm_Pub to increase the length of Market_Desc to 200 from 35.
--  170707  MaIklk  SCUXX-312, Added some fields to public view.
--  170520  SBalLK  Bug 131756, Added Cust_Info_Contact_Lov_Base view and modified *_LOV views to filter connected customer contact record for the LOV.
--  170306  JanWse  VAULT-2543, Aligned where clause for Customer_Info_Contact_Crm_Pub to the absolute left to avoid a Post_Generation bug in the framework
--  170303  JanWse  VAULT-2543, Annotated views for CRM Access
--  161013  SudJlk  VAULT-1915, Added CRM Access to the necessary views.
--  160414  reanpl  STRLOC-75, Added handling of new attributes address3, address4, address5, address6
--  150914  SudJlk  AFT-2263, Modified Cust_Info_Contact_Lov_Pub to add customer_primary.
--  131009  MaRalk  PBR-1751, Added columns customer_address, role, department, manager, blocked_for_crm_objects_db columns to
--  131009          the view CONTACT_CUSTOMER in order to display in Person-Contact for Customer child table. Added validation to avoid setting
--  131009          same person as the manager.
--  130920  MaRalk  PBR-1749, Added reference CustomerContactRole to role column in Customer_Info_Contact, Customer_Info_Contact_Lov views.
--  140623  MaRalk  PRSC-1291, Modified Customer_Contact_Role_API.Decode usages as Contact_Role_API.Decode_List.
--  140902  MaIklk  PRSC-2371, Removed the contact address and comm method where clauses from Cust_Info_Contact_Lov_Pub view.
--  150307  MaIklk  BLU-378, Added customer id and name as lov values for Cust_Info_Contact_Lov2_Pub.
--  150320  MaRalk  BLU-381, Added columns Guid, Country, Country_Db and Role_Db to the view  Cust_Info_Contact_Lov2_Pub.
--  150519  MaIklk  BLU-666, Added some more columns to customer_info_contact_public.
--  150605  Wahelk  BLU-524, Added public view Customer_Info_Contact_Crm_Pub
--  150619  Wahelk  BLU-842, Create LOV view Cust_Info_Contact_Lov3_Pub
--  150707  MaRalk  BLU-970, Added columns guid, customer_primary, customer_secondary, contact_address, blocked_for_crm_objects 
--  150707          and blocked_for_crm_objects_db to Customer_Info_Contact_Public in order to use in Representative_Cust_Cont_ view in CRM module.
--  150723  Wahelk  BLU-727, Modified Customer_Info_Contact_Crm_Pub to add CRM_TEXT_ID$ column for crm search domain
--  150806  MaIklk  BLU-1135, Removed unnecessary columns from customer_info_contact_public.
--  150814  MaRalk  BLU-1175, Added column www to the view Customer_Info_Contact_Crm_Pub.
-----------------------------------------------------------------------------

layer Core;

-------------------- COMMON COLUMN DEFINITIONS ------------------------------

COLUMN Address_Id IS
   Flags      = 'P-IU-'
   Datatype   = 'STRING(100)'
   Prompt     = 'Address Id';
COLUMN Name IS
   Flags      = 'A---L'
   Datatype   = 'STRING(100)'
   Prompt     = 'Description';
COLUMN Contact_Name IS
   Flags      = 'A---L'
   Datatype   = 'STRING(100)'
   Prompt     = 'Name';
COLUMN Title IS
   Flags      = 'A---L'
   Datatype   = 'STRING(100)'
   Prompt     = 'Title';
COLUMN Phone IS
   Flags      = 'A---L'
   Datatype   = 'STRING(200)'
   Prompt     = 'Phone';
COLUMN Mobile IS
   Flags      = 'A---L'
   Datatype   = 'STRING(200)'
   Prompt     = 'Mobile';
COLUMN Email IS
   Flags      = 'A---L'
   Datatype   = 'STRING(200)'
   Prompt     = 'Email';
COLUMN Fax IS
   Flags      = 'A---L'
   Datatype   = 'STRING(200)'
   Prompt     = 'Fax';
COLUMN Www IS
   Flags      = 'A---L'
   Datatype   = 'STRING(200)'
   Prompt     = 'www';
COLUMN Customer_Name IS
   Flags      = 'A---L'
   Datatype   = 'STRING(100)'
   Prompt     = 'Name';
COLUMN Pager IS
   Flags      = 'A---L'
   Datatype   = 'STRING(200)'
   Prompt     = 'Pager';
COLUMN Intercom IS
   Flags      = 'A---L'
   Datatype   = 'STRING(200)'
   Prompt     = 'Intercom';
   
-------------------- PUBLIC VIEW DEFINITIONS --------------------------------

@DbViewRowLevelSecurity NotRequired
@RmcomAccessCheck CustomerInfoContact(guid)
VIEW Customer_Info_Contact_Public IS
   Prompt = 'Customer Info Contact'
SELECT customer_id                                                               customer_id,
       person_id                                                                 person_id,	
       guid                                                                      guid,
       Contact_Role_API.Decode_List(role)                                        role,
       role                                                                      role_db,
       customer_primary                                                          customer_primary,
       customer_secondary                                                        customer_secondary,      
       contact_address                                                           contact_address, 
       customer_address                                                          customer_address,
       Fnd_Boolean_API.Decode(blocked_for_crm_objects)                           blocked_for_crm_objects,
       blocked_for_crm_objects                                                   blocked_for_crm_objects_db,    
       note_text                                                                 note_text,
       rowkey                                                                    objkey,
       TO_CHAR(rowversion,'YYYYMMDDHH24MISS')                                    objversion,
       ROWID                                                                     objid
FROM   customer_info_contact_tab;

@DbViewRowLevelSecurity NotRequired
VIEW Cust_Info_Contact_Lov_Base IS
SELECT a.customer_id,
       b.name,
       a.customer_address,
       a.person_id,
       a.role,
       a.contact_address,
       a.customer_primary                        customer_primary,
       a.manager,
       a.department,
       a.blocked_for_crm_objects,
       a.guid,
       a.rowkey,
       a.rowid                                   objid,
       TO_CHAR(a.rowversion,'YYYYMMDDHH24MISS')  objversion
FROM   customer_info_contact_tab a, person_info_tab b
WHERE  a.person_id = b.person_id
AND    connect_all_cust_addr = 'FALSE'
UNION ALL
SELECT a.customer_id,
       b.name,
       c.address_id                              customer_address,
       a.person_id,
       a.role,
       a.contact_address,
       a.customer_primary                        customer_primary,
       a.manager,
       a.department,
       a.blocked_for_crm_objects,
       a.guid,
       a.rowkey,
       a.rowid                                   objid,
       TO_CHAR(a.rowversion,'YYYYMMDDHH24MISS')  objversion
FROM   customer_info_contact_tab a, person_info_tab b, customer_info_address_tab c
WHERE  a.person_id = b.person_id
AND    a.customer_id = c.customer_id
AND    connect_all_cust_addr = 'TRUE';

@DbViewRowLevelSecurity NotRequired
@RmcomAccessCheck CustomerInfoContact(a.guid)
VIEW Cust_Info_Contact_Lov_Guid IS
SELECT DISTINCT a.customer_id,
       a.customer_address       address_id,
       a.person_id,
       b.name,
       a.customer_primary       customer_primary
FROM   cust_info_contact_lov_base a, person_info_tab b
WHERE  a.person_id = b.person_id;

@DbViewRowLevelSecurity NotRequired
VIEW Cust_Info_Contact_Lov_Pub IS
   Prompt = 'Customers Info Contact'
   Person_Id.Flags = 'K---L'
   Person_Id.Datatype = 'STRING(20)'
   Person_Id.Prompt = 'Customer Contact'
   Customer_id.Flags = 'PMI--'
   Customer_id.Datatype = 'STRING(20)/UPPERCASE'
   Customer_id.Prompt = 'Customer ID'  
   Name.Flags = 'A---L'
   Name.Datatype = 'STRING(100)'
   Name.Prompt = 'Description' 
SELECT customer_id,
       address_id,
       person_id,
       name,
       customer_primary
FROM   cust_info_contact_lov_guid
UNION
SELECT DISTINCT d.identity, 
       d.address_id,
       d.name                         person_id,
       d.description                  name,
       NULL                           customer_primary
FROM   comm_method_tab d
WHERE  party_type = 'CUSTOMER'
AND    (TRUNC(SYSDATE) BETWEEN NVL(d.valid_from, Database_SYS.Get_First_Calendar_Date())
       AND NVL(d.valid_to, Database_SYS.Get_Last_Calendar_Date()));

@DbViewRowLevelSecurity NotRequired
@RmcomAccessCheck CustomerInfoContact(cic.guid)
VIEW Cust_Info_Contact_Lov2_Pub IS
   Prompt = 'Customers Info Contact'     
   Person_Id.Flags = 'PMI-L'
   Person_Id.Prompt = 'Customer Contact'
   Guid.Flags = 'A----'
   Country.Flags = 'A----'
   Country.Datatype = 'STRING(200)'
   Country_Db.Flags = 'A----'
   Country_Db.Datatype = 'STRING(2)'
   Role.Flags = 'A---L'
   Role_Db.Flags = 'A----'
   Customer_Address.Flags = 'A---L'
   Contact_Address.Flags = 'A---L'
   Blocked_For_Crm_Objects.Flags = 'A----'
   Blocked_For_Crm_Objects.Prompt = 'Blocked for Use'
   Blocked_For_Crm_Objects_Db.Prompt = 'Blocked for Use' 
   Contact_Customer.Flags = 'A---L'
   Contact_Customer.Datatype = 'STRING(20)'
   Contact_Customer.Prompt = 'Customer ID'
   Name.Flags = 'A---L'
   Name.Prompt = 'Name'
SELECT cic.customer_id                                                         customer_id,
       cic.person_id                                                           person_id, 
       cic.guid                                                                guid,
       Iso_Country_API.Decode(ci.country)                                      country,
       country                                                                 country_db,       
       Person_Info_API.Get_Name(person_id)                                     contact_name,
       Person_Info_API.Get_Title(person_id)                                    title,
       Contact_Role_API.Decode_List(cic.role)                                  role, 
       cic.role                                                                role_db,
       cic.customer_address                                                    customer_address,
       cic.contact_address                                                     contact_address,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('PHONE'), 1, cic.contact_address, SYSDATE)    phone,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('MOBILE'), 1, cic.contact_address, SYSDATE)   mobile,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('E_MAIL'), 1, cic.contact_address)            email,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('FAX'), 1, cic.contact_address, SYSDATE)      fax, 
       Fnd_Boolean_API.Decode(blocked_for_crm_objects)                         blocked_for_crm_objects,
       blocked_for_crm_objects                                                 blocked_for_crm_objects_db,
       cic.customer_id                                                         contact_customer,
       ci.name                                                                 name,
       cic.rowkey                                                              objkey,
       cic.objid                                                               objid,
       cic.objversion                                                          objversion
FROM   customer_info_tab ci, cust_info_contact_lov_base cic
WHERE  ci.customer_id = cic.customer_id;

-- NOTE: due to the annotation for RmcomAccessCheck we can not use DUAL in the ELSE part. Instead we have to use customer_info_contact_tab.
@DbViewRowLevelSecurity NotRequired
@RmcomAccessCheck CustomerInfoContact(cic.guid)
VIEW Customer_Info_Contact_Crm_Pub IS
   Prompt = 'Customer Info Contact Crm Public'
   Person_Name.Flags = 'A----'
   Person_Name.Datatype = 'STRING(100)'
   Person_Name.Prompt = 'Name'
   Main_Representative_Name.Flags = 'A----'
   Main_Representative_Name.Datatype = 'STRING(100)'
   Main_Representative_Name.Prompt = 'Contact Main Representative Name'
   Cust_Address1.Flags = 'A----'
   Cust_Address1.Datatype = 'STRING(35)'
   Cust_Address1.Prompt = 'Account Address1'
   Cust_Address2.Flags = 'A----'
   Cust_Address2.Datatype = 'STRING(35)'
   Cust_Address2.Prompt = 'Account Address2'
   Cust_Address3.Flags = 'A----'
   Cust_Address3.Datatype = 'STRING(100)'
   Cust_Address3.Prompt = 'Account Address3'
   Cust_Address4.Flags = 'A----'
   Cust_Address4.Datatype = 'STRING(100)'
   Cust_Address4.Prompt = 'Account Address4'
   Cust_Address5.Flags = 'A----'
   Cust_Address5.Datatype = 'STRING(100)'
   Cust_Address5.Prompt = 'Account Address5'
   Cust_Address6.Flags = 'A----'
   Cust_Address6.Datatype = 'STRING(100)'
   Cust_Address6.Prompt = 'Account Address6'
   Cust_Zip_Code.Flags = 'A----'
   Cust_Zip_Code.Datatype = 'STRING(35)'
   Cust_Zip_Code.Prompt = 'Account Address Zip Code'
   Cust_City.Flags = 'A----'
   Cust_City.Datatype = 'STRING(35)'
   Cust_City.Prompt = 'Account Address City'
   Cust_State.Flags = 'A----'
   Cust_State.Datatype = 'STRING(35)'
   Cust_State.Prompt = 'Account Address State'
   Cust_County.Flags = 'A----'
   Cust_County.Datatype = 'STRING(35)'
   Cust_County.Prompt = 'Account Address County'
   Cust_Country_Code.Flags = 'A----'
   Cust_Country_Code.Datatype = 'STRING(2)'
   Cust_Country_Code.Prompt = 'Account Address Country Code'
   Cust_Add_Country.Flags = 'A----'
   Cust_Add_Country.Datatype = 'STRING(4000)'
   Cust_Add_Country.Prompt = 'Account Address Country'
   Manager_Name.Flags = 'A----'
   Manager_Name.Datatype = 'STRING(100)'
   Manager_Name.Prompt = 'Manager Name'
   Default_Language.Flags = 'A----'
   Default_Language.Datatype = 'STRING(4000)'
   Default_Language.Prompt = 'Person Default Language'
   Country.Flags = 'A----'
   Country.Datatype = 'STRING(4000)'
   Country.Prompt = 'Person Country'
   Title.Flags = 'A----'
   Title.Datatype = 'STRING(100)'
   Title.Prompt = 'Person Title'
   Initials.Flags = 'A----'
   Initials.Datatype = 'STRING(100)'
   Initials.Prompt = 'Person Initials'
   First_Name.Flags = 'A----'
   First_Name.Datatype = 'STRING(100)'
   First_Name.Prompt = 'Person First Name'
   Middle_Name.Flags = 'A----'
   Middle_Name.Datatype = 'STRING(100)'
   Middle_Name.Prompt = 'Person Middle Name'
   Last_Name.Flags = 'A----'
   Last_Name.Datatype = 'STRING(100)'
   Last_Name.Prompt = 'Person Last Name'
   Association_No.Flags = 'A----'
   Association_No.Datatype = 'STRING(50)'
   Association_No.Prompt = 'Account Association No'
   Cust_Default_Language.Flags = 'A----'
   Cust_Default_Language.Datatype = 'STRING(4000)'
   Cust_Default_Language.Prompt = 'Account Default Language'
   Cust_Country.Flags = 'A----'
   Cust_Country.Datatype = 'STRING(4000)'
   Cust_Country.Prompt = 'Account Country'
   Creation_Date.Flags = 'A----'
   Creation_Date.Datatype = 'DATE/DATE'
   Creation_Date.Prompt = 'Account Creation Date'
   Corporate_Form.Flags = 'A----'
   Corporate_Form.Datatype = 'STRING(8)'
   Corporate_Form.Prompt = 'Account Form of Business'
   Corporate_Form_Desc.Flags = 'A----'
   Corporate_Form_Desc.Datatype = 'STRING(200)'
   Corporate_Form_Desc.Prompt = 'Account Form of Business Description'
   Key_Account_Db.Flags = 'A----'
   Key_Account_Db.Datatype = 'STRING(20)'
   Key_Account_Db.Prompt = 'Account Key Account'
   Potential_Id.Flags = 'A----'
   Potential_Id.Datatype = 'STRING(4000)'
   Potential_Id.Prompt = 'Account Potential'
   Loyalty_Id.Flags = 'A----'
   Loyalty_Id.Datatype = 'STRING(4000)'
   Loyalty_Id.Prompt = 'Account Loyalty'
   Source_Id.Flags = 'A----'
   Source_Id.Datatype = 'STRING(4000)'
   Source_Id.Prompt = 'Account Loyalty'
   Employee_Count_Id.Flags = 'A----'
   Employee_Count_Id.Datatype = 'STRING(4000)'
   Employee_Count_Id.Prompt = 'Account Employee Count'
   Year_End_Period.Flags = 'A----'
   Year_End_Period.Datatype = 'STRING(20)'
   Year_End_Period.Prompt = 'Account Year-End Period'
   Turnover.Flags = 'A----'
   Turnover.Datatype = 'NUMBER'
   Turnover.Prompt = 'Account TurnOver'
   Currency_Code.Flags = 'A----'
   Currency_Code.Datatype = 'STRING(3)'
   Currency_Code.Prompt = 'Account TurnOver Currency'
   Crm_Main_Representative_Id.Flags = 'A----'
   Crm_Main_Representative_Id.Datatype = 'STRING(20)'
   Crm_Main_Representative_Id.Prompt = 'Account Main Representative'
   Crm_Main_Representative_Name.Flags = 'A----'
   Crm_Main_Representative_Name.Datatype = 'STRING(100)'
   Crm_Main_Representative_Name.Prompt = 'Account Main Representative Name'
   Competitor_id.Flags = 'A----'
   Competitor_id.Datatype = 'STRING(10)'
   Competitor_id.Prompt = 'Account Competitor'
   Competitor_Name.Flags = 'A----'
   Competitor_Name.Datatype = 'STRING(50)'
   Competitor_Name.Prompt = 'Account Competitor Name'
   Hierarchy_Id.Flags = 'A----'
   Hierarchy_Id.Datatype = 'STRING(10)'
   Hierarchy_Id.Prompt = 'Customer Hierarchy ID'
   Hierarchy_Desc.Flags = 'A----'
   Hierarchy_Desc.Datatype = 'STRING(35)'
   Hierarchy_Desc.Prompt = 'Customer Hierarchy Description'
   Customer_Level.Flags = 'A----'
   Customer_Level.Datatype = 'STRING(2000)'
   Customer_Level.Prompt = 'Customer Hierarchy Level No'
   Customer_Level_Name.Flags = 'A----'
   Customer_Level_Name.Datatype = 'STRING(200)'
   Customer_Level_Name.Prompt = 'Customer Hierarchy Level Name'
   Customer_No_Pay.Flags = 'A----'
   Customer_No_Pay.Datatype = 'STRING(20)'
   Customer_No_Pay.Prompt = 'Invoice Customer'
   Customer_No_Pay_Name.Flags = 'A----'
   Customer_No_Pay_Name.Datatype = 'STRING(100)'
   Customer_No_Pay_Name.Prompt = 'Invoice Customer Name'
   Market_Code.Flags = 'A----'
   Market_Code.Datatype = 'STRING(10)'
   Market_Code.Prompt = 'Account Market'
   Market_Desc.Flags = 'A----'
   Market_Desc.Datatype = 'STRING(200)'
   Market_Desc.Prompt = 'Account Market Description'
   Cust_Curr_Code.Flags = 'A----'
   Cust_Curr_Code.Datatype = 'STRING(3)'
   Cust_Curr_Code.Prompt = 'Account Currency'
   Cust_Salesman.Flags = 'A----'
   Cust_Salesman.Datatype = 'STRING(20)'
   Cust_Salesman.Prompt = 'Account Salesperson'
   Cust_Salesman_Name.Flags = 'A----'
   Cust_Salesman_Name.Datatype = 'STRING(100)'
   Cust_Salesman_Name.Prompt = 'Account Salesperson Name'
   Customer_Category.Flags = 'A----'
   Customer_Category.Datatype = 'STRING(4000)'
   Customer_Category.Prompt = 'Account Category'  
   Customer_Category_Db.Flags = 'A----'
   Customer_Category_Db.Datatype = 'STRING(4000)'
   Customer_Category_Db.Prompt = 'Account Category DB'    
   Customer_Id.Prompt = 'Account'    
   Customer_Address.Prompt = 'Account Address'
   Customer_Name.Prompt = 'Account Name'
   Manager_Cust_Address.Prompt = 'Manager Account Address'
   Source_Id.Prompt = 'Account Source'
SELECT 
$IF Component_Crm_SYS.INSTALLED $THEN
       cic.person_id                                                                 person_id,
       pi.name                                                                       person_name,
       Contact_Role_API.Decode_List(cic.role)                                        role,
       cic.role                                                                      role_db,
       cic.customer_id                                                               customer_id,
       ci.name                                                                       customer_name,
       Customer_Category_API.Decode(ci.customer_category)                            customer_category,
       ci.customer_category                                                          customer_category_db,
       cic.main_representative_id                                                    main_representative_id,
       Person_Info_API.Get_Name(cic.main_representative_id)                          main_representative_name,
       cic.note_text                                                                 note_text,
       cic.blocked_for_crm_objects                                                   blocked_for_crm_objects_db,
       Customer_Info_Contact_API.Decode_Personal_Interest(cic.personal_interest)     personal_interest,
       cic.personal_interest                                                         personal_interest_db,
       Customer_Info_Contact_API.Decode_Campaign_Interest(cic.campaign_interest)     campaign_interest,
       cic.campaign_interest                                                         campaign_interest_db,
       Customer_Info_Contact_API.Decode_Decision_Power_Type(cic.decision_power_type) decision_power_type,
       cic.decision_power_type                                                       decision_power_type_db,
       Customer_Info_Contact_API.Decode_Department(cic.department)                   department,
       cic.department                                                                department_db,
       cic.customer_address                                                          customer_address,
       cia.address1                                                                  cust_address1,
       cia.address2                                                                  cust_address2,
       cia.address3                                                                  cust_address3,
       cia.address4                                                                  cust_address4,
       cia.address5                                                                  cust_address5,
       cia.address6                                                                  cust_address6,
       cia.zip_code                                                                  cust_zip_code,
       cia.city                                                                      cust_city,
       cia.state                                                                     cust_state,
       cia.county                                                                    cust_county,
       cia.country                                                                   cust_country_code,
       Iso_Country_API.Decode(cia.country)                                           cust_add_country,
       cic.contact_address                                                           contact_address,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('PHONE'), 1, cic.contact_address)             phone,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('MOBILE'), 1, cic.contact_address)            mobile,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('E_MAIL'), 1, cic.contact_address)            email,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('FAX'), 1, cic.contact_address)               fax,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('PAGER'), 1, cic.contact_address)             pager,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('INTERCOM'), 1, cic.contact_address)          intercom,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('WWW'), 1, cic.contact_address)               www,
       cic.address_primary                                                           address_primary,
       cic.address_secondary                                                         address_secondary,
       cic.customer_primary                                                          customer_primary,
       cic.customer_secondary                                                        customer_secondary,
       cic.manager                                                                   manager,
       Person_Info_API.Get_Name(cic.manager)                                         manager_name,
       cic.manager_guid                                                              manager_guid,
       cic.manager_cust_address                                                      manager_cust_address,
       Iso_Language_API.Decode(pi.default_language)                                  default_language,
       Iso_Country_API.Decode(pi.country)                                            country,
       pi.title                                                                      title,
       pi.initials                                                                   initials,
       pi.first_name                                                                 first_name,
       pi.middle_name                                                                middle_name,
       pi.last_name                                                                  last_name,
       cic.guid                                                                      guid,
       ci.association_no                                                             association_no,
       Iso_Language_API.Decode(ci.default_language)                                  cust_default_language,
       Iso_Country_API.Decode(ci.country)                                            cust_country,
       ci.creation_date                                                              creation_date,
       ci.corporate_form                                                             corporate_form,
       Corporate_Form_API.Get_Corporate_Form_Desc(ci.country, ci.corporate_form)     corporate_form_desc,
       cci.key_account_db                                                            key_account_db,
       Customer_Potential_API.Decode(cci.potential_id)                               potential_id,
       Customer_Loyalty_API.Decode(cci.loyalty_id)                                   loyalty_id,
       Customer_Source_API.Decode(cci.source_id)                                     source_id,
       Customer_Employee_Count_API.Decode(cci.employee_count_id)                     employee_count_id,
       cci.year_end_period                                                           year_end_period,
       cci.turnover                                                                  turnover,
       cci.currency_code                                                             currency_code,
       cci.main_representative_id                                                    crm_main_representative_id,
       Person_Info_API.Get_Name(cci.main_representative_id)                          crm_main_representative_name,
       cci.competitor_id                                                             competitor_id,
       Competitor_API.Get_Competitor_Name(cci.competitor_id)                         competitor_name,
       Cust_Hierarchy_Struct_API.Get_Hierarchy_Id(cic.customer_id)                   hierarchy_id,
       Customer_Hierarchy_API.Get_Description(Cust_Hierarchy_Struct_API.Get_Hierarchy_Id(cic.customer_id))                          hierarchy_desc,
       Cust_Hierarchy_Struct_API.Get_Level_No(Cust_Hierarchy_Struct_API.Get_Hierarchy_Id(cic.customer_id), cic.customer_id)         customer_level,
       Cust_Hierarchy_Struct_API.Get_Cust_Level_Name(Cust_Hierarchy_Struct_API.Get_Hierarchy_Id(cic.customer_id),cic.customer_id)   customer_level_name,
       co.customer_no_pay                                                            customer_no_pay,
       Cust_Ord_Customer_API.Get_Name(co.customer_no_pay )                           customer_no_pay_name,
       co.market_code                                                                market_code,
       Sales_Market_API.Get_Description(co.market_code)                              market_desc,
       co.currency_code                                                              cust_curr_code,
       co.salesman_code                                                              cust_salesman,
       Person_Info_API.Get_Name(co.salesman_code)                                    cust_salesman_name,
       cic.rowkey                                                                    objkey,
       cic.ROWID                                                                     objid,
       TO_CHAR(cic.rowversion,'YYYYMMDDHH24MISS')                                    objversion
FROM   customer_info_contact_tab cic, customer_info_tab ci, person_info_tab pi, crm_customer_info_pub cci, customer_info_address_tab cia, cust_ord_customer_pub co
WHERE  cic.customer_id = ci.customer_id
AND    cic.person_id = pi.person_id
AND    cic.customer_id = cia.customer_id(+)
AND    cic.customer_address =  cia.address_id(+)
AND    cic.customer_id = cci.customer_id(+)
AND    ci.customer_id = cci.customer_id(+)
AND    cic.customer_id =  co.customer_no(+)
$ELSE
       NULL                                                                         person_id,
       NULL                                                                         person_name,
       NULL                                                                         role,
       NULL                                                                         role_db,
       NULL                                                                         customer_id,
       NULL                                                                         customer_name,
       NULL                                                                         customer_category,
       NULL                                                                         customer_category_db,
       NULL                                                                         main_representative_id,
       NULL                                                                         main_representative_name,
       NULL                                                                         note_text,
       NULL                                                                         blocked_for_crm_objects_db,
       NULL                                                                         personal_interest,
       NULL                                                                         personal_interest_db,
       NULL                                                                         campaign_interest,
       NULL                                                                         campaign_interest_db,
       NULL                                                                         decision_power_type,
       NULL                                                                         decision_power_type_db,
       NULL                                                                         department,
       NULL                                                                         department_db,
       NULL                                                                         customer_address,
       NULL                                                                         cust_address1,
       NULL                                                                         cust_address2,
       NULL                                                                         cust_address3,
       NULL                                                                         cust_address4,
       NULL                                                                         cust_address5,
       NULL                                                                         cust_address6,
       NULL                                                                         cust_zip_code,
       NULL                                                                         cust_city,
       NULL                                                                         cust_state,
       NULL                                                                         cust_county,
       NULL                                                                         cust_country_code,
       NULL                                                                         cust_add_country,
       NULL                                                                         contact_address,
       NULL                                                                         phone,
       NULL                                                                         mobile,
       NULL                                                                         email,
       NULL                                                                         fax,
       NULL                                                                         pager,
       NULL                                                                         intercom,
       NULL                                                                         www,
       NULL                                                                         address_primary,
       NULL                                                                         address_secondary,
       NULL                                                                         customer_primary,
       NULL                                                                         customer_secondary,
       NULL                                                                         manager,
       NULL                                                                         manager_name,
       NULL                                                                         manager_guid,
       NULL                                                                         manager_cust_address,
       NULL                                                                         default_language,
       NULL                                                                         country,
       NULL                                                                         title,
       NULL                                                                         initials,
       NULL                                                                         first_name,
       NULL                                                                         middle_name,
       NULL                                                                         last_name,
       NULL                                                                         guid,
       NULL                                                                         association_no,
       NULL                                                                         cust_default_language,
       NULL                                                                         cust_country,
       NULL                                                                         creation_date,
       NULL                                                                         corporate_form,
       NULL                                                                         corporate_form_desc,
       NULL                                                                         key_account_db,
       NULL                                                                         potential_id,
       NULL                                                                         loyalty_id,
       NULL                                                                         source_id,
       NULL                                                                         employee_count_id,
       NULL                                                                         year_end_period,
       NULL                                                                         turnover,
       NULL                                                                         currency_code,
       NULL                                                                         crm_main_representative_id,
       NULL                                                                         crm_main_representative_name,
       NULL                                                                         competitor_id,
       NULL                                                                         competitor_name,
       NULL                                                                         hierarchy_id,
       NULL                                                                         hierarchy_desc,
       NULL                                                                         customer_level,
       NULL                                                                         customer_level_name,
       NULL                                                                         customer_no_pay,
       NULL                                                                         customer_no_pay_name,
       NULL                                                                         market_code,
       NULL                                                                         market_desc,
       NULL                                                                         cust_curr_code,
       NULL                                                                         cust_salesman,
       NULL                                                                         cust_salesman_name,
       NULL                                                                         objkey,
       NULL                                                                         objid,
       NULL                                                                         objversion
FROM   customer_info_contact_tab cic
WHERE  1=2  
$END 
;  

@DbViewRowLevelSecurity NotRequired
@RmcomAccessCheck CustomerInfoContact(guid)
VIEW Contact_Customer_Info IS
   Prompt = 'Customers for Contact'
   Customer_Address.Flags = 'A---L'
   Contact_Address.Flags = 'A---L'
   Customer_Id.Flags = 'A---L'
   Person_Id.Flags = 'A---L'
   Role.Flags = 'A---L'
   Department.Flags = 'A----'
   Manager.Flags = 'A----'
   Blocked_For_Crm_Objects_Db.Flags = 'A----'
   Connect_All_Cust_Addr_DB.Flags = 'A----'
   Blocked_For_Crm_Objects_Db.Prompt = 'Blocked for Use in CRM'
   Connect_All_Cust_Addr_DB.Prompt = 'Connect All Customer Addresses' 
   Contact_Name.Prompt = 'Contact Name'
   Customer_Name.Prompt = 'Name'
SELECT DISTINCT customer_id                                       customer_id,
       Customer_Info_Api.Get_Name(customer_id)                    customer_name,
       person_id                                                  person_id,
       Person_Info_Api.Get_Name(person_id)                        contact_name,
       Person_Info_API.Get_Title(person_id)                       title,
       customer_address                                           customer_address,
       contact_address                                            contact_address,
       Contact_Role_API.Decode_List(role)                         role,
       role                                                       role_db,
       Customer_Info_Contact_API.Decode_Department(department)    department,
       department                                                 department_db,
       manager                                                    manager,
       Comm_Method_API.Get_Value('PERSON', person_id, Comm_Method_Code_API.Decode('PHONE'), 1, contact_address)    phone,
       Comm_Method_API.Get_Value('PERSON', person_id, Comm_Method_Code_API.Decode('MOBILE'), 1, contact_address)   mobile,
       Comm_Method_API.Get_Value('PERSON', person_id, Comm_Method_Code_API.Decode('E_MAIL'), 1, contact_address)   email,
       Comm_Method_API.Get_Value('PERSON', person_id, Comm_Method_Code_API.Decode('FAX'), 1, contact_address)      fax,
       Comm_Method_API.Get_Value('PERSON', person_id, Comm_Method_Code_API.Decode('PAGER'), 1, contact_address)    pager,
       Comm_Method_API.Get_Value('PERSON', person_id, Comm_Method_Code_API.Decode('INTERCOM'), 1, contact_address) intercom,
       blocked_for_crm_objects                                    blocked_for_crm_objects_db,
       connect_all_cust_addr                                      connect_all_cust_addr_db,
       ROWID                                                      objid
FROM   customer_info_contact_tab;

-------------------- PRIVATE VIEW DEFINITIONS -------------------------------

@DbViewRowLevelSecurity NotRequired
@RmcomAccessCheck CustomerInfoContact(guid)
VIEW Contact_Customer IS
   Prompt = 'Customers for Contact'
   Customer_Address.Flags = 'A----'
   Role.Flags = 'A----'
   Department.Flags = 'A----'
   Manager.Flags = 'A----'
   Blocked_For_Crm_Objects_Db.Prompt = 'Blocked for Use in CRM'       
SELECT DISTINCT customer_id                                    customer_id,
       person_id                                               person_id,
       customer_address                                        customer_address,
       Contact_Role_API.Decode_List(role)                      role,
       role                                                    role_db,
       Customer_Info_Contact_API.Decode_Department(department) department,
       department                                              department_db,
       manager                                                 manager,
       blocked_for_crm_objects                                 blocked_for_crm_objects_db,
       objid                                                   objid
FROM   cust_info_contact_lov_base;

@DbViewRowLevelSecurity NotRequired
@RmcomAccessCheck CustomerInfoContact(cic.guid)
VIEW Customer_Info_Contact_Lov IS
   Prompt = 'Customers Info Contact'
   Customer_Id.Flags = 'A---L'
   Person_Id.Flags = 'A---L'
   Role.Flags = 'A---L'
   Customer_Address.Flags = 'A---L'
   Contact_Address.Flags = 'A---L'
SELECT DISTINCT cic.customer_id                                             customer_id,
       ci.name                                                              customer_name,
       cic.person_id                                                        person_id,
       Person_Info_API.Get_Name(cic.person_id)                              contact_name,
       Person_Info_API.Get_Title(cic.person_id)                             title,
       cic.role                                                             role_db,
       Contact_Role_API.Decode_List(cic.role)                               role,
       cic.customer_address                                                 customer_address,
       cic.contact_address                                                  contact_address,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('PHONE'), 1, cic.contact_address)    phone,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('MOBILE'), 1, cic.contact_address)   mobile,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('E_MAIL'), 1, cic.contact_address)   email,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('FAX'), 1, cic.contact_address)      fax,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('PAGER'), 1, cic.contact_address)    pager,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('INTERCOM'), 1, cic.contact_address) intercom,
       ci.objkey                                                            objkey
FROM   customer_info_custcategory_pub ci, cust_info_contact_lov_base cic
WHERE  ci.customer_id = cic.customer_id;

@DbViewRowLevelSecurity NotRequired
@RmcomAccessCheck CustomerInfoContact(cic.guid)
VIEW Customer_Info_Contact_Mobile IS
SELECT DISTINCT cic.customer_id                                                                                                     customer_id,
       cic.person_id                                                                                                                person_id,
       cic.guid                                                                                                                     guid,
       Person_Info_API.Get_Name(person_id)                                                                                          contact_name,
       Person_Info_API.Get_Title(person_id)                                                                                         title,
       Contact_Role_API.Decode_List(cic.role)                                                                                       role,
       cic.contact_address                                                                                                          contact_address,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('PHONE'), 1, cic.contact_address, SYSDATE)    phone,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('MOBILE'), 1, cic.contact_address, SYSDATE)   mobile,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('E_MAIL'), 1, cic.contact_address)            email,
       Comm_Method_API.Get_Value('PERSON', cic.person_id, Comm_Method_Code_API.Decode('FAX'), 1, cic.contact_address, SYSDATE)      fax,
       cic.customer_id                                                                                                              contact_customer,
       ci.name                                                                                                                      name,
       cic.objversion                                                                                                               objversion,
       cic.objid                                                                                                                    objkey,
       cic.objid                                                                                                                    objid
FROM   customer_info_tab ci, cust_info_contact_lov_base cic
WHERE  ci.customer_id = cic.customer_id
$IF Component_Mwo_SYS.Installed $THEN
AND    ci.customer_id IN (SELECT customer_no AS customer_no 
                          FROM   jt_task 
                          WHERE  task_seq IN (SELECT task_seq FROM mobile_work_order_uiv)
                          UNION
                          SELECT identity AS customer_no 
                          FROM   equipment_object_party_uiv
                          WHERE  party_type_db = 'CUSTOMER')
$ELSE
   $IF Component_Equip_SYS.Installed $THEN
   AND ci.customer_id IN (SELECT identity AS customer_no 
                          FROM   equipment_object_party_uiv
                          WHERE  party_type_db = 'CUSTOMER')
   $END
$END
;

-- gelr:it_xml_invoice, begin
@DbViewRowLevelSecurity NotRequired
VIEW Persons_Per_Customer_Lov IS
   Prompt = 'Persons Per Customer'
   Customer_Id.Prompt = 'Customer Id'
   Customer_Id.Datatype = 'STRING(20)'
   Person_Id.Prompt = 'Person Id'
   Person_Id.Datatype = 'STRING(20)'
   Full_Name.Prompt = 'Name'
   Full_Name.Datatype = 'STRING(100)'
   First_Name.Prompt = 'First Name'
   First_Name.Datatype = 'STRING(100)'
   First_Name.Flags = 'A-IUL'
   Middle_Name.Prompt = 'Middle Name'
   Middle_Name.Datatype = 'STRING(100)'
   Middle_Name.Flags = 'A-IUL'
   Prefix.Prompt = 'Prefix'
   Prefix.Datatype = 'STRING(100)'
   Prefix.Flags = 'A-IUL'
   Last_Name.Prompt = 'Last Name'
   Last_Name.Datatype = 'STRING(100)'
   Last_Name.Flags = 'A-IUL'
   Alternative_Name.Prompt = 'Alternative Name'
   Alternative_Name.Datatype = 'STRING(100)'
   Alternative_Name.Flags = 'A-IUL'
   Birth_Name.Prompt = 'Birth Name'
   Birth_Name.Datatype = 'STRING(100)'
   Birth_Name.Flags = 'A-IUL'
   Initials.Prompt = 'Initials'
   Initials.Datatype = 'STRING(100)'
   Initials.Flags = 'A-IUL'
   Title.Prompt = 'Title'
   Title.Datatype = 'STRING(100)'
   Title.Flags = 'A-IUL'
   User_Id.Prompt = 'User Id'
   User_Id.Datatype = 'STRING(30)'
   User_Id.Flags = 'A-IUL'
   Inactive.Prompt = 'Inactive'
   Inactive.Datatype = 'STRING(5)'
   Inactive.Flags = 'A-IUL'
   Contact_Customers.Prompt = 'Contact Customers'
   Contact_Customers.Datatype = 'STRING(4000)'
   Contact_Customers.Flags = 'A---L'
   Contact_Suppliers.Prompt = 'Contact Suppliers'
   Contact_Suppliers.Datatype = 'STRING(4000)'
   Contact_Suppliers.Flags = 'A---L'
   Customer_Contact.Prompt = 'Customer Contact'
   Customer_Contact.Datatype = 'STRING(200)'
   Customer_Contact.Flags = 'AMIUL'
   Blocked_For_Use.Prompt = 'Blocked for Use as a Customer Contact'
   Blocked_For_Use.Datatype = 'STRING(200)'
   Blocked_For_Use.Flags = 'AMIUL'
   Supplier_Contact.Prompt = 'Supplier Contact'
   Supplier_Contact.Datatype = 'STRING(200)'
   Supplier_Contact.Flags = 'AMIUL'
   Blocked_For_Use_Supplier.Prompt = 'Blocked for Use as a Supplier Contact'
   Blocked_For_Use_Supplier.Datatype = 'STRING(200)'
   Blocked_For_Use_Supplier.Flags = 'AMIUL'
SELECT cic.customer_id                                      customer_id,
       pi.person_id                                         person_id,
       pi.name                                              full_name,
       pi.first_name                                        first_name,
       pi.middle_name                                       middle_name,
       pi.prefix                                            prefix,
       pi.last_name                                         last_name,
       pi.alternative_name                                  alternative_name,
       pi.birth_name                                        birth_name,
       pi.initials                                          initials,
       pi.title                                             title,
       pi.user_id                                           user_id,
       NVL(pi.inactive,'FALSE')                             inactive,
       Contact_Util_API.Get_Contact_Customers(pi.person_id) contact_customers,
       Contact_Util_API.Get_Contact_Suppliers(pi.person_id) contact_suppliers,
       Fnd_Boolean_API.Decode(pi.customer_contact)          customer_contact,
       Fnd_Boolean_API.Decode(pi.blocked_for_use)           blocked_for_use,
       Fnd_Boolean_API.Decode(pi.supplier_contact)          supplier_contact,
       Fnd_Boolean_API.Decode(pi.blocked_for_use_supplier)  blocked_for_use_supplier,
       pi.rowkey                                            objkey,
       TO_CHAR(pi.rowversion,'YYYYMMDDHH24MISS')            objversion,
       pi.rowid                                             objid
FROM   customer_info_contact_tab cic, person_info_tab pi
WHERE  pi.person_id = cic.person_id;
-- gelr:it_xml_invoice, end

-------------------- LOBBY VIEW DEFINITIONS ---------------------------------

@RmcomAccessCheck CustomerInfoContact(cic.guid)
VIEW Ind_Crm_Cntct_Role_Lobby IS
   Prompt = 'Customer Contacts Role Crm'
SELECT cic.person_id                 person_id,
       cic.guid                      guid,
       DECODE(column_value,'N/A',
              TRIM(column_value), 
              Contact_Role_API.Decode(TRIM(column_value)))  role
FROM   customer_info_contact_tab cic,
XMLTABLE(('"' || REPLACE(NVL(role,'N/A'), CHR(94), '","')  || '"'));

@RmcomAccessCheck CustomerInfoContact(cic.guid)
VIEW Ind_Crm_Cntct_Campaign_Lobby IS
   Prompt = 'Customer Contacts Campaign Crm'
SELECT cic.person_id                  person_id,
       cic.guid                       guid,
       DECODE(column_value,'N/A',
              TRIM(column_value), 
              Customer_Info_Contact_API.Decode_Campaign_Interest(TRIM(column_value)))  campaign_interest
FROM   customer_info_contact_tab cic,
XMLTABLE(('"' || REPLACE(NVL(campaign_interest,'N/A'), CHR(94), '","')  || '"'));

@RmcomAccessCheck CustomerInfoContact(cic.guid)
VIEW Ind_Crm_Cntct_Personal_Lobby IS
   Prompt = 'Customer Contacts Campaign Crm'
SELECT cic.person_id                   person_id,
       cic.guid                        guid,
       DECODE(column_value,'N/A',
              TRIM(column_value), 
              Customer_Info_Contact_API.Decode_Personal_Interest(TRIM(column_value)))  personal_interests
FROM   customer_info_contact_tab cic,
XMLTABLE(('"' || REPLACE(NVL(personal_interest,'N/A'), CHR(94), '","')  || '"'));

VIEW Ind_Crm_Contact_Lobby IS
   Prompt = 'Crm Contact Lobby'
   Persion.Flags = 'A----'
   Persion.DataType = 'STRING(150)'
SELECT 
$IF Component_Crm_SYS.INSTALLED $THEN
       person_id                          person_id,
       person_id || '-' || person_name    persion,
       phone                              phone,
       mobile                             mobile,
       email                              email
FROM   customer_info_contact_crm_pub
$ELSE
       NULL                               person_id,
       NULL                               persion,
       NULL                               phone,
       NULL                               mobile,
       NULL                               email
FROM DUAL
$END 
;