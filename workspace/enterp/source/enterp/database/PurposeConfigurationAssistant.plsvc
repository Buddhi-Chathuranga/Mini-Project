-----------------------------------------------------------------------------
--
--  Fragment:     PurposeConfigurationAssistant
--  Component:    ENTERP
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------

layer Core;

@Override
PROCEDURE CRUD_Create___ (
   rec_ IN Purpose_Configuration_Virtual_Rec )
IS
   key_    Purpose_Configuration_Virtual_Key;
BEGIN
   super(rec_);
   key_.objkey := rec_.objkey;
   Add_Personal_Data_Management_Details___(key_, rec_.purpose_id, rec_.data_subject_id);
END CRUD_Create___;


@Override
PROCEDURE CRUD_Update___ (
   old_ IN Personal_Data_Management_Virtual_Rec,
   new_ IN Personal_Data_Management_Virtual_Rec )
IS
BEGIN
   super(old_, new_);
   IF (new_.selected = True) THEN
      Pers_Data_Man_Proc_Purpose_API.New_Data_Proc_Purpose(new_.purpose_id, new_.personal_data_management_id, new_.data_subject);
   ELSIF (new_.selected = False) THEN
      Pers_Data_Man_Proc_Purpose_API.Remove_Data_Proc_Purpose(new_.purpose_id, new_.personal_data_management_id, new_.data_subject);
   END IF;
END CRUD_Update___;


FUNCTION Select_Default_Data_Subject___ RETURN VARCHAR2
IS
   CURSOR get_client_values IS
      SELECT SUBSTR(NVL(Basic_Data_Translation_API.Get_Basic_Data_Translation('ENTERP', 'DataSubject', data_subject_id), data_subject), 1, 50) data_subject
      FROM   data_subject_tab
      WHERE  personal_data_management = 'TRUE'
      AND    data_subject_id NOT IN ('USER','DEPENDENTS','BUSINESS_CONTACTS')
      ORDER BY data_subject_id ASC;
BEGIN
   FOR rec_ IN get_client_values LOOP
      EXIT WHEN get_client_values%NOTFOUND;
      RETURN rec_.data_subject;
   END LOOP;
   RETURN '';
END Select_Default_Data_Subject___;


PROCEDURE Add_Personal_Data_Management_Details___ (
   key_          IN Purpose_Configuration_Virtual_Key,
   purpose_id_   IN NUMBER,
   data_subject_ IN VARCHAR2 )
IS
   detail_key_rec_   Personal_Data_Management_Virtual_Key;
   detail_rec_       Personal_Data_Management_Virtual_Rec;
   CURSOR get_personal_data_management_details(data_subject_ VARCHAR2, purpose_id_ NUMBER) IS
      SELECT pers_data_management_id,
             personal_data,
             Pers_Data_Man_Proc_Purpose_API.Is_Pers_Data_Purpose_Selected(pers_data_management_id, data_subject_, purpose_id_) AS selected
      FROM   personal_data_management
      WHERE  (Personal_Data_Man_Det_API.Data_Subject_Used_On_Details(pers_data_management_id, data_subject_) = 'TRUE')
      ORDER BY pers_data_management_id;
BEGIN
   FOR rec_ IN Get_Detail_Data_Process_Purpose___(key_) LOOP
      EXIT WHEN Get_Detail_Data_Process_Purpose___%NOTFOUND;
      detail_key_rec_.objkey := rec_.objkey;
      CRUD_Delete___(Get_Record___(detail_key_rec_));
   END LOOP;
   FOR rec_ IN get_personal_data_management_details(data_subject_, purpose_id_) LOOP
      detail_rec_.personal_data_management_id := rec_.pers_data_management_id;
      detail_rec_.personal_data := rec_.personal_data;
      detail_rec_.purpose_id := purpose_id_;
      detail_rec_.data_subject := data_subject_;
      IF (rec_.selected = 'TRUE') THEN
         detail_rec_.selected := True;
      ELSE
         detail_rec_.selected := False;
      END IF;
      New_Detail___(key_, detail_rec_);
   END LOOP;
END Add_Personal_Data_Management_Details___;
